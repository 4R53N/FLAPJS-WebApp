// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App/> rendering renders correctly 1`] = `
<div
  className="container"
>
  <SessionProvider
    onDidMount={[Function]}
    onLoad={[Function]}
    onUnload={[Function]}
    onWillUnmount={[Function]}
    reducer={[Function]}
    renderChildren={[Function]}
    state={Object {}}
  >
    <AppServiceProviders
      appProps={
        Object {
          "changeModule": [Function],
          "module": null,
          "renderModule": [Function],
        }
      }
    >
      <DeprecatedServiceProviders
        app={
          App {
            "context": Object {},
            "moduleSessionHandler": ModuleSessionHandler {
              "changeModuleCallback": [Function],
              "module": null,
              "onDidMount": [Function],
              "onLoad": [Function],
              "onUnload": [Function],
              "onWillUnmount": [Function],
              "reducer": [Function],
            },
            "props": Object {
              "changeModule": [Function],
              "module": null,
              "renderModule": [Function],
            },
            "refs": Object {},
            "setState": [Function],
            "state": null,
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_didScheduleRenderPhaseUpdate": false,
                "_dispatcher": Object {
                  "readContext": [Function],
                  "useCallback": [Function],
                  "useContext": [Function],
                  "useDebugValue": [Function],
                  "useDeferredValue": [Function],
                  "useEffect": [Function],
                  "useImperativeHandle": [Function],
                  "useLayoutEffect": [Function],
                  "useMemo": [Function],
                  "useReducer": [Function],
                  "useRef": [Function],
                  "useResponder": [Function],
                  "useState": [Function],
                  "useTransition": [Function],
                },
                "_element": <App
                  changeModule={[Function]}
                  module={null}
                  renderModule={[Function]}
                />,
                "_firstWorkInProgressHook": null,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_isReRender": false,
                "_newState": null,
                "_numberOfReRenders": 0,
                "_renderPhaseUpdates": null,
                "_rendered": <div
                  className="container"
                >
                  <SessionProvider
                    onDidMount={[Function]}
                    onLoad={[Function]}
                    onUnload={[Function]}
                    onWillUnmount={[Function]}
                    reducer={[Function]}
                    renderChildren={[Function]}
                    state={Object {}}
                  >
                    <AppServiceProviders
                      appProps={
                        Object {
                          "changeModule": [Function],
                          "module": null,
                          "renderModule": [Function],
                        }
                      }
                    >
                      <DeprecatedServiceProviders
                        app={[Circular]}
                      >
                        <AppBar>
                          <SessionStateConsumer>
                            [Function]
                          </SessionStateConsumer>
                        </AppBar>
                        <AppWorkspace
                          renderDrawer={[Function]}
                          renderPlayground={[Function]}
                          renderViewport={[Function]}
                        />
                      </DeprecatedServiceProviders>
                    </AppServiceProviders>
                  </SessionProvider>
                </div>,
                "_rendering": false,
                "_updater": [Circular],
                "_workInProgressHook": null,
              },
            },
          }
        }
      >
        <AppBar>
          <SessionStateConsumer>
            <Component />
          </SessionStateConsumer>
        </AppBar>
        <AppWorkspace
          renderDrawer={[Function]}
          renderPlayground={[Function]}
          renderViewport={[Function]}
        />
      </DeprecatedServiceProviders>
    </AppServiceProviders>
  </SessionProvider>
</div>
`;
