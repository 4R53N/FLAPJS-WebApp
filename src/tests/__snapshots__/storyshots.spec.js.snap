// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots App playground 1`] = `
<App>
  <div
    className="container"
  >
    <LocalizationProvider
      localeCode="en"
    >
      <nav
        className="appbar"
      >
        <h2>
          Flap.js
        </h2>
        <p>
          <LocaleString
            entity="hi"
            params={Array []}
          >
            hi
          </LocaleString>
        </p>
        <button
          onClick={[Function]}
        >
          OPEN
        </button>
      </nav>
      <div
        className="appcontent"
      >
        <WorkspaceLayout
          renderBackground={[Function]}
          renderForeground={[Function]}
        >
          <section
            className="container "
          >
            <div
              className="foreground"
            >
              <SideBarLayout
                renderSideBar={[Function]}
                side="right"
              >
                <div
                  className="container "
                  style={
                    Object {
                      "flexDirection": "row-reverse",
                    }
                  }
                >
                  <div
                    className="sidebar right"
                  >
                    <div
                      className="sidetab  horizontal"
                    >
                      <button
                        className="tab"
                        onClick={[Function]}
                      >
                        <ForwardRef
                          className="icon"
                          color="#FFFFFF"
                        >
                          <span
                            className="icon"
                            color="#FFFFFF"
                          />
                        </ForwardRef>
                      </button>
                      <button
                        className="tab"
                        onClick={[Function]}
                      >
                        <ForwardRef
                          className="icon"
                          color="#FFFFFF"
                        >
                          <span
                            className="icon"
                            color="#FFFFFF"
                          />
                        </ForwardRef>
                      </button>
                      <button
                        className="tab"
                        onClick={[Function]}
                      >
                        <ForwardRef
                          className="icon"
                          color="#FFFFFF"
                        >
                          <span
                            className="icon"
                            color="#FFFFFF"
                          />
                        </ForwardRef>
                      </button>
                      <div
                        className="divider"
                      />
                      <button
                        className="tab"
                        onClick={[Function]}
                      >
                        <ForwardRef
                          className="icon"
                          color="#FFFFFF"
                        >
                          <span
                            className="icon"
                            color="#FFFFFF"
                          />
                        </ForwardRef>
                      </button>
                    </div>
                  </div>
                  <div
                    className="viewport"
                  >
                    <DrawerLayout
                      open={false}
                      renderDrawer={[Function]}
                      side="right"
                      snapBehavior="range"
                      snapPoints={
                        Array [
                          30,
                          50,
                          100,
                        ]
                      }
                    >
                      <div
                        className="container"
                        style={
                          Object {
                            "flexDirection": "row-reverse",
                          }
                        }
                      >
                        <div
                          className="drawer  right"
                          style={
                            Object {
                              "height": "100%",
                              "width": "30%",
                            }
                          }
                        >
                          <div
                            className="handle"
                            onMouseDown={[Function]}
                            role="presentation"
                          />
                          <div
                            className="content"
                          >
                            <div
                              style={
                                Object {
                                  "color": "white",
                                  "height": "100%",
                                  "width": "100%",
                                }
                              }
                            >
                              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas in sem magna. Aliquam ultrices convallis cursus. In hac habitasse platea dictumst. Quisque eu tellus magna. Curabitur aliquam luctus ex. Maecenas purus arcu, tincidunt non sapien quis, finibus vestibulum ante. Curabitur vulputate et ligula in congue. Phasellus ac imperdiet libero, sagittis interdum elit. Suspendisse potenti.
                            </div>
                          </div>
                        </div>
                        <div
                          className="viewport"
                        >
                          <div
                            style={
                              Object {
                                "color": "white",
                                "height": "100%",
                                "width": "100%",
                              }
                            }
                          >
                            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas in sem magna. Aliquam ultrices convallis cursus. In hac habitasse platea dictumst. Quisque eu tellus magna. Curabitur aliquam luctus ex. Maecenas purus arcu, tincidunt non sapien quis, finibus vestibulum ante. Curabitur vulputate et ligula in congue. Phasellus ac imperdiet libero, sagittis interdum elit. Suspendisse potenti.
                          </div>
                        </div>
                      </div>
                    </DrawerLayout>
                  </div>
                </div>
              </SideBarLayout>
            </div>
            <div
              className="background"
            >
              <div
                style={
                  Object {
                    "background": "dodgerblue",
                    "height": "100%",
                    "width": "100%",
                  }
                }
              />
            </div>
          </section>
        </WorkspaceLayout>
      </div>
    </LocalizationProvider>
  </div>
</App>
`;

exports[`Storyshots ComputedStyleInput playground 1`] = `
<div>
  <div
    id="#source"
    style={
      Object {
        "background": "var(--some-background)",
        "color": "var(--some-color)",
      }
    }
  >
    Hello.
  </div>
  <StyleInput
    disabled={false}
    name="--some-color"
    source={
      Object {
        "current": <div
          id="#source"
        >
          Hello.
        </div>,
      }
    }
    type="color"
  >
    <input
      disabled={false}
      onChange={[Function]}
      type="color"
      value="#FFFFFF"
    />
  </StyleInput>
  <ComputedStyleInput
    compute={
      Object {
        "current": StyleInput {
          "_reactInternalFiber": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 211,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 213,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "input",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "className": undefined,
                "disabled": false,
                "onChange": [Function],
                "type": "color",
                "value": "#FFFFFF",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "className": undefined,
                "disabled": false,
                "onChange": [Function],
                "type": "color",
                "value": "#FFFFFF",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <input
                type="color"
                value="#FFFFFF"
              />,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "input",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 129,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 1,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "disabled": false,
              "name": "--some-color",
              "source": Object {
                "current": <div
                  id="#source"
                >
                  Hello.
                </div>,
              },
              "type": "color",
            },
            "memoizedState": Object {
              "value": "#FFFFFF",
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 214,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 212,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 2,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "className": undefined,
                  "compute": [Circular],
                  "computeFunction": "copy",
                  "disabled": false,
                  "name": "--some-background",
                  "onChange": undefined,
                  "source": Object {
                    "current": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                  },
                  "type": "color",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 208,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 209,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 210,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 128,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": [Circular],
                      "pendingProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "ref": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": [Circular],
                      "stateNode": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 210,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 128,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": [Circular],
                      "pendingProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "ref": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": [Circular],
                      "stateNode": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div>
                      <div
                        id="#source"
                      >
                        Hello.
                      </div>
                      <input
                        type="color"
                        value="#FFFFFF"
                      />
                      <input
                        type="color"
                        value="#FFFFFF"
                      />
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 1,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 210,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 128,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": [Circular],
                    "pendingProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "ref": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 209,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <div>
                        <div
                          id="#source"
                        >
                          Hello.
                        </div>
                        <input
                          type="color"
                          value="#FFFFFF"
                        />
                        <input
                          type="color"
                          value="#FFFFFF"
                        />
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": [Circular],
                    "stateNode": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": "div",
                    "context": null,
                    "props": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "wrappingComponentProps": null,
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "wrappingComponentProps": null,
                  },
                  "mode": 0,
                  "nextEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 206,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 206,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 1073741823,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <div
                              id="#source"
                            >
                              Hello.
                            </div>
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 25,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component="div"
                              context={null}
                              props={
                                Object {
                                  "children": Array [
                                    <div
                                      id="#source"
                                      style={
                                        Object {
                                          "background": "var(--some-background)",
                                          "color": "var(--some-color)",
                                        }
                                      }
                                    >
                                      Hello.
                                    </div>,
                                    <StyleInput
                                      disabled={false}
                                      name="--some-color"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                    <ComputedStyleInput
                                      compute={[Circular]}
                                      computeFunction="copy"
                                      disabled={false}
                                      name="--some-background"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                  ],
                                }
                              }
                              wrappingComponentProps={null}
                            />,
                          },
                          "tag": 0,
                        },
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component="div"
                              context={null}
                              props={
                                Object {
                                  "children": Array [
                                    <div
                                      id="#source"
                                      style={
                                        Object {
                                          "background": "var(--some-background)",
                                          "color": "var(--some-color)",
                                        }
                                      }
                                    >
                                      Hello.
                                    </div>,
                                    <StyleInput
                                      disabled={false}
                                      name="--some-color"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                    <ComputedStyleInput
                                      compute={[Circular]}
                                      computeFunction="copy"
                                      disabled={false}
                                      name="--some-background"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                  ],
                                }
                              }
                              wrappingComponentProps={null}
                            />,
                          },
                          "tag": 0,
                        },
                      },
                    },
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 32,
                    "elementType": null,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 210,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 128,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": [Circular],
                      "pendingProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "ref": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 209,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <div>
                          <div
                            id="#source"
                          >
                            Hello.
                          </div>
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": [Circular],
                      "stateNode": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component="div"
                        context={null}
                        props={
                          Object {
                            "children": Array [
                              <div
                                id="#source"
                                style={
                                  Object {
                                    "background": "var(--some-background)",
                                    "color": "var(--some-color)",
                                  }
                                }
                              >
                                Hello.
                              </div>,
                              <StyleInput
                                disabled={false}
                                name="--some-color"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                              <ComputedStyleInput
                                compute={[Circular]}
                                computeFunction="copy"
                                disabled={false}
                                name="--some-background"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            id="#source"
                          >
                            Hello.
                          </div>
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 25,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component="div"
                          context={null}
                          props={
                            Object {
                              "children": Array [
                                <div
                                  id="#source"
                                  style={
                                    Object {
                                      "background": "var(--some-background)",
                                      "color": "var(--some-color)",
                                    }
                                  }
                                >
                                  Hello.
                                </div>,
                                <StyleInput
                                  disabled={false}
                                  name="--some-color"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                                <ComputedStyleInput
                                  compute={[Circular]}
                                  computeFunction="copy"
                                  disabled={false}
                                  name="--some-background"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                              ],
                            }
                          }
                          wrappingComponentProps={null}
                        />,
                      },
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": null,
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": null,
                    },
                  },
                  "pendingProps": Object {
                    "Component": "div",
                    "context": null,
                    "props": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "wrappingComponentProps": null,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 206,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 206,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 1073741823,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <div
                              id="#source"
                            >
                              Hello.
                            </div>
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 25,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component="div"
                              context={null}
                              props={
                                Object {
                                  "children": Array [
                                    <div
                                      id="#source"
                                      style={
                                        Object {
                                          "background": "var(--some-background)",
                                          "color": "var(--some-color)",
                                        }
                                      }
                                    >
                                      Hello.
                                    </div>,
                                    <StyleInput
                                      disabled={false}
                                      name="--some-color"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                    <ComputedStyleInput
                                      compute={[Circular]}
                                      computeFunction="copy"
                                      disabled={false}
                                      name="--some-background"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                  ],
                                }
                              }
                              wrappingComponentProps={null}
                            />,
                          },
                          "tag": 0,
                        },
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component="div"
                              context={null}
                              props={
                                Object {
                                  "children": Array [
                                    <div
                                      id="#source"
                                      style={
                                        Object {
                                          "background": "var(--some-background)",
                                          "color": "var(--some-color)",
                                        }
                                      }
                                    >
                                      Hello.
                                    </div>,
                                    <StyleInput
                                      disabled={false}
                                      name="--some-color"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                    <ComputedStyleInput
                                      compute={[Circular]}
                                      computeFunction="copy"
                                      disabled={false}
                                      name="--some-background"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                  ],
                                }
                              }
                              wrappingComponentProps={null}
                            />,
                          },
                          "tag": 0,
                        },
                      },
                    },
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 32,
                    "elementType": null,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 210,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 128,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": [Circular],
                      "pendingProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "ref": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 209,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <div>
                          <div
                            id="#source"
                          >
                            Hello.
                          </div>
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": [Circular],
                      "stateNode": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component="div"
                        context={null}
                        props={
                          Object {
                            "children": Array [
                              <div
                                id="#source"
                                style={
                                  Object {
                                    "background": "var(--some-background)",
                                    "color": "var(--some-color)",
                                  }
                                }
                              >
                                Hello.
                              </div>,
                              <StyleInput
                                disabled={false}
                                name="--some-color"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                              <ComputedStyleInput
                                compute={[Circular]}
                                computeFunction="copy"
                                disabled={false}
                                name="--some-background"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            id="#source"
                          >
                            Hello.
                          </div>
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 25,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component="div"
                          context={null}
                          props={
                            Object {
                              "children": Array [
                                <div
                                  id="#source"
                                  style={
                                    Object {
                                      "background": "var(--some-background)",
                                      "color": "var(--some-color)",
                                    }
                                  }
                                >
                                  Hello.
                                </div>,
                                <StyleInput
                                  disabled={false}
                                  name="--some-color"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                                <ComputedStyleInput
                                  compute={[Circular]}
                                  computeFunction="copy"
                                  disabled={false}
                                  name="--some-background"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                              ],
                            }
                          }
                          wrappingComponentProps={null}
                        />,
                      },
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": null,
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": null,
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": "div",
                      "context": null,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "refs": Object {},
                    "rootFinderInstance": null,
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "pendingProps": Object {
                  "className": undefined,
                  "compute": [Circular],
                  "computeFunction": "copy",
                  "disabled": false,
                  "name": "--some-background",
                  "onChange": undefined,
                  "source": Object {
                    "current": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                  },
                  "type": "color",
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 209,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 208,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 210,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 128,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": [Circular],
                      "pendingProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "ref": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": [Circular],
                      "stateNode": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": "div",
                      "context": null,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "mode": 0,
                    "nextEffect": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 206,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 206,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <div
                                id="#source"
                              >
                                Hello.
                              </div>
                              <input
                                type="color"
                                value="#FFFFFF"
                              />
                              <input
                                type="color"
                                value="#FFFFFF"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 25,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component="div"
                                context={null}
                                props={
                                  Object {
                                    "children": Array [
                                      <div
                                        id="#source"
                                        style={
                                          Object {
                                            "background": "var(--some-background)",
                                            "color": "var(--some-color)",
                                          }
                                        }
                                      >
                                        Hello.
                                      </div>,
                                      <StyleInput
                                        disabled={false}
                                        name="--some-color"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                      <ComputedStyleInput
                                        compute={[Circular]}
                                        computeFunction="copy"
                                        disabled={false}
                                        name="--some-background"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                    ],
                                  }
                                }
                                wrappingComponentProps={null}
                              />,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component="div"
                                context={null}
                                props={
                                  Object {
                                    "children": Array [
                                      <div
                                        id="#source"
                                        style={
                                          Object {
                                            "background": "var(--some-background)",
                                            "color": "var(--some-color)",
                                          }
                                        }
                                      >
                                        Hello.
                                      </div>,
                                      <StyleInput
                                        disabled={false}
                                        name="--some-color"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                      <ComputedStyleInput
                                        compute={[Circular]}
                                        computeFunction="copy"
                                        disabled={false}
                                        name="--some-background"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                    ],
                                  }
                                }
                                wrappingComponentProps={null}
                              />,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 32,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 210,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 128,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Hello.",
                          "id": "#source",
                          "style": Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": [Circular],
                        "pendingProps": Object {
                          "children": "Hello.",
                          "id": "#source",
                          "style": Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          },
                        },
                        "ref": Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        },
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": [Circular],
                        "stateNode": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component="div"
                          context={null}
                          props={
                            Object {
                              "children": Array [
                                <div
                                  id="#source"
                                  style={
                                    Object {
                                      "background": "var(--some-background)",
                                      "color": "var(--some-color)",
                                    }
                                  }
                                >
                                  Hello.
                                </div>,
                                <StyleInput
                                  disabled={false}
                                  name="--some-color"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                                <ComputedStyleInput
                                  compute={[Circular]}
                                  computeFunction="copy"
                                  disabled={false}
                                  name="--some-background"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                              ],
                            }
                          }
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <div
                              id="#source"
                            >
                              Hello.
                            </div>
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 25,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component="div"
                            context={null}
                            props={
                              Object {
                                "children": Array [
                                  <div
                                    id="#source"
                                    style={
                                      Object {
                                        "background": "var(--some-background)",
                                        "color": "var(--some-color)",
                                      }
                                    }
                                  >
                                    Hello.
                                  </div>,
                                  <StyleInput
                                    disabled={false}
                                    name="--some-color"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                  <ComputedStyleInput
                                    compute={[Circular]}
                                    computeFunction="copy"
                                    disabled={false}
                                    name="--some-background"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                ],
                              }
                            }
                            wrappingComponentProps={null}
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "pendingProps": Object {
                      "Component": "div",
                      "context": null,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 206,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 206,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <div
                                id="#source"
                              >
                                Hello.
                              </div>
                              <input
                                type="color"
                                value="#FFFFFF"
                              />
                              <input
                                type="color"
                                value="#FFFFFF"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 25,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component="div"
                                context={null}
                                props={
                                  Object {
                                    "children": Array [
                                      <div
                                        id="#source"
                                        style={
                                          Object {
                                            "background": "var(--some-background)",
                                            "color": "var(--some-color)",
                                          }
                                        }
                                      >
                                        Hello.
                                      </div>,
                                      <StyleInput
                                        disabled={false}
                                        name="--some-color"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                      <ComputedStyleInput
                                        compute={[Circular]}
                                        computeFunction="copy"
                                        disabled={false}
                                        name="--some-background"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                    ],
                                  }
                                }
                                wrappingComponentProps={null}
                              />,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component="div"
                                context={null}
                                props={
                                  Object {
                                    "children": Array [
                                      <div
                                        id="#source"
                                        style={
                                          Object {
                                            "background": "var(--some-background)",
                                            "color": "var(--some-color)",
                                          }
                                        }
                                      >
                                        Hello.
                                      </div>,
                                      <StyleInput
                                        disabled={false}
                                        name="--some-color"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                      <ComputedStyleInput
                                        compute={[Circular]}
                                        computeFunction="copy"
                                        disabled={false}
                                        name="--some-background"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                    ],
                                  }
                                }
                                wrappingComponentProps={null}
                              />,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 32,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 210,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 128,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Hello.",
                          "id": "#source",
                          "style": Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": [Circular],
                        "pendingProps": Object {
                          "children": "Hello.",
                          "id": "#source",
                          "style": Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          },
                        },
                        "ref": Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        },
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": [Circular],
                        "stateNode": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component="div"
                          context={null}
                          props={
                            Object {
                              "children": Array [
                                <div
                                  id="#source"
                                  style={
                                    Object {
                                      "background": "var(--some-background)",
                                      "color": "var(--some-color)",
                                    }
                                  }
                                >
                                  Hello.
                                </div>,
                                <StyleInput
                                  disabled={false}
                                  name="--some-color"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                                <ComputedStyleInput
                                  compute={[Circular]}
                                  computeFunction="copy"
                                  disabled={false}
                                  name="--some-background"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                              ],
                            }
                          }
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <div
                              id="#source"
                            >
                              Hello.
                            </div>
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 25,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component="div"
                            context={null}
                            props={
                              Object {
                                "children": Array [
                                  <div
                                    id="#source"
                                    style={
                                      Object {
                                        "background": "var(--some-background)",
                                        "color": "var(--some-color)",
                                      }
                                    }
                                  >
                                    Hello.
                                  </div>,
                                  <StyleInput
                                    disabled={false}
                                    name="--some-color"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                  <ComputedStyleInput
                                    compute={[Circular]}
                                    computeFunction="copy"
                                    disabled={false}
                                    name="--some-background"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                ],
                              }
                            }
                            wrappingComponentProps={null}
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": "div",
                        "context": null,
                        "props": Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        },
                        "wrappingComponentProps": null,
                      },
                      "refs": Object {},
                      "rootFinderInstance": null,
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        },
                        "wrappingComponentProps": null,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 210,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 128,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": [Circular],
                    "pendingProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "ref": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": [Circular],
                    "stateNode": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 210,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 128,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": [Circular],
                    "pendingProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "ref": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": [Circular],
                    "stateNode": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": Array [
                      <div
                        id="#source"
                        style={
                          Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          }
                        }
                      >
                        Hello.
                      </div>,
                      <StyleInput
                        disabled={false}
                        name="--some-color"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                      <ComputedStyleInput
                        compute={[Circular]}
                        computeFunction="copy"
                        disabled={false}
                        name="--some-background"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                    ],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <div
                        id="#source"
                        style={
                          Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          }
                        }
                      >
                        Hello.
                      </div>,
                      <StyleInput
                        disabled={false}
                        name="--some-color"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                      <ComputedStyleInput
                        compute={[Circular]}
                        computeFunction="copy"
                        disabled={false}
                        name="--some-background"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                    ],
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 208,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 210,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 128,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": [Circular],
                      "pendingProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "ref": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": [Circular],
                      "stateNode": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": "div",
                      "context": null,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "mode": 0,
                    "nextEffect": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 206,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 206,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <div
                                id="#source"
                              >
                                Hello.
                              </div>
                              <input
                                type="color"
                                value="#FFFFFF"
                              />
                              <input
                                type="color"
                                value="#FFFFFF"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 25,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component="div"
                                context={null}
                                props={
                                  Object {
                                    "children": Array [
                                      <div
                                        id="#source"
                                        style={
                                          Object {
                                            "background": "var(--some-background)",
                                            "color": "var(--some-color)",
                                          }
                                        }
                                      >
                                        Hello.
                                      </div>,
                                      <StyleInput
                                        disabled={false}
                                        name="--some-color"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                      <ComputedStyleInput
                                        compute={[Circular]}
                                        computeFunction="copy"
                                        disabled={false}
                                        name="--some-background"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                    ],
                                  }
                                }
                                wrappingComponentProps={null}
                              />,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component="div"
                                context={null}
                                props={
                                  Object {
                                    "children": Array [
                                      <div
                                        id="#source"
                                        style={
                                          Object {
                                            "background": "var(--some-background)",
                                            "color": "var(--some-color)",
                                          }
                                        }
                                      >
                                        Hello.
                                      </div>,
                                      <StyleInput
                                        disabled={false}
                                        name="--some-color"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                      <ComputedStyleInput
                                        compute={[Circular]}
                                        computeFunction="copy"
                                        disabled={false}
                                        name="--some-background"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                    ],
                                  }
                                }
                                wrappingComponentProps={null}
                              />,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 32,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 210,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 128,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Hello.",
                          "id": "#source",
                          "style": Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": [Circular],
                        "pendingProps": Object {
                          "children": "Hello.",
                          "id": "#source",
                          "style": Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          },
                        },
                        "ref": Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        },
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": [Circular],
                        "stateNode": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component="div"
                          context={null}
                          props={
                            Object {
                              "children": Array [
                                <div
                                  id="#source"
                                  style={
                                    Object {
                                      "background": "var(--some-background)",
                                      "color": "var(--some-color)",
                                    }
                                  }
                                >
                                  Hello.
                                </div>,
                                <StyleInput
                                  disabled={false}
                                  name="--some-color"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                                <ComputedStyleInput
                                  compute={[Circular]}
                                  computeFunction="copy"
                                  disabled={false}
                                  name="--some-background"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                              ],
                            }
                          }
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <div
                              id="#source"
                            >
                              Hello.
                            </div>
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 25,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component="div"
                            context={null}
                            props={
                              Object {
                                "children": Array [
                                  <div
                                    id="#source"
                                    style={
                                      Object {
                                        "background": "var(--some-background)",
                                        "color": "var(--some-color)",
                                      }
                                    }
                                  >
                                    Hello.
                                  </div>,
                                  <StyleInput
                                    disabled={false}
                                    name="--some-color"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                  <ComputedStyleInput
                                    compute={[Circular]}
                                    computeFunction="copy"
                                    disabled={false}
                                    name="--some-background"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                ],
                              }
                            }
                            wrappingComponentProps={null}
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "pendingProps": Object {
                      "Component": "div",
                      "context": null,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 206,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 206,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <div
                                id="#source"
                              >
                                Hello.
                              </div>
                              <input
                                type="color"
                                value="#FFFFFF"
                              />
                              <input
                                type="color"
                                value="#FFFFFF"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 25,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component="div"
                                context={null}
                                props={
                                  Object {
                                    "children": Array [
                                      <div
                                        id="#source"
                                        style={
                                          Object {
                                            "background": "var(--some-background)",
                                            "color": "var(--some-color)",
                                          }
                                        }
                                      >
                                        Hello.
                                      </div>,
                                      <StyleInput
                                        disabled={false}
                                        name="--some-color"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                      <ComputedStyleInput
                                        compute={[Circular]}
                                        computeFunction="copy"
                                        disabled={false}
                                        name="--some-background"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                    ],
                                  }
                                }
                                wrappingComponentProps={null}
                              />,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component="div"
                                context={null}
                                props={
                                  Object {
                                    "children": Array [
                                      <div
                                        id="#source"
                                        style={
                                          Object {
                                            "background": "var(--some-background)",
                                            "color": "var(--some-color)",
                                          }
                                        }
                                      >
                                        Hello.
                                      </div>,
                                      <StyleInput
                                        disabled={false}
                                        name="--some-color"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                      <ComputedStyleInput
                                        compute={[Circular]}
                                        computeFunction="copy"
                                        disabled={false}
                                        name="--some-background"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                    ],
                                  }
                                }
                                wrappingComponentProps={null}
                              />,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 32,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 210,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 128,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Hello.",
                          "id": "#source",
                          "style": Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": [Circular],
                        "pendingProps": Object {
                          "children": "Hello.",
                          "id": "#source",
                          "style": Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          },
                        },
                        "ref": Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        },
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": [Circular],
                        "stateNode": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component="div"
                          context={null}
                          props={
                            Object {
                              "children": Array [
                                <div
                                  id="#source"
                                  style={
                                    Object {
                                      "background": "var(--some-background)",
                                      "color": "var(--some-color)",
                                    }
                                  }
                                >
                                  Hello.
                                </div>,
                                <StyleInput
                                  disabled={false}
                                  name="--some-color"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                                <ComputedStyleInput
                                  compute={[Circular]}
                                  computeFunction="copy"
                                  disabled={false}
                                  name="--some-background"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                              ],
                            }
                          }
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <div
                              id="#source"
                            >
                              Hello.
                            </div>
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 25,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component="div"
                            context={null}
                            props={
                              Object {
                                "children": Array [
                                  <div
                                    id="#source"
                                    style={
                                      Object {
                                        "background": "var(--some-background)",
                                        "color": "var(--some-color)",
                                      }
                                    }
                                  >
                                    Hello.
                                  </div>,
                                  <StyleInput
                                    disabled={false}
                                    name="--some-color"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                  <ComputedStyleInput
                                    compute={[Circular]}
                                    computeFunction="copy"
                                    disabled={false}
                                    name="--some-background"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                ],
                              }
                            }
                            wrappingComponentProps={null}
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": "div",
                        "context": null,
                        "props": Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        },
                        "wrappingComponentProps": null,
                      },
                      "refs": Object {},
                      "rootFinderInstance": null,
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        },
                        "wrappingComponentProps": null,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div>
                    <div
                      id="#source"
                    >
                      Hello.
                    </div>
                    <input
                      type="color"
                      value="#FFFFFF"
                    />
                    <input
                      type="color"
                      value="#FFFFFF"
                    />
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": ComputedStyleInput {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "onComputeChange": [Function],
                  "props": Object {
                    "className": undefined,
                    "compute": [Circular],
                    "computeFunction": "copy",
                    "disabled": false,
                    "name": "--some-background",
                    "onChange": undefined,
                    "source": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "type": "color",
                  },
                  "refs": Object {},
                  "self": Object {
                    "current": StyleInput {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "eventListeners": Array [],
                      "onChange": [Function],
                      "props": Object {
                        "className": undefined,
                        "disabled": false,
                        "name": "--some-background",
                        "onChange": undefined,
                        "source": Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        },
                        "type": "color",
                      },
                      "refs": Object {},
                      "state": Object {
                        "value": "#FFFFFF",
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                  },
                  "state": null,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 215,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "input",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "className": undefined,
                  "disabled": false,
                  "onChange": [Function],
                  "type": "color",
                  "value": "#FFFFFF",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "className": undefined,
                  "disabled": false,
                  "onChange": [Function],
                  "type": "color",
                  "value": "#FFFFFF",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <input
                  type="color"
                  value="#FFFFFF"
                />,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "input",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 129,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "className": undefined,
                "disabled": false,
                "name": "--some-background",
                "onChange": undefined,
                "source": Object {
                  "current": <div
                    id="#source"
                  >
                    Hello.
                  </div>,
                },
                "type": "color",
              },
              "memoizedState": Object {
                "value": "#FFFFFF",
              },
              "mode": 0,
              "nextEffect": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 212,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 2,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "className": undefined,
                  "compute": [Circular],
                  "computeFunction": "copy",
                  "disabled": false,
                  "name": "--some-background",
                  "onChange": undefined,
                  "source": Object {
                    "current": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                  },
                  "type": "color",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 208,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 209,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 210,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 128,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": [Circular],
                      "pendingProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "ref": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": [Circular],
                      "stateNode": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 210,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 128,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": [Circular],
                      "pendingProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "ref": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": [Circular],
                      "stateNode": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div>
                      <div
                        id="#source"
                      >
                        Hello.
                      </div>
                      <input
                        type="color"
                        value="#FFFFFF"
                      />
                      <input
                        type="color"
                        value="#FFFFFF"
                      />
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 1,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 210,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 128,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": [Circular],
                    "pendingProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "ref": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 209,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <div>
                        <div
                          id="#source"
                        >
                          Hello.
                        </div>
                        <input
                          type="color"
                          value="#FFFFFF"
                        />
                        <input
                          type="color"
                          value="#FFFFFF"
                        />
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": [Circular],
                    "stateNode": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": "div",
                    "context": null,
                    "props": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "wrappingComponentProps": null,
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "wrappingComponentProps": null,
                  },
                  "mode": 0,
                  "nextEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 206,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 206,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 1073741823,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <div
                              id="#source"
                            >
                              Hello.
                            </div>
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 25,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component="div"
                              context={null}
                              props={
                                Object {
                                  "children": Array [
                                    <div
                                      id="#source"
                                      style={
                                        Object {
                                          "background": "var(--some-background)",
                                          "color": "var(--some-color)",
                                        }
                                      }
                                    >
                                      Hello.
                                    </div>,
                                    <StyleInput
                                      disabled={false}
                                      name="--some-color"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                    <ComputedStyleInput
                                      compute={[Circular]}
                                      computeFunction="copy"
                                      disabled={false}
                                      name="--some-background"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                  ],
                                }
                              }
                              wrappingComponentProps={null}
                            />,
                          },
                          "tag": 0,
                        },
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component="div"
                              context={null}
                              props={
                                Object {
                                  "children": Array [
                                    <div
                                      id="#source"
                                      style={
                                        Object {
                                          "background": "var(--some-background)",
                                          "color": "var(--some-color)",
                                        }
                                      }
                                    >
                                      Hello.
                                    </div>,
                                    <StyleInput
                                      disabled={false}
                                      name="--some-color"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                    <ComputedStyleInput
                                      compute={[Circular]}
                                      computeFunction="copy"
                                      disabled={false}
                                      name="--some-background"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                  ],
                                }
                              }
                              wrappingComponentProps={null}
                            />,
                          },
                          "tag": 0,
                        },
                      },
                    },
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 32,
                    "elementType": null,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 210,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 128,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": [Circular],
                      "pendingProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "ref": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 209,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <div>
                          <div
                            id="#source"
                          >
                            Hello.
                          </div>
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": [Circular],
                      "stateNode": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component="div"
                        context={null}
                        props={
                          Object {
                            "children": Array [
                              <div
                                id="#source"
                                style={
                                  Object {
                                    "background": "var(--some-background)",
                                    "color": "var(--some-color)",
                                  }
                                }
                              >
                                Hello.
                              </div>,
                              <StyleInput
                                disabled={false}
                                name="--some-color"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                              <ComputedStyleInput
                                compute={[Circular]}
                                computeFunction="copy"
                                disabled={false}
                                name="--some-background"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            id="#source"
                          >
                            Hello.
                          </div>
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 25,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component="div"
                          context={null}
                          props={
                            Object {
                              "children": Array [
                                <div
                                  id="#source"
                                  style={
                                    Object {
                                      "background": "var(--some-background)",
                                      "color": "var(--some-color)",
                                    }
                                  }
                                >
                                  Hello.
                                </div>,
                                <StyleInput
                                  disabled={false}
                                  name="--some-color"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                                <ComputedStyleInput
                                  compute={[Circular]}
                                  computeFunction="copy"
                                  disabled={false}
                                  name="--some-background"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                              ],
                            }
                          }
                          wrappingComponentProps={null}
                        />,
                      },
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": null,
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": null,
                    },
                  },
                  "pendingProps": Object {
                    "Component": "div",
                    "context": null,
                    "props": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "wrappingComponentProps": null,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 206,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 206,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 1073741823,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <div
                              id="#source"
                            >
                              Hello.
                            </div>
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 25,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component="div"
                              context={null}
                              props={
                                Object {
                                  "children": Array [
                                    <div
                                      id="#source"
                                      style={
                                        Object {
                                          "background": "var(--some-background)",
                                          "color": "var(--some-color)",
                                        }
                                      }
                                    >
                                      Hello.
                                    </div>,
                                    <StyleInput
                                      disabled={false}
                                      name="--some-color"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                    <ComputedStyleInput
                                      compute={[Circular]}
                                      computeFunction="copy"
                                      disabled={false}
                                      name="--some-background"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                  ],
                                }
                              }
                              wrappingComponentProps={null}
                            />,
                          },
                          "tag": 0,
                        },
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component="div"
                              context={null}
                              props={
                                Object {
                                  "children": Array [
                                    <div
                                      id="#source"
                                      style={
                                        Object {
                                          "background": "var(--some-background)",
                                          "color": "var(--some-color)",
                                        }
                                      }
                                    >
                                      Hello.
                                    </div>,
                                    <StyleInput
                                      disabled={false}
                                      name="--some-color"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                    <ComputedStyleInput
                                      compute={[Circular]}
                                      computeFunction="copy"
                                      disabled={false}
                                      name="--some-background"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                  ],
                                }
                              }
                              wrappingComponentProps={null}
                            />,
                          },
                          "tag": 0,
                        },
                      },
                    },
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 32,
                    "elementType": null,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 210,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 128,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": [Circular],
                      "pendingProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "ref": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 209,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <div>
                          <div
                            id="#source"
                          >
                            Hello.
                          </div>
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": [Circular],
                      "stateNode": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component="div"
                        context={null}
                        props={
                          Object {
                            "children": Array [
                              <div
                                id="#source"
                                style={
                                  Object {
                                    "background": "var(--some-background)",
                                    "color": "var(--some-color)",
                                  }
                                }
                              >
                                Hello.
                              </div>,
                              <StyleInput
                                disabled={false}
                                name="--some-color"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                              <ComputedStyleInput
                                compute={[Circular]}
                                computeFunction="copy"
                                disabled={false}
                                name="--some-background"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            id="#source"
                          >
                            Hello.
                          </div>
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 25,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component="div"
                          context={null}
                          props={
                            Object {
                              "children": Array [
                                <div
                                  id="#source"
                                  style={
                                    Object {
                                      "background": "var(--some-background)",
                                      "color": "var(--some-color)",
                                    }
                                  }
                                >
                                  Hello.
                                </div>,
                                <StyleInput
                                  disabled={false}
                                  name="--some-color"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                                <ComputedStyleInput
                                  compute={[Circular]}
                                  computeFunction="copy"
                                  disabled={false}
                                  name="--some-background"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                              ],
                            }
                          }
                          wrappingComponentProps={null}
                        />,
                      },
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": null,
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": null,
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": "div",
                      "context": null,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "refs": Object {},
                    "rootFinderInstance": null,
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "pendingProps": Object {
                  "className": undefined,
                  "compute": [Circular],
                  "computeFunction": "copy",
                  "disabled": false,
                  "name": "--some-background",
                  "onChange": undefined,
                  "source": Object {
                    "current": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                  },
                  "type": "color",
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 209,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 208,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 210,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 128,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": [Circular],
                      "pendingProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "ref": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": [Circular],
                      "stateNode": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": "div",
                      "context": null,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "mode": 0,
                    "nextEffect": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 206,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 206,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <div
                                id="#source"
                              >
                                Hello.
                              </div>
                              <input
                                type="color"
                                value="#FFFFFF"
                              />
                              <input
                                type="color"
                                value="#FFFFFF"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 25,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component="div"
                                context={null}
                                props={
                                  Object {
                                    "children": Array [
                                      <div
                                        id="#source"
                                        style={
                                          Object {
                                            "background": "var(--some-background)",
                                            "color": "var(--some-color)",
                                          }
                                        }
                                      >
                                        Hello.
                                      </div>,
                                      <StyleInput
                                        disabled={false}
                                        name="--some-color"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                      <ComputedStyleInput
                                        compute={[Circular]}
                                        computeFunction="copy"
                                        disabled={false}
                                        name="--some-background"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                    ],
                                  }
                                }
                                wrappingComponentProps={null}
                              />,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component="div"
                                context={null}
                                props={
                                  Object {
                                    "children": Array [
                                      <div
                                        id="#source"
                                        style={
                                          Object {
                                            "background": "var(--some-background)",
                                            "color": "var(--some-color)",
                                          }
                                        }
                                      >
                                        Hello.
                                      </div>,
                                      <StyleInput
                                        disabled={false}
                                        name="--some-color"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                      <ComputedStyleInput
                                        compute={[Circular]}
                                        computeFunction="copy"
                                        disabled={false}
                                        name="--some-background"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                    ],
                                  }
                                }
                                wrappingComponentProps={null}
                              />,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 32,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 210,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 128,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Hello.",
                          "id": "#source",
                          "style": Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": [Circular],
                        "pendingProps": Object {
                          "children": "Hello.",
                          "id": "#source",
                          "style": Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          },
                        },
                        "ref": Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        },
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": [Circular],
                        "stateNode": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component="div"
                          context={null}
                          props={
                            Object {
                              "children": Array [
                                <div
                                  id="#source"
                                  style={
                                    Object {
                                      "background": "var(--some-background)",
                                      "color": "var(--some-color)",
                                    }
                                  }
                                >
                                  Hello.
                                </div>,
                                <StyleInput
                                  disabled={false}
                                  name="--some-color"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                                <ComputedStyleInput
                                  compute={[Circular]}
                                  computeFunction="copy"
                                  disabled={false}
                                  name="--some-background"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                              ],
                            }
                          }
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <div
                              id="#source"
                            >
                              Hello.
                            </div>
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 25,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component="div"
                            context={null}
                            props={
                              Object {
                                "children": Array [
                                  <div
                                    id="#source"
                                    style={
                                      Object {
                                        "background": "var(--some-background)",
                                        "color": "var(--some-color)",
                                      }
                                    }
                                  >
                                    Hello.
                                  </div>,
                                  <StyleInput
                                    disabled={false}
                                    name="--some-color"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                  <ComputedStyleInput
                                    compute={[Circular]}
                                    computeFunction="copy"
                                    disabled={false}
                                    name="--some-background"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                ],
                              }
                            }
                            wrappingComponentProps={null}
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "pendingProps": Object {
                      "Component": "div",
                      "context": null,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 206,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 206,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <div
                                id="#source"
                              >
                                Hello.
                              </div>
                              <input
                                type="color"
                                value="#FFFFFF"
                              />
                              <input
                                type="color"
                                value="#FFFFFF"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 25,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component="div"
                                context={null}
                                props={
                                  Object {
                                    "children": Array [
                                      <div
                                        id="#source"
                                        style={
                                          Object {
                                            "background": "var(--some-background)",
                                            "color": "var(--some-color)",
                                          }
                                        }
                                      >
                                        Hello.
                                      </div>,
                                      <StyleInput
                                        disabled={false}
                                        name="--some-color"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                      <ComputedStyleInput
                                        compute={[Circular]}
                                        computeFunction="copy"
                                        disabled={false}
                                        name="--some-background"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                    ],
                                  }
                                }
                                wrappingComponentProps={null}
                              />,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component="div"
                                context={null}
                                props={
                                  Object {
                                    "children": Array [
                                      <div
                                        id="#source"
                                        style={
                                          Object {
                                            "background": "var(--some-background)",
                                            "color": "var(--some-color)",
                                          }
                                        }
                                      >
                                        Hello.
                                      </div>,
                                      <StyleInput
                                        disabled={false}
                                        name="--some-color"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                      <ComputedStyleInput
                                        compute={[Circular]}
                                        computeFunction="copy"
                                        disabled={false}
                                        name="--some-background"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                    ],
                                  }
                                }
                                wrappingComponentProps={null}
                              />,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 32,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 210,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 128,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Hello.",
                          "id": "#source",
                          "style": Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": [Circular],
                        "pendingProps": Object {
                          "children": "Hello.",
                          "id": "#source",
                          "style": Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          },
                        },
                        "ref": Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        },
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": [Circular],
                        "stateNode": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component="div"
                          context={null}
                          props={
                            Object {
                              "children": Array [
                                <div
                                  id="#source"
                                  style={
                                    Object {
                                      "background": "var(--some-background)",
                                      "color": "var(--some-color)",
                                    }
                                  }
                                >
                                  Hello.
                                </div>,
                                <StyleInput
                                  disabled={false}
                                  name="--some-color"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                                <ComputedStyleInput
                                  compute={[Circular]}
                                  computeFunction="copy"
                                  disabled={false}
                                  name="--some-background"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                              ],
                            }
                          }
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <div
                              id="#source"
                            >
                              Hello.
                            </div>
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 25,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component="div"
                            context={null}
                            props={
                              Object {
                                "children": Array [
                                  <div
                                    id="#source"
                                    style={
                                      Object {
                                        "background": "var(--some-background)",
                                        "color": "var(--some-color)",
                                      }
                                    }
                                  >
                                    Hello.
                                  </div>,
                                  <StyleInput
                                    disabled={false}
                                    name="--some-color"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                  <ComputedStyleInput
                                    compute={[Circular]}
                                    computeFunction="copy"
                                    disabled={false}
                                    name="--some-background"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                ],
                              }
                            }
                            wrappingComponentProps={null}
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": "div",
                        "context": null,
                        "props": Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        },
                        "wrappingComponentProps": null,
                      },
                      "refs": Object {},
                      "rootFinderInstance": null,
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        },
                        "wrappingComponentProps": null,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 210,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 128,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": [Circular],
                    "pendingProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "ref": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": [Circular],
                    "stateNode": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 210,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 128,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": [Circular],
                    "pendingProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "ref": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": [Circular],
                    "stateNode": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": Array [
                      <div
                        id="#source"
                        style={
                          Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          }
                        }
                      >
                        Hello.
                      </div>,
                      <StyleInput
                        disabled={false}
                        name="--some-color"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                      <ComputedStyleInput
                        compute={[Circular]}
                        computeFunction="copy"
                        disabled={false}
                        name="--some-background"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                    ],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <div
                        id="#source"
                        style={
                          Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          }
                        }
                      >
                        Hello.
                      </div>,
                      <StyleInput
                        disabled={false}
                        name="--some-color"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                      <ComputedStyleInput
                        compute={[Circular]}
                        computeFunction="copy"
                        disabled={false}
                        name="--some-background"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                    ],
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 208,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 210,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 128,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": [Circular],
                      "pendingProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "ref": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": [Circular],
                      "stateNode": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": "div",
                      "context": null,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "mode": 0,
                    "nextEffect": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 206,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 206,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <div
                                id="#source"
                              >
                                Hello.
                              </div>
                              <input
                                type="color"
                                value="#FFFFFF"
                              />
                              <input
                                type="color"
                                value="#FFFFFF"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 25,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component="div"
                                context={null}
                                props={
                                  Object {
                                    "children": Array [
                                      <div
                                        id="#source"
                                        style={
                                          Object {
                                            "background": "var(--some-background)",
                                            "color": "var(--some-color)",
                                          }
                                        }
                                      >
                                        Hello.
                                      </div>,
                                      <StyleInput
                                        disabled={false}
                                        name="--some-color"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                      <ComputedStyleInput
                                        compute={[Circular]}
                                        computeFunction="copy"
                                        disabled={false}
                                        name="--some-background"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                    ],
                                  }
                                }
                                wrappingComponentProps={null}
                              />,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component="div"
                                context={null}
                                props={
                                  Object {
                                    "children": Array [
                                      <div
                                        id="#source"
                                        style={
                                          Object {
                                            "background": "var(--some-background)",
                                            "color": "var(--some-color)",
                                          }
                                        }
                                      >
                                        Hello.
                                      </div>,
                                      <StyleInput
                                        disabled={false}
                                        name="--some-color"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                      <ComputedStyleInput
                                        compute={[Circular]}
                                        computeFunction="copy"
                                        disabled={false}
                                        name="--some-background"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                    ],
                                  }
                                }
                                wrappingComponentProps={null}
                              />,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 32,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 210,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 128,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Hello.",
                          "id": "#source",
                          "style": Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": [Circular],
                        "pendingProps": Object {
                          "children": "Hello.",
                          "id": "#source",
                          "style": Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          },
                        },
                        "ref": Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        },
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": [Circular],
                        "stateNode": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component="div"
                          context={null}
                          props={
                            Object {
                              "children": Array [
                                <div
                                  id="#source"
                                  style={
                                    Object {
                                      "background": "var(--some-background)",
                                      "color": "var(--some-color)",
                                    }
                                  }
                                >
                                  Hello.
                                </div>,
                                <StyleInput
                                  disabled={false}
                                  name="--some-color"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                                <ComputedStyleInput
                                  compute={[Circular]}
                                  computeFunction="copy"
                                  disabled={false}
                                  name="--some-background"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                              ],
                            }
                          }
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <div
                              id="#source"
                            >
                              Hello.
                            </div>
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 25,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component="div"
                            context={null}
                            props={
                              Object {
                                "children": Array [
                                  <div
                                    id="#source"
                                    style={
                                      Object {
                                        "background": "var(--some-background)",
                                        "color": "var(--some-color)",
                                      }
                                    }
                                  >
                                    Hello.
                                  </div>,
                                  <StyleInput
                                    disabled={false}
                                    name="--some-color"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                  <ComputedStyleInput
                                    compute={[Circular]}
                                    computeFunction="copy"
                                    disabled={false}
                                    name="--some-background"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                ],
                              }
                            }
                            wrappingComponentProps={null}
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "pendingProps": Object {
                      "Component": "div",
                      "context": null,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 206,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 206,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <div
                                id="#source"
                              >
                                Hello.
                              </div>
                              <input
                                type="color"
                                value="#FFFFFF"
                              />
                              <input
                                type="color"
                                value="#FFFFFF"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 25,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component="div"
                                context={null}
                                props={
                                  Object {
                                    "children": Array [
                                      <div
                                        id="#source"
                                        style={
                                          Object {
                                            "background": "var(--some-background)",
                                            "color": "var(--some-color)",
                                          }
                                        }
                                      >
                                        Hello.
                                      </div>,
                                      <StyleInput
                                        disabled={false}
                                        name="--some-color"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                      <ComputedStyleInput
                                        compute={[Circular]}
                                        computeFunction="copy"
                                        disabled={false}
                                        name="--some-background"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                    ],
                                  }
                                }
                                wrappingComponentProps={null}
                              />,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component="div"
                                context={null}
                                props={
                                  Object {
                                    "children": Array [
                                      <div
                                        id="#source"
                                        style={
                                          Object {
                                            "background": "var(--some-background)",
                                            "color": "var(--some-color)",
                                          }
                                        }
                                      >
                                        Hello.
                                      </div>,
                                      <StyleInput
                                        disabled={false}
                                        name="--some-color"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                      <ComputedStyleInput
                                        compute={[Circular]}
                                        computeFunction="copy"
                                        disabled={false}
                                        name="--some-background"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                    ],
                                  }
                                }
                                wrappingComponentProps={null}
                              />,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 32,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 210,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 128,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Hello.",
                          "id": "#source",
                          "style": Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": [Circular],
                        "pendingProps": Object {
                          "children": "Hello.",
                          "id": "#source",
                          "style": Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          },
                        },
                        "ref": Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        },
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": [Circular],
                        "stateNode": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component="div"
                          context={null}
                          props={
                            Object {
                              "children": Array [
                                <div
                                  id="#source"
                                  style={
                                    Object {
                                      "background": "var(--some-background)",
                                      "color": "var(--some-color)",
                                    }
                                  }
                                >
                                  Hello.
                                </div>,
                                <StyleInput
                                  disabled={false}
                                  name="--some-color"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                                <ComputedStyleInput
                                  compute={[Circular]}
                                  computeFunction="copy"
                                  disabled={false}
                                  name="--some-background"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                              ],
                            }
                          }
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <div
                              id="#source"
                            >
                              Hello.
                            </div>
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 25,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component="div"
                            context={null}
                            props={
                              Object {
                                "children": Array [
                                  <div
                                    id="#source"
                                    style={
                                      Object {
                                        "background": "var(--some-background)",
                                        "color": "var(--some-color)",
                                      }
                                    }
                                  >
                                    Hello.
                                  </div>,
                                  <StyleInput
                                    disabled={false}
                                    name="--some-color"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                  <ComputedStyleInput
                                    compute={[Circular]}
                                    computeFunction="copy"
                                    disabled={false}
                                    name="--some-background"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                ],
                              }
                            }
                            wrappingComponentProps={null}
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": "div",
                        "context": null,
                        "props": Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        },
                        "wrappingComponentProps": null,
                      },
                      "refs": Object {},
                      "rootFinderInstance": null,
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        },
                        "wrappingComponentProps": null,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div>
                    <div
                      id="#source"
                    >
                      Hello.
                    </div>
                    <input
                      type="color"
                      value="#FFFFFF"
                    />
                    <input
                      type="color"
                      value="#FFFFFF"
                    />
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": ComputedStyleInput {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "onComputeChange": [Function],
                  "props": Object {
                    "className": undefined,
                    "compute": [Circular],
                    "computeFunction": "copy",
                    "disabled": false,
                    "name": "--some-background",
                    "onChange": undefined,
                    "source": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "type": "color",
                  },
                  "refs": Object {},
                  "self": Object {
                    "current": StyleInput {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "eventListeners": Array [],
                      "onChange": [Function],
                      "props": Object {
                        "className": undefined,
                        "disabled": false,
                        "name": "--some-background",
                        "onChange": undefined,
                        "source": Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        },
                        "type": "color",
                      },
                      "refs": Object {},
                      "state": Object {
                        "value": "#FFFFFF",
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                  },
                  "state": null,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "pendingProps": Object {
                "className": undefined,
                "disabled": false,
                "name": "--some-background",
                "onChange": undefined,
                "source": Object {
                  "current": <div
                    id="#source"
                  >
                    Hello.
                  </div>,
                },
                "type": "color",
              },
              "ref": Object {
                "current": StyleInput {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "eventListeners": Array [],
                  "onChange": [Function],
                  "props": Object {
                    "className": undefined,
                    "disabled": false,
                    "name": "--some-background",
                    "onChange": undefined,
                    "source": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "type": "color",
                  },
                  "refs": Object {},
                  "state": Object {
                    "value": "#FFFFFF",
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
              },
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 212,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 2,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "className": undefined,
                  "compute": [Circular],
                  "computeFunction": "copy",
                  "disabled": false,
                  "name": "--some-background",
                  "onChange": undefined,
                  "source": Object {
                    "current": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                  },
                  "type": "color",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 208,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 209,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 210,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 128,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": [Circular],
                      "pendingProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "ref": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": [Circular],
                      "stateNode": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 210,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 128,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": [Circular],
                      "pendingProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "ref": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": [Circular],
                      "stateNode": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div>
                      <div
                        id="#source"
                      >
                        Hello.
                      </div>
                      <input
                        type="color"
                        value="#FFFFFF"
                      />
                      <input
                        type="color"
                        value="#FFFFFF"
                      />
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 1,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 210,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 128,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": [Circular],
                    "pendingProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "ref": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 209,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <div>
                        <div
                          id="#source"
                        >
                          Hello.
                        </div>
                        <input
                          type="color"
                          value="#FFFFFF"
                        />
                        <input
                          type="color"
                          value="#FFFFFF"
                        />
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": [Circular],
                    "stateNode": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": "div",
                    "context": null,
                    "props": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "wrappingComponentProps": null,
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "wrappingComponentProps": null,
                  },
                  "mode": 0,
                  "nextEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 206,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 206,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 1073741823,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <div
                              id="#source"
                            >
                              Hello.
                            </div>
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 25,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component="div"
                              context={null}
                              props={
                                Object {
                                  "children": Array [
                                    <div
                                      id="#source"
                                      style={
                                        Object {
                                          "background": "var(--some-background)",
                                          "color": "var(--some-color)",
                                        }
                                      }
                                    >
                                      Hello.
                                    </div>,
                                    <StyleInput
                                      disabled={false}
                                      name="--some-color"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                    <ComputedStyleInput
                                      compute={[Circular]}
                                      computeFunction="copy"
                                      disabled={false}
                                      name="--some-background"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                  ],
                                }
                              }
                              wrappingComponentProps={null}
                            />,
                          },
                          "tag": 0,
                        },
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component="div"
                              context={null}
                              props={
                                Object {
                                  "children": Array [
                                    <div
                                      id="#source"
                                      style={
                                        Object {
                                          "background": "var(--some-background)",
                                          "color": "var(--some-color)",
                                        }
                                      }
                                    >
                                      Hello.
                                    </div>,
                                    <StyleInput
                                      disabled={false}
                                      name="--some-color"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                    <ComputedStyleInput
                                      compute={[Circular]}
                                      computeFunction="copy"
                                      disabled={false}
                                      name="--some-background"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                  ],
                                }
                              }
                              wrappingComponentProps={null}
                            />,
                          },
                          "tag": 0,
                        },
                      },
                    },
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 32,
                    "elementType": null,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 210,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 128,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": [Circular],
                      "pendingProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "ref": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 209,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <div>
                          <div
                            id="#source"
                          >
                            Hello.
                          </div>
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": [Circular],
                      "stateNode": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component="div"
                        context={null}
                        props={
                          Object {
                            "children": Array [
                              <div
                                id="#source"
                                style={
                                  Object {
                                    "background": "var(--some-background)",
                                    "color": "var(--some-color)",
                                  }
                                }
                              >
                                Hello.
                              </div>,
                              <StyleInput
                                disabled={false}
                                name="--some-color"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                              <ComputedStyleInput
                                compute={[Circular]}
                                computeFunction="copy"
                                disabled={false}
                                name="--some-background"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            id="#source"
                          >
                            Hello.
                          </div>
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 25,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component="div"
                          context={null}
                          props={
                            Object {
                              "children": Array [
                                <div
                                  id="#source"
                                  style={
                                    Object {
                                      "background": "var(--some-background)",
                                      "color": "var(--some-color)",
                                    }
                                  }
                                >
                                  Hello.
                                </div>,
                                <StyleInput
                                  disabled={false}
                                  name="--some-color"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                                <ComputedStyleInput
                                  compute={[Circular]}
                                  computeFunction="copy"
                                  disabled={false}
                                  name="--some-background"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                              ],
                            }
                          }
                          wrappingComponentProps={null}
                        />,
                      },
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": null,
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": null,
                    },
                  },
                  "pendingProps": Object {
                    "Component": "div",
                    "context": null,
                    "props": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "wrappingComponentProps": null,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 206,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 206,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 1073741823,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <div
                              id="#source"
                            >
                              Hello.
                            </div>
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 25,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component="div"
                              context={null}
                              props={
                                Object {
                                  "children": Array [
                                    <div
                                      id="#source"
                                      style={
                                        Object {
                                          "background": "var(--some-background)",
                                          "color": "var(--some-color)",
                                        }
                                      }
                                    >
                                      Hello.
                                    </div>,
                                    <StyleInput
                                      disabled={false}
                                      name="--some-color"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                    <ComputedStyleInput
                                      compute={[Circular]}
                                      computeFunction="copy"
                                      disabled={false}
                                      name="--some-background"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                  ],
                                }
                              }
                              wrappingComponentProps={null}
                            />,
                          },
                          "tag": 0,
                        },
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component="div"
                              context={null}
                              props={
                                Object {
                                  "children": Array [
                                    <div
                                      id="#source"
                                      style={
                                        Object {
                                          "background": "var(--some-background)",
                                          "color": "var(--some-color)",
                                        }
                                      }
                                    >
                                      Hello.
                                    </div>,
                                    <StyleInput
                                      disabled={false}
                                      name="--some-color"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                    <ComputedStyleInput
                                      compute={[Circular]}
                                      computeFunction="copy"
                                      disabled={false}
                                      name="--some-background"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                  ],
                                }
                              }
                              wrappingComponentProps={null}
                            />,
                          },
                          "tag": 0,
                        },
                      },
                    },
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 32,
                    "elementType": null,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 210,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 128,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": [Circular],
                      "pendingProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "ref": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 209,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <div>
                          <div
                            id="#source"
                          >
                            Hello.
                          </div>
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": [Circular],
                      "stateNode": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component="div"
                        context={null}
                        props={
                          Object {
                            "children": Array [
                              <div
                                id="#source"
                                style={
                                  Object {
                                    "background": "var(--some-background)",
                                    "color": "var(--some-color)",
                                  }
                                }
                              >
                                Hello.
                              </div>,
                              <StyleInput
                                disabled={false}
                                name="--some-color"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                              <ComputedStyleInput
                                compute={[Circular]}
                                computeFunction="copy"
                                disabled={false}
                                name="--some-background"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            id="#source"
                          >
                            Hello.
                          </div>
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 25,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component="div"
                          context={null}
                          props={
                            Object {
                              "children": Array [
                                <div
                                  id="#source"
                                  style={
                                    Object {
                                      "background": "var(--some-background)",
                                      "color": "var(--some-color)",
                                    }
                                  }
                                >
                                  Hello.
                                </div>,
                                <StyleInput
                                  disabled={false}
                                  name="--some-color"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                                <ComputedStyleInput
                                  compute={[Circular]}
                                  computeFunction="copy"
                                  disabled={false}
                                  name="--some-background"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                              ],
                            }
                          }
                          wrappingComponentProps={null}
                        />,
                      },
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": null,
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": null,
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": "div",
                      "context": null,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "refs": Object {},
                    "rootFinderInstance": null,
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "pendingProps": Object {
                  "className": undefined,
                  "compute": [Circular],
                  "computeFunction": "copy",
                  "disabled": false,
                  "name": "--some-background",
                  "onChange": undefined,
                  "source": Object {
                    "current": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                  },
                  "type": "color",
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 209,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 208,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 210,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 128,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": [Circular],
                      "pendingProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "ref": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": [Circular],
                      "stateNode": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": "div",
                      "context": null,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "mode": 0,
                    "nextEffect": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 206,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 206,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <div
                                id="#source"
                              >
                                Hello.
                              </div>
                              <input
                                type="color"
                                value="#FFFFFF"
                              />
                              <input
                                type="color"
                                value="#FFFFFF"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 25,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component="div"
                                context={null}
                                props={
                                  Object {
                                    "children": Array [
                                      <div
                                        id="#source"
                                        style={
                                          Object {
                                            "background": "var(--some-background)",
                                            "color": "var(--some-color)",
                                          }
                                        }
                                      >
                                        Hello.
                                      </div>,
                                      <StyleInput
                                        disabled={false}
                                        name="--some-color"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                      <ComputedStyleInput
                                        compute={[Circular]}
                                        computeFunction="copy"
                                        disabled={false}
                                        name="--some-background"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                    ],
                                  }
                                }
                                wrappingComponentProps={null}
                              />,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component="div"
                                context={null}
                                props={
                                  Object {
                                    "children": Array [
                                      <div
                                        id="#source"
                                        style={
                                          Object {
                                            "background": "var(--some-background)",
                                            "color": "var(--some-color)",
                                          }
                                        }
                                      >
                                        Hello.
                                      </div>,
                                      <StyleInput
                                        disabled={false}
                                        name="--some-color"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                      <ComputedStyleInput
                                        compute={[Circular]}
                                        computeFunction="copy"
                                        disabled={false}
                                        name="--some-background"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                    ],
                                  }
                                }
                                wrappingComponentProps={null}
                              />,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 32,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 210,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 128,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Hello.",
                          "id": "#source",
                          "style": Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": [Circular],
                        "pendingProps": Object {
                          "children": "Hello.",
                          "id": "#source",
                          "style": Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          },
                        },
                        "ref": Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        },
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": [Circular],
                        "stateNode": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component="div"
                          context={null}
                          props={
                            Object {
                              "children": Array [
                                <div
                                  id="#source"
                                  style={
                                    Object {
                                      "background": "var(--some-background)",
                                      "color": "var(--some-color)",
                                    }
                                  }
                                >
                                  Hello.
                                </div>,
                                <StyleInput
                                  disabled={false}
                                  name="--some-color"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                                <ComputedStyleInput
                                  compute={[Circular]}
                                  computeFunction="copy"
                                  disabled={false}
                                  name="--some-background"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                              ],
                            }
                          }
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <div
                              id="#source"
                            >
                              Hello.
                            </div>
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 25,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component="div"
                            context={null}
                            props={
                              Object {
                                "children": Array [
                                  <div
                                    id="#source"
                                    style={
                                      Object {
                                        "background": "var(--some-background)",
                                        "color": "var(--some-color)",
                                      }
                                    }
                                  >
                                    Hello.
                                  </div>,
                                  <StyleInput
                                    disabled={false}
                                    name="--some-color"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                  <ComputedStyleInput
                                    compute={[Circular]}
                                    computeFunction="copy"
                                    disabled={false}
                                    name="--some-background"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                ],
                              }
                            }
                            wrappingComponentProps={null}
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "pendingProps": Object {
                      "Component": "div",
                      "context": null,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 206,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 206,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <div
                                id="#source"
                              >
                                Hello.
                              </div>
                              <input
                                type="color"
                                value="#FFFFFF"
                              />
                              <input
                                type="color"
                                value="#FFFFFF"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 25,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component="div"
                                context={null}
                                props={
                                  Object {
                                    "children": Array [
                                      <div
                                        id="#source"
                                        style={
                                          Object {
                                            "background": "var(--some-background)",
                                            "color": "var(--some-color)",
                                          }
                                        }
                                      >
                                        Hello.
                                      </div>,
                                      <StyleInput
                                        disabled={false}
                                        name="--some-color"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                      <ComputedStyleInput
                                        compute={[Circular]}
                                        computeFunction="copy"
                                        disabled={false}
                                        name="--some-background"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                    ],
                                  }
                                }
                                wrappingComponentProps={null}
                              />,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component="div"
                                context={null}
                                props={
                                  Object {
                                    "children": Array [
                                      <div
                                        id="#source"
                                        style={
                                          Object {
                                            "background": "var(--some-background)",
                                            "color": "var(--some-color)",
                                          }
                                        }
                                      >
                                        Hello.
                                      </div>,
                                      <StyleInput
                                        disabled={false}
                                        name="--some-color"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                      <ComputedStyleInput
                                        compute={[Circular]}
                                        computeFunction="copy"
                                        disabled={false}
                                        name="--some-background"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                    ],
                                  }
                                }
                                wrappingComponentProps={null}
                              />,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 32,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 210,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 128,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Hello.",
                          "id": "#source",
                          "style": Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": [Circular],
                        "pendingProps": Object {
                          "children": "Hello.",
                          "id": "#source",
                          "style": Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          },
                        },
                        "ref": Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        },
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": [Circular],
                        "stateNode": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component="div"
                          context={null}
                          props={
                            Object {
                              "children": Array [
                                <div
                                  id="#source"
                                  style={
                                    Object {
                                      "background": "var(--some-background)",
                                      "color": "var(--some-color)",
                                    }
                                  }
                                >
                                  Hello.
                                </div>,
                                <StyleInput
                                  disabled={false}
                                  name="--some-color"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                                <ComputedStyleInput
                                  compute={[Circular]}
                                  computeFunction="copy"
                                  disabled={false}
                                  name="--some-background"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                              ],
                            }
                          }
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <div
                              id="#source"
                            >
                              Hello.
                            </div>
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 25,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component="div"
                            context={null}
                            props={
                              Object {
                                "children": Array [
                                  <div
                                    id="#source"
                                    style={
                                      Object {
                                        "background": "var(--some-background)",
                                        "color": "var(--some-color)",
                                      }
                                    }
                                  >
                                    Hello.
                                  </div>,
                                  <StyleInput
                                    disabled={false}
                                    name="--some-color"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                  <ComputedStyleInput
                                    compute={[Circular]}
                                    computeFunction="copy"
                                    disabled={false}
                                    name="--some-background"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                ],
                              }
                            }
                            wrappingComponentProps={null}
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": "div",
                        "context": null,
                        "props": Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        },
                        "wrappingComponentProps": null,
                      },
                      "refs": Object {},
                      "rootFinderInstance": null,
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        },
                        "wrappingComponentProps": null,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 210,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 128,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": [Circular],
                    "pendingProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "ref": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": [Circular],
                    "stateNode": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 210,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 128,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": [Circular],
                    "pendingProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "ref": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": [Circular],
                    "stateNode": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": Array [
                      <div
                        id="#source"
                        style={
                          Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          }
                        }
                      >
                        Hello.
                      </div>,
                      <StyleInput
                        disabled={false}
                        name="--some-color"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                      <ComputedStyleInput
                        compute={[Circular]}
                        computeFunction="copy"
                        disabled={false}
                        name="--some-background"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                    ],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <div
                        id="#source"
                        style={
                          Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          }
                        }
                      >
                        Hello.
                      </div>,
                      <StyleInput
                        disabled={false}
                        name="--some-color"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                      <ComputedStyleInput
                        compute={[Circular]}
                        computeFunction="copy"
                        disabled={false}
                        name="--some-background"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                    ],
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 208,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 210,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 128,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": [Circular],
                      "pendingProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "ref": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": [Circular],
                      "stateNode": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": "div",
                      "context": null,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "mode": 0,
                    "nextEffect": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 206,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 206,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <div
                                id="#source"
                              >
                                Hello.
                              </div>
                              <input
                                type="color"
                                value="#FFFFFF"
                              />
                              <input
                                type="color"
                                value="#FFFFFF"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 25,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component="div"
                                context={null}
                                props={
                                  Object {
                                    "children": Array [
                                      <div
                                        id="#source"
                                        style={
                                          Object {
                                            "background": "var(--some-background)",
                                            "color": "var(--some-color)",
                                          }
                                        }
                                      >
                                        Hello.
                                      </div>,
                                      <StyleInput
                                        disabled={false}
                                        name="--some-color"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                      <ComputedStyleInput
                                        compute={[Circular]}
                                        computeFunction="copy"
                                        disabled={false}
                                        name="--some-background"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                    ],
                                  }
                                }
                                wrappingComponentProps={null}
                              />,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component="div"
                                context={null}
                                props={
                                  Object {
                                    "children": Array [
                                      <div
                                        id="#source"
                                        style={
                                          Object {
                                            "background": "var(--some-background)",
                                            "color": "var(--some-color)",
                                          }
                                        }
                                      >
                                        Hello.
                                      </div>,
                                      <StyleInput
                                        disabled={false}
                                        name="--some-color"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                      <ComputedStyleInput
                                        compute={[Circular]}
                                        computeFunction="copy"
                                        disabled={false}
                                        name="--some-background"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                    ],
                                  }
                                }
                                wrappingComponentProps={null}
                              />,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 32,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 210,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 128,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Hello.",
                          "id": "#source",
                          "style": Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": [Circular],
                        "pendingProps": Object {
                          "children": "Hello.",
                          "id": "#source",
                          "style": Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          },
                        },
                        "ref": Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        },
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": [Circular],
                        "stateNode": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component="div"
                          context={null}
                          props={
                            Object {
                              "children": Array [
                                <div
                                  id="#source"
                                  style={
                                    Object {
                                      "background": "var(--some-background)",
                                      "color": "var(--some-color)",
                                    }
                                  }
                                >
                                  Hello.
                                </div>,
                                <StyleInput
                                  disabled={false}
                                  name="--some-color"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                                <ComputedStyleInput
                                  compute={[Circular]}
                                  computeFunction="copy"
                                  disabled={false}
                                  name="--some-background"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                              ],
                            }
                          }
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <div
                              id="#source"
                            >
                              Hello.
                            </div>
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 25,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component="div"
                            context={null}
                            props={
                              Object {
                                "children": Array [
                                  <div
                                    id="#source"
                                    style={
                                      Object {
                                        "background": "var(--some-background)",
                                        "color": "var(--some-color)",
                                      }
                                    }
                                  >
                                    Hello.
                                  </div>,
                                  <StyleInput
                                    disabled={false}
                                    name="--some-color"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                  <ComputedStyleInput
                                    compute={[Circular]}
                                    computeFunction="copy"
                                    disabled={false}
                                    name="--some-background"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                ],
                              }
                            }
                            wrappingComponentProps={null}
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "pendingProps": Object {
                      "Component": "div",
                      "context": null,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 206,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 206,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div>
                              <div
                                id="#source"
                              >
                                Hello.
                              </div>
                              <input
                                type="color"
                                value="#FFFFFF"
                              />
                              <input
                                type="color"
                                value="#FFFFFF"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 25,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component="div"
                                context={null}
                                props={
                                  Object {
                                    "children": Array [
                                      <div
                                        id="#source"
                                        style={
                                          Object {
                                            "background": "var(--some-background)",
                                            "color": "var(--some-color)",
                                          }
                                        }
                                      >
                                        Hello.
                                      </div>,
                                      <StyleInput
                                        disabled={false}
                                        name="--some-color"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                      <ComputedStyleInput
                                        compute={[Circular]}
                                        computeFunction="copy"
                                        disabled={false}
                                        name="--some-background"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                    ],
                                  }
                                }
                                wrappingComponentProps={null}
                              />,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component="div"
                                context={null}
                                props={
                                  Object {
                                    "children": Array [
                                      <div
                                        id="#source"
                                        style={
                                          Object {
                                            "background": "var(--some-background)",
                                            "color": "var(--some-color)",
                                          }
                                        }
                                      >
                                        Hello.
                                      </div>,
                                      <StyleInput
                                        disabled={false}
                                        name="--some-color"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                      <ComputedStyleInput
                                        compute={[Circular]}
                                        computeFunction="copy"
                                        disabled={false}
                                        name="--some-background"
                                        source={
                                          Object {
                                            "current": <div
                                              id="#source"
                                            >
                                              Hello.
                                            </div>,
                                          }
                                        }
                                        type="color"
                                      />,
                                    ],
                                  }
                                }
                                wrappingComponentProps={null}
                              />,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 32,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 210,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 128,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Hello.",
                          "id": "#source",
                          "style": Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": [Circular],
                        "pendingProps": Object {
                          "children": "Hello.",
                          "id": "#source",
                          "style": Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          },
                        },
                        "ref": Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        },
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": [Circular],
                        "stateNode": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component="div"
                          context={null}
                          props={
                            Object {
                              "children": Array [
                                <div
                                  id="#source"
                                  style={
                                    Object {
                                      "background": "var(--some-background)",
                                      "color": "var(--some-color)",
                                    }
                                  }
                                >
                                  Hello.
                                </div>,
                                <StyleInput
                                  disabled={false}
                                  name="--some-color"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                                <ComputedStyleInput
                                  compute={[Circular]}
                                  computeFunction="copy"
                                  disabled={false}
                                  name="--some-background"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                              ],
                            }
                          }
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <div
                              id="#source"
                            >
                              Hello.
                            </div>
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 25,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component="div"
                            context={null}
                            props={
                              Object {
                                "children": Array [
                                  <div
                                    id="#source"
                                    style={
                                      Object {
                                        "background": "var(--some-background)",
                                        "color": "var(--some-color)",
                                      }
                                    }
                                  >
                                    Hello.
                                  </div>,
                                  <StyleInput
                                    disabled={false}
                                    name="--some-color"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                  <ComputedStyleInput
                                    compute={[Circular]}
                                    computeFunction="copy"
                                    disabled={false}
                                    name="--some-background"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                ],
                              }
                            }
                            wrappingComponentProps={null}
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": "div",
                        "context": null,
                        "props": Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        },
                        "wrappingComponentProps": null,
                      },
                      "refs": Object {},
                      "rootFinderInstance": null,
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        },
                        "wrappingComponentProps": null,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div>
                    <div
                      id="#source"
                    >
                      Hello.
                    </div>
                    <input
                      type="color"
                      value="#FFFFFF"
                    />
                    <input
                      type="color"
                      value="#FFFFFF"
                    />
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": ComputedStyleInput {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "onComputeChange": [Function],
                  "props": Object {
                    "className": undefined,
                    "compute": [Circular],
                    "computeFunction": "copy",
                    "disabled": false,
                    "name": "--some-background",
                    "onChange": undefined,
                    "source": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "type": "color",
                  },
                  "refs": Object {},
                  "self": Object {
                    "current": StyleInput {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "eventListeners": Array [],
                      "onChange": [Function],
                      "props": Object {
                        "className": undefined,
                        "disabled": false,
                        "name": "--some-background",
                        "onChange": undefined,
                        "source": Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        },
                        "type": "color",
                      },
                      "refs": Object {},
                      "state": Object {
                        "value": "#FFFFFF",
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                  },
                  "state": null,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": StyleInput {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "eventListeners": Array [],
                "onChange": [Function],
                "props": Object {
                  "className": undefined,
                  "disabled": false,
                  "name": "--some-background",
                  "onChange": undefined,
                  "source": Object {
                    "current": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                  },
                  "type": "color",
                },
                "refs": Object {},
                "state": Object {
                  "value": "#FFFFFF",
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "pendingProps": Object {
              "disabled": false,
              "name": "--some-color",
              "source": Object {
                "current": <div
                  id="#source"
                >
                  Hello.
                </div>,
              },
              "type": "color",
            },
            "ref": [Circular],
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 209,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 208,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 210,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 128,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Hello.",
                    "id": "#source",
                    "style": Object {
                      "background": "var(--some-background)",
                      "color": "var(--some-color)",
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": [Circular],
                  "pendingProps": Object {
                    "children": "Hello.",
                    "id": "#source",
                    "style": Object {
                      "background": "var(--some-background)",
                      "color": "var(--some-color)",
                    },
                  },
                  "ref": Object {
                    "current": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                  },
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": [Circular],
                  "stateNode": <div
                    id="#source"
                  >
                    Hello.
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "index": 0,
                "key": null,
                "lastEffect": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 212,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 214,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 215,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "input",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "className": undefined,
                        "disabled": false,
                        "onChange": [Function],
                        "type": "color",
                        "value": "#FFFFFF",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "className": undefined,
                        "disabled": false,
                        "onChange": [Function],
                        "type": "color",
                        "value": "#FFFFFF",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <input
                        type="color"
                        value="#FFFFFF"
                      />,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 129,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "className": undefined,
                      "disabled": false,
                      "name": "--some-background",
                      "onChange": undefined,
                      "source": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "type": "color",
                    },
                    "memoizedState": Object {
                      "value": "#FFFFFF",
                    },
                    "mode": 0,
                    "nextEffect": [Circular],
                    "pendingProps": Object {
                      "className": undefined,
                      "disabled": false,
                      "name": "--some-background",
                      "onChange": undefined,
                      "source": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "type": "color",
                    },
                    "ref": Object {
                      "current": StyleInput {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "eventListeners": Array [],
                        "onChange": [Function],
                        "props": Object {
                          "className": undefined,
                          "disabled": false,
                          "name": "--some-background",
                          "onChange": undefined,
                          "source": Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          },
                          "type": "color",
                        },
                        "refs": Object {},
                        "state": Object {
                          "value": "#FFFFFF",
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                    },
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": StyleInput {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "eventListeners": Array [],
                      "onChange": [Function],
                      "props": Object {
                        "className": undefined,
                        "disabled": false,
                        "name": "--some-background",
                        "onChange": undefined,
                        "source": Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        },
                        "type": "color",
                      },
                      "refs": Object {},
                      "state": Object {
                        "value": "#FFFFFF",
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 5,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 214,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 215,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "input",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "className": undefined,
                        "disabled": false,
                        "onChange": [Function],
                        "type": "color",
                        "value": "#FFFFFF",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "className": undefined,
                        "disabled": false,
                        "onChange": [Function],
                        "type": "color",
                        "value": "#FFFFFF",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <input
                        type="color"
                        value="#FFFFFF"
                      />,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 129,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "className": undefined,
                      "disabled": false,
                      "name": "--some-background",
                      "onChange": undefined,
                      "source": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "type": "color",
                    },
                    "memoizedState": Object {
                      "value": "#FFFFFF",
                    },
                    "mode": 0,
                    "nextEffect": [Circular],
                    "pendingProps": Object {
                      "className": undefined,
                      "disabled": false,
                      "name": "--some-background",
                      "onChange": undefined,
                      "source": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "type": "color",
                    },
                    "ref": Object {
                      "current": StyleInput {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "eventListeners": Array [],
                        "onChange": [Function],
                        "props": Object {
                          "className": undefined,
                          "disabled": false,
                          "name": "--some-background",
                          "onChange": undefined,
                          "source": Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          },
                          "type": "color",
                        },
                        "refs": Object {},
                        "state": Object {
                          "value": "#FFFFFF",
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                    },
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": StyleInput {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "eventListeners": Array [],
                      "onChange": [Function],
                      "props": Object {
                        "className": undefined,
                        "disabled": false,
                        "name": "--some-background",
                        "onChange": undefined,
                        "source": Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        },
                        "type": "color",
                      },
                      "refs": Object {},
                      "state": Object {
                        "value": "#FFFFFF",
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "index": 2,
                  "key": null,
                  "lastEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 214,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 215,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "input",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "className": undefined,
                        "disabled": false,
                        "onChange": [Function],
                        "type": "color",
                        "value": "#FFFFFF",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "className": undefined,
                        "disabled": false,
                        "onChange": [Function],
                        "type": "color",
                        "value": "#FFFFFF",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <input
                        type="color"
                        value="#FFFFFF"
                      />,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 129,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "className": undefined,
                      "disabled": false,
                      "name": "--some-background",
                      "onChange": undefined,
                      "source": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "type": "color",
                    },
                    "memoizedState": Object {
                      "value": "#FFFFFF",
                    },
                    "mode": 0,
                    "nextEffect": [Circular],
                    "pendingProps": Object {
                      "className": undefined,
                      "disabled": false,
                      "name": "--some-background",
                      "onChange": undefined,
                      "source": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "type": "color",
                    },
                    "ref": Object {
                      "current": StyleInput {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "eventListeners": Array [],
                        "onChange": [Function],
                        "props": Object {
                          "className": undefined,
                          "disabled": false,
                          "name": "--some-background",
                          "onChange": undefined,
                          "source": Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          },
                          "type": "color",
                        },
                        "refs": Object {},
                        "state": Object {
                          "value": "#FFFFFF",
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                    },
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": StyleInput {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "eventListeners": Array [],
                      "onChange": [Function],
                      "props": Object {
                        "className": undefined,
                        "disabled": false,
                        "name": "--some-background",
                        "onChange": undefined,
                        "source": Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        },
                        "type": "color",
                      },
                      "refs": Object {},
                      "state": Object {
                        "value": "#FFFFFF",
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "memoizedProps": Object {
                    "className": undefined,
                    "compute": [Circular],
                    "computeFunction": "copy",
                    "disabled": false,
                    "name": "--some-background",
                    "onChange": undefined,
                    "source": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "type": "color",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": [Circular],
                  "pendingProps": Object {
                    "className": undefined,
                    "compute": [Circular],
                    "computeFunction": "copy",
                    "disabled": false,
                    "name": "--some-background",
                    "onChange": undefined,
                    "source": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "type": "color",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": ComputedStyleInput {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "onComputeChange": [Function],
                    "props": Object {
                      "className": undefined,
                      "compute": [Circular],
                      "computeFunction": "copy",
                      "disabled": false,
                      "name": "--some-background",
                      "onChange": undefined,
                      "source": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "type": "color",
                    },
                    "refs": Object {},
                    "self": Object {
                      "current": StyleInput {
                        "_reactInternalFiber": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 214,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 215,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "input",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "className": undefined,
                              "disabled": false,
                              "onChange": [Function],
                              "type": "color",
                              "value": "#FFFFFF",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "className": undefined,
                              "disabled": false,
                              "onChange": [Function],
                              "type": "color",
                              "value": "#FFFFFF",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <input
                              type="color"
                              value="#FFFFFF"
                            />,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "input",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 129,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "className": undefined,
                            "disabled": false,
                            "name": "--some-background",
                            "onChange": undefined,
                            "source": Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            },
                            "type": "color",
                          },
                          "memoizedState": Object {
                            "value": "#FFFFFF",
                          },
                          "mode": 0,
                          "nextEffect": [Circular],
                          "pendingProps": Object {
                            "className": undefined,
                            "disabled": false,
                            "name": "--some-background",
                            "onChange": undefined,
                            "source": Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            },
                            "type": "color",
                          },
                          "ref": [Circular],
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": [Circular],
                          "tag": 1,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "eventListeners": Array [],
                        "onChange": [Function],
                        "props": Object {
                          "className": undefined,
                          "disabled": false,
                          "name": "--some-background",
                          "onChange": undefined,
                          "source": Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          },
                          "type": "color",
                        },
                        "refs": Object {},
                        "state": Object {
                          "value": "#FFFFFF",
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                    },
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "memoizedProps": Object {
                  "Component": "div",
                  "context": null,
                  "props": Object {
                    "children": Array [
                      <div
                        id="#source"
                        style={
                          Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          }
                        }
                      >
                        Hello.
                      </div>,
                      <StyleInput
                        disabled={false}
                        name="--some-color"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                      <ComputedStyleInput
                        compute={[Circular]}
                        computeFunction="copy"
                        disabled={false}
                        name="--some-background"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                    ],
                  },
                  "wrappingComponentProps": null,
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": Array [
                      <div
                        id="#source"
                        style={
                          Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          }
                        }
                      >
                        Hello.
                      </div>,
                      <StyleInput
                        disabled={false}
                        name="--some-color"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                      <ComputedStyleInput
                        compute={[Circular]}
                        computeFunction="copy"
                        disabled={false}
                        name="--some-background"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                    ],
                  },
                  "wrappingComponentProps": null,
                },
                "mode": 0,
                "nextEffect": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 206,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 206,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1073741823,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            id="#source"
                          >
                            Hello.
                          </div>
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 25,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component="div"
                            context={null}
                            props={
                              Object {
                                "children": Array [
                                  <div
                                    id="#source"
                                    style={
                                      Object {
                                        "background": "var(--some-background)",
                                        "color": "var(--some-color)",
                                      }
                                    }
                                  >
                                    Hello.
                                  </div>,
                                  <StyleInput
                                    disabled={false}
                                    name="--some-color"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                  <ComputedStyleInput
                                    compute={[Circular]}
                                    computeFunction="copy"
                                    disabled={false}
                                    name="--some-background"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                ],
                              }
                            }
                            wrappingComponentProps={null}
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component="div"
                            context={null}
                            props={
                              Object {
                                "children": Array [
                                  <div
                                    id="#source"
                                    style={
                                      Object {
                                        "background": "var(--some-background)",
                                        "color": "var(--some-color)",
                                      }
                                    }
                                  >
                                    Hello.
                                  </div>,
                                  <StyleInput
                                    disabled={false}
                                    name="--some-color"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                  <ComputedStyleInput
                                    compute={[Circular]}
                                    computeFunction="copy"
                                    disabled={false}
                                    name="--some-background"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                ],
                              }
                            }
                            wrappingComponentProps={null}
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 32,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 210,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 128,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": [Circular],
                    "pendingProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "ref": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": [Circular],
                    "stateNode": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component="div"
                      context={null}
                      props={
                        Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          id="#source"
                        >
                          Hello.
                        </div>
                        <input
                          type="color"
                          value="#FFFFFF"
                        />
                        <input
                          type="color"
                          value="#FFFFFF"
                        />
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 25,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "pingCache": null,
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component="div"
                        context={null}
                        props={
                          Object {
                            "children": Array [
                              <div
                                id="#source"
                                style={
                                  Object {
                                    "background": "var(--some-background)",
                                    "color": "var(--some-color)",
                                  }
                                }
                              >
                                Hello.
                              </div>,
                              <StyleInput
                                disabled={false}
                                name="--some-color"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                              <ComputedStyleInput
                                compute={[Circular]}
                                computeFunction="copy"
                                disabled={false}
                                name="--some-background"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "pendingProps": Object {
                  "Component": "div",
                  "context": null,
                  "props": Object {
                    "children": Array [
                      <div
                        id="#source"
                        style={
                          Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          }
                        }
                      >
                        Hello.
                      </div>,
                      <StyleInput
                        disabled={false}
                        name="--some-color"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                      <ComputedStyleInput
                        compute={[Circular]}
                        computeFunction="copy"
                        disabled={false}
                        name="--some-background"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                    ],
                  },
                  "wrappingComponentProps": null,
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 206,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 206,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1073741823,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            id="#source"
                          >
                            Hello.
                          </div>
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 25,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component="div"
                            context={null}
                            props={
                              Object {
                                "children": Array [
                                  <div
                                    id="#source"
                                    style={
                                      Object {
                                        "background": "var(--some-background)",
                                        "color": "var(--some-color)",
                                      }
                                    }
                                  >
                                    Hello.
                                  </div>,
                                  <StyleInput
                                    disabled={false}
                                    name="--some-color"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                  <ComputedStyleInput
                                    compute={[Circular]}
                                    computeFunction="copy"
                                    disabled={false}
                                    name="--some-background"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                ],
                              }
                            }
                            wrappingComponentProps={null}
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component="div"
                            context={null}
                            props={
                              Object {
                                "children": Array [
                                  <div
                                    id="#source"
                                    style={
                                      Object {
                                        "background": "var(--some-background)",
                                        "color": "var(--some-color)",
                                      }
                                    }
                                  >
                                    Hello.
                                  </div>,
                                  <StyleInput
                                    disabled={false}
                                    name="--some-color"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                  <ComputedStyleInput
                                    compute={[Circular]}
                                    computeFunction="copy"
                                    disabled={false}
                                    name="--some-background"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                ],
                              }
                            }
                            wrappingComponentProps={null}
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 32,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 210,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 128,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": [Circular],
                    "pendingProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "ref": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": [Circular],
                    "stateNode": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component="div"
                      context={null}
                      props={
                        Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          id="#source"
                        >
                          Hello.
                        </div>
                        <input
                          type="color"
                          value="#FFFFFF"
                        />
                        <input
                          type="color"
                          value="#FFFFFF"
                        />
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 25,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "pingCache": null,
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component="div"
                        context={null}
                        props={
                          Object {
                            "children": Array [
                              <div
                                id="#source"
                                style={
                                  Object {
                                    "background": "var(--some-background)",
                                    "color": "var(--some-color)",
                                  }
                                }
                              >
                                Hello.
                              </div>,
                              <StyleInput
                                disabled={false}
                                name="--some-color"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                              <ComputedStyleInput
                                compute={[Circular]}
                                computeFunction="copy"
                                disabled={false}
                                name="--some-background"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": "div",
                    "context": null,
                    "props": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "wrappingComponentProps": null,
                  },
                  "refs": Object {},
                  "rootFinderInstance": null,
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "wrappingComponentProps": null,
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 210,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 128,
                "elementType": "div",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "Hello.",
                  "id": "#source",
                  "style": Object {
                    "background": "var(--some-background)",
                    "color": "var(--some-color)",
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": [Circular],
                "pendingProps": Object {
                  "children": "Hello.",
                  "id": "#source",
                  "style": Object {
                    "background": "var(--some-background)",
                    "color": "var(--some-color)",
                  },
                },
                "ref": Object {
                  "current": <div
                    id="#source"
                  >
                    Hello.
                  </div>,
                },
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": [Circular],
                "stateNode": <div
                  id="#source"
                >
                  Hello.
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "div",
              "expirationTime": 0,
              "firstEffect": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 210,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 128,
                "elementType": "div",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "Hello.",
                  "id": "#source",
                  "style": Object {
                    "background": "var(--some-background)",
                    "color": "var(--some-color)",
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": [Circular],
                "pendingProps": Object {
                  "children": "Hello.",
                  "id": "#source",
                  "style": Object {
                    "background": "var(--some-background)",
                    "color": "var(--some-color)",
                  },
                },
                "ref": Object {
                  "current": <div
                    id="#source"
                  >
                    Hello.
                  </div>,
                },
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": [Circular],
                "stateNode": <div
                  id="#source"
                >
                  Hello.
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "index": 0,
              "key": null,
              "lastEffect": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 212,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 214,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 215,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": "input",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "className": undefined,
                      "disabled": false,
                      "onChange": [Function],
                      "type": "color",
                      "value": "#FFFFFF",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "className": undefined,
                      "disabled": false,
                      "onChange": [Function],
                      "type": "color",
                      "value": "#FFFFFF",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <input
                      type="color"
                      value="#FFFFFF"
                    />,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 129,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "className": undefined,
                    "disabled": false,
                    "name": "--some-background",
                    "onChange": undefined,
                    "source": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "type": "color",
                  },
                  "memoizedState": Object {
                    "value": "#FFFFFF",
                  },
                  "mode": 0,
                  "nextEffect": [Circular],
                  "pendingProps": Object {
                    "className": undefined,
                    "disabled": false,
                    "name": "--some-background",
                    "onChange": undefined,
                    "source": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "type": "color",
                  },
                  "ref": Object {
                    "current": StyleInput {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "eventListeners": Array [],
                      "onChange": [Function],
                      "props": Object {
                        "className": undefined,
                        "disabled": false,
                        "name": "--some-background",
                        "onChange": undefined,
                        "source": Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        },
                        "type": "color",
                      },
                      "refs": Object {},
                      "state": Object {
                        "value": "#FFFFFF",
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                  },
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": StyleInput {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "eventListeners": Array [],
                    "onChange": [Function],
                    "props": Object {
                      "className": undefined,
                      "disabled": false,
                      "name": "--some-background",
                      "onChange": undefined,
                      "source": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "type": "color",
                    },
                    "refs": Object {},
                    "state": Object {
                      "value": "#FFFFFF",
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 214,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 215,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": "input",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "className": undefined,
                      "disabled": false,
                      "onChange": [Function],
                      "type": "color",
                      "value": "#FFFFFF",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "className": undefined,
                      "disabled": false,
                      "onChange": [Function],
                      "type": "color",
                      "value": "#FFFFFF",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <input
                      type="color"
                      value="#FFFFFF"
                    />,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 129,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "className": undefined,
                    "disabled": false,
                    "name": "--some-background",
                    "onChange": undefined,
                    "source": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "type": "color",
                  },
                  "memoizedState": Object {
                    "value": "#FFFFFF",
                  },
                  "mode": 0,
                  "nextEffect": [Circular],
                  "pendingProps": Object {
                    "className": undefined,
                    "disabled": false,
                    "name": "--some-background",
                    "onChange": undefined,
                    "source": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "type": "color",
                  },
                  "ref": Object {
                    "current": StyleInput {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "eventListeners": Array [],
                      "onChange": [Function],
                      "props": Object {
                        "className": undefined,
                        "disabled": false,
                        "name": "--some-background",
                        "onChange": undefined,
                        "source": Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        },
                        "type": "color",
                      },
                      "refs": Object {},
                      "state": Object {
                        "value": "#FFFFFF",
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                  },
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": StyleInput {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "eventListeners": Array [],
                    "onChange": [Function],
                    "props": Object {
                      "className": undefined,
                      "disabled": false,
                      "name": "--some-background",
                      "onChange": undefined,
                      "source": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "type": "color",
                    },
                    "refs": Object {},
                    "state": Object {
                      "value": "#FFFFFF",
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "index": 2,
                "key": null,
                "lastEffect": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 214,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 215,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": "input",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "className": undefined,
                      "disabled": false,
                      "onChange": [Function],
                      "type": "color",
                      "value": "#FFFFFF",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "className": undefined,
                      "disabled": false,
                      "onChange": [Function],
                      "type": "color",
                      "value": "#FFFFFF",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <input
                      type="color"
                      value="#FFFFFF"
                    />,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 129,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "className": undefined,
                    "disabled": false,
                    "name": "--some-background",
                    "onChange": undefined,
                    "source": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "type": "color",
                  },
                  "memoizedState": Object {
                    "value": "#FFFFFF",
                  },
                  "mode": 0,
                  "nextEffect": [Circular],
                  "pendingProps": Object {
                    "className": undefined,
                    "disabled": false,
                    "name": "--some-background",
                    "onChange": undefined,
                    "source": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "type": "color",
                  },
                  "ref": Object {
                    "current": StyleInput {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "eventListeners": Array [],
                      "onChange": [Function],
                      "props": Object {
                        "className": undefined,
                        "disabled": false,
                        "name": "--some-background",
                        "onChange": undefined,
                        "source": Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        },
                        "type": "color",
                      },
                      "refs": Object {},
                      "state": Object {
                        "value": "#FFFFFF",
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                  },
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": StyleInput {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "eventListeners": Array [],
                    "onChange": [Function],
                    "props": Object {
                      "className": undefined,
                      "disabled": false,
                      "name": "--some-background",
                      "onChange": undefined,
                      "source": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "type": "color",
                    },
                    "refs": Object {},
                    "state": Object {
                      "value": "#FFFFFF",
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "memoizedProps": Object {
                  "className": undefined,
                  "compute": [Circular],
                  "computeFunction": "copy",
                  "disabled": false,
                  "name": "--some-background",
                  "onChange": undefined,
                  "source": Object {
                    "current": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                  },
                  "type": "color",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 208,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 1,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 210,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 128,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": [Circular],
                    "pendingProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "ref": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": [Circular],
                    "stateNode": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": "div",
                    "context": null,
                    "props": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "wrappingComponentProps": null,
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "wrappingComponentProps": null,
                  },
                  "mode": 0,
                  "nextEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 206,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 206,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 1073741823,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <div
                              id="#source"
                            >
                              Hello.
                            </div>
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 25,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component="div"
                              context={null}
                              props={
                                Object {
                                  "children": Array [
                                    <div
                                      id="#source"
                                      style={
                                        Object {
                                          "background": "var(--some-background)",
                                          "color": "var(--some-color)",
                                        }
                                      }
                                    >
                                      Hello.
                                    </div>,
                                    <StyleInput
                                      disabled={false}
                                      name="--some-color"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                    <ComputedStyleInput
                                      compute={[Circular]}
                                      computeFunction="copy"
                                      disabled={false}
                                      name="--some-background"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                  ],
                                }
                              }
                              wrappingComponentProps={null}
                            />,
                          },
                          "tag": 0,
                        },
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component="div"
                              context={null}
                              props={
                                Object {
                                  "children": Array [
                                    <div
                                      id="#source"
                                      style={
                                        Object {
                                          "background": "var(--some-background)",
                                          "color": "var(--some-color)",
                                        }
                                      }
                                    >
                                      Hello.
                                    </div>,
                                    <StyleInput
                                      disabled={false}
                                      name="--some-color"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                    <ComputedStyleInput
                                      compute={[Circular]}
                                      computeFunction="copy"
                                      disabled={false}
                                      name="--some-background"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                  ],
                                }
                              }
                              wrappingComponentProps={null}
                            />,
                          },
                          "tag": 0,
                        },
                      },
                    },
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 32,
                    "elementType": null,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 210,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 128,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": [Circular],
                      "pendingProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "ref": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": [Circular],
                      "stateNode": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component="div"
                        context={null}
                        props={
                          Object {
                            "children": Array [
                              <div
                                id="#source"
                                style={
                                  Object {
                                    "background": "var(--some-background)",
                                    "color": "var(--some-color)",
                                  }
                                }
                              >
                                Hello.
                              </div>,
                              <StyleInput
                                disabled={false}
                                name="--some-color"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                              <ComputedStyleInput
                                compute={[Circular]}
                                computeFunction="copy"
                                disabled={false}
                                name="--some-background"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            id="#source"
                          >
                            Hello.
                          </div>
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 25,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component="div"
                          context={null}
                          props={
                            Object {
                              "children": Array [
                                <div
                                  id="#source"
                                  style={
                                    Object {
                                      "background": "var(--some-background)",
                                      "color": "var(--some-color)",
                                    }
                                  }
                                >
                                  Hello.
                                </div>,
                                <StyleInput
                                  disabled={false}
                                  name="--some-color"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                                <ComputedStyleInput
                                  compute={[Circular]}
                                  computeFunction="copy"
                                  disabled={false}
                                  name="--some-background"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                              ],
                            }
                          }
                          wrappingComponentProps={null}
                        />,
                      },
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": null,
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": null,
                    },
                  },
                  "pendingProps": Object {
                    "Component": "div",
                    "context": null,
                    "props": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "wrappingComponentProps": null,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 206,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 206,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 1073741823,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <div
                              id="#source"
                            >
                              Hello.
                            </div>
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 25,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component="div"
                              context={null}
                              props={
                                Object {
                                  "children": Array [
                                    <div
                                      id="#source"
                                      style={
                                        Object {
                                          "background": "var(--some-background)",
                                          "color": "var(--some-color)",
                                        }
                                      }
                                    >
                                      Hello.
                                    </div>,
                                    <StyleInput
                                      disabled={false}
                                      name="--some-color"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                    <ComputedStyleInput
                                      compute={[Circular]}
                                      computeFunction="copy"
                                      disabled={false}
                                      name="--some-background"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                  ],
                                }
                              }
                              wrappingComponentProps={null}
                            />,
                          },
                          "tag": 0,
                        },
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component="div"
                              context={null}
                              props={
                                Object {
                                  "children": Array [
                                    <div
                                      id="#source"
                                      style={
                                        Object {
                                          "background": "var(--some-background)",
                                          "color": "var(--some-color)",
                                        }
                                      }
                                    >
                                      Hello.
                                    </div>,
                                    <StyleInput
                                      disabled={false}
                                      name="--some-color"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                    <ComputedStyleInput
                                      compute={[Circular]}
                                      computeFunction="copy"
                                      disabled={false}
                                      name="--some-background"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                  ],
                                }
                              }
                              wrappingComponentProps={null}
                            />,
                          },
                          "tag": 0,
                        },
                      },
                    },
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 32,
                    "elementType": null,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 210,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 128,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": [Circular],
                      "pendingProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "ref": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": [Circular],
                      "stateNode": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component="div"
                        context={null}
                        props={
                          Object {
                            "children": Array [
                              <div
                                id="#source"
                                style={
                                  Object {
                                    "background": "var(--some-background)",
                                    "color": "var(--some-color)",
                                  }
                                }
                              >
                                Hello.
                              </div>,
                              <StyleInput
                                disabled={false}
                                name="--some-color"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                              <ComputedStyleInput
                                compute={[Circular]}
                                computeFunction="copy"
                                disabled={false}
                                name="--some-background"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            id="#source"
                          >
                            Hello.
                          </div>
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 25,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component="div"
                          context={null}
                          props={
                            Object {
                              "children": Array [
                                <div
                                  id="#source"
                                  style={
                                    Object {
                                      "background": "var(--some-background)",
                                      "color": "var(--some-color)",
                                    }
                                  }
                                >
                                  Hello.
                                </div>,
                                <StyleInput
                                  disabled={false}
                                  name="--some-color"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                                <ComputedStyleInput
                                  compute={[Circular]}
                                  computeFunction="copy"
                                  disabled={false}
                                  name="--some-background"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                              ],
                            }
                          }
                          wrappingComponentProps={null}
                        />,
                      },
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": null,
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": null,
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": "div",
                      "context": null,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "refs": Object {},
                    "rootFinderInstance": null,
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "pendingProps": Object {
                  "className": undefined,
                  "compute": [Circular],
                  "computeFunction": "copy",
                  "disabled": false,
                  "name": "--some-background",
                  "onChange": undefined,
                  "source": Object {
                    "current": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                  },
                  "type": "color",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": ComputedStyleInput {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "onComputeChange": [Function],
                  "props": Object {
                    "className": undefined,
                    "compute": [Circular],
                    "computeFunction": "copy",
                    "disabled": false,
                    "name": "--some-background",
                    "onChange": undefined,
                    "source": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "type": "color",
                  },
                  "refs": Object {},
                  "self": Object {
                    "current": StyleInput {
                      "_reactInternalFiber": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 214,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 215,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "input",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "className": undefined,
                            "disabled": false,
                            "onChange": [Function],
                            "type": "color",
                            "value": "#FFFFFF",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "className": undefined,
                            "disabled": false,
                            "onChange": [Function],
                            "type": "color",
                            "value": "#FFFFFF",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <input
                            type="color"
                            value="#FFFFFF"
                          />,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "input",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 129,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "className": undefined,
                          "disabled": false,
                          "name": "--some-background",
                          "onChange": undefined,
                          "source": Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          },
                          "type": "color",
                        },
                        "memoizedState": Object {
                          "value": "#FFFFFF",
                        },
                        "mode": 0,
                        "nextEffect": [Circular],
                        "pendingProps": Object {
                          "className": undefined,
                          "disabled": false,
                          "name": "--some-background",
                          "onChange": undefined,
                          "source": Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          },
                          "type": "color",
                        },
                        "ref": [Circular],
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": [Circular],
                        "tag": 1,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "eventListeners": Array [],
                      "onChange": [Function],
                      "props": Object {
                        "className": undefined,
                        "disabled": false,
                        "name": "--some-background",
                        "onChange": undefined,
                        "source": Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        },
                        "type": "color",
                      },
                      "refs": Object {},
                      "state": Object {
                        "value": "#FFFFFF",
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                  },
                  "state": null,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "memoizedProps": Object {
                "children": Array [
                  <div
                    id="#source"
                    style={
                      Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      }
                    }
                  >
                    Hello.
                  </div>,
                  <StyleInput
                    disabled={false}
                    name="--some-color"
                    source={
                      Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      }
                    }
                    type="color"
                  />,
                  <ComputedStyleInput
                    compute={[Circular]}
                    computeFunction="copy"
                    disabled={false}
                    name="--some-background"
                    source={
                      Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      }
                    }
                    type="color"
                  />,
                ],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <div
                    id="#source"
                    style={
                      Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      }
                    }
                  >
                    Hello.
                  </div>,
                  <StyleInput
                    disabled={false}
                    name="--some-color"
                    source={
                      Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      }
                    }
                    type="color"
                  />,
                  <ComputedStyleInput
                    compute={[Circular]}
                    computeFunction="copy"
                    disabled={false}
                    name="--some-background"
                    source={
                      Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      }
                    }
                    type="color"
                  />,
                ],
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 208,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 210,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 128,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Hello.",
                    "id": "#source",
                    "style": Object {
                      "background": "var(--some-background)",
                      "color": "var(--some-color)",
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": [Circular],
                  "pendingProps": Object {
                    "children": "Hello.",
                    "id": "#source",
                    "style": Object {
                      "background": "var(--some-background)",
                      "color": "var(--some-color)",
                    },
                  },
                  "ref": Object {
                    "current": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                  },
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": [Circular],
                  "stateNode": <div
                    id="#source"
                  >
                    Hello.
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "index": 0,
                "key": null,
                "lastEffect": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 212,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 214,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 215,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "input",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "className": undefined,
                        "disabled": false,
                        "onChange": [Function],
                        "type": "color",
                        "value": "#FFFFFF",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "className": undefined,
                        "disabled": false,
                        "onChange": [Function],
                        "type": "color",
                        "value": "#FFFFFF",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <input
                        type="color"
                        value="#FFFFFF"
                      />,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 129,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "className": undefined,
                      "disabled": false,
                      "name": "--some-background",
                      "onChange": undefined,
                      "source": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "type": "color",
                    },
                    "memoizedState": Object {
                      "value": "#FFFFFF",
                    },
                    "mode": 0,
                    "nextEffect": [Circular],
                    "pendingProps": Object {
                      "className": undefined,
                      "disabled": false,
                      "name": "--some-background",
                      "onChange": undefined,
                      "source": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "type": "color",
                    },
                    "ref": Object {
                      "current": StyleInput {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "eventListeners": Array [],
                        "onChange": [Function],
                        "props": Object {
                          "className": undefined,
                          "disabled": false,
                          "name": "--some-background",
                          "onChange": undefined,
                          "source": Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          },
                          "type": "color",
                        },
                        "refs": Object {},
                        "state": Object {
                          "value": "#FFFFFF",
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                    },
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": StyleInput {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "eventListeners": Array [],
                      "onChange": [Function],
                      "props": Object {
                        "className": undefined,
                        "disabled": false,
                        "name": "--some-background",
                        "onChange": undefined,
                        "source": Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        },
                        "type": "color",
                      },
                      "refs": Object {},
                      "state": Object {
                        "value": "#FFFFFF",
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 5,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 214,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 215,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "input",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "className": undefined,
                        "disabled": false,
                        "onChange": [Function],
                        "type": "color",
                        "value": "#FFFFFF",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "className": undefined,
                        "disabled": false,
                        "onChange": [Function],
                        "type": "color",
                        "value": "#FFFFFF",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <input
                        type="color"
                        value="#FFFFFF"
                      />,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 129,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "className": undefined,
                      "disabled": false,
                      "name": "--some-background",
                      "onChange": undefined,
                      "source": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "type": "color",
                    },
                    "memoizedState": Object {
                      "value": "#FFFFFF",
                    },
                    "mode": 0,
                    "nextEffect": [Circular],
                    "pendingProps": Object {
                      "className": undefined,
                      "disabled": false,
                      "name": "--some-background",
                      "onChange": undefined,
                      "source": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "type": "color",
                    },
                    "ref": Object {
                      "current": StyleInput {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "eventListeners": Array [],
                        "onChange": [Function],
                        "props": Object {
                          "className": undefined,
                          "disabled": false,
                          "name": "--some-background",
                          "onChange": undefined,
                          "source": Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          },
                          "type": "color",
                        },
                        "refs": Object {},
                        "state": Object {
                          "value": "#FFFFFF",
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                    },
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": StyleInput {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "eventListeners": Array [],
                      "onChange": [Function],
                      "props": Object {
                        "className": undefined,
                        "disabled": false,
                        "name": "--some-background",
                        "onChange": undefined,
                        "source": Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        },
                        "type": "color",
                      },
                      "refs": Object {},
                      "state": Object {
                        "value": "#FFFFFF",
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "index": 2,
                  "key": null,
                  "lastEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 214,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 215,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "input",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "className": undefined,
                        "disabled": false,
                        "onChange": [Function],
                        "type": "color",
                        "value": "#FFFFFF",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "className": undefined,
                        "disabled": false,
                        "onChange": [Function],
                        "type": "color",
                        "value": "#FFFFFF",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <input
                        type="color"
                        value="#FFFFFF"
                      />,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 129,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "className": undefined,
                      "disabled": false,
                      "name": "--some-background",
                      "onChange": undefined,
                      "source": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "type": "color",
                    },
                    "memoizedState": Object {
                      "value": "#FFFFFF",
                    },
                    "mode": 0,
                    "nextEffect": [Circular],
                    "pendingProps": Object {
                      "className": undefined,
                      "disabled": false,
                      "name": "--some-background",
                      "onChange": undefined,
                      "source": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "type": "color",
                    },
                    "ref": Object {
                      "current": StyleInput {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "eventListeners": Array [],
                        "onChange": [Function],
                        "props": Object {
                          "className": undefined,
                          "disabled": false,
                          "name": "--some-background",
                          "onChange": undefined,
                          "source": Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          },
                          "type": "color",
                        },
                        "refs": Object {},
                        "state": Object {
                          "value": "#FFFFFF",
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                    },
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": StyleInput {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "eventListeners": Array [],
                      "onChange": [Function],
                      "props": Object {
                        "className": undefined,
                        "disabled": false,
                        "name": "--some-background",
                        "onChange": undefined,
                        "source": Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        },
                        "type": "color",
                      },
                      "refs": Object {},
                      "state": Object {
                        "value": "#FFFFFF",
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "memoizedProps": Object {
                    "className": undefined,
                    "compute": [Circular],
                    "computeFunction": "copy",
                    "disabled": false,
                    "name": "--some-background",
                    "onChange": undefined,
                    "source": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "type": "color",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": [Circular],
                  "pendingProps": Object {
                    "className": undefined,
                    "compute": [Circular],
                    "computeFunction": "copy",
                    "disabled": false,
                    "name": "--some-background",
                    "onChange": undefined,
                    "source": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "type": "color",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": ComputedStyleInput {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "onComputeChange": [Function],
                    "props": Object {
                      "className": undefined,
                      "compute": [Circular],
                      "computeFunction": "copy",
                      "disabled": false,
                      "name": "--some-background",
                      "onChange": undefined,
                      "source": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "type": "color",
                    },
                    "refs": Object {},
                    "self": Object {
                      "current": StyleInput {
                        "_reactInternalFiber": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 214,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 215,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "input",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "className": undefined,
                              "disabled": false,
                              "onChange": [Function],
                              "type": "color",
                              "value": "#FFFFFF",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "className": undefined,
                              "disabled": false,
                              "onChange": [Function],
                              "type": "color",
                              "value": "#FFFFFF",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <input
                              type="color"
                              value="#FFFFFF"
                            />,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "input",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 129,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "className": undefined,
                            "disabled": false,
                            "name": "--some-background",
                            "onChange": undefined,
                            "source": Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            },
                            "type": "color",
                          },
                          "memoizedState": Object {
                            "value": "#FFFFFF",
                          },
                          "mode": 0,
                          "nextEffect": [Circular],
                          "pendingProps": Object {
                            "className": undefined,
                            "disabled": false,
                            "name": "--some-background",
                            "onChange": undefined,
                            "source": Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            },
                            "type": "color",
                          },
                          "ref": [Circular],
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": [Circular],
                          "tag": 1,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "eventListeners": Array [],
                        "onChange": [Function],
                        "props": Object {
                          "className": undefined,
                          "disabled": false,
                          "name": "--some-background",
                          "onChange": undefined,
                          "source": Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          },
                          "type": "color",
                        },
                        "refs": Object {},
                        "state": Object {
                          "value": "#FFFFFF",
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                    },
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "memoizedProps": Object {
                  "Component": "div",
                  "context": null,
                  "props": Object {
                    "children": Array [
                      <div
                        id="#source"
                        style={
                          Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          }
                        }
                      >
                        Hello.
                      </div>,
                      <StyleInput
                        disabled={false}
                        name="--some-color"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                      <ComputedStyleInput
                        compute={[Circular]}
                        computeFunction="copy"
                        disabled={false}
                        name="--some-background"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                    ],
                  },
                  "wrappingComponentProps": null,
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": Array [
                      <div
                        id="#source"
                        style={
                          Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          }
                        }
                      >
                        Hello.
                      </div>,
                      <StyleInput
                        disabled={false}
                        name="--some-color"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                      <ComputedStyleInput
                        compute={[Circular]}
                        computeFunction="copy"
                        disabled={false}
                        name="--some-background"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                    ],
                  },
                  "wrappingComponentProps": null,
                },
                "mode": 0,
                "nextEffect": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 206,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 206,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1073741823,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            id="#source"
                          >
                            Hello.
                          </div>
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 25,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component="div"
                            context={null}
                            props={
                              Object {
                                "children": Array [
                                  <div
                                    id="#source"
                                    style={
                                      Object {
                                        "background": "var(--some-background)",
                                        "color": "var(--some-color)",
                                      }
                                    }
                                  >
                                    Hello.
                                  </div>,
                                  <StyleInput
                                    disabled={false}
                                    name="--some-color"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                  <ComputedStyleInput
                                    compute={[Circular]}
                                    computeFunction="copy"
                                    disabled={false}
                                    name="--some-background"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                ],
                              }
                            }
                            wrappingComponentProps={null}
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component="div"
                            context={null}
                            props={
                              Object {
                                "children": Array [
                                  <div
                                    id="#source"
                                    style={
                                      Object {
                                        "background": "var(--some-background)",
                                        "color": "var(--some-color)",
                                      }
                                    }
                                  >
                                    Hello.
                                  </div>,
                                  <StyleInput
                                    disabled={false}
                                    name="--some-color"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                  <ComputedStyleInput
                                    compute={[Circular]}
                                    computeFunction="copy"
                                    disabled={false}
                                    name="--some-background"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                ],
                              }
                            }
                            wrappingComponentProps={null}
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 32,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 210,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 128,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": [Circular],
                    "pendingProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "ref": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": [Circular],
                    "stateNode": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component="div"
                      context={null}
                      props={
                        Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          id="#source"
                        >
                          Hello.
                        </div>
                        <input
                          type="color"
                          value="#FFFFFF"
                        />
                        <input
                          type="color"
                          value="#FFFFFF"
                        />
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 25,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "pingCache": null,
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component="div"
                        context={null}
                        props={
                          Object {
                            "children": Array [
                              <div
                                id="#source"
                                style={
                                  Object {
                                    "background": "var(--some-background)",
                                    "color": "var(--some-color)",
                                  }
                                }
                              >
                                Hello.
                              </div>,
                              <StyleInput
                                disabled={false}
                                name="--some-color"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                              <ComputedStyleInput
                                compute={[Circular]}
                                computeFunction="copy"
                                disabled={false}
                                name="--some-background"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "pendingProps": Object {
                  "Component": "div",
                  "context": null,
                  "props": Object {
                    "children": Array [
                      <div
                        id="#source"
                        style={
                          Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          }
                        }
                      >
                        Hello.
                      </div>,
                      <StyleInput
                        disabled={false}
                        name="--some-color"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                      <ComputedStyleInput
                        compute={[Circular]}
                        computeFunction="copy"
                        disabled={false}
                        name="--some-background"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                    ],
                  },
                  "wrappingComponentProps": null,
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 206,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 206,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1073741823,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            id="#source"
                          >
                            Hello.
                          </div>
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 25,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component="div"
                            context={null}
                            props={
                              Object {
                                "children": Array [
                                  <div
                                    id="#source"
                                    style={
                                      Object {
                                        "background": "var(--some-background)",
                                        "color": "var(--some-color)",
                                      }
                                    }
                                  >
                                    Hello.
                                  </div>,
                                  <StyleInput
                                    disabled={false}
                                    name="--some-color"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                  <ComputedStyleInput
                                    compute={[Circular]}
                                    computeFunction="copy"
                                    disabled={false}
                                    name="--some-background"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                ],
                              }
                            }
                            wrappingComponentProps={null}
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component="div"
                            context={null}
                            props={
                              Object {
                                "children": Array [
                                  <div
                                    id="#source"
                                    style={
                                      Object {
                                        "background": "var(--some-background)",
                                        "color": "var(--some-color)",
                                      }
                                    }
                                  >
                                    Hello.
                                  </div>,
                                  <StyleInput
                                    disabled={false}
                                    name="--some-color"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                  <ComputedStyleInput
                                    compute={[Circular]}
                                    computeFunction="copy"
                                    disabled={false}
                                    name="--some-background"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                ],
                              }
                            }
                            wrappingComponentProps={null}
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 32,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 210,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 128,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": [Circular],
                    "pendingProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "ref": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": [Circular],
                    "stateNode": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component="div"
                      context={null}
                      props={
                        Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          id="#source"
                        >
                          Hello.
                        </div>
                        <input
                          type="color"
                          value="#FFFFFF"
                        />
                        <input
                          type="color"
                          value="#FFFFFF"
                        />
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 25,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "pingCache": null,
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component="div"
                        context={null}
                        props={
                          Object {
                            "children": Array [
                              <div
                                id="#source"
                                style={
                                  Object {
                                    "background": "var(--some-background)",
                                    "color": "var(--some-color)",
                                  }
                                }
                              >
                                Hello.
                              </div>,
                              <StyleInput
                                disabled={false}
                                name="--some-color"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                              <ComputedStyleInput
                                compute={[Circular]}
                                computeFunction="copy"
                                disabled={false}
                                name="--some-background"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": "div",
                    "context": null,
                    "props": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "wrappingComponentProps": null,
                  },
                  "refs": Object {},
                  "rootFinderInstance": null,
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "wrappingComponentProps": null,
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <div>
                <div
                  id="#source"
                >
                  Hello.
                </div>
                <input
                  type="color"
                  value="#FFFFFF"
                />
                <input
                  type="color"
                  value="#FFFFFF"
                />
              </div>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 212,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 214,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 215,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "input",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "className": undefined,
                    "disabled": false,
                    "onChange": [Function],
                    "type": "color",
                    "value": "#FFFFFF",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "className": undefined,
                    "disabled": false,
                    "onChange": [Function],
                    "type": "color",
                    "value": "#FFFFFF",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <input
                    type="color"
                    value="#FFFFFF"
                  />,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "input",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 129,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "className": undefined,
                  "disabled": false,
                  "name": "--some-background",
                  "onChange": undefined,
                  "source": Object {
                    "current": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                  },
                  "type": "color",
                },
                "memoizedState": Object {
                  "value": "#FFFFFF",
                },
                "mode": 0,
                "nextEffect": [Circular],
                "pendingProps": Object {
                  "className": undefined,
                  "disabled": false,
                  "name": "--some-background",
                  "onChange": undefined,
                  "source": Object {
                    "current": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                  },
                  "type": "color",
                },
                "ref": Object {
                  "current": StyleInput {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "eventListeners": Array [],
                    "onChange": [Function],
                    "props": Object {
                      "className": undefined,
                      "disabled": false,
                      "name": "--some-background",
                      "onChange": undefined,
                      "source": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "type": "color",
                    },
                    "refs": Object {},
                    "state": Object {
                      "value": "#FFFFFF",
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                },
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": StyleInput {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "eventListeners": Array [],
                  "onChange": [Function],
                  "props": Object {
                    "className": undefined,
                    "disabled": false,
                    "name": "--some-background",
                    "onChange": undefined,
                    "source": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "type": "color",
                  },
                  "refs": Object {},
                  "state": Object {
                    "value": "#FFFFFF",
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 214,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 215,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "input",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "className": undefined,
                    "disabled": false,
                    "onChange": [Function],
                    "type": "color",
                    "value": "#FFFFFF",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "className": undefined,
                    "disabled": false,
                    "onChange": [Function],
                    "type": "color",
                    "value": "#FFFFFF",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <input
                    type="color"
                    value="#FFFFFF"
                  />,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "input",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 129,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "className": undefined,
                  "disabled": false,
                  "name": "--some-background",
                  "onChange": undefined,
                  "source": Object {
                    "current": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                  },
                  "type": "color",
                },
                "memoizedState": Object {
                  "value": "#FFFFFF",
                },
                "mode": 0,
                "nextEffect": [Circular],
                "pendingProps": Object {
                  "className": undefined,
                  "disabled": false,
                  "name": "--some-background",
                  "onChange": undefined,
                  "source": Object {
                    "current": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                  },
                  "type": "color",
                },
                "ref": Object {
                  "current": StyleInput {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "eventListeners": Array [],
                    "onChange": [Function],
                    "props": Object {
                      "className": undefined,
                      "disabled": false,
                      "name": "--some-background",
                      "onChange": undefined,
                      "source": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "type": "color",
                    },
                    "refs": Object {},
                    "state": Object {
                      "value": "#FFFFFF",
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                },
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": StyleInput {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "eventListeners": Array [],
                  "onChange": [Function],
                  "props": Object {
                    "className": undefined,
                    "disabled": false,
                    "name": "--some-background",
                    "onChange": undefined,
                    "source": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "type": "color",
                  },
                  "refs": Object {},
                  "state": Object {
                    "value": "#FFFFFF",
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "index": 2,
              "key": null,
              "lastEffect": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 214,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 215,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "input",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "className": undefined,
                    "disabled": false,
                    "onChange": [Function],
                    "type": "color",
                    "value": "#FFFFFF",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "className": undefined,
                    "disabled": false,
                    "onChange": [Function],
                    "type": "color",
                    "value": "#FFFFFF",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <input
                    type="color"
                    value="#FFFFFF"
                  />,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "input",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 129,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "className": undefined,
                  "disabled": false,
                  "name": "--some-background",
                  "onChange": undefined,
                  "source": Object {
                    "current": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                  },
                  "type": "color",
                },
                "memoizedState": Object {
                  "value": "#FFFFFF",
                },
                "mode": 0,
                "nextEffect": [Circular],
                "pendingProps": Object {
                  "className": undefined,
                  "disabled": false,
                  "name": "--some-background",
                  "onChange": undefined,
                  "source": Object {
                    "current": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                  },
                  "type": "color",
                },
                "ref": Object {
                  "current": StyleInput {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "eventListeners": Array [],
                    "onChange": [Function],
                    "props": Object {
                      "className": undefined,
                      "disabled": false,
                      "name": "--some-background",
                      "onChange": undefined,
                      "source": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "type": "color",
                    },
                    "refs": Object {},
                    "state": Object {
                      "value": "#FFFFFF",
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                },
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": StyleInput {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "eventListeners": Array [],
                  "onChange": [Function],
                  "props": Object {
                    "className": undefined,
                    "disabled": false,
                    "name": "--some-background",
                    "onChange": undefined,
                    "source": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "type": "color",
                  },
                  "refs": Object {},
                  "state": Object {
                    "value": "#FFFFFF",
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "memoizedProps": Object {
                "className": undefined,
                "compute": [Circular],
                "computeFunction": "copy",
                "disabled": false,
                "name": "--some-background",
                "onChange": undefined,
                "source": Object {
                  "current": <div
                    id="#source"
                  >
                    Hello.
                  </div>,
                },
                "type": "color",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 208,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 209,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 210,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 128,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": [Circular],
                    "pendingProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "ref": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": [Circular],
                    "stateNode": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 210,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 128,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": [Circular],
                    "pendingProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "ref": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": [Circular],
                    "stateNode": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": Array [
                      <div
                        id="#source"
                        style={
                          Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          }
                        }
                      >
                        Hello.
                      </div>,
                      <StyleInput
                        disabled={false}
                        name="--some-color"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                      <ComputedStyleInput
                        compute={[Circular]}
                        computeFunction="copy"
                        disabled={false}
                        name="--some-background"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                    ],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <div
                        id="#source"
                        style={
                          Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          }
                        }
                      >
                        Hello.
                      </div>,
                      <StyleInput
                        disabled={false}
                        name="--some-color"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                      <ComputedStyleInput
                        compute={[Circular]}
                        computeFunction="copy"
                        disabled={false}
                        name="--some-background"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                    ],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div>
                    <div
                      id="#source"
                    >
                      Hello.
                    </div>
                    <input
                      type="color"
                      value="#FFFFFF"
                    />
                    <input
                      type="color"
                      value="#FFFFFF"
                    />
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 210,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 128,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Hello.",
                    "id": "#source",
                    "style": Object {
                      "background": "var(--some-background)",
                      "color": "var(--some-color)",
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": [Circular],
                  "pendingProps": Object {
                    "children": "Hello.",
                    "id": "#source",
                    "style": Object {
                      "background": "var(--some-background)",
                      "color": "var(--some-color)",
                    },
                  },
                  "ref": Object {
                    "current": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                  },
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 209,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div>
                      <div
                        id="#source"
                      >
                        Hello.
                      </div>
                      <input
                        type="color"
                        value="#FFFFFF"
                      />
                      <input
                        type="color"
                        value="#FFFFFF"
                      />
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": [Circular],
                  "stateNode": <div
                    id="#source"
                  >
                    Hello.
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "Component": "div",
                  "context": null,
                  "props": Object {
                    "children": Array [
                      <div
                        id="#source"
                        style={
                          Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          }
                        }
                      >
                        Hello.
                      </div>,
                      <StyleInput
                        disabled={false}
                        name="--some-color"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                      <ComputedStyleInput
                        compute={[Circular]}
                        computeFunction="copy"
                        disabled={false}
                        name="--some-background"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                    ],
                  },
                  "wrappingComponentProps": null,
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": Array [
                      <div
                        id="#source"
                        style={
                          Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          }
                        }
                      >
                        Hello.
                      </div>,
                      <StyleInput
                        disabled={false}
                        name="--some-color"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                      <ComputedStyleInput
                        compute={[Circular]}
                        computeFunction="copy"
                        disabled={false}
                        name="--some-background"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                    ],
                  },
                  "wrappingComponentProps": null,
                },
                "mode": 0,
                "nextEffect": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 206,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 206,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1073741823,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            id="#source"
                          >
                            Hello.
                          </div>
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 25,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component="div"
                            context={null}
                            props={
                              Object {
                                "children": Array [
                                  <div
                                    id="#source"
                                    style={
                                      Object {
                                        "background": "var(--some-background)",
                                        "color": "var(--some-color)",
                                      }
                                    }
                                  >
                                    Hello.
                                  </div>,
                                  <StyleInput
                                    disabled={false}
                                    name="--some-color"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                  <ComputedStyleInput
                                    compute={[Circular]}
                                    computeFunction="copy"
                                    disabled={false}
                                    name="--some-background"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                ],
                              }
                            }
                            wrappingComponentProps={null}
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component="div"
                            context={null}
                            props={
                              Object {
                                "children": Array [
                                  <div
                                    id="#source"
                                    style={
                                      Object {
                                        "background": "var(--some-background)",
                                        "color": "var(--some-color)",
                                      }
                                    }
                                  >
                                    Hello.
                                  </div>,
                                  <StyleInput
                                    disabled={false}
                                    name="--some-color"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                  <ComputedStyleInput
                                    compute={[Circular]}
                                    computeFunction="copy"
                                    disabled={false}
                                    name="--some-background"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                ],
                              }
                            }
                            wrappingComponentProps={null}
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 32,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 210,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 128,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": [Circular],
                    "pendingProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "ref": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 209,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <div>
                        <div
                          id="#source"
                        >
                          Hello.
                        </div>
                        <input
                          type="color"
                          value="#FFFFFF"
                        />
                        <input
                          type="color"
                          value="#FFFFFF"
                        />
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": [Circular],
                    "stateNode": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component="div"
                      context={null}
                      props={
                        Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          id="#source"
                        >
                          Hello.
                        </div>
                        <input
                          type="color"
                          value="#FFFFFF"
                        />
                        <input
                          type="color"
                          value="#FFFFFF"
                        />
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 25,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "pingCache": null,
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component="div"
                        context={null}
                        props={
                          Object {
                            "children": Array [
                              <div
                                id="#source"
                                style={
                                  Object {
                                    "background": "var(--some-background)",
                                    "color": "var(--some-color)",
                                  }
                                }
                              >
                                Hello.
                              </div>,
                              <StyleInput
                                disabled={false}
                                name="--some-color"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                              <ComputedStyleInput
                                compute={[Circular]}
                                computeFunction="copy"
                                disabled={false}
                                name="--some-background"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "pendingProps": Object {
                  "Component": "div",
                  "context": null,
                  "props": Object {
                    "children": Array [
                      <div
                        id="#source"
                        style={
                          Object {
                            "background": "var(--some-background)",
                            "color": "var(--some-color)",
                          }
                        }
                      >
                        Hello.
                      </div>,
                      <StyleInput
                        disabled={false}
                        name="--some-color"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                      <ComputedStyleInput
                        compute={[Circular]}
                        computeFunction="copy"
                        disabled={false}
                        name="--some-background"
                        source={
                          Object {
                            "current": <div
                              id="#source"
                            >
                              Hello.
                            </div>,
                          }
                        }
                        type="color"
                      />,
                    ],
                  },
                  "wrappingComponentProps": null,
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 206,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 206,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1073741823,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            id="#source"
                          >
                            Hello.
                          </div>
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 25,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component="div"
                            context={null}
                            props={
                              Object {
                                "children": Array [
                                  <div
                                    id="#source"
                                    style={
                                      Object {
                                        "background": "var(--some-background)",
                                        "color": "var(--some-color)",
                                      }
                                    }
                                  >
                                    Hello.
                                  </div>,
                                  <StyleInput
                                    disabled={false}
                                    name="--some-color"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                  <ComputedStyleInput
                                    compute={[Circular]}
                                    computeFunction="copy"
                                    disabled={false}
                                    name="--some-background"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                ],
                              }
                            }
                            wrappingComponentProps={null}
                          />,
                        },
                        "tag": 0,
                      },
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": null,
                        "nextEffect": null,
                        "payload": Object {
                          "element": <WrapperComponent
                            Component="div"
                            context={null}
                            props={
                              Object {
                                "children": Array [
                                  <div
                                    id="#source"
                                    style={
                                      Object {
                                        "background": "var(--some-background)",
                                        "color": "var(--some-color)",
                                      }
                                    }
                                  >
                                    Hello.
                                  </div>,
                                  <StyleInput
                                    disabled={false}
                                    name="--some-color"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                  <ComputedStyleInput
                                    compute={[Circular]}
                                    computeFunction="copy"
                                    disabled={false}
                                    name="--some-background"
                                    source={
                                      Object {
                                        "current": <div
                                          id="#source"
                                        >
                                          Hello.
                                        </div>,
                                      }
                                    }
                                    type="color"
                                  />,
                                ],
                              }
                            }
                            wrappingComponentProps={null}
                          />,
                        },
                        "tag": 0,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 32,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 210,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 128,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": [Circular],
                    "pendingProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "ref": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 209,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <div>
                        <div
                          id="#source"
                        >
                          Hello.
                        </div>
                        <input
                          type="color"
                          value="#FFFFFF"
                        />
                        <input
                          type="color"
                          value="#FFFFFF"
                        />
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": [Circular],
                    "stateNode": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component="div"
                      context={null}
                      props={
                        Object {
                          "children": Array [
                            <div
                              id="#source"
                              style={
                                Object {
                                  "background": "var(--some-background)",
                                  "color": "var(--some-color)",
                                }
                              }
                            >
                              Hello.
                            </div>,
                            <StyleInput
                              disabled={false}
                              name="--some-color"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                            <ComputedStyleInput
                              compute={[Circular]}
                              computeFunction="copy"
                              disabled={false}
                              name="--some-background"
                              source={
                                Object {
                                  "current": <div
                                    id="#source"
                                  >
                                    Hello.
                                  </div>,
                                }
                              }
                              type="color"
                            />,
                          ],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div>
                      <div>
                        <div
                          id="#source"
                        >
                          Hello.
                        </div>
                        <input
                          type="color"
                          value="#FFFFFF"
                        />
                        <input
                          type="color"
                          value="#FFFFFF"
                        />
                      </div>
                    </div>,
                    "context": Object {},
                    "current": [Circular],
                    "didError": false,
                    "earliestPendingTime": 0,
                    "earliestSuspendedTime": 0,
                    "expirationTime": 0,
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "interactionThreadID": 25,
                    "latestPendingTime": 0,
                    "latestPingedTime": 0,
                    "latestSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextExpirationTimeToWorkOn": 0,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "pingCache": null,
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component="div"
                        context={null}
                        props={
                          Object {
                            "children": Array [
                              <div
                                id="#source"
                                style={
                                  Object {
                                    "background": "var(--some-background)",
                                    "color": "var(--some-color)",
                                  }
                                }
                              >
                                Hello.
                              </div>,
                              <StyleInput
                                disabled={false}
                                name="--some-color"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                              <ComputedStyleInput
                                compute={[Circular]}
                                computeFunction="copy"
                                disabled={false}
                                name="--some-background"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": "div",
                    "context": null,
                    "props": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "wrappingComponentProps": null,
                  },
                  "refs": Object {},
                  "rootFinderInstance": null,
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "wrappingComponentProps": null,
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "pendingProps": Object {
                "className": undefined,
                "compute": [Circular],
                "computeFunction": "copy",
                "disabled": false,
                "name": "--some-background",
                "onChange": undefined,
                "source": Object {
                  "current": <div
                    id="#source"
                  >
                    Hello.
                  </div>,
                },
                "type": "color",
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 209,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 208,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 1,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 210,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 128,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": [Circular],
                    "pendingProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "ref": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": [Circular],
                    "stateNode": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": "div",
                    "context": null,
                    "props": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "wrappingComponentProps": null,
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "wrappingComponentProps": null,
                  },
                  "mode": 0,
                  "nextEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 206,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 206,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 1073741823,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <div
                              id="#source"
                            >
                              Hello.
                            </div>
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 25,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component="div"
                              context={null}
                              props={
                                Object {
                                  "children": Array [
                                    <div
                                      id="#source"
                                      style={
                                        Object {
                                          "background": "var(--some-background)",
                                          "color": "var(--some-color)",
                                        }
                                      }
                                    >
                                      Hello.
                                    </div>,
                                    <StyleInput
                                      disabled={false}
                                      name="--some-color"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                    <ComputedStyleInput
                                      compute={[Circular]}
                                      computeFunction="copy"
                                      disabled={false}
                                      name="--some-background"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                  ],
                                }
                              }
                              wrappingComponentProps={null}
                            />,
                          },
                          "tag": 0,
                        },
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component="div"
                              context={null}
                              props={
                                Object {
                                  "children": Array [
                                    <div
                                      id="#source"
                                      style={
                                        Object {
                                          "background": "var(--some-background)",
                                          "color": "var(--some-color)",
                                        }
                                      }
                                    >
                                      Hello.
                                    </div>,
                                    <StyleInput
                                      disabled={false}
                                      name="--some-color"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                    <ComputedStyleInput
                                      compute={[Circular]}
                                      computeFunction="copy"
                                      disabled={false}
                                      name="--some-background"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                  ],
                                }
                              }
                              wrappingComponentProps={null}
                            />,
                          },
                          "tag": 0,
                        },
                      },
                    },
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 32,
                    "elementType": null,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 210,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 128,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": [Circular],
                      "pendingProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "ref": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": [Circular],
                      "stateNode": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component="div"
                        context={null}
                        props={
                          Object {
                            "children": Array [
                              <div
                                id="#source"
                                style={
                                  Object {
                                    "background": "var(--some-background)",
                                    "color": "var(--some-color)",
                                  }
                                }
                              >
                                Hello.
                              </div>,
                              <StyleInput
                                disabled={false}
                                name="--some-color"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                              <ComputedStyleInput
                                compute={[Circular]}
                                computeFunction="copy"
                                disabled={false}
                                name="--some-background"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            id="#source"
                          >
                            Hello.
                          </div>
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 25,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component="div"
                          context={null}
                          props={
                            Object {
                              "children": Array [
                                <div
                                  id="#source"
                                  style={
                                    Object {
                                      "background": "var(--some-background)",
                                      "color": "var(--some-color)",
                                    }
                                  }
                                >
                                  Hello.
                                </div>,
                                <StyleInput
                                  disabled={false}
                                  name="--some-color"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                                <ComputedStyleInput
                                  compute={[Circular]}
                                  computeFunction="copy"
                                  disabled={false}
                                  name="--some-background"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                              ],
                            }
                          }
                          wrappingComponentProps={null}
                        />,
                      },
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": null,
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": null,
                    },
                  },
                  "pendingProps": Object {
                    "Component": "div",
                    "context": null,
                    "props": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "wrappingComponentProps": null,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 206,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 206,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 1073741823,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <div
                              id="#source"
                            >
                              Hello.
                            </div>
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 25,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component="div"
                              context={null}
                              props={
                                Object {
                                  "children": Array [
                                    <div
                                      id="#source"
                                      style={
                                        Object {
                                          "background": "var(--some-background)",
                                          "color": "var(--some-color)",
                                        }
                                      }
                                    >
                                      Hello.
                                    </div>,
                                    <StyleInput
                                      disabled={false}
                                      name="--some-color"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                    <ComputedStyleInput
                                      compute={[Circular]}
                                      computeFunction="copy"
                                      disabled={false}
                                      name="--some-background"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                  ],
                                }
                              }
                              wrappingComponentProps={null}
                            />,
                          },
                          "tag": 0,
                        },
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component="div"
                              context={null}
                              props={
                                Object {
                                  "children": Array [
                                    <div
                                      id="#source"
                                      style={
                                        Object {
                                          "background": "var(--some-background)",
                                          "color": "var(--some-color)",
                                        }
                                      }
                                    >
                                      Hello.
                                    </div>,
                                    <StyleInput
                                      disabled={false}
                                      name="--some-color"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                    <ComputedStyleInput
                                      compute={[Circular]}
                                      computeFunction="copy"
                                      disabled={false}
                                      name="--some-background"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                  ],
                                }
                              }
                              wrappingComponentProps={null}
                            />,
                          },
                          "tag": 0,
                        },
                      },
                    },
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 32,
                    "elementType": null,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 210,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 128,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": [Circular],
                      "pendingProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "ref": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": [Circular],
                      "stateNode": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component="div"
                        context={null}
                        props={
                          Object {
                            "children": Array [
                              <div
                                id="#source"
                                style={
                                  Object {
                                    "background": "var(--some-background)",
                                    "color": "var(--some-color)",
                                  }
                                }
                              >
                                Hello.
                              </div>,
                              <StyleInput
                                disabled={false}
                                name="--some-color"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                              <ComputedStyleInput
                                compute={[Circular]}
                                computeFunction="copy"
                                disabled={false}
                                name="--some-background"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            id="#source"
                          >
                            Hello.
                          </div>
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 25,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component="div"
                          context={null}
                          props={
                            Object {
                              "children": Array [
                                <div
                                  id="#source"
                                  style={
                                    Object {
                                      "background": "var(--some-background)",
                                      "color": "var(--some-color)",
                                    }
                                  }
                                >
                                  Hello.
                                </div>,
                                <StyleInput
                                  disabled={false}
                                  name="--some-color"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                                <ComputedStyleInput
                                  compute={[Circular]}
                                  computeFunction="copy"
                                  disabled={false}
                                  name="--some-background"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                              ],
                            }
                          }
                          wrappingComponentProps={null}
                        />,
                      },
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": null,
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": null,
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": "div",
                      "context": null,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "refs": Object {},
                    "rootFinderInstance": null,
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 210,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 128,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Hello.",
                    "id": "#source",
                    "style": Object {
                      "background": "var(--some-background)",
                      "color": "var(--some-color)",
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": [Circular],
                  "pendingProps": Object {
                    "children": "Hello.",
                    "id": "#source",
                    "style": Object {
                      "background": "var(--some-background)",
                      "color": "var(--some-color)",
                    },
                  },
                  "ref": Object {
                    "current": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                  },
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": [Circular],
                  "stateNode": <div
                    id="#source"
                  >
                    Hello.
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstEffect": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 210,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 128,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Hello.",
                    "id": "#source",
                    "style": Object {
                      "background": "var(--some-background)",
                      "color": "var(--some-color)",
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": [Circular],
                  "pendingProps": Object {
                    "children": "Hello.",
                    "id": "#source",
                    "style": Object {
                      "background": "var(--some-background)",
                      "color": "var(--some-color)",
                    },
                  },
                  "ref": Object {
                    "current": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                  },
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": [Circular],
                  "stateNode": <div
                    id="#source"
                  >
                    Hello.
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": Array [
                    <div
                      id="#source"
                      style={
                        Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        }
                      }
                    >
                      Hello.
                    </div>,
                    <StyleInput
                      disabled={false}
                      name="--some-color"
                      source={
                        Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        }
                      }
                      type="color"
                    />,
                    <ComputedStyleInput
                      compute={[Circular]}
                      computeFunction="copy"
                      disabled={false}
                      name="--some-background"
                      source={
                        Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        }
                      }
                      type="color"
                    />,
                  ],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <div
                      id="#source"
                      style={
                        Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        }
                      }
                    >
                      Hello.
                    </div>,
                    <StyleInput
                      disabled={false}
                      name="--some-color"
                      source={
                        Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        }
                      }
                      type="color"
                    />,
                    <ComputedStyleInput
                      compute={[Circular]}
                      computeFunction="copy"
                      disabled={false}
                      name="--some-background"
                      source={
                        Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        }
                      }
                      type="color"
                    />,
                  ],
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 208,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 1,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 210,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 128,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": [Circular],
                    "pendingProps": Object {
                      "children": "Hello.",
                      "id": "#source",
                      "style": Object {
                        "background": "var(--some-background)",
                        "color": "var(--some-color)",
                      },
                    },
                    "ref": Object {
                      "current": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                    },
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": [Circular],
                    "stateNode": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": "div",
                    "context": null,
                    "props": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "wrappingComponentProps": null,
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "wrappingComponentProps": null,
                  },
                  "mode": 0,
                  "nextEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 206,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 206,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 1073741823,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <div
                              id="#source"
                            >
                              Hello.
                            </div>
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 25,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component="div"
                              context={null}
                              props={
                                Object {
                                  "children": Array [
                                    <div
                                      id="#source"
                                      style={
                                        Object {
                                          "background": "var(--some-background)",
                                          "color": "var(--some-color)",
                                        }
                                      }
                                    >
                                      Hello.
                                    </div>,
                                    <StyleInput
                                      disabled={false}
                                      name="--some-color"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                    <ComputedStyleInput
                                      compute={[Circular]}
                                      computeFunction="copy"
                                      disabled={false}
                                      name="--some-background"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                  ],
                                }
                              }
                              wrappingComponentProps={null}
                            />,
                          },
                          "tag": 0,
                        },
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component="div"
                              context={null}
                              props={
                                Object {
                                  "children": Array [
                                    <div
                                      id="#source"
                                      style={
                                        Object {
                                          "background": "var(--some-background)",
                                          "color": "var(--some-color)",
                                        }
                                      }
                                    >
                                      Hello.
                                    </div>,
                                    <StyleInput
                                      disabled={false}
                                      name="--some-color"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                    <ComputedStyleInput
                                      compute={[Circular]}
                                      computeFunction="copy"
                                      disabled={false}
                                      name="--some-background"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                  ],
                                }
                              }
                              wrappingComponentProps={null}
                            />,
                          },
                          "tag": 0,
                        },
                      },
                    },
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 32,
                    "elementType": null,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 210,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 128,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": [Circular],
                      "pendingProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "ref": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": [Circular],
                      "stateNode": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component="div"
                        context={null}
                        props={
                          Object {
                            "children": Array [
                              <div
                                id="#source"
                                style={
                                  Object {
                                    "background": "var(--some-background)",
                                    "color": "var(--some-color)",
                                  }
                                }
                              >
                                Hello.
                              </div>,
                              <StyleInput
                                disabled={false}
                                name="--some-color"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                              <ComputedStyleInput
                                compute={[Circular]}
                                computeFunction="copy"
                                disabled={false}
                                name="--some-background"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            id="#source"
                          >
                            Hello.
                          </div>
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 25,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component="div"
                          context={null}
                          props={
                            Object {
                              "children": Array [
                                <div
                                  id="#source"
                                  style={
                                    Object {
                                      "background": "var(--some-background)",
                                      "color": "var(--some-color)",
                                    }
                                  }
                                >
                                  Hello.
                                </div>,
                                <StyleInput
                                  disabled={false}
                                  name="--some-color"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                                <ComputedStyleInput
                                  compute={[Circular]}
                                  computeFunction="copy"
                                  disabled={false}
                                  name="--some-background"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                              ],
                            }
                          }
                          wrappingComponentProps={null}
                        />,
                      },
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": null,
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": null,
                    },
                  },
                  "pendingProps": Object {
                    "Component": "div",
                    "context": null,
                    "props": Object {
                      "children": Array [
                        <div
                          id="#source"
                          style={
                            Object {
                              "background": "var(--some-background)",
                              "color": "var(--some-color)",
                            }
                          }
                        >
                          Hello.
                        </div>,
                        <StyleInput
                          disabled={false}
                          name="--some-color"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                        <ComputedStyleInput
                          compute={[Circular]}
                          computeFunction="copy"
                          disabled={false}
                          name="--some-background"
                          source={
                            Object {
                              "current": <div
                                id="#source"
                              >
                                Hello.
                              </div>,
                            }
                          }
                          type="color"
                        />,
                      ],
                    },
                    "wrappingComponentProps": null,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 206,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 206,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 1073741823,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div>
                            <div
                              id="#source"
                            >
                              Hello.
                            </div>
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                            <input
                              type="color"
                              value="#FFFFFF"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 25,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component="div"
                              context={null}
                              props={
                                Object {
                                  "children": Array [
                                    <div
                                      id="#source"
                                      style={
                                        Object {
                                          "background": "var(--some-background)",
                                          "color": "var(--some-color)",
                                        }
                                      }
                                    >
                                      Hello.
                                    </div>,
                                    <StyleInput
                                      disabled={false}
                                      name="--some-color"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                    <ComputedStyleInput
                                      compute={[Circular]}
                                      computeFunction="copy"
                                      disabled={false}
                                      name="--some-background"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                  ],
                                }
                              }
                              wrappingComponentProps={null}
                            />,
                          },
                          "tag": 0,
                        },
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component="div"
                              context={null}
                              props={
                                Object {
                                  "children": Array [
                                    <div
                                      id="#source"
                                      style={
                                        Object {
                                          "background": "var(--some-background)",
                                          "color": "var(--some-color)",
                                        }
                                      }
                                    >
                                      Hello.
                                    </div>,
                                    <StyleInput
                                      disabled={false}
                                      name="--some-color"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                    <ComputedStyleInput
                                      compute={[Circular]}
                                      computeFunction="copy"
                                      disabled={false}
                                      name="--some-background"
                                      source={
                                        Object {
                                          "current": <div
                                            id="#source"
                                          >
                                            Hello.
                                          </div>,
                                        }
                                      }
                                      type="color"
                                    />,
                                  ],
                                }
                              }
                              wrappingComponentProps={null}
                            />,
                          },
                          "tag": 0,
                        },
                      },
                    },
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 32,
                    "elementType": null,
                    "expirationTime": 0,
                    "firstEffect": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 210,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 128,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": [Circular],
                      "pendingProps": Object {
                        "children": "Hello.",
                        "id": "#source",
                        "style": Object {
                          "background": "var(--some-background)",
                          "color": "var(--some-color)",
                        },
                      },
                      "ref": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": [Circular],
                      "stateNode": <div
                        id="#source"
                      >
                        Hello.
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component="div"
                        context={null}
                        props={
                          Object {
                            "children": Array [
                              <div
                                id="#source"
                                style={
                                  Object {
                                    "background": "var(--some-background)",
                                    "color": "var(--some-color)",
                                  }
                                }
                              >
                                Hello.
                              </div>,
                              <StyleInput
                                disabled={false}
                                name="--some-color"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                              <ComputedStyleInput
                                compute={[Circular]}
                                computeFunction="copy"
                                disabled={false}
                                name="--some-background"
                                source={
                                  Object {
                                    "current": <div
                                      id="#source"
                                    >
                                      Hello.
                                    </div>,
                                  }
                                }
                                type="color"
                              />,
                            ],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <div>
                          <div
                            id="#source"
                          >
                            Hello.
                          </div>
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                          <input
                            type="color"
                            value="#FFFFFF"
                          />
                        </div>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "didError": false,
                      "earliestPendingTime": 0,
                      "earliestSuspendedTime": 0,
                      "expirationTime": 0,
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "interactionThreadID": 25,
                      "latestPendingTime": 0,
                      "latestPingedTime": 0,
                      "latestSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextExpirationTimeToWorkOn": 0,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component="div"
                          context={null}
                          props={
                            Object {
                              "children": Array [
                                <div
                                  id="#source"
                                  style={
                                    Object {
                                      "background": "var(--some-background)",
                                      "color": "var(--some-color)",
                                    }
                                  }
                                >
                                  Hello.
                                </div>,
                                <StyleInput
                                  disabled={false}
                                  name="--some-color"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                                <ComputedStyleInput
                                  compute={[Circular]}
                                  computeFunction="copy"
                                  disabled={false}
                                  name="--some-background"
                                  source={
                                    Object {
                                      "current": <div
                                        id="#source"
                                      >
                                        Hello.
                                      </div>,
                                    }
                                  }
                                  type="color"
                                />,
                              ],
                            }
                          }
                          wrappingComponentProps={null}
                        />,
                      },
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": null,
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": null,
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": "div",
                      "context": null,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "refs": Object {},
                    "rootFinderInstance": null,
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "children": Array [
                          <div
                            id="#source"
                            style={
                              Object {
                                "background": "var(--some-background)",
                                "color": "var(--some-color)",
                              }
                            }
                          >
                            Hello.
                          </div>,
                          <StyleInput
                            disabled={false}
                            name="--some-color"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                          <ComputedStyleInput
                            compute={[Circular]}
                            computeFunction="copy"
                            disabled={false}
                            name="--some-background"
                            source={
                              Object {
                                "current": <div
                                  id="#source"
                                >
                                  Hello.
                                </div>,
                              }
                            }
                            type="color"
                          />,
                        ],
                      },
                      "wrappingComponentProps": null,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div>
                  <div
                    id="#source"
                  >
                    Hello.
                  </div>
                  <input
                    type="color"
                    value="#FFFFFF"
                  />
                  <input
                    type="color"
                    value="#FFFFFF"
                  />
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": ComputedStyleInput {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "onComputeChange": [Function],
                "props": Object {
                  "className": undefined,
                  "compute": [Circular],
                  "computeFunction": "copy",
                  "disabled": false,
                  "name": "--some-background",
                  "onChange": undefined,
                  "source": Object {
                    "current": <div
                      id="#source"
                    >
                      Hello.
                    </div>,
                  },
                  "type": "color",
                },
                "refs": Object {},
                "self": Object {
                  "current": StyleInput {
                    "_reactInternalFiber": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 214,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 215,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "input",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "className": undefined,
                          "disabled": false,
                          "onChange": [Function],
                          "type": "color",
                          "value": "#FFFFFF",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "className": undefined,
                          "disabled": false,
                          "onChange": [Function],
                          "type": "color",
                          "value": "#FFFFFF",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <input
                          type="color"
                          value="#FFFFFF"
                        />,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "input",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 129,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "className": undefined,
                        "disabled": false,
                        "name": "--some-background",
                        "onChange": undefined,
                        "source": Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        },
                        "type": "color",
                      },
                      "memoizedState": Object {
                        "value": "#FFFFFF",
                      },
                      "mode": 0,
                      "nextEffect": [Circular],
                      "pendingProps": Object {
                        "className": undefined,
                        "disabled": false,
                        "name": "--some-background",
                        "onChange": undefined,
                        "source": Object {
                          "current": <div
                            id="#source"
                          >
                            Hello.
                          </div>,
                        },
                        "type": "color",
                      },
                      "ref": [Circular],
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": [Circular],
                      "tag": 1,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "eventListeners": Array [],
                    "onChange": [Function],
                    "props": Object {
                      "className": undefined,
                      "disabled": false,
                      "name": "--some-background",
                      "onChange": undefined,
                      "source": Object {
                        "current": <div
                          id="#source"
                        >
                          Hello.
                        </div>,
                      },
                      "type": "color",
                    },
                    "refs": Object {},
                    "state": Object {
                      "value": "#FFFFFF",
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                },
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "stateNode": [Circular],
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_reactInternalInstance": Object {},
          "context": Object {},
          "eventListeners": Array [
            [Function],
          ],
          "onChange": [Function],
          "props": Object {
            "disabled": false,
            "name": "--some-color",
            "source": Object {
              "current": <div
                id="#source"
              >
                Hello.
              </div>,
            },
            "type": "color",
          },
          "refs": Object {},
          "state": Object {
            "value": "#FFFFFF",
          },
          "updater": Object {
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
          },
        },
      }
    }
    computeFunction="copy"
    disabled={false}
    name="--some-background"
    source={
      Object {
        "current": <div
          id="#source"
        >
          Hello.
        </div>,
      }
    }
    type="color"
  >
    <StyleInput
      disabled={false}
      name="--some-background"
      source={
        Object {
          "current": <div
            id="#source"
          >
            Hello.
          </div>,
        }
      }
      type="color"
    >
      <input
        disabled={false}
        onChange={[Function]}
        type="color"
        value="#FFFFFF"
      />
    </StyleInput>
  </ComputedStyleInput>
</div>
`;

exports[`Storyshots DrawerLayout playground 1`] = `
<div>
  <style>
    .sb-show-main { margin: 0; }
  </style>
  <div
    style={
      Object {
        "height": "100vh",
        "width": "100vw",
      }
    }
  >
    <DrawerLayout
      open={true}
      renderDrawer={[Function]}
      side="left"
      snapBehavior="range"
      snapPoints={
        Array [
          30,
          50,
          100,
        ]
      }
    >
      <div
        className="container"
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <div
          className="drawer  left open"
          style={
            Object {
              "height": "100%",
              "width": "30%",
            }
          }
        >
          <div
            className="handle"
            onMouseDown={[Function]}
            role="presentation"
          />
          <div
            className="content"
          >
            <div
              style={
                Object {
                  "color": "white",
                  "height": "100%",
                  "width": "100%",
                }
              }
            >
              I am drawer content. Yippee!!!
            </div>
          </div>
        </div>
        <div
          className="viewport"
        >
          <div
            style={
              Object {
                "color": "black",
                "height": "100%",
                "width": "100%",
              }
            }
          >
            <p>
              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas in sem magna. Aliquam ultrices convallis cursus. In hac habitasse platea dictumst. Quisque eu tellus magna. Curabitur aliquam luctus ex. Maecenas purus arcu, tincidunt non sapien quis, finibus vestibulum ante.
            </p>
            <p>
              Curabitur vulputate et ligula in congue. Phasellus ac imperdiet libero, sagittis interdum elit. Suspendisse potenti.
            </p>
          </div>
        </div>
      </div>
    </DrawerLayout>
  </div>
</div>
`;

exports[`Storyshots HelloWorld custom style 1`] = `
<HelloWorld
  style={
    Object {
      "backgroundColor": "pink",
      "border": "5px dotted limegreen",
    }
  }
  title="custom style"
>
  <button
    className="helloWorld"
    onClick={[Function]}
  >
    <h1
      className="title"
      style={
        Object {
          "backgroundColor": "pink",
          "border": "5px dotted limegreen",
        }
      }
    >
      Hello 
      custom style
    </h1>
  </button>
</HelloWorld>
`;

exports[`Storyshots HelloWorld playground 1`] = `
<HelloWorld
  title="World!"
>
  <button
    className="helloWorld"
    onClick={[Function]}
  >
    <h1
      className="title"
    >
      Hello 
      World!
    </h1>
  </button>
</HelloWorld>
`;

exports[`Storyshots HelloWorld with rainbow 1`] = `
<HelloWorld
  rainbow={true}
  title="World!"
>
  <button
    className="helloWorld"
    onClick={[Function]}
  >
    <h1
      className="title rainbow "
    >
      Hello 
      World!
    </h1>
  </button>
</HelloWorld>
`;

exports[`Storyshots HelloWorld with title 1`] = `
<HelloWorld
  title="home"
>
  <button
    className="helloWorld"
    onClick={[Function]}
  >
    <h1
      className="title"
    >
      Hello 
      home
    </h1>
  </button>
</HelloWorld>
`;

exports[`Storyshots SideBarLayout playground 1`] = `
<div>
  <style>
    .sb-show-main { margin: 0; }
  </style>
  <div
    style={
      Object {
        "height": "100vh",
        "width": "100vw",
      }
    }
  >
    <SideBarLayout
      renderSideBar={[Function]}
      side="left"
    >
      <div
        className="container "
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <div
          className="sidebar left"
        >
          <div>
            <button>
              1
            </button>
            <button>
              2
            </button>
            <button>
              3
            </button>
            <button>
              4
            </button>
            <button>
              5
            </button>
          </div>
        </div>
        <div
          className="viewport"
        >
          <div
            style={
              Object {
                "color": "black",
                "height": "100%",
                "width": "100%",
              }
            }
          >
            <p>
              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas in sem magna. Aliquam ultrices convallis cursus. In hac habitasse platea dictumst. Quisque eu tellus magna. Curabitur aliquam luctus ex. Maecenas purus arcu, tincidunt non sapien quis, finibus vestibulum ante.
            </p>
            <p>
              Curabitur vulputate et ligula in congue. Phasellus ac imperdiet libero, sagittis interdum elit. Suspendisse potenti.
            </p>
          </div>
        </div>
      </div>
    </SideBarLayout>
  </div>
</div>
`;

exports[`Storyshots StyleInput playground 1`] = `
<div>
  <div
    id="#source"
    style={
      Object {
        "color": "var(--color)",
      }
    }
  >
    Hiya.
  </div>
  <StyleInput
    disabled={false}
    name="--color"
    source={
      Object {
        "current": <div
          id="#source"
        >
          Hiya.
        </div>,
      }
    }
    type="color"
  >
    <input
      disabled={false}
      onChange={[Function]}
      type="color"
      value="#FFFFFF"
    />
  </StyleInput>
</div>
`;

exports[`Storyshots WorkspaceLayout playground 1`] = `
<div>
  <style>
    .sb-show-main { margin: 0; }
  </style>
  <div
    style={
      Object {
        "height": "100vh",
        "width": "100vw",
      }
    }
  >
    <WorkspaceLayout
      renderBackground={[Function]}
      renderForeground={[Function]}
    >
      <section
        className="container "
      >
        <div
          className="foreground"
        >
          <div
            style={
              Object {
                "background": "dodgerblue",
              }
            }
          >
            Sed diam est, fermentum et blandit id, blandit ut est. Morbi venenatis interdum magna id feugiat. Nunc vestibulum sit amet massa ut malesuada. Donec non tortor eu ex feugiat finibus et non dolor. Integer in leo lorem. Nam accumsan finibus libero vehicula viverra. Fusce pulvinar sapien in tincidunt fermentum. Quisque vehicula convallis ullamcorper. Etiam luctus volutpat nisi, ut feugiat risus maximus tempus. Donec tincidunt accumsan sem. Donec vitae orci nec nisi scelerisque mollis. Ut fermentum sem eu magna volutpat semper. Suspendisse porta dui sit amet nulla hendrerit tincidunt. Nam eget diam sed libero tincidunt volutpat in non nisl. Cras id venenatis magna, sed facilisis tellus. Morbi lacinia at ante at congue.
          </div>
        </div>
        <div
          className="background"
        >
          <div>
            Duis imperdiet enim ut augue molestie elementum. In sagittis volutpat rutrum. Cras facilisis libero libero, in tempor ipsum rutrum vitae. Proin congue, odio eu consequat ultricies, lorem tellus blandit ex, a pulvinar ligula felis a nisi. Pellentesque fermentum a metus ac consectetur. In eros dolor, auctor nec elementum vel, iaculis vitae felis. In consectetur aliquam lorem, quis porta turpis molestie a. Quisque consectetur vulputate sem, nec cursus sem aliquet non. Pellentesque diam velit, ornare venenatis elit nec, pretium interdum libero. In vestibulum purus lectus, sit amet condimentum ante pellentesque vitae. Praesent ut tincidunt sapien, eu sollicitudin leo.
          </div>
        </div>
      </section>
    </WorkspaceLayout>
  </div>
</div>
`;
