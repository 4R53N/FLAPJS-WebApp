/********* APP CONTENT *********/
:local(.app_content) {
  /*TODO: This is still dependent on the parent having display: flex.*/
  flex-grow: 1;

  display: flex;
  flex-direction: row;
}
:local(.app_content).column {
  flex-direction: column;
}

/********* APP VIEWPORT *********/
:local(.app_viewport) {
  --color-viewport-main: none;
  --color-viewport-main-dark: lightgray;
  --color-viewport-accent: gold;
  --color-viewport-text: black;

  flex-grow: 1;

  /* think of the children */
  position: relative;

  background: var(--color-viewport-main);
  color: var(--color-viewport-text);
  outline: 10px dashed var(--color-viewport-main-dark);
  outline-offset: -20px;
}

/********* APP DRAWER *********/
:local(.app_drawer) {
  --drawer-width: 300px;
  --drawer-tab-height: 32px;
  --drawer-handle-width: 4px;/* 12px on open */

  --color-drawer-main: darkgray;
  --color-drawer-main-dark: gray;
  --color-drawer-accent: gold;
  --color-drawer-text: black;
  --color-drawer-text-active: white;

  position: relative;
  z-index: 500;
  width: var(--drawer-width);
  display: flex;
  flex-direction: row;
  flex-shrink: 0;

  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.5);
  background: var(--color-drawer-main);

  /* Drawer sliding */
  margin-left: calc(var(--drawer-handle-width) + var(--drawer-tab-height) - var(--drawer-width));
  left: calc(var(--drawer-width) - var(--drawer-tab-height) - var(--drawer-handle-width));
  transition:
    /* TODO: Although it looks nice, it is bad at transitions */
    /* margin-left 0.3s ease, */
    left 0.3s ease;
}
:local(.app_drawer).open {
  /* Drawer sliding */
  margin-left: 0;
  left: 0;
}
/* for hide animation */
:local(.app_drawer).hide {
  margin-left: calc(var(--drawer-width) * -1);
  left: calc(var(--drawer-width) + 5px);/*box shadow offset*/

  visibility: hidden;
  transition: left 0.3s ease,
    visibility 0s linear 0.3s;/* for hide animation */
}
:local(.app_drawer).drawer-side-bottom.hide {
  margin-top: calc(var(--drawer-width) * -1);
  top: calc(var(--drawer-width) + 5px);/*box shadow offset*/

  visibility: hidden;
  transition: top 0.3s ease,
    visibility 0s linear 0.3s;/* for hide animation */
}

/** ICON STYLES **/
:local(.app_drawer) .icon-button {
  fill: var(--color-drawer-text);
  transition: fill 0.3s ease;
}
:local(.app_drawer) .icon-button:hover {
  fill: var(--color-drawer-text-active);
}
:local(.app_drawer) .icon-button:disabled {
  fill: var(--color-drawer-main-dark);
}

/********* DRAWER HANDLE *********/
:local(.drawer_handle) {
  width: var(--drawer-handle-width);
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;

  user-select: none;
  cursor: auto;

  color: var(--color-drawer-main);
  background: var(--color-drawer-main-dark);

  transition: width 0.1s ease 0.3s;
}
:local(.drawer_handle) > * {
  transform: rotateZ(0deg);

  /* Hide drawer handle when open */
  opacity: 0;
  transition: opacity 0.1s ease 0.3s;
}
:local(.drawer_handle).show {
  /* Show drawer handle when open */
  --drawer-handle-width: 12px;
  cursor: col-resize;
}
:local(.drawer_handle).show > * {
  /* Show drawer handle when open */
  opacity: 1;
}
.drawer-side-bottom :local(.drawer_handle) > * {
  transform: rotateZ(90deg);
}
/********* DRAWER CONTENT *********/
:local(.drawer_content) {
  width: calc(var(--drawer-width) - var(--drawer-handle-width));
  display: flex;
  flex-direction: column;

  /* NOTE: Remove this to make sure no content is outside of drawer */
  overflow: hidden;
}

/********* DRAWER CONTENT BAR *********/
:local(.drawer_content_bar) {
  width: 100%;
  min-width: var(--drawer-tab-height);
  min-height: var(--drawer-tab-height);
  display: flex;
  flex-direction: row;
  overflow-x: auto;
  overflow-y: hidden;

  background: var(--color-drawer-main);

  /* remove scrollbar */
  -ms-overflow-style: none;

  /* for hiding content */
  outline: 10px dashed transparent;
  outline-offset: -20px;
}
/* remove scrollbar */
:local(.drawer_content_bar)::-webkit-scrollbar {
  display: none;
}
:local(.drawer_content_bar) > * {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-grow: 1;
  min-width: 64px;
  min-height: 0px;

  user-select: none;
  cursor: pointer;
}
:local(.drawer_tab_expander) {
  position: sticky;
  top: 0;
  left: 0;
  z-index: 501;

  /*NOTE: Whether drawer expander should be centered*/
  /*margin: auto auto;*/
  min-width: var(--drawer-tab-height)!important;
  max-width: var(--drawer-tab-height)!important;
  min-height: var(--drawer-tab-height)!important;
  max-height: var(--drawer-tab-height)!important;
  width: var(--drawer-tab-height);
  height: var(--drawer-tab-height);

  transform: rotateZ(90deg);
}
:local(.drawer_tab_expander) {
  background: var(--color-drawer-main);
}
:local(.app_drawer).open :local(.drawer_tab_expander) {
  transform: rotateZ(-90deg);
}
:local(.app_drawer).drawer-side-bottom :local(.drawer_tab_expander) {
  transform: rotateZ(180deg);
}
:local(.app_drawer).open.drawer-side-bottom :local(.drawer_tab_expander) {
  transform: rotateZ(0deg);
}
:local(.drawer_tab_next).icon-button {
  margin: auto auto;
  min-width: var(--drawer-tab-height);
  max-width: var(--drawer-tab-height);
  min-height: var(--drawer-tab-height);
  max-height: var(--drawer-tab-height);
}
:local(.drawer_tab) {
  visibility: visible;
  opacity: 1.0;
  padding-top: 4px;
  padding-left: 0px;
  white-space: nowrap;

  color: var(--color-drawer-text);

  /* Hover animation */
  border-bottom: none;
  border-right: none;
  padding-right: 0px;
  transition: border-bottom 0.1s ease,
    padding-bottom 0.1s ease,
    border-right 0.1s ease,
    padding-right 0.1s ease,
    color 0.1s ease,
    opacity 0.1s ease, visibility 0s linear;/* for hiding content */
}
:local(.drawer_tab) > * {
  pointer-events: none;
}
:local(.drawer_tab):hover {
  color: var(--color-drawer-text-active);
}
:local(.drawer_tab).active {
  color: var(--color-drawer-accent);

  /* Hover animation */
  border-bottom: 4px solid currentColor;
  padding-bottom: 2px;
  border-right: none;
  padding-right: 0px;
}
/* for hiding content */
:local(.app_drawer).open.hide-content :local(.drawer_tab) {
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.1s ease, visibility 0s linear 0.1s
}
:local(.app_drawer).open.hide-content :local(.drawer_content_bar) {
  outline: 10px dashed var(--color-drawer-main-dark);
  transition: outline 0.1s ease 0.1s;
}
/* Sideways drawer tabs */
:local(.app_drawer).drawer-bar-sideways :local(.drawer_content) {
  flex-direction: row;
}
:local(.app_drawer).drawer-bar-sideways :local(.drawer_content_bar) {
  width: var(--drawer-tab-height);
  height: 100%;
  flex-direction: column;

  overflow-x: hidden;
  overflow-y: auto;
}
:local(.app_drawer).drawer-bar-sideways :local(.drawer_content_bar) > * {
  min-width: 0px;
  min-height: 64px;
}
:local(.app_drawer).drawer-bar-sideways :local(.drawer_tab) {
  padding-top: 0px;
  padding-left: 4px;
}
:local(.app_drawer).drawer-bar-sideways :local(.drawer_tab) > * {
  flex-grow: 1;
  transform: rotateZ(-90deg);
}
:local(.app_drawer).drawer-bar-sideways :local(.drawer_tab).active {
  /* Hover animation */
  border-bottom: none;
  padding-bottom: 0px;
  border-right: 4px solid currentColor;
  padding-right: 2px;
}

/********* DRAWER PANELS *********/
:local(.drawer_panel_container) {
  width: 100%;
  height: 100%;
  overflow-y: auto;

  /* for hiding content */
  outline: 10px dashed transparent;
  outline-offset: -20px;
}
:local(.drawer_content_panel) {
  width: 100%;
  height: 100%;

  /* for hiding content */
  visibility: visible;
  opacity: 1;
  transition: opacity 0.1s ease, visibility 0s linear;
}
/* for hiding content */
:local(.app_drawer).hide-content :local(.drawer_panel_container) {
  outline: 10px dashed var(--color-drawer-main-dark);
  transition: outline 0.1s ease 0.1s;
}
:local(.app_drawer).hide-content :local(.drawer_content_panel) {
  visibility: hidden;
  opacity: 0;
  transition: opacity 0.1s ease 0.1s, visibility 0s linear 0.2s;
}

/********* BOTTOM DRAWER *********/
:local(.app_drawer).drawer-side-bottom {
  width: 100%;
  height: var(--drawer-width);
  flex-direction: column;

  /* Drawer sliding */
  margin-top: calc(var(--drawer-handle-width) + var(--drawer-tab-height) - var(--drawer-width));
  top: calc(var(--drawer-width) - var(--drawer-tab-height) - var(--drawer-handle-width));
  transition:
    /* TODO: Although it looks nice, it is bad at transitions */
    /* margin-top 0.3s ease, */
    top 0.3s ease;
}
:local(.app_drawer).open.drawer-side-bottom {
  /* Drawer sliding */
  margin-top: 0;
  top: 0;
}
:local(.app_drawer).drawer-side-bottom :local(.drawer_handle) {
  height: var(--drawer-handle-width);
  width: 100%;

  transition: height 0.1s ease 0.3s;
}
:local(.app_drawer).drawer-side-bottom :local(.drawer_handle).show {
  /* Show drawer handle when open */
  cursor: row-resize;
}
:local(.app_drawer).drawer-side-bottom :local(.drawer_content) {
  height: calc(var(--drawer-width) - var(--drawer-handle-width));
  width: 100%;
}

/********* FULL DRAWER (OPENED) *********/
:local(.app_drawer).open.full {
  --drawer-width: 100vw!important;
}
:local(.app_drawer).open.drawer-side-bottom.full {
  --drawer-width: 100vh!important;
}
