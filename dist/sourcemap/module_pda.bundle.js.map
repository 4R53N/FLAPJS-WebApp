{"version":3,"sources":["webpack:///./src/app/modules/pda/machine/PDA.js","webpack:///./src/app/modules/pda/graph/PDANode.js","webpack:///./src/app/modules/pda/graph/PDAEdge.js","webpack:///./src/app/modules/pda/machine/PDABuilder.js","webpack:///./src/app/modules/pda/controller/MachineController.js","webpack:///./src/app/modules/pda/graph/PDAGraph.js","webpack:///./src/app/modules/pda/graph/PDAGraphLabeler.js","webpack:///./src/app/modules/pda/graph/PDAGraphParser.js","webpack:///./src/app/modules/pda/renderer/PDANodeRenderer.js","webpack:///./src/app/modules/pda/renderer/PDAEdgeRenderer.js","webpack:///./src/app/modules/pda/renderer/InitialMarkerRenderer.js","webpack:///./src/app/modules/pda/renderer/PDAGraphRenderer.js","webpack:///./src/app/modules/pda/renderer/PDALabelEditorRenderer.js","webpack:///./src/app/modules/pda/components/panels/overview/states/StateListElement.js","webpack:///./src/app/modules/pda/components/panels/overview/states/StateListView.js","webpack:///./src/app/modules/pda/components/panels/overview/alphabet/AlphabetListElement.js","webpack:///./src/app/modules/pda/components/panels/overview/alphabet/AlphabetListView.js","webpack:///./src/app/modules/pda/components/panels/overview/stackalphabet/StackAlphabetListElement.js","webpack:///./src/app/modules/pda/components/panels/overview/stackalphabet/StackAlphabetListView.js","webpack:///./src/app/modules/pda/components/panels/overview/AutoStateLabelView.js","webpack:///./src/app/modules/pda/components/panels/overview/OverviewPanel.js","webpack:///./src/app/modules/pda/components/panels/testing/TestItem.js","webpack:///./src/app/modules/pda/components/panels/testing/TestListView.js","webpack:///./src/app/modules/pda/notifications/TransitionErrorMessage.js","webpack:///./src/app/modules/pda/notifications/StateUnreachableWarningMessage.js","webpack:///./src/app/modules/pda/notifications/StateErrorMessage.js","webpack:///./src/app/modules/pda/PDAErrorChecker.js","webpack:///./src/app/modules/pda/components/panels/testing/TestingPanel.js","webpack:///./src/app/modules/pda/components/panels/analysis/AnalysisPanel.js","webpack:///./src/app/modules/pda/machine/util/SolvePDA.js","webpack:///./src/app/modules/pda/tester/TapeContext.js","webpack:///./src/app/modules/pda/tester/StringTester.js","webpack:///./src/app/modules/pda/components/views/EditPane.js","webpack:///./src/app/modules/pda/components/views/TapePane.js","webpack:///./src/app/modules/pda/exporter/PDAGraphExporter.js","webpack:///./src/app/modules/pda/PDAModule.js","webpack:///./src/app/experimental/components/IconButton.js","webpack:///./src/app/experimental/panels/PanelContainer.js","webpack:///./src/app/manager/export/AbstractGraphExporter.js","webpack:///./src/app/experimental/iconset/TinyDownIcon.js","webpack:///./src/app/experimental/iconset/TinyUpIcon.js","webpack:///./src/app/experimental/panels/PanelSection.js","webpack:///./src/app/input/AbstractInputHandler.js","webpack:///./src/app/experimental/UserUtil.js","webpack:///./src/app/manager/RenderManager.js","webpack:///./src/app/experimental/panels/PanelSwitch.js","webpack:///./src/app/experimental/iconset/UploadIcon.js","webpack:///./src/app/experimental/iconset/flat/JSONFileIcon.js","webpack:///./src/app/experimental/iconset/BoxAddIcon.js","webpack:///./src/app/experimental/iconset/RunningManIcon.js","webpack:///./src/app/experimental/components/IconUploadButton.js","webpack:///./src/app/experimental/iconset/DownloadIcon.js","webpack:///./src/app/experimental/iconset/EditPencilIcon.js","webpack:///./src/app/manager/undo/AbstractEventHandler.js","webpack:///./src/app/experimental/components/IconStateButton.js","webpack:///./src/app/experimental/iconset/FullscreenIcon.js","webpack:///./src/app/experimental/iconset/FullscreenExitIcon.js","webpack:///./src/app/experimental/widgets/FullscreenWidget.js","webpack:///./src/app/experimental/iconset/ZoomInIcon.js","webpack:///./src/app/experimental/iconset/ZoomOutIcon.js","webpack:///./src/app/experimental/widgets/ZoomWidget.js","webpack:///./src/app/experimental/iconset/PinpointIcon.js","webpack:///./src/app/experimental/widgets/FocusCenterWidget.js","webpack:///./src/app/experimental/widgets/NavbarWidget.js","webpack:///./src/app/experimental/panels/PanelDivider.js","webpack:///./src/app/manager/hotkey/HotKeyManager.js","webpack:///./src/app/renderer/EdgeRenderer.js","webpack:///./src/app/modules/nodalgraph/NodalGraphImageExporter.js","webpack:///./src/app/modules/nodalgraph/SafeGraphEventHandler.js","webpack:///./src/app/experimental/iconset/PageContentIcon.js","webpack:///./src/app/experimental/iconset/CrossIcon.js","webpack:///./src/app/experimental/iconset/AddIcon.js","webpack:///./src/app/experimental/iconset/SubtractIcon.js","webpack:///./src/app/experimental/iconset/CheckCircleIcon.js","webpack:///./src/app/experimental/iconset/CrossCircleIcon.js","webpack:///./src/app/experimental/iconset/PendingIcon.js","webpack:///./src/app/experimental/panels/PanelCheckbox.js","webpack:///./src/app/graph/GraphNodeSelectionBox.js","webpack:///./src/app/modules/nodalgraph/controller/GraphPicker.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/InputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphElementInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphNodeInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphInitialInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphEdgeInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphEndpointInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphNodeCreateInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/InputController.js","webpack:///./src/app/modules/nodalgraph/controller/GraphController.js","webpack:///./src/app/modules/nodalgraph/controller/SelectionBoxInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/ViewportInputHandler.js","webpack:///./src/app/system/patterninput/PatternInput.js","webpack:///./src/app/manager/labeleditor/LabelEditorView.js","webpack:///./src/app/manager/labeleditor/LabelEditorManager.js","webpack:///./src/app/modules/nodalgraph/manager/NodalGraphInputManager.js","webpack:///./src/app/modules/nodalgraph/controller/renderer/BoxRenderer.js","webpack:///./src/app/modules/nodalgraph/controller/renderer/HighlightRenderer.js","webpack:///./src/app/modules/nodalgraph/controller/renderer/SelectionBoxRenderer.js","webpack:///./src/app/modules/nodalgraph/controller/renderer/GraphInputRenderer.js","webpack:///./src/app/experimental/iconset/MoveIcon.js","webpack:///./src/app/experimental/widgets/ModeSelectTray.js","webpack:///./src/app/experimental/iconset/TrashCanDetailedIcon.js","webpack:///./src/app/experimental/widgets/TrashCanWidget.js","webpack:///./src/app/system/patterninput/PatternInputButton.js","webpack:///./src/app/experimental/iconset/TriangleIcon.js","webpack:///./src/app/experimental/iconset/DownArrowIcon.js","webpack:///./src/app/experimental/widgets/TapeWidget.js"],"names":["State","label","arguments","length","undefined","src","_classCallCheck","this","_label","_src","_id","GraphElement","getGraphElementID","guid","_createClass","key","value","result","Transition","from","to","_from","_to","_symbols","Map","Error","read","pop","push","symbol","Symbol","set","getHashString","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","values","iterator","next","done","getReadSymbol","getPopSymbol","getPushSymbol","err","return","dst","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","symbolString","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_Symbol","_read","_pop","_push","isEqualStack","stack1","stack2","temp","_iteratorNormalCompletion25","_didIteratorError25","_iteratorError25","_step25","_iterator25","element","_iteratorNormalCompletion26","_didIteratorError26","_iteratorError26","_step26","_iterator26","i","indexOf","splice","PDA","_states","_alphabet","_stackAlphabet","_transitions","_finalStates","Set","_customSymbols","_customStackSymbols","_startState","_errors","pda","clear","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","entries","_step4$value","_slicedToArray","copy","isStartState","isFinalState","add","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_step5$value","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_step6$value","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_step7$value","get","getSourceState","getStateID","getDestinationState","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","error","addState","state","stateID","has","size","delete","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","getStateLabel","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","id","readSymbol","popSymbol","pushSymbol","hasState","transitionKey","transition","hasSymbol","addSymbol","newTransition","_incrSymbolCount","_incrStackSymbolCount","symbols","getSymbols","index","_decrSymbolCount","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","symbolCount","stackSymbol","isCustomSymbol","isCustomStackSymbol","newSymbol","custom","keys","stack","_typeof","fromTransitionKey","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","startsWith","toState","validSymbols","getSymbolsByReadPop","_i2","validSymbol","newStack","slice","validPop","validPush","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_i3","doClosureTransition","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","s","flag","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","pair","thisPair","thisState","thisStack","transitions","getOutgoingTransitions","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21","string","_iteratorNormalCompletion22","_didIteratorError22","_iteratorError22","_step22","_iterator22","_iteratorNormalCompletion23","_didIteratorError23","_iteratorError23","_step23","_iterator23","_iteratorNormalCompletion24","_didIteratorError24","_iteratorError24","_step24","_iterator24","stringHash","PDANode","x","y","_this","PDANode_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","_accept","_custom","GraphNode","usePosition","_get","prototype","LINE_SEPARATOR","SYMBOL_SEPARATOR","READ_SEPARATOR","POP_SEPARATOR","EMPTY_CHAR","PDAEdge","PDAEdge_classCallCheck","PDAEdge_possibleConstructorReturn","PDAEdge_getPrototypeOf","QuadraticEdge","PDAEdge_get","line","readIndex","trim","popIndex","substring","getEdgeLabel","split","PDABuilder","PDABuilder_classCallCheck","PDABuilder_possibleConstructorReturn","PDABuilder_getPrototypeOf","_machine","AbstractMachineBuilder","graph","errors","warnings","customSymbols","Array","getCustomSymbols","customStackSymbols","getCustomStackSymbols","_i","setCustomSymbol","setCustomStackSymbol","nodeLabels","nodeOutgoings","edgePlaceholders","graphNodes","getNodes","graphEdges","getEdges","graphStart","getStartNode","node","nodeLabel","getNodeLabel","getNodeAccept","setFinalState","setStartState","edge","srcNode","getSourceNode","dstNode","getDestinationNode","isPlaceholder","srcState","getStateByID","dstState","edgeLabelLines","getEdgeLinesFromLabel","getEdgeSymbolsFromLine","addTransition","_step3$value","PDABuilder_slicedToArray","sharedStates","name","nodes","map","e","getSource","edges","unreachables","getUnreachableNodes","openList","startNode","queue","getNodeCount","startIndex","nextNodes","nextNode","MachineController","module","MachineController_classCallCheck","MachineController_possibleConstructorReturn","MachineController_getPrototypeOf","graphController","AbstractMachineController","MachineController_get","getGraphController","machine","getStates","createNode","setNodeLabel","setNodeAccept","getTransitions","getFirstGraphNodeByLabel","createEdge","setEdgeLabel","formatEdge","deleteEdge","startState","getStartState","setStartNode","GraphLayout","applyLayout","getGraph","shift","_machineBuilder","getMachine","getFinalStates","getAlphabet","addCustomSymbol","targets","getMachineBuilder","removeCustomSymbol","prevSymbol","nextSymbol","replace","renameCustomSymbol","clearCustomSymbols","getStackAlphabet","addCustomStackSymbol","removeCustomStackSymbol","renameCustomStackSymbol","clearCustomStackSymbols","PDAGraph","PDAGraph_classCallCheck","PDAGraph_possibleConstructorReturn","PDAGraph_getPrototypeOf","NodalGraph","_nodes","prev","edgeSource","edgeDestination","edgeLabel","_edges","otherEdge","otherLines","concat","join","isSelfLoop","HALFPI","Math","PI","isQuadratic","abs","getQuadratic","parallelEdgeHeight","setQuadratic","maxNodeSize","max","getNodeSize","x1","y1","x2","y2","dist12sq","vertical","m","b","x0","y0","sqrt","DEFAULT_NODE_LABEL_PREFIX","isValidSymbol","edgeLabelFormatter","allowNull","lines","symbolLength","j","PDAGraphLabeler","PDAGraphLabeler_classCallCheck","PDAGraphLabeler_possibleConstructorReturn","PDAGraphLabeler_getPrototypeOf","_prefix","_graphController","AbstractGraphLabeler","prefix","shouldAutoRenameNodes","otherNodes","nodeIndex","getNodeCustom","newNodeLabel","getDefaultNodeLabelPrefix","getNodesByLabel","JSON","parse","data","nodeDatas","nodeCount","min","edgeDatas","edgeCount","initialIndex","nodeIndices","nodeData","setNodeCustom","initialNode","edgeData","sourceNode","destinationNode","quadData","objectify","graphInitial","elementID","accept","quad","sourceIndex","destinationIndex","radians","initial","_version","PDANodeRenderer","props","PDANodeRenderer_classCallCheck","PDANodeRenderer_possibleConstructorReturn","PDANodeRenderer_getPrototypeOf","React","Component","react_default","a","createElement","className","cx","cy","r","fill","stroke","pointerEvents","style","userSelect","fontSize","textAnchor","PDAEdgeRenderer","PDAEdgeRenderer_classCallCheck","PDAEdgeRenderer_possibleConstructorReturn","PDAEdgeRenderer_getPrototypeOf","start","getStartPoint","end","getEndPoint","center","getCenterPoint","labels","edgeDir","getEdgeDirection","EdgeRenderer","directed","DIRECTED_FORWARD","direction","color","InitialMarkerRenderer","InitialMarkerRenderer_classCallCheck","InitialMarkerRenderer_possibleConstructorReturn","InitialMarkerRenderer_getPrototypeOf","d","PDAGraphRenderer","PDAGraphRenderer_classCallCheck","PDAGraphRenderer_possibleConstructorReturn","PDAGraphRenderer_getPrototypeOf","currentModule","inputController","getInputController","renderer_PDANodeRenderer","renderer_PDAEdgeRenderer","ghostInitialMarker","renderer_InitialMarkerRenderer","RECOMMENDED_SYMBOLS","DEFAULT_SYMBOLS","PDALabelEditorRenderer","PDALabelEditorRenderer_classCallCheck","PDALabelEditorRenderer_possibleConstructorReturn","PDALabelEditorRenderer_getPrototypeOf","labelEditor","parent","inputComponent","PatternInputButton","title","onClick","appendValue","alphabet","getMachineController","showRecommended","Style","tray_container","tray_used","renderSymbol","tray_default","StateListElement","StateListElement_classCallCheck","StateListElement_getPrototypeOf","onValueChange","bind","StateListElement_assertThisInitialized","onFocus","onBlur","onKeyDown","onKeyUp","target","setState","select","nextLabel","keyCode","preventDefault","stopPropagation","blur","onChange","inputValue","nodeCustom","nodeAccept","displayValue","element_container","spellCheck","width","StateListView","StateListView_classCallCheck","StateListView_getPrototypeOf","_prevX","_prevY","onElementAdd","StateListView_assertThisInitialized","onElementFocus","onElementBlur","onElementChange","focusOnNode","renameNode","applyAutoRename","deleteTargetNode","_this2","list_container","element_list","TriangleIcon","first_marker","overview_states_StateListElement","IconButton","add_button","BoxAddIcon","AlphabetListElement","AlphabetListElement_classCallCheck","AlphabetListElement_getPrototypeOf","_inputElement","AlphabetListElement_assertThisInitialized","focus","inputSymbol","displaySymbol","symbolUsed","used","ref","maxLength","AlphabetListView","AlphabetListView_classCallCheck","AlphabetListView_getPrototypeOf","newSymbolComponent","useNewSymbol","AlphabetListView_assertThisInitialized","machineController","isSymbol","renameSymbol","createSymbol","deleteSymbol","overview_alphabet_AlphabetListElement","isUsedSymbol","_this3","renderAlphabetList","display","StackAlphabetListElement","StackAlphabetListElement_classCallCheck","StackAlphabetListElement_getPrototypeOf","StackAlphabetListElement_assertThisInitialized","StackAlphabetListView","StackAlphabetListView_classCallCheck","StackAlphabetListView_getPrototypeOf","StackAlphabetListView_assertThisInitialized","isStackSymbol","renameStackSymbol","createStackSymbol","deleteStackSymbol","overview_stackalphabet_StackAlphabetListElement","isUsedStackSymbol","renderStackAlphabetList","AutoStateLabelView","AutoStateLabelView_classCallCheck","AutoStateLabelView_getPrototypeOf","onAutoStatePrefixSubmit","AutoStateLabelView_assertThisInitialized","onAutoStatePrefixFormat","graphLabeler","getGraphLabeler","setDefaultNodeLabelPrefix","select_container","select_label","FormattedInput","prefix_editor","defaultValue","captureOnExit","formatter","onSubmit","postfix_selector","onMachineTypeChange","disabled","OverviewPanel","OverviewPanel_classCallCheck","OverviewPanel_getPrototypeOf","onAutoLayoutApply","OverviewPanel_assertThisInitialized","onAutoLayoutChange","onAutoLabelChange","onSnapToGridChange","session","getSession","getCurrentModule","applyAutoLayout","setAutoRenameNodes","checked","drawer","autoRename","drawerFull","isDrawerFullscreen","PanelContainer","TITLE","PanelSection","full","overview_states_StateListView","overview_alphabet_AlphabetListView","overview_stackalphabet_StackAlphabetListView","PanelDivider","panels_overview_AutoStateLabelView","autolayout_button","isEmpty","I18N","toString","PanelSwitch","Object","defineProperty","DEFAULT_MODE","TestItem","TestItem_classCallCheck","TestItem_getPrototypeOf","inputElement","status","TestItem_assertThisInitialized","callback","nextValue","onDelete","onTest","active","placeholder","subtitle","test_item_container","test_button","CheckCircleIcon","CrossCircleIcon","PendingIcon","RunningManIcon","test_input","type","delete_button","SubtractIcon","ACCEPT_FILE_TYPES","TEST_FILENAME","TestListView","TestListView_classCallCheck","TestListView_getPrototypeOf","_testList","_testName","onTestNew","TestListView_assertThisInitialized","onTestUpload","onTestDownload","onTestClose","onTestAdd","onTestDelete","onTestTest","onTestRunAll","onGraphChange","getGraphChangeHandler","addListener","removeListener","resetStatus","fileBlob","reader","FileReader","onload","event","tests","test","abort","readAsText","testStrings","getValue","downloadText","tester","isTesting","stopTest","nextTest","item","forceImmediate","immediate","itemValue","startTest","then","promise","runTest","_this4","empty","test_container","test_control_tray","test_control_button","PageContentIcon","IconUploadButton","onUpload","UploadIcon","DownloadIcon","CrossIcon","test_list_container","test_list_add","AddIcon","test_list_count","test_list_scroll_container","test_list","testCallback","panels_testing_TestItem","test_list_runall","ARROW","TransitionErrorMessage","TransitionErrorMessage_classCallCheck","TransitionErrorMessage_getPrototypeOf","targetIndex","targetLabel","message","TransitionErrorMessage_assertThisInitialized","buttonValue","targetLength","focusOnEdge","deleteTargetEdges","close","text","StateUnreachableWarningMessage","StateUnreachableWarningMessage_classCallCheck","StateUnreachableWarningMessage_getPrototypeOf","StateUnreachableWarningMessage_assertThisInitialized","deleteTargetNodes","StateErrorMessage","StateErrorMessage_classCallCheck","StateErrorMessage_getPrototypeOf","StateErrorMessage_assertThisInitialized","PDAErrorChecker","PDAErrorChecker_classCallCheck","_machineController","_showErrorOnChange","onMachineChange","getMachineChangeHandler","machineBuilder","showErrors","enabled","getMachineErrors","getMachineWarnings","Notifications","clearMessages","addMessage","warning","TestingPanel","TestingPanel_classCallCheck","TestingPanel_getPrototypeOf","stepMode","onStepTestChange","TestingPanel_assertThisInitialized","onAutoErrorCheckChange","app","getApp","_tester","on","_viewport","setCurrentView","_drawer","setDrawerSoloClass","closeDrawer","openDrawer","errorChecker","getErrorChecker","errorCheck","isErrorChecking","setErrorChecking","getStringTester","panel_container","panels_testing_TestListView","AnalysisPanel","AnalysisPanel_classCallCheck","AnalysisPanel_getPrototypeOf","optimizeUnreachOption","optimizeRedundOption","onOptimizeMachine","AnalysisPanel_assertThisInitialized","unreachableArray","isChecked","onDeleteAllUnreachable","PanelCheckbox","analysis_button","canOptimize","solvePDAByStep","cachedStates","cachedSymbols","nextStates","nextIndex","cstate","doTerminalTransition","nextState","apply","TapeContext","inputString","infiniteLeft","infiniteRight","TapeContext_classCallCheck","_tapeInput","_left","_right","_index","finish","reset","TestTapeContext","StringTester_classCallCheck","StringTester_possibleConstructorReturn","StringTester_getPrototypeOf","getTestString","stepForward","stepBackward","resetPosition","getNodesAtPosition","changePosition","getPosition","StringTester","_testString","_testIndex","_tapeContext","_cachePath","_cachedResult","_resolve","_reject","registerEvent","testString","Promise","reject","emit","resolve","testResult","thenStop","isResult","relatedStateAndStack","prevCache","states","cachedState","nextCache","position","Eventable","mixin","EditPane","EditPane_classCallCheck","EditPane_possibleConstructorReturn","EditPane_getPrototypeOf","viewport","inputActionMode","isActionMode","view_pane","NavbarWidget","view_widget","right","bottom","left","ModeSelectTray","mode","modeIndex","setInputScheme","TrashCanWidget","TapePane","TapePane_classCallCheck","TapePane_possibleConstructorReturn","TapePane_getPrototypeOf","setDisabled","TapeWidget","getTapeContext","PDAGraphExporter","PDAGraphExporter_classCallCheck","PDAGraphExporter_possibleConstructorReturn","PDAGraphExporter_getPrototypeOf","AbstractGraphExporter","newGraph","JSONGraphParser","graphData","machineData","machineName","setProjectName","isArray","statePrefix","getModuleName","version","process","getModuleVersion","timestamp","Date","getProjectName","fromJSON","toJSON","filename","endsWith","getFileType","prevGraphHash","getHashCode","getUndoManager","captureEvent","jsonData","onerror","code","jsonString","stringify","JSONFileIcon","PDAModule","PDAModule_classCallCheck","_app","_inputManager","NodalGraphInputManager","PDAGraphParser","_errorChecker","getExportManager","addExporter","addExporters","DEFAULT_IMAGE_EXPORTERS","getViewportManager","addViewClass","getDrawerManager","addPanelClass","getHotKeyManager","registerHotKey","CTRL_KEY","console","log","SHIFT_KEY","getRenderManager","addRenderer","RENDER_LAYER_WORKSPACE","Fragment","pda_renderer_PDAGraphRenderer","workspace","GraphInputRenderer","setEventHandlerFactory","SafeGraphEventHandler","getGraphParser","initialize","onSessionStart","update","onSessionStop","destroy","UserUtil","getToolbarComponent","closeBar","showButtonLabel","SHOW_LABEL","react__WEBPACK_IMPORTED_MODULE_0___default","icon_button","children","panel_title","panel_content","panel_bottom","getLabel","toUpperCase","Icon","xmlns","height","viewBox","TinyUpIcon_classCallCheck","TinyUpIcon_possibleConstructorReturn","TinyUpIcon_getPrototypeOf","PanelSection_classCallCheck","PanelSection_getPrototypeOf","open","PanelSection_assertThisInitialized","isOpen","isDisabled","Children","count","isFull","section_container","section_header","TinyUpIcon","TinyDownIcon","section_content_container","section_content","AbstractInputHandler","pointer","zoomValue","prevValue","userClearGraph","graphOnly","window","confirm","__webpack_require__","__webpack_exports__","RENDER_LAYER_WORKSPACE_OVERLAY","RENDER_LAYER_VIEWPORT","RENDER_LAYER_VIEWPORT_OVERLAY","RenderManager","_renderMapping","layerID","rendererClass","switch_container","panel_switch","switch_slider","switch_label","htmlFor","points","onFileUpload","_assertThisInitialized","files","_IconButton_js__WEBPACK_IMPORTED_MODULE_2__","upload_button","upload_input","AbstractEventHandler","undoManager","IconStateButton","prevIndex","child","FullscreenIcon_classCallCheck","FullscreenIcon_possibleConstructorReturn","FullscreenIcon_getPrototypeOf","FullscreenExitIcon_classCallCheck","FullscreenExitIcon_possibleConstructorReturn","FullscreenExitIcon_getPrototypeOf","FullscreenWidget","FullscreenWidget_classCallCheck","FullscreenWidget_possibleConstructorReturn","FullscreenWidget_getPrototypeOf","components_IconStateButton","fullscreen_button","hide","FullscreenIcon","FullscreenExitIcon","ZoomInIcon_classCallCheck","ZoomInIcon_possibleConstructorReturn","ZoomInIcon_getPrototypeOf","ZoomOutIcon_classCallCheck","ZoomOutIcon_possibleConstructorReturn","ZoomOutIcon_getPrototypeOf","ZoomWidget","ZoomWidget_classCallCheck","ZoomWidget_getPrototypeOf","onZoomIn","ZoomWidget_assertThisInitialized","onZoomOut","viewScale","getScale","addScale","toFixed","zoom_container","zoom_button","ZoomInIcon","ZoomOutIcon","zoom_label","PinpointIcon_classCallCheck","PinpointIcon_possibleConstructorReturn","PinpointIcon_getPrototypeOf","FocusCenterWidget","FocusCenterWidget_classCallCheck","FocusCenterWidget_getPrototypeOf","FocusCenterWidget_assertThisInitialized","setOffset","center_focus_button","getOffsetX","getOffsetY","PinpointIcon","NavbarWidget_classCallCheck","NavbarWidget_possibleConstructorReturn","NavbarWidget_getPrototypeOf","getInputAdapter","getViewport","navbar_container","experimental_widgets_FullscreenWidget","navbar_widget","experimental_widgets_ZoomWidget","navbar_widget_container","experimental_widgets_FocusCenterWidget","panel_divider","HotKeyManager","_hotkeys","_cachedEvent","ctrlKey","metaKey","altKey","shiftKey","_prevHotKey","_repeatCount","_enabled","_altHotkey","ctrlIndex","metaIndex","altIndex","shiftIndex","charKey","ctrl","alt","localizedKeys","unshift","addEventListener","removeEventListener","hotkey","matchesHotKeyEvent","eventCtrl","eventAlt","eventShift","eventKey","repeat","captureKeyEvent","findMatchingHotKey","isKeyUp","SIXTH_PI","DIRECTED_NONE","DefaultEndpointRenderer","sin","angle","cos","DefaultLabelRenderer","transform","str","reverse","alignmentBaseline","fromAngle","toAngle","ForwardEndpointRenderer","forwardEndpointRenderer","endpointRenderer","BackwardEndpointRenderer","backwardEndpointRenderer","EdgeLabelRenderer","labelRenderer","fromPoint","toPoint","centerPoint","reverseLabel","quadLine","dftx","dfty","dfcx","dfcy","ftrad","atan2","fcrad","GraphImageExporter","imageType","FILE_TYPE_PNG","_imageType","offsetX","offsetY","bounds","getBoundingRect","dx","minX","dy","minY","w","EXPORT_PADDING_X","h","EXPORT_PADDING_Y","clone","cloneNode","setAttribute","uiElements","getElementsByClassName","remove","svgElement","getSVGElement","workspaceDim","baseVal","svg","processSVGForExport","downloadImageFromSVG","FILE_TYPE_JPG","FILE_TYPE_SVG","PNGIcon","JPGIcon","SVGIcon","graphParser","_graphParser","_graphData","prevEvent","getPreviousEvent","applyRedo","checkbox_container","GraphNodeSelectionBox","_boundingBox","fromX","fromY","toX","toY","visible","box","mx","my","lx","ly","clearSelection","getNodesWithin","includes","getSelection","GraphPicker","GraphPicker_classCallCheck","targetType","initialTarget","initialTargetType","updateTarget","hasTarget","document","body","cursor","setInitialTarget","getNodeByInitialMarkerAt","getEdgeByEndPointAt","getNodeAt","getEdgeAt","nodeSize","offset","EDGE_RADIUS","ENDPOINT_RADIUS","InputHandler","GraphElementInputHandler","GraphElementInputHandler_classCallCheck","_targetType","GraphNodeInputHandler","GraphNodeInputHandler_classCallCheck","GraphNodeInputHandler_possibleConstructorReturn","GraphNodeInputHandler_getPrototypeOf","getPicker","selectionBox","getSelectionBox","isTrashMode","prevX","prevY","hasSelection","deleteSelectedNodes","isMoveMode","openLabelEditor","toggleNode","picker","getDefaultEdgeLabel","isNewEdge","edgeQuad","prevQuad","prevEdgeTo","_snapToGrid","snapSize","_snapSize","round","moveMultipleNodesTo","moveNodeTo","onGraphIntentMoveAllNodes","onGraphIntentMoveNode","GraphInitialInputHandler","GraphInitialInputHandler_classCallCheck","GraphInitialInputHandler_possibleConstructorReturn","GraphInitialInputHandler_getPrototypeOf","prevInitial","onGraphIntentChangeInitial","GraphEdgeInputHandler","GraphEdgeInputHandler_classCallCheck","GraphEdgeInputHandler_possibleConstructorReturn","GraphEdgeInputHandler_getPrototypeOf","deleteTargetEdge","targetQuad","moveEdgeTo","onGraphIntentMoveEdge","GraphEndpointInputHandler","GraphEndpointInputHandler_classCallCheck","GraphEndpointInputHandler_possibleConstructorReturn","GraphEndpointInputHandler_getPrototypeOf","moveEndpointTo","onGraphIntentFinishEdge","onGraphIntentCreateEdge","onGraphIntentChangeDestination","shouldDestroyPointlessEdges","changeDestinationNode","GraphNodeCreateInputHandler","GraphNodeCreateInputHandler_classCallCheck","GraphNodeCreateInputHandler_possibleConstructorReturn","GraphNodeCreateInputHandler_getPrototypeOf","DEFAULT_SHOULD_DESTROY_POINTLESS_EDGE","InputController","inputAdapter","InputController_classCallCheck","InputController_possibleConstructorReturn","InputController_getPrototypeOf","_picker","_selectionBox","_swapMouseScheme","_trashMode","_disabled","_inputHandlers","AbstractInputController","_module","_inputAdapter","getPointerX","getPointerY","updateHoverTarget","updateInitialTarget","isTargetInSelection","handler","isTargetable","onAction","onDblAction","onDragStart","onDragMove","onDragStop","clearTarget","setViewportColor","shouldInputFirst","isAltInput","isDragging","isPointerActive","DEFAULT_AUTO_RENAME","GRAPH_REFRESH_RATE","GraphController","labeler","parser","GraphController_classCallCheck","GraphController_getPrototypeOf","_graphChangeHandler","GraphChangeHandler","setGraphController","GraphController_assertThisInitialized","labelEditorElement","shouldAutoLabel","AbstractGraphController","GraphController_get","_graph","getModule","_labeler","getDefaultNodeLabel","nextQuad","prevDestination","nextInitial","nextX","nextY","targetNodes","enable","random","selectedNode","selection","deleteNode","onGraphIntentDeleteNodes","other","diameter","nextDX","nextDY","pos","getInputEventPosition","changeInputEventPosition","setQuadraticByCoords","getInputManager","getLabelEditorManager","getLabelEditorComponent","prevLabel","openEditor","GraphEdge","ax","ay","SelectionBoxInputHandler","SelectionBoxInputHandler_classCallCheck","SelectionBoxInputHandler_possibleConstructorReturn","SelectionBoxInputHandler_getPrototypeOf","_inputController","beginSelection","isSelecting","updateSelection","endSelection","ViewportInputHandler","ViewportInputHandler_classCallCheck","ViewportInputHandler_possibleConstructorReturn","ViewportInputHandler_getPrototypeOf","getAdapter","addOffset","PatternInput","PatternInput_classCallCheck","PatternInput_getPrototypeOf","multiLine","_submitTimeout","_submit","submitOnBlur","_skipBlur","_skipSelect","PatternInput_assertThisInitialized","setTimeout","submit","activeElement","ignore","separator","format","maxlength","multiline","rows","LabelEditorView","LabelEditorView_classCallCheck","LabelEditorView_getPrototypeOf","_target","_targetCallback","onInputSubmit","LabelEditorView_assertThisInitialized","onInputBlur","graphElement","onCancel","_targetOnSubmit","_targetOnCancel","getLabelFormatter","setFormatter","resetValue","closeEditor","isEditorOpen","targetStyle","getElement","parentClientRect","getBoundingClientRect","screenPos","ctm","getScreenCTM","f","transformViewToScreen","offsetWidth","offsetHeight","top","editor_container","patterninput_PatternInput","saveOnExit","LabelEditorManager","LabelEditorManager_classCallCheck","_labelEditorComponent","_labelEditorRenderer","renderer","LabelEditorRenderer","manager_labeleditor_LabelEditorView","nodalGraph","labelEditorRenderer","NodalGraphInputManager_classCallCheck","_labelEditorManager","setLabelEditorRenderer","setLabeler","addInputHandler","_graphLabeler","BoxRenderer","HIGHLIGHT_LINE_ARRAY","HighlightRenderer","HighlightRenderer_classCallCheck","HighlightRenderer_possibleConstructorReturn","HighlightRenderer_getPrototypeOf","endpoint","strokeDashoffset","strokeDasharray","strokeWidth","SelectionBoxRenderer","SelectionBoxRenderer_classCallCheck","SelectionBoxRenderer_possibleConstructorReturn","SelectionBoxRenderer_getPrototypeOf","selectionBoundingBox","renderer_HighlightRenderer","renderer_BoxRenderer","GraphInputRenderer_classCallCheck","GraphInputRenderer_possibleConstructorReturn","GraphInputRenderer_getPrototypeOf","renderer_SelectionBoxRenderer","ModeSelectTray_classCallCheck","ModeSelectTray_getPrototypeOf","ModeSelectTray_assertThisInitialized","newValue","tray_button","EditPencilIcon","MoveIcon","TrashCanWidget_classCallCheck","TrashCanWidget_getPrototypeOf","forceActive","_doubleTapTimeout","onMouseEnter","TrashCanWidget_assertThisInitialized","onMouseLeave","onAnyMouseDownNotConsumed","setTrashMode","clearTimeout","documentElement","isUsingTouch","trash_container","TrashCanDetailedIcon","_timeout","onMouseDown","onAnyMouseUp","ignoreBlur","TapeWidget_classCallCheck","TapeWidget_getPrototypeOf","onTapeStepBackward","TapeWidget_assertThisInitialized","onTapeStepForward","onTapeFinish","onTapeReset","onTapeSkipForward","onTapeSkipBackward","onTapeStop","stop","tapeContext","tapeIndex","getCurrentTapeIndex","tape_container","tape_control_tray","isTapeLeftInfinite","DownArrowIcon","opacity","getTapeInput","activeRead","sourceStates","getTapeSourceStatesByIndex","setCurrentTapeIndex","sourceState","isTapeRightInfinite"],"mappings":"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","file":"module_pda.bundle.354f1d69123cef76f4b1.js","sourcesContent":["import GraphElement from 'graph/GraphElement.js';\nimport { guid, stringHash } from 'util/MathHelper.js';\n\nconst FROM_STATE_INDEX = 0;\nconst READ_SYMBOL_INDEX = 1;\nconst TO_STATE_INDEX = 2;\nconst POP_SYMBOL_INDEX = 3;\nconst PUSH_SYMBOL_INDEX = 4;\n\nexport const EMPTY_SYMBOL = '&empty';\n\nexport class State\n{\n  constructor(label=\"\", src=null)\n  {\n    this._label = label;\n\n    this._src = src;\n    this._id = src instanceof GraphElement ? src.getGraphElementID() : guid();\n  }\n\n  copy()\n  {\n    const result = new State();\n    result._label = this._label;\n    result._src = this._src;\n    result._id = this._id;\n    return result;\n  }\n\n  getStateLabel() { return this._label; }\n\n  getStateID() { return this._id; }\n  getSource() { return this._src; }\n\n  getHashString()\n  {\n    return this._id;\n  }\n}\n\nexport class Transition\n{\n  constructor(from, to)\n  {\n    this._from = from;\n    this._to = to;\n    this._symbols = new Map();\n  }\n\n  copy()\n  {\n    const result = new Transition();\n    result._from = this._from;\n    result._to = this._to;\n\n    throw new Error(\"Not yet implemented\");\n    result._symbols = this._symbols.slice();\n\n    return result;\n  }\n\n  getSourceState() { return this._from; }\n  getDestinationState() { return this._to; }\n\n  addSymbol(read, pop, push)\n  {\n    const symbol = new Symbol(read, pop, push);\n    this._symbols.set(symbol.getHashString(), symbol);\n  }\n\n  hasSymbol(read, pop=null, push=null)\n  {\n    for(const symbol of this._symbols.values())\n    {\n      if (symbol.getReadSymbol() === read)\n      {\n        if (!pop || symbol.getPopSymbol() === pop)\n        {\n          if (!push || symbol.getPushSymbol() === push)\n          {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  getSymbolsByReadPop(read, pop=null, dst=[])\n  {\n    for(const symbol of this._symbols.values())\n    {\n      if (symbol.getReadSymbol() === read)\n      {\n        if (!pop || symbol.getPopSymbol() === pop)\n        {\n          dst.push(symbol);\n        }\n      }\n    }\n    return dst;\n  }\n\n  getSymbols() { return this._symbols.values(); }\n\n  getHashString()\n  {\n    let symbolString = \"\";\n    for(const symbol of this._symbols.values())\n    {\n      symbolString += symbol.getHashString() + \",\";\n    }\n    return this._from.getHashString() + \":\" + symbolString + \":\" + this._to.getHashString();\n  }\n}\n\nexport class Symbol\n{\n  constructor(read, pop, push)\n  {\n    this._read = read;\n    this._pop = pop;\n    this._push = push;\n  }\n\n  getReadSymbol() { return this._read; }\n  getPopSymbol() { return this._pop; }\n  getPushSymbol() { return this._push; }\n\n  getHashString()\n  {\n    return this._read + \";\" + this._pop + \";\" + this._push;\n  }\n}\n\nclass PDA\n{\n  constructor()\n  {\n    //state id -> state\n    this._states = new Map();\n    //symbol -> symbol use counter\n    this._alphabet = new Map();\n    this._stackAlphabet = new Map();\n    //transition key (from + to) -> transition object\n    this._transitions = new Map();\n    this._finalStates = new Set();\n    this._customSymbols = new Set();\n    this._customStackSymbols = new Set();\n    this._startState = null;\n\n    this._errors = [];\n  }\n\n  /**\n   * Performs a shallow copy of the 2 machines. Any changes to a state will be\n   * reflected in both. However, changes to transitions, alphabet, and final\n   * states will not propagate.\n   */\n   //FIXME: This is not a valid copy\n  copy(pda)\n  {\n    //You are already yourself, don't copy nothing.\n    if (pda === this) return;\n\n    //Make room for the copy...\n    this.clear();\n\n    //Copy state\n    for(const [key, value] of pda._states.entries())\n    {\n      const result = value.copy();\n      this._states.set(key, result);\n\n      //Copy start state\n      if (pda.isStartState(value))\n      {\n        this._startState = result;\n      }\n      //Copy final states\n      if (pda.isFinalState(value))\n      {\n        this._finalStates.add(result);\n      }\n    }\n    //Copy alphabet\n    for(const [key, value] of pda._alphabet.entries())\n    {\n      this._alphabet.set(key, value);\n    }\n    //Copy stack alphabet\n    for(const [key, value] of pda._stackAlphabet.entries())\n    {\n      this._stackAlphabet.set(key, value);\n    }\n    //Copy transitions\n    for(const [key, value] of pda._transitions.entries())\n    {\n      const result = value.copy();\n      result._from = this._states.get(value.getSourceState().getStateID());\n      result._to = this._states.get(value.getDestinationState().getStateID());\n      this._transitions.set(key, result);\n    }\n    //Copy custom symbols\n    for(const symbol of pda._customSymbols)\n    {\n      this._customSymbols.add(symbol);\n    }\n    //Copy custom stack symbols\n    for(const symbol of pda._customStackSymbols)\n    {\n      this._customStackSymbols.add(symbol);\n    }\n\n    //Copy errors\n    for(const error of pda._errors)\n    {\n    //WARNING: if the error's store state objects, they need to be redirected to the copies\n      this._errors.push(error);\n    }\n  }\n\n  clear()\n  {\n    this._states.clear();\n    this._alphabet.clear();\n    this._stackAlphabet.clear();\n    this._transitions.clear();\n    this._finalStates.clear();\n    this._customSymbols.clear();\n    this._customStackSymbols.clear();\n    this._startState = null;\n\n    this._errors.length = 0;\n  }\n\n  validate()\n  {\n    //Reset errors\n    this._errors.length = 0;\n    return true;\n  }\n  isValid() { return this._errors.length == 0; }\n  getErrors() { return this._errors; }\n\n  createState(label=\"\")\n  {\n    return this.addState(new State(label));\n  }\n\n  addState(state)\n  {\n    const stateID = state.getStateID();\n    if (this._states.has(stateID)) throw new Error(\"Already added state with id \\'\" + stateID + \"\\'\");\n    //Make state as new start state if no other states exist...\n    if (this._states.size <= 0) this._startState = state;\n    //Add to state set\n    this._states.set(stateID, state);\n    return state;\n  }\n\n  removeState(state)\n  {\n    const stateID = state.getStateID();\n    if (!this._states.has(stateID)) return false;\n    this._states.delete(stateID);\n\n    //Deleted the start state, so must pick another one...\n    if (this._startState === state)\n    {\n      if (this._states.size <= 0)\n      {\n        //If no more states to choose from, don't choose anything\n        this._startState = null;\n      }\n      else\n      {\n        //Choose an arbitrary start state\n        this._startState = this._states.values().next().value;\n      }\n    }\n\n    return true;\n  }\n\n  hasStateWithLabel(label)\n  {\n    for(const state of this._states.values())\n    {\n      if (state.getStateLabel() == label)\n      {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getStatesByLabel(label, dst=[])\n  {\n    for(const state of this._states.values())\n    {\n      if (state.getStateLabel() == label)\n      {\n        dst.push(state);\n      }\n    }\n    return dst;\n  }\n\n  getStateByID(id)\n  {\n    return this._states.get(id);\n  }\n\n  hasState(state) { return this._states.has(state.getStateID()); }\n\n  getStates() { return this._states.values(); }\n\n  getStateCount() { return this._states.size; }\n\n  addTransition(from, to, readSymbol, popSymbol, pushSymbol)\n  {\n    if (!this.hasState(from)) throw new Error(\"Trying to add a transition to unknown state with label \\'\" + state.getStateLabel() + \"\\'\");\n    if (!this.hasState(to)) throw new Error(\"Trying to add a transition to unknown state with label \\'\" + state.getStateLabel() + \"\\'\");\n    if (!readSymbol) throw new Error(\"Cannot add transition for null read symbol - use the empty symbol instead\");\n    if (!popSymbol) throw new Error(\"Cannot add transition for null pop symbol - use the empty symbol instead\");\n    if (!pushSymbol) throw new Error(\"Cannot add transition for null push symbol - use the empty symbol instead\");\n\n    const transitionKey = from.getStateID() + \"->\" + to.getStateID();\n    if (this._transitions.has(transitionKey))\n    {\n      const transition = this._transitions.get(transitionKey);\n      if (!transition.hasSymbol(readSymbol, popSymbol, pushSymbol))\n      {\n        transition.addSymbol(readSymbol, popSymbol, pushSymbol);\n      }\n      else\n      {\n        //Didn't add anything...\n        return false;\n      }\n    }\n    else\n    {\n      const newTransition = new Transition(from, to);\n      newTransition.addSymbol(readSymbol, popSymbol, pushSymbol);\n      this._transitions.set(transitionKey, newTransition);\n    }\n\n    //Add to alphabet...\n    this._incrSymbolCount(readSymbol);\n    this._incrStackSymbolCount(popSymbol);\n    this._incrStackSymbolCount(pushSymbol);\n    return true;\n  }\n\n  //FIXME: not yet implemented\n  removeTransition(from, to, symbol=null)\n  {\n    const transitionKey = from.getStateID() + \"->\" + to.getStateID();\n    if (!this._transitions.has(transitionKey)) return false;\n\n    const transition = this._transitions.get(transitionKey);\n    const symbols = transition.getSymbols();\n\n    //If deleting a specific symbol...\n    if (symbol)\n    {\n      const index = symbols.indexOf(symbol);\n      if (index >= 0)\n      {\n        //Update symbol counts...\n        this._decrSymbolCount(symbol);\n\n        symbols.splice(index, 1);\n        if (symbols.length <= 0) this._transitions.delete(transitionKey);\n        return true;\n      }\n      else\n      {\n        return false;\n      }\n    }\n    //If deleting a all associated symbols...\n    else\n    {\n      //Update symbol counts...\n      for(const symbol of symbols)\n      {\n        this._decrSymbolCount(symbol);\n      }\n\n      //Remove transition\n      this._transitions.delete(transitionKey);\n      return true;\n    }\n  }\n\n  hasTransition(from, to, symbol=null)\n  {\n    const transitionKey = from.getStateID() + \"->\" + to.getStateID();\n    if (!this._transitions.has(transitionKey)) return false;\n    //Not checking for specific symbols...\n    if (!symbol) return true;\n\n    //Find the symbol...\n    return this._transitions.get(transitionKey).hasSymbol(symbol);\n  }\n\n  getTransitionSymbols(from, to)\n  {\n    const transitionKey = from.getStateID() + \"->\" + to.getStateID();\n    if (!this._transitions.has(transitionKey)) return null;\n    return this._transitions.get(transitionKey).getSymbols();\n  }\n\n  getTransitions() { return this._transitions.values(); }\n\n  _incrSymbolCount(symbol)\n  {\n    //Don't add empty symbol to the alphabet\n    if (symbol === EMPTY_SYMBOL) return;\n\n    const symbolCount = this._alphabet.get(symbol) || 0;\n    this._alphabet.set(symbol, symbolCount + 1);\n  }\n\n  _incrStackSymbolCount(stackSymbol)\n  {\n    //Don't add empty symbol to the stack alphabet\n    if (stackSymbol === EMPTY_SYMBOL) return;\n\n    const symbolCount = this._stackAlphabet.get(stackSymbol) || 0;\n    this._stackAlphabet.set(stackSymbol, symbolCount + 1);\n  }\n\n  _decrSymbolCount(symbol)\n  {\n    if (!this._alphabet.has(symbol)) throw new Error(\"Unable to find valid transition symbol in alphabet\");\n\n    //Empty symbol is not in the alphabet\n    if (symbol === EMPTY_SYMBOL) return;\n\n    const symbolCount = this._alphabet.get(symbol);\n    //Delete the symbol, since it is no longer used...\n    if (symbolCount <= 1)\n    {\n      if (!this.isCustomSymbol(symbol))\n      {\n        //Regular symbols are removed if unused...\n        this._alphabet.delete(symbol);\n      }\n      else\n      {\n        //Custom symbols stay in the alphabet, even if unused...\n        this._alphabet.set(symbol, 0);\n      }\n    }\n    else\n    {\n      //Still being used by someone...\n      this._alphabet.set(symbol, symbolCount - 1);\n    }\n  }\n\n  _decrStackSymbolCount(symbol)\n  {\n    if (!this._stackAlphabet.has(symbol)) throw new Error(\"Unable to find valid transition symbol in alphabet\");\n\n    //Empty symbol is not in the alphabet\n    if (symbol === EMPTY_SYMBOL) return;\n\n    const symbolCount = this._stackAlphabet.get(symbol);\n    //Delete the symbol, since it is no longer used...\n    if (symbolCount <= 1)\n    {\n      if (!this.isCustomStackSymbol(symbol))\n      {\n        //Regular symbols are removed if unused...\n        this._stackAlphabet.delete(symbol);\n      }\n      else\n      {\n        //Custom symbols stay in the alphabet, even if unused...\n        this._stackAlphabet.set(symbol, 0);\n      }\n    }\n    else\n    {\n      //Still being used by someone...\n      this._stackAlphabet.set(symbol, symbolCount - 1);\n    }\n  }\n\n  changeSymbol(symbol, newSymbol)\n  {\n    if (symbol === EMPTY_SYMBOL) throw new Error(\"Cannot change the empty symbol\");\n    if (newSymbol === EMPTY_SYMBOL) throw new Error(\"Cannot change to the empty symbol\");\n    if (this._stackAlphabet.has(newSymbol)) throw new Error(\"Cannot change symbol to another existing symbol\");\n\n    throw new Error(\"Not yet implemented\");\n  }\n\n  removeSymbol(symbol)\n  {\n    throw new Error(\"Not yet implemented\");\n  }\n\n  setCustomSymbol(symbol, custom=true)\n  {\n    if (symbol === EMPTY_SYMBOL) throw new Error(\"Cannot change the empty symbol as a custom symbol\");\n\n    if (custom)\n    {\n      if (!this._customSymbols.has(symbol))\n      {\n        this._customSymbols.add(symbol);\n\n        //Add symbol to alphabet if missing...\n        if (!this._alphabet.has(symbol)) this._alphabet.set(symbol, 0);\n      }\n    }\n    else\n    {\n      if (this._customSymbols.has(symbol))\n      {\n        this._customSymbols.delete(symbol);\n\n        //If symbol is unused, delete it\n        if (this._alphabet.has(symbol) && this._alphabet.get(symbol) <= 0) this._alphabet.delete(symbol)\n      }\n    }\n  }\n\n  isCustomSymbol(symbol)\n  {\n    return this._customSymbols.has(symbol);\n  }\n\n  getCustomSymbols()\n  {\n    return this._customSymbols;\n  }\n\n  clearCustomSymbols()\n  {\n    this._customSymbols.clear();\n  }\n\n  isUsedSymbol(symbol)\n  {\n    return this._alphabet.has(symbol) && this._alphabet.get(symbol) > 0;\n  }\n\n  isSymbol(symbol)\n  {\n    return this._alphabet.has(symbol);\n  }\n\n  getAlphabet()\n  {\n    return this._alphabet.keys();\n  }\n\n  /********** STACK ALPHABET **********/\n\n  changeStackSymbol(symbol, newSymbol)\n  {\n    if (symbol === EMPTY_SYMBOL) throw new Error(\"Cannot change the empty symbol\");\n    if (newSymbol === EMPTY_SYMBOL) throw new Error(\"Cannot change to the empty symbol\");\n    if (this._stackAlphabet.has(newSymbol)) throw new Error(\"Cannot change symbol to another existing symbol\");\n\n    throw new Error(\"Not yet implemented\");\n  }\n\n  removeStackSymbol(symbol)\n  {\n    throw new Error(\"Not yet implemented\");\n  }\n\n  setCustomStackSymbol(symbol, custom=true)\n  {\n    if (symbol === EMPTY_SYMBOL) throw new Error(\"Cannot change the empty symbol as a custom symbol\");\n\n    if (custom)\n    {\n      if (!this._customStackSymbols.has(symbol))\n      {\n        this._customStackSymbols.add(symbol);\n\n        //Add symbol to alphabet if missing...\n        if (!this._stackAlphabet.has(symbol)) this._stackAlphabet.set(symbol, 0);\n      }\n    }\n    else\n    {\n      if (this._customStackSymbols.has(symbol))\n      {\n        this._customStackSymbols.delete(symbol);\n\n        //If symbol is unused, delete it\n        if (this._stackAlphabet.has(symbol) && this._stackAlphabet.get(symbol) <= 0) this._stackAlphabet.delete(symbol)\n      }\n    }\n  }\n\n  isCustomStackSymbol(symbol)\n  {\n    return this._customStackSymbols.has(symbol);\n  }\n\n  getCustomStackSymbols()\n  {\n    return this._customStackSymbols;\n  }\n\n  clearCustomStackSymbols()\n  {\n    this._customStackSymbols.clear();\n  }\n\n  isUsedStackSymbol(symbol)\n  {\n    return this._stackAlphabet.has(symbol) && this._stackAlphabet.get(symbol) > 0;\n  }\n\n  isStackSymbol(symbol)\n  {\n    return this._stackAlphabet.has(symbol);\n  }\n\n  getStackAlphabet()\n  {\n    return this._stackAlphabet.keys();\n  }\n\n  /********** OTHER **********/\n\n  setStartState(state)\n  {\n    const stateID = state.getStateID();\n    if (!this._states.has(stateID))\n    {\n      //Add it to the state set\n      this._states.set(stateID, state);\n    }\n    this._startState = state;\n  }\n  isStartState(state) { return this._startState === state; }\n  getStartState() { return this._startState; }\n\n  setFinalState(state, final=true)\n  {\n    //Make final\n    if (final)\n    {\n      //If missing from state set, add it in...\n      if (!this._states.has(state.getStateID()))\n      {\n        this.addState(state);\n      }\n\n      this._finalStates.add(state);\n    }\n    else\n    {\n      //If missing from state set, it would be effectively the same thing as\n      //calling addState(state). So due to ambiguity, don't do it.\n      if (!this._states.has(state.getStateID())) throw new Error(\"Trying to change final for missing state \\'\" + state.getStateLabel() + \"\\'\");\n\n      this._finalStates.delete(state);\n    }\n  }\n  isFinalState(state) { return this._finalStates.has(state); }\n  getFinalStates() { return this._finalStates; }\n\n  doTransition(state, readSymbol, stack, dst=[])\n  {\n    if (!state) return dst;\n    if (!(state instanceof State)) throw new Error(\"Invalid state instance type \\'\" + (typeof state) + \"\\'\");\n    if (!this._states.has(state.getStateID())) throw new Error(\"Unable to find source state with id \\'\" + state.getStateID() + \"\\'\");\n\n    if (!readSymbol) readSymbol = EMPTY_SYMBOL;\n\n    const fromTransitionKey = state.getStateID() + \"->\";\n    for(const key of this._transitions.keys())\n    {\n      if (key.startsWith(fromTransitionKey))\n      {\n        const transition = this._transitions.get(key);\n        const toState = transition.getDestinationState();\n\n        const validSymbols = [];\n        transition.getSymbolsByReadPop(readSymbol, stack[stack.length - 1], validSymbols);\n        transition.getSymbolsByReadPop(readSymbol, EMPTY_SYMBOL, validSymbols);\n        for(const validSymbol of validSymbols)\n        {\n          const newStack = stack.slice();\n          const validPop = validSymbol.getPopSymbol();\n          const validPush = validSymbol.getPushSymbol();\n\n          if (validPop !== EMPTY_SYMBOL) newStack.pop();\n          if (validPush !== EMPTY_SYMBOL) newStack.push(validPush);\n\n          dst.push([toState, newStack]);\n        }\n      }\n    }\n    return dst;\n  }\n\n  doTerminalTransition(state, readSymbol, stack, dst=[])\n  {\n    if (!state) return dst;\n    if (!this._states.has(state.getStateID())) throw new Error(\"Unable to find source state with id \\'\" + state.getStateID() + \"\\'\");\n\n    if (!readSymbol) readSymbol = EMPTY_SYMBOL;\n\n    const fromTransitionKey = state.getStateID() + \"->\";\n    for(const key of this._transitions.keys())\n    {\n      if (key.startsWith(fromTransitionKey))\n      {\n        const transition = this._transitions.get(key);\n        const toState = transition.getDestinationState();\n\n        const validSymbols = [];\n        transition.getSymbolsByReadPop(readSymbol, stack[stack.length - 1], validSymbols);\n        transition.getSymbolsByReadPop(readSymbol, EMPTY_SYMBOL, validSymbols);\n        for(const validSymbol of validSymbols)\n        {\n          const newStack = stack.slice();\n          const validPop = validSymbol.getPopSymbol();\n          const validPush = validSymbol.getPushSymbol();\n\n          if (validPop !== EMPTY_SYMBOL)\n          {\n            if(stack.length == 0)\n            {\n              continue;\n            }\n            else\n            {\n              newStack.pop();\n            }\n\n          }\n          if (validPush !== EMPTY_SYMBOL) newStack.push(validPush);\n\n          const result = this.doClosureTransition(toState, newStack);\n          for(const s of result)\n          {\n            //Checks if dst includes the new destination and stack pair\n            let flag = false;\n            for(const pair of dst)\n            {\n              if (pair[0] === s[0])\n              {\n                if (isEqualStack(pair[1], s[1]))\n                {\n                  flag = true;\n                  break;\n                }\n              }\n            }\n            if (!flag) dst.push(s);\n          }\n        }\n      }\n    }\n\n    return dst;\n  }\n\n  doClosureTransition(state, stack, dst=[])\n  {\n    if (!state) return dst;\n\n    dst.push([state, stack]);\n    for(let i = 0; i < dst.length; ++i)\n    {\n      const thisPair = dst[i];\n      const thisState = thisPair[0];\n      const thisStack = thisPair[1];\n      const transitions = this.getOutgoingTransitions(thisState);\n      for(const transition of transitions)\n      {\n        const readSymbol = transition[READ_SYMBOL_INDEX];\n        const popSymbol = transition[POP_SYMBOL_INDEX];\n        const pushSymbol = transition[PUSH_SYMBOL_INDEX];\n\n        if (readSymbol === EMPTY_SYMBOL &&\n          (popSymbol === thisStack[thisStack.length - 1] ||\n          popSymbol === EMPTY_SYMBOL))\n        {\n          const newStack = thisStack.slice();\n          const toState = transition[TO_STATE_INDEX];\n          if (popSymbol !== EMPTY_SYMBOL) newStack.pop();\n          if (pushSymbol !== EMPTY_SYMBOL) newStack.push(pushSymbol);\n\n          //Checks if dst includes the new destination and stack pair\n          let flag = false;\n          for(const pair of dst)\n          {\n            if (pair[0] === toState)\n            {\n              if (isEqualStack(pair[1], newStack))\n              {\n                flag = true;\n                break;\n              }\n            }\n          }\n          if (!flag) dst.push([toState, newStack]);\n        }\n      }\n    }\n    return dst;\n  }\n\n  getOutgoingTransitions(state, dst=[])\n  {\n    if (!state) return dst;\n    if (!this._states.has(state.getStateID())) throw new Error(\"Unable to find source state with id \\'\" + state.getStateID() + \"\\'\");\n\n    const fromTransitionKey = state.getStateID() + \"->\";\n    for(const key of this._transitions.keys())\n    {\n      if (key.startsWith(fromTransitionKey))\n      {\n        const transition = this._transitions.get(key);\n        const symbols = transition.getSymbols();\n        for(const symbol of symbols)\n        {\n          dst.push([\n            state,\n            symbol.getReadSymbol(),\n            transition.getDestinationState(),\n            symbol.getPopSymbol(),\n            symbol.getPushSymbol()\n          ]);\n        }\n      }\n    }\n\n    return dst;\n  }\n\n  getHashCode()\n  {\n    let string = \"\";\n    for(const state of this._states.values())\n    {\n      string += state.getHashString() + \",\";\n    }\n    string += \"|\";\n    for(const transition of this._transitions.values())\n    {\n      string += transition.getHashString() + \",\";\n    }\n    string += \"|\";\n    for(const state of this._finalStates)\n    {\n      string += state.getHashString();\n    }\n    string += \"|\";\n    string += this._startState ? this._startState.getHashString() : \"\";\n    return stringHash(string);\n  }\n}\n\nfunction isEqualStack(stack1, stack2)\n{\n  const temp = [];\n  for(const element of stack1)\n  {\n    temp.push(element);\n  }\n  for(const element of stack2)\n  {\n    const i = temp.indexOf(element);\n    if (i === -1) return false;\n    temp.splice(i, 1);\n  }\n  return temp.length <= 0;\n}\n\nexport default PDA;\n","import GraphNode from 'graph/GraphNode.js';\n\nconst NODE_RADIUS = 16;\n\nclass PDANode extends GraphNode\n{\n  constructor(id, x, y)\n  {\n    super(id, x, y);\n\n    this._accept = false;\n\n    //this is not saved to hash since it is an aesthetic option\n    this._custom = false;\n  }\n\n  setNodeAccept(value)\n  {\n    this._accept = value;\n  }\n\n  getNodeAccept()\n  {\n    return this._accept;\n  }\n\n  setNodeCustom(value)\n  {\n    this._custom = value;\n  }\n\n  getNodeCustom()\n  {\n    return this._custom;\n  }\n\n  //Override\n  getNodeSize() { return NODE_RADIUS; }\n\n  //Override\n  getHashString(usePosition=true)\n  {\n    return super.getHashString(usePosition) + \":\" + (this._accept ? \"1\" : \"0\");\n  }\n}\n\nexport default PDANode;\n","import QuadraticEdge from 'graph/QuadraticEdge.js';\n\nexport const LINE_SEPARATOR = '\\n';\nexport const SYMBOL_SEPARATOR = ' ';\nexport const READ_SEPARATOR = ',';\nexport const POP_SEPARATOR = '\\u2192'\nexport const EMPTY_CHAR = '\\u03B5';\n\nclass PDAEdge extends QuadraticEdge\n{\n  constructor(id, from, to=null)\n  {\n    super(id, from, to);\n  }\n\n  //Override\n  setEdgeLabel(label)\n  {\n    if (typeof label === 'string')\n    {\n      super.setEdgeLabel(label);\n    }\n    else\n    {\n      super.setEdgeLabel(EMPTY_CHAR + READ_SEPARATOR +\n        EMPTY_CHAR + POP_SEPARATOR +\n        EMPTY_CHAR);\n    }\n  }\n\n  getEdgeSymbolsFromLine(line)\n  {\n    line = line.trim();\n    let readIndex = line.indexOf(READ_SEPARATOR);\n    let popIndex = line.indexOf(POP_SEPARATOR);\n\n    if (readIndex <= 0) return [EMPTY_CHAR, EMPTY_CHAR, EMPTY_CHAR];\n    let readSymbol = line.substring(0, readIndex);\n    if (popIndex <= 0) return [readSymbol, EMPTY_CHAR, EMPTY_CHAR];\n    let popSymbol = line.substring(readIndex + 1, popIndex);\n    let pushSymbol = line.substring(popIndex + 1);\n    if (pushSymbol.length <= 0) return [readSymbol, popSymbol, EMPTY_CHAR];\n\n    return [readSymbol, popSymbol, pushSymbol];\n  }\n\n  getEdgeLinesFromLabel()\n  {\n    return this.getEdgeLabel().split(LINE_SEPARATOR);\n  }\n}\n\nexport default PDAEdge;\n","import AbstractMachineBuilder from 'modules/abstract/AbstractMachineBuilder.js';\nimport PDA, { EMPTY_SYMBOL, State } from './PDA.js';\nimport PDANode from 'modules/pda/graph/PDANode.js';\nimport PDAEdge, { EMPTY_CHAR } from 'modules/pda/graph/PDAEdge.js';\n\nexport const ERROR_UNREACHABLE_STATE = \"unreachable_state\";\nexport const ERROR_DUPLICATE_STATE = \"duplicate_state\";\nexport const ERROR_INCOMPLETE_TRANSITION = \"incomplete_transition\";\n\nclass PDABuilder extends AbstractMachineBuilder\n{\n  constructor()\n  {\n    super();\n\n    this._machine = new PDA();\n  }\n\n\t//Override\n\tattemptBuild(graph, dst, errors=[], warnings=[])\n\t{\n\t\terrors.length = 0;\n\t\twarnings.length = 0;\n\n    const customSymbols = Array.from(dst.getCustomSymbols());\n    const customStackSymbols = Array.from(dst.getCustomStackSymbols());\n\t\tdst.clear();\n    for(const symbol of customSymbols)\n    {\n      dst.setCustomSymbol(symbol);\n    }\n    for(const stackSymbol of customStackSymbols)\n    {\n      dst.setCustomStackSymbol(stackSymbol);\n    }\n\n\t\tconst nodeLabels = new Map();\n\t\tconst nodeOutgoings = new Map();\n\t\tconst edgeSymbols = new Set();\n\t\tconst edgePlaceholders = [];\n\t\tconst edgeEmpties = [];\n\n\t\tconst graphNodes = graph.getNodes();\n\t\tconst graphEdges = graph.getEdges();\n\t\tconst graphStart = graph.getStartNode();\n\n\t\tfor (const node of graphNodes)\n\t\t{\n\t\t\tconst nodeLabel = node.getNodeLabel();\n\t\t\tconst state = new State(nodeLabel, node);\n\t\t\tdst.addState(state);\n\n\t\t\tif (node.getNodeAccept())\n\t\t\t{\n\t\t\t\tdst.setFinalState(state, true);\n\t\t\t}\n\n\t\t\tif (graphStart === node)\n\t\t\t{\n\t\t\t\tdst.setStartState(state);\n\t\t\t}\n\n\t\t\t//Check for duplicate states\n\t\t\tif (nodeLabels.has(nodeLabel)) nodeLabels.get(nodeLabel).push(state);\n\t\t\telse nodeLabels.set(nodeLabel, [state]);\n\n\t\t\t//For duplicate transitions\n\t\t\tnodeOutgoings.set(state, new Map());\n\t\t}\n\n\t\tfor (const edge of graphEdges)\n\t\t{\n\t\t\tconst srcNode = edge.getSourceNode();\n\t\t\tconst dstNode = edge.getDestinationNode();\n\t\t\tif (!edge.isPlaceholder() && srcNode instanceof PDANode && dstNode instanceof PDANode)\n\t\t\t{\n\t\t\t\tconst srcState = dst.getStateByID(srcNode.getGraphElementID());\n\t\t\t\tconst dstState = dst.getStateByID(dstNode.getGraphElementID());\n\t\t\t\tif (!srcState || !dstState) throw new Error(\"Cannot find state for edge source/destination nodes - mismatch id\");\n\n\t\t\t\tconst edgeLabelLines = edge.getEdgeLinesFromLabel();\n\t\t\t\tfor (const line of edgeLabelLines)\n\t\t\t\t{\n\t\t\t\t\tif (!line) continue;\n\n          const symbols = edge.getEdgeSymbolsFromLine(line);\n\n          //Translate all labels to symbols\n          for(let i = 0; i < symbols.length; ++i)\n          {\n            let symbol = symbols[i];\n            switch(symbol)\n            {\n              case EMPTY_CHAR:\n                symbols[i] = EMPTY_SYMBOL;\n                break;\n              default:\n                symbols[i] = symbol;\n            }\n          }\n\n          //Add to machine...\n\t\t\t\t\tdst.addTransition(srcState, dstState, symbols[0], symbols[1], symbols[2]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tedgePlaceholders.push(edge);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n    //Check for duplicate node labels\n\t\tfor(const [nodeLabel, sharedStates] of nodeLabels.entries())\n\t\t{\n\t\t\tif (sharedStates.length > 1)\n\t\t\t{\n\t\t\t\twarnings.push({\n\t\t\t\t\tname: ERROR_DUPLICATE_STATE,\n\t\t\t\t\tlabel: nodeLabel,\n\t\t\t\t\tnodes: sharedStates.map(e => e.getSource())\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n    //Check for incomplete edge\n\t\tif (edgePlaceholders.length > 0)\n\t\t{\n\t\t\terrors.push({\n\t\t\t\tname: ERROR_INCOMPLETE_TRANSITION,\n\t\t\t\tedges: edgePlaceholders\n\t\t\t});\n\t\t}\n\n\t\t//Check for unreachable nodes\n\t\tconst unreachables = this.getUnreachableNodes(graph);\n\t\tif (unreachables && unreachables.length > 0)\n\t\t{\n\t\t\twarnings.push({\n\t\t\t\tname: ERROR_UNREACHABLE_STATE,\n\t\t\t\tnodes: unreachables\n\t\t\t});\n\t\t}\n\n\t\tif (errors.length <= 0)\n\t\t{\n\t\t\t//Errors should be empty\n\t\t\treturn this._machine;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//Reasons are stored in errors\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tgetUnreachableNodes(graph)\n\t{\n\t\tconst openList = graph.getNodes().slice();\n\t\tconst index = openList.indexOf(startNode);\n\t\topenList.splice(index, 1);\n\n\t\tconst queue = [];\n\t\tqueue.push(startNode);\n\n\t\twhile(queue.length > 0)\n\t\t{\n\t\t\tconst nextNode = queue.pop();\n\n\t\t}\n\n    if (graph.getNodeCount() <= 1) return [];\n\n    const edges = graph.getEdges();\n    const nodes = graph.getNodes().slice();\n\t\tconst startNode = graph.getStartNode();\n\t\tconst startIndex = nodes.indexOf(startNode);\n\t\tif (startIndex < 0) return [];\n\t\tnodes.splice(startIndex, 1);\n\n    let nextNodes = [];\n    nextNodes.push(startNode);\n\n    while(nextNodes.length > 0)\n    {\n      const node = nextNodes.pop();\n      for(const edge of edges)\n      {\n        if (edge.getSourceNode() === node)\n        {\n          const i = nodes.indexOf(edge.getDestinationNode());\n          if (i >= 0)\n          {\n\t\t\t\t\t\tconst nextNode = nodes[i];\n            nodes.splice(i, 1);\n            nextNodes.push(nextNode);\n          }\n        }\n      }\n    }\n\n    return nodes;\n\t}\n\n\t//Override\n\tgetMachine() { return this._machine; }\n}\n\nexport default PDABuilder;\n","import AbstractMachineController from 'modules/abstract/AbstractMachineController.js';\n\nimport PDABuilder from 'modules/pda/machine/PDABuilder.js';\n\nimport GraphLayout from 'modules/fsa/graph/GraphLayout.js';\n\nclass MachineController extends AbstractMachineController\n{\n  constructor(module)\n  {\n    super(module, new PDABuilder());\n\n    this.graphController = null;\n  }\n\n  //Override\n  initialize(module)\n  {\n    super.initialize(module);\n\n    this.graphController = module.getGraphController();\n  }\n\n  //Override\n  destroy(module)\n  {\n    super.destroy(module);\n  }\n\n  //Override\n  update(module)\n  {\n    super.update(module);\n  }\n\n  getFirstGraphNodeByLabel(graph, label)\n  {\n    for(const node of graph.getNodes())\n    {\n      if (node.getNodeLabel() == label)\n      {\n        return node;\n      }\n    }\n\n    return null;\n  }\n\n  setGraphToMachine(graph, machine)\n  {\n    graph.clear();\n\n    //Add all states\n    let node;\n    for(const state of machine.getStates())\n    {\n      node = graph.createNode(0, 0);\n      node.setNodeLabel(state);\n      if (machine.isFinalState(state))\n      {\n        node.setNodeAccept(true);\n      }\n    }\n\n    //Add all transitions\n    let edge, from, to, read, labels, flag;\n    for(let transition of machine.getTransitions())\n    {\n      from = this.getFirstGraphNodeByLabel(graph, transition[0]);\n      read = transition[1];\n      to = this.getFirstGraphNodeByLabel(graph, transition[2]);\n      edge = graph.createEdge(from, to);\n      edge.setEdgeLabel(read);\n      const formattedEdge = graph.formatEdge(edge);\n      if (edge != formattedEdge) graph.deleteEdge(edge);\n    }\n\n    //Set start state\n    const startState = machine.getStartState();\n    graph.setStartNode(this.getFirstGraphNodeByLabel(graph, startState));\n\n    //Auto layout graph\n    GraphLayout.applyLayout(graph);\n  }\n\n  getUnreachableNodes()\n  {\n    const graphController = this.graphController;\n    const graph = graphController.getGraph();\n    if (graph.getNodeCount() <= 1) return [];\n\n    const edges = graph.getEdges();\n    const nodes = graph.getNodes().slice();\n    const startNode = nodes.shift();\n    let nextNodes = [];\n    nextNodes.push(startNode);\n\n    while(nextNodes.length > 0)\n    {\n      const node = nextNodes.pop();\n      for(const edge of edges)\n      {\n        if (edge.getSourceNode() === node)\n        {\n          const i = nodes.indexOf(edge.getDestinationNode());\n          if (i >= 0)\n          {\n            const nextNode = nodes.splice(i, 1)[0];\n            nextNodes.push(nextNode);\n          }\n        }\n      }\n    }\n\n    return nodes;\n  }\n\n  getStates()\n  {\n    return this._machineBuilder.getMachine().getStates();\n  }\n\n  countStates()\n  {\n    return this.getStates().length;\n  }\n\n  getFinalStates()\n  {\n    return this._machineBuilder.getMachine().getFinalStates();\n  }\n\n  getTransitions()\n  {\n    return this._machineBuilder.getMachine().getTransitions();\n  }\n\n  getAlphabet()\n  {\n    const machine = this._machineBuilder.getMachine();\n    return Array.from(machine.getAlphabet());\n  }\n\n  isUsedSymbol(symbol)\n  {\n    return !this.isCustomSymbol(symbol);\n  }\n\n  createSymbol(symbol)\n  {\n    this.addCustomSymbol(symbol);\n  }\n\n  deleteSymbol(symbol)\n  {\n    let edge = null;\n    let index = null;\n    let result = null;\n    const targets = [];\n\n    const graph = this.graphController.getGraph();\n    for(let i = graph.getEdges().length - 1; i >= 0; --i)\n    {\n      edge = graph.getEdges()[i];\n      index = edge.getEdgeLabel().indexOf(symbol);\n      if (index >= 0)\n      {\n        result = edge.getEdgeLabel().substring(0, index) + edge.getEdgeLabel().substring(index + 1);\n        if (result.length > 0)\n        {\n          edge.setEdgeLabel(result);\n        }\n        else\n        {\n          edge.setEdgeLabel(\"\");\n          graph.deleteEdge(edge);\n        }\n        targets.push(edge);\n      }\n    }\n\n    if (targets.length <= 0)\n    {\n      this.getMachineBuilder().removeCustomSymbol(symbol);\n    }\n  }\n\n  renameSymbol(prevSymbol, nextSymbol)\n  {\n    let edge = null;\n    let result = null;\n    const targets = [];\n\n    const graph = this.graphController.getGraph();\n    const length = graph.getEdges().length;\n    for(let i = 0; i < length; ++i)\n    {\n      edge = graph.getEdges()[i];\n      let result = edge.getEdgeLabel().replace(prevSymbol, nextSymbol);\n      if (result != edge.getEdgeLabel())\n      {\n        targets.push(edge);\n      }\n      edge.setEdgeLabel(result);\n    }\n\n    if (targets.length <= 0)\n    {\n      this.getMachineBuilder().renameCustomSymbol(prevSymbol, nextSymbol);\n    }\n  }\n\n  getCustomSymbols()\n  {\n    return Array.from(this._machineBuilder.getMachine().getCustomSymbols());\n  }\n\n  isCustomSymbol(symbol)\n  {\n    return this._machineBuilder.isCustomSymbol(symbol);\n  }\n\n  addCustomSymbol(symbol)\n  {\n    this._machineBuilder.getMachine().setCustomSymbol(symbol);\n  }\n\n  clearCustomSymbols()\n  {\n    this._machineBuilder.getMachine().clearCustomSymbols();\n  }\n\n  getStackAlphabet()\n  {\n    const machine = this._machineBuilder.getMachine();\n    return Array.from(machine.getStackAlphabet());\n  }\n\n  isUsedStackSymbol(symbol)\n  {\n    return !this.isCustomStackSymbol(symbol);\n  }\n\n  createStackSymbol(symbol)\n  {\n    this.addCustomStackSymbol(symbol);\n  }\n\n  deleteStackSymbol(symbol)\n  {\n    let edge = null;\n    let index = null;\n    let result = null;\n    const targets = [];\n\n    const graph = this.graphController.getGraph();\n    for(let i = graph.getEdges().length - 1; i >= 0; --i)\n    {\n      edge = graph.getEdges()[i];\n      index = edge.getEdgeLabel().indexOf(symbol);\n      if (index >= 0)\n      {\n        result = edge.getEdgeLabel().substring(0, index) + edge.getEdgeLabel().substring(index + 1);\n        if (result.length > 0)\n        {\n          edge.setEdgeLabel(result);\n        }\n        else\n        {\n          edge.setEdgeLabel(\"\");\n          graph.deleteEdge(edge);\n        }\n        targets.push(edge);\n      }\n    }\n\n    if (targets.length <= 0)\n    {\n      this.getMachineBuilder().removeCustomStackSymbol(symbol);\n    }\n  }\n\n  renameStackSymbol(prevSymbol, nextSymbol)\n  {\n    let edge = null;\n    let result = null;\n    const targets = [];\n\n    const graph = this.graphController.getGraph();\n    const length = graph.getEdges().length;\n    for(let i = 0; i < length; ++i)\n    {\n      edge = graph.getEdges()[i];\n      let result = edge.getEdgeLabel().replace(prevSymbol, nextSymbol);\n      if (result != edge.getEdgeLabel())\n      {\n        targets.push(edge);\n      }\n      edge.setEdgeLabel(result);\n    }\n\n    if (targets.length <= 0)\n    {\n      this.getMachineBuilder().renameCustomStackSymbol(prevSymbol, nextSymbol);\n    }\n  }\n\n  getCustomStackSymbols()\n  {\n    return Array.from(this._machineBuilder.getMachine().getCustomStackSymbols());\n  }\n\n  isCustomStackSymbol(symbol)\n  {\n    return this._machineBuilder.isCustomStackSymbol(symbol);\n  }\n\n  addCustomStackSymbol(symbol)\n  {\n    this._machineBuilder.getMachine().setCustomStackSymbol(symbol);\n  }\n\n  clearCustomStackSymbols()\n  {\n    this._machineBuilder.getMachine().clearCustomStackSymbols();\n  }\n}\n\nexport default MachineController;\n","import NodalGraph from 'graph/NodalGraph.js';\nimport PDANode from './PDANode.js';\nimport PDAEdge, { LINE_SEPARATOR } from './PDAEdge.js';\n\nconst PARALLEL_EDGE_HEIGHT = 10;\n\nclass PDAGraph extends NodalGraph\n{\n  constructor()\n  {\n    super(PDANode, PDAEdge);\n  }\n\n  setStartNode(node)\n  {\n    if (this._nodes.length <= 0) throw new Error(\"Cannot set start node to empty graph\");\n\n    //There is only one node, and that is already the start node\n    if (this._nodes.length === 1) return;\n\n    const i = this._nodes.indexOf(node);\n    if (i > 0)\n    {\n      //This does a swap; we could do a prepend but that's more costly...\n      const prev = this._nodes[0];\n      this._nodes[0] = node;\n      this._nodes[i] = prev;\n    }\n    else if (i < 0)\n    {\n      throw new Error(\"Cannot set start node for unknown node\");\n    }\n  }\n\n  getStartNode()\n  {\n    return this._nodes.length > 0 ? this._nodes[0] : null;\n  }\n\n  //This is more like addEdge() without adding it to the graph and just returns the result\n  //This should only be called once when completing an edge\n  //Override\n  formatEdge(edge)\n  {\n    const edgeSource = edge.getSourceNode();\n    const edgeDestination = edge.getDestinationNode();\n    const edgeLabel = edge.getEdgeLinesFromLabel();\n\n    //Look for an existing edge with similar from and to\n    for(const otherEdge of this._edges)\n    {\n      if (otherEdge === edge) continue;\n      if (otherEdge.getSourceNode() === edgeSource && otherEdge.getDestinationNode() === edgeDestination)\n      {\n        const otherLines = otherEdge.getEdgeLinesFromLabel();\n        if (edgeLabel.length > 0)\n        {\n          const result = otherLines.concat(edgeLabel);\n          otherEdge.setEdgeLabel(result.join(LINE_SEPARATOR));\n        }\n\n        //Merged with newfound edge...\n        return otherEdge;\n      }\n    }\n\n    //Otherwise, format the current edge\n\n    if (!edge.isSelfLoop())\n    {\n      let flag = false;\n\n      //Bend away if there is another edge not bent with the same src/dst\n      const parallelEdgeHeight = PARALLEL_EDGE_HEIGHT;\n      const HALFPI = Math.PI / 2;\n      for(const otherEdge of this._edges)\n      {\n        if (otherEdge.isQuadratic() && Math.abs(otherEdge.getQuadratic().length) >= parallelEdgeHeight * 2) continue;\n        if ((otherEdge.getDestinationNode() === edgeSource && otherEdge.getSourceNode() === edgeDestination))\n        {\n          edge.setQuadratic(HALFPI, parallelEdgeHeight);\n          otherEdge.setQuadratic(HALFPI, parallelEdgeHeight);\n          flag = true;\n\n          //ASSUMES that there will only ever be 2 edges that are parallel...\n          break;\n        }\n      }\n\n      //Try to move the edge away from intersecting nodes...\n      if (!flag)\n      {\n        const maxNodeSize = Math.max(edgeSource.getNodeSize(), edgeDestination.getNodeSize());\n        const x1 = edgeSource.x;\n        const y1 = edgeSource.y;\n        const x2 = edgeDestination.x;\n        const y2 = edgeDestination.y;\n        const dist12sq = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\n        let vertical = false;\n        let m = 0;\n        let b = 0;\n\n        if(x1 > x2)\n        {\n          m = (y1-y2) / (x1-x2);\n          b = y2-m*x2;\n        }\n        else if (x1 < x2)\n        {\n          m = (y2-y1) / (x2-x1);\n          b = y1-m*x1;\n        }\n        else\n        {\n          vertical = true;\n        }\n\n        for(const node of this._nodes)\n        {\n          if(node === edgeSource || node === edgeDestination) continue;\n\n          const x0 = node.x;\n          const y0 = node.y;\n\n          const dist01sq = (x1-x0)*(x1-x0) + (y1-y0)*(y1-y0);\n          const dist02sq = (x2-x0)*(x2-x0) + (y2-y0)*(y2-y0);\n          if(dist01sq > dist12sq || dist02sq > dist12sq) continue;\n\n          let dist = 0;\n          if(vertical) {\n            dist = Math.abs(x1-x0);\n          } else {\n            dist = Math.abs(b+ m*x0 - y0) / Math.sqrt(1+m*m);\n          }\n\n          if(dist < node.getNodeSize())\n          {\n            flag = true;\n            break;\n          }\n        }\n\n        if (flag)\n        {\n          edge.setQuadratic(-Math.PI / 2, maxNodeSize + 10);\n        }\n      }\n    }\n\n    return edge;\n  }\n}\n\nexport default PDAGraph;\n","import AbstractGraphLabeler from 'graph/AbstractGraphLabeler.js';\n\nimport PDANode from './PDANode.js';\nimport PDAEdge, {EMPTY_CHAR,\n  LINE_SEPARATOR,\n  SYMBOL_SEPARATOR,\n  READ_SEPARATOR,\n  POP_SEPARATOR} from './PDAEdge.js';\n\nconst DEFAULT_NODE_LABEL_PREFIX = \"q\";\n\nclass PDAGraphLabeler extends AbstractGraphLabeler\n{\n  constructor()\n  {\n    super();\n\n    this._prefix = DEFAULT_NODE_LABEL_PREFIX;\n    this._graphController = null;\n  }\n\n  setGraphController(graphController)\n  {\n    this._graphController = graphController;\n    return this;\n  }\n\n  setDefaultNodeLabelPrefix(prefix)\n  {\n    this._prefix = prefix;\n  }\n\n  getDefaultNodeLabelPrefix()\n  {\n    return this._prefix;\n  }\n\n  //Override\n  getDefaultNodeLabel()\n  {\n    if (!this._graphController.shouldAutoRenameNodes())\n    {\n      return this.getDefaultNodeLabelPrefix();\n    }\n    else\n    {\n      const graph = this._graphController.getGraph();\n      const otherNodes = [];\n      let nodeIndex = 0;\n\n      const startNode = graph.getStartNode();\n      if (startNode && startNode.getNodeCustom()) nodeIndex = 1;\n\n      let newNodeLabel = this.getDefaultNodeLabelPrefix() + nodeIndex;\n      while(graph.getNodesByLabel(newNodeLabel, otherNodes).length > 0)\n      {\n        otherNodes.length = 0;\n        ++nodeIndex;\n        newNodeLabel = this.getDefaultNodeLabelPrefix() + nodeIndex;\n      }\n\n      return newNodeLabel;\n    }\n  }\n\n  //Override\n  getDefaultEdgeLabel()\n  {\n    return \"\";\n  }\n\n  //Override\n  getNodeLabelFormatter()\n  {\n    return (string) => string || \"\";\n  }\n\n  //Override\n  getEdgeLabelFormatter()\n  {\n    return edgeLabelFormatter;\n  }\n}\n\nfunction isValidSymbol(symbol)\n{\n  return symbol.length === 1 &&\n    symbol !== LINE_SEPARATOR &&\n    symbol !== SYMBOL_SEPARATOR &&\n    symbol !== READ_SEPARATOR &&\n    symbol !== POP_SEPARATOR;\n}\n\nfunction edgeLabelFormatter(string, allowNull=false)\n{\n  const lines = string.split(LINE_SEPARATOR);\n  const result = new Set();\n  const length = lines.length;\n\n  let symbols;\n  let symbolLength = 0;\n  for(let i = 0; i < length; ++i)\n  {\n    symbols = lines[i].trim().split(\"\");\n    symbolLength = symbols.length;\n\n    if (symbolLength <= 0)\n    {\n      result.add(\"\");\n      continue;\n    }\n\n    let readSymbol = null;\n    let popSymbol = null;\n    let pushSymbol = null;\n    let symbol = null;\n\n    for(let j = 0; j < symbolLength; ++j)\n    {\n      if (readSymbol === null)\n      {\n        symbol = symbols[j].trim();\n        if (isValidSymbol(symbol))\n        {\n          readSymbol = symbol;\n          if (j + 1 < symbolLength && (symbols[j + 1] === READ_SEPARATOR || symbols[j + 1] === SYMBOL_SEPARATOR))\n          {\n            ++j;\n          }\n        }\n      }\n      else if (popSymbol === null)\n      {\n        symbol = symbols[j].trim();\n        if (isValidSymbol(symbol))\n        {\n          popSymbol = symbol;\n          if (j + 1 < symbolLength && (symbols[j + 1] === POP_SEPARATOR || symbols[j + 1] === SYMBOL_SEPARATOR))\n          {\n            ++j;\n          }\n        }\n      }\n      else if (pushSymbol === null)\n      {\n        symbol = symbols[j].trim();\n        if (isValidSymbol(symbol))\n        {\n          pushSymbol = symbol;\n          break;\n        }\n      }\n    }\n\n    if (readSymbol === null)\n    {\n      result.add(\"\");\n    }\n    else if (popSymbol === null)\n    {\n      result.add(readSymbol + READ_SEPARATOR);\n    }\n    else if (pushSymbol === null)\n    {\n      result.add(readSymbol + READ_SEPARATOR + popSymbol + POP_SEPARATOR);\n    }\n    else\n    {\n      result.add(readSymbol + READ_SEPARATOR + popSymbol + POP_SEPARATOR + pushSymbol);\n    }\n  }\n\n  //If it is an empty string...\n  if (result.size <= 0) return allowNull ? null : EMPTY_CHAR;\n  return Array.from(result).join(LINE_SEPARATOR);\n}\n\nexport default PDAGraphLabeler;\n","import PDAGraph from './PDAGraph.js';\n\nconst GRAPH_PARSER_VERSION = \"1.0.0\";\n\nexport const JSON = {\n  parse(data, dst=null)\n  {\n    if (!dst) dst = new PDAGraph();\n    else dst.clear();\n\n    const nodeDatas = data['nodes'] || [];\n    const nodeCount = Math.min(nodeDatas.length || 0, data['nodeCount'] || 0);\n    const edgeDatas = data['edges'] || [];\n    const edgeCount = Math.min(edgeDatas.length || 0, data['edgeCount'] || 0);\n    const initialIndex = data['initial'] || 0;\n\n    const nodeIndices = new Map();\n    for(let i = 0; i < nodeCount; ++i)\n    {\n      const nodeData = nodeDatas[i];\n      if (!nodeData) continue;\n\n      //NOTE: Assumes createNode will maintain order\n      const node = dst.createNode(nodeData['x'] || 0, nodeData['y'] || 0, nodeData['id']);\n      node.setNodeLabel(nodeData['label'] || \"\");\n      node.setNodeAccept(nodeData['accept'] || false);\n      node.setNodeCustom(nodeData['custom'] || false);\n\n      nodeIndices.set(i, node);\n    }\n\n    const initialNode = nodeIndices.get(initialIndex);\n    if (initialNode)\n    {\n      dst.setStartNode(initialNode);\n    }\n\n    for(let i = 0; i < edgeCount; ++i)\n    {\n      const edgeData = edgeDatas[i];\n      if (!edgeData) continue;\n      const sourceNode = nodeIndices.get(edgeData['from']) || null;\n      //Cannot create source-less edges\n      if (!sourceNode) continue;\n      const destinationNode = nodeIndices.get(edgeData['to']) || null;\n      //NOTE: Assumes createEdge will maintain order\n      const edge = dst.createEdge(sourceNode, destinationNode, edgeData['id']);\n      const quadData = edgeData['quad'] || {};\n      edge.setEdgeLabel(edgeData['label'] || \"\");\n      edge.setQuadratic(quadData['radians'] || 0, quadData['length'] || 0);\n    }\n\n    return dst;\n  },\n  objectify(graph)\n  {\n    const graphNodes = graph.getNodes() || [];\n    const nodeCount = graphNodes.length || 0;\n    const graphEdges = graph.getEdges() || [];\n    const edgeCount = graphEdges.length || 0;\n    const graphInitial = graph.getStartNode();\n\n    const nodeDatas = new Array(nodeCount);\n    const nodeIndices = new Map();\n    for(let i = 0; i < nodeCount; ++i)\n    {\n      const node = graphNodes[i];\n      if (node)\n      {\n        //NOTE: Assumes node must have an id\n        const elementID = node.getGraphElementID();\n\n        nodeIndices.set(node, i);\n        nodeDatas[i] = {\n          id: elementID,\n          x: node.x || 0, y: node.y || 0,\n          label: node.getNodeLabel() || \"\",\n          accept: node.getNodeAccept() || false,\n          custom: node.getNodeCustom() || false\n        };\n      }\n    }\n\n    const edgeDatas = new Array(edgeCount);\n    for(let i = 0; i < edgeCount; ++i)\n    {\n      const edge = graphEdges[i];\n      if (edge)\n      {\n        //NOTE: Assumes edge must have an id\n        const elementID = edge.getGraphElementID();\n\n        const quad = edge.getQuadratic() || {};\n        const edgeSource = edge.getSourceNode();\n        const edgeDestination = edge.getDestinationNode();\n        const sourceIndex = nodeIndices.has(edgeSource) ? nodeIndices.get(edgeSource) : -1;\n        const destinationIndex = nodeIndices.has(edgeDestination) ? nodeIndices.get(edgeDestination) : -1;\n        edgeDatas[i] = {\n          id: elementID,\n          from: sourceIndex,\n          to: destinationIndex,\n          quad: { radians: quad['radians'] || 0, length: quad['length'] || 0 },\n          label: edge.getEdgeLabel() || \"\"\n        };\n      }\n    }\n\n    const initialIndex = nodeIndices.get(graphInitial) || 0;\n\n    return {\n      nodeCount: nodeCount,\n      nodes: nodeDatas,\n      edgeCount: edgeCount,\n      edges: edgeDatas,\n      initial: initialIndex,\n      _version: GRAPH_PARSER_VERSION\n    };\n  }\n};\n","import React from 'react';\n\nclass PDANodeRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    //TODO: Refer to app.css for comparable colors\n    const node = this.props.node;\n    const nodeLabel = node.getNodeLabel();\n\n    return (\n      <g className=\"graph-node-container\">\n        {/*Outer circle*/}\n        <circle className=\"graph-node\"\n          cx={node.x}\n          cy={node.y}\n          r={node.getNodeSize()}\n\n          fill=\"#FEE781\"\n          stroke=\"#000000\"/>\n\n        {/*Inner circle*/}\n        {node.getNodeAccept() &&\n          <circle className=\"graph-node-inner\"\n            cx={node.x}\n            cy={node.y}\n            r={node.getNodeSize() * 0.8}\n            fill=\"none\"\n\n            stroke=\"#000000\"/>}\n\n        //Label\n        <text className=\"graph-node-label\"\n          x={node.x} y={node.y + 4}\n          pointerEvents=\"none\"\n          style={{\n            userSelect: \"none\",\n            fontSize: (1 - Math.min(Math.max(nodeLabel.length - 2, 0) / 6, 0.5)) + \"em\"\n          }}\n          textAnchor=\"middle\">\n          {nodeLabel}\n        </text>\n      </g>\n    );\n  }\n}\n\nexport default PDANodeRenderer;\n","import React from 'react';\n\nimport EdgeRenderer, {DIRECTED_FORWARD} from 'renderer/EdgeRenderer.js';\n\nconst GRAPH_EDGE_CONTAINER_STYLE_NAME = \"graph-edge-container\";\n\nclass PDAEdgeRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const edge = this.props.edge;\n    const stroke = this.props.stroke || \"#000000\";\n    const start = edge.getStartPoint();\n    const end = edge.getEndPoint();\n    const center = edge.getCenterPoint();\n    const label = edge.getEdgeLabel();\n    const labels = edge.getEdgeLinesFromLabel();\n    const edgeDir = edge.getEdgeDirection();\n\n    return <g className={GRAPH_EDGE_CONTAINER_STYLE_NAME}>\n      <EdgeRenderer\n        directed={DIRECTED_FORWARD}\n        from={start}\n        to={end}\n        center={center}\n        label={labels.join('\\n')}\n        direction={edgeDir}\n        color={stroke}/>\n    </g>;\n  }\n}\n\nexport default PDAEdgeRenderer;\n","import React from 'react';\n\nimport PDANode from 'modules/pda/graph/PDANode.js';\n\nconst NODE_RADIUS = 16;\nconst INITIAL_MARKER_OFFSET_X = -(NODE_RADIUS + (NODE_RADIUS / 2));\n\nclass InitialMarkerRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    const node = this.props.node;\n    //node.x + offset marker back to center if not a node (or is a pointer)\n    const x = node.x + (!(node instanceof PDANode) ? -INITIAL_MARKER_OFFSET_X : 0);\n    const y = node.y;\n    const r = NODE_RADIUS;\n    const d = r * 2;\n    return (\n      <g className=\"graph-initial-container\">\n        <path className=\"graph-initial\" d={\n          \"M\" + (x - r) + \" \" + (y) +\n          \" L\" + (x - d) + \" \" + (y - r) +\n          \" L\" + (x - d) + \" \" + (y + r) +\n          \" Z\"}\n          fill=\"none\"\n\n          stroke=\"#000000\"/>\n      </g>\n    );\n  }\n}\n\nexport default InitialMarkerRenderer;\n","import React from 'react';\nimport './PDAGraphRenderer.css';\n\nimport PDANodeRenderer from './PDANodeRenderer.js';\nimport PDAEdgeRenderer from './PDAEdgeRenderer.js';\nimport InitialMarkerRenderer from './InitialMarkerRenderer.js';\n\nclass PDAGraphRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    //Inherits props from parent\n    const currentModule = this.props.currentModule;\n    const inputController = currentModule.getInputController();\n    const graphController = currentModule.getGraphController();\n    const graph = graphController.getGraph();\n\n    return (\n      <g>\n        {graph.getNodes().map((e, i) => <PDANodeRenderer key={e.getGraphElementID() || i} node={e}/>)}\n        {graph.getEdges().map((e, i) => <PDAEdgeRenderer key={e.getGraphElementID() || i} edge={e}/>)}\n\n        {/* Initial marker and ghost */}\n        { graph.getStartNode() && (inputController.ghostInitialMarker == null ?\n          <InitialMarkerRenderer node={graph.getStartNode()}/> :\n          <InitialMarkerRenderer node={inputController.ghostInitialMarker}/>) }\n      </g>\n    );\n  }\n}\n\nexport default PDAGraphRenderer;\n","import React from 'react';\nimport Style from './PDALabelEditorRenderer.css';\n\nimport PatternInputButton from 'system/patterninput/PatternInputButton.js';\nimport { SYMBOL_SEPARATOR, EMPTY_CHAR } from 'modules/pda/graph/PDAEdge.js';\n\nconst RECOMMENDED_SYMBOLS = [\"0\", \"1\"];\nconst DEFAULT_SYMBOLS = [EMPTY_CHAR];\n\nclass PDALabelEditorRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  renderSymbol(symbol)\n  {\n    const labelEditor = this.props.parent;\n    if (!labelEditor) return null;\n\n    const inputComponent = labelEditor.inputComponent;\n    return (\n      <PatternInputButton key={symbol} parent={inputComponent} title={symbol}\n        onClick={e=>inputComponent.appendValue(symbol, SYMBOL_SEPARATOR)}/>\n    );\n  }\n\n  //Override\n  render()\n  {\n    const labelEditor = this.props.parent;\n    const currentModule = this.props.currentModule;\n    const machineController = currentModule.getMachineController();\n    const alphabet = machineController.getAlphabet();\n\n    const showDefault = true;\n    const showRecommended = !alphabet || alphabet.length <= 1;\n\n    return (\n      <div className={Style.tray_container}>\n        <span className={Style.tray_used}>\n          {alphabet.map(e => this.renderSymbol(e))}\n        </span>\n        <span className={Style.tray_default}>\n          {showRecommended &&\n            RECOMMENDED_SYMBOLS.map(e => this.renderSymbol(e))}\n          {showDefault &&\n            DEFAULT_SYMBOLS.map(e => this.renderSymbol(e))}\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default PDALabelEditorRenderer;\n","import React from 'react';\nimport Style from './StateListElement.css';\n\nconst SUBMIT_KEY_CODE = \"Enter\";\nconst CANCEL_KEY_CODE = \"Escape\";\n\nclass StateListElement extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.state = {\n      value: null,\n      error: false\n    };\n\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyUp = this.onKeyUp.bind(this);\n  }\n\n  onFocus(e)\n  {\n    const target = e.target;\n    const node = this.props.node;\n\n    const nodeLabel = node ? node.getNodeLabel() : null;\n    this.setState({\n      value: nodeLabel,\n      error: false\n    }, () => target.select());\n\n    //Call any listening focus\n    if (this.props.onFocus) this.props.onFocus(e, this);\n  }\n\n  onBlur(e)\n  {\n    const nextLabel = this.state.value;\n\n    //Reset to nothing (will use node.getNodeLabel() instead)\n    this.setState({ value: null, error: false });\n\n    //Call any listening blurs\n    if (this.props.onBlur) this.props.onBlur(e, this, nextLabel);\n  }\n\n  onKeyDown(e)\n  {\n    const keyCode = e.key;\n    if (keyCode === SUBMIT_KEY_CODE || keyCode === CANCEL_KEY_CODE)\n    {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  onKeyUp(e)\n  {\n    const keyCode = e.key;\n    const target = e.target;\n\n    if (keyCode === SUBMIT_KEY_CODE)\n    {\n      target.blur();\n    }\n    else if (keyCode === CANCEL_KEY_CODE)\n    {\n      this.setState({\n        value: null,\n        error: false\n      }, () => target.blur());\n    }\n  }\n\n  onValueChange(e)\n  {\n    let value = e.target.value.trim();\n    let error = false;\n\n    if (this.props.onChange)\n    {\n      try\n      {\n        this.props.onChange(e, this, value);\n      }\n      catch(e)\n      {\n        error = true;\n      }\n    }\n\n    this.setState({\n      value: value,\n      error: error\n    });\n  }\n\n  //Override\n  render()\n  {\n    const node = this.props.node;\n    const inputValue = this.state.value;\n\n    const nodeLabel = node ? node.getNodeLabel() : \"\";\n    const nodeCustom = node ? (node.getNodeCustom() || inputValue !== null && inputValue !== nodeLabel) : false;\n    const nodeAccept = node ? node.getNodeAccept() : false;\n    //Must check for null, not ONLY truthy because value might be empty string.\n    const displayValue = inputValue === null ? nodeLabel : inputValue;\n\n    return (\n      <div id={this.props.id}\n        className={Style.element_container +\n          (nodeCustom ? \" custom \" : \"\") +\n          ((!node.getNodeCustom() && displayValue.length <= 0) ? \" empty \" : \"\") +\n          (inputValue !== null && this.state.error ? \" error \" : \"\") +\n          (nodeAccept ? \" accept \" : \"\") +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <input\n          spellCheck={false}\n          style={{width: displayValue.length + \"ch\"}}\n          value={displayValue}\n          onChange={this.onValueChange}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          onKeyDown={this.onKeyDown}\n          onKeyUp={this.onKeyUp}/>\n      </div>\n    );\n  }\n}\n\nexport default StateListElement;\n","import React from 'react';\nimport Style from './StateListView.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport BoxAddIcon from 'experimental/iconset/BoxAddIcon.js';\nimport TriangleIcon from 'experimental/iconset/TriangleIcon.js';\n\nimport StateListElement from './StateListElement.js';\n\nclass StateListView extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this._prevX = 0;\n    this._prevY = 0;\n\n    this.onElementAdd = this.onElementAdd.bind(this);\n    this.onElementFocus = this.onElementFocus.bind(this);\n    this.onElementBlur = this.onElementBlur.bind(this);\n    this.onElementChange = this.onElementChange.bind(this);\n  }\n\n  onElementAdd(e)\n  {\n    const graphController = this.props.graphController;\n    this._prevX += 16;\n    this._prevY += 16;\n    const node = graphController.createNode(this._prevX, this._prevY);\n    graphController.focusOnNode(node);\n  }\n\n  onElementFocus(e, element)\n  {\n    this._prevX = element.props.node.x;\n    this._prevY = element.props.node.y;\n    const graphController = this.props.graphController;\n    graphController.focusOnNode(element.props.node);\n  }\n\n  onElementBlur(e, element, nextLabel)\n  {\n    const node = element.props.node;\n    if (!node) return;\n\n    const graphController = this.props.graphController;\n\n    //The value is already processed, abort\n    if (nextLabel !== null)\n    {\n      const graph = graphController.getGraph();\n      if (nextLabel.length > 0)\n      {\n        const otherNodes = graph.getNodesByLabel(nextLabel);\n        if (otherNodes.length <= 0)\n        {\n          //None other have the same name. Rename it!\n          graphController.renameNode(node, nextLabel);\n        }\n        else\n        {\n          //Found something already named that! Ignore!\n        }\n      }\n      else if (node.getNodeCustom())\n      {\n        //Remove custom naming instead of deleting.\n        node.setNodeCustom(false);\n        graphController.applyAutoRename();\n      }\n      else\n      {\n        //Delete!\n        graphController.deleteTargetNode(node);\n      }\n    }\n  }\n\n  onElementChange(e, element, value)\n  {\n    const graphController = this.props.graphController;\n\n    if (value.length > 0)\n    {\n      const graph = graphController.getGraph();\n      const otherNodes = graph.getNodesByLabel(value);\n\n      //If there are more than 1 nodes by the same name,\n      //OR if the duplicate node found is NOT the same node\n      if (otherNodes.length > 1 || (otherNodes.length === 1 && otherNodes[0] !== element.props.node))\n      {\n        throw new Error(\"Not a valid node label\");\n      }\n    }\n  }\n\n  //Override\n  render()\n  {\n    const graphController = this.props.graphController;\n    const graph = graphController.getGraph();\n    const nodes = graph.getNodes();\n\n    return (\n      <div id={this.props.id}\n        className={Style.list_container}\n        style={this.props.style}>\n        <div className={Style.element_list}>\n          <TriangleIcon className={Style.first_marker}/>\n          {nodes.map(e => <StateListElement key={e.getGraphElementID()}\n              node={e}\n              onFocus={this.onElementFocus}\n              onBlur={this.onElementBlur}\n              onChange={this.onElementChange}/>)}\n        </div>\n        <IconButton className={Style.add_button}\n          title=\"Add State\"\n          onClick={this.onElementAdd}>\n          <BoxAddIcon/>\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nexport default StateListView;\n","import React from 'react';\nimport Style from './AlphabetListElement.css';\n\nconst SUBMIT_KEY_CODE = \"Enter\";\nconst CANCEL_KEY_CODE = \"Escape\";\n\nclass AlphabetListElement extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this._inputElement = null;\n\n    this.state = {\n      value: null,\n      error: false\n    };\n\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyUp = this.onKeyUp.bind(this);\n  }\n\n  onFocus(e)\n  {\n    const target = e.target;\n    const symbol = this.props.symbol;\n\n    this.setState({\n      value: symbol,\n      error: false\n    }, () => target.select());\n\n    //Call any listening focus\n    if (this.props.onFocus) this.props.onFocus(e, this);\n  }\n\n  onBlur(e)\n  {\n    const nextSymbol = this.state.value;\n\n    //Call any listening blurs\n    if (this.props.onBlur) this.props.onBlur(e, this, nextSymbol);\n\n    //Reset to nothing (will use props.symbol instead)\n    this.setState({ value: null, error: false });\n  }\n\n  onKeyDown(e)\n  {\n    const keyCode = e.key;\n    if (keyCode === SUBMIT_KEY_CODE || keyCode === CANCEL_KEY_CODE)\n    {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  onKeyUp(e)\n  {\n    const keyCode = e.key;\n    const target = e.target;\n\n    if (keyCode === SUBMIT_KEY_CODE)\n    {\n      target.blur();\n    }\n    else if (keyCode === CANCEL_KEY_CODE)\n    {\n      this.setState({\n        value: null,\n        error: false\n      }, () => target.blur());\n    }\n  }\n\n  onValueChange(e)\n  {\n    let value = e.target.value.trim();\n    let error = false;\n\n    if (this.props.onChange)\n    {\n      try\n      {\n        this.props.onChange(e, this, value);\n      }\n      catch(e)\n      {\n        error = true;\n      }\n    }\n\n    this.setState({\n      value: value,\n      error: error\n    });\n  }\n\n  focus()\n  {\n    this._inputElement.focus();\n  }\n\n  //Override\n  render()\n  {\n    const inputSymbol = this.state.value;\n    const displaySymbol = inputSymbol === null ? this.props.symbol : inputSymbol;\n\n    const symbolUsed = this.props.used || false;\n\n    return (\n      <div id={this.props.id}\n        className={Style.element_container +\n          (displaySymbol !== null && displaySymbol.length <= 0 ? \" empty \" : \"\") +\n          (inputSymbol !== null && this.state.error ? \" error \" : \"\") +\n          (symbolUsed ? \" used \" : \"\") +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <input ref={ref=>this._inputElement=ref}\n          spellCheck={false}\n          maxLength={1}\n          style={{width: \"1ch\"}}\n          value={displaySymbol}\n          onChange={this.onValueChange}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          onKeyDown={this.onKeyDown}\n          onKeyUp={this.onKeyUp}/>\n      </div>\n    );\n  }\n}\n\nexport default AlphabetListElement;\n","import React from 'react';\nimport Style from './AlphabetListView.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport BoxAddIcon from 'experimental/iconset/BoxAddIcon.js';\n\nimport AlphabetListElement from './AlphabetListElement.js';\n\nclass AlphabetListView extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.newSymbolComponent = null;\n\n    this.state = {\n      useNewSymbol: false\n    };\n\n    this.onElementAdd = this.onElementAdd.bind(this);\n    this.onElementFocus = this.onElementFocus.bind(this);\n    this.onElementBlur = this.onElementBlur.bind(this);\n    this.onElementChange = this.onElementChange.bind(this);\n  }\n\n  onElementAdd(e)\n  {\n    //Create a new alphabet element...\n    this.setState({useNewSymbol: true}, () => {\n      this.newSymbolComponent.focus();\n    });\n  }\n\n  onElementFocus(e, element)\n  {\n    //Do nothing...\n  }\n\n  onElementBlur(e, element, nextSymbol)\n  {\n    const symbol = element.props.symbol;\n    const machineController = this.props.machineController;\n\n    if (nextSymbol !== null)\n    {\n      const machine = machineController.getMachineBuilder().getMachine();\n      if (nextSymbol.length > 0)\n      {\n        if (!machine.isSymbol(nextSymbol))\n        {\n          if (symbol)\n          {\n            //None other have the same name. Rename it!\n            machineController.renameSymbol(symbol, nextSymbol);\n          }\n          else\n          {\n            //None other have the same name. Create it!\n            machineController.createSymbol(nextSymbol);\n          }\n        }\n        else\n        {\n          //Found something already named that! Ignore!\n        }\n      }\n      else if (symbol)\n      {\n        //Delete!\n        machineController.deleteSymbol(symbol);\n      }\n    }\n\n    //Regardless, just close the \"new\" alphabet element if open.\n    if (this.state.useNewSymbol)\n    {\n      this.setState({ useNewSymbol: false });\n    }\n  }\n\n  onElementChange(e, element, symbol)\n  {\n    const machineController = this.props.machineController;\n\n    if (symbol.length > 0)\n    {\n      //If there are more than 1 symbols by the same name,\n      //OR if the duplicate symbol found is NOT the same symbol\n      const machine = machineController.getMachineBuilder().getMachine();\n      if (machine.isSymbol(symbol) && symbol !== element.props.symbol)\n      {\n        throw new Error(\"Not a valid symbol\");\n      }\n    }\n  }\n\n  renderAlphabetList(machine, alphabet)\n  {\n    const result = [];\n    for(const symbol of alphabet)\n    {\n      if (!symbol) continue;\n\n      result.push(<AlphabetListElement key={symbol}\n        symbol={symbol}\n        used={machine.isUsedSymbol(symbol)}\n        onFocus={this.onElementFocus}\n        onBlur={this.onElementBlur}\n        onChange={this.onElementChange}/>);\n    }\n    return result;\n  }\n\n  //Override\n  render()\n  {\n    const machineController = this.props.machineController;\n    const machine = machineController.getMachineBuilder().getMachine();\n    const alphabet = machine.getAlphabet();\n\n    return (\n      <div id={this.props.id}\n        className={Style.list_container}\n        style={this.props.style}>\n        <div className={Style.element_list}>\n          {this.renderAlphabetList(machine, alphabet)}\n          <AlphabetListElement\n            ref={ref=>this.newSymbolComponent=ref}\n            style={{display: this.state.useNewSymbol ? \"block\" : \"none\"}}\n            symbol={\"\"}\n            onFocus={this.onElementFocus}\n            onBlur={this.onElementBlur}\n            onChange={this.onElementChange}/>\n        </div>\n        <IconButton className={Style.add_button}\n          title=\"Add Symbol\"\n          onClick={this.onElementAdd}>\n          <BoxAddIcon/>\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nexport default AlphabetListView;\n","import React from 'react';\nimport Style from './StackAlphabetListElement.css';\n\nconst SUBMIT_KEY_CODE = \"Enter\";\nconst CANCEL_KEY_CODE = \"Escape\";\n\nclass StackAlphabetListElement extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this._inputElement = null;\n\n    this.state = {\n      value: null,\n      error: false\n    };\n\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyUp = this.onKeyUp.bind(this);\n  }\n\n  onFocus(e)\n  {\n    const target = e.target;\n    const symbol = this.props.symbol;\n\n    this.setState({\n      value: symbol,\n      error: false\n    }, () => target.select());\n\n    //Call any listening focus\n    if (this.props.onFocus) this.props.onFocus(e, this);\n  }\n\n  onBlur(e)\n  {\n    const nextSymbol = this.state.value;\n\n    //Call any listening blurs\n    if (this.props.onBlur) this.props.onBlur(e, this, nextSymbol);\n\n    //Reset to nothing (will use props.symbol instead)\n    this.setState({ value: null, error: false });\n  }\n\n  onKeyDown(e)\n  {\n    const keyCode = e.key;\n    if (keyCode === SUBMIT_KEY_CODE || keyCode === CANCEL_KEY_CODE)\n    {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  onKeyUp(e)\n  {\n    const keyCode = e.key;\n    const target = e.target;\n\n    if (keyCode === SUBMIT_KEY_CODE)\n    {\n      target.blur();\n    }\n    else if (keyCode === CANCEL_KEY_CODE)\n    {\n      this.setState({\n        value: null,\n        error: false\n      }, () => target.blur());\n    }\n  }\n\n  onValueChange(e)\n  {\n    let value = e.target.value.trim();\n    let error = false;\n\n    if (this.props.onChange)\n    {\n      try\n      {\n        this.props.onChange(e, this, value);\n      }\n      catch(e)\n      {\n        error = true;\n      }\n    }\n\n    this.setState({\n      value: value,\n      error: error\n    });\n  }\n\n  focus()\n  {\n    this._inputElement.focus();\n  }\n\n  //Override\n  render()\n  {\n    const inputSymbol = this.state.value;\n    const displaySymbol = inputSymbol === null ? this.props.symbol : inputSymbol;\n\n    const symbolUsed = this.props.used || false;\n\n    return (\n      <div id={this.props.id}\n        className={Style.element_container +\n          (displaySymbol !== null && displaySymbol.length <= 0 ? \" empty \" : \"\") +\n          (inputSymbol !== null && this.state.error ? \" error \" : \"\") +\n          (symbolUsed ? \" used \" : \"\") +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <input ref={ref=>this._inputElement=ref}\n          spellCheck={false}\n          maxLength={1}\n          style={{width: \"1ch\"}}\n          value={displaySymbol}\n          onChange={this.onValueChange}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          onKeyDown={this.onKeyDown}\n          onKeyUp={this.onKeyUp}/>\n      </div>\n    );\n  }\n}\n\nexport default StackAlphabetListElement;\n","import React from 'react';\nimport Style from './StackAlphabetListView.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport BoxAddIcon from 'experimental/iconset/BoxAddIcon.js';\n\nimport StackAlphabetListElement from './StackAlphabetListElement.js';\n\nclass StackAlphabetListView extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.newSymbolComponent = null;\n\n    this.state = {\n      useNewSymbol: false\n    };\n\n    this.onElementAdd = this.onElementAdd.bind(this);\n    this.onElementFocus = this.onElementFocus.bind(this);\n    this.onElementBlur = this.onElementBlur.bind(this);\n    this.onElementChange = this.onElementChange.bind(this);\n  }\n\n  onElementAdd(e)\n  {\n    //Create a new alphabet element...\n    this.setState({useNewSymbol: true}, () => {\n      this.newSymbolComponent.focus();\n    });\n  }\n\n  onElementFocus(e, element)\n  {\n    //Do nothing...\n  }\n\n  onElementBlur(e, element, nextSymbol)\n  {\n    const symbol = element.props.symbol;\n    const machineController = this.props.machineController;\n\n    if (nextSymbol !== null)\n    {\n      const machine = machineController.getMachineBuilder().getMachine();\n      if (nextSymbol.length > 0)\n      {\n        if (!machine.isStackSymbol(nextSymbol))\n        {\n          if (symbol)\n          {\n            //None other have the same name. Rename it!\n            machineController.renameStackSymbol(symbol, nextSymbol);\n          }\n          else\n          {\n            //None other have the same name. Create it!\n            machineController.createStackSymbol(nextSymbol);\n          }\n        }\n        else\n        {\n          //Found something already named that! Ignore!\n        }\n      }\n      else if (symbol)\n      {\n        //Delete!\n        machineController.deleteStackSymbol(symbol);\n      }\n    }\n\n    //Regardless, just close the \"new\" alphabet element if open.\n    if (this.state.useNewSymbol)\n    {\n      this.setState({ useNewSymbol: false });\n    }\n  }\n\n  onElementChange(e, element, symbol)\n  {\n    const machineController = this.props.machineController;\n\n    if (symbol.length > 0)\n    {\n      //If there are more than 1 symbols by the same name,\n      //OR if the duplicate symbol found is NOT the same symbol\n      const machine = machineController.getMachineBuilder().getMachine();\n      if (machine.isStackSymbol(symbol) && symbol !== element.props.symbol)\n      {\n        throw new Error(\"Not a valid symbol\");\n      }\n    }\n  }\n\n  renderStackAlphabetList(machine, alphabet)\n  {\n    const result = [];\n    for(const symbol of alphabet)\n    {\n      if (!symbol) continue;\n\n      result.push(<StackAlphabetListElement key={symbol}\n        symbol={symbol}\n        used={machine.isUsedStackSymbol(symbol)}\n        onFocus={this.onElementFocus}\n        onBlur={this.onElementBlur}\n        onChange={this.onElementChange}/>);\n    }\n    return result;\n  }\n\n  //Override\n  render()\n  {\n    const machineController = this.props.machineController;\n    const machine = machineController.getMachineBuilder().getMachine();\n    const alphabet = machine.getStackAlphabet();\n\n    return (\n      <div id={this.props.id}\n        className={Style.list_container}\n        style={this.props.style}>\n        <div className={Style.element_list}>\n          {this.renderStackAlphabetList(machine, alphabet)}\n          <StackAlphabetListElement\n            ref={ref=>this.newSymbolComponent=ref}\n            style={{display: this.state.useNewSymbol ? \"block\" : \"none\"}}\n            symbol={\"\"}\n            onFocus={this.onElementFocus}\n            onBlur={this.onElementBlur}\n            onChange={this.onElementChange}/>\n        </div>\n        <IconButton className={Style.add_button}\n          title=\"Add Stack\"\n          onClick={this.onElementAdd}>\n          <BoxAddIcon/>\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nexport default StackAlphabetListView;\n","import React from 'react';\nimport Style from './AutoStateLabelView.css';\n\nimport FormattedInput from 'system/formattedinput/FormattedInput.js';\n\nclass AutoStateLabelView extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.onAutoStatePrefixSubmit = this.onAutoStatePrefixSubmit.bind(this);\n    this.onAutoStatePrefixFormat = this.onAutoStatePrefixFormat.bind(this);\n  }\n\n  onAutoStatePrefixSubmit(next, prev)\n  {\n    const graphController = this.props.graphController;\n    const graphLabeler = graphController.getGraphLabeler();\n\n    const prefix = graphLabeler.getDefaultNodeLabelPrefix();\n    if (prefix != next)\n    {\n      graphLabeler.setDefaultNodeLabelPrefix(next);\n      graphController.applyAutoRename();\n    }\n  }\n\n  onAutoStatePrefixFormat(value)\n  {\n    return value && value.length > 0 ? value :\n      this.props.graphController.getGraphLabeler().getDefaultNodeLabelPrefix();\n  }\n\n  //Override\n  render()\n  {\n    const graphController = this.props.graphController;\n\n    return (\n      <div id={this.props.id}\n        className={Style.select_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <label className={Style.select_label}>\n          State Labels\n        </label>\n        <FormattedInput\n          className={Style.prefix_editor}\n          defaultValue={graphController.getGraphLabeler().getDefaultNodeLabelPrefix()}\n          captureOnExit=\"save\"\n          formatter={this.onAutoStatePrefixFormat}\n          onSubmit={this.onAutoStatePrefixSubmit}/>\n        <select className={Style.postfix_selector}\n          onChange={this.onMachineTypeChange}\n          disabled={true}>\n          <option>0-9</option>\n          <option>a-z</option>\n          <option>A-Z</option>\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default AutoStateLabelView;\n","import React from 'react';\nimport Style from './OverviewPanel.css';\n\nimport PanelContainer from 'experimental/panels/PanelContainer.js';\nimport PanelSection from 'experimental/panels/PanelSection.js';\nimport PanelDivider from 'experimental/panels/PanelDivider.js';\nimport PanelSwitch from 'experimental/panels/PanelSwitch.js';\n\nimport StateListView from './states/StateListView.js';\nimport AlphabetListView from './alphabet/AlphabetListView.js';\nimport StackAlphabetListView from './stackalphabet/StackAlphabetListView.js';\nimport AutoStateLabelView from './AutoStateLabelView.js';\n\nclass OverviewPanel extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.onAutoLayoutApply = this.onAutoLayoutApply.bind(this);\n    this.onAutoLayoutChange = this.onAutoLayoutChange.bind(this);\n    this.onAutoLabelChange = this.onAutoLabelChange.bind(this);\n    this.onSnapToGridChange = this.onSnapToGridChange.bind(this);\n  }\n\n  onAutoLayoutApply(e)\n  {\n    const session = this.props.session;\n    const currentModule = session.getSession().getCurrentModule();\n    const graphController = currentModule.getGraphController();\n    graphController.applyAutoLayout();\n  }\n\n  onAutoLayoutChange(e)\n  {\n    //TODO: Not yet implemented...\n  }\n\n  onAutoLabelChange(e)\n  {\n    const session = this.props.session;\n    const currentModule = session.getSession().getCurrentModule();\n    const graphController = currentModule.getGraphController();\n    graphController.setAutoRenameNodes(e.target.checked);\n  }\n\n  onSnapToGridChange(e)\n  {\n    //TODO: Not yet implemented...\n  }\n\n  //Override\n  render()\n  {\n    const drawer = this.props.drawer;\n    const session = this.props.session;\n    const currentModule = session.getCurrentModule();\n    const graphController = currentModule.getGraphController();\n    const machineController = currentModule.getMachineController();\n    const autoRename = graphController.shouldAutoRenameNodes();\n\n    const drawerFull = drawer.isDrawerFullscreen();\n\n    return (\n      <PanelContainer id={this.props.id}\n        className={this.props.className}\n        style={this.props.style}\n        title={OverviewPanel.TITLE}>\n\n        <PanelSection title={\"States\"} initial={true} full={drawerFull}>\n          <StateListView graphController={graphController}/>\n        </PanelSection>\n        <PanelSection title={\"Alphabet\"} initial={true} full={drawerFull}>\n          <AlphabetListView machineController={machineController}/>\n        </PanelSection>\n        <PanelSection title={\"Stack Alphabet\"} initial={true} full={drawerFull}>\n          <StackAlphabetListView machineController={machineController}/>\n        </PanelSection>\n\n        <PanelDivider/>\n\n        <AutoStateLabelView graphController={graphController}/>\n\n        <button className={Style.autolayout_button} onClick={this.onAutoLayoutApply} disabled={graphController.getGraph().isEmpty()}>\n          {I18N.toString(\"action.overview.autolayout\")}\n        </button>\n\n        <PanelDivider/>\n\n        <PanelSwitch id={\"overview-auto-label\"}\n          checked={autoRename}\n          title={\"Auto rename nodes\"}\n          onChange={this.onAutoLabelChange}/>\n        <PanelSwitch id={\"overview-auto-layout\"}\n          checked={false}\n          title={\"Auto layout nodes\"}\n          disabled={true}\n          onChange={this.onAutoLayoutChange}/>\n        <PanelSwitch id={\"overview-snap-grid\"}\n          checked={false}\n          title={\"Snap-to-grid\"}\n          disabled={true}\n          onChange={this.onSnapToGridChange}/>\n\n      </PanelContainer>\n    );\n  }\n}\nObject.defineProperty(OverviewPanel, 'TITLE', {\n  get: function() { return I18N.toString(\"component.overview.title\"); }\n});\n\nexport default OverviewPanel;\n","import React from 'react';\nimport Style from './TestItem.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport SubtractIcon from 'experimental/iconset/SubtractIcon.js';\nimport CheckCircleIcon from 'experimental/iconset/CheckCircleIcon.js';\nimport CrossCircleIcon from 'experimental/iconset/CrossCircleIcon.js';\nimport PendingIcon from 'experimental/iconset/PendingIcon.js';\nimport RunningManIcon from 'experimental/iconset/RunningManIcon.js';\nimport WalkingManIcon from 'experimental/iconset/WalkingManIcon.js';\n\nexport const DEFAULT_MODE = \"default\";\nexport const SUCCESS_MODE = \"success\";\nexport const FAILURE_MODE = \"failure\";\nexport const WORKING_MODE = \"working\";\n\nclass TestItem extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.inputElement = null;\n\n    this.state = {\n      value: this.props.defaultValue || \"\",\n      status: DEFAULT_MODE\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  focus()\n  {\n    if (this.inputElement)\n    {\n      this.inputElement.focus();\n    }\n  }\n\n  setValue(value, callback=null)\n  {\n    if (this.state.value !== value)\n    {\n      this.setState({value: value}, callback);\n    }\n    else if (callback)\n    {\n      callback();\n    }\n  }\n\n  setStatus(status, callback=null)\n  {\n    if (this.state.status !== status)\n    {\n      this.setState({status: status}, callback);\n    }\n    else if (callback)\n    {\n      callback();\n    }\n  }\n\n  resetStatus(callback=null)\n  {\n    if (this.state.status !== DEFAULT_MODE)\n    {\n      this.setState({status: DEFAULT_MODE}, callback);\n    }\n    else if (callback)\n    {\n      callback();\n    }\n  }\n\n  getValue()\n  {\n    return this.state.value;\n  }\n\n  getStatus()\n  {\n    return this.state.status;\n  }\n\n  onChange(e)\n  {\n    const nextValue = e.target.value;\n    if (this.state.value !== nextValue)\n    {\n      this.setState({value: nextValue, status: DEFAULT_MODE});\n    }\n  }\n\n  //Override\n  render()\n  {\n    const onDelete = this.props.onDelete;\n    const showDelete = true;\n\n    const onTest = this.props.onTest;\n    const showTest = true;\n\n    const active = this.props.active;\n    const subtitle = this.props.subtitle;\n    const placeholder = this.props.placeholder;\n    const status = this.state.status;\n\n    return (\n      <div id={this.props.id}\n        className={Style.test_item_container +\n          (active ? \" active \" : \"\") +\n          \" \" + status +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        {showTest &&\n          <IconButton className={Style.test_button}\n            title={\"Test\"}\n            disabled={!onTest}\n            onClick={(e) => onTest(e, this)}>\n            {status === SUCCESS_MODE ?\n              <CheckCircleIcon/> :\n              status === FAILURE_MODE ?\n              <CrossCircleIcon/> :\n              status === WORKING_MODE ?\n              <PendingIcon/> :\n              <RunningManIcon/>}\n          </IconButton>}\n        <div className={Style.test_input}>\n          <input ref={ref=>this.inputElement=ref} type=\"text\"\n            placeholder={placeholder}\n            value={this.state.value}\n            onChange={this.onChange}/>\n          <label>{this.props.subtitle}</label>\n        </div>\n        {showDelete &&\n          <IconButton className={Style.delete_button}\n            title={\"Delete\"}\n            disabled={!onDelete}\n            onClick={(e) => onDelete(e, this)}>\n            <SubtractIcon/>\n          </IconButton>}\n      </div>\n    );\n  }\n}\n\nexport default TestItem;\n","import React from 'react';\nimport Style from './TestListView.css';\n\nimport { guid } from 'util/MathHelper.js';\nimport { downloadText } from 'util/Downloader.js';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport IconUploadButton from 'experimental/components/IconUploadButton.js';\n\nimport PageContentIcon from 'experimental/iconset/PageContentIcon.js';\nimport UploadIcon from 'experimental/iconset/UploadIcon.js';\nimport DownloadIcon from 'experimental/iconset/DownloadIcon.js';\nimport CrossIcon from 'experimental/iconset/CrossIcon.js';\nimport AddIcon from 'experimental/iconset/AddIcon.js';\nimport RunningManIcon from 'experimental/iconset/RunningManIcon.js';\nimport WalkingManIcon from 'experimental/iconset/WalkingManIcon.js';\n\nimport TestItem, {SUCCESS_MODE, FAILURE_MODE, WORKING_MODE, DEFAULT_MODE} from './TestItem.js';\n\nimport GraphChangeHandler from 'experimental/GraphChangeHandler.js';\n\nconst ACCEPT_FILE_TYPES = ['.txt'];\nconst TEST_FILENAME = \"test.txt\";\nconst TEST_REFRESH_TICKS = 30;\n\nclass TestListView extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this._testList = [];\n    this._testName = TEST_FILENAME;\n\n    this.onTestNew = this.onTestNew.bind(this);\n    this.onTestUpload = this.onTestUpload.bind(this);\n    this.onTestDownload = this.onTestDownload.bind(this);\n    this.onTestClose = this.onTestClose.bind(this);\n    this.onTestAdd = this.onTestAdd.bind(this);\n    this.onTestDelete = this.onTestDelete.bind(this);\n    this.onTestTest = this.onTestTest.bind(this);\n    this.onTestRunAll = this.onTestRunAll.bind(this);\n    this.onGraphChange = this.onGraphChange.bind(this);\n  }\n\n  //Override\n  componentDidMount()\n  {\n    this.props.graphController.getGraphChangeHandler().addListener(this.onGraphChange);\n  }\n\n  //Override\n  componentWillUnmount()\n  {\n    this.props.graphController.getGraphChangeHandler().removeListener(this.onGraphChange);\n  }\n\n  onGraphChange(graph)\n  {\n    for(const test of this._testList)\n    {\n      test.ref.resetStatus();\n    }\n  }\n\n  onTestNew(e)\n  {\n    if (!this.isEmpty())\n    {\n      this.onTestClose(e);\n    }\n\n    this.onTestAdd(e);\n  }\n\n  onTestUpload(fileBlob)\n  {\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      try\n      {\n        this._testName = fileBlob.name;\n        this._testList.length = 0;\n\n        const tests = event.target.result.split(\"\\n\");\n        for(let test of tests)\n        {\n          test = test.trim();\n          if (test.length > 0)\n          {\n            this._testList.push({\n              id: guid(),\n              defaultValue: test,\n              ref: null\n            });\n          }\n        }\n\n        //Make sure an element exists, at least\n        if (this._testList.length <= 0)\n        {\n          this.onTestAdd(null);\n        }\n      }\n      catch(e)\n      {\n        reader.abort();\n      }\n    };\n    reader.readAsText(fileBlob);\n  }\n\n  onTestDownload(e)\n  {\n    const testStrings = [];\n    for(const test of this._testList)\n    {\n      const ref = test.ref;\n      if (ref)\n      {\n        testStrings.push(ref.getValue());\n      }\n    }\n\n    downloadText(this._testName, testStrings.join('\\n'));\n  }\n\n  onTestClose(e)\n  {\n    const tester = this.props.tester;\n    if (tester.isTesting())\n    {\n      tester.stopTest();\n    }\n\n    this._testList.length = 0;\n  }\n\n  onTestAdd(e)\n  {\n    this._testList.push({\n      id: guid(),\n      defaultValue: \"\",\n      ref: null\n    });\n  }\n\n  onTestRunAll(e)\n  {\n    const tester = this.props.tester;\n    let i = 0;\n\n    const nextTest = () => {\n      const test = this._testList[i];\n      this.onTestTest(null, test.ref, true, () => {\n        ++i;\n        if (i < this._testList.length)\n        {\n          nextTest();\n        }\n      });\n    }\n    nextTest();\n  }\n\n  onTestDelete(e, item)\n  {\n    //Already handled in render()\n  }\n\n  onTestTest(e, item, forceImmediate=false, callback=null)\n  {\n    const immediate = forceImmediate || this.props.immediate;\n    const tester = this.props.tester;\n    const itemValue = item.getValue();\n\n    item.setState({status: WORKING_MODE});\n\n    const graphController = this.props.graphController;\n    const machineController = this.props.machineController;\n    tester.startTest(itemValue, graphController, machineController).then((result) => {\n      item.setState({status: result ? SUCCESS_MODE : FAILURE_MODE});\n    }, (err) => {\n      //It didn't work out :(\n      item.setState({status: DEFAULT_MODE});\n    });\n\n    if (immediate)\n    {\n      const promise = tester.runTest(graphController, machineController, true);\n      if (callback)\n      {\n        promise.then(callback);\n      }\n    }\n  }\n\n  isEmpty()\n  {\n    return this._testList.length <= 0;\n  }\n  \n  //Override\n  render()\n  {\n    const immediate = this.props.immediate;\n    const tester = this.props.tester;\n\n    const graphController = this.props.graphController;\n    const machineController = this.props.machineController;\n\n    const empty = this.isEmpty();\n    const disabled = tester && tester.isTesting();\n\n    return (\n      <div id={this.props.id}\n        className={Style.test_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <div className={Style.test_control_tray}>\n          <IconButton className={Style.test_control_button}\n            title={I18N.toString(\"action.testing.new\")}\n            onClick={this.onTestNew}>\n            <PageContentIcon/>\n          </IconButton>\n          <IconUploadButton className={Style.test_control_button}\n            title={I18N.toString(\"action.testing.import\")}\n            accept={ACCEPT_FILE_TYPES.join(\",\")}\n            onUpload={this.onTestUpload}>\n            <UploadIcon/>\n          </IconUploadButton>\n          <IconButton className={Style.test_control_button}\n            title={I18N.toString(\"action.testing.save\")}\n            disabled={empty}\n            onClick={this.onTestDownload}>\n            <DownloadIcon/>\n          </IconButton>\n          <IconButton className={Style.test_control_button}\n            title={I18N.toString(\"action.testing.clear\")}\n            disabled={empty}\n            onClick={this.onTestClose}>\n            <CrossIcon/>\n          </IconButton>\n        </div>\n        <div className={Style.test_list_container +\n          (empty ? \" empty \" : \"\") +\n          (disabled ? \" disabled \": \"\")}>\n          <IconButton className={Style.test_list_add}\n            title={\"Add\"} onClick={this.onTestAdd}>\n            <AddIcon/>\n            <span className={Style.test_list_count}>\n              {!empty ? \"\" + this._testList.length : \"\"}\n            </span>\n          </IconButton>\n          <div className={Style.test_list_scroll_container}>\n            <div className={Style.test_list}>\n              {this._testList.map((e, i) => {\n                const id = e.id;\n                const defaultValue = e['defaultValue'] || \"\";\n                let testCallback = this.onTestTest;\n                if (!tester || graphController.getGraph().isEmpty())\n                {\n                  testCallback = null;\n                }\n                return <TestItem key={id} ref={ref=>e.ref=ref}\n                  defaultValue={defaultValue}\n                  onTest={testCallback}\n                  onDelete={(e, item) => {\n                    this._testList.splice(i, 1);\n                    this.onTestDelete(e, item);\n                  }}/>\n              })}\n            </div>\n          </div>\n          <IconButton className={Style.test_list_runall}\n            title={\"Run All\"} onClick={this.onTestRunAll}>\n            <RunningManIcon/>\n          </IconButton>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TestListView;\n","import React from 'react';\nimport GraphNode from 'graph/GraphNode.js';\n\nconst ARROW = '\\u2192';\n\nclass TransitionErrorMessage extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.targetIndex = 0;\n    this.targetLabel = \"\";\n    const targets = props.message.value.targets;\n    for(const target of targets)\n    {\n      if (this.targetLabel.length > 0)\n      {\n        this.targetLabel += \", \";\n      }\n      this.targetLabel += \"(\" + target.getSourceNode().getNodeLabel() + \", \" +\n        target.getEdgeLabel() + \") \" +\n        ARROW + \" \" + (target.getDestinationNode() instanceof GraphNode ? target.getDestinationNode().getNodeLabel() : \"null\");\n    }\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e)\n  {\n    const graphController = this.props.graphController;\n    const machineController = this.props.machineController;\n    const buttonValue = e.target.value;\n    const message = this.props.message;\n    switch(buttonValue)\n    {\n      case \"locate\":\n      {\n        const targets = message.value.targets;\n        const targetLength = targets.length;\n        if (targetLength > 0 && this.targetIndex < targetLength)\n        {\n          //Locate the target edge\n          const target = targets[this.targetIndex++];\n          if (this.targetIndex >= targetLength) this.targetIndex = 0;\n\n          //Move pointer to target\n          graphController.focusOnEdge(target);\n        }\n      }\n      break;\n      case \"deleteall\":\n      {\n        const targets = message.value.targets;\n        //Delete all target edges\n        graphController.deleteTargetEdges(targets);\n\n        //Exit the message\n        message.close();\n      }\n      break;\n      default:\n        throw new Error(\"Unknown button value for message\");\n    }\n  }\n\n  //Override\n  render()\n  {\n    return <div>\n      <p>{this.props.message.value.text + \": \" + this.targetLabel}</p>\n      <button value=\"locate\" onClick={this.onClick}>{I18N.toString(\"message.action.locate\")}</button>\n      <button value=\"deleteall\" onClick={this.onClick}>{I18N.toString(\"message.action.deleteall\")}</button>\n    </div>;\n  }\n}\n\nexport default TransitionErrorMessage;\n","import React from 'react';\n\nclass StateUnreachableWarningMessage extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.targetIndex = 0;\n    this.targetLabel = \"\";\n    const targets = props.message.value;\n    for(const target of targets)\n    {\n      if (this.targetLabel.length > 0)\n      {\n        this.targetLabel += \", \";\n      }\n      this.targetLabel += target.getNodeLabel();\n    }\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e)\n  {\n    const graphController = this.props.graphController;\n    const machineController = this.props.machineController;\n    const buttonValue = e.target.value;\n    const message = this.props.message;\n    switch(buttonValue)\n    {\n      case \"locate\":\n      {\n        //Locate the target node\n        const target = message.value[this.targetIndex++];\n        if (this.targetIndex >= message.value.length)\n        {\n          this.targetIndex = 0;\n        }\n\n        //Move pointer to target\n        graphController.focusOnNode(target);\n      }\n      break;\n      case \"deleteall\":\n      {\n        const targets = message.value;\n        //Delete all target nodes\n        graphController.deleteTargetNodes(targets);\n\n        //Sort the nodes after deleting if enabled...\n        graphController.applyAutoRename();\n\n        //Exit the message\n        message.close();\n      }\n      break;\n      default:\n        throw new Error(\"Unknown button value for message\");\n    }\n  }\n\n  //Override\n  render()\n  {\n    return <div>\n      <p>{I18N.toString(\"message.warning.unreachable\") + \": \" + this.targetLabel}</p>\n      <button value=\"locate\" onClick={this.onClick}>{I18N.toString(\"message.action.locate\")}</button>\n      <button value=\"deleteall\" onClick={this.onClick}>{I18N.toString(\"message.action.deleteall\")}</button>\n    </div>;\n  }\n}\n\nexport default StateUnreachableWarningMessage;\n","import React from 'react';\n\nclass StateErrorMessage extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.targetIndex = 0;\n    this.targetLabel = \"\";\n    const targets = props.message.value.targets;\n    for(const target of targets)\n    {\n      if (this.targetLabel.length > 0)\n      {\n        this.targetLabel += \", \";\n      }\n      this.targetLabel += target.getNodeLabel();\n    }\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e)\n  {\n    const graphController = this.props.graphController;\n    const machineController = this.props.machineController;\n    const buttonValue = e.target.value;\n    const message = this.props.message;\n    switch(buttonValue)\n    {\n      case \"locate\":\n      {\n        const targets = message.value.targets;\n        const targetLength = targets.length;\n        if (targetLength > 0 && this.targetIndex < targetLength)\n        {\n          //Locate the target edge\n          const target = targets[this.targetIndex++];\n          if (this.targetIndex >= targetLength) this.targetIndex = 0;\n\n          //Move pointer to target\n          graphController.focusOnNode(target);\n        }\n      }\n      break;\n      case \"deleteall\":\n      {\n        const targets = message.value.targets;\n        //Delete all target nodes\n        graphController.deleteTargetNodes(targets);\n\n        //Sort the nodes after deleting if enabled...\n        graphController.applyAutoRename();\n\n        //Exit the message\n        message.close();\n      }\n      break;\n      default:\n        throw new Error(\"Unknown button value for message\");\n    }\n  }\n\n  //Override\n  render()\n  {\n    const message = this.props.message;\n    return <div>\n      <p>{message.value.text + \": \" + this.targetLabel}</p>\n      <button value=\"locate\" onClick={this.onClick}>{I18N.toString(\"message.action.locate\")}</button>\n      <button value=\"deleteall\" onClick={this.onClick}>{I18N.toString(\"message.action.deleteall\")}</button>\n    </div>;\n  }\n}\n\nexport default StateErrorMessage;\n","import Notifications from 'system/notification/Notifications.js';\nimport TransitionErrorMessage from './notifications/TransitionErrorMessage.js';\nimport StateUnreachableWarningMessage from './notifications/StateUnreachableWarningMessage.js';\nimport StateErrorMessage from './notifications/StateErrorMessage.js';\n\nimport { ERROR_UNREACHABLE_STATE,\n  ERROR_DUPLICATE_STATE,\n  ERROR_INCOMPLETE_TRANSITION } from './machine/PDABuilder.js';\n\nexport const ERROR_MESSAGE_TAG = \"pda_build_error\";\n\nclass PDAErrorChecker\n{\n  constructor(graphController, machineController)\n  {\n    this._graphController = graphController;\n    this._machineController = machineController;\n    this._showErrorOnChange = false;\n\n    this.onMachineChange = this.onMachineChange.bind(this);\n\n    machineController.getMachineBuilder().getMachineChangeHandler().addListener(this.onMachineChange);\n  }\n\n  onMachineChange(machineBuilder)\n  {\n    if (this._showErrorOnChange)\n    {\n      this.showErrors();\n    }\n  }\n\n  setErrorChecking(enabled)\n  {\n    this._showErrorOnChange = enabled;\n  }\n\n  isErrorChecking()\n  {\n    return this._showErrorOnChange;\n  }\n\n  showErrors()\n  {\n    const props = {graphController: this._graphController, machineController: this._machineController};\n    const machineBuilder = this._machineController.getMachineBuilder();\n    const errors = machineBuilder.getMachineErrors();\n    const warnings = machineBuilder.getMachineWarnings();\n\n    Notifications.clearMessages(ERROR_MESSAGE_TAG);\n    if (errors.length <= 0 && warnings.length <= 0)\n    {\n      Notifications.addMessage(I18N.toString(\"message.error.none\"), \"success\", ERROR_MESSAGE_TAG, null, null, false);\n    }\n    else\n    {\n      for(const warning of warnings)\n      {\n        switch(warning.name)\n        {\n          case ERROR_DUPLICATE_STATE:\n            Notifications.addMessage({\n              text: \"Found duplicate nodes of similar names\",\n              targets: warning.nodes},\n              \"warning\", ERROR_MESSAGE_TAG, StateErrorMessage, props, false);\n          break;\n          case ERROR_UNREACHABLE_STATE:\n            Notifications.addMessage(warning.nodes,\n              \"warning\", ERROR_MESSAGE_TAG, StateUnreachableWarningMessage, props, false);\n          break;\n        }\n      }\n\n      for(const error of errors)\n      {\n        switch(error.name)\n        {\n          case ERROR_INCOMPLETE_TRANSITION:\n            Notifications.addMessage({\n              text: I18N.toString(\"message.error.incomplete\"),\n              targets: error.edges\n            }, \"error\", ERROR_MESSAGE_TAG, TransitionErrorMessage, props, false);\n          break;\n        }\n      }\n    }\n  }\n}\n\nexport default PDAErrorChecker;\n","import React from 'react';\nimport Style from './TestingPanel.css';\n\nimport PanelContainer from 'experimental/panels/PanelContainer.js';\nimport PanelSwitch from 'experimental/panels/PanelSwitch.js';\n\nimport TestListView from './TestListView.js';\n\nimport Notifications from 'system/notification/Notifications.js';\nimport {ERROR_MESSAGE_TAG} from 'modules/pda/PDAErrorChecker.js';\n\nclass TestingPanel extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.state = {\n      stepMode: false\n    };\n\n    this.onStepTestChange = this.onStepTestChange.bind(this);\n    this.onAutoErrorCheckChange = this.onAutoErrorCheckChange.bind(this);\n  }\n\n  //Override\n  componentDidMount()\n  {\n    //TODO: This should be in modules...\n    const session = this.props.session;\n    const app = session.getApp();\n    const currentModule = session.getCurrentModule();\n    const tester = currentModule._tester;\n    tester.on(\"startTest\", (tester) => {\n      app._viewport.setCurrentView(1);\n      app._drawer.setDrawerSoloClass(TestingPanel);\n      app._drawer.closeDrawer();\n    });\n    tester.on(\"stopTest\", (tester) => {\n      app._viewport.setCurrentView(0);\n      app._drawer.setDrawerSoloClass(null);\n      app._drawer.openDrawer();\n    });\n  }\n\n  onStepTestChange(e)\n  {\n    this.setState((prev, props) => {\n      return {stepMode: !prev.stepMode};\n    });\n  }\n\n  onAutoErrorCheckChange(e)\n  {\n    const currentModule = this.props.session.getCurrentModule();\n    const errorChecker = currentModule.getErrorChecker();\n    const errorCheck = errorChecker.isErrorChecking();\n    errorChecker.setErrorChecking(!errorCheck);\n    if (errorCheck)\n    {\n      //Turning it off\n      Notifications.clearMessages(ERROR_MESSAGE_TAG);\n    }\n  }\n\n  //Override\n  render()\n  {\n    const session = this.props.session;\n    const app = session.getApp();\n    const currentModule = session.getCurrentModule();\n    const graphController = currentModule.getGraphController();\n    const machineController = currentModule.getMachineController();\n    const tester = currentModule.getStringTester();\n    const errorChecker = currentModule.getErrorChecker();\n\n    const stepMode = this.state.stepMode;\n    const errorCheck = errorChecker.isErrorChecking();\n\n    return (\n      <PanelContainer id={this.props.id}\n        className={Style.panel_container +\n          \" \" + this.props.className}\n        style={this.props.style}\n        title={TestingPanel.TITLE}>\n\n        <TestListView tester={tester} graphController={graphController} machineController={machineController} immediate={!stepMode}/>\n        <PanelSwitch id={\"testing-step-test\"} checked={stepMode} onChange={this.onStepTestChange} title={\"Step testing\"}/>\n        <PanelSwitch id={\"testing-error-check\"} checked={errorCheck} onChange={this.onAutoErrorCheckChange} title={\"Auto error checking\"}/>\n\n      </PanelContainer>\n    );\n  }\n}\nObject.defineProperty(TestingPanel, 'TITLE', {\n  get: function() { return I18N.toString(\"component.testing.title\"); }\n});\n\nexport default TestingPanel;\n","import React from 'react';\nimport Style from './AnalysisPanel.css';\n\nimport PanelContainer from 'experimental/panels/PanelContainer.js';\nimport PanelSection from 'experimental/panels/PanelSection.js';\nimport PanelCheckbox from 'experimental/panels/PanelCheckbox.js';\n\nclass AnalysisPanel extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.optimizeUnreachOption = null;\n    this.optimizeRedundOption = null;\n\n    this.onOptimizeMachine = this.onOptimizeMachine.bind(this);\n  }\n\n  onDeleteAllUnreachable(e)\n  {\n    const session = this.props.session;\n    const currentModule = session.getCurrentModule();\n    const graphController = currentModule.getGraphController();\n    const machineController = currentModule.getMachineController();\n    const unreachableArray = machineController.getUnreachableNodes();\n    graphController.deleteTargetNodes(unreachableArray);\n  }\n\n  onOptimizeMachine(e)\n  {\n    if (this.optimizeUnreachOption.isChecked())\n    {\n      this.onDeleteAllUnreachable(e);\n    }\n  }\n\n  canOptimize()\n  {\n    return (this.optimizeRedundOption && this.optimizeRedundOption.isChecked()) ||\n    (this.optimizeUnreachOption && this.optimizeUnreachOption.isChecked());\n  }\n\n  //Override\n  render()\n  {\n    const session = this.props.session;\n    const currentModule = session.getCurrentModule();\n    const graphController = currentModule.getGraphController();\n    const machineController = currentModule.getMachineController();\n\n    return (\n      <PanelContainer id={this.props.id}\n        className={this.props.className}\n        style={this.props.style}\n        title={AnalysisPanel.TITLE}>\n        <PanelSection title={\"Optimizations\"} initial={true}>\n          <PanelCheckbox ref={ref=>this.optimizeUnreachOption=ref}\n            id=\"opt-unreach\" title=\"Unreachables\" value=\"unreach\"/>\n          <PanelCheckbox ref={ref=>this.optimizeRedundOption=ref} disabled={true}\n            id=\"opt-redund\" title=\"Redundant States\" value=\"redund\"/>\n          <button className={Style.analysis_button} onClick={this.onOptimizeMachine} disabled={!this.canOptimize()}>Optimize</button>\n        </PanelSection>\n      </PanelContainer>\n    );\n  }\n}\nObject.defineProperty(AnalysisPanel, 'TITLE', {\n  get: function() { return I18N.toString(\"component.analysis.title\"); }\n});\n\nexport default AnalysisPanel;\n","const MAX_COMPUTATION_STEPS = 1000;\n\nexport function solvePDA(pda, input)\n{\n  if (typeof input === 'string') input = input[Symbol.iterator]();\n\n  //Solve it with non-determinism\n  const cachedStates = [];\n  const cachedSymbols = [];\n\n  //Start with the start state...\n  const startState = pda.getStartState();\n  //(index refers to the \"level\" of computation)\n  cachedStates.push({state: startState, stack: [], index: 0});\n  //...and any state defined similarly by closure\n  for (const relatedStateAndStack of pda.doClosureTransition(startState, []))\n  {\n    cachedStates.push({state: relatedStateAndStack[0], stack : relatedStateAndStack[1], index: 0});\n  }\n\n  //The next symbol to compute...\n  let symbol = null;\n\n  //Just to be safe from infinite loops...\n  let counter = 0;\n  while(cachedStates.length > 0)\n  {\n    symbol = input.next().value;\n    if (solvePDAByStep(pda, symbol, cachedStates, cachedSymbols))\n    {\n      return true;\n    }\n\n    //HACK: This is to stop any infinite loops! This will be fixed in the future!\n    ++counter;\n    if (counter > MAX_COMPUTATION_STEPS)\n    {\n      return false;\n    }\n  }\n\n  return false;\n}\n\n//TODO: When an empty transition occurs, it does a closure transition.\n//The closure chain will be stored as a group\n//Any future transitions must not re-enter the group\nexport function solvePDAByStep(pda, symbol, cachedStates, cachedSymbols)\n{\n  //initialize variables\n  let state = null;\n  let stack = null;\n  let nextStates = [];\n  let nextIndex = 0;\n\n  if (symbol)\n  {\n    cachedSymbols.push(symbol);\n  }\n\n  for(const cstate of cachedStates)\n  {\n    state = cstate.state;\n    stack = cstate.stack;\n    symbol = cstate.index < cachedSymbols.length ? cachedSymbols[cstate.index] : null;\n\n    if (symbol)\n    {\n      //Read to next state...\n      nextIndex = cstate.index + 1;\n      for(let nextState of pda.doTerminalTransition(state, symbol, stack))\n      {\n        nextStates.push({state: nextState[0], stack: nextState[1], index: nextIndex});\n      }\n    }\n    else\n    {\n      if (pda.isFinalState(state)) return true;\n    }\n\n    //Read none to next state...\n    nextIndex = cstate.index;\n  }\n  cachedStates.length = 0\n  cachedStates.push(...nextStates);\n  return false;\n}\n","class TapeContext\n{\n  constructor(inputString, infiniteLeft=false, infiniteRight=false)\n  {\n    this._tapeInput = inputString ? inputString.split('') : [];\n    this._left = infiniteLeft;\n    this._right = infiniteRight;\n\n    this._index = 0;\n  }\n\n  stepForward()\n  {\n    ++this._index;\n  }\n\n  stepBackward()\n  {\n    --this._index;\n  }\n\n  finish()\n  {\n    this._index = (this._tapeInput.length * 2);\n  }\n\n  reset()\n  {\n    this._index = -1;\n  }\n\n  stop()\n  {\n    this.finish();\n    this.reset();\n  }\n\n  changeTapeSymbol(index, symbol=\"\")\n  {\n    this._tapeInput[index] = symbol;\n  }\n\n  getTapeSourceStatesByIndex(index)\n  {\n    return null;\n  }\n\n  getTapeSymbolByIndex(index)\n  {\n    if (index < 0 || index >= this._tapeInput.length) return \"\";\n    return this._tapeInput[index] || \"\";\n  }\n\n  isTapeLeftInfinite()\n  {\n    return this._left;\n  }\n\n  isTapeRightInfinite()\n  {\n    return this._right;\n  }\n\n  setCurrentTapeIndex(index)\n  {\n    this._index = index;\n  }\n\n  getCurrentTapeIndex()\n  {\n    return this._index;\n  }\n\n  getTapeInput()\n  {\n    return this._tapeInput;\n  }\n}\n\nexport default TapeContext;\n","import Eventable from 'util/Eventable.js';\n\nimport { solvePDAByStep } from 'modules/pda/machine/PDAUtils.js';\n\nimport TapeContext from './TapeContext.js';\n\nclass TestTapeContext extends TapeContext\n{\n  constructor(tester, graphController, machineController)\n  {\n    super(tester.getTestString(), false, true);\n\n    this._tester = tester;\n    this._graphController = graphController;\n    this._machineController = machineController;\n  }\n\n  //Override\n  stepForward()\n  {\n    const graphController = this._graphController;\n    const machineController = this._machineController;\n    this._tester.stepForward(graphController, machineController);\n  }\n\n  //Override\n  stepBackward()\n  {\n    const graphController = this._graphController;\n    const machineController = this._machineController;\n    this._tester.stepBackward(graphController, machineController);\n  }\n\n  //Override\n  reset()\n  {\n    this._tester.resetPosition();\n  }\n\n  //Override\n  finish()\n  {\n    const graphController = this._graphController;\n    const machineController = this._machineController;\n    this._tester.runTest(graphController, machineController, false);\n  }\n\n  //Override\n  stop()\n  {\n    this._tester.stopTest();\n  }\n\n  //Override\n  changeTapeSymbol(index, symbol=\"\")\n  {\n    throw new Error(\"Operation not yet supported\");\n  }\n\n  //Override\n  getTapeSourceStatesByIndex(index)\n  {\n    if (index < 0 || index >= this._tapeInput.length) return null;\n    return this._tester.getNodesAtPosition(index);\n  }\n\n  //Override\n  getTapeSymbolByIndex(index)\n  {\n    if (index < 0 || index >= this._tapeInput.length) return [];\n    return this._tapeInput[index] || \"\";\n  }\n\n  //Override\n  setCurrentTapeIndex(index)\n  {\n    this._tester.changePosition(index);\n  }\n\n  //Override\n  getCurrentTapeIndex()\n  {\n    return this._tester.getPosition();\n  }\n}\n\nclass StringTester\n{\n  constructor()\n  {\n    this._testString = null;\n    this._testIndex = -1;\n\n    this._tapeContext = null;\n\n    //For nfa solver use\n    this._cachePath = [];\n    this._cachedResult = null;\n    this._resolve = null;\n    this._reject = null;\n\n    this.registerEvent(\"startTest\");\n    this.registerEvent(\"stepTest\");\n    this.registerEvent(\"stopTest\");\n  }\n\n  //TODO: a hack to get current targets.\n  get targets()\n  {\n    if (this._cachePath.length <= 0) return [];\n    const cache = this._cachePath[this._cachePath.length - 1];\n    return cache.targets;\n  }\n\n  startTest(testString, graphController, machineController)\n  {\n    if (!testString) testString = \"\";\n    if (this._tapeContext) throw new Error(\"Unable to start an already running test\");\n\n    const graph = graphController.getGraph();\n    if (graph.isEmpty()) return Promise.reject();\n\n    this._testString = testString;\n    this._testIndex = -1;\n    this._cachePath.length = 0;\n    this._cachedResult = null;\n    this._tapeContext = new TestTapeContext(this, graphController, machineController);\n\n    this.emit(\"startTest\", this);\n\n    return new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  stopTest()\n  {\n    if (!this._tapeContext) throw new Error(\"Unable to stop null test\");\n\n    this.emit(\"stopTest\", this);\n\n    if (!this._resolve) throw new Error(\"Must call startTest() before anything else\");\n    if (!this._reject) throw new Error(\"Must call startTest() before anything else\");\n\n    let testResult = null;\n    if (this._cachePath.length >= this._testString.length)\n    {\n      testResult = this._cachedResult;\n      this._resolve(testResult);\n    }\n    else\n    {\n      testResult = null;\n      this._reject();\n    }\n\n    this._testString = null;\n    this._testIndex = -1;\n    this._cachePath.length = 0;\n    this._cachedResult = null;\n    this._tapeContext = null;\n\n    return Promise.resolve(testResult);\n  }\n\n  runTest(graphController, machineController, thenStop=false)\n  {\n    if (!this._tapeContext) throw new Error(\"Unable to run null test\");\n\n    return new Promise((resolve, reject) => {\n      let result = false;\n      do\n      {\n        result = this.stepForward(graphController, machineController, !thenStop);\n      }\n      while (result);\n\n      resolve(this._cachedResult);\n    }).then((result) => {\n      if (thenStop) return this.stopTest();\n      else return result;\n    });\n  }\n\n  stepForward(graphController, machineController, cacheStep=true)\n  {\n    const machine = machineController.getMachineBuilder().getMachine();\n\n    if (this._testIndex >= this._testString.length) return false;\n    ++this._testIndex;\n\n    if (this._cachePath.length <= this._testIndex)\n    {\n      //Calculate current step...\n      let cachedStates, cachedSymbols = null;\n      const isResult = this._testIndex === this._testString.length;\n\n      //Initialize first step...\n      if (this._testIndex <= 0)\n      {\n        cachedStates = [];\n        cachedSymbols = [];\n\n        const startState = machine.getStartState();\n        for (const relatedStateAndStack of machine.doClosureTransition(startState, []))\n        {\n          cachedStates.push({state: relatedStateAndStack[0], stack: relatedStateAndStack[1], index: 0});\n        }\n      }\n      else\n      {\n        const prevCache = this._cachePath[this._testIndex - 1];\n        cachedStates = prevCache.states.slice();\n        cachedSymbols = prevCache.symbols.slice();\n\n        //Do the remaining steps...\n        const nextSymbol = this._testString[this._testIndex - 1];\n        solvePDAByStep(machine, nextSymbol, cachedStates, cachedSymbols);\n      }\n\n      //Do one last step for result...\n      if (isResult)\n      {\n        this._cachedResult = solvePDAByStep(machine, null, cachedStates, cachedSymbols);\n      }\n\n      //Store current step...\n      const targets = new Set();\n      for(const cachedState of cachedStates)\n      {\n        const node = cachedState.state.getSource();\n\n        //Couldn't find the node that was solved for this step...\n        if (!node) throw new Error(\"Could not find node \\'\" + cachedState.state + \"\\'\");\n\n        targets.add(node);\n      }\n      const nextCache = {\n        targets: Array.from(targets),\n        states: cachedStates,\n        symbols: cachedSymbols\n      };\n      this._cachePath.push(nextCache);\n    }\n    else\n    {\n      //Go forward a previously calculated step...by doing nothing...\n    }\n\n    this.emit(\"stepTest\");\n    return true;\n  }\n\n  stepBackward(graphController, machineController)\n  {\n    if (this._testIndex <= 0) return false;\n    --this._testIndex;\n\n    //Go back a step...by doing nothing...\n    this.emit(\"stepTest\");\n    return true;\n  }\n\n  isTesting()\n  {\n    return this._testString !== null;\n  }\n\n  changePosition(position)\n  {\n    if (position >= this._cachePath.length)\n    {\n      this._testIndex = this._cachePath.length - 1;\n    }\n    else\n    {\n      if (position < 0)\n      {\n        this._testIndex = 0;\n      }\n      else if (position >= this._testString.length)\n      {\n        this._testIndex = this._testString.length - 1;\n      }\n      else\n      {\n        this._testIndex = position;\n      }\n    }\n  }\n\n  resetPosition()\n  {\n    this._testIndex = -1;\n  }\n\n  getPosition()\n  {\n    return this._testIndex;\n  }\n\n  isComputedPosition(position)\n  {\n    return this._cachePath.length > position;\n  }\n\n  getCurrentNodes()\n  {\n    if (this._testIndex >= 0 && this._testIndex < this._cachePath.length)\n    {\n      return this._cachePath[this._testIndex];\n    }\n    else\n    {\n      return null;\n    }\n  }\n\n  getNodesAtPosition(position)\n  {\n    if (position >= 0 && position < this._cachePath.length)\n    {\n      return this._cachePath[position].targets;\n    }\n    else\n    {\n      return null;\n    }\n  }\n\n  getTestString()\n  {\n    return this._testString;\n  }\n\n  getTapeContext()\n  {\n    return this._tapeContext;\n  }\n}\nEventable.mixin(StringTester);\n\nexport default StringTester;\n","import React from 'react';\nimport Style from 'experimental/viewport/ViewportView.css';\n\nimport ModeSelectTray from 'experimental/widgets/ModeSelectTray.js';\nimport TrashCanWidget from 'experimental/widgets/TrashCanWidget.js';\nimport NavbarWidget from 'experimental/widgets/NavbarWidget.js';\n\nclass EditPane extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const session = this.props.session;\n    const currentModule = session.getCurrentModule();\n    const app = session.getApp();\n\n    const viewport = this.props.viewport;\n    const inputController = currentModule.getInputController();\n    const graphController = currentModule.getGraphController();\n    const inputActionMode = inputController.isActionMode();\n\n    return (\n      <div id={this.props.id}\n        className={Style.view_pane +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <NavbarWidget className={Style.view_widget} style={{right: 0}}\n          app={app}/>\n        <div className={Style.view_widget} style={{bottom: 0, left: 0}}>\n          <ModeSelectTray mode={inputActionMode ? 0 : 1} onChange={modeIndex => inputController.setInputScheme(modeIndex === 0)}/>\n        </div>\n        <div className={Style.view_widget} style={{bottom: 0, right: 0}}>\n          <TrashCanWidget app={app} inputController={inputController} graphController={graphController}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditPane;\n","import React from 'react';\nimport Style from 'experimental/viewport/ViewportView.css';\n\nimport TapeWidget from 'experimental/widgets/TapeWidget.js';\nimport NavbarWidget from 'experimental/widgets/NavbarWidget.js';\n\nclass TapePane extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  componentDidMount()\n  {\n    const session = this.props.session;\n    const currentModule = session.getCurrentModule();\n    const inputController = currentModule.getInputController();\n\n    inputController.setDisabled(true);\n  }\n\n  //Override\n  componentWillUnmount()\n  {\n    const session = this.props.session;\n    const currentModule = session.getCurrentModule();\n    const inputController = currentModule.getInputController();\n\n    inputController.setDisabled(false);\n  }\n\n  //Override\n  render()\n  {\n    const session = this.props.session;\n    const currentModule = session.getCurrentModule();\n    const app = session.getApp();\n\n    const viewport = this.props.viewport;\n    const tester = currentModule._tester;\n    const inputController = currentModule.getInputController();\n    const graphController = currentModule.getGraphController();\n    const machineController = currentModule.getMachineController();\n\n    return (\n      <div id={this.props.id}\n        className={Style.view_pane +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <NavbarWidget className={Style.view_widget} style={{right: 0}}\n          app={app}/>\n        <div className={Style.view_widget} style={{bottom: 0}}>\n          <TapeWidget value={tester ? tester.getTapeContext() : null}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TapePane;\n","import AbstractGraphExporter from 'manager/export/AbstractGraphExporter.js';\n\nimport { JSON as JSONGraphParser } from 'modules/pda/graph/PDAGraphParser.js';\nimport { downloadText } from 'util/Downloader.js';\n\nimport JSONFileIcon from 'experimental/iconset/flat/JSONFileIcon.js';\n\nclass PDAGraphExporter extends AbstractGraphExporter\n{\n  constructor() { super(); }\n\n  fromJSON(data, module)\n  {\n    const graphController = module.getGraphController();\n    const machineController = module.getMachineController();\n    const graph = graphController.getGraph();\n\n    const metadata = '_metadata' in data ? data['_metadata'] : {};\n    const newGraph = JSONGraphParser.parse(data.graphData, graph);\n\n    //HACK: this should be calculated elsewhere\n    const machineData = data.machineData;\n    const machineName = machineData.name;\n    if (machineName) module.getApp().getSession().setProjectName(machineName);\n    const customSymbols = machineData.symbols;\n    if (customSymbols && Array.isArray(customSymbols))\n    {\n      machineController.clearCustomSymbols();\n      for(const symbol of customSymbols)\n      {\n        machineController.addCustomSymbol(symbol);\n      }\n    }\n    const statePrefix = machineData.statePrefix;\n    if (statePrefix)\n    {\n      graphController.getGraphLabeler().setDefaultNodeLabelPrefix(statePrefix);\n    }\n\n    return newGraph;\n  }\n\n  toJSON(graphData, module)\n  {\n    const graphController = module.getGraphController();\n    const machineController = module.getMachineController();\n\n    const dst = {};\n    dst[\"_metadata\"] = {\n      module: module.getModuleName(),\n      version: process.env.VERSION + \":\" + module.getModuleVersion(),\n      timestamp: new Date().toString()\n    };\n    dst[\"graphData\"] = graphData;\n    dst[\"machineData\"] = {\n      name: module.getApp().getSession().getProjectName(),\n      symbols: machineController.getCustomSymbols(),\n      statePrefix: graphController.getGraphLabeler().getDefaultNodeLabelPrefix()\n    };\n    return dst;\n  }\n\n  //Override\n  importFromData(data, module)\n  {\n    this.fromJSON(data, module);\n  }\n\n  //Override\n  exportToData(module)\n  {\n    const graph = module.getGraphController().getGraph();\n    const graphData = JSONGraphParser.objectify(graph);\n    const result = this.toJSON(graphData, module);\n    return result;\n  }\n\n  //Override\n  doesSupportData()\n  {\n    return true;\n  }\n\n  //Override\n  importFromFile(fileBlob, module)\n  {\n    return new Promise((resolve, reject) => {\n      const filename = fileBlob.name;\n      if (!filename.endsWith(this.getFileType()))\n      {\n        throw new Error(\"Trying to import invalid file type for \\'\" + this.getFileType() + \"\\': \" + filename);\n      }\n\n      const reader = new FileReader();\n      reader.onload = e => {\n        const graphController = module.getGraphController();\n        const machineController = module.getMachineController();\n        const data = e.target.result;\n        const name = filename.substring(0, filename.length - this.getFileType().length - 1);\n        const graph = graphController.getGraph();\n        const prevGraphHash = graph.getHashCode(true);\n\n        //TODO: this should not be here, this should exist somewhere in graphController\n        if (!graph.isEmpty())\n        {\n          module.getApp().getUndoManager().captureEvent();\n        }\n\n        try\n        {\n          const jsonData = JSON.parse(data);\n\n          this.fromJSON(jsonData, module);\n\n          module.getApp().getSession().setProjectName(name);\n\n          resolve();\n        }\n        catch (e)\n        {\n          reader.abort();\n          reject(e);\n        }\n        finally\n        {\n          const nextGraphHash = graph.getHashCode(true);\n          if (prevGraphHash !== nextGraphHash)\n          {\n            module.getApp().getUndoManager().captureEvent();\n          }\n        }\n      };\n\n      reader.onerror = e => {\n        reject(new Error(\"Unable to import file: \" + e.target.error.code));\n      }\n\n      reader.readAsText(fileBlob);\n    });\n  }\n\n  //Override\n  exportToFile(filename, module)\n  {\n    const graph = module.getGraphController().getGraph();\n    const graphData = JSONGraphParser.objectify(graph);\n    const dst = this.toJSON(graphData, module);\n    const jsonString = JSON.stringify(dst);\n    downloadText(filename + '.' + this.getFileType(), jsonString);\n  }\n\n  //Override\n  doesSupportFile()\n  {\n    return true;\n  }\n\n  //Override\n  canImport(module)\n  {\n    return true;\n  }\n\n  //Override\n  canExport(module)\n  {\n    return !module.getGraphController().getGraph().isEmpty();\n  }\n\n  //Override\n  getTitle()\n  {\n    return I18N.toString(\"file.export.machine.hint\");\n  }\n\n  //Override\n  getLabel()\n  {\n    return I18N.toString(\"file.export.machine\");\n  }\n\n  //Override\n  getFileType()\n  {\n    return \"json\";\n  }\n\n  //Override\n  getIconClass()\n  {\n    return JSONFileIcon;\n  }\n}\n\nexport default PDAGraphExporter;\n","import React from 'react';\nimport PanelContainer from 'experimental/panels/PanelContainer.js';\n\nimport AbstractModule from 'modules/abstract/AbstractModule.js';\n\nimport NodalGraphInputManager from 'modules/nodalgraph/manager/NodalGraphInputManager.js';\nimport MachineController from './controller/MachineController.js';\n\nimport PDAGraph from './graph/PDAGraph.js';\nimport PDAGraphLabeler from './graph/PDAGraphLabeler.js';\nimport * as PDAGraphParser from './graph/PDAGraphParser.js';\n\nimport PDAGraphRenderer from './renderer/PDAGraphRenderer.js';\nimport PDALabelEditorRenderer from './renderer/PDALabelEditorRenderer.js';\nimport GraphInputRenderer from 'modules/nodalgraph/controller/renderer/GraphInputRenderer.js';\n\nimport OverviewPanel from './components/panels/overview/OverviewPanel.js';\nimport TestingPanel from './components/panels/testing/TestingPanel.js';\nimport AnalysisPanel from './components/panels/analysis/AnalysisPanel.js';\n\nimport StringTester from './tester/StringTester.js';\nimport PDAErrorChecker from './PDAErrorChecker.js';\n\nimport EditPane from './components/views/EditPane.js';\nimport TapePane from './components/views/TapePane.js';\nimport {CTRL_KEY, ALT_KEY, SHIFT_KEY} from 'manager/hotkey/HotKeyManager.js';\nimport {RENDER_LAYER_WORKSPACE} from 'manager/RenderManager.js';\n\nimport PDAGraphExporter from './exporter/PDAGraphExporter.js';\nimport {DEFAULT_IMAGE_EXPORTERS} from 'modules/nodalgraph/NodalGraphImageExporter.js';\nimport SafeGraphEventHandler from 'modules/nodalgraph/SafeGraphEventHandler.js';\n\nimport * as UserUtil from 'experimental/UserUtil.js';\n\nconst MODULE_NAME = \"pda\";\nconst MODULE_LOCALIZED_NAME = \"PDA\";\nconst MODULE_VERSION = \"0.0.1\";\n\nclass PDAModule\n{\n  constructor(app)\n  {\n    this._app = app;\n\n    this._inputManager = new NodalGraphInputManager(this,\n      new PDAGraph(),\n      new PDAGraphLabeler(),\n      PDAGraphParser,\n      PDALabelEditorRenderer);\n    this._machineController = new MachineController(this);\n\n    this._errorChecker = new PDAErrorChecker(\n      this._inputManager.getGraphController(),\n      this._machineController);\n    this._tester = new StringTester();\n\n    //TODO: These should have a pre/post handlers...\n    app.getExportManager()\n      .addExporter(new PDAGraphExporter())\n      .addExporters(DEFAULT_IMAGE_EXPORTERS);\n\n    app.getViewportManager()\n      .addViewClass(EditPane)\n      .addViewClass(TapePane);\n\n    app.getDrawerManager()\n      .addPanelClass(props => (\n        <PanelContainer id={props.id}\n          className={props.className}\n          style={props.style}\n          title={\"Pushdown Automata\"}>\n          <p>{\"Brought to you with \\u2764 by the Flap.js team.\"}</p>\n          <p>{\"<- Tap on a tab to begin!\"}</p>\n        </PanelContainer>\n      ))\n      .addPanelClass(OverviewPanel)\n      .addPanelClass(TestingPanel)\n      .addPanelClass(AnalysisPanel);\n\n    app.getHotKeyManager()\n      .registerHotKey(\"Export to PNG\", [CTRL_KEY, 'KeyP'], () => {console.log(\"Export!\")})\n      .registerHotKey(\"Save as JSON\", [CTRL_KEY, 'KeyS'], () => {console.log(\"Save!\")})\n      .registerHotKey(\"New\", [CTRL_KEY, 'KeyN'], () => {console.log(\"New!\")})\n      .registerHotKey(\"Undo\", [CTRL_KEY, 'KeyZ'], () => {console.log(\"Undo!\")})\n      .registerHotKey(\"Redo\", [CTRL_KEY, SHIFT_KEY, 'KeyZ'], () => {console.log(\"Redo!\")});\n\n    app.getRenderManager()\n      .addRenderer(RENDER_LAYER_WORKSPACE, props => (\n        <>\n          {/* Graph objects */\n            <PDAGraphRenderer currentModule={this} parent={props.workspace}/>}\n        </>\n      ))\n      .addRenderer(RENDER_LAYER_WORKSPACE, props => (\n        <GraphInputRenderer currentModule={this}/>\n      ));\n\n    app.getUndoManager()\n      .setEventHandlerFactory((...args) => {\n        return new SafeGraphEventHandler(this._inputManager.getGraphController(), this._inputManager.getGraphParser());\n      });\n  }\n\n  //Override\n  initialize(app)\n  {\n    const machineController = this.getMachineController();\n    machineController.initialize(this);\n\n    this._inputManager.onSessionStart(app.getSession());\n  }\n\n  //Override\n  update(app)\n  {\n    this._inputManager.update(this);\n\n    const machineController = this.getMachineController();\n    machineController.update(this);\n  }\n\n  //Override\n  destroy(app)\n  {\n    this._inputManager.onSessionStop(app.getSession());\n\n    const machineController = this.getMachineController();\n    machineController.destroy(this);\n  }\n\n  //Override\n  clear(app)\n  {\n    UserUtil.userClearGraph(app, false, () => app.getToolbarComponent().closeBar());\n  }\n\n  getInputManager() { return this._inputManager; }\n\n  getInputController() { return this._inputManager.getInputController(); }\n  getMachineController() { return this._machineController; }\n  getGraphController() { return this._inputManager.getGraphController(); }\n\n  getErrorChecker() { return this._errorChecker; }\n  getStringTester() { return this._tester; }\n\n  //Override\n  getModuleVersion() { return MODULE_VERSION; }\n  //Override\n  getModuleName() { return MODULE_NAME; }\n  //Override\n  getLocalizedModuleName() { return MODULE_LOCALIZED_NAME; }\n  getApp() { return this._app; }\n}\n\nexport default PDAModule;\n","import React from 'react';\nimport Style from './IconButton.css';\n\nclass IconButton extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const title = this.props.title;\n    const showButtonLabel = IconButton.SHOW_LABEL && title;\n\n    return (\n      <button id={this.props.id}\n        className={Style.icon_button +\n          (showButtonLabel ? \" hint \" : \"\") +\n          \" \" + this.props.className}\n        style={this.props.style}\n        title={title}\n        disabled={this.props.disabled}\n        onClick={this.props.onClick}>\n        {this.props.children}\n        <label>{title}</label>\n      </button>\n    );\n  }\n}\nIconButton.SHOW_LABEL = false;\n\nexport default IconButton;\n","import React from 'react';\nimport Style from './PanelContainer.css';\n\nclass PanelContainer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n  \n  //Override\n  render()\n  {\n    const title = this.props.title;\n\n    return (\n      <div id={this.props.id}\n        className={Style.panel_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <div className={Style.panel_title}>\n          <h1>{title}</h1>\n        </div>\n        <div className={Style.panel_content}>\n          {this.props.children}\n        </div>\n        <div className={Style.panel_bottom}>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PanelContainer;\n","class AbstractGraphExporter\n{\n  constructor() {}\n\n  importFromData(data, module)\n  {\n    throw new Error(\"Unsupported import for type \\'\" + this.getFileType() + \"\\'\");\n  }\n\n  exportToData(module)\n  {\n    throw new Error(\"Unsupported export for type \\'\" + this.getFileType() + \"\\'\");\n  }\n\n  doesSupportData()\n  {\n    return false;\n  }\n\n  importFromFile(fileBlob, module)\n  {\n    throw new Error(\"Unsupported import for type \\'\" + this.getFileType() + \"\\'\");\n  }\n\n  exportToFile(filename, module)\n  {\n    throw new Error(\"Unsupported export for type \\'\" + this.getFileType() + \"\\'\");\n  }\n\n  doesSupportFile()\n  {\n    return false;\n  }\n\n  canImport(module)\n  {\n    return false;\n  }\n\n  canExport(module)\n  {\n    return true;\n  }\n\n  getTitle()\n  {\n    return this.getLabel();\n  }\n\n  getIconClass()\n  {\n    return null;\n  }\n\n  getLabel()\n  {\n    return \"Export as \" + this.getFileType().toUpperCase();\n  }\n\n  getFileType()\n  {\n    throw new Error(\"Unknown file type for exporter\");\n  }\n}\n\nexport default AbstractGraphExporter;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M7 10l5 5 5-5z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M7 14l5-5 5 5z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './PanelSection.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport TinyDownIcon from 'experimental/iconset/TinyDownIcon.js';\nimport TinyUpIcon from 'experimental/iconset/TinyUpIcon.js';\n\nclass PanelSection extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.state = {\n      open: props.initial || false\n    };\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e)\n  {\n    this.setState((prev, props) => {\n      return {open: !prev.open};\n    })\n  }\n\n  //Override\n  componentDidUpdate()\n  {\n    if (this.state.open && this.props.disabled)\n    {\n      this.setState({open: false});\n    }\n  }\n\n  //Override\n  render()\n  {\n    const isOpen = this.state.open;\n    const isDisabled = this.props.disabled || React.Children.count(this.props.children) <= 0;\n    const isFull = this.props.full;\n    const title = this.props.title;\n    return (\n      <section id={this.props.id}\n        className={Style.section_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <IconButton className={Style.section_header}\n          title={title}\n          disabled={isDisabled}\n          onClick={this.onClick}>\n          {!isOpen ? <TinyDownIcon/> : <TinyUpIcon/>}\n        </IconButton>\n        <div className={Style.section_content_container +\n          (isOpen ? \" open \" : \"\") +\n          (isFull ? \" full \" : \"\")}>\n          <div className={Style.section_content}>\n            {this.props.children}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default PanelSection;\n","/**\n * Used by InputAdapter to handle input event logic.\n */\nclass AbstractInputHandler\n{\n  constructor() {}\n\n  /**\n   * Called by InputAdapter before an InputEvent begins.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not begin.\n   */\n  onPreInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter when an InputEvent resolves and is not an Alt input.\n   * To handle events for Alt inputs, refer to onAltInputEvent().\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events.\n   */\n  onInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter when an InputEvent resolves and is an Alt input.\n   * To handle events for non-Alt inputs, refer to onInputEvent().\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events.\n   */\n  onAltInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter when a DblInputEvent resolves. The input is\n   * assumed by a non-Alt input, since only non-Alt inputs can trigger this\n   * event.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events.\n   */\n  onDblInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter when input movess. The input is called before drag\n   * logic.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events (i.e. dragging events).\n   */\n  onMoveInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter before a drag begins. The input could be either\n   * an Alt or non-Alt input.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events, nor continue the drag input.\n   */\n  onDragStart(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter while dragging moves. The input could be either\n   * an Alt or non-Alt input.\n   * Will always be called after onDragStart() and will be followed by\n   * onDragStop() when complete.\n   */\n  onDragMove(pointer) {}\n\n  /**\n   * Called by InputAdapter after a drag ends. The input could be either an\n   * Alt or non-Alt input.\n   * Will always be called after onDragStart(). Although onDragMove may be\n   * called in-between, it is not guaranteed.\n   */\n  onDragStop(pointer) {}\n\n  /**\n   * Called by InputAdapter after an InputEvent ends.\n   */\n  onPostInputEvent(pointer) {}\n\n  /**\n   * Called by InputAdapter when zoom changes.\n   * Returns true if event is consumed (zoom will not be applied)\n   */\n  onZoomChange(pointer, zoomValue, prevValue)\n  {\n    return false;\n  }\n}\n\nexport default AbstractInputHandler;\n","export function userClearGraph(app, graphOnly=false, callback=null)\n{\n  if (window.confirm(I18N.toString(\"alert.graph.clear\")))\n  {\n    const module = app.getCurrentModule();\n    module.getGraphController().getGraph().clear();\n    if (!graphOnly)\n    {\n      app.getUndoManager().clear();\n      app.getSession().setProjectName(null);\n    }\n    if (callback) callback();\n  }\n}\n","export const RENDER_LAYER_WORKSPACE = \"workspace\";\nexport const RENDER_LAYER_WORKSPACE_OVERLAY = \"workspace-overlay\";\nexport const RENDER_LAYER_VIEWPORT = \"viewport\";\nexport const RENDER_LAYER_VIEWPORT_OVERLAY = \"viewport-overlay\";\n\nclass RenderManager\n{\n  constructor()\n  {\n    this._renderMapping = new Map();\n  }\n\n  addRenderer(layerID, rendererClass)\n  {\n    if (this._renderMapping.has(layerID))\n    {\n      this._renderMapping.get(layerID).push(rendererClass);\n    }\n    else\n    {\n      this._renderMapping.set(layerID, [rendererClass]);\n    }\n    return this;\n  }\n\n  //DuckType(SessionListener)\n  onSessionStart(session)\n  {\n\n  }\n\n  //DuckType(SessionListener)\n  onSessionStop(session)\n  {\n    this._renderMapping.clear();\n  }\n\n  getRenderersByLayer(layerID)\n  {\n    return this._renderMapping.get(layerID);\n  }\n}\n\nexport default RenderManager;\n","import React from 'react';\nimport Style from './PanelSwitch.css';\n\nclass PanelSwitch extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    if (!props.id) throw new Error(\"Must specify id\");\n  }\n\n  //Override\n  render()\n  {\n    const id = this.props.id;\n    const disabled = this.props.disabled;\n    const checked = this.props.checked;\n    const onChange = this.props.onChange;\n\n    return (\n      <div id={id}\n        className={Style.switch_container +\n          (disabled ? \" disabled \" : \"\") +\n          (checked ? \" active \" : \"\") +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <label className={Style.panel_switch}\n          style={this.props.style}>\n          <input type=\"checkbox\" id={id + \"-switch\"} checked={checked} onChange={onChange} disabled={disabled}/>\n          <div className={Style.switch_slider}></div>\n        </label>\n        <label className={Style.switch_label}\n          htmlFor={id + \"-switch\"}>\n          {this.props.title}\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default PanelSwitch;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M9,16V10H5L12,3L19,10H15V16H9M5,20V18H19V20H5Z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 56 56\">\n        <path fill=\"#E9E9E0\" d=\"M36.985,0H7.963C7.155,0,6.5,0.655,6.5,1.926V55c0,0.345,0.655,1,1.463,1h40.074 c0.808,0,1.463-0.655,1.463-1V12.978c0-0.696-0.093-0.92-0.257-1.085L37.607,0.257C37.442,0.093,37.218,0,36.985,0z\"/>\n        <polygon fill=\"#D9D7CA\" points=\"37.5,0.151 37.5,12 49.349,12 \t\"/>\n        <path fill=\"#9777A8\" d=\"M48.037,56H7.963C7.155,56,6.5,55.345,6.5,54.537V39h43v15.537C49.5,55.345,48.845,56,48.037,56z\"/>\n        <path fill=\"#FFFFFF\" d={\"M17.021,42.719v7.848c0,0.474-0.087,0.873-0.26,1.196s-0.405,0.583-0.697,0.779 s-0.627,0.333-1.005,0.41c-0.378,0.077-0.768,0.116-1.169,0.116c-0.2,0-0.436-0.021-0.704-0.062s-0.547-0.104-0.834-0.191 s-0.563-0.185-0.827-0.294s-0.487-0.232-0.67-0.369l0.697-1.107c0.091,0.063,0.221,0.13,0.39,0.198s0.354,0.132,0.554,0.191 s0.41,0.111,0.629,0.157s0.424,0.068,0.615,0.068c0.483,0,0.868-0.094,1.155-0.28s0.439-0.504,0.458-0.95v-7.711H17.021z\"}/>\n        <path fill=\"#FFFFFF\" d={\"M25.184,50.238c0,0.364-0.075,0.718-0.226,1.06s-0.362,0.643-0.636,0.902s-0.61,0.467-1.012,0.622 s-0.856,0.232-1.367,0.232c-0.219,0-0.444-0.012-0.677-0.034s-0.467-0.062-0.704-0.116c-0.237-0.055-0.463-0.13-0.677-0.226 s-0.398-0.212-0.554-0.349l0.287-1.176c0.128,0.073,0.289,0.144,0.485,0.212s0.398,0.132,0.608,0.191s0.419,0.107,0.629,0.144 s0.405,0.055,0.588,0.055c0.556,0,0.982-0.13,1.278-0.39s0.444-0.645,0.444-1.155c0-0.31-0.104-0.574-0.314-0.793 s-0.472-0.417-0.786-0.595s-0.654-0.355-1.019-0.533s-0.706-0.388-1.025-0.629s-0.583-0.526-0.793-0.854s-0.314-0.738-0.314-1.23 c0-0.446,0.082-0.843,0.246-1.189s0.385-0.641,0.663-0.882s0.602-0.426,0.971-0.554s0.759-0.191,1.169-0.191 c0.419,0,0.843,0.039,1.271,0.116s0.774,0.203,1.039,0.376c-0.055,0.118-0.118,0.248-0.191,0.39s-0.142,0.273-0.205,0.396 s-0.118,0.226-0.164,0.308s-0.073,0.128-0.082,0.137c-0.055-0.027-0.116-0.063-0.185-0.109s-0.166-0.091-0.294-0.137 s-0.296-0.077-0.506-0.096s-0.479-0.014-0.807,0.014c-0.183,0.019-0.355,0.07-0.52,0.157s-0.31,0.193-0.438,0.321 s-0.228,0.271-0.301,0.431s-0.109,0.313-0.109,0.458c0,0.364,0.104,0.658,0.314,0.882s0.47,0.419,0.779,0.588 s0.647,0.333,1.012,0.492s0.704,0.354,1.019,0.581s0.576,0.513,0.786,0.854S25.184,49.7,25.184,50.238z\"}/>\n        <path fill=\"#FFFFFF\" d={\"M35.082,47.914c0,0.848-0.107,1.595-0.321,2.242s-0.511,1.185-0.889,1.613s-0.82,0.752-1.326,0.971 s-1.06,0.328-1.661,0.328s-1.155-0.109-1.661-0.328s-0.948-0.542-1.326-0.971s-0.675-0.966-0.889-1.613s-0.321-1.395-0.321-2.242 s0.107-1.593,0.321-2.235s0.511-1.178,0.889-1.606s0.82-0.754,1.326-0.978s1.06-0.335,1.661-0.335s1.155,0.111,1.661,0.335 s0.948,0.549,1.326,0.978s0.675,0.964,0.889,1.606S35.082,47.066,35.082,47.914z M30.844,51.729c0.337,0,0.658-0.066,0.964-0.198 s0.579-0.349,0.82-0.649s0.431-0.695,0.567-1.183s0.21-1.082,0.219-1.784c-0.009-0.684-0.08-1.265-0.212-1.743 s-0.314-0.873-0.547-1.183s-0.497-0.533-0.793-0.67s-0.608-0.205-0.937-0.205c-0.337,0-0.658,0.063-0.964,0.191 s-0.579,0.344-0.82,0.649s-0.431,0.699-0.567,1.183c-0.137,0.483-0.21,1.075-0.219,1.777c0.009,0.684,0.08,1.267,0.212,1.75 s0.314,0.877,0.547,1.183s0.497,0.528,0.793,0.67S30.516,51.729,30.844,51.729z\"}/>\n        <path fill=\"#FFFFFF\" d=\"M44.68,42.924V53h-1.668l-3.951-6.945V53h-1.668V42.924h1.668l3.951,6.945v-6.945H44.68z\"/>\n        <path fill=\"#9777A8\" d=\"M19.5,19v-4c0-0.551,0.448-1,1-1c0.553,0,1-0.448,1-1s-0.447-1-1-1c-1.654,0-3,1.346-3,3v4 c0,1.103-0.897,2-2,2c-0.553,0-1,0.448-1,1s0.447,1,1,1c1.103,0,2,0.897,2,2v4c0,1.654,1.346,3,3,3c0.553,0,1-0.448,1-1 s-0.447-1-1-1c-0.552,0-1-0.449-1-1v-4c0-1.2-0.542-2.266-1.382-3C18.958,21.266,19.5,20.2,19.5,19z\"/>\n        <circle fill=\"#9777A8\" cx=\"27.5\" cy=\"18.5\" r=\"1.5\"/>\n        <path fill=\"#9777A8\" d=\"M39.5,21c-1.103,0-2-0.897-2-2v-4c0-1.654-1.346-3-3-3c-0.553,0-1,0.448-1,1s0.447,1,1,1 c0.552,0,1,0.449,1,1v4c0,1.2,0.542,2.266,1.382,3c-0.84,0.734-1.382,1.8-1.382,3v4c0,0.551-0.448,1-1,1c-0.553,0-1,0.448-1,1 s0.447,1,1,1c1.654,0,3-1.346,3-3v-4c0-1.103,0.897-2,2-2c0.553,0,1-0.448,1-1S40.053,21,39.5,21z\"/>\n        <path fill=\"#9777A8\" d=\"M27.5,24c-0.553,0-1,0.448-1,1v3c0,0.552,0.447,1,1,1s1-0.448,1-1v-3 C28.5,24.448,28.053,24,27.5,24z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M13.49 5.48c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm-3.6 13.9l1-4.4 2.1 2v6h2v-7.5l-2.1-2 .6-3c1.3 1.5 3.3 2.5 5.5 2.5v-2c-1.9 0-3.5-1-4.3-2.4l-1-1.6c-.4-.6-1-1-1.7-1-.3 0-.5.1-.8.1l-5.2 2.2v4.7h2v-3.4l1.8-.7-1.6 8.1-4.9-1-.4 2 7 1.4z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './IconUploadButton.css';\n\nimport IconButton from './IconButton.js';\n\nclass IconUploadButton extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.onFileUpload = this.onFileUpload.bind(this);\n  }\n\n  onFileUpload(e)\n  {\n    const files = e.target.files;\n    if (files.length > 0)\n    {\n      if (this.props.onUpload) this.props.onUpload(files[0]);\n\n      //Makes sure you can upload the same file again.\n      e.target.value = \"\";\n    }\n  }\n\n  //Override\n  render()\n  {\n    const accept = this.props.accept;\n\n    return (\n      <IconButton id={this.props.id}\n        className={Style.upload_button +\n          \" \" + this.props.className}\n        style={this.props.style}\n        title={this.props.title}\n        disabled={this.props.disabled}>\n        <input type=\"file\" name=\"import\"\n          className={Style.upload_input}\n          disabled={this.props.disabled}\n          accept={accept}\n          onChange={this.onFileUpload}/>\n        {this.props.children}\n      </IconButton>\n    );\n  }\n}\n\nexport default IconUploadButton;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","class AbstractEventHandler\n{\n  constructor() {}\n\n  applyUndo(undoManager)\n  {\n    throw new Error(\"Undo operation for handler not supported\");\n  }\n\n  applyRedo(undoManager)\n  {\n    throw new Error(\"Redo operation for handler not supported\");\n  }\n}\n\nexport default AbstractEventHandler;\n","import React from 'react';\nimport IconButton from './IconButton.js';\n\nclass IconStateButton extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.state = {\n      index: props.initial || 0\n    };\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e)\n  {\n    const prevIndex = this.state.index;\n    this.setState((prev, props) => {\n      const count = React.Children.count(props.children);\n      let nextIndex = prev.index + 1;\n      if (nextIndex >= count)\n      {\n        nextIndex = 0;\n      }\n      return {index: nextIndex};\n    }, () => {\n      if (this.props.onClick)\n      {\n        this.props.onClick(e, prevIndex);\n      }\n    });\n  }\n\n  setStateIndex(index)\n  {\n    this.setState({index: index});\n  }\n\n  getStateIndex()\n  {\n    return this.state.index;\n  }\n\n  //Override\n  render()\n  {\n    const child = React.Children.map(this.props.children, (child, i) => {\n      if (i === this.state.index) return child;\n    })[0];\n\n    return (\n      <IconButton id={this.props.id}\n        className={this.props.className}\n        style={this.props.style}\n        title={this.props.title}\n        disabled={this.props.disabled}\n        onClick={this.onClick}>\n        {child}\n      </IconButton>\n    );\n  }\n}\nexport default IconStateButton;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './FullscreenWidget.css';\n\nimport IconStateButton from 'experimental/components/IconStateButton.js';\nimport FullscreenIcon from 'experimental/iconset/FullscreenIcon.js';\nimport FullscreenExitIcon from 'experimental/iconset/FullscreenExitIcon.js';\n\nclass FullscreenWidget extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const app = this.props.app;\n\n    return (\n      <IconStateButton id={this.props.id}\n        className={Style.fullscreen_button + \" \" + this.props.className}\n        style={this.props.style}\n        title={\"Fullscreen Mode\"}\n        onClick={(e, i) => app.setState({hide: (i === 0)})}>\n        <FullscreenIcon/>\n        <FullscreenExitIcon/>\n      </IconStateButton>\n    );\n  }\n}\n\nexport default FullscreenWidget;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n        <path d=\"M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14zM7 9h5v1H7z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './ZoomWidget.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport ZoomInIcon from 'experimental/iconset/ZoomInIcon.js';\nimport ZoomOutIcon from 'experimental/iconset/ZoomOutIcon.js';\n\nclass ZoomWidget extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.onZoomIn = this.onZoomIn.bind(this);\n    this.onZoomOut = this.onZoomOut.bind(this);\n  }\n\n  onZoomIn(e)\n  {\n    const viewport = this.props.viewport;\n    const viewScale = -viewport.getScale() * 0.4;\n    viewport.addScale(viewScale);\n  }\n\n  onZoomOut(e)\n  {\n    const viewport = this.props.viewport;\n    const viewScale = viewport.getScale() * 0.75;\n    viewport.addScale(viewScale);\n  }\n\n  //Override\n  render()\n  {\n    const viewport = this.props.viewport;\n    const viewScale = \"x\" + (1 / (viewport.getScale() || 1)).toFixed(2);\n\n    return (\n      <div id={this.props.id}\n        className={Style.zoom_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <IconButton className={Style.zoom_button} title=\"Zoom In\" onClick={this.onZoomIn}>\n          <ZoomInIcon/>\n        </IconButton>\n        <IconButton className={Style.zoom_button} title=\"Zoom Out\" onClick={this.onZoomOut}>\n          <ZoomOutIcon/>\n        </IconButton>\n        <label className={Style.zoom_label}>{viewScale}</label>\n      </div>\n    );\n  }\n}\n\nexport default ZoomWidget;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm8.94 3c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06C6.83 3.52 3.52 6.83 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c4.17-.46 7.48-3.77 7.94-7.94H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './FocusCenterWidget.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport PinpointIcon from 'experimental/iconset/PinpointIcon.js';\n\nconst OFFSET_EPSILON = 0.1;\n\nclass FocusCenterWidget extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e)\n  {\n    const viewport = this.props.viewport;\n    viewport.setOffset(0, 0);\n  }\n\n  //Override\n  render()\n  {\n    const viewport = this.props.viewport;\n\n    return (\n      <IconButton id={this.props.id}\n        className={Style.center_focus_button +\n          \" \" + this.props.className}\n        style={this.props.style}\n        title={\"Center Workspace\"}\n        disabled={Math.abs(viewport.getOffsetX()) < OFFSET_EPSILON &&\n          Math.abs(viewport.getOffsetY()) < OFFSET_EPSILON} onClick={this.onClick}>\n        <PinpointIcon/>\n      </IconButton>\n    );\n  }\n}\n\nexport default FocusCenterWidget;\n","import React from 'react';\nimport Style from './NavbarWidget.css';\n\nimport FullscreenWidget from 'experimental/widgets/FullscreenWidget.js';\nimport ZoomWidget from 'experimental/widgets/ZoomWidget.js';\nimport FocusCenterWidget from 'experimental/widgets/FocusCenterWidget.js';\n\nclass NavbarWidget extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const app = this.props.app;\n    const viewport = app.getInputAdapter().getViewport();\n\n    return (\n      <div id={this.props.id}\n        className={Style.navbar_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <FullscreenWidget className={Style.navbar_widget} app={app}/>\n        <ZoomWidget className={Style.navbar_widget_container} viewport={viewport}/>\n        <FocusCenterWidget className={Style.navbar_widget} viewport={viewport}/>\n      </div>\n    );\n  }\n}\n\nexport default NavbarWidget;\n","import React from 'react';\nimport Style from './PanelDivider.css';\n\nclass PanelDivider extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    return (\n      <div id={this.props.id}\n        className={Style.panel_divider +\n          \" \" + this.props.className}\n        style={this.props.style}>\n      </div>\n    );\n  }\n}\n\nexport default PanelDivider;\n","export const CTRL_KEY = 'Control';\nexport const META_KEY = 'Meta';\nexport const ALT_KEY = 'Alt';\nexport const SHIFT_KEY = 'Shift';\n//NOTE: For more keys, refer to http://keycode.info/\n\nclass HotKeyManager\n{\n  constructor()\n  {\n    this._hotkeys = [];\n    this._cachedEvent = {\n      ctrlKey: false,\n      metaKey: false,\n      altKey: false,\n      shiftKey: false,\n      code: null\n    };\n    this._prevHotKey = null;\n    this._repeatCount = 0;\n    this._enabled = false;\n\n    this._altHotkey = null;\n\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyUp = this.onKeyUp.bind(this);\n  }\n\n  registerHotKey(name, keys, callback)\n  {\n    if (!Array.isArray(keys)) throw new Error(\"Must be an array of key codes\");\n    const ctrlIndex = keys.indexOf(CTRL_KEY);\n    if (ctrlIndex >= 0) keys.splice(ctrlIndex, 1);\n    const metaIndex = keys.indexOf(META_KEY);\n    if (metaIndex >= 0) keys.splice(metaIndex, 1);\n    const altIndex = keys.indexOf(ALT_KEY);\n    if (altIndex >= 0) keys.splice(altIndex, 1);\n    const shiftIndex = keys.indexOf(SHIFT_KEY);\n    if (shiftIndex >= 0) keys.splice(shiftIndex, 1);\n    if (keys.length != 1) throw new Error(\"Multiple key operations not supported\");\n    const charKey = keys[0];\n\n    const ctrl = ctrlIndex >= 0 || metaIndex >= 0;\n    const alt = altIndex >= 0;\n    const shift = shiftIndex >= 0;\n\n    const result = {\n      name: name,\n      localizedKeys: (ctrl ? \"Ctrl + \" : \"\") +\n        (alt ? \"Alt + \" : \"\") +\n        (shift ? \"Shift + \" : \"\") +\n        charKey,\n      charKey: charKey,\n      ctrlKey: ctrl,\n      altKey: alt,\n      shiftKey: shift,\n      callback: callback\n    };\n\n    this._hotkeys.unshift(result);\n\n    return this;\n  }\n\n  //HACK: Cause hotkey manager does not allow 'control' hotkeys. This is the exception.\n  registerAltHotKey(name, callback)\n  {\n    if (this._altHotkey) throw new Error(\"Only one hotkey can exist for \\'Alt\\'\");\n\n    this._altHotkey = {\n      name: name,\n      localizedKeys: \"Alt\",\n      charKey: null,\n      ctrlKey: false,\n      altKey: true,\n      shiftKey: false,\n      callback: callback\n    };\n\n    return this;\n  }\n\n  //Override\n  onSessionStart(session)\n  {\n    window.addEventListener('keydown', this.onKeyDown);\n    window.addEventListener('keyup', this.onKeyUp);\n\n    this._enabled = true;\n  }\n\n  //Override\n  onSessionStop(session)\n  {\n    this._enabled = false;\n\n    this._prevHotKey = null;\n    this._repeatCount = 0;\n    this._hotkeys.length = 0;\n    this._altHotkey = null;\n\n    window.removeEventListener('keydown', this.onKeyDown);\n    window.removeEventListener('keyup', this.onKeyUp);\n  }\n\n  setEnabled(enabled)\n  {\n    this._enabled = enabled;\n  }\n\n  isEnabled()\n  {\n    return this._enabled;\n  }\n\n  findMatchingHotKey(e)\n  {\n    for(const hotkey of this._hotkeys)\n    {\n      if (matchesHotKeyEvent(e, hotkey)) return hotkey;\n    }\n    return null;\n  }\n\n  getCurrentHotKey()\n  {\n    return this._prevHotKey;\n  }\n\n  getCurrentHotKeyRepeatCount()\n  {\n    return this._repeatCount;\n  }\n\n  getCurrentlyPossibleHotKeys(dst=[])\n  {\n    const event = this._cachedEvent;\n    const eventCtrl = event.ctrlKey || event.metaKey;\n    const eventAlt = event.altKey;\n    const eventShift = event.shiftKey;\n    if (!eventCtrl && !eventAlt && !eventShift) return dst;\n    const eventKey = event.code;\n\n    let result = null;\n    for(const hotkey of this._hotkeys)\n    {\n      let flag = false;\n      if (eventCtrl ^ hotkey.ctrlKey)\n      {\n        //It's ok, but it is not a complete match...\n        if (!eventCtrl) flag = true;\n        //Nope.\n        else continue;\n      }\n      if (eventAlt ^ hotkey.altKey)\n      {\n        //It's ok, but it is not a complete match...\n        if (!eventAlt) flag = true;\n        //Nope.\n        else continue;\n      }\n      if (eventShift ^ hotkey.shiftKey)\n      {\n        //It's ok, but it is not a complete match...\n        if (!eventShift) flag = true;\n        //Nope.\n        else continue;\n      }\n\n      if (!flag && eventKey === hotkey.charKey)\n      {\n        result = hotkey;\n      }\n\n      dst.push(hotkey);\n    }\n\n    if (result) return result;\n    else return dst;\n  }\n\n  onKeyDown(e)\n  {\n    if (!this._enabled) return;\n\n    if (!e.repeat)\n    {\n      this.captureKeyEvent(e, false);\n\n      let result = this.findMatchingHotKey(this._cachedEvent);\n      if (!result && matchesHotKeyEvent(e, this._altHotkey)) result = this._altHotkey;\n\n      if (result)\n      {\n        if (this._prevHotKey === result)\n        {\n          ++this._repeatCount;\n        }\n        else\n        {\n          this._prevHotKey = result;\n          this._repeatCount = 0;\n        }\n\n        result.callback();\n\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    }\n  }\n\n  onKeyUp(e)\n  {\n    if (!this._enabled) return;\n\n    if (this.captureKeyEvent(e, true))\n    {\n      this._prevHotKey = null;\n      this._repeatCount = 0;\n    }\n  }\n\n  captureKeyEvent(e, isKeyUp=false)\n  {\n    this._cachedEvent.ctrlKey = e.ctrlKey;\n    this._cachedEvent.metaKey = e.metaKey;\n    this._cachedEvent.altKey = e.altKey;\n    this._cachedEvent.shiftKey = e.shiftKey;\n    this._cachedEvent.code = isKeyUp ? null : (e.code || null);\n    return isKeyUp && !(this._cachedEvent.ctrlKey || this._cachedEvent.metaKey || this._cachedEvent.altKey || this._cachedEvent.shiftKey);\n  }\n}\n\nexport default HotKeyManager;\n\nfunction matchesHotKeyEvent(e, hotkey)\n{\n  if (hotkey.ctrlKey !== (e.ctrlKey || e.metaKey)) return false;\n  if (hotkey.altKey !== e.altKey) return false;\n  if (hotkey.shiftKey !== e.shiftKey) return false;\n  if (hotkey.charKey && hotkey.charKey !== e.code) return false;\n  return true;\n}\n","import React from 'react';\n\nconst QUAD_RADIAN_THRESHOLD = 0.01;\nconst QUAD_REVERSE_OFFSET_THRESHOLD = 4;\nconst ARROW_WIDTH = 10;\nconst SIXTH_PI = Math.PI / 6;\n\nexport const DIRECTED_FORWARD = \"forward\";\nexport const DIRECTED_BACKWARD = \"backward\";\nexport const DIRECTED_BOTH = \"both\";\nexport const DIRECTED_NONE = \"undirected\";\n\nexport const DefaultEndpointRenderer = props => (\n  <>\n    <path d={\n      \"M \" +\n        (props.position.x - (props.length * Math.sin(props.angle - SIXTH_PI))) +\n        \" \" +\n        (props.position.y - (props.length * Math.cos(props.angle - SIXTH_PI))) +\n        \" \" +\n        \"L \" + props.position.x + \" \" + props.position.y +\n        \" \" +\n        \"L \" +\n        (props.position.x - (props.length * Math.sin(props.angle + SIXTH_PI))) +\n        \" \" +\n        (props.position.y - (props.length * Math.cos(props.angle + SIXTH_PI)))\n    }\n    stroke={props.color}\n    fill=\"none\"/>\n  </>\n);\n\nexport const DefaultLabelRenderer = props => (\n  <g transform={\"translate(\" + props.position.x + \",\" + props.position.y + \")\" +\n    \" \" +\n    \"rotate(\" + (props.direction * 180 / Math.PI) + \")\"}>\n    {\n      props.labels && props.labels.length > 0 &&\n      props.labels.map((str, i) => {\n        return (\n          <text key={str + \".\" + i}\n            transform={\"translate(0,\" + ((i + 1) * -15) + \")\" +\n              (props.reverse ? \" scale(-1,-1)\" : \"\")}\n            alignmentBaseline=\"central\"\n            pointerEvents=\"none\"\n            style={{userSelect: \"none\"}}\n            textAnchor=\"middle\"\n            stroke={props.color}>\n            {str}\n          </text>\n        );\n      })\n    }\n  </g>\n);\n\nclass EdgeRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const directed = this.props.directed || DIRECTED_NONE;\n\n    const ForwardEndpointRenderer =\n      (directed === DIRECTED_FORWARD || directed === DIRECTED_BOTH) ?\n        (this.props.forwardEndpointRenderer ||\n        this.props.endpointRenderer ||\n        DefaultEndpointRenderer) : null;\n    const BackwardEndpointRenderer =\n      (directed === DIRECTED_BACKWARD || directed === DIRECTED_BOTH) ?\n        (this.props.backwardEndpointRenderer ||\n        this.props.endpointRenderer ||\n        DefaultEndpointRenderer) : null;\n    const EdgeLabelRenderer = this.props.labelRenderer || DefaultLabelRenderer;\n\n    const fromPoint = this.props.from;\n    const toPoint = this.props.to;\n    const centerPoint = this.props.center;\n    const label = this.props.label || \"\";\n    const direction = this.props.direction || 0;\n    const color = this.props.color || \"#000000\";\n\n    let reverseLabel = false;\n    let fromAngle;\n    let toAngle;\n    let quadLine = null;\n\n    const dftx = fromPoint.x - toPoint.x;\n    const dfty = fromPoint.y - toPoint.y;\n    const dfcx = fromPoint.x - centerPoint.x;\n    const dfcy = fromPoint.y - centerPoint.y;\n    const ftrad = Math.atan2(dfty, dftx);\n    const fcrad = Math.atan2(dfcy, dfcx);\n    if (Math.abs(ftrad - fcrad) <= QUAD_RADIAN_THRESHOLD)\n    {\n      toAngle = Math.atan2(centerPoint.x - toPoint.x, centerPoint.y - toPoint.y) + Math.PI;\n      fromAngle = Math.atan2(centerPoint.x - fromPoint.x, centerPoint.y - fromPoint.y) + Math.PI;\n      quadLine = \"L \" + toPoint.x + \" \" + toPoint.y;\n      reverseLabel = false;\n    }\n    else\n    {\n      const cx = ((centerPoint.x * 4) - fromPoint.x - toPoint.x) / 2;\n      const cy = ((centerPoint.y * 4) - fromPoint.y - toPoint.y) / 2;\n      toAngle = Math.atan2(cx - toPoint.x, cy - toPoint.y) + Math.PI;\n      fromAngle = Math.atan2(cx - fromPoint.x, cy - fromPoint.y) + Math.PI;\n      quadLine = \"Q \" + cx + \" \" + cy + \" \" + toPoint.x + \" \" + toPoint.y;\n      reverseLabel = cy > centerPoint.y + QUAD_REVERSE_OFFSET_THRESHOLD;\n    }\n\n    return (\n      <g>\n        <path d={\"M \" + fromPoint.x + \" \" + fromPoint.y + \" \" + quadLine}\n          stroke={color}\n          fill=\"none\"/>\n        {ForwardEndpointRenderer &&\n          <ForwardEndpointRenderer position={toPoint} angle={toAngle} length={ARROW_WIDTH} color={color}/>}\n        {BackwardEndpointRenderer &&\n          <BackwardEndpointRenderer position={fromPoint} angle={fromAngle} length={ARROW_WIDTH} color={color}/>}\n        {EdgeLabelRenderer &&\n          <EdgeLabelRenderer position={centerPoint} labels={label.split('\\n')} direction={direction} reverse={reverseLabel}/>}\n      </g>\n    );\n  }\n}\n\nexport default EdgeRenderer;\n","import AbstractGraphExporter from 'manager/export/AbstractGraphExporter.js';\n\nimport PNGIcon from 'icons/flat/PNGIcon.js';\nimport JPGIcon from 'icons/flat/JPGIcon.js';\nimport XMLIcon from 'icons/flat/XMLIcon.js';\nimport SVGIcon from 'icons/flat/SVGIcon.js';\nimport { FILE_TYPE_PNG, FILE_TYPE_JPG, FILE_TYPE_SVG, downloadImageFromSVG } from 'util/Downloader.js';\n\nconst EXPORT_PADDING_X = 30;\nconst EXPORT_PADDING_Y = 0;\n\nclass GraphImageExporter extends AbstractGraphExporter\n{\n  constructor(imageType=FILE_TYPE_PNG)\n  {\n    super();\n    this._imageType = imageType;\n  }\n\n  processSVGForExport(element, width, height, currentModule)\n  {\n    const graphController = currentModule.getGraphController();\n\n    const viewport = currentModule.getApp().getInputAdapter().getViewport();\n    const offsetX = viewport.getOffsetX();\n    const offsetY = viewport.getOffsetY();\n    const bounds = graphController.getGraph().getBoundingRect();\n    const dx = bounds.minX + offsetX - EXPORT_PADDING_X;\n    const dy = bounds.minY + offsetY - EXPORT_PADDING_Y;\n    const w = bounds.width + EXPORT_PADDING_X * 2;\n    const h = bounds.height + EXPORT_PADDING_Y * 2;\n    const clone = element.cloneNode(true);\n    clone.setAttribute('viewBox', dx + \" \" + dy + \" \" + w + \" \" + h);\n    clone.setAttribute('width', width);\n    clone.setAttribute('height', height);\n\n    //Apply the workspace font (refer to Workspace.css)\n    clone.setAttribute('font-size', \"16px\");\n    clone.setAttribute('font-family', \"monospace\");\n    clone.setAttribute('style', \".graph-ui {display: none;}\");\n\n    /*\n\n    const nodeColor = styleOpts.getOptionByProp(\"--color-graph-node\").getStyle();\n    const textColor = styleOpts.getOptionByProp(\"--color-graph-text\").getStyle();\n    console.log(nodeColor);\n    const styleString = \"* {\"\n      + \"--color-graph-node: blue;\"\n      + \"--color-graph-text: \" + textColor + \";\"\n      + \"}\";\n\n    */\n\n    /*\n    //TODO: Link the font family to svg\n    const link = document.createElement(\"link\");\n    link.setAttribute(\"rel\", \"stylesheet\");\n    clone.appendChild(link);\n    */\n\n    //Remove unwanted ui elements from image\n    const uiElements = clone.getElementsByClassName(\"graph-ui\");\n    while(uiElements.length > 0)\n    {\n      const e = uiElements[0];\n      e.remove();//This will propagate changes to uiElements, so be careful\n    }\n\n    return clone;\n  }\n\n  //Override\n  exportToFile(filename, module)\n  {\n    const workspace = module.getApp().workspace;\n    const svgElement = workspace.getSVGElement();\n    const workspaceDim = svgElement.viewBox.baseVal;\n    const width = workspaceDim.width;\n    const height = workspaceDim.height;\n    const svg = this.processSVGForExport(svgElement, width, height, module);\n\n    downloadImageFromSVG(filename, this._imageType, svg, width, height);\n  }\n\n  //Override\n  doesSupportFile()\n  {\n    return true;\n  }\n\n  //Override\n  canImport(module)\n  {\n    return false;\n  }\n\n  //Override\n  getTitle()\n  {\n    switch(this._imageType)\n    {\n      case FILE_TYPE_PNG: return I18N.toString(\"file.export.png.hint\");\n      case FILE_TYPE_JPG: return I18N.toString(\"file.export.jpg.hint\");\n      case FILE_TYPE_SVG: return I18N.toString(\"file.export.svg.hint\");\n      default: return super.getTitle();\n    }\n  }\n\n  //Override\n  getLabel()\n  {\n    switch(this._imageType)\n    {\n      case FILE_TYPE_PNG: return I18N.toString(\"file.export.png\");\n      case FILE_TYPE_JPG: return I18N.toString(\"file.export.jpg\");\n      case FILE_TYPE_SVG: return I18N.toString(\"file.export.svg\");\n      default: return super.getLabel();\n    }\n  }\n\n  //Override\n  getFileType()\n  {\n    return this._imageType;\n  }\n\n  //Override\n  getIconClass()\n  {\n    switch(this._imageType)\n    {\n      case FILE_TYPE_PNG: return PNGIcon;\n      case FILE_TYPE_JPG: return JPGIcon;\n      case FILE_TYPE_SVG: return SVGIcon;\n      default: return null;\n    }\n  }\n}\n\nexport const DEFAULT_IMAGE_EXPORTERS = [\n  new GraphImageExporter(FILE_TYPE_PNG),\n  new GraphImageExporter(FILE_TYPE_JPG),\n  new GraphImageExporter(FILE_TYPE_SVG)\n];\n\nexport default GraphImageExporter;\n","import AbstractEventHandler from 'manager/undo/AbstractEventHandler.js';\n\nclass SafeGraphEventHandler extends AbstractEventHandler\n{\n  constructor(graphController, graphParser)\n  {\n    super();\n\n    this._graphController = graphController;\n    this._graphParser = graphParser;\n    this._graphData = graphParser.objectify(graphController.getGraph());\n  }\n\n  //Override\n  applyUndo(undoManager)\n  {\n    const prevEvent = undoManager.getPreviousEvent();\n    if (prevEvent instanceof SafeGraphEventHandler)\n    {\n      prevEvent.applyRedo(undoManager);\n    }\n    else\n    {\n      this._graphController.getGraph().clear();\n    }\n  }\n\n  //Override\n  applyRedo(undoManager)\n  {\n    this._graphParser.parse(this._graphData, this._graphController.getGraph());\n  }\n}\nexport default SafeGraphEventHandler;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M16.59 7.58L10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 8l-4 4h3c0 3.31-2.69 6-6 6-1.01 0-1.97-.25-2.8-.7l-1.46 1.46C8.97 19.54 10.43 20 12 20c4.42 0 8-3.58 8-8h3l-4-4zM6 12c0-3.31 2.69-6 6-6 1.01 0 1.97.25 2.8.7l1.46-1.46C15.03 4.46 13.57 4 12 4c-4.42 0-8 3.58-8 8H1l4 4 4-4H6z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './PanelCheckbox.css';\n\nclass PanelCheckbox extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.state = {\n      checked: props.initial || false\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  setChecked(value)\n  {\n    this.setState({checked: value});\n  }\n\n  isChecked()\n  {\n    return this.state.checked;\n  }\n\n  onChange(e)\n  {\n    const checked = e.target.checked;\n    if (this.state.checked !== checked)\n    {\n      this.setState({checked: checked});\n    }\n  }\n\n  //Override\n  render()\n  {\n    return (\n      <div id={this.props.id}\n        className={Style.checkbox_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <input type=\"checkbox\" id={this.props.id + \"-checkbox\"}\n          name={this.props.id + \"-checkbox\"} value={this.props.value}\n          checked={this.state.checked}\n          disabled={this.props.disabled}\n          onChange={this.onChange}/>\n        <label htmlFor={this.props.id + \"-checkbox\"}>{this.props.title}</label>\n      </div>\n    );\n  }\n}\n\nexport default PanelCheckbox;\n","class GraphNodeSelectionBox\n{\n  constructor()\n  {\n    this._boundingBox = {\n      fromX: 0, fromY: 0,\n      toX: 0, toY: 0,\n      visible: false\n    };\n\n    this.targets = [];\n  }\n\n  getSelectionBox()\n  {\n    return this._boundingBox;\n  }\n\n  getSelection(graph, forceUpdate=false)\n  {\n    if (forceUpdate)\n    {\n      const box = this._boundingBox;\n      const mx = Math.max(box.toX, box.fromX);\n      const my = Math.max(box.toY, box.fromY);\n      const lx = Math.min(box.toX, box.fromX);\n      const ly = Math.min(box.toY, box.fromY);\n      this.clearSelection();\n      getNodesWithin(graph, lx, ly, mx, my, this.targets);\n    }\n\n    return this.targets;\n  }\n\n  hasSelection()\n  {\n    return this.targets.length > 0;\n  }\n\n  clearSelection()\n  {\n    this.targets.length = 0;\n  }\n\n  isTargetInSelection(target)\n  {\n    return this.targets.includes(target);\n  }\n\n  beginSelection(graph, x, y)\n  {\n    const box = this._boundingBox;\n    box.fromX = box.toX = x;\n    box.fromY = box.toY = y;\n    this.clearSelection();\n\n    box.visible = true;\n  }\n\n  updateSelection(graph, x, y)\n  {\n    const box = this._boundingBox;\n    box.toX = x;\n    box.toY = y;\n    this.getSelection(graph, true);\n  }\n\n  endSelection(graph, x, y)\n  {\n    const box = this._boundingBox;\n    box.toX = x;\n    box.toY = y;\n    this.getSelection(graph, true);\n\n    box.visible = false;\n  }\n\n  isSelecting()\n  {\n    return this._boundingBox.visible;\n  }\n}\n\nfunction getNodesWithin(graph, x1, y1, x2, y2, dst)\n{\n  const fromX = Math.min(x1, x2);\n  const fromY = Math.min(y1, y2);\n  const toX = Math.max(x1, x2);\n  const toY = Math.max(y1, y2);\n\n  for(const node of graph.getNodes())\n  {\n    if (node.x >= fromX && node.x < toX &&\n        node.y >= fromY && node.y < toY)\n    {\n      dst.push(node);\n    }\n  }\n  return dst;\n}\n\nexport default GraphNodeSelectionBox;\n","const EDGE_RADIUS = 12;\nconst EDGE_RADIUS_SQU = EDGE_RADIUS * EDGE_RADIUS;\nconst ENDPOINT_RADIUS = 6;\nconst ENDPOINT_RADIUS_SQU = ENDPOINT_RADIUS * ENDPOINT_RADIUS;\n\nclass GraphPicker\n{\n  constructor(graphController)\n  {\n    this.target = null;\n    this.targetType = \"\";\n\n    this.initialTarget = null;\n    this.initialTargetType = \"\";\n\n    this._prevX = 0;\n    this._prevY = 0;\n  }\n\n  setInitialTarget(target, type)\n  {\n    this.initialTarget = target;\n    this.initialTargetType = type;\n  }\n\n  updateHoverTarget(graph, x, y)\n  {\n    if (this._prevX !== x || this._prevY !== y)\n    {\n      this._prevX = x;\n      this._prevY = y;\n\n      //Update target\n      this.updateTarget(graph, x, y);\n\n      //HACK: to make the cursor look like a pointer when targeting\n      if (this.hasTarget())\n      {\n        document.body.style.cursor = \"pointer\";\n      }\n      else\n      {\n        document.body.style.cursor = \"auto\";\n      }\n    }\n  }\n\n  updateInitialTarget(graph, x, y)\n  {\n    this.updateTarget(graph, x, y);\n    this.setInitialTarget(this.target, this.targetType);\n  }\n\n  updateTarget(graph, x, y)\n  {\n    if (this.target = this.getNodeByInitialMarkerAt(graph, x, y))\n    {\n      //Clicked on initial marker\n      this.targetType = \"initial\";\n    }\n    else if (this.target = this.getEdgeByEndPointAt(graph, x, y))\n    {\n      //Clicked on endpoint\n      this.targetType = \"endpoint\";\n    }\n    else if (this.target = this.getNodeAt(graph, x, y))\n    {\n      //Clicked on node\n      this.targetType = \"node\";\n    }\n    else if (this.target = this.getEdgeAt(graph, x, y))\n    {\n      //Clicked on edge\n      this.targetType = \"edge\";\n    }\n    else\n    {\n      //Clicked on graph\n      this.target = null;\n      this.targetType = \"none\";\n    }\n\n    return this.target;\n  }\n\n  clearTarget()\n  {\n    this.target = null;\n    this.targetType = \"none\";\n  }\n\n  hasTarget()\n  {\n    return this.target != null;\n  }\n\n  getNodeAt(graph, x, y)\n  {\n    //Search graph\n    for(const node of graph.getNodes())\n    {\n      const nodeSize = node.getNodeSize();\n      const dx = x - node.x;\n      const dy = y - node.y;\n      if (dx * dx + dy * dy < nodeSize * nodeSize)\n      {\n        return node;\n      }\n    }\n    return null;\n  }\n\n  getNodeByInitialMarkerAt(graph, x, y)\n  {\n    const startNode = graph.getStartNode();\n    if (!startNode) return null;\n\n    const nodeSize = startNode.getNodeSize();\n    const offset = -(nodeSize + (nodeSize / 2));\n    const dx = x - (startNode.x + offset);\n    const dy = y - startNode.y;\n    if (dx * dx + dy * dy < EDGE_RADIUS_SQU)\n    {\n      return startNode;\n    }\n\n    return null;\n  }\n\n  getEdgeAt(graph, x, y)\n  {\n    const center = {x: 0, y: 0};\n\n    //Search graph\n    for(const edge of graph.getEdges())\n    {\n      edge.getCenterPoint(center);\n      const dx = x - center.x;\n      const dy = y - center.y;\n      if (dx * dx + dy * dy < EDGE_RADIUS_SQU)\n      {\n        return edge;\n      }\n    }\n    return null;\n  }\n\n  getEdgeByEndPointAt(graph, x, y)\n  {\n    const end = {x: 0, y: 0};\n    //Search graph\n    for(const edge of graph.getEdges())\n    {\n      edge.getEndPoint(end);\n      const dx = x - end.x;\n      const dy = y - end.y;\n      if (dx * dx + dy * dy < ENDPOINT_RADIUS_SQU)\n      {\n        return edge;\n      }\n    }\n    return null;\n  }\n\n\n  isTarget(target)\n  {\n    return this.target == target;\n  }\n}\n\nexport default GraphPicker;\n","class InputHandler\n{\n  isTargetable(inputController, pointer, target, targetType)\n  {\n    return false;\n  }\n\n  onAction(inputController, graphController, pointer, target)\n  {\n    return false;\n  }\n\n  onDblAction(inputController, graphController, pointer, target)\n  {\n    return false;\n  }\n\n  onDragStart(inputController, graphController, pointer, target)\n  {\n    return false;\n  }\n\n  onDragMove(inputController, graphController, pointer, target)\n  {\n    return false;\n  }\n\n  onDragStop(inputController, graphController, pointer, target)\n  {\n    return false;\n  }\n}\nexport default InputHandler;\n","import InputHandler from './InputHandler.js';\n\nclass GraphElementInputHandler extends InputHandler\n{\n  constructor(targetType)\n  {\n    super();\n\n    if (!targetType)\n    {\n      throw new Error(\"Missing target type for graph element input handler\");\n    }\n\n    this._targetType = targetType;\n  }\n\n  //Override\n  isTargetable(inputController, pointer, target, targetType)\n  {\n    if (targetType === this._targetType)\n    {\n      return true;\n    }\n\n    return false;\n  }\n  \n  getTargetType()\n  {\n    return this._targetType;\n  }\n}\n\nexport default GraphElementInputHandler;\n","import GraphElementInputHandler from './GraphElementInputHandler.js';\n\nconst SNAP_TO_GRID = true;\nconst SNAP_SIZE = 48;\n\nclass GraphNodeInputHandler extends GraphElementInputHandler\n{\n  constructor()\n  {\n    super(\"node\");\n  }\n\n  //Override\n  onAction(inputController, graphController, pointer, target)\n  {\n    const picker = inputController.getPicker();\n    const selectionBox = inputController.getSelectionBox();\n\n    //Click to delete node\n    if (inputController.isTrashMode())\n    {\n      //So that the emitted 'delete' events can use this\n      graphController.prevX = target.x;\n      graphController.prevY = target.y;\n\n      //If there exists selected states, delete them all!\n      if (selectionBox.hasSelection())\n      {\n        //Delete all selected nodes\n        graphController.deleteSelectedNodes(target);\n      }\n      else\n      {\n        //Delete a single node\n        graphController.deleteTargetNode(target);\n      }\n      return true;\n    }\n    //Edit click to toggle node\n    else if (!inputController.isMoveMode())\n    {\n      graphController.toggleNode(target);\n      return true;\n    }\n    else\n    {\n      //Edit label for selected node\n      graphController.openLabelEditor(target, target.getNodeLabel());\n    }\n\n    return false;\n  }\n\n  //Override\n  onDragStart(inputController, graphController, pointer, target)\n  {\n    if (inputController.isMoveMode())\n    {\n      //Moving node (and selected nodes)\n      graphController.prevX = target.x;\n      graphController.prevY = target.y;\n    }\n    else\n    {\n      const picker = inputController.getPicker();\n      const graph = graphController.getGraph();\n      const edge = graph.createEdge(target, pointer);\n      edge.setEdgeLabel(graphController.getGraphLabeler().getDefaultEdgeLabel());\n\n      //Redirect pointer to refer to the edge as the new target\n      picker.setInitialTarget(edge, \"endpoint\");\n      inputController.isNewEdge = true;\n\n      //Reset previous quad values for new proxy edge\n      const edgeQuad = edge.getQuadratic();\n      graphController.prevQuad.radians = edgeQuad.radians;\n      graphController.prevQuad.length = edgeQuad.length;\n      graphController.prevEdgeTo = null;\n\n      //Ready to move proxy edge to pointer...\n    }\n    return true;\n  }\n\n  //Override\n  onDragMove(inputController, graphController, pointer, target)\n  {\n    const picker = inputController.getPicker();\n    const selectionBox = inputController.getSelectionBox();\n    const graph = graphController.getGraph();\n    let x = pointer.x;\n    let y = pointer.y;\n\n    if (inputController._snapToGrid)\n    {\n      const snapSize = inputController._snapSize;\n      x = Math.round(x / snapSize) * snapSize;\n      y = Math.round(y / snapSize) * snapSize;\n    }\n\n    if (selectionBox.hasSelection())\n    {\n      graphController.moveMultipleNodesTo(pointer, selectionBox.getSelection(graph), x, y);\n    }\n    else\n    {\n      graphController.moveNodeTo(pointer, target, x, y);\n    }\n    return true;\n  }\n\n  //Override\n  onDragStop(inputController, graphController, pointer, target)\n  {\n    const picker = inputController.getPicker();\n    const selectionBox = inputController.getSelectionBox();\n    const graph = graphController.getGraph();\n    const x = pointer.x;\n    const y = pointer.y;\n\n    //Delete it if withing trash area...\n    if (inputController.isTrashMode())\n    {\n      //If there exists selected states, delete them all!\n      if (selectionBox.hasSelection())\n      {\n        graphController.deleteSelectedNodes(target);\n      }\n      else\n      {\n        //Delete a single node\n        graphController.deleteTargetNode(target);\n      }\n\n      return true;\n    }\n    //If dragged to an empty space (not trash)\n    else\n    {\n      //Do nothing, since should have moved to position\n      if (selectionBox.hasSelection())\n      {\n        const dx = x - graphController.prevX;\n        const dy = y - graphController.prevY;\n        graphController.onGraphIntentMoveAllNodes(selectionBox.getSelection(graph), dx, dy);\n        //graphController.emit(\"nodeMoveAll\", graph, picker.getSelection(graph), dx, dy);\n      }\n      else\n      {\n        graphController.onGraphIntentMoveNode(target, x, y, graphController.prevX, graphController.prevY);\n        //graphController.emit(\"nodeMove\", graph, target, x, y, graphController.prevX, graphController.prevY);\n      }\n      return true;\n    }\n\n    return false;\n  }\n}\n\nexport default GraphNodeInputHandler;\n","import GraphElementInputHandler from './GraphElementInputHandler.js';\nimport GraphNode from 'graph/GraphNode.js';\n\nclass GraphInitialInputHandler extends GraphElementInputHandler\n{\n  constructor()\n  {\n    super(\"initial\");\n  }\n\n  //Override\n  onDragStart(inputController, graphController, pointer, target)\n  {\n    //Ready to move the initial marker to another state...\n    inputController.ghostInitialMarker = pointer;\n    return true;\n  }\n\n  //Override\n  onDragMove(inputController, graphController, pointer, target)\n  {\n    const picker = inputController.getPicker();\n    const graph = graphController.getGraph();\n    const x = pointer.x;\n    const y = pointer.y;\n    //Move initial marker to node or pointer\n    const dst = picker.getNodeAt(graph, x, y) || pointer;\n    inputController.ghostInitialMarker = dst;\n    return true;\n  }\n\n  //Override\n  onDragStop(inputController, graphController, pointer, target)\n  {\n    const graph = graphController.getGraph();\n\n    //If valid initial object to mark...\n    if (inputController.ghostInitialMarker instanceof GraphNode)\n    {\n      const prevInitial = graph.getStartNode();\n\n      //Set the new object as the initial node\n      graph.setStartNode(inputController.ghostInitialMarker);\n      graphController.applyAutoRename();\n\n      //Emit event\n      graphController.onGraphIntentChangeInitial(inputController.ghostInitialMarker, prevInitial);\n      //graphController.emit(\"nodeInitial\", graph, inputController.ghostInitialMarker, prevInitial);\n    }\n\n    //Reset ghost initial marker\n    inputController.ghostInitialMarker = null;\n    return true;\n  }\n}\n\nexport default GraphInitialInputHandler;\n","import GraphElementInputHandler from './GraphElementInputHandler.js';\n\nclass GraphEdgeInputHandler extends GraphElementInputHandler\n{\n  constructor()\n  {\n    super(\"edge\");\n  }\n\n  //Override\n  onAction(inputController, graphController, pointer, target)\n  {\n    if (inputController.isTrashMode())\n    {\n      //Delete a single edge\n      graphController.deleteTargetEdge(target);\n    }\n    else\n    {\n      //Edit label for selected edge\n      graphController.openLabelEditor(target, target.getEdgeLabel());\n    }\n    return true;\n  }\n\n  //Override\n  onDragStart(inputController, graphController, pointer, target)\n  {\n    //Makes sure that placeholders are not quadratics!\n    if (target.isPlaceholder())\n    {\n      return false;\n    }\n\n    //Save previous quadratics\n    const targetQuad = target.getQuadratic();\n    graphController.prevQuad.radians = targetQuad.radians;\n    graphController.prevQuad.length = targetQuad.length;\n\n    //Ready to move the edge vertex to pointer...\n    return true;\n  }\n\n  //Override\n  onDragMove(inputController, graphController, pointer, target)\n  {\n    graphController.moveEdgeTo(pointer, target, pointer.x, pointer.y);\n    return true;\n  }\n\n  //Override\n  onDragStop(inputController, graphController, pointer, target)\n  {\n    const graph = graphController.getGraph();\n\n    //Delete it if withing trash area...\n    if (inputController.isTrashMode())\n    {\n      graphController.deleteTargetEdge(target);\n    }\n    else\n    {\n      //Do nothing, since should have moved to position\n      graphController.onGraphIntentMoveEdge(target, target.getQuadratic(), graphController.prevQuad);\n      //graphController.emit(\"edgeMove\", graph, target, target.getQuadratic(), graphController.prevQuad);\n    }\n    return true;\n  }\n}\n\nexport default GraphEdgeInputHandler;\n","import GraphElementInputHandler from './GraphElementInputHandler.js';\nimport GraphNode from 'graph/GraphNode.js';\n\nclass GraphEndpointInputHandler extends GraphElementInputHandler\n{\n  constructor()\n  {\n    super(\"endpoint\");\n  }\n\n  //Override\n  onAction(inputController, graphController, pointer, target)\n  {\n    if (inputController.isTrashMode())\n    {\n      //Delete a single edge\n      graphController.deleteTargetEdge(target);\n      return true;\n    }\n    return false;\n  }\n\n  //Override\n  onDragStart(inputController, graphController, pointer, target)\n  {\n    const targetQuad = target.getQuadratic();\n    graphController.prevQuad.radians = targetQuad.radians;\n    graphController.prevQuad.length = targetQuad.length;\n    graphController.prevEdgeTo = target.getDestinationNode();\n\n    inputController.isNewEdge = false;\n\n    //Ready to move the edge endpoint to pointer...\n    return true;\n  }\n\n  //Override\n  onDragMove(inputController, graphController, pointer, target)\n  {\n    graphController.moveEndpointTo(pointer, target, pointer.x, pointer.y);\n    return true;\n  }\n\n  //Override\n  onDragStop(inputController, graphController, pointer, target)\n  {\n    const graph = graphController.getGraph();\n    const x = pointer.x;\n    const y = pointer.y;\n\n    //Delete it if withing trash area...\n    if (inputController.isTrashMode())\n    {\n      graphController.deleteTargetEdge(target);\n      return true;\n    }\n    //If hovering over a node...\n    else if (target.getDestinationNode() instanceof GraphNode)\n    {\n      const result = graph.formatEdge(target);\n\n      //If a different edge is the result of the target...\n      if (result !== target)\n      {\n        //Allow the user to edit the merged labels\n        graphController.openLabelEditor(result, result.getEdgeLabel());\n\n        //Delete the merged label\n        graph.deleteEdge(target);\n        return true;\n      }\n      //Open label editor if a new edge...\n      else\n      {\n        if (inputController.isNewEdge)\n        {\n          graphController.openLabelEditor(result, \"\", (target, value) => graphController.onGraphIntentFinishEdge(target));\n        }\n        else\n        {\n          graphController.openLabelEditor(target, target.getEdgeLabel());\n        }\n      }\n\n      if (inputController.isNewEdge)\n      {\n        //Must be after openLabelEditor() to allow the function to check it...\n        inputController.isNewEdge = false;\n\n        //Emit event\n        graphController.onGraphIntentCreateEdge(target);\n      }\n      else if (graphController.prevEdgeTo !== null)\n      {\n        //Emit event\n        graphController.onGraphIntentChangeDestination(target, target.getDestinationNode(), graphController.prevEdgeTo, graphController.prevQuad);\n      }\n\n      return true;\n    }\n    //If hovering over anything else...\n    else\n    {\n      //Destroy any edge that no longer have a destination\n      if (inputController.shouldDestroyPointlessEdges)\n      {\n        if (!inputController.isNewEdge)\n        {\n          graphController.deleteTargetEdge(target);\n        }\n        else\n        {\n          graph.deleteEdge(target);\n        }\n        return true;\n      }\n      //Keep edges as placeholders (used in DFA's)\n      else\n      {\n        target.changeDestinationNode(null);\n\n        //Open label editor if default edge...\n        if (target.getEdgeLabel().length <= 0)\n        {\n          graphController.openLabelEditor(target, target.getEdgeLabel());\n        }\n        return true;\n      }\n    }\n  }\n}\n\nexport default GraphEndpointInputHandler;\n","import InputHandler from './InputHandler.js';\n\nclass GraphNodeCreateInputHandler extends InputHandler\n{\n  constructor()\n  {\n    super();\n  }\n\n  //Override\n  isTargetable(inputController, pointer, target, targetType)\n  {\n    return targetType === 'none';\n  }\n\n  //Override\n  onDblAction(inputController, graphController, pointer, target)\n  {\n    let x = pointer.x;\n    let y = pointer.y;\n\n    if (inputController._snapToGrid)\n    {\n      const snapSize = inputController._snapSize;\n      x = Math.round(x / snapSize) * snapSize;\n      y = Math.round(y / snapSize) * snapSize;\n    }\n\n    //Create node at position\n    const node = graphController.createNode(x, y);\n    //TODO: this allows nodes to move away from other nodes\n    //But undoManager does not recognize it.\n    //graphController.moveNodeTo(pointer, node, x, y);\n    return true;\n  }\n}\n\nexport default GraphNodeCreateInputHandler;\n","import AbstractInputController from 'modules/abstract/AbstractInputController.js';\n\n//import NodalGraphPicker from 'graph/picker/NodalGraphPicker.js';\nimport GraphNodeSelectionBox from 'graph/GraphNodeSelectionBox.js';\nimport GraphPicker from './GraphPicker.js';\n\nimport GraphNodeInputHandler from './inputhandler/GraphNodeInputHandler.js';\nimport GraphInitialInputHandler from './inputhandler/GraphInitialInputHandler.js';\n\nimport GraphEdgeInputHandler from './inputhandler/GraphEdgeInputHandler.js';\nimport GraphEndpointInputHandler from './inputhandler/GraphEndpointInputHandler.js';\nimport GraphNodeCreateInputHandler from './inputhandler/GraphNodeCreateInputHandler.js';\n\nconst DEFAULT_SHOULD_DESTROY_POINTLESS_EDGE = true;\n\nclass InputController extends AbstractInputController\n{\n  constructor(module, inputAdapter)\n  {\n    super(module, inputAdapter);\n\n    this._picker = null;\n    this._selectionBox = new GraphNodeSelectionBox();\n    this._graphController = null;\n\n    //Make sure this is always false when moving endpoints\n    this.isNewEdge = false;\n\n    //Used to change render to follow pointer when moving initial marker\n    this.ghostInitialMarker = null;\n\n    //Whether to destroy pointless edges\n    this.shouldDestroyPointlessEdges = DEFAULT_SHOULD_DESTROY_POINTLESS_EDGE;\n\n    //Swap left to right clicks and vice versa on anything else but Macs\n    this._swapMouseScheme = true;//!navigator.platform.startsWith(\"Mac\");\n\n    //Used to determine whether the target should be destroyed because of trash mode\n    this._trashMode = false;\n\n    this._disabled = false;\n\n    //TODO: this works, it's just not attached to anything\n    this._snapToGrid = false;\n    this._snapSize = 48;\n\n    this._inputHandlers = [\n      new GraphNodeInputHandler(),\n      new GraphEdgeInputHandler(),\n      new GraphEndpointInputHandler(),\n      new GraphInitialInputHandler(),\n      new GraphNodeCreateInputHandler()\n    ];\n  }\n\n  //Override\n  initialize(module)\n  {\n    super.initialize(module);\n\n    this._module = module;\n    this._graphController = module.getGraphController();\n    //this._picker = new NodalGraphPicker(this._graphController);\n    this._picker = new GraphPicker(this._graphController);\n  }\n\n  //Override\n  destroy(module)\n  {\n    super.destroy(module);\n  }\n\n  //Override\n  update(module)\n  {\n    super.update(module);\n\n    const graph = this._graphController.getGraph();\n    const picker = this._picker;\n\n    const x = this._inputAdapter.getPointerX();\n    const y = this._inputAdapter.getPointerY();\n    picker.updateHoverTarget(graph, x, y);\n  }\n\n  setDisabled(disabled)\n  {\n    this._disabled = disabled;\n  }\n\n  isDisabled()\n  {\n    return this._disabled;\n  }\n\n  //Override\n  onPreInputEvent(pointer)\n  {\n    if (this._disabled) return super.onPreInputEvent(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n\n    const graph = graphController.getGraph();\n    const picker = inputController.getPicker();\n    picker.updateInitialTarget(graph, pointer.x, pointer.y);\n\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    if (this._selectionBox.hasSelection())\n    {\n      //Unselect everything is clicked on something other than nodes...\n      if (targetType != \"node\" || !this._selectionBox.isTargetInSelection(target))\n      {\n        this._selectionBox.clearSelection();\n      }\n    }\n\n    //Override\n    return super.onPreInputEvent(pointer);\n  }\n\n  //Override\n  onInputEvent(pointer)\n  {\n    if (this._disabled) return super.onInputEvent(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n    const picker = inputController.getPicker();\n    picker.updateTarget(graphController.getGraph(), pointer.x, pointer.y);\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    for(const handler of this._inputHandlers)\n    {\n      if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onAction(inputController, graphController, pointer, target))\n      {\n        return true;\n      }\n    }\n\n    //Override\n    return super.onInputEvent(pointer);\n  }\n\n  //Override\n  onDblInputEvent(pointer)\n  {\n    if (this._disabled) return super.onDblInputEvent(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n    const picker = inputController.getPicker();\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    //Make sure it is not in trash mode\n    if (inputController.isTrashMode())\n    {\n      graphController.emit(\"tryCreateWhileTrash\");\n      return false;\n    }\n\n    for(const handler of this._inputHandlers)\n    {\n      if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onDblAction(inputController, graphController, pointer, target))\n      {\n        return true;\n      }\n    }\n\n    //Override\n    return super.onDblInputEvent(pointer);\n  }\n\n  //Override\n  onDragStart(pointer)\n  {\n    if (this._disabled) return super.onDragStart(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n    const picker = inputController.getPicker();\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    //Make sure it is not in new edge mode\n    inputController.isNewEdge = false;\n\n    //Make sure it is not in trash mode\n    if (inputController.isTrashMode())\n    {\n      graphController.emit(\"tryCreateWhileTrash\");\n      return false;\n    }\n\n    for(const handler of this._inputHandlers)\n    {\n      if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onDragStart(inputController, graphController, pointer, target))\n      {\n        return true;\n      }\n    }\n\n    //Override\n    return super.onDragStart(pointer);\n  }\n\n  //Override\n  onDragMove(pointer)\n  {\n    if (this._disabled) return super.onDragMove(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n    const picker = inputController.getPicker();\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    for(const handler of this._inputHandlers)\n    {\n      if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onDragMove(inputController, graphController, pointer, target))\n      {\n        return true;\n      }\n    }\n\n    //Override\n    return super.onDragMove(pointer);\n  }\n\n  //Override\n  onDragStop(pointer)\n  {\n    if (this._disabled) return super.onDragStop(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n    const picker = inputController.getPicker();\n    picker.updateTarget(graphController.getGraph(), pointer.x, pointer.y);\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    for(const handler of this._inputHandlers)\n    {\n      if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onDragStop(inputController, graphController, pointer, target))\n      {\n        return true;\n      }\n    }\n\n    //Override\n    return super.onDragStop(pointer);\n  }\n\n  //Override\n  onPostInputEvent(pointer)\n  {\n    if (this._disabled) return super.onPostInputEvent(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n    const graph = graphController.getGraph();\n    const picker = inputController.getPicker();\n\n    picker.clearTarget();\n    picker.updateTarget(graph, pointer.x, pointer.y);\n\n    //Override\n    super.onPostInputEvent(pointer);\n  }\n\n  setTrashMode(enabled)\n  {\n    this._trashMode = enabled;\n    if (enabled)\n    {\n      this._module.getApp()._drawer.setViewportColor(\"var(--color-viewport-error)\");\n    }\n    else\n    {\n      this._module.getApp()._drawer.setViewportColor(null);\n    }\n  }\n\n  isTrashMode()\n  {\n    return this._trashMode;\n  }\n\n  setInputScheme(shouldInputFirst)\n  {\n    this._swapMouseScheme = !shouldInputFirst;\n  }\n\n  getInputScheme()\n  {\n    return this._swapMouseScheme;\n  }\n\n  isMoveMode()\n  {\n    const result = this._inputAdapter.isAltInput();\n    return this._swapMouseScheme ? !result : result;\n  }\n\n  isDragging()\n  {\n    return this._inputAdapter.isDragging();\n  }\n\n  isActionMode()\n  {\n    return this._inputAdapter.isPointerActive() ?\n      //Is considered an input when NOT moving or when creating a new edge...\n      this.isNewEdge || !this.isMoveMode() :\n      //If not active, just show default input...\n      !this._swapMouseScheme;\n  }\n\n  getPicker()\n  {\n    return this._picker;\n  }\n\n  getSelectionBox()\n  {\n    return this._selectionBox;\n  }\n}\n\nexport default InputController;\n","import AbstractGraphController from 'modules/abstract/AbstractGraphController.js';\n\nimport Eventable from 'util/Eventable.js';\nimport GraphEdge from 'graph/GraphEdge.js';\nimport GraphLayout from 'modules/fsa/graph/GraphLayout.js';\n\nimport GraphChangeHandler from 'experimental/GraphChangeHandler.js';\n\nconst NODE_SPAWN_RADIUS = 64;\nconst DEFAULT_AUTO_RENAME = true;\nconst GRAPH_REFRESH_RATE = 30;\nconst DELETE_ON_EMPTY = true;\n\nclass GraphController extends AbstractGraphController\n{\n  constructor(module, graph, labeler, parser)\n  {\n    super(module, graph, labeler, parser);\n\n    this.inputController = null;\n    this._graphChangeHandler = new GraphChangeHandler(GRAPH_REFRESH_RATE);\n\n    this.getGraphLabeler().setGraphController(this);\n\n    this.labelEditorElement = null;\n\n    this.prevQuad = {\n      radians: 0, length: 0,\n      x: 0, y: 0\n    };\n    this.prevEdgeTo = null;\n    this.prevX = 0;\n    this.prevY = 0;\n\n    this.shouldAutoLabel = DEFAULT_AUTO_RENAME;\n\n    //The difference between controller events vs graph events is: controller has user-intent\n\n    //tryCreateWhileTrash()\n    this.registerEvent(\"tryCreateWhileTrash\");\n  }\n\n  //Override\n  initialize(module)\n  {\n    super.initialize(module);\n\n    this._module = module;\n    this.inputController = module.getInputController();\n  }\n\n  //Override\n  destroy(module)\n  {\n    super.destroy(module);\n  }\n\n  //Override\n  update(module)\n  {\n    super.update(module);\n\n    this._graphChangeHandler.update(this._graph);\n  }\n\n  getGraphChangeHandler()\n  {\n    return this._graphChangeHandler;\n  }\n\n  applyAutoLayout()\n  {\n    GraphLayout.applyLayout(this.getGraph());\n\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  applyAutoRename()\n  {\n    const graphLabeler = this._labeler;\n    const graph = this._graph;\n\n    if (graph.isEmpty()) return;\n\n    //Reset all default labels...\n    for(const node of graph.getNodes())\n    {\n      if (!node.getNodeCustom()) node.setNodeLabel(\"\");\n    }\n\n    //Rename all default labels appropriately...\n    for(const node of graph.getNodes())\n    {\n      if (!node.getNodeCustom())\n      {\n        node.setNodeLabel(graphLabeler.getDefaultNodeLabel());\n      }\n    }\n  }\n\n  onGraphIntentImport()\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentCreateEdge(edge)\n  {\n  }\n\n  onGraphIntentFinishEdge(edge)\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentMoveEdge(edge, nextQuad, prevQuad)\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentChangeDestination(edge, destinationNode, prevDestination, prevQuad)\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentChangeInitial(nextInitial, prevInitial)\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentMoveNode(node, nextX, nextY, prevX, prevY)\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentMoveAllNodes(nodes, dx, dy)\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentDeleteNodes(node, targetNodes, prevX, prevY)\n  {\n    if (this.shouldAutoLabel)\n    {\n      this.applyAutoRename();\n    }\n  }\n\n  setAutoRenameNodes(enable)\n  {\n    const prev = this.shouldAutoLabel;\n    this.shouldAutoLabel = enable;\n    if (enable && !prev)\n    {\n      this.applyAutoRename();\n    }\n  }\n\n  shouldAutoRenameNodes()\n  {\n    return this.shouldAutoLabel;\n  }\n\n  renameNode(node, name)\n  {\n    const prev = node.getNodeLabel();\n    const isPrevCustom = node.getNodeCustom();\n\n    node.setNodeLabel(name);\n    node.setNodeCustom(true);\n\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  createNode(x, y)\n  {\n    if (typeof x === 'undefined') x = (Math.random() * NODE_SPAWN_RADIUS * 2) - NODE_SPAWN_RADIUS;\n    if (typeof y === 'undefined') y = (Math.random() * NODE_SPAWN_RADIUS * 2) - NODE_SPAWN_RADIUS;\n\n    const node = this.getGraph().createNode(x, y);\n\n    const newNodeLabel = this.getGraphLabeler().getDefaultNodeLabel();\n    node.setNodeLabel(newNodeLabel);\n\n    this.getModule().getApp().getUndoManager().captureEvent();\n    return node;\n  }\n\n  toggleNode(node)\n  {\n    const prev = node.getNodeAccept();\n    const result = !prev;\n    //Toggle accept for selected node\n    node.setNodeAccept(result);\n\n    //Emit event\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  deleteSelectedNodes(selectedNode)\n  {\n    const selectionBox = this.inputController.getSelectionBox();\n    const selection = selectionBox.getSelection(this.getGraph()).slice();\n\n    //Remove from graph\n    for(const node of selection)\n    {\n      this.getGraph().deleteNode(node);\n    }\n\n    //Remove from selection\n    selectionBox.clearSelection();\n\n    //Emit event\n    this.onGraphIntentDeleteNodes(selectedNode, selection, this.prevX, this.prevY);\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  deleteTargetNode(target)\n  {\n    this.getGraph().deleteNode(target);\n\n    //Emit event\n    this.onGraphIntentDeleteNodes(target, [target], this.prevX, this.prevY);\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  deleteTargetNodes(targets)\n  {\n    if (!targets || targets.length <= 0) return;\n\n    const graph = this.getGraph();\n    for(const node of targets)\n    {\n      graph.deleteNode(node);\n    }\n\n    //Emit event\n    this.onGraphIntentDeleteNodes(targets[0], targets, this.prevX, this.prevY);\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  deleteTargetEdge(target)\n  {\n    this.getGraph().deleteEdge(target);\n\n    //Emit event\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  deleteTargetEdges(targets)\n  {\n    if (!targets || targets.length <= 0) return;\n\n    for(const target of targets)\n    {\n      this.deleteTargetEdge(target);\n    }\n  }\n\n  moveNodeTo(pointer, node, x, y)\n  {\n    const nodeSize = node.getNodeSize();\n    for(const other of this.getGraph().getNodes())\n    {\n      //Update node collision\n      if (node === other) continue;\n\n      const dx = x - other.x;\n      const dy = y - other.y;\n      const angle = Math.atan2(dy, dx);\n\n      const diameter = (nodeSize * 2);\n      const nextDX = other.x + (Math.cos(angle) * diameter) - x;\n      const nextDY = other.y + (Math.sin(angle) * diameter) - y;\n\n      if (dx * dx + dy * dy < nodeSize * nodeSize * 4)\n      {\n        x += nextDX;\n        y += nextDY;\n      }\n    }\n\n    node.x = x;\n    node.y = y;\n  }\n\n  moveMultipleNodesTo(pointer, nodes, x, y)\n  {\n    //Moves all nodes by difference between initial position with passed-in x and y\n    const pos = pointer.getInputEventPosition();\n    const dx = x - pos.x;\n    const dy = y - pos.y;\n    for(const node of nodes)\n    {\n      node.x += dx;\n      node.y += dy;\n    }\n\n    //Updates initial position to passed-in x and y to maintain relative position\n    pointer.changeInputEventPosition(x, y);\n  }\n\n  moveEdgeTo(pointer, edge, x, y)\n  {\n    edge.setQuadraticByCoords(x, y);\n  }\n\n  moveEndpointTo(pointer, edge, x, y)\n  {\n    //Get ONLY node at x and y (cannot use hover target, since it is not ONLY nodes)\n    const picker = this.inputController.getPicker();\n    const dst = picker.getNodeAt(this.getGraph(), x, y) || pointer;\n\n    edge.changeDestinationNode(dst);\n\n    //If the cursor returns to the state after leaving it...\n    if (edge.isSelfLoop())\n    {\n      //Make it a self loop\n      const sourceNode = edge.getSourceNode();\n      const dx = sourceNode.x - x;\n      const dy = sourceNode.y - y;\n      const radians = Math.atan2(dy, dx) + Math.PI;\n      edge.setQuadratic(radians);\n    }\n    //Otherwise, maintain original curve\n    else\n    {\n      //TODO: This also causes self-loops to act weird when no longer a self loop\n      edge.setQuadratic(this.prevQuad.radians, this.prevQuad.length);\n    }\n  }\n\n  openLabelEditor(target, defaultValue=null, callback=null)\n  {\n    const labelEditor = this.getModule().getInputManager().getLabelEditorManager().getLabelEditorComponent();\n    const prevLabel = defaultValue;\n    labelEditor.openEditor(target, defaultValue, (target, value) => {\n      if (DELETE_ON_EMPTY && (!value || value.length <= 0) && target instanceof GraphEdge)\n      {\n        //Assumes target is GraphEdge\n        this._graph.deleteEdge(target);\n      }\n      else\n      {\n        if (target instanceof GraphEdge)\n        {\n          target.setEdgeLabel(value);\n        }\n        else\n        {\n          target.setNodeLabel(value);\n        }\n\n        if (!prevLabel || (prevLabel.length > 0 && value !== prevLabel))\n        {\n          this.getModule().getApp().getUndoManager().captureEvent();\n        }\n        if (callback) callback(target, value);\n      }\n    }, (target) => {\n      if (DELETE_ON_EMPTY && (!prevLabel || prevLabel.length <= 0) && target instanceof GraphEdge)\n      {\n        //Assumes target is GraphEdge\n        this._graph.deleteEdge(target);\n      }\n    });\n  }\n\n  focusOnNode(node)\n  {\n    //Center workspace at focused node; inverted due to graph-to-screen space\n    this.inputController.getInputAdapter().getViewport().setOffset(-node.x, -node.y);\n  }\n\n  focusOnEdge(edge)\n  {\n    //Center workspace at focused edge; inverted due to graph-to-screen space\n    const center = edge.getCenterPoint();\n    this.inputController.getInputAdapter().getViewport().setOffset(-center.x, -center.y);\n  }\n\n  focusOnNodes(nodes)\n  {\n    //Center workspace at the average of focused nodes; inverted due to graph-to-screen space\n    const length = nodes.length;\n    let ax = 0;\n    let ay = 0;\n    for(const node of nodes)\n    {\n      ax += node.x;\n      ay += node.y;\n    }\n    this.inputController.getInputAdapter().getViewport().setOffset(-ax / length, -ay / length);\n  }\n}\n//Mixin Eventable\nEventable.mixin(GraphController);\n\nexport default GraphController;\n","import AbstractInputHandler from 'input/AbstractInputHandler.js';\n\nclass SelectionBoxInputHandler extends AbstractInputHandler\n{\n  constructor(inputController, graphController, selectionBox)\n  {\n    super();\n\n    this._inputController = inputController;\n    this._graphController = graphController;\n    this._selectionBox = selectionBox;\n  }\n\n  //Override\n  onDragStart(pointer)\n  {\n    if (!this._inputController.isMoveMode())\n    {\n      //Begin selection box...\n      this._selectionBox.beginSelection(this._graphController.getGraph(), pointer.x, pointer.y);\n      return true;\n    }\n\n    return false;\n  }\n\n  //Override\n  onDragMove(pointer)\n  {\n    //If the selection box is active...\n    if (this._selectionBox.isSelecting())\n    {\n      //Update the selection box\n      this._selectionBox.updateSelection(this._graphController.getGraph(), pointer.x, pointer.y);\n      return true;\n    }\n\n    return false;\n  }\n\n  //Override\n  onDragStop(pointer)\n  {\n    //If was trying to select...\n    if (this._selectionBox.isSelecting())\n    {\n      //Stop selecting stuff, fool.\n      this._selectionBox.endSelection(this._graphController.getGraph(), pointer.x, pointer.y);\n      return true;\n    }\n\n    return false;\n  }\n}\n\nexport default SelectionBoxInputHandler;\n","import AbstractInputHandler from 'input/AbstractInputHandler.js';\n\nclass ViewportInputHandler extends AbstractInputHandler\n{\n  constructor()\n  {\n    super();\n\n    this._prevX = 0;\n    this._prevY = 0;\n  }\n\n  //Override\n  onDragStart(pointer)\n  {\n    this._prevX = pointer.x;\n    this._prevY = pointer.y;\n    return true;\n  }\n\n  //Override\n  onDragMove(pointer)\n  {\n    const dx = pointer.x - this._prevX;\n    const dy = pointer.y - this._prevY;\n    const adapter = pointer.getAdapter();\n    const viewport = adapter.getViewport();\n    viewport.addOffset(dx, dy, true);\n    return true;\n  }\n\n  //Override\n  onDragStop(pointer)\n  {\n    //Do nothing. It should already be moved.\n    return true;\n  }\n}\n\nexport default ViewportInputHandler;\n","import React from 'react';\n\nexport const SUBMIT_DELAY = 30;\nexport const SUBMIT_KEY = \"Enter\";\nexport const CANCEL_KEY = \"Escape\";\n\nclass PatternInput extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.inputElement = null;\n\n    this.placeholder = \"\";\n    this.maxLength = 524288;/*This is the default value*/\n    this.multiLine = true;\n    this.formatter = null;\n\n    this._submitTimeout = null;\n    this._submit = props.submitOnBlur;\n    this._skipBlur = false;\n    this._skipSelect = false;\n\n    this.state = {\n      prevValue: \"\",\n      value: \"\"\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n  }\n\n  setFormatter(formatter)\n  {\n    this.formatter = formatter;\n    return this;\n  }\n\n  onFocus(e)\n  {\n    if (this._skipSelect)\n    {\n      this.inputElement.select();\n      this._skipSelect = false;\n    }\n  }\n\n  onBlur(e)\n  {\n    if (!this._submitTimeout)\n    {\n      this._submitTimeout = setTimeout(() => {\n        this._submitTimeout = null;\n        if (this._skipBlur) return;\n\n        const submit = this._submit;\n        this._submit = this.props.submitOnBlur;\n        if (document.activeElement !== this.inputElement && submit)\n        {\n          const value = this.state.value;\n          if (this.props.onSubmit) this.props.onSubmit(value);\n\n          this.setState({prevValue: value});\n        }\n        else\n        {\n          this.setState((prev, props) => {\n            return {value: prev.prevValue};\n          });\n        }\n\n        if (this.props.onBlur) this.props.onBlur(e);\n      }, SUBMIT_DELAY);\n    }\n  }\n\n  onKeyDown(e)\n  {\n    if (e.key === SUBMIT_KEY)\n    {\n      if (e.shiftKey && this.multiLine) return;\n\n      this._submit = true;\n      this.inputElement.blur();\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    else if (e.key === CANCEL_KEY)\n    {\n      this.setState((prev, props) => {\n        return {value: prev.prevValue};\n      }, () => {\n        this._submit = false;\n        this.inputElement.blur();\n      });\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  onChange(e)\n  {\n    let value = e.target.value;\n    if (this.formatter)\n    {\n      value = this.formatter(value);\n    }\n\n    this.setState({value: value});\n  }\n\n  focus(select=true)\n  {\n    this._skipSelect = select;\n    this.inputElement.focus();\n  }\n\n  ignoreBlur(ignore)\n  {\n    const prev = this._skipBlur;\n    this._skipBlur = ignore;\n    return prev !== ignore;\n  }\n\n  appendValue(string, separator=\"\", format=true)\n  {\n    const value = this.state.value;\n    if (value && value.length + string.length > this.maxLength) return;\n\n    let result;\n    if (value && value.length > 0)\n    {\n      result = value + separator + string;\n    }\n    else\n    {\n      result = string;\n    }\n\n    if (format && this.formatter)\n    {\n      result = this.formatter(result);\n    }\n\n    this.setState((prev, props) => {\n      return {value: result};\n    });\n  }\n\n  resetValue(string)\n  {\n    this.setState({prevValue: string, value: string});\n  }\n\n  setValue(string, format=true)\n  {\n    let value = string;\n    if (format && this.formatter)\n    {\n      value = this.formatter(value);\n    }\n    this.setState({value: value});\n  }\n\n  getValue()\n  {\n    return this.state.value;\n  }\n\n  //Override\n  render()\n  {\n    const placeholder = this.placeholder;\n    const maxlength = this.maxLength;\n    const multiline = this.multiLine;\n    const disabled = this.props.disabled;\n\n    const value = this.state.value;\n\n    return (\n      <div id={this.props.id}\n        className={this.props.className}\n        style={this.props.style}>\n        {\n          multiline ?\n          <textarea ref={ref=>this.inputElement=ref}\n            type=\"text\" rows=\"1\" spellCheck=\"false\"\n            disabled={disabled}\n            placeholder={placeholder}\n            maxLength={maxlength}\n            value={value}\n            onChange={this.onChange}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            onKeyDown={this.onKeyDown}/>\n          :\n          <input ref={ref=>this.inputElement=ref}\n            type=\"text\" spellCheck=\"false\"\n            disabled={disabled}\n            placeholder={placeholder}\n            maxLength={maxlength}\n            value={value}\n            onChange={this.onChange}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            onKeyDown={this.onKeyDown}/>\n        }\n      </div>\n    );\n  }\n}\n\nexport default PatternInput;\n","import React from 'react';\nimport Style from './LabelEditorView.css';\n\nimport GraphElement from 'graph/GraphElement.js';\n\nimport PatternInput from 'system/patterninput/PatternInput.js';\n\nclass LabelEditorView extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.ref = null;\n    this.inputComponent = null;\n\n    this.state = {\n      open: false\n    };\n\n    this._target = null;\n    this._targetCallback = null;\n\n    this.onInputSubmit = this.onInputSubmit.bind(this);\n    this.onInputBlur = this.onInputBlur.bind(this);\n  }\n\n  openEditor(graphElement, defaultValue=null, onSubmit=null, onCancel=null)\n  {\n    if (!(graphElement instanceof GraphElement)) throw new Error(\"Can only open editor for GraphElements\");\n\n    this._target = graphElement;\n    this._targetOnSubmit = onSubmit;\n    this._targetOnCancel = onCancel;\n\n    const formatter = this.props.labeler.getLabelFormatter(this._target);\n    this.inputComponent.setFormatter(formatter);\n\n    this.setState({open: true}, () => {\n      if (defaultValue !== null)\n      {\n        this.inputComponent.resetValue(defaultValue);\n      }\n      this.inputComponent.focus();\n    });\n  }\n\n  closeEditor()\n  {\n    this._target = null;\n    this._targetOnSubmit = null;\n    this._targetOnCancel = null;\n\n    this.inputComponent.setFormatter(null);\n\n    this.setState({open: false});\n  }\n\n  isEditorOpen()\n  {\n    return this.state.open;\n  }\n\n  getTarget()\n  {\n    return this._target;\n  }\n\n  onInputSubmit(value)\n  {\n    if (this._targetOnSubmit)\n    {\n      this._targetOnSubmit(this._target, value);\n      //Don't handle cancel callbacks...\n      this._targetOnCancel = null;\n    }\n  }\n\n  onInputBlur(e)\n  {\n    if (this._targetOnCancel)\n    {\n      this._targetOnCancel(this._target);\n      //Don't handle submit callbacks...\n      this._targetOnSubmit = null;\n    }\n    this.closeEditor();\n  }\n\n  //Override\n  render()\n  {\n    const isEditorOpen = this.state.open;\n\n    const target = this._target;\n    const targetStyle = this.props.style || {};\n    const viewport = this.props.viewport;\n    const labeler = this.props.labeler;\n\n    if (target)\n    {\n      const center = target.getCenterPoint();\n      const element = viewport.getElement();\n      const parentClientRect = element.getBoundingClientRect();\n      const screenPos = transformViewToScreen(\n        element,\n        center.x + viewport.getOffsetX(),\n        center.y + viewport.getOffsetY()\n      );\n      const x = screenPos.x;\n      const y = screenPos.y;\n      const offsetX = -(this.ref.offsetWidth / 2) - parentClientRect.left;\n      const offsetY = -(this.ref.offsetHeight / 2) - parentClientRect.top;\n\n      targetStyle['top'] = (y + offsetY) + \"px\";\n      targetStyle['left'] = (x + offsetX) + \"px\";\n    }\n\n    return (\n      <div ref={ref=>this.ref=ref}\n        id={this.props.id}\n        className={Style.editor_container +\n          (isEditorOpen ? \" open \" : \"\") +\n          \" \" + this.props.className}\n        style={targetStyle}>\n        <PatternInput ref={ref=>this.inputComponent=ref}\n          submitOnBlur={this.props.saveOnExit}\n          onSubmit={this.onInputSubmit}\n          onBlur={this.onInputBlur}/>\n        <div className={Style.tray_container}>\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction transformViewToScreen(svg, x, y)\n{\n  const ctm = svg.getScreenCTM();\n  return {\n    x: (x * ctm.a) + ctm.e,\n    y: (y * ctm.d) + ctm.f\n  };\n}\n\nexport default LabelEditorView;\n","import React from 'react';\n\nimport LabelEditorView from './LabelEditorView.js';\nimport {RENDER_LAYER_WORKSPACE_OVERLAY} from 'manager/RenderManager.js';\n\nclass LabelEditorManager\n{\n  constructor(app)\n  {\n    this._app = app;\n\n    this._labelEditorComponent = null;\n    this._labelEditorRenderer = null;\n    this._labeler = null;\n  }\n\n  setLabelEditorRenderer(renderer)\n  {\n    this._labelEditorRenderer = renderer;\n    return this;\n  }\n\n  setLabeler(labeler)\n  {\n    this._labeler = labeler;\n    return this;\n  }\n\n  //DuckType(SessionListener)\n  onSessionStart(session)\n  {\n    const currentModule = session.getCurrentModule();\n    const viewport = session.getApp().getInputAdapter().getViewport();\n\n    const LabelEditorRenderer = this._labelEditorRenderer;\n    const labeler = this._labeler;\n    session.getApp().getRenderManager().addRenderer(RENDER_LAYER_WORKSPACE_OVERLAY, props => (\n      <LabelEditorView ref={ref=>this._labelEditorComponent=ref}\n        labeler={labeler}\n        viewport={viewport}\n        saveOnExit={true}>\n        {/* LabelEditor objects */\n          LabelEditorRenderer &&\n          <LabelEditorRenderer currentModule={currentModule} parent={this._labelEditorComponent}/>}\n      </LabelEditorView>\n    ));\n  }\n\n  //DuckType(SessionListener)\n  onSessionStop(session)\n  {\n    this._labeler = null;\n    this._labelEditorRenderer = null;\n    this._labelEditorComponent = null;\n  }\n\n  getLabelEditorComponent()\n  {\n    return this._labelEditorComponent;\n  }\n}\n\nexport default LabelEditorManager;\n","import InputController from 'modules/nodalgraph/controller/InputController.js';\nimport GraphController from 'modules/nodalgraph/controller/GraphController.js';\n\nimport SelectionBoxInputHandler from 'modules/nodalgraph/controller/SelectionBoxInputHandler.js';\nimport ViewportInputHandler from 'modules/nodalgraph/controller/ViewportInputHandler.js';\n\nimport LabelEditorManager from 'manager/labeleditor/LabelEditorManager.js';\n\nimport Notifications from 'system/notification/Notifications.js';\n\nclass NodalGraphInputManager\n{\n  constructor(currentModule, nodalGraph, graphLabeler, graphParser, labelEditorRenderer)\n  {\n    this._inputController = new InputController(currentModule, currentModule.getApp().getInputAdapter());\n    this._graphController = new GraphController(currentModule, nodalGraph, graphLabeler, graphParser);\n\n    this._labelEditorManager = new LabelEditorManager()\n      .setLabelEditorRenderer(labelEditorRenderer)\n      .setLabeler(graphLabeler);\n\n    currentModule.getApp().getInputAdapter()\n      .addInputHandler(this._inputController)\n      .addInputHandler(new SelectionBoxInputHandler(this._inputController, this._graphController, this._inputController.getSelectionBox()))\n      .addInputHandler(new ViewportInputHandler());\n  }\n\n  //Not yet implemented\n  setGraphLabeler(labeler)\n  {\n    this._graphLabeler = labeler;\n    return this;\n  }\n\n  //Not yet implemented\n  setGraphParser(parser)\n  {\n    this._graphParser = parser;\n    return this;\n  }\n\n  update(currentModule)\n  {\n    const inputController = this.getInputController();\n    const graphController = this.getGraphController();\n    inputController.update(currentModule);\n    graphController.update(currentModule);\n  }\n\n  //DuckType(SessionListener)\n  onSessionStart(session)\n  {\n    const currentModule = session.getCurrentModule();\n    const inputController = this.getInputController();\n    const graphController = this.getGraphController();\n    inputController.initialize(currentModule);\n    graphController.initialize(currentModule);\n\n    this._labelEditorManager.onSessionStart(session);\n\n    //Notify on create in delete mode\n    const tryCreateWhileTrash = () => {\n      if (this._inputController.isTrashMode())\n      {\n        Notifications.addMessage(I18N.toString(\"message.warning.cannotmodify\"), \"warning\", \"tryCreateWhileTrash\");\n      }\n    };\n    this._graphController.on(\"tryCreateWhileTrash\", tryCreateWhileTrash);\n  }\n\n  //DuckType(SessionListener)\n  onSessionStop(session)\n  {\n    this._labelEditorManager.onSessionStop(session);\n\n    const currentModule = session.getCurrentModule();\n    const inputController = this.getInputController();\n    const graphController = this.getGraphController();\n    graphController.destroy(currentModule);\n    inputController.destroy(currentModule);\n  }\n\n  getLabelEditorManager() { return this._labelEditorManager; }\n  getGraphParser() { return this._graphController.getGraphParser(); }\n  getGraphLabeler() { return this._graphController.getGraphLabeler(); }\n  getGraphController() { return this._graphController; }\n  getInputController() { return this._inputController; }\n}\n\nexport default NodalGraphInputManager;\n","import React from 'react';\n\nclass BoxRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const visible = this.props.visible;\n    const fromX = this.props.fromX || 0;\n    const fromY = this.props.fromY || 0;\n    const toX = this.props.toX || fromX + 1;\n    const toY = this.props.toY || fromY + 1;\n\n    const dx = toX - fromX;\n    const dy = toY - fromY;\n\n    return (\n      <g className=\"graph-selection-container\">\n      { visible &&\n        <rect className=\"graph-selection\"\n          x={dx < 0 ? toX : fromX}\n          y={dy < 0 ? toY : fromY}\n          width={dx < 0 ? -dx : dx}\n          height={dy < 0 ? -dy : dy}/> }\n      </g>\n    );\n  }\n}\n\nexport default BoxRenderer;\n","import React from 'react';\n\nconst CURSOR_RADIUS = 4;\nconst NODE_RADIUS = 16;\nconst EDGE_RADIUS = 12;\nconst ENDPOINT_RADIUS = 6;\nconst INITIAL_MARKER_OFFSET_X = -(NODE_RADIUS + (NODE_RADIUS / 2));\n\nconst HIGHLIGHT_RADIUS_OFFSET = 4;\nconst HIGHLIGHT_LINE_WIDTH = 3;\nconst HIGHLIGHT_LINE_ARRAY = [8, 6];\n\nclass HighlightRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const target = this.props.target;\n    const type = this.props.type;\n\n    let x = 0;\n    let y = 0;\n    let r = CURSOR_RADIUS;\n    switch(type)\n    {\n      case \"node\":\n        x = target.x || 0;\n        y = target.y || 0;\n        r = NODE_RADIUS;\n        break;\n      case \"edge\":\n        const center = target.getCenterPoint();\n        x = center.x || 0;\n        y = center.y || 0;\n        r = EDGE_RADIUS;\n        break;\n      case \"endpoint\":\n        const endpoint = target.getEndPoint();\n        x = endpoint.x || 0;\n        y = endpoint.y || 0;\n        r = ENDPOINT_RADIUS;\n        break;\n      case \"initial\":\n        x = target.x + INITIAL_MARKER_OFFSET_X;\n        y = target.y || 0;\n        r = EDGE_RADIUS;\n        break;\n    }\n\n    return (\n      <g className=\"graph-highlight-container\">\n        <circle className={\"graph-highlight \" + this.props.className}\n          cx={x} cy={y}\n          r={r + HIGHLIGHT_RADIUS_OFFSET}\n          strokeDashoffset={this.props.offset || 0}\n          strokeDasharray={HIGHLIGHT_LINE_ARRAY}\n          strokeWidth={HIGHLIGHT_LINE_WIDTH}\n          fill=\"none\"/>\n      </g>\n    );\n  }\n}\n\nexport default HighlightRenderer;\n","import React from 'react';\n\nimport BoxRenderer from './BoxRenderer.js';\nimport HighlightRenderer from './HighlightRenderer.js';\n\nclass SelectionBoxRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const currentModule = this.props.currentModule;\n\n    const graphController = currentModule.getGraphController();\n    const inputController = currentModule.getInputController();\n\n    const graph = graphController.getGraph();\n    const selectionBox = inputController.getSelectionBox();\n    const selectionBoundingBox = selectionBox.getSelectionBox();\n\n    return (\n      <g>\n        {/* Selected elements */}\n        { selectionBox &&\n          selectionBox.hasSelection() &&\n          selectionBox.getSelection(graph).map((e, i) =>\n            <HighlightRenderer key={e.getGraphElementID()}\n              className={inputController.isTrashMode() ?\n                \"highlight-error\" :\n                \"highlight-select\"}\n              target={e} type=\"node\"/>) }\n\n        {/* Selection box */}\n        { selectionBoundingBox &&\n          <BoxRenderer visible={selectionBoundingBox.visible}\n            fromX={selectionBoundingBox.fromX} fromY={selectionBoundingBox.fromY}\n            toX={selectionBoundingBox.toX} toY={selectionBoundingBox.toY}/> }\n      </g>\n    );\n  }\n}\n\nexport default SelectionBoxRenderer;\n","import React from 'react';\n\nimport SelectionBoxRenderer from './SelectionBoxRenderer.js';\nimport HighlightRenderer from './HighlightRenderer.js';\n\nclass GraphInputRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    //Inherits props from parent\n    const currentModule = this.props.currentModule;\n\n    const inputController = currentModule.getInputController();\n\n    const viewport = inputController.getInputAdapter().getViewport();\n    const picker = inputController.getPicker();\n    const selectionBox = inputController.getSelectionBox();\n\n    return (\n      <g>\n        <SelectionBoxRenderer currentModule={currentModule}/>\n\n        {/* Node test targets */}\n        { currentModule._tester &&\n          currentModule._tester.targets &&\n          currentModule._tester.targets.map((e, i) => {\n            return <HighlightRenderer key={e.getGraphElementID()}\n              className=\"highlight-test graph-gui\"\n              target={e} type=\"node\" offset=\"6\"/>;\n          })}\n\n        {/* Hover markers */}\n        { picker &&\n          picker.hasTarget() &&\n          !selectionBox.isTargetInSelection(picker.target) &&\n          <HighlightRenderer className={inputController.isTrashMode() ?\n            \"highlight-error\" :\n            \"highlight-select\"}\n            target={picker.target}\n            type={picker.targetType}/> }\n      </g>\n    );\n  }\n}\n\nexport default GraphInputRenderer;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M13,6V11H18V7.75L22.25,12L18,16.25V13H13V18H16.25L12,22.25L7.75,18H11V13H6V16.25L1.75,12L6,7.75V11H11V6H7.75L12,1.75L16.25,6H13Z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './ModeSelectTray.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport EditPencilIcon from 'experimental/iconset/EditPencilIcon.js';\nimport MoveIcon from 'experimental/iconset/MoveIcon.js';\n\nclass ModeSelectTray extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(newValue)\n  {\n    if (this.props.onChange)\n    {\n      this.props.onChange(newValue);\n    }\n  }\n\n  //Override\n  render()\n  {\n    const mode = this.props.mode || 0;\n    const onChange = this.props.onChange;\n\n    return (\n      <div id={this.props.id}\n        className={Style.tray_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <IconButton className={Style.tray_button +\n          (mode === 0 ? \" active \" : \"\")}\n          onClick={() => this.onChange(0)}\n          title={I18N.toString(\"cursor.actionmode\")}>\n          <EditPencilIcon/>\n        </IconButton>\n        <IconButton className={Style.tray_button +\n          (mode === 1 ? \" active \" : \"\")}\n          onClick={() => this.onChange(1)}\n          title={I18N.toString(\"cursor.movemode\")}>\n          <MoveIcon/>\n        </IconButton>\n      </div>\n    );\n  }\n}\nexport default ModeSelectTray;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 26 26\">\n        <path d=\"M 11.5 -0.03125 C 9.542969 -0.03125 7.96875 1.59375 7.96875 3.5625 L 7.96875 4 L 4 4 C 3.449219 4 3 4.449219 3 5 L 3 6 L 2 6 L 2 8 L 4 8 L 4 23 C 4 24.644531 5.355469 26 7 26 L 19 26 C 20.644531 26 22 24.644531 22 23 L 22 8 L 24 8 L 24 6 L 23 6 L 23 5 C 23 4.449219 22.550781 4 22 4 L 18.03125 4 L 18.03125 3.5625 C 18.03125 1.59375 16.457031 -0.03125 14.5 -0.03125 Z M 11.5 2.03125 L 14.5 2.03125 C 15.304688 2.03125 15.96875 2.6875 15.96875 3.5625 L 15.96875 4 L 10.03125 4 L 10.03125 3.5625 C 10.03125 2.6875 10.695313 2.03125 11.5 2.03125 Z M 6 8 L 11.125 8 C 11.25 8.011719 11.371094 8.03125 11.5 8.03125 L 14.5 8.03125 C 14.628906 8.03125 14.75 8.011719 14.875 8 L 20 8 L 20 23 C 20 23.5625 19.5625 24 19 24 L 7 24 C 6.4375 24 6 23.5625 6 23 Z M 8 10 L 8 22 L 10 22 L 10 10 Z M 12 10 L 12 22 L 14 22 L 14 10 Z M 16 10 L 16 22 L 18 22 L 18 10 Z \"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './TrashCanWidget.css';\n\nimport { userClearGraph } from 'experimental/UserUtil.js';\n\nimport TrashCanDetailedIcon from 'experimental/iconset/TrashCanDetailedIcon.js';\n\nconst DOUBLE_TAP_TIME = 250;\n\nclass TrashCanWidget extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.ref = null;\n\n    this.state = {\n      forceActive: false\n    };\n\n    this._doubleTapTimeout = null;\n\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseLeave = this.onMouseLeave.bind(this);\n    this.onClick = this.onClick.bind(this);\n\n    //HACK: This is kinda a hack to lose trash mode focus...\n    this.onAnyMouseDownNotConsumed = this.onAnyMouseDownNotConsumed.bind(this);\n  }\n\n  onMouseEnter(e)\n  {\n    if (this.state.forceActive) return;\n\n    this.props.inputController.setTrashMode(true);\n  }\n\n  onMouseLeave(e)\n  {\n    if (this.state.forceActive) return;\n\n    this.props.inputController.setTrashMode(false);\n  }\n\n  onClick(e)\n  {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (this._doubleTapTimeout)\n    {\n      //This is a double tap!\n      clearTimeout(this._doubleTapTimeout);\n      this._doubleTapTimeout = null;\n      this.setState({forceActive: false});\n\n      userClearGraph(this.props.app, true);\n      this.props.inputController.setTrashMode(false);\n    }\n    else\n    {\n      //This is a single tap!\n      this.setState((prev, props) => {\n        const result = !prev.forceActive;\n        props.inputController.setTrashMode(result);\n        this._doubleTapTimeout = setTimeout(() => {\n          this._doubleTapTimeout = null;\n        }, DOUBLE_TAP_TIME);\n\n        if (result)\n        {\n          document.documentElement.addEventListener('mousedown', this.onAnyMouseDownNotConsumed);\n        }\n\n        return {\n          forceActive: result\n        };\n      });\n    }\n  }\n\n  onAnyMouseDownNotConsumed(e)\n  {\n    if (this.state.forceActive && this.ref !== e.target)\n    {\n      e.stopPropagation();\n      e.preventDefault();\n\n      document.documentElement.removeEventListener('mousedown', this.onAnyMouseDownNotConsumed);\n\n      this.props.inputController.setTrashMode(false);\n      this.setState({forceActive: false});\n    }\n  }\n\n  //Override\n  render()\n  {\n    const inputController = this.props.inputController;\n    const graphController = this.props.graphController;\n    const inputAdapter = inputController.getInputAdapter();\n\n    const active = inputController.isTrashMode();\n    const hide = !active && (graphController.getGraph().isEmpty() || (inputAdapter.isUsingTouch() && inputAdapter.isDragging()));\n\n    return (\n      <div ref={ref=>this.ref=ref} id={this.props.id}\n        className={Style.trash_container +\n          (active ? \" active \" : \"\") +\n          (hide ? \" hide \" : \"\") +\n          \" \" + this.props.className}\n        style={this.props.style}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n        onClick={this.onClick}>\n        <TrashCanDetailedIcon/>\n      </div>\n    );\n  }\n}\n\nexport default TrashCanWidget;\n","import React from 'react';\n\nconst RETURN_FOCUS_DELAY = 50;\n\nclass PatternInputButton extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.ref = null;\n\n    this._timeout = null;\n\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onAnyMouseUp = this.onAnyMouseUp.bind(this);\n  }\n\n  onMouseDown(e)\n  {\n    const parent = this.props.parent;\n    if (parent.ignoreBlur(true))\n    {\n      document.addEventListener(\"mouseup\", this.onAnyMouseUp);\n    }\n\n    if (this.props.onClick)\n    {\n      this.props.onClick(e, this);\n    }\n  }\n\n  onAnyMouseUp()\n  {\n    document.removeEventListener(\"mouseup\", this.onAnyMouseUp);\n\n    if (this._timeout) clearTimeout(this._timeout);\n    this._timeout = setTimeout(() => {\n      this._timeout = null;\n\n      const parent = this.props.parent;\n      parent.ignoreBlur(false);\n\n      if (document.activeElement === this.ref)\n      {\n        parent.focus(false);\n      }\n      else if (document.activeElement !== this.props.parent.inputElement)\n      {\n        parent.onBlur();\n      }\n    }, RETURN_FOCUS_DELAY);\n  }\n\n  //Override\n  render()\n  {\n    return (\n      <button ref={ref=>this.ref=ref}\n        id={this.props.id}\n        className={this.props.className}\n        style={this.props.style}\n        title={this.props.title}\n        onMouseDown={this.onMouseDown}>\n        {this.props.title}\n      </button>\n    );\n  }\n}\n\nexport default PatternInputButton;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M12 7.77L18.39 18H5.61L12 7.77M12 4L2 20h20L12 4z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './TapeWidget.css';\n\nimport DownArrowIcon from 'experimental/iconset/DownArrowIcon.js';\n\nconst TAPE_INFINITE_LEFT = true;\nconst TAPE_INFINITE_RIGHT = true;\n\nclass TapeWidget extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.onTapeStepBackward = this.onTapeStepBackward.bind(this);\n    this.onTapeStepForward = this.onTapeStepForward.bind(this);\n    this.onTapeFinish = this.onTapeFinish.bind(this);\n    this.onTapeReset = this.onTapeReset.bind(this);\n    this.onTapeSkipForward = this.onTapeSkipForward.bind(this);\n    this.onTapeSkipBackward = this.onTapeSkipBackward.bind(this);\n    this.onTapeStop = this.onTapeStop.bind(this);\n  }\n\n  onTapeStepBackward(e)\n  {\n    const tapeContext = this.props.value;\n    tapeContext.stepBackward();\n  }\n\n  onTapeStepForward(e)\n  {\n    const tapeContext = this.props.value;\n    tapeContext.stepForward();\n  }\n\n  onTapeSkipForward(e)\n  {\n  }\n\n  onTapeSkipBackward(e)\n  {\n  }\n\n  onTapeReset(e)\n  {\n    const tapeContext = this.props.value;\n    tapeContext.reset();\n  }\n\n  onTapeFinish(e)\n  {\n    const tapeContext = this.props.value;\n    tapeContext.finish();\n  }\n\n  onTapeStop(e)\n  {\n    const tapeContext = this.props.value;\n    tapeContext.stop();\n  }\n\n  //Override\n  render()\n  {\n    const showTransitionStates = true;\n    const tapeContext = this.props.value;\n    const tapeIndex = tapeContext ? tapeContext.getCurrentTapeIndex() : -1;\n\n    if (!tapeContext) return null;\n\n    return (\n      <div id={this.props.id}\n        className={Style.tape_container +\n        \" \" + this.props.className}\n        style={this.props.style}>\n\n        <div className={Style.tape_control_tray}>\n          <button onClick={this.onTapeStepBackward}>BACK</button>\n          <button onClick={this.onTapeStepForward}>STEP</button>\n          <button onClick={this.onTapeReset}>RESET</button>\n          <button onClick={this.onTapeFinish}>TO END</button>\n        </div>\n\n        <div className={Style.tape_control_tray}>\n          <button onClick={this.onTapeSkipForward}>SKIP TO NEXT</button>\n          <button onClick={this.onTapeSkipBackward}>SKIP TO PREV</button>\n          <button onClick={this.onTapeStop}>STOP</button>\n        </div>\n\n        <div className={\"tape-row\"}>\n\n          {TAPE_INFINITE_LEFT && tapeContext.isTapeLeftInfinite() &&\n            <div className=\"tape-row-entry infinite\">\n              <span className=\"tape-row-states\"></span>\n              <label className=\"tape-row-symbol\">{\"...\"}</label>\n            </div>}\n\n          <DownArrowIcon\n            className=\"tape-pointer\"\n            style={{opacity: tapeIndex < 0 ? 0 : 1, left: tapeIndex + \"em\"}}/>\n\n          {tapeContext.getTapeInput().map((e, i) => {\n            let active = false;\n            let activeRead = false;\n            active = tapeIndex === i;\n            activeRead = tapeIndex === i - 1;\n            /*\n            const currentIndex = Math.floor(tapeIndex / 2);\n            if (currentIndex === i)\n            {\n              //It's the current index...\n              active = tapeIndex % 2 === 1;\n              activeRead = tapeIndex % 2 === 0;\n            }\n            else if (currentIndex === i + 1)\n            {\n              //It's the previous index...\n              active = tapeIndex % 2 === 0;\n            }\n            */\n\n            const sourceStates = tapeContext.getTapeSourceStatesByIndex(i);\n            const disabled = sourceStates === null;\n            return (\n              <div key={e + \":\" + i} className={\"tape-row-entry\" +\n                (active ? \" active \" : \"\") +\n                (activeRead ? \" active-read \" : \"\") +\n                (disabled ? \" disabled \" : \"\")}\n                onClick={(e) => (!disabled ? tapeContext.setCurrentTapeIndex(i) : null)}>\n                {showTransitionStates &&\n                  sourceStates &&\n                  <span className=\"tape-row-states\">\n                    {sourceStates.map(sourceState => {\n                      return (\n                        <label key={sourceState.getGraphElementID()}>\n                          {sourceState.getNodeLabel()}\n                        </label>\n                      );\n                    })}\n                  </span>}\n                <label className=\"tape-row-symbol\">\n                  {e}\n                </label>\n              </div>\n            );\n          })}\n\n          {TAPE_INFINITE_RIGHT && tapeContext.isTapeRightInfinite() &&\n            <div className=\"tape-row-entry infinite\">\n              <span className=\"tape-row-states\"></span>\n              <label className=\"tape-row-symbol\">{\"...\"}</label>\n            </div>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TapeWidget;\n"],"sourceRoot":""}