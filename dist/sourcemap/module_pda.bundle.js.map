{"version":3,"sources":["webpack:///./src/app/graph2/element/GraphNode.js","webpack:///./src/app/graph2/element/GraphEdge.js","webpack:///./src/app/util/input/AbstractInputHandler.js","webpack:///./src/app/graph2/renderer/NodeRenderer.js","webpack:///./src/app/graph2/element/GraphElement.js","webpack:///./src/app/graph2/renderer/EdgeRenderer.js","webpack:///./src/app/graph2/NodeGraph.js","webpack:///./src/app/graph2/element/QuadraticEdge.js","webpack:///./src/app/graph2/inputhandler/GraphNodeInputHandler.js","webpack:///./src/app/graph2/inputhandler/GraphEdgeInputHandler.js","webpack:///./src/app/graph2/renderer/StartMarkerRenderer.js","webpack:///./src/app/components/iconset/RunningManIcon.js","webpack:///./src/app/graph2/inputhandler/IndexedGraphStartMarkerInputHandler.js","webpack:///./src/app/modules/fsa2/GraphLayout.js","webpack:///./src/app/session/manager/undo/AbstractEventHandler.js","webpack:///./src/app/components/iconset/ZoomInIcon.js","webpack:///./src/app/components/iconset/ZoomOutIcon.js","webpack:///./src/app/graph2/components/widgets/ZoomWidget.js","webpack:///./src/app/components/iconset/PinpointIcon.js","webpack:///./src/app/graph2/components/widgets/FocusCenterWidget.js","webpack:///./src/app/graph2/components/layers/ViewportNavigationLayer.js","webpack:///./src/app/components/iconset/flat/JSONFileIcon.js","webpack:///./src/app/components/iconset/BoxAddIcon.js","webpack:///./src/app/util/file/import/Importer.js","webpack:///./src/app/session/SessionImporter.js","webpack:///./src/app/experimental/UserUtil.js","webpack:///./src/app/graph2/IndexedNodeGraph.js","webpack:///./src/app/util/Downloader.js","webpack:///./src/app/components/iconset/PageContentIcon.js","webpack:///./src/app/components/iconset/AddIcon.js","webpack:///./src/app/components/iconset/SubtractIcon.js","webpack:///./src/app/components/iconset/CheckCircleIcon.js","webpack:///./src/app/components/iconset/CrossCircleIcon.js","webpack:///./src/app/components/iconset/PendingIcon.js","webpack:///./src/app/util/input/ViewportAdapter.js","webpack:///./src/app/util/input/InputContext.js","webpack:///./src/app/util/input/InputPointer.js","webpack:///./src/app/util/input/InputAdapter.js","webpack:///./src/app/util/input/components/ViewportComponent.js","webpack:///./src/app/graph2/controller/InputController.js","webpack:///./src/app/graph2/inputhandler/ViewportInputHandler.js","webpack:///./src/app/graph2/components/GraphView.js","webpack:///./src/app/graph2/renderer/BoxRenderer.js","webpack:///./src/app/graph2/renderer/GraphHighlightRenderer.js","webpack:///./src/app/graph2/components/layers/GraphHighlightLayer.js","webpack:///./src/app/graph2/controller/SelectionBox.js","webpack:///./src/app/graph2/inputhandler/SelectionBoxInputHandler.js","webpack:///./src/app/graph2/components/layers/SelectionBoxLayer.js","webpack:///./src/app/deprecated/icons/flat/PNGIcon.js","webpack:///./src/app/deprecated/icons/flat/JPGIcon.js","webpack:///./src/app/deprecated/icons/flat/SVGIcon.js","webpack:///./src/app/components/iconset/flat/PNGFileIcon.js","webpack:///./src/app/modules/nodegraph/filehandlers/NodalGraphImageExporter.js","webpack:///./src/app/components/iconset/TrashCanDetailedIcon.js","webpack:///./src/app/graph2/components/widgets/TrashCanWidget.js","webpack:///./src/app/components/iconset/MoveIcon.js","webpack:///./src/app/graph2/components/widgets/ModeTrayWidget.js","webpack:///./src/app/graph2/components/layers/ViewportEditLayer.js","webpack:///./src/app/graph2/controller/LabelFormatter.js","webpack:///./src/app/graph2/controller/GraphChangeHandler.js","webpack:///./src/app/graph2/controller/GraphController.js","webpack:///./src/app/graph2/renderer/GraphEdgeRenderer.js","webpack:///./src/app/graph2/components/layers/GraphEdgeLayer.js","webpack:///./src/app/graph2/renderer/GraphNodeRenderer.js","webpack:///./src/app/graph2/components/layers/GraphNodeLayer.js","webpack:///./src/app/graph2/renderer/StartNodeMarkerRenderer.js","webpack:///./src/app/graph2/components/layers/IndexedGraphStartMarkerLayer.js","webpack:///./src/app/graph2/components/widgets/pattern/PatternInput.js","webpack:///./src/app/graph2/components/widgets/LabelEditorWidget.js","webpack:///./src/app/graph2/util/UnreachableNodes.js","webpack:///./src/app/graph2/util/NodeGraphUtils.js","webpack:///./src/app/graph2/AbstractGraphLabeler.js","webpack:///./src/app/modules/abstract/AbstractMachineController.js","webpack:///./src/app/util/Eventable.js","webpack:///./src/app/modules/nodegraph/SafeGraphEventHandler.js","webpack:///./src/app/experimental/panels/PanelDivider.js","webpack:///./src/app/components/iconset/TriangleIcon.js","webpack:///./src/app/experimental/panels/PanelCheckbox.js","webpack:///./src/app/graph2/components/widgets/pattern/PatternInputButton.js","webpack:///./src/app/components/iconset/DownArrowIcon.js","webpack:///./src/app/experimental/MachineChangeHandler.js","webpack:///./src/app/modules/abstract/AbstractMachineBuilder.js","webpack:///./src/app/modules/pda/graph/element/PDANode.js","webpack:///./src/app/modules/pda/graph/element/PDAEdge.js","webpack:///./src/app/modules/pda/graph/PDAGraph.js","webpack:///./src/app/modules/pda/graph/PDAGraphLabeler.js","webpack:///./src/app/modules/pda/graph/PDAGraphController.js","webpack:///./src/app/modules/pda/machine/PDA.js","webpack:///./src/app/modules/pda/machine/PDABuilder.js","webpack:///./src/app/modules/pda/machine/MachineController.js","webpack:///./src/app/modules/pda/machine/util/SolvePDA.js","webpack:///./src/app/modules/pda/tester/TapeContext.js","webpack:///./src/app/modules/pda/tester/StringTester.js","webpack:///./src/app/modules/pda/components/notifications/StateNotificationLayout.js","webpack:///./src/app/modules/pda/components/notifications/TransitionNotificationLayout.js","webpack:///./src/app/modules/pda/components/notifications/StateUnreachableNotificationLayout.js","webpack:///./src/app/modules/pda/components/notifications/PDANotifications.js","webpack:///./src/app/modules/pda/PDAErrorChecker.js","webpack:///./src/app/modules/pda/PDAGraphParser.js","webpack:///./src/app/modules/pda/filehandlers/PDAImporter.js","webpack:///./src/app/modules/pda/filehandlers/PDAExporter.js","webpack:///./src/app/modules/pda/components/panels/overview/states/StateListElement.js","webpack:///./src/app/modules/pda/components/panels/overview/states/StateListView.js","webpack:///./src/app/modules/pda/components/panels/overview/alphabet/AlphabetListElement.js","webpack:///./src/app/modules/pda/components/panels/overview/alphabet/AlphabetListView.js","webpack:///./src/app/modules/pda/components/panels/overview/stackalphabet/StackAlphabetListElement.js","webpack:///./src/app/modules/pda/components/panels/overview/stackalphabet/StackAlphabetListView.js","webpack:///./src/app/modules/pda/components/panels/overview/AutoStateLabelView.js","webpack:///./src/app/modules/pda/components/panels/overview/OverviewPanel.js","webpack:///./src/app/modules/pda/components/panels/testing/TestItem.js","webpack:///./src/app/modules/pda/components/panels/testing/TestListView.js","webpack:///./src/app/modules/pda/components/panels/testing/TestingPanel.js","webpack:///./src/app/modules/pda/components/panels/analysis/AnalysisPanel.js","webpack:///./src/app/modules/pda/graph/renderer/PDANodeRenderer.js","webpack:///./src/app/modules/pda/graph/inputhandler/PDANodeInputHandler.js","webpack:///./src/app/modules/pda/graph/renderer/PDAEdgeRenderer.js","webpack:///./src/app/modules/pda/components/layers/PDAGraphLayer.js","webpack:///./src/app/modules/pda/components/widgets/PDALabelEditorRenderer.js","webpack:///./src/app/modules/pda/components/layers/PDAGraphOverlayLayer.js","webpack:///./src/app/modules/pda/components/widgets/TapeWidget.js","webpack:///./src/app/modules/pda/components/layers/PDATapeGraphOverlayLayer.js","webpack:///./src/app/modules/pda/PDAModule.js"],"names":["GraphNode","id","_this","x","arguments","length","undefined","y","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","_label","GraphElement","dst","label","usePosition","_get","prototype","Math","floor","GraphEdge","from","to","_from","_to","node","Error","HALFPI","PI","result","isPlaceholder","dy","dx","atan2","halfPlaceholderLength","getPlaceholderLength","placeholderLength","getNodeSize","src","getHashString","AbstractInputHandler","pointer","zoomValue","prevValue","EVENT_SOURCE_NODE","DefaultNodeShapeRenderer","props","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","Fragment","cx","position","cy","r","radius","fill","color","stroke","outline","onMouseOver","onMouseOut","cursor","pointerEvents","DefaultLabelRenderer","style","userSelect","fontSize","concat","min","max","textAnchor","NodeRenderer","React","Component","NodeShapeRenderer","NodeLabelRenderer","e","target","type","elementID","_id","SIXTH_PI","HALF_PI","DIRECTED_FORWARD","EVENT_SOURCE_FORWARD_ENDPOINT","EVENT_SOURCE_EDGE","EVENT_SOURCE_LABEL","DefaultEndpointRenderer","d","sin","angle","cos","transform","direction","labels","map","str","i","key","reverse","alignmentBaseline","index","EdgeRenderer","fromAngle","toAngle","directed","ForwardEndpointRenderer","forwardEndpointRenderer","endpointRenderer","BackwardEndpointRenderer","backwardEndpointRenderer","EdgeLabelRenderer","labelRenderer","fromPoint","toPoint","centerPoint","center","reverseLabel","quadLine","dftx","dfty","dfcx","dfcy","ftrad","fcrad","abs","pathData","strokeWidth","split","NodeGraph","nodeClass","edgeClass","_nodeClass","_edgeClass","_nodeMapping","Map","_edgeMapping","clearEdges","clearNodes","size","minX","minY","maxX","maxY","width","height","minNX","Number","MAX_VALUE","minNY","maxNX","MIN_VALUE","maxNY","maxNodeSize","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","values","Symbol","iterator","next","done","value","err","return","minEX","minEY","maxEX","maxEY","startPoint","endPoint","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","edge","getStartPoint","getEndPoint","getCenterPoint","sx","sy","ex","ey","string","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","stringHash","addNode","guid","getGraphElementID","setGraphElementID","set","has","delete","nullSourceEdges","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","getEdges","getEdgeFrom","push","getEdgeTo","setEdgeTo","_i","deleteEdge","clear","get","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","getNodes","getNodeLabel","Array","addEdge","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","getEdgeLabel","QuadraticEdge","_quad","radians","coords","prevNode","setQuadraticByCoords","fromx","fromy","midpointx","midpointy","angleOffset","sqrt","outrad","inrad","maxdr","getDirectionalVector","isQuadratic","getQuadraticAsCoords","px","py","nodeSize","getMidPoint","qcoords","qx","qy","isSelfLoop","GRAPH_EVENT_NODE_DELETE","GRAPH_EVENT_NODE_DELETE_ALL","GRAPH_EVENT_NODE_EDIT_WHILE_DELETE","GraphNodeInputHandler","inputController","graphController","_inputController","_graphController","_cachedPosition","currentTargetType","getCurrentTargetType","isTrashMode","currentTargetSource","getCurrentTargetSource","getGraph","deleteNode","emitGraphEvent","isMoveMode","getInputAdapter","openLabelEditor","hasChanged","onInputEvent","hasActiveTarget","labelFormatter","getLabelFormatter","createNode","setNodeLabel","getDefaultNodeLabel","selectionBox","getSelectionBox","hasSelection","isTargetInSelection","clearSelection","bindActiveTarget","targetSource","getActiveTargetSource","getSelection","moveNodeTo","unbindActiveTarget","graph","lerp","other","diameter","nextDX","nextDY","GRAPH_EVENT_EDGE_DELETE","GRAPH_EVENT_EDGE_EDIT_WHILE_DELETE","GraphEdgeInputHandler","_cachedEdgeQuads","_cachedEdgeTo","_cachedPointer","_newEdge","_shouldDeleteEdgePlaceholder","_shouldDeleteEdgeWithEmptyLabel","flag","_this2","targetEdge","createEdge","setNodeEventsOnly","getQuadraticRadians","getQuadraticLength","setQuadraticRadians","setQuadraticLength","targetType","getActiveTargetType","handleDragMoveForEndpoint","getImmediateTargetType","immediateTargetSource","getImmediateTargetSource","_this3","isNewEdge","edgeTo","setEdgeLabel","getDefaultEdgeLabel","EVENT_SOURCE_START_MARKER","StartMarkerRenderer","offset","diameterX","RunningManIcon","PureComponent","className","xmlns","viewBox","GRAPH_EVENT_START_MARKER_CHANGE","GraphStartMarkerInputHandler","_ghostMarker","_cachedMarkerTarget","setStartNode","GraphLayout","reachableNode","reachable","startNode","getStartNode","includes","getReachableState","unreachableNode","filter","numOfReachable","numOfUnreachable","numOfNode","maxNum","currentStep","degree","degree_re","degree_un","AbstractEventHandler","undoManager","ZoomInIcon","react_default","ZoomOutIcon","ZoomOutIcon_classCallCheck","ZoomOutIcon_possibleConstructorReturn","ZoomOutIcon_getPrototypeOf","ZoomWidget","ZoomWidget_classCallCheck","ZoomWidget_getPrototypeOf","onZoomIn","bind","ZoomWidget_assertThisInitialized","onZoomOut","viewportAdapter","viewScale","getScale","addScale","toFixed","Style","zoom_container","IconButton","zoom_button","title","onClick","iconset_ZoomInIcon","iconset_ZoomOutIcon","zoom_label","PinpointIcon","PinpointIcon_classCallCheck","PinpointIcon_possibleConstructorReturn","PinpointIcon_getPrototypeOf","FocusCenterWidget","FocusCenterWidget_classCallCheck","FocusCenterWidget_getPrototypeOf","FocusCenterWidget_assertThisInitialized","setOffset","center_focus_button","disabled","getOffsetX","getOffsetY","iconset_PinpointIcon","ViewportNavigationLayer","ViewportNavigationLayer_classCallCheck","ViewportNavigationLayer_possibleConstructorReturn","ViewportNavigationLayer_getPrototypeOf","navbar_container","components_widgets_ZoomWidget","navbar_widget_container","components_widgets_FocusCenterWidget","navbar_widget","children","JSONFileIcon","points","BoxAddIcon","Importer","fileName","fileType","fileData","Promise","resolve","SessionImporter","app","SessionImporter_classCallCheck","_app","session","getApp","getUndoManager","captureEvent","sessionData","projectName","getSession","currentModule","getCurrentModule","onParseSession","onPreImportSession","onImportSession","substring","setProjectName","onPostImportSession","userClearGraph","graphOnly","callback","window","confirm","I18N","toString","getGraphController","__webpack_require__","__webpack_exports__","IndexedNodeGraph","_nodes","indexOf","prev","splice","downloadText","filename","textData","downloadURL","encodeURIComponent","url","element","document","headerIndex","setAttribute","display","body","appendChild","click","removeChild","PageContentIcon","AddIcon","SubtractIcon","CheckCircleIcon","CrossCircleIcon","PendingIcon","ViewportAdapter","_element","_offsetX","_offsetY","_nextOffsetX","_nextOffsetY","_offsetDamping","_scaleFactor","_minScale","_maxScale","scale","damping","clientX","clientY","ctm","getScreenCTM","f","dscale","InputContext","InputContext_classCallCheck","_inputHandlers","inputHandler","priority","eventName","_len","eventArgs","_key","handlerEventCallback","apply","InputPointer","inputAdapter","InputPointer_classCallCheck","_inputAdapter","_viewportAdapter","_active","_x","_y","_inputpos","pos","LONG_TAP_TICKS","DOUBLE_TAP_TICKS","SCROLL_SENSITIVITY","CURSOR_RADIUS_SQU","CURSOR_RADIUS","DRAGGING_BUFFER_SQU","DRAGGING_BUFFER","InputAdapter","InputAdapter_classCallCheck","_contexts","_activeDragHandler","_cursor","_mousemove","_mouseup","_touchmove","_touchend","_timer","_pointer","_dragging","_altinput","_holdInputDelay","_dblInputDelay","_scrollSensitivity","_minTapRadius","_draggingRadiusSqu","_prevEmptyInput","_prevEmptyTime","_prevEmptyX","_prevEmptyY","onContextMenu","_assertThisInitialized","onMouseDown","onMouseMove","onTouchStart","onWheel","onMouseDownThenMove","onMouseDownThenUp","onTouchStartThenMove","onTouchStartThenEnd","onDelayedInputDown","context","unshift","shift","SVGElement","setElement","addEventListener","onTouchMove","removeEventListener","update","_get2","handleEvent","stopPropagation","preventDefault","activeElement","blur","focus","button","ctrlKey","onInputDown","mouse","transformScreenToView","setPosition","cancelInputEvent","onInputMove","onInputUp","changedTouches","touch","deltaY","setScale","beginInput","setTimeout","onDragMove","getDistanceSquToInitial","inputEventPosition","getInputEventPosition","timer","clearTimeout","onDragStop","dist","dt","Date","now","endInput","isActive","SMOOTH_OFFSET_DAMPING","MIN_SCALE","MAX_SCALE","ViewportComponent","ViewportComponent_classCallCheck","ViewportComponent_possibleConstructorReturn","ViewportComponent_getPrototypeOf","_ref","createRef","setMinScale","setMaxScale","setOffsetDamping","addInputHandler","initialize","current","destroy","viewport","baseViewSize","viewSize","halfViewSize","getViewportAdapter","getSVGViewBoxString","getSVGTransformString","ref","viewport_component","DEFAULT_MOVE_MODE_FIRST","InputController","InputController_classCallCheck","_trashMode","_nodeOnly","_moveModeFirst","_handlingInput","_target","source","_activeTarget","input","_immediateTarget","_selectionBox","updateCurrentTarget","data","pointerEvent","isAltInput","ViewportInputHandler","ViewportInputHandler_classCallCheck","ViewportInputHandler_possibleConstructorReturn","ViewportInputHandler_getPrototypeOf","hasCurrentTarget","addOffset","GraphView","GraphView_classCallCheck","GraphView_possibleConstructorReturn","GraphView_getPrototypeOf","_inputContext","_viewportComponent","_viewportInputHandler","inputContext","bindContext","clearInputHandlers","unbindContext","renderGraph","renderOverlay","input_components_ViewportComponent","BoxRenderer","visible","fromX","fromY","toX","toY","fillOpacity","HIGHLIGHT_LINE_ARRAY","GraphHighlightRenderer","GraphHighlightRenderer_classCallCheck","GraphHighlightRenderer_possibleConstructorReturn","GraphHighlightRenderer_getPrototypeOf","strokeDashoffset","strokeDasharray","GraphHighlightLayer","GraphHighlightLayer_classCallCheck","GraphHighlightLayer_possibleConstructorReturn","GraphHighlightLayer_getPrototypeOf","highlights","nodes","renderer_GraphHighlightRenderer","edges","SelectionBox","SelectionBox_classCallCheck","_boundingBox","targets","box","mx","my","lx","ly","x1","y1","x2","y2","getNodesWithin","SelectionBoxInputHandler","SelectionBoxInputHandler_classCallCheck","SelectionBoxInputHandler_possibleConstructorReturn","SelectionBoxInputHandler_getPrototypeOf","beginSelection","isVisible","updateSelection","endSelection","SelectionBoxLayer","SelectionBoxLayer_classCallCheck","SelectionBoxLayer_possibleConstructorReturn","SelectionBoxLayer_getPrototypeOf","_selectionBoxInputHandler","setSelectionBox","inputPriority","removeInputHandler","selectionBoundingBox","getBoundingBox","layers_GraphHighlightLayer","renderer_BoxRenderer","PNGIcon","JPGIcon","JPGIcon_classCallCheck","JPGIcon_possibleConstructorReturn","JPGIcon_getPrototypeOf","SVGIcon","SVGIcon_classCallCheck","SVGIcon_possibleConstructorReturn","SVGIcon_getPrototypeOf","PNGFileIcon","PNGFileIcon_classCallCheck","PNGFileIcon_possibleConstructorReturn","PNGFileIcon_getPrototypeOf","IMAGE_TYPE_PNG","NodalGraphImageExporter","imageType","NodalGraphImageExporter_classCallCheck","NodalGraphImageExporter_possibleConstructorReturn","NodalGraphImageExporter_getPrototypeOf","_imageType","SessionExporter","exportType","getProjectName","svgElement","getGraphView","getViewportComponent","getSVGElement","workspaceDim","baseVal","svg","processSVGForExport","fileExt","name","image-type","themeManager","attributeValue","startIndex","stopIndex","getStyleByName","getValue","rgb","ColorHelper","offsetX","offsetY","bounds","getBoundingRect","w","EXPORT_PADDING_X","h","EXPORT_PADDING_Y","clone","cloneNode","getThemeManager","getElementsByTagName","strokeValue","getAttribute","strokeResult","processColorAttribute","fillValue","fillResult","uiElements","getElementsByClassName","remove","BWIcon","IMAGE_EXPORTERS","registerImageExporters","exportManager","exporter","registerExporter","getImageType","TrashCanDetailedIcon","TrashCanWidget","TrashCanWidget_classCallCheck","TrashCanWidget_getPrototypeOf","_buttonElement","state","active","forceActive","_doubleTapTimeout","onMouseEnter","TrashCanWidget_assertThisInitialized","onMouseLeave","onAnyMouseDownNotConsumed","setState","onChange","_this4","onClear","documentElement","_this5","hide","refButton","trash_container","iconset_TrashCanDetailedIcon","MoveIcon","MoveIcon_classCallCheck","MoveIcon_possibleConstructorReturn","MoveIcon_getPrototypeOf","ModeTrayWidget","ModeTrayWidget_classCallCheck","ModeTrayWidget_possibleConstructorReturn","ModeTrayWidget_getPrototypeOf","mode","tray_container","tray_button","EditPencilIcon","iconset_MoveIcon","ViewportEditLayer","ViewportEditLayer_classCallCheck","ViewportEditLayer_getPrototypeOf","onTrashChange","ViewportEditLayer_assertThisInitialized","onTrashClear","onModeChange","setTrashMode","getDrawerComponent","setViewportColor","clearGraph","setMoveModeFirst","moveMode","isHandlingInput","isMoveModeFirst","view_container","components_widgets_TrashCanWidget","view_widget","bottom","right","isEmpty","isUsingTouch","isDragging","components_widgets_ModeTrayWidget","left","LabelFormatter","nextLabel","nextNodeLabel","nextEdgeLabel","DEFAULT_LABEL_FORMATTER","DEFAULT_REFRESH_TICKS","GraphChangeHandler","refreshTicks","GraphChangeHandler_classCallCheck","_cachedGraphHash","_refreshTicks","_elapsedTicks","Infinity","_listeners","listener","graphHash","getHashCode","GraphController","GraphController_classCallCheck","_graph","_graphChangeHandler","_labelEditor","_labelFormatter","labelEditor","eventData","onGraphEvent","defaultLabel","prevLabel","openEditor","GraphEdgeRenderer","start","end","edgeDir","getEdgeDirection","GraphEdgeLayer","GraphEdgeLayer_classCallCheck","GraphEdgeLayer_possibleConstructorReturn","GraphEdgeLayer_getPrototypeOf","_graphEdgeInputHandler","Renderer","edgeRenderer","editable","hasPointerEvents","GraphNodeRenderer","GraphNodeLayer","GraphNodeLayer_classCallCheck","GraphNodeLayer_possibleConstructorReturn","GraphNodeLayer_getPrototypeOf","_graphNodeInputHandler","nodeRenderer","StartNodeMarkerRenderer","_prevSize","IndexedGraphStartMarkerLayer","IndexedGraphStartMarkerLayer_classCallCheck","IndexedGraphStartMarkerLayer_possibleConstructorReturn","IndexedGraphStartMarkerLayer_getPrototypeOf","_startMarkerInputHandler","IndexedGraphStartMarkerInputHandler","startMarkerRenderer","getGhostMarker","PatternInput","inputElement","placeholder","maxLength","multiLine","formatter","_submitTimeout","_submit","submitOnBlur","_skipBlur","_skipSelect","onFocus","onBlur","onKeyDown","select","submit","onSubmit","shiftKey","caretPosition","selectionStart","selectionEnd","ignore","separator","format","maxlength","multiline","rows","spellCheck","LabelEditorWidget","LabelEditorWidget_classCallCheck","LabelEditorWidget_getPrototypeOf","inputComponent","open","_targetCallback","onInputSubmit","LabelEditorWidget_assertThisInitialized","onInputBlur","graphElement","defaultValue","onCancel","_targetOnSubmit","_targetOnCancel","getNodeLabelFormatter","setFormatter","getEdgeLabelFormatter","resetValue","closeEditor","isEditorOpen","targetStyle","getElement","parentClientRect","getBoundingClientRect","screenPos","transformViewToScreen","offsetWidth","offsetHeight","top","editor_container","pattern_PatternInput","saveOnExit","getUnreachableNodes","getNodeCount","slice","nextNodes","pop","nextNode","AbstractGraphLabeler","AbstractMachineController","module","machineBuilder","_module","_machineBuilder","Eventable","__eventListeners","mixin","targetClass","targetPrototype","Object","assign","registerEvent","unregisterEvent","listeners","clearEventListeners","countEventListeners","getEventListeners","on","once","args","emit","_len2","_key2","onEventProcessed","SafeGraphEventHandler","graphParser","_graphParser","_graphData","objectify","prevEvent","getPreviousEvent","applyRedo","parse","PanelDivider","panel_divider","TriangleIcon","PanelCheckbox","checked","initial","checkbox_container","htmlFor","PatternInputButton","_timeout","onAnyMouseUp","parent","ignoreBlur","DownArrowIcon","MachineChangeHandler","AbstractMachineBuilder","AbstractMachineBuilder_classCallCheck","_machineChangeHandler","_errors","_warnings","onGraphChange","getGraphChangeHandler","addListener","removeListener","attemptBuildMachine","getMachine","machine","errors","warnings","PDANode","_accept","_custom","LINE_SEPARATOR","SYMBOL_SEPARATOR","READ_SEPARATOR","POP_SEPARATOR","EMPTY_CHAR","PDAEdge","PDAEdge_classCallCheck","PDAEdge_possibleConstructorReturn","PDAEdge_getPrototypeOf","PDAEdge_get","line","readIndex","trim","popIndex","readSymbol","popSymbol","pushSymbol","PDAGraph","PDAGraph_classCallCheck","PDAGraph_possibleConstructorReturn","PDAGraph_getPrototypeOf","DEFAULT_NODE_LABEL_PREFIX","isValidSymbol","symbol","edgeLabelFormatter","symbols","allowNull","lines","Set","symbolLength","add","j","join","PDAGraphLabeler","PDAGraphLabeler_classCallCheck","PDAGraphLabeler_possibleConstructorReturn","PDAGraphLabeler_getPrototypeOf","_prefix","prefix","shouldAutoRenameNodes","otherNodes","nodeIndex","getNodeCustom","newNodeLabel","getDefaultNodeLabelPrefix","getNodesByLabel","DEFAULT_AUTO_RENAME","PDAGraphController","PDAGraphController_classCallCheck","PDAGraphController_getPrototypeOf","setLabelFormatter","setGraphController","PDAGraphController_assertThisInitialized","shouldAutoLabel","PDAGraphController_get","applyAutoRename","getNotificationManager","pushNotification","WARNING_LAYOUT_ID","applyLayout","graphLabeler","enable","selectedNode","selection","deleteTargetEdge","random","getGraphLabeler","newLabel","setNodeCustom","State","PDA_classCallCheck","_src","PDA_createClass","Transition","_symbols","read","getReadSymbol","getPopSymbol","getPushSymbol","symbolString","_Symbol","_read","_pop","_push","isEqualStack","stack1","stack2","temp","_iteratorNormalCompletion25","_didIteratorError25","_iteratorError25","_step25","_iterator25","_iteratorNormalCompletion26","_didIteratorError26","_iteratorError26","_step26","_iterator26","PDA","_states","_alphabet","_stackAlphabet","_transitions","_finalStates","_customSymbols","_customStackSymbols","_startState","pda","entries","_step4$value","_slicedToArray","copy","isStartState","isFinalState","_step5$value","_step6$value","_step7$value","getSourceState","getStateID","getDestinationState","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","error","addState","stateID","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","getStateLabel","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","hasState","transitionKey","transition","hasSymbol","addSymbol","newTransition","_incrSymbolCount","_incrStackSymbolCount","getSymbols","_decrSymbolCount","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","symbolCount","stackSymbol","isCustomSymbol","isCustomStackSymbol","newSymbol","custom","keys","stack","PDA_typeof","fromTransitionKey","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","startsWith","toState","validSymbols","getSymbolsByReadPop","_i2","validSymbol","newStack","validPop","validPush","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_i3","doClosureTransition","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","s","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","pair","thisPair","thisState","thisStack","transitions","getOutgoingTransitions","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21","_iteratorNormalCompletion22","_didIteratorError22","_iteratorError22","_step22","_iterator22","_iteratorNormalCompletion23","_didIteratorError23","_iteratorError23","_step23","_iterator23","_iteratorNormalCompletion24","_didIteratorError24","_iteratorError24","_step24","_iterator24","PDABuilder","PDABuilder_classCallCheck","PDABuilder_possibleConstructorReturn","PDABuilder_getPrototypeOf","_machine","getStates","setNodeAccept","getTransitions","getFirstGraphNodeByLabel","formatEdge","startState","getStartState","customSymbols","getCustomSymbols","customStackSymbols","getCustomStackSymbols","setCustomSymbol","setCustomStackSymbol","nodeLabels","nodeOutgoings","edgePlaceholders","graphNodes","graphEdges","graphStart","nodeLabel","getNodeAccept","setFinalState","setStartState","srcNode","dstNode","srcState","getStateByID","dstState","edgeLabelLines","getEdgeSymbolsFromLine","addTransition","PDABuilder_slicedToArray","sharedStates","getSource","unreachables","MachineController","MachineController_classCallCheck","MachineController_possibleConstructorReturn","MachineController_getPrototypeOf","MachineController_get","attemptBuildGraph","getFinalStates","getAlphabet","addCustomSymbol","getMachineBuilder","removeCustomSymbol","prevSymbol","nextSymbol","replace","renameCustomSymbol","clearCustomSymbols","getStackAlphabet","addCustomStackSymbol","removeCustomStackSymbol","renameCustomStackSymbol","clearCustomStackSymbols","solvePDAByStep","cachedStates","cachedSymbols","nextStates","nextIndex","cstate","doTerminalTransition","nextState","TapeContext","inputString","infiniteLeft","infiniteRight","TapeContext_classCallCheck","_tapeInput","_left","_right","_index","finish","reset","TestTapeContext","tester","machineController","StringTester_classCallCheck","StringTester_possibleConstructorReturn","StringTester_getPrototypeOf","getTestString","_tester","_machineController","stepForward","stepBackward","resetPosition","runTest","stopTest","getNodesAtPosition","changePosition","getPosition","StringTester","_testString","_testIndex","_tapeContext","_cachePath","_cachedResult","_resolve","_reject","testString","reject","testResult","thenStop","then","isResult","relatedStateAndStack","prevCache","states","cachedState","nextCache","StateNotificationLayout","StateNotificationLayout_classCallCheck","StateNotificationLayout_getPrototypeOf","targetIndex","targetLabel","message","StateNotificationLayout_assertThisInitialized","notification","targetLength","focusOnNode","deleteTargetNodes","close","DefaultNotificationLayout","styleType","STYLE_TYPE_ERROR","text","ARROW","TransitionNotificationLayout","TransitionNotificationLayout_classCallCheck","TransitionNotificationLayout_getPrototypeOf","TransitionNotificationLayout_assertThisInitialized","focusOnEdge","deleteTargetEdges","StateUnreachableNotificationLayout","StateUnreachableNotificationLayout_classCallCheck","StateUnreachableNotificationLayout_getPrototypeOf","StateUnreachableNotificationLayout_assertThisInitialized","STYLE_TYPE_WARNING","STATE_LAYOUT_ID","TRANSITION_LAYOUT_ID","STATE_UNREACHABLE_LAYOUT_ID","PDAErrorChecker","PDAErrorChecker_classCallCheck","_showErrorOnChange","onMachineChange","getMachineChangeHandler","showErrors","enabled","getMachineErrors","getMachineWarnings","notificationManager","clearNotifications","SUCCESS_LAYOUT_ID","warning","JSON","nodeDatas","nodeCount","edgeDatas","edgeCount","initialIndex","nodeIndices","nodeData","initialNode","edgeData","sourceNode","destinationNode","quadData","graphInitial","accept","quad","getQuadratic","edgeSource","edgeDestination","sourceIndex","destinationIndex","_version","PDAImporter","jsonGraphParser","PDAImporter_classCallCheck","PDAImporter_possibleConstructorReturn","PDAImporter_getPrototypeOf","_prevGraphHash","getMachineController","machineData","machineType","setMachineType","isArray","statePrefix","setDefaultNodeLabelPrefix","loadMachineFromData","nextGraphHash","PDAExporter","PDAExporter_classCallCheck","PDAExporter_possibleConstructorReturn","PDAExporter_getPrototypeOf","graphData","StateListElement","StateListElement_classCallCheck","StateListElement_getPrototypeOf","onValueChange","StateListElement_assertThisInitialized","onKeyUp","keyCode","inputValue","nodeCustom","nodeAccept","displayValue","element_container","StateListView","StateListView_classCallCheck","StateListView_getPrototypeOf","_prevX","_prevY","onElementAdd","StateListView_assertThisInitialized","onElementFocus","onElementBlur","onElementChange","renameNode","deleteTargetNode","list_container","element_list","first_marker","overview_states_StateListElement","add_button","AlphabetListElement","AlphabetListElement_classCallCheck","AlphabetListElement_getPrototypeOf","_inputElement","AlphabetListElement_assertThisInitialized","inputSymbol","displaySymbol","symbolUsed","used","AlphabetListView","AlphabetListView_classCallCheck","AlphabetListView_getPrototypeOf","newSymbolComponent","useNewSymbol","AlphabetListView_assertThisInitialized","isSymbol","renameSymbol","createSymbol","deleteSymbol","alphabet","overview_alphabet_AlphabetListElement","isUsedSymbol","renderAlphabetList","StackAlphabetListElement","StackAlphabetListElement_classCallCheck","StackAlphabetListElement_getPrototypeOf","StackAlphabetListElement_assertThisInitialized","StackAlphabetListView","StackAlphabetListView_classCallCheck","StackAlphabetListView_getPrototypeOf","StackAlphabetListView_assertThisInitialized","isStackSymbol","renameStackSymbol","createStackSymbol","deleteStackSymbol","overview_stackalphabet_StackAlphabetListElement","isUsedStackSymbol","renderStackAlphabetList","AutoStateLabelView","AutoStateLabelView_classCallCheck","AutoStateLabelView_getPrototypeOf","onAutoStatePrefixSubmit","AutoStateLabelView_assertThisInitialized","onAutoStatePrefixFormat","select_container","select_label","FormattedInput","prefix_editor","captureOnExit","postfix_selector","onMachineTypeChange","OverviewPanel","OverviewPanel_classCallCheck","OverviewPanel_getPrototypeOf","onAutoLayoutApply","OverviewPanel_assertThisInitialized","onAutoLayoutChange","onAutoLabelChange","onSnapToGridChange","applyAutoLayout","setAutoRenameNodes","drawer","autoRename","drawerFull","isDrawerFullscreen","PanelContainer","TITLE","PanelSection","full","overview_states_StateListView","overview_alphabet_AlphabetListView","overview_stackalphabet_StackAlphabetListView","panels_overview_AutoStateLabelView","autolayout_button","PanelSwitch","defineProperty","DEFAULT_MODE","TestItem","TestItem_classCallCheck","TestItem_getPrototypeOf","status","TestItem_assertThisInitialized","nextValue","onDelete","onTest","test_item_container","test_button","test_input","subtitle","delete_button","ACCEPT_FILE_TYPES","TEST_FILENAME","TestListView","TestListView_classCallCheck","TestListView_getPrototypeOf","_testList","_testName","onTestNew","TestListView_assertThisInitialized","onTestUpload","onTestDownload","onTestClose","onTestAdd","onTestDelete","onTestTest","onTestRunAll","resetStatus","fileBlob","reader","FileReader","onload","event","tests","test","abort","readAsText","testStrings","isTesting","nextTest","item","forceImmediate","immediate","itemValue","startTest","promise","empty","test_container","test_control_tray","test_control_button","IconUploadButton","onUpload","UploadIcon","DownloadIcon","CrossIcon","test_list_container","test_list_add","test_list_count","test_list_scroll_container","test_list","testCallback","panels_testing_TestItem","test_list_runall","TestingPanel","TestingPanel_classCallCheck","TestingPanel_getPrototypeOf","stepMode","onStepTestChange","TestingPanel_assertThisInitialized","onAutoErrorCheckChange","_viewport","setCurrentView","_drawer","setDrawerSoloClass","closeDrawer","openDrawer","errorChecker","getErrorChecker","errorCheck","isErrorChecking","setErrorChecking","getStringTester","panel_container","panels_testing_TestListView","AnalysisPanel","AnalysisPanel_classCallCheck","AnalysisPanel_getPrototypeOf","optimizeUnreachOption","optimizeRedundOption","onOptimizeMachine","AnalysisPanel_assertThisInitialized","unreachableArray","isChecked","onDeleteAllUnreachable","analysis_button","canOptimize","PDANodeRenderer","PDANodeRenderer_classCallCheck","PDANodeRenderer_possibleConstructorReturn","PDANodeRenderer_getPrototypeOf","PDANodeInputHandler","PDANodeInputHandler_classCallCheck","PDANodeInputHandler_possibleConstructorReturn","PDANodeInputHandler_getPrototypeOf","PDAEdgeRenderer","PDAEdgeRenderer_classCallCheck","PDAEdgeRenderer_possibleConstructorReturn","PDAEdgeRenderer_getPrototypeOf","PDAGraphLayer","PDAGraphLayer_classCallCheck","PDAGraphLayer_possibleConstructorReturn","PDAGraphLayer_getPrototypeOf","graphView","getInputController","_fsaNodeInputHandler","getInputContext","getGraphEdgeInputHandler","setShouldDeleteEdgeWithEmptyLabel","setShouldDeleteEdgePlaceholder","RECOMMENDED_SYMBOLS","DEFAULT_SYMBOLS","PDALabelEditorRenderer","PDALabelEditorRenderer_classCallCheck","PDALabelEditorRenderer_possibleConstructorReturn","PDALabelEditorRenderer_getPrototypeOf","getLabelEditor","appendValue","showEdgeTray","getTarget","showNodeTray","showRecommended","tray_used","renderSymbol","tray_default","PDAGraphOverlayLayer","PDAGraphOverlayLayer_classCallCheck","PDAGraphOverlayLayer_possibleConstructorReturn","PDAGraphOverlayLayer_getPrototypeOf","setLabelEditor","components_widgets_PDALabelEditorRenderer","TapeWidget","TapeWidget_classCallCheck","TapeWidget_getPrototypeOf","onTapeStepBackward","TapeWidget_assertThisInitialized","onTapeStepForward","onTapeFinish","onTapeReset","onTapeSkipForward","onTapeSkipBackward","onTapeStop","stop","tapeContext","tapeIndex","getCurrentTapeIndex","tape_container","tape_control_tray","isTapeLeftInfinite","opacity","getTapeInput","activeRead","sourceStates","getTapeSourceStatesByIndex","setCurrentTapeIndex","sourceState","isTapeRightInfinite","PDATapeGraphOverlayLayer","PDATapeGraphOverlayLayer_classCallCheck","PDATapeGraphOverlayLayer_possibleConstructorReturn","PDATapeGraphOverlayLayer_getPrototypeOf","components_widgets_TapeWidget","getTapeContext","PDAModule","PDAModule_classCallCheck","_graphViewComponent","getRenderManager","addRenderer","RENDER_LAYER_WORKSPACE","layers_PDAGraphLayer","_testMode","layers_PDATapeGraphOverlayLayer","layers_PDAGraphOverlayLayer","_errorChecker","registerNotificationLayout","getExportManager","PDAGraphParser","getImportManager","addImporter","setEventHandlerFactory","getDrawerManager","addPanelClass","getHotKeyManager","registerHotKey","CTRL_KEY","tryExportFile","getToolbarComponent","closeBar"],"mappings":"usCAQMA,cASF,SAAAA,EAAYC,GACZ,IAAAC,EADgBC,EAChBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADoB,EAAGG,EACvBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD2B,EAC3B,mGAAAI,CAAAC,KAAAT,IACIE,EAAAQ,EAAAD,KAAAE,EAAAX,GAAAY,KAAAH,KAAMR,KAEDE,EAAIA,EACTD,EAAKK,EAAIA,EAETL,EAAKW,OAAS,GANlBX,wPAVoBY,uDAqBpB,IADeC,EACfX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADmB,CAACD,EAAG,EAAGI,EAAG,GAIzB,OAFAQ,EAAIZ,EAAIM,KAAKN,EACbY,EAAIR,EAAIE,KAAKF,EACNQ,uCAUEC,GAGT,OADAP,KAAKI,OAASG,EACPP,4CAQM,OAAOA,KAAKI,6CAMb,OAAO,2CAIvB,IADcI,IACdb,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACI,OAAIa,EAEOC,EAAAP,EAAAX,EAAAmB,WAAA,gBAAAV,MAAAG,KAAAH,KAAoBQ,GAAe,IAC9CG,KAAKC,MAAMZ,KAAKN,GAAK,IAAMiB,KAAKC,MAAMZ,KAAKF,GAAK,IAAME,KAAKI,OAIhDK,EAAAP,EAAAX,EAAAmB,WAAA,gBAAAV,MAAAG,KAAAH,KAAoBQ,GAAe,IAAMR,KAAKI,4CAKlDb,moCCpETsB,cASF,SAAAA,EAAYrB,EAAIsB,GAChB,IAAArB,EADsBsB,EACtBpB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADyB,KACzB,mGAAAI,CAAAC,KAAAa,IACIpB,EAAAQ,EAAAD,KAAAE,EAAAW,GAAAV,KAAAH,KAAMR,KAEDwB,MAAQF,EACbrB,EAAKwB,IAAMF,EAEXtB,EAAKW,OAAS,GANlBX,wPAVoBY,kDAmBRa,GAER,IAAKA,EAAM,MAAM,IAAIC,MAAM,iCAG3B,OADAnB,KAAKgB,MAAQE,EACNlB,uCAGDkB,GAGN,OADAlB,KAAKiB,IAAMC,EACJlB,0CAUEO,GAGT,OADAP,KAAKI,OAASG,EACPP,gDAKP,IAAMc,EAAOd,KAAKgB,MACZD,EAAKf,KAAKiB,IACVG,EAAST,KAAKU,GAAK,EACrBC,EAAS,EAEb,GAAItB,KAAKuB,gBAELD,EAASX,KAAKU,GAAK,MAGvB,CACI,IAAMG,EAAKT,EAAGjB,EAAIgB,EAAKhB,EACjB2B,EAAKV,EAAGrB,EAAIoB,EAAKpB,EACvB4B,EAASX,KAAKe,MAAMF,EAAIC,GAQ5B,OALIH,EAASF,GAAUE,GAAUF,KAE7BE,GAAUX,KAAKU,IAGZC,0CAIX,IADchB,EACdX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADoB,CAAED,EAAG,EAAGI,EAAG,GAErBgB,EAAOd,KAAKgB,MAGlB,OAFAV,EAAIZ,EAAIoB,EAAKpB,EACbY,EAAIR,EAAIgB,EAAKhB,EACNQ,2CAKX,IADeA,EACfX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADqB,CAAED,EAAG,EAAGI,EAAG,GAEtBgB,EAAOd,KAAKgB,MACZD,EAAKf,KAAKiB,IAChB,GAAIjB,KAAKuB,gBACT,CACI,IAAMI,EAAwB3B,KAAK4B,uBAAyB,EAC5DtB,EAAIZ,EAAIoB,EAAKpB,EAAIiC,EACjBrB,EAAIR,EAAIgB,EAAKhB,EAAI6B,OAIjBrB,EAAIZ,EAAIoB,EAAKpB,GAAKqB,EAAGrB,EAAIoB,EAAKpB,GAAK,EACnCY,EAAIR,EAAIgB,EAAKhB,GAAKiB,EAAGjB,EAAIgB,EAAKhB,GAAK,EAEvC,OAAOQ,wCAIX,IADYA,EACZX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADkB,CAAED,EAAG,EAAGI,EAAG,GAEzB,GAAIE,KAAKuB,gBACT,CACI,IAAMT,EAAOd,KAAKgB,MACZa,EAAoB7B,KAAK4B,uBAC/BtB,EAAIZ,EAAIoB,EAAKpB,EAAImC,EACjBvB,EAAIR,EAAIgB,EAAKhB,EAAI+B,MAGrB,CACI,IAAMd,EAAKf,KAAKiB,IAChBX,EAAIZ,EAAIqB,EAAGrB,EACXY,EAAIR,EAAIiB,EAAGjB,EAEf,OAAOQ,iDAGc,OAAON,KAAKgB,MAAMc,sDACzB,OAAoB,OAAb9B,KAAKiB,yCACf,OAAOjB,KAAKgB,QAAUhB,KAAKiB,2CAOzB,OAAOjB,KAAKI,6CAEb,OAAOJ,KAAKgB,0CACd,OAAOhB,KAAKiB,4CAI1B,IADcT,IACdb,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACUoC,EAAM/B,KAAKgB,MAAQhB,KAAKgB,MAAMgB,cAAcxB,GAAe,GAE3DF,EAAMN,KAAKiB,IAAMjB,KAAKiB,IAAIe,cAAgBhC,KAAKiB,IAAIe,cAAcxB,GAAe,IAAM,GAC5F,OAAOC,EAAAP,EAAAW,EAAAH,WAAA,gBAAAV,MAAAG,KAAAH,KAAoBQ,GAAe,IAAMuB,EAAM,IAAMzB,EAAM,IAAMN,KAAKI,4CAItES,8MClJToB,aAEF,SAAAA,iGAAclC,CAAAC,KAAAiC,kEAOEC,GAAW,OAAO,uCAQrBA,GAAW,OAAO,0CAQfA,GAAW,OAAO,0CASlBA,GAAW,OAAO,2CAQjBA,GAAW,OAAO,sCAcvBA,GAAW,OAAO,qCAQnBA,uCAQAA,6CAKMA,yCAMJA,EAASC,EAAWC,GAE7B,OAAO,uCAIAH,+3BC1Ff,IAEaI,EAAoB,OAEpBC,EAA2B,SAAAC,GAAK,OACzCC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,UAAQE,GAAIL,EAAMM,SAASnD,EAAGoD,GAAIP,EAAMM,SAAS/C,EAC7CiD,EAAGR,EAAMS,OACTC,KAAMV,EAAMW,MACZC,OAAQZ,EAAMa,WAChBb,EAAMc,aAAed,EAAMe,aACzBd,EAAAC,EAAAC,cAAA,UAAQE,GAAIL,EAAMM,SAASnD,EAAGoD,GAAIP,EAAMM,SAAS/C,EAC7CiD,EAAGR,EAAMS,OAZa,EAatBC,KAAK,cACLM,OAAO,UACPF,YAAad,EAAMc,YACnBC,WAAYf,EAAMe,WAClBE,cAAejB,EAAMiB,kBAIxBC,EAAuB,SAAAlB,GAAK,OACrCC,EAAAC,EAAAC,cAAA,QAAMhD,EAAG6C,EAAMM,SAASnD,EAAGI,EAAGyC,EAAMM,SAAS/C,EAAI,EAC7C0D,cAAc,OACdE,MAAO,CACHC,WAAY,OACZC,SAAQ,GAAAC,OAAM,EAAIlD,KAAKmD,IAAInD,KAAKoD,IAAIxB,EAAMhC,MAAMX,OAAS,EAAG,GAAK,EAAG,IAA5D,OAEZoE,WAAW,SACXf,KAAMV,EAAMW,OACXX,EAAMhC,QAIT0D,cAEF,SAAAA,EAAY1B,GAAO,mGAAAxC,CAAAC,KAAAiE,GAAAhE,EAAAD,KAAAE,EAAA+D,GAAA9D,KAAAH,KAAQuC,0PAFJ2B,IAAMC,kDAOzB,IAAMtB,EAAW7C,KAAKuC,MAAMM,SACtBG,EAAShD,KAAKuC,MAAMS,QAAU,GAC9BzC,EAAQP,KAAKuC,MAAMhC,OAAS,GAC5B2C,EAAQlD,KAAKuC,MAAMW,OAAS,UAC5BE,EAAUpD,KAAKuC,MAAMa,SAAW,UAChCC,EAAcrD,KAAKuC,MAAMc,YACzBC,EAAatD,KAAKuC,MAAMe,WACxBE,EAAgBxD,KAAKuC,MAAMiB,eAAiB,iBAE5CY,EAAoB9B,EACpB+B,EAAoBZ,EAE1B,OACIjB,EAAAC,EAAAC,cAAA,SACK0B,GACG5B,EAAAC,EAAAC,cAAC0B,EAAD,CACIvB,SAAUA,EACVG,OAAQA,EACRE,MAAOA,EACPE,QAASA,EACTC,YAAaA,EAAc,SAAAiB,IAETA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDC,KAAOnC,EACbgB,EAAYiB,IACZ,KACJhB,WAAYA,EAAa,SAAAgB,IAEPA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDC,KAAOnC,EACbiB,EAAWgB,IACX,KACJd,cAAeA,IACtBa,GACG7B,EAAAC,EAAAC,cAAC2B,EAAD,CACIxB,SAAUA,EACVtC,MAAOA,EACP2C,MAAOE,0CAMhBa,8MCjFT5D,aAOF,SAAAA,EAAYoE,gGACZ1E,CAAAC,KAAAK,GACIL,KAAK0E,IAAMD,mEAQGA,GAGd,OADAzE,KAAK0E,IAAMD,EACJzE,8CAUX,IADeM,EACfX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADqB,CAAED,EAAG,EAAGI,EAAG,GAG5B,OADAQ,EAAIZ,EAAIY,EAAIR,EAAI,EACTQ,8CAOW,OAAON,KAAK0E,8CAcA/E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAAE,OAAOK,KAAK0E,yCAGrCrE,i+BC3Df,IAGMsE,EAAWhE,KAAKU,GAAK,EACrBuD,EAAUjE,KAAKU,GAAK,EAGbwD,EAAmB,UAKnBC,EAAgC,mBAEhCC,EAAoB,OACpBC,EAAqB,QAErBC,EAA0B,SAAA1C,GAAK,OACxCC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,QAAMwC,EACF,MACC3C,EAAMM,SAASnD,EAAK6C,EAAM3C,OAASe,KAAKwE,IAAI5C,EAAM6C,MAAQT,IAC3D,KACCpC,EAAMM,SAAS/C,EAAKyC,EAAM3C,OAASe,KAAK0E,IAAI9C,EAAM6C,MAAQT,IAC3D,MACOpC,EAAMM,SAASnD,EAAI,IAAM6C,EAAMM,SAAS/C,EAC/C,OAECyC,EAAMM,SAASnD,EAAK6C,EAAM3C,OAASe,KAAKwE,IAAI5C,EAAM6C,MAAQT,IAC3D,KACCpC,EAAMM,SAAS/C,EAAKyC,EAAM3C,OAASe,KAAK0E,IAAI9C,EAAM6C,MAAQT,IAC/DxB,OAAQZ,EAAMW,MACdD,KAAK,SACLT,EAAAC,EAAAC,cAAA,UAAQE,GAAIL,EAAMM,SAASnD,EAAK6C,EAAM3C,OAASe,KAAK0E,KAAK9C,EAAM6C,MAAQR,GAAW9B,GAAIP,EAAMM,SAAS/C,EAAKyC,EAAM3C,OAASe,KAAKwE,KAAK5C,EAAM6C,MAAQR,GAC7I7B,EAAGR,EAAM3C,OACTqD,KAAK,cACLM,OAAO,UACPF,YAAad,EAAMc,YACnBC,WAAYf,EAAMe,WAClBE,cAAejB,EAAMiB,kBAIpBC,EAAuB,SAAAlB,GAAK,OACrCC,EAAAC,EAAAC,cAAA,KAAG4C,UAAW,aAAe/C,EAAMM,SAASnD,EAAI,IAAM6C,EAAMM,SAAS/C,EAAI,YAEtC,IAAlByC,EAAMgD,UAAkB5E,KAAKU,GAAM,KAE5CkB,EAAMiD,QAAUjD,EAAMiD,OAAO5F,OAAS,GACtC2C,EAAMiD,OAAOC,IAAI,SAACC,EAAKC,GAEnB,IAAMtC,EAAcd,EAAMc,YACpBC,EAAaf,EAAMe,WACzB,OACId,EAAAC,EAAAC,cAAA,QAAMkD,IAAKF,EAAM,IAAMC,EACnBL,UAAW,gBAA6B,IAAVK,EAAI,GAAY,KACzCpD,EAAMsD,QAAU,gBAAkB,IACvCC,kBAAkB,UAClBpC,MAAO,CAAEC,WAAY,QACrBK,WAAW,SACXf,KAAMV,EAAMW,MACZK,OAAO,UACPF,YAAaA,EAAc,SAAAiB,IAETA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDwB,MAAQJ,EACdtC,EAAYiB,IACZ,KACJhB,WAAYA,EAAa,SAAAgB,IAEPA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDwB,MAAQJ,EACdrC,EAAWgB,IACX,KACJd,cAAejB,EAAMiB,eACpBkC,OAQnBM,cAEF,SAAAA,EAAYzD,GACZ,mGAAAxC,CAAAC,KAAAgG,GAAA/F,EAAAD,KAAAE,EAAA8F,GAAA7F,KAAAH,KACUuC,0PAJa2B,IAAMC,kDAUzB,IAyBI8B,EACAC,EA1BEC,EAAWnG,KAAKuC,MAAM4D,UAnFP,aAqFfC,EACDD,IAAatB,GAvFG,SAuFiBsB,EAC7BnG,KAAKuC,MAAM8D,yBACRrG,KAAKuC,MAAM+D,kBACXrB,EAA2B,KACjCsB,EA5FmB,aA6FpBJ,GA5FgB,SA4FkBA,EAC9BnG,KAAKuC,MAAMiE,0BACRxG,KAAKuC,MAAM+D,kBACXrB,EAA2B,KACjCwB,EAAoBzG,KAAKuC,MAAMmE,eAAiBjD,EAEhDkD,EAAY3G,KAAKuC,MAAMzB,KACvB8F,EAAU5G,KAAKuC,MAAMxB,GACrB8F,EAAc7G,KAAKuC,MAAMuE,OACzBvG,EAAQP,KAAKuC,MAAMhC,OAAS,GAC5BgF,EAAYvF,KAAKuC,MAAMgD,WAAa,EACpCrC,EAAQlD,KAAKuC,MAAMW,OAAS,UAC5BG,EAAcrD,KAAKuC,MAAMc,YACzBC,EAAatD,KAAKuC,MAAMe,WACxBE,EAAgBxD,KAAKuC,MAAMiB,eAAiB,iBAE9CuD,GAAe,EAGfC,EAAW,KAETC,EAAON,EAAUjH,EAAIkH,EAAQlH,EAC7BwH,EAAOP,EAAU7G,EAAI8G,EAAQ9G,EAC7BqH,EAAOR,EAAUjH,EAAImH,EAAYnH,EACjC0H,EAAOT,EAAU7G,EAAI+G,EAAY/G,EACjCuH,EAAQ1G,KAAKe,MAAMwF,EAAMD,GACzBK,EAAQ3G,KAAKe,MAAM0F,EAAMD,GAC/B,GAAIxG,KAAK4G,IAAIF,EAAQC,IAhIC,IAkIlBpB,EAAUvF,KAAKe,MAAMmF,EAAYnH,EAAIkH,EAAQlH,EAAGmH,EAAY/G,EAAI8G,EAAQ9G,GAAKa,KAAKU,GAClF4E,EAAYtF,KAAKe,MAAMmF,EAAYnH,EAAIiH,EAAUjH,EAAGmH,EAAY/G,EAAI6G,EAAU7G,GAAKa,KAAKU,GACxF2F,EAAW,KAAOJ,EAAQlH,EAAI,IAAMkH,EAAQ9G,EAC5CiH,GAAe,MAGnB,CACI,IAAMnE,GAAuB,EAAhBiE,EAAYnH,EAASiH,EAAUjH,EAAIkH,EAAQlH,GAAK,EACvDoD,GAAuB,EAAhB+D,EAAY/G,EAAS6G,EAAU7G,EAAI8G,EAAQ9G,GAAK,EAC7DoG,EAAUvF,KAAKe,MAAMkB,EAAKgE,EAAQlH,EAAGoD,EAAK8D,EAAQ9G,GAAKa,KAAKU,GAC5D4E,EAAYtF,KAAKe,MAAMkB,EAAK+D,EAAUjH,EAAGoD,EAAK6D,EAAU7G,GAAKa,KAAKU,GAClE2F,EAAW,KAAOpE,EAAK,IAAME,EAAK,IAAM8D,EAAQlH,EAAI,IAAMkH,EAAQ9G,EAClEiH,EAAejE,EAAK+D,EAAY/G,EA7IN,EAgJ9B,IAAM0H,EAAQ,KAAA3D,OAAQ8C,EAAUjH,EAAlB,KAAAmE,OAAuB8C,EAAU7G,EAAjC,KAAA+D,OAAsCmD,GACpD,OACIxE,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,QAAMwC,EAAGsC,EACLrE,OAAQD,EACRD,KAAK,SACTT,EAAAC,EAAAC,cAAA,QAAMwC,EAAGsC,EACLrE,OAAO,cACPsE,YAAW,GAAA5D,OApJD,EAoJC,MACXZ,KAAK,OACLM,OAAO,UACPF,YAAaA,EAAc,SAAAiB,IAETA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDC,KAAOO,EACb1B,EAAYiB,IACZ,KACJhB,WAAYA,EAAa,SAAAgB,IAEPA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDC,KAAOO,EACbzB,EAAWgB,IACX,KACJd,cAAeA,IAClB4C,GACG5D,EAAAC,EAAAC,cAAC0D,EAAD,CACIvD,SAAU+D,EACVxB,MAAOc,EACPtG,OA3KJ,GA4KIsD,MAAOA,EACPG,YAAaA,EAAc,SAAAiB,IAETA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDC,KAAOM,EACbzB,EAAYiB,IACZ,KACJhB,WAAYA,EAAa,SAAAgB,IAEPA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDC,KAAOM,EACbxB,EAAWgB,IACX,KACJd,cAAeA,IACtB+C,GACG/D,EAAAC,EAAAC,cAAC6D,EAAD,CACI1D,SAAU8D,EACVvB,MAAOa,EACPrG,OA9LJ,GA+LIsD,MAAOA,EACPG,YAAaA,EAAc,SAAAiB,IAETA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDC,KAxLY,oBAyLlBnB,EAAYiB,IACZ,KACJhB,WAAYA,EAAa,SAAAgB,IAEPA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDC,KA9LY,oBA+LlBlB,EAAWgB,IACX,KACJd,cAAeA,IACtBiD,GACGjE,EAAAC,EAAAC,cAAC+D,EAAD,CACI5D,SAAUgE,EACVrB,OAAQjF,EAAMmH,MAAM,MACpBnC,UAAWA,EACXM,QAASkB,EACT7D,MAAOA,EACPG,YAAaA,EAAc,SAAAiB,IAETA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDC,KAAOQ,EACb3B,EAAYiB,IACZ,KACJhB,WAAYA,EAAa,SAAAgB,IAEPA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDC,KAAOQ,EACb1B,EAAWgB,IACX,KACJd,cAAeA,0CAMxBwC,2OCnOT2B,aAOF,SAAAA,IACA,IADYC,EACZjI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADwBJ,IAAWsI,EACnClI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD+CkB,iGAC/Cd,CAAAC,KAAA2H,GACI3H,KAAK8H,WAAaF,EAClB5H,KAAK+H,WAAaF,EAElB7H,KAAKgI,aAAe,IAAIC,IACxBjI,KAAKkI,aAAe,IAAID,2DAQxBjI,KAAKmI,aACLnI,KAAKoI,+CASL,OAAOpI,KAAKgI,aAAaK,MAAQ,GAAKrI,KAAKkI,aAAaG,MAAQ,4CAWhE,GAAIrI,KAAKgI,aAAaK,MAAQ,EAAG,MAAO,CACpCC,KAAM,EACNC,KAAM,EACNC,KAAM,EACNC,KAAM,EACNC,MAAO,EACPC,OAAQ,GAGZ,IAAIC,EAAQC,OAAOC,UACfC,EAAQF,OAAOC,UACfE,EAAQH,OAAOI,UACfC,EAAQL,OAAOI,UAEfE,EAAc,EAftBC,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IAgBI,QAAA0J,EAAAC,EAAmBxJ,KAAKgI,aAAayB,SAArCC,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADWlI,EACXqI,EAAAO,MACUpK,EAAIwB,EAAKxB,EACTI,EAAIoB,EAAKpB,EACTuI,EAAOnH,EAAKY,cACduG,EAAOc,IAAaA,EAAcd,GAEtCO,EAAQjI,KAAKmD,IAAI8E,EAAOlJ,GACxBsJ,EAAQrI,KAAKoD,IAAIiF,EAAOtJ,GAExBqJ,EAAQpI,KAAKmD,IAAIiF,EAAOjJ,GACxBoJ,EAAQvI,KAAKoD,IAAImF,EAAOpJ,IA3BhC,MAAAiK,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GA8BIV,GAASO,EACTJ,GAASI,EACTH,GAASG,EACTD,GAASC,EAET,IAAIc,EAAQpB,OAAOC,UACfoB,EAAQrB,OAAOC,UACfqB,EAAQtB,OAAOI,UACfmB,EAAQvB,OAAOI,UAEboB,EAAa,CAAE3K,EAAG,EAAGI,EAAG,GACxBwK,EAAW,CAAE5K,EAAG,EAAGI,EAAG,GACtB+G,EAAc,CAAEnH,EAAG,EAAGI,EAAG,GA1CnCyK,GAAA,EAAAC,GAAA,EAAAC,OAAA5K,EAAA,IA2CI,QAAA6K,EAAAC,EAAmB3K,KAAKkI,aAAauB,SAArCC,OAAAC,cAAAY,GAAAG,EAAAC,EAAAf,QAAAC,MAAAU,GAAA,EACA,KADWK,EACXF,EAAAZ,MAEIc,EAAKC,cAAcR,GACnBO,EAAKE,YAAYR,GACjBM,EAAKG,eAAelE,GAEpB,IAAMmE,EAAKX,EAAW3K,EAChBuL,EAAKZ,EAAWvK,EAChBoL,EAAKZ,EAAS5K,EACdyL,EAAKb,EAASxK,EACd8C,EAAKiE,EAAYnH,EACjBoD,EAAK+D,EAAY/G,EAEvBmK,EAAQtJ,KAAKmD,IAAImG,EAAOe,EAAIE,EAAItI,GAChCuH,EAAQxJ,KAAKoD,IAAIoG,EAAOa,EAAIE,EAAItI,GAEhCsH,EAAQvJ,KAAKmD,IAAIoG,EAAOe,EAAIE,EAAIrI,GAChCsH,EAAQzJ,KAAKoD,IAAIqG,EAAOa,EAAIE,EAAIrI,IA7DxC,MAAAiH,GAAAS,GAAA,EAAAC,EAAAV,EAAA,YAAAQ,GAAA,MAAAI,EAAAX,QAAAW,EAAAX,SAAA,WAAAQ,EAAA,MAAAC,GAgEI,IAAMnJ,EAAS,CACXgH,KAAM3H,KAAKmD,IAAI8E,EAAOqB,GACtB1B,KAAM5H,KAAKmD,IAAIiF,EAAOmB,GACtB1B,KAAM7H,KAAKoD,IAAIiF,EAAOmB,GACtB1B,KAAM9H,KAAKoD,IAAImF,EAAOkB,GACtB1B,MAAO,EACPC,OAAQ,GAIZ,OAFArH,EAAOoH,MAAQpH,EAAOkH,KAAOlH,EAAOgH,KACpChH,EAAOqH,OAASrH,EAAOmH,KAAOnH,EAAOiH,KAC9BjH,wCAWX,IADYd,IACZb,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACQyL,EAAS,GADjBC,GAAA,EAAAC,GAAA,EAAAC,OAAA1L,EAAA,IAEI,QAAA2L,EAAAC,EAAmBzL,KAAKgI,aAAayB,SAArCC,OAAAC,cAAA0B,GAAAG,EAAAC,EAAA7B,QAAAC,MAAAwB,GAAA,EACA,CACID,GADJI,EAAA1B,MACmB9H,cAAcxB,GAAe,KAJpD,MAAAuJ,GAAAuB,GAAA,EAAAC,EAAAxB,EAAA,YAAAsB,GAAA,MAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,MAAAC,GAMIH,GAAU,IANd,IAAAM,GAAA,EAAAC,GAAA,EAAAC,OAAA/L,EAAA,IAOI,QAAAgM,EAAAC,EAAmB9L,KAAKkI,aAAauB,SAArCC,OAAAC,cAAA+B,GAAAG,EAAAC,EAAAlC,QAAAC,MAAA6B,GAAA,EACA,CACIN,GADJS,EAAA/B,MACmB9H,cAAcxB,GAAe,KATpD,MAAAuJ,GAAA4B,GAAA,EAAAC,EAAA7B,EAAA,YAAA2B,GAAA,MAAAI,EAAA9B,QAAA8B,EAAA9B,SAAA,WAAA2B,EAAA,MAAAC,GAWI,OAAOG,YAAWX,wCAatB,IADW1L,EACXC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADe,EAAGG,EAClBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADsB,EAAGH,EACzBG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD8B,KAE1B,OAAOK,KAAKgM,QAAQ,IAAKhM,KAAK8H,WAAYtI,GAAMyM,cAAQvM,EAAGI,oCASvDoB,GAIJ,OAFKA,EAAKgL,qBAAqBhL,EAAKiL,kBAAkBF,eACtDjM,KAAKgI,aAAaoE,IAAIlL,EAAKgL,oBAAqBhL,GACzCA,qCAQAA,GAEP,IAAMuD,EAAYvD,EAAKgL,oBACvB,GAAIlM,KAAKgI,aAAaqE,IAAI5H,GAC1B,CACIzE,KAAKgI,aAAasE,OAAO7H,GAEzB,IAAM8H,EAAkB,GAH5BC,GAAA,EAAAC,GAAA,EAAAC,OAAA7M,EAAA,IAKI,QAAA8M,EAAAC,EAAmB5M,KAAK6M,WAAxBnD,OAAAC,cAAA6C,GAAAG,EAAAC,EAAAhD,QAAAC,MAAA2C,GAAA,EACA,KADW5B,EACX+B,EAAA7C,MACQc,EAAKkC,gBAAkB5L,EAEvBqL,EAAgBQ,KAAKnC,GAEhBA,EAAKoC,cAAgB9L,GAE1B0J,EAAKqC,UAAU,OAb3B,MAAAlD,GAAA0C,GAAA,EAAAC,EAAA3C,EAAA,YAAAyC,GAAA,MAAAI,EAAA5C,QAAA4C,EAAA5C,SAAA,WAAAyC,EAAA,MAAAC,GAiBI,QAAAQ,EAAA,EAAAA,EAAmBX,EAAnB3M,OAAAsN,IACA,CADK,IAAMtC,EAAQ2B,EAAJW,GAEXlN,KAAKmN,WAAWvC,0CAKb5K,KAAKgI,aAAaoF,mDAEd3I,GAEf,OAAIzE,KAAKgI,aAAaqE,IAAI5H,GAEfzE,KAAKgI,aAAaqF,IAAI5I,GAItB,6CAIClE,GAChB,IADuBD,EACvBX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD6B,GAC7B2N,GAAA,EAAAC,GAAA,EAAAC,OAAA3N,EAAA,IACI,QAAA4N,EAAAC,EAAmB1N,KAAK2N,WAAxBjE,OAAAC,cAAA2D,GAAAG,EAAAC,EAAA9D,QAAAC,MAAAyD,GAAA,EACA,KADWpM,EACXuM,EAAA3D,MACQ5I,EAAK0M,iBAAmBrN,GAExBD,EAAIyM,KAAK7L,IALrB,MAAA6I,GAAAwD,GAAA,EAAAC,EAAAzD,EAAA,YAAAuD,GAAA,MAAAI,EAAA1D,QAAA0D,EAAA1D,SAAA,WAAAuD,EAAA,MAAAC,GAQI,OAAOlN,qCAGE,OAAOuN,MAAM/M,KAAKd,KAAKgI,aAAayB,iDAChC,OAAOzJ,KAAKgI,aAAaK,4CACzB,OAAOrI,KAAK8H,8CASlB8C,GAEP,OAAOA,qCAWA9J,GACX,IADiBC,EACjBpB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADsB,KAAMH,EAC5BG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADiC,KAE7B,OAAOK,KAAK8N,QAAQ,IAAK9N,KAAK+H,WAAYvI,GAAMyM,cAAQnL,EAAMC,oCAU1D6J,GAIJ,OAFKA,EAAKsB,qBAAqBtB,EAAKuB,kBAAkBF,eACtDjM,KAAKkI,aAAakE,IAAIxB,EAAKsB,oBAAqBtB,GACzCA,qCAQAA,GAEP,IAAMnG,EAAYmG,EAAKsB,oBACnBlM,KAAKkI,aAAamE,IAAI5H,IAEtBzE,KAAKkI,aAAaoE,OAAO7H,wCAIlBzE,KAAKkI,aAAakF,mDAEd3I,GAEf,OAAIzE,KAAKkI,aAAamE,IAAI5H,GAEfzE,KAAKkI,aAAamF,IAAI5I,GAItB,6CAIClE,GAChB,IADuBD,EACvBX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD6B,GAC7BoO,GAAA,EAAAC,GAAA,EAAAC,OAAApO,EAAA,IACI,QAAAqO,EAAAC,EAAmBnO,KAAK6M,WAAxBnD,OAAAC,cAAAoE,GAAAG,EAAAC,EAAAvE,QAAAC,MAAAkE,GAAA,EACA,KADWnD,EACXsD,EAAApE,MACQc,EAAKwD,iBAAmB7N,GAExBD,EAAIyM,KAAKnC,IALrB,MAAAb,GAAAiE,GAAA,EAAAC,EAAAlE,EAAA,YAAAgE,GAAA,MAAAI,EAAAnE,QAAAmE,EAAAnE,SAAA,WAAAgE,EAAA,MAAAC,GAQI,OAAO3N,qCAGE,OAAOuN,MAAM/M,KAAKd,KAAKkI,aAAauB,iDAChC,OAAOzJ,KAAKkI,aAAaG,4CACzB,OAAOrI,KAAK+H,gDAGlBJ,0oCCxTT0G,cASF,SAAAA,EAAY7O,EAAIsB,GAChB,IAAArB,EADsBsB,EACtBpB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD2B,KAC3B,mGAAAI,CAAAC,KAAAqO,IACI5O,EAAAQ,EAAAD,KAAAE,EAAAmO,GAAAlO,KAAAH,KAAMR,EAAIsB,EAAMC,KAIXuN,MAAQ,CACTC,QAAS,EACT3O,OAAQmB,EAAK,EAAItB,EAAKmC,uBACtB4M,OAAQ,CAAE9O,EAAG,EAAGI,EAAG,IAR3BL,wPAVwBoB,gDAuBdK,GAEN,IAAMuN,EAAWzO,KAAKiB,IACtB,GAAIC,IAASuN,EACb,CACI,IAAMnN,EAAMb,EAAAP,EAAAmO,EAAA3N,WAAA,YAAAV,MAAAG,KAAAH,KAAmBkB,GAS/B,OARKA,EAIIA,IAASlB,KAAKgB,QAEnBhB,KAAKsO,MAAM1O,OAASI,KAAKgB,MAAMc,cAAgB9B,KAAK4B,wBAJpD5B,KAAK0O,qBAAqBD,EAAS/O,EAAG+O,EAAS3O,GAM5CwB,EAEX,OAAAb,EAAAP,EAAAmO,EAAA3N,WAAA,YAAAV,MAAAG,KAAAH,KAAuBkB,+CAQPqN,GAGhB,OADAvO,KAAKsO,MAAMC,QAAUA,EACdvO,gDAQQJ,GAGf,OADAI,KAAKsO,MAAM1O,OAASA,EACbI,kDAUUN,EAAGI,GAEpB,IAAMgB,EAAOd,KAAKgB,MACZD,EAAKf,KAAKiB,IAEhB,IAAKF,EACL,CASI,IAAMU,EAAKzB,KAAKgB,MAAMtB,EAAIA,EACpB8B,EAAKxB,KAAKgB,MAAMlB,EAAIA,EACpByO,GAAW5N,KAAKe,MAAMD,EAAID,GAAOb,KAAKU,GAAK,EAEjD,OADArB,KAAKsO,MAAMC,QAAUA,EACdvO,KAGX,IAAM2O,EAAQ7N,EAAKpB,EACbkP,EAAQ9N,EAAKhB,EAIf2B,EAHQV,EAAGrB,EAGAiP,EACXnN,EAHQT,EAAGjB,EAGA8O,EACTC,EAAYF,EAAQlN,EAAK,EACzBqN,EAAYF,EAAQpN,EAAK,EAIzBuN,EAAcpO,KAAKe,OAAOF,EAAIC,GACpCA,EAAK/B,EAAImP,EACTrN,EAAK1B,EAAIgP,EAET,IAAMzN,EAAKV,KAAKU,GACVD,EAASC,EAAK,EAKhBkN,EAAU5N,KAAKe,MAAMF,EAAIC,GAAMsN,EAC/BnP,EAASe,KAAKqO,KAAKvN,EAAKA,EAAKD,EAAKA,GAClC5B,EAAS,IAAGA,EAAS,GAGzB,IAAMqP,EAASV,IAAYnN,EAErB8N,EAAQX,EAAWnN,EAEnB+N,EAAQ9N,EAAK,GAoBnB,OAlBIV,KAAK4G,IAAI3H,GAAU,GAEnB2O,EAAU,EACV3O,EAAS,GAEJqP,EAASE,GAASF,GAAUE,EAGjCZ,GAAWnN,GAEL8N,EAAQC,IAAUD,GAASC,IAGjCZ,EAAUnN,GAGdpB,KAAKsO,MAAMC,QAAUA,EACrBvO,KAAKsO,MAAM1O,OAASA,EACbI,kDAGY,OAAOA,KAAKsO,MAAM1O,qDACjB,OAAOI,KAAKsO,MAAMC,+CACzB,OAAOvO,KAAKsO,4CACb,OAAQtO,KAAKuB,iBAAyC,IAAtBvB,KAAKsO,MAAM1O,sDAIvD,IAAMkB,EAAOd,KAAKgB,MACZD,EAAKf,KAAKiB,IACVX,EAAMN,KAAKsO,MAAME,OAkBvB,OAjBY,MAAR1N,GAAsB,MAANC,GAEhBT,EAAIZ,EAAI,EACRY,EAAIR,EAAI,GAYRsP,YAAqBtO,EAAKpB,EAAGoB,EAAKhB,EAAGiB,EAAGrB,EAAGqB,EAAGjB,EAAGE,KAAKsO,MAAM1O,OAAQI,KAAKsO,MAAMC,QAASjO,GAErFA,6CAMP,IAAIgB,EAAS,EACb,GAAItB,KAAKqP,cACT,CACI,IAAMb,EAASxO,KAAKsP,uBACpBhO,EAASX,KAAKe,MAAM8M,EAAO1O,EAAG0O,EAAO9O,GAAKiB,KAAKU,GAAK,OAIpDC,EAAMb,EAAAP,EAAAmO,EAAA3N,WAAA,mBAAAV,MAAAG,KAAAH,MAGV,OAAOsB,0CAKX,IADchB,EACdX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADoB,CAAED,EAAG,EAAGI,EAAG,GAErBgB,EAAOd,KAAKgB,MACZD,EAAKf,KAAKiB,IAEhB,IAAKH,EAAM,MAAM,IAAIK,MAAM,kCAC3B,IAAKJ,EACL,CAEI,IAAMwN,EAAUvO,KAAKsO,MAAMC,QACrBgB,EAAK5O,KAAK0E,IAAIkJ,GACdiB,EAAK7O,KAAKwE,IAAIoJ,GACdkB,EAAW3O,EAAKgB,cAGtB,OAFAxB,EAAIZ,EAAIoB,EAAKpB,EAAI6P,EAAKE,EACtBnP,EAAIR,EAAIgB,EAAKhB,EAAI0P,EAAKC,EACfnP,EAIX,GAAiC,mBAAtBS,EAAE,aAAmCf,KAAKqP,cAQrD,CACIK,YAAY5O,EAAKpB,EAAGoB,EAAKhB,EAAGiB,EAAGrB,EAAGqB,EAAGjB,EAAGQ,GACxC,IAAMqP,EAAU3P,KAAKsP,uBACfM,EAAKtP,EAAIZ,EAAIiQ,EAAQjQ,EACrBmQ,EAAKvP,EAAIR,EAAI6P,EAAQ7P,EAI3B,OAHAsP,YAAqBtO,EAAKpB,EAAGoB,EAAKhB,EAAG8P,EAAIC,EAAI/O,EAAKgB,cAAe9B,KAAK8P,aAAgBnP,KAAKU,GAAK,EAAK,EAAGf,GACxGA,EAAIZ,GAAKoB,EAAKpB,EACdY,EAAIR,GAAKgB,EAAKhB,EACPQ,EAXP,OAHA8O,YAAqBtO,EAAKpB,EAAGoB,EAAKhB,EAAGiB,EAAGrB,EAAGqB,EAAGjB,EAAGgB,EAAKgB,cAAe,EAAGxB,GACxEA,EAAIZ,GAAKoB,EAAKpB,EACdY,EAAIR,GAAKgB,EAAKhB,EACPQ,2CAiBf,IADeA,EACfX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADqB,CAAED,EAAG,EAAGI,EAAG,GAEtBgB,EAAOd,KAAKgB,MACZD,EAAKf,KAAKiB,IAEhB,IAAKH,EAAM,MAAM,IAAIK,MAAM,kCAC3B,IAAKJ,EACL,CAEI,IAAMwO,EAAK5O,KAAK0E,IAAIrF,KAAKsO,MAAMC,SACzBiB,EAAK7O,KAAKwE,IAAInF,KAAKsO,MAAMC,SACzB1M,EAAoBf,EAAKgB,cAAgB9B,KAAK4B,uBAAyB,EAG7E,OAFAtB,EAAIZ,EAAIoB,EAAKpB,EAAI6P,EAAK1N,EACtBvB,EAAIR,EAAIgB,EAAKhB,EAAI0P,EAAK3N,EACfvB,EAKX,GAFAoP,YAAY5O,EAAKpB,EAAGoB,EAAKhB,EAAGiB,EAAGrB,EAAGqB,EAAGjB,EAAGQ,GAEpCN,KAAKqP,cACT,CACI,IAAMM,EAAU3P,KAAKsP,uBACrBhP,EAAIZ,GAAKiQ,EAAQjQ,EACjBY,EAAIR,GAAK6P,EAAQ7P,EAGrB,OAAOQ,wCAKX,IADYA,EACZX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADkB,CAAED,EAAG,EAAGI,EAAG,GAEnBgB,EAAOd,KAAKgB,MACZD,EAAKf,KAAKiB,IAEhB,IAAKH,EAAM,MAAM,IAAIK,MAAM,kCAC3B,IAAKJ,EACL,CAEI,IAAMwN,EAAUvO,KAAKsO,MAAMC,QACrBgB,EAAK5O,KAAK0E,IAAIkJ,GACdiB,EAAK7O,KAAKwE,IAAIoJ,GACd1M,EAAoBf,EAAKgB,cAAgB9B,KAAK4B,uBAGpD,OAFAtB,EAAIZ,EAAIoB,EAAKpB,EAAI6P,EAAK1N,EACtBvB,EAAIR,EAAIgB,EAAKhB,EAAI0P,EAAK3N,EACfvB,EAIX,GAAiC,mBAAtBS,EAAE,YAET,OAAOA,EAGN,GAAKf,KAAKqP,cASf,CACIK,YAAY5O,EAAKpB,EAAGoB,EAAKhB,EAAGiB,EAAGrB,EAAGqB,EAAGjB,EAAGQ,GACxC,IAAMqP,EAAU3P,KAAKsP,uBACfM,EAAKtP,EAAIZ,EAAIiQ,EAAQjQ,EACrBmQ,EAAKvP,EAAIR,EAAI6P,EAAQ7P,EAI3B,OAHAsP,YAAqBrO,EAAGrB,EAAGqB,EAAGjB,EAAG8P,EAAIC,EAAI9O,EAAGe,cAAe9B,KAAK8P,cAAiBnP,KAAKU,GAAK,EAAO,EAAGf,GACrGA,EAAIZ,GAAKqB,EAAGrB,EACZY,EAAIR,GAAKiB,EAAGjB,EACLQ,EAZP,OAHA8O,YAAqBrO,EAAGrB,EAAGqB,EAAGjB,EAAGgB,EAAKpB,EAAGoB,EAAKhB,EAAGiB,EAAGe,cAAe,EAAGxB,GACtEA,EAAIZ,GAAKqB,EAAGrB,EACZY,EAAIR,GAAKiB,EAAGjB,EACLQ,0CAkBf,IADcE,IACdb,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACI,OAAIa,EAEOC,EAAAP,EAAAmO,EAAA3N,WAAA,gBAAAV,MAAAG,KAAAH,KAAoBQ,GAAe,IAAMR,KAAKsO,MAAMC,QAAU,IAAMvO,KAAKsO,MAAM1O,OAItFa,EAAAP,EAAAmO,EAAA3N,WAAA,gBAAAV,MAAAG,KAAAH,KAA2BQ,wCAKxB6N,w8BCzUR,IACM0B,EAA0B,cAC1BC,EAA8B,kBAI9BC,EAAqC,+BAK5CC,cAEF,SAAAA,EAAYC,EAAiBC,GAC7B,IAAA3Q,EAAA,mGAAAM,CAAAC,KAAAkQ,IACIzQ,EAAAQ,EAAAD,KAAAE,EAAAgQ,GAAA/P,KAAAH,QACKqQ,iBAAmBF,EACxB1Q,EAAK6Q,iBAAmBF,EAExB3Q,EAAK8Q,gBAAkB,CAAE7Q,EAAG,EAAGI,EAAG,GALtCL,wPAHgCwC,mDAYnBC,GAET,IAAMiO,EAAkBnQ,KAAKqQ,iBACvBG,EAAoBL,EAAgBM,uBAE1C,GAAIN,EAAgBO,eAEZF,IAAsBnO,IAC1B,CACI,IAAMsO,EAAsBR,EAAgBS,yBACtCR,EAAkBpQ,KAAKsQ,iBAG7B,OAFAF,EAAgBS,WAAWC,WAAWH,GACtCP,EAAgBW,eAAehB,EAAyB,CAAExL,OAAQoM,KAC3D,EAIf,IAAKR,EAAgBa,WAAW9O,EAAQ+O,oBAAsBT,IAAsBnO,IACpF,CACI,IAAMsO,EAAsBR,EAAgBS,yBACtCR,EAAkBpQ,KAAKsQ,iBAc7B,OAbAF,EAAgBc,gBAAgBP,EAAqBA,EAAoB/C,eACrE,SAACrJ,EAAQuF,EAAOqH,GAOHA,GAELf,EAAgBW,eAnDK,oBAmDyC,CAAExM,OAAQoM,OAG7E,EAGX,OAAO,0CAIKzO,GAEZ,OAAOlC,KAAKoR,aAAalP,2CAIbA,GAEZ,IAAMiO,EAAkBnQ,KAAKqQ,iBAC7B,GAAIF,EAAgBkB,kBAAmB,OAAO,EAC9C,GAAIlB,EAAgBO,cAAe,OAAO,EAG1C,IAD0BP,EAAgBM,uBAE1C,CACI,IAAML,EAAkBpQ,KAAKsQ,iBACvBgB,EAAiBlB,EAAgBmB,oBAEjCrQ,EADQkP,EAAgBS,WACXW,WAAWtP,EAAQxC,EAAGwC,EAAQpC,GAC7CwR,GAEApQ,EAAKuQ,aAAaH,EAAeI,uBAErCtB,EAAgBW,eAvFW,cAuF6B,CAAExM,OAAQrD,yCAK9DgB,GAER,IAAMiO,EAAkBnQ,KAAKqQ,iBAC7B,GAAIF,EAAgBkB,kBAAmB,OAAO,EAC9C,GAAIlB,EAAgBO,cAIhB,OADA1Q,KAAKsQ,iBAAiBS,eAAed,IAC9B,EAGX,IAAMO,EAAoBL,EAAgBM,uBAC1C,GAAIN,EAAgBa,WAAW9O,EAAQ+O,oBAAsBT,IAAsBnO,IACnF,CACI,IAAMsP,EAAexB,EAAgByB,kBAC/BjB,EAAsBR,EAAgBS,yBAc5C,OAbIe,GAAgBA,EAAaE,iBAExBF,EAAaG,oBAAoBnB,IAMlC3Q,KAAKuQ,gBAAgB7Q,EAAIwC,EAAQxC,EACjCM,KAAKuQ,gBAAgBzQ,EAAIoC,EAAQpC,GALjC6R,EAAaI,kBAQrB5B,EAAgB6B,iBAAiBrB,EAAqBH,GAAmB,IAClE,EAGX,OAAO,qCAIAtO,GAEP,IAAMiO,EAAkBnQ,KAAKqQ,iBACvBsB,EAAexB,EAAgByB,kBAC/BK,EAAe9B,EAAgB+B,wBACrC,GAAIP,GAAgBA,EAAaE,eACjC,CACI,IAAMpQ,EAAKS,EAAQxC,EAAIM,KAAKuQ,gBAAgB7Q,EACtC8B,EAAKU,EAAQpC,EAAIE,KAAKuQ,gBAAgBzQ,EAFhDsJ,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IAGI,QAAA0J,EAAAC,EAAmBmI,EAAaQ,eAAhCzI,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADWlI,EACXqI,EAAAO,MACI5I,EAAKxB,GAAK+B,EACVP,EAAKpB,GAAK0B,GANlB,MAAAuI,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAQItJ,KAAKuQ,gBAAgB7Q,EAAIwC,EAAQxC,EACjCM,KAAKuQ,gBAAgBzQ,EAAIoC,EAAQpC,OAIjCE,KAAKoS,WAAWpS,KAAKsQ,iBAAiBO,WAAYoB,EAAc/P,EAAQxC,EAAGwC,EAAQpC,sCAKhFoC,GAEP,IAAMiO,EAAkBnQ,KAAKqQ,iBACvBD,EAAkBpQ,KAAKsQ,iBACvBqB,EAAexB,EAAgByB,kBAE/BK,EAAe9B,EAAgB+B,wBAGrC,GAFA/B,EAAgBkC,qBAEZlC,EAAgBO,cAEhB,GAAIiB,EAAaE,eACjB,CACI,IAAMS,EAAQlC,EAAgBS,WACxBvQ,EAAM,GAFhBiK,GAAA,EAAAC,GAAA,EAAAC,OAAA5K,EAAA,IAGI,QAAA6K,EAAAC,EAAmBgH,EAAaQ,eAAhCzI,OAAAC,cAAAY,GAAAG,EAAAC,EAAAf,QAAAC,MAAAU,GAAA,EACA,KADWrJ,EACXwJ,EAAAZ,MACIwI,EAAMxB,WAAW5P,GACjBZ,EAAIyM,KAAK7L,IANjB,MAAA6I,GAAAS,GAAA,EAAAC,EAAAV,EAAA,YAAAQ,GAAA,MAAAI,EAAAX,QAAAW,EAAAX,SAAA,WAAAQ,EAAA,MAAAC,GAQIkH,EAAaI,iBACb3B,EAAgBW,eAAef,EAA6B,CAAEzL,OAAQjE,SAItE8P,EAAgBS,WAAWC,WAAWmB,GACtC7B,EAAgBW,eAAehB,EAAyB,CAAExL,OAAQ0N,SAKtEN,EAAaE,eAEbzB,EAAgBW,eApLa,gBAoL6B,CAAExM,OAAQoN,EAAaQ,iBAIjF/B,EAAgBW,eAzLS,YAyL6B,CAAExM,OAAQ0N,uCAI7DK,EAAOpR,EAAMxB,EAAGI,GAEvBJ,EAAI6S,YAAKrR,EAAKxB,EAAGA,EA3LiB,IA4LlCI,EAAIyS,YAAKrR,EAAKpB,EAAGA,EA5LiB,IA8LlC,IAAM2P,EAAWvO,EAAKY,cAJ1BuJ,GAAA,EAAAC,GAAA,EAAAC,OAAA1L,EAAA,IAKI,QAAA2L,EAAAC,EAAoB6G,EAAM3E,WAA1BjE,OAAAC,cAAA0B,GAAAG,EAAAC,EAAA7B,QAAAC,MAAAwB,GAAA,EACA,KADWmH,EACXhH,EAAA1B,MAEI,GAAI5I,IAASsR,EAAb,CAEA,IAAM/Q,EAAK/B,EAAI8S,EAAM9S,EACf8B,EAAK1B,EAAI0S,EAAM1S,EACfsF,EAAQzE,KAAKe,MAAMF,EAAIC,GAEvBgR,EAAuB,EAAXhD,EACZiD,EAASF,EAAM9S,EAAKiB,KAAK0E,IAAID,GAASqN,EAAY/S,EAClDiT,EAASH,EAAM1S,EAAKa,KAAKwE,IAAIC,GAASqN,EAAY3S,EAEpD2B,EAAKA,EAAKD,EAAKA,EAAKiO,EAAWA,EAAW,IAE1C/P,GAAKgT,EACL5S,GAAK6S,KArBjB,MAAA5I,GAAAuB,GAAA,EAAAC,EAAAxB,EAAA,YAAAsB,GAAA,MAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,MAAAC,GAyBIrK,EAAKxB,EAAIA,EACTwB,EAAKpB,EAAIA,uCAIFoQ,i7BC9NR,IACM0C,EAA0B,cAI1BC,EAAqC,+BAI5CC,cAEF,SAAAA,EAAY3C,EAAiBC,GAC7B,IAAA3Q,EAAA,mGAAAM,CAAAC,KAAA8S,IACIrT,EAAAQ,EAAAD,KAAAE,EAAA4S,GAAA3S,KAAAH,QAEKqQ,iBAAmBF,EACxB1Q,EAAK6Q,iBAAmBF,EAExB3Q,EAAKsT,iBAAmB,CACpBxE,QAAS,EACT3O,OAAQ,GAEZH,EAAKuT,cAAgB,KACrBvT,EAAKwT,eAAiB,CAAEvT,EAAG,EAAGI,EAAG,GACjCL,EAAKyT,UAAW,EAEhBzT,EAAK0T,8BAA+B,EACpC1T,EAAK2T,iCAAkC,EAf3C3T,wPAHgCwC,qEAqBDoR,GAG3B,OADArT,KAAKmT,6BAA+BE,EAC7BrT,+DAGuBqT,GAG9B,OADArT,KAAKoT,gCAAkCC,EAChCrT,0CAIEkC,GACb,IAAAoR,EAAAtT,KACUmQ,EAAkBnQ,KAAKqQ,iBACvBG,EAAoBL,EAAgBM,uBAE1C,GAAIN,EAAgBO,gBAEZF,IAAsBzL,KACtByL,IAAsB1L,KACtB0L,IAAsBxL,KAC1B,CACI,IAAM2L,EAAsBR,EAAgBS,yBACtCR,EAAkBpQ,KAAKsQ,iBAG7B,OAFAF,EAAgBS,WAAW1D,WAAWwD,GACtCP,EAAgBW,eAAe6B,EAAyB,CAACrO,OAAQoM,KAC1D,EAIf,GAAIH,IAAsBxL,KAAsBwL,IAAsBzL,IACtE,CACI,IAAM4L,EAAsBR,EAAgBS,yBACtCR,EAAkBpQ,KAAKsQ,iBAc7B,OAbAF,EAAgBc,gBAAgBP,EAAqBA,EAAoBvC,eACrE,SAAC7J,EAAQuF,EAAOqH,GAERmC,EAAKF,kCAAoCtJ,GAEzCsG,EAAgBS,WAAW1D,WAAWwD,GACtCP,EAAgBW,eAAe6B,EAAyB,CAACrO,OAAQoM,KAE5DQ,GAELf,EAAgBW,eA1EK,oBA0EyC,CAACxM,OAAQoM,OAG5E,EAGX,OAAO,0CAIKzO,GAEZ,OAAOlC,KAAKoR,aAAalP,uCAIjBA,GAER,IAAMiO,EAAkBnQ,KAAKqQ,iBAC7B,GAAIF,EAAgBkB,kBAAmB,OAAO,EAC9C,GAAIlB,EAAgBO,cAIhB,OADA1Q,KAAKsQ,iBAAiBS,eAAe8B,IAC9B,EAGX,IAAMrC,EAAoBL,EAAgBM,uBAC1C,IAAKN,EAAgBa,WAAW9O,EAAQ+O,oBAAsBT,IAAsBnO,IACpF,CACI,IACMiQ,EADkBtS,KAAKsQ,iBACCO,WAExBF,EAAsBR,EAAgBS,yBAE5C5Q,KAAK+S,iBAAiBxE,QAAU,EAChCvO,KAAK+S,iBAAiBnT,OAAS,EAC/BI,KAAKgT,cAAgB,KACrBhT,KAAKkT,UAAW,EAChBlT,KAAKiT,eAAevT,EAAIwC,EAAQxC,EAChCM,KAAKiT,eAAenT,EAAIoC,EAAQpC,EAEhC,IAAMyT,EAAajB,EAAMkB,WAAW7C,EAAqB3Q,KAAKiT,gBAI9D,OAFA9C,EAAgB6B,iBAAiBuB,EAAYzO,KAA+B,GAC5EqL,EAAgBsD,mBAAkB,IAC3B,EAEN,GAAIjD,IAAsB1L,IAC/B,CACI,IAAM6L,EAAsBR,EAAgBS,yBAe5C,OAbA5Q,KAAK+S,iBAAiBxE,QAAUoC,EAAoB+C,sBACpD1T,KAAK+S,iBAAiBnT,OAAS+Q,EAAoBgD,qBACnD3T,KAAKgT,cAAgBrC,EAAoB3D,YACzChN,KAAKkT,UAAW,EAChBlT,KAAKiT,eAAevT,EAAIwC,EAAQxC,EAChCM,KAAKiT,eAAenT,EAAIoC,EAAQpC,EAEhC6Q,EAAoBiD,oBAAoB,GACxCjD,EAAoBkD,mBAAmB,GACvClD,EAAoB1D,UAAUjN,KAAKiT,gBAEnC9C,EAAgB6B,iBAAiBrB,EAAqBH,GAAmB,GACzEL,EAAgBsD,mBAAkB,IAC3B,EAEN,GAAIjD,IAAsBzL,IAC/B,CACI,IAAM4L,EAAsBR,EAAgBS,yBAU5C,OARA5Q,KAAK+S,iBAAiBxE,QAAUoC,EAAoB+C,sBACpD1T,KAAK+S,iBAAiBnT,OAAS+Q,EAAoBgD,qBACnD3T,KAAKgT,cAAgBrC,EAAoB3D,YACzChN,KAAKkT,UAAW,EAChBlT,KAAKiT,eAAevT,EAAIwC,EAAQxC,EAChCM,KAAKiT,eAAenT,EAAIoC,EAAQpC,EAEhCqQ,EAAgB6B,iBAAiBrB,EAAqBH,GAAmB,IAClE,EAGX,OAAO,qCAIAtO,GAEP,IAAMiO,EAAkBnQ,KAAKqQ,iBACvB4B,EAAe9B,EAAgB+B,wBAC/B4B,EAAa3D,EAAgB4D,sBAE/BD,IAAe/O,IAEfkN,EAAavD,qBAAqBxM,EAAQxC,EAAGwC,EAAQpC,GAEhDgU,IAAehP,KAEpB9E,KAAKgU,0BAA0B/B,EAAc6B,EAAY5R,EAASiO,qDAIhD8B,EAAc6B,EAAY5R,EAASiO,GAGzD,GAD4BA,EAAgB8D,2BAChB5R,IAC5B,CACI,IAAM6R,EAAwB/D,EAAgBgE,2BAG9C,GAAIlC,EAAajF,cAAgBhN,KAAKgT,cAElCf,EAAa2B,oBAAoB5T,KAAK+S,iBAAiBxE,SACvD0D,EAAa4B,mBAAmB7T,KAAK+S,iBAAiBnT,aAGrD,GAAIqS,EAAanF,gBAAkBoH,EACxC,CACI,IAAMpT,EAAOmR,EAAanF,cACpBrL,EAAKX,EAAKpB,EAAIwC,EAAQxC,EACtB8B,EAAKV,EAAKhB,EAAIoC,EAAQpC,EACtByO,EAAU5N,KAAKU,GAAKV,KAAKe,MAAMF,EAAIC,GACzCwQ,EAAa2B,oBAAoBrF,GACjC0D,EAAahF,UAAUiH,QAIvBjC,EAAa2B,oBAAoB,GACjC3B,EAAa4B,mBAAmB,GAChC5B,EAAahF,UAAUiH,QAK3BlU,KAAKiT,eAAevT,EAAI6S,YAAKvS,KAAKiT,eAAevT,EAAGwC,EAAQxC,EA3M9B,IA4M9BM,KAAKiT,eAAenT,EAAIyS,YAAKvS,KAAKiT,eAAenT,EAAGoC,EAAQpC,EA5M9B,IA8M1BmS,EAAajF,cAAgBhN,KAAKiT,iBAElChB,EAAa2B,oBAAoB,GACjC3B,EAAa4B,mBAAmB,GAEhC5B,EAAahF,UAAUjN,KAAKiT,oDAM7B/Q,GACX,IAAAkS,EAAApU,KACUmQ,EAAkBnQ,KAAKqQ,iBACvB4B,EAAe9B,EAAgB+B,wBAC/B4B,EAAa3D,EAAgB4D,sBAC7BM,EAAYrU,KAAKkT,SAEvB/C,EAAgBkC,qBACZyB,IAAehP,KAEfqL,EAAgBsD,mBAAkB,GAGtC,IAAMrD,EAAkBpQ,KAAKsQ,iBAC7B,GAAIH,EAAgBO,cAIhB,OAFAN,EAAgBS,WAAW1D,WAAW8E,QACtC7B,EAAgBW,eAAe6B,EAAyB,CAACrO,OAAQ0N,IAIrE,GAAI6B,IAAe/O,IAEfqL,EAAgBW,eAnPgB,mBAmP6B,CAACxM,OAAQ0N,QAG1E,CACI,IAAMqC,EAASrC,EAAajF,YAC5B,GAAKsH,GAAUA,IAAWtU,KAAKiT,gBA2B1B,GAAIqB,IAAWtU,KAAKgT,cACzB,CACI,IAAM1B,EAAiBlB,EAAgBmB,oBACnC8C,GAAa/C,GAEbW,EAAasC,aAAajD,EAAekD,uBAE7CpE,EAAgBc,gBAAgBe,EAAcoC,EAAY,KAAOpC,EAAa7D,eAC1E,SAAC7J,EAAQuF,EAAOqH,GAERiD,EAAKhB,kCAAoCtJ,GAEzCsG,EAAgBS,WAAW1D,WAAW8E,GACtC7B,EAAgBW,eAAe6B,EAAyB,CAACrO,OAAQ0N,KAE5DoC,EAELjE,EAAgBW,eAxSL,cAwS6C,CAACxM,OAAQ0N,IAE5Dd,GAELf,EAAgBW,eAzSF,iBAyS6C,CAACxM,OAAQ0N,WA/CpF,CACI,GAAIjS,KAAKmT,6BAIL,OAFA/C,EAAgBS,WAAW1D,WAAW8E,QACtC7B,EAAgBW,eAAe6B,EAAyB,CAACrO,OAAQ0N,IAOjE,GAFAA,EAAahF,UAAU,MAEnBoH,EACJ,CACI,IAAM/C,EAAiBlB,EAAgBmB,oBACnCD,GAEAW,EAAasC,aAAajD,EAAekD,uBAE7CpE,EAAgBW,eA/QD,cA+QyC,CAACxM,OAAQ0N,SAIjE7B,EAAgBW,eAhRE,iBAgRyC,CAACxM,OAAQ0N,2CAiC7Ea,+3BCxTR,IAAM2B,EAA4B,eAEnCC,cAEF,SAAAA,EAAYnS,GACZ,mGAAAxC,CAAAC,KAAA0U,GAAAzU,EAAAD,KAAAE,EAAAwU,GAAAvU,KAAAH,KACUuC,0PAJoB2B,IAAMC,kDAUhC,IAAMtB,EAAW7C,KAAKuC,MAAMM,SACtB0L,EAAUvO,KAAKuC,MAAMgM,SAAW5N,KAAKU,GACrCsT,EAAS3U,KAAKuC,MAAMoS,QAAU,EAC9BtM,EAAOrI,KAAKuC,MAAM8F,MAAQ,GAC1BnF,EAAQlD,KAAKuC,MAAMW,OAAS,UAE5BzB,EAAKd,KAAK0E,IAAIkJ,GACd/M,EAAKb,KAAKwE,IAAIoJ,GACd7O,EAAImD,EAASnD,EAAI+B,EAAKkT,EACtB7U,EAAI+C,EAAS/C,EAAI0B,EAAKmT,EAItBC,EAAsB,GADZnT,EAAK4G,GAIfhF,EAAcrD,KAAKuC,MAAMc,YACzBC,EAAatD,KAAKuC,MAAMe,WACxBE,EAAgBxD,KAAKuC,MAAMiB,cAEjC,OACIhB,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,QACIwC,EAAG,IAAMxF,EAAI,IAAMI,EACf,MAAQJ,EAAIkV,GAAa,KAAO9U,EAAIa,KAAKwE,IAAIoJ,EAAU5N,KAAKU,GAAK,GAAKgH,EAAO,GAC7E,MAAQ3I,EAAIkV,GAAa,KAAO9U,EAAIa,KAAKwE,IAAIoJ,EAAU5N,KAAKU,GAAK,GAAKgH,EAAO,GAC7E,KACJpF,KAAK,cACLE,OAAQD,EACRK,OAAO,UACPF,YAAaA,EAAc,SAAAiB,IAETA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDC,KAAOiQ,EACbpR,EAAYiB,IACZ,KACJhB,WAAYA,EAAa,SAAAgB,IAEPA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDC,KAAOiQ,EACbnR,EAAWgB,IACX,KACJd,cAAeA,0CAMpBkR,m2BC5DTG,cAEF,SAAAA,EAAYtS,GAAO,mGAAAxC,CAAAC,KAAA6U,GAAA5U,EAAAD,KAAAE,EAAA2U,GAAA1U,KAAAH,KAAQuC,0PAFF2B,IAAM4Q,sDAO3B,OACItS,EAAAC,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAAIuV,UAAW/U,KAAKuC,MAAMwS,UAAWrR,MAAO1D,KAAKuC,MAAMmB,MACvEsR,MAAM,6BACNtM,MAAM,KAAKC,OAAO,KAAKsM,QAAQ,aAC/BzS,EAAAC,EAAAC,cAAA,QAAMwC,EAAE,yRAKT2P,i5BCZR,IAAMK,EAAkC,sBAIzCC,cAEF,SAAAA,EAAYhF,EAAiBC,GAC7B,IAAA3Q,EAAA,mGAAAM,CAAAC,KAAAmV,IACI1V,EAAAQ,EAAAD,KAAAE,EAAAiV,GAAAhV,KAAAH,QAEKqQ,iBAAmBF,EACxB1Q,EAAK6Q,iBAAmBF,EAExB3Q,EAAK2V,aAAe,KACpB3V,EAAK4V,oBAAsB,KAC3B5V,EAAKwT,eAAiB,CAAEvT,EAAG,EAAGI,EAAG,GARrCL,wPAHuCwC,kDAe3BC,GAER,IAAMiO,EAAkBnQ,KAAKqQ,iBAG7B,GAF0BF,EAAgBM,yBAEhBgE,IAC1B,CACI,IAAM9D,EAAsBR,EAAgBS,yBAQ5C,OAPA5Q,KAAKqV,oBAAsB1E,EAC3B3Q,KAAKiT,eAAevT,EAAIwC,EAAQxC,EAChCM,KAAKiT,eAAenT,EAAIoC,EAAQpC,EAChCE,KAAKoV,aAAepV,KAAKiT,eAEzB9C,EAAgB6B,iBAAiBrB,EAAqB8D,KAA2B,GACjFtE,EAAgBsD,mBAAkB,IAC3B,EAGX,OAAO,qCAIAvR,GAEP,IAAMiO,EAAkBnQ,KAAKqQ,iBAG7B,GAFmBF,EAAgB4D,wBAEhBU,IAGf,GAD4BtE,EAAgB8D,2BAChB5R,IAC5B,CACI,IAAM6R,EAAwB/D,EAAgBgE,2BAE9CnU,KAAKoV,aAAelB,OAIpBlU,KAAKiT,eAAevT,EAAI6S,YAAKvS,KAAKiT,eAAevT,EAAGwC,EAAQxC,EAvD1B,IAwDlCM,KAAKiT,eAAenT,EAAIyS,YAAKvS,KAAKiT,eAAenT,EAAGoC,EAAQpC,EAxD1B,IA0D9BE,KAAKoV,eAAiBpV,KAAKiT,iBAE3BjT,KAAKoV,aAAepV,KAAKiT,mDAO9B/Q,GAEP,IAAMiO,EAAkBnQ,KAAKqQ,iBACvByD,EAAa3D,EAAgB4D,sBACnC5D,EAAgBkC,qBAEZyB,IAAeW,MAEVzU,KAAKoV,cAAgBpV,KAAKoV,eAAiBpV,KAAKiT,iBAMjDjT,KAAKsQ,iBAAiBO,WAAWyE,aAAatV,KAAKoV,cACnDpV,KAAKsQ,iBAAiBS,eAAemE,EAAiC,CAAE3Q,OAAQvE,KAAKoV,gBAGzFpV,KAAKoV,aAAe,+CAIT,OAAOpV,KAAKoV,kDAGpBD,8MC9ETI,0LAEiBjD,GAEf,GAAY,WADhB3S,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD+B,UAEL,MAAM,IAAIwB,MAAM,uBAEtC,IAAMqU,EA3Bd,SAA2BlD,GAEvB,IAAImD,EAAY,GACZC,EAAYpD,EAAMqD,eACtBF,EAAU1I,KAAK2I,GACf,IAAI,IAAI/P,EAAI,EAAGA,EAAI8P,EAAU7V,OAAQ+F,IACrC,KAAAyD,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IACI,QAAA0J,EAAAC,EAAmB8I,EAAMzF,WAAzBnD,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADWwB,EACXrB,EAAAO,MACOc,EAAK5J,OAASyU,EAAU9P,KAEnB8P,EAAUG,SAAShL,EAAK3J,MAExBwU,EAAU1I,KAAKnC,EAAK3J,OAPpC,MAAA8I,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,IAYA,OAAOmM,EASkBI,CAAkBvD,GAKvC,IAAMwD,EAAkBxD,EAAM3E,WAAWoI,OAJzC,SAAqB7U,GAEjB,OAAQsU,EAAcI,SAAS1U,KAK7B8U,EAAiBR,EAAc5V,OAC/BqW,EAAmBH,EAAgBlW,OACnCsW,EAAY5D,EAAM3E,WAAW/N,OAC7BuW,EAASxV,KAAKoD,IAAIiS,EAAgBC,GACxC,GAAgB,GAAbC,EAAH,CAKA,IAAIlT,EAGAA,EAFDgT,EAAiB,IAAMC,EAAmB,GAEhCE,EAAO,EAAI,GAAK,GAIfA,EAAO,EAAK,GAAK,GAG/B,IAAIC,EAAc,EAClB,GAAsB,GAAlBJ,EACJ,CACI,IAAIK,EAAS,EAAG1V,KAAKU,GAAG6U,EAD5B3L,GAAA,EAAAC,GAAA,EAAAC,OAAA5K,EAAA,IAEI,QAAA6K,EAAAC,EAAkB2H,EAAM3E,WAAxBjE,OAAAC,cAAAY,GAAAG,EAAAC,EAAAf,QAAAC,MAAAU,GAAA,EACA,KADUrJ,EACVwJ,EAAAZ,MACI5I,EAAKpB,EAAIa,KAAKwE,IAAIkR,EAAOD,EAAczV,KAAKU,IAAI2B,EAChD9B,EAAKxB,EAAIiB,KAAK0E,IAAIgR,EAAOD,EAAczV,KAAKU,IAAI2B,EAChDoT,GAAe,GANvB,MAAArM,GAAAS,GAAA,EAAAC,EAAAV,EAAA,YAAAQ,GAAA,MAAAI,EAAAX,QAAAW,EAAAX,SAAA,WAAAQ,EAAA,MAAAC,QAUA,CACI,IAAM6L,EAAY,EAAG3V,KAAKU,GAAG2U,EACvBO,EAAY,EAAG5V,KAAKU,GAAG4U,EAE7BG,EAAc,EAJlB,IAAA/K,GAAA,EAAAC,GAAA,EAAAC,OAAA1L,EAAA,IAKI,QAAA2L,EAAAC,EAAkB+J,EAAlB9L,OAAAC,cAAA0B,GAAAG,EAAAC,EAAA7B,QAAAC,MAAAwB,GAAA,EACA,KADUnK,EACVsK,EAAA1B,MACI5I,EAAKpB,EAAIa,KAAKwE,IAAImR,EAAUF,EAAczV,KAAKU,IAAI2B,EACnD9B,EAAKxB,EAAIiB,KAAK0E,IAAIiR,EAAUF,EAAczV,KAAKU,IAAI2B,EACnDoT,GAAe,GATvB,MAAArM,GAAAuB,GAAA,EAAAC,EAAAxB,EAAA,YAAAsB,GAAA,MAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,MAAAC,GAWI6K,EAAc,EAXlB,IAAA1K,GAAA,EAAAC,GAAA,EAAAC,OAAA/L,EAAA,IAYI,QAAAgM,EAAAC,EAAkBgK,EAAlBpM,OAAAC,cAAA+B,GAAAG,EAAAC,EAAAlC,QAAAC,MAAA6B,GAAA,EACA,KADUxK,EACV2K,EAAA/B,MACI5I,EAAKpB,EAAIa,KAAKwE,IAAIoR,EAAUH,EAAczV,KAAKU,KAAK2B,EAAS,KAC7D9B,EAAKxB,EAAIiB,KAAK0E,IAAIkR,EAAUH,EAAczV,KAAKU,KAAK2B,EAAS,KAC7DoT,GAAe,GAhBvB,MAAArM,GAAA4B,GAAA,EAAAC,EAAA7B,EAAA,YAAA2B,GAAA,MAAAI,EAAA9B,QAAA8B,EAAA9B,SAAA,WAAA2B,EAAA,MAAAC,mDA8BO2J,8MCjGTiB,aAEF,SAAAA,iGAAczW,CAAAC,KAAAwW,4DAEJC,GAEN,MAAM,IAAItV,MAAM,8EAGVsV,GAEN,MAAM,IAAItV,MAAM,iFAITqV,84BCIAE,cAfX,SAAAA,EAAYnU,GAAO,mGAAAxC,CAAAC,KAAA0W,GAAAzW,EAAAD,KAAAE,EAAAwW,GAAAvW,KAAAH,KAAQuC,0PAFN2B,IAAM4Q,sDAOvB,OACI6B,EAAAlU,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAAIuV,UAAW/U,KAAKuC,MAAMwS,UAAWrR,MAAO1D,KAAKuC,MAAMmB,MACvEsR,MAAM,6BACNtM,MAAM,KAAKC,OAAO,KAAKsM,QAAQ,aAC/B0B,EAAAlU,EAAAC,cAAA,QAAMwC,EAAE,+OACRyR,EAAAlU,EAAAC,cAAA,QAAMwC,EAAE,u3BCIT0R,cAdX,SAAAA,EAAYrU,GAAO,mGAAAsU,CAAA7W,KAAA4W,GAAAE,EAAA9W,KAAA+W,EAAAH,GAAAzW,KAAAH,KAAQuC,0PAFL2B,IAAM4Q,sDAOxB,OACI6B,EAAAlU,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAAIuV,UAAW/U,KAAKuC,MAAMwS,UAAWrR,MAAO1D,KAAKuC,MAAMmB,MACvEsR,MAAM,6BACNtM,MAAM,KAAKC,OAAO,KAAKsM,QAAQ,aAC/B0B,EAAAlU,EAAAC,cAAA,QAAMwC,EAAE,ugCCyCT8R,cA7CX,SAAAA,EAAYzU,GACZ,IAAA9C,MAAA,mGAAAwX,CAAAjX,KAAAgX,KACIhX,MAAAP,MAAAyX,EAAAF,GAAA7W,KAAAH,KAAMuC,mDAED4U,SAAW1X,EAAK0X,SAASC,KAAdC,IAAA5X,KAChBA,EAAK6X,UAAY7X,EAAK6X,UAAUF,KAAfC,IAAA5X,KAJrBA,wPAHqByE,IAAMC,kDAUlBG,GAEL,IAAMiT,EAAkBvX,KAAKuC,MAAMgV,gBAC7BC,EAA0C,IAA7BD,EAAgBE,WACnCF,EAAgBG,SAASF,qCAGnBlT,GAEN,IAAMiT,EAAkBvX,KAAKuC,MAAMgV,gBAC7BC,EAAyC,IAA7BD,EAAgBE,WAClCF,EAAgBG,SAASF,oCAMzB,IACMA,EAAY,KAAO,GADDxX,KAAKuC,MAAMgV,gBACWE,YAAc,IAAIE,QAAQ,GAExE,OACIhB,EAAAlU,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAChBuV,UAAW6C,IAAMC,eACvB,IAAM7X,KAAKuC,MAAMwS,UACXrR,MAAO1D,KAAKuC,MAAMmB,OAClBiT,EAAAlU,EAAAC,cAACoV,EAAA,EAAD,CAAY/C,UAAW6C,IAAMG,YAAaC,MAAM,UAAUC,QAASjY,KAAKmX,UACpER,EAAAlU,EAAAC,cAACwV,EAAD,OAEJvB,EAAAlU,EAAAC,cAACoV,EAAA,EAAD,CAAY/C,UAAW6C,IAAMG,YAAaC,MAAM,WAAWC,QAASjY,KAAKsX,WACrEX,EAAAlU,EAAAC,cAACyV,EAAD,OAEJxB,EAAAlU,EAAAC,cAAA,SAAOqS,UAAW6C,IAAMQ,YAAaZ,s2BC9BtCa,cAdX,SAAAA,EAAY9V,GAAO,mGAAA+V,CAAAtY,KAAAqY,GAAAE,EAAAvY,KAAAwY,EAAAH,GAAAlY,KAAAH,KAAQuC,0PAFJ2B,IAAM4Q,sDAOzB,OACI6B,EAAAlU,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAAIuV,UAAW/U,KAAKuC,MAAMwS,UAAWrR,MAAO1D,KAAKuC,MAAMmB,MACvEsR,MAAM,6BACNtM,MAAM,KAAKC,OAAO,KAAKsM,QAAQ,aAC/B0B,EAAAlU,EAAAC,cAAA,QAAMwC,EAAE,yiCCPxB,IAqCeuT,cAjCX,SAAAA,EAAYlW,GACZ,IAAA9C,MAAA,mGAAAiZ,CAAA1Y,KAAAyY,KACIzY,MAAAP,MAAAkZ,EAAAF,GAAAtY,KAAAH,KAAMuC,mDAED0V,QAAUxY,EAAKwY,QAAQb,KAAbwB,IAAAnZ,KAHnBA,wPAH4ByE,IAAMC,iDAS1BG,GAEoBtE,KAAKuC,MAAMgV,gBACnBsB,UAAU,EAAG,oCAM7B,IAAMtB,EAAkBvX,KAAKuC,MAAMgV,gBAEnC,OACIZ,EAAAlU,EAAAC,cAACoV,EAAA,EAAD,CAAYtY,GAAIQ,KAAKuC,MAAM/C,GACvBuV,UAAW6C,IAAMkB,oBACb,IAAM9Y,KAAKuC,MAAMwS,UACrBrR,MAAO1D,KAAKuC,MAAMmB,MAClBsU,MAAO,mBACPe,SAAUpY,KAAK4G,IAAIgQ,EAAgByB,cA5B5B,IA6BHrY,KAAK4G,IAAIgQ,EAAgB0B,cA7BtB,GA8BPhB,QAASjY,KAAKiY,SACdtB,EAAAlU,EAAAC,cAACwW,EAAD,u1BC/BVC,cAEF,SAAAA,EAAY5W,GACZ,mGAAA6W,CAAApZ,KAAAmZ,GAAAE,EAAArZ,KAAAsZ,EAAAH,GAAAhZ,KAAAH,KACUuC,0PAJwB2B,IAAMC,kDAUpC,IAAMoT,EAAkBvX,KAAKuC,MAAMgV,gBAEnC,OACIZ,EAAAlU,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAChBuV,UAAW6C,IAAM2B,iBAC5B,IAAMvZ,KAAKuC,MAAMwS,UACNrR,MAAO1D,KAAKuC,MAAMmB,OAClBiT,EAAAlU,EAAAC,cAAC8W,EAAD,CAAYzE,UAAW6C,IAAM6B,wBACzBlC,gBAAiBA,IACrBZ,EAAAlU,EAAAC,cAACgX,EAAD,CAAmB3E,UAAW6C,IAAM+B,cAChCpC,gBAAiBA,IACpBvX,KAAKuC,MAAMqX,+CAMbT,m2BC/BTU,cAEF,SAAAA,EAAYtX,GAAO,mGAAAxC,CAAAC,KAAA6Z,GAAA5Z,EAAAD,KAAAE,EAAA2Z,GAAA1Z,KAAAH,KAAQuC,0PAFJ2B,IAAM4Q,sDAOzB,OACItS,EAAAC,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAAIuV,UAAW/U,KAAKuC,MAAMwS,UAAWrR,MAAO1D,KAAKuC,MAAMmB,MACvEsR,MAAM,6BACNtM,MAAM,KAAKC,OAAO,KAAKsM,QAAQ,aAC/BzS,EAAAC,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,kMACvB1C,EAAAC,EAAAC,cAAA,WAASO,KAAK,UAAU6W,OAAO,oCAC/BtX,EAAAC,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,kGACvB1C,EAAAC,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAG,obACxB1C,EAAAC,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAG,4sCACxB1C,EAAAC,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAG,i3BACxB1C,EAAAC,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,0FACvB1C,EAAAC,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,iTACvB1C,EAAAC,EAAAC,cAAA,UAAQO,KAAK,UAAUL,GAAG,OAAOE,GAAG,OAAOC,EAAE,QAC7CP,EAAAC,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,mTACvB1C,EAAAC,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,6IAKxB2U,m2BC1BTE,cAEF,SAAAA,EAAYxX,GAAO,mGAAAxC,CAAAC,KAAA+Z,GAAA9Z,EAAAD,KAAAE,EAAA6Z,GAAA5Z,KAAAH,KAAQuC,0PAFN2B,IAAM4Q,sDAOvB,OACItS,EAAAC,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAAIuV,UAAW/U,KAAKuC,MAAMwS,UAAWrR,MAAO1D,KAAKuC,MAAMmB,MACvEsR,MAAM,6BACNtM,MAAM,KAAKC,OAAO,KAAKsM,QAAQ,aAC/BzS,EAAAC,EAAAC,cAAA,QAAMwC,EAAE,4JAKT6U,8MCCAC,aAjBX,SAAAA,iGAAcja,CAAAC,KAAAga,iEAUCC,EAAUC,EAAUC,GAE/B,OAAOC,QAAQC,QAAQF,yCAGX,MAAO,u1BCfrBG,cAEF,SAAAA,EAAYC,GACZ,IAAA9a,EAAA,mGAAA+a,CAAAxa,KAAAsa,IACI7a,EAAAQ,EAAAD,KAAAE,EAAAoa,GAAAna,KAAAH,QAEKya,KAAOF,EAHhB9a,wPAH0Bua,gDASXU,EAASP,GAEpB,OAAOA,6CAGQO,GAEfA,EAAQC,SAASC,iBAAiBC,uDAGtBH,EAASI,gDAKLJ,GAEhBA,EAAQC,SAASC,iBAAiBC,sDAIvBZ,EAAUC,EAAUC,GAE/B,IASIY,EATER,EAAMva,KAAKya,KACXC,EAAUH,EAAIS,aACdC,EAAgBP,EAAQQ,mBACxB5Z,EAAStB,KAAKmb,eAAeT,EAASP,GAoB5C,OAlBAna,KAAKob,mBAAmBV,GAExB1a,KAAKqb,gBAAgBX,EAASpZ,GAK1ByZ,EAFAd,EAEcA,EAASqB,UAAU,EAAGrB,EAASra,OAASsa,EAASta,QAIjD0B,EAAM,UAAN,KAGlBiZ,EAAIS,aAAaO,eAAeR,GAEhC/a,KAAKwb,oBAAoBd,GAElBO,uCAIAX,oCClDR,SAASmB,EAAelB,GAC/B,IADoCmB,EACpC/b,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GADqDgc,EACrDhc,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD8D,KAEtDic,OAAOC,QAAQC,KAAKC,SAAS,wBAEdxB,EAAIW,mBACZc,qBAAqBnL,WAAWzD,QAClCsO,EAODnB,EAAIK,iBAAiBC,gBALrBN,EAAIK,iBAAiBxN,QACrBmN,EAAIS,aAAaO,eAAe,OAMhCI,GAAUA,KA1BtBM,EAAA/W,EAAAgX,EAAA,sBAAAT,koCCOMU,cAOF,SAAAA,EAAYvU,EAAWC,GACvB,IAAApI,EAAA,mGAAAM,CAAAC,KAAAmc,IACI1c,EAAAQ,EAAAD,KAAAE,EAAAic,GAAAhc,KAAAH,KAAM4H,EAAWC,KAEZuU,OAAS,GAHlB3c,wPAR2BkI,mDAmBdzG,GAET,GAAIlB,KAAKoc,OAAOxc,QAAU,EAAG,MAAM,IAAIuB,MAAM,wCAG7C,GAA2B,IAAvBnB,KAAKoc,OAAOxc,OAAhB,CAEA,IAAM+F,EAAI3F,KAAKoc,OAAOC,QAAQnb,GAC9B,GAAIyE,EAAI,EACR,CAEI,IAAM2W,EAAOtc,KAAKoc,OAAO,GACzBpc,KAAKoc,OAAO,GAAKlb,EACjBlB,KAAKoc,OAAOzW,GAAK2W,OAEhB,GAAI3W,EAAI,EAET,MAAM,IAAIxE,MAAM,kFAOP,OAAOnB,KAAKoc,OAAOxc,OAAS,EAAII,KAAKoc,OAAO,GAAK,4CAMnDrW,GAEX,OAAO/F,KAAKoc,OAAOrW,mCAIf7E,GAGJ,OADAlB,KAAKoc,OAAOrP,KAAK7L,GACjBT,EAAAP,EAAAic,EAAAzb,WAAA,UAAAV,MAAAG,KAAAH,KAAqBkB,sCAIdA,GAEPT,EAAAP,EAAAic,EAAAzb,WAAA,aAAAV,MAAAG,KAAAH,KAAiBkB,GACjB,IAAMyE,EAAI3F,KAAKoc,OAAOC,QAAQnb,GAC1ByE,GAAK,GAAG3F,KAAKoc,OAAOG,OAAO5W,EAAG,wCAMlClF,EAAAP,EAAAic,EAAAzb,WAAA,aAAAV,MAAAG,KAAAH,MACAA,KAAKoc,OAAOxc,OAAS,qCAMrB,OAAOI,KAAKoc,4CAILD,oCC1FfF,EAAA/W,EAAAgX,EAAA,sBAAAM,IAIO,SAASA,EAAaC,EAAUC,GAEnCC,EAAYF,EA0EL,kCAAoCG,mBA1ENF,IAyDlC,SAASC,EAAYF,EAAUI,GAElC,IAAMC,EAAUC,SAASra,cAAc,KACjCsa,EAAcH,EAAIR,QAAQ,KAChCQ,EAAMA,EAAIvB,UAAU,EAAG0B,EAAc,GAAK,6DAA+DP,EAAW,IAAMI,EAAIvB,UAAU0B,EAAc,GACtJF,EAAQG,aAAa,OAAQJ,GAC7BC,EAAQG,aAAa,WAAYR,GAEjCK,EAAQpZ,MAAMwZ,QAAU,OACxBH,SAASI,KAAKC,YAAYN,GAE1BA,EAAQO,QACRN,SAASI,KAAKG,YAAYR,i2BCzExBS,cAEF,SAAAA,EAAYhb,GAAO,mGAAAxC,CAAAC,KAAAud,GAAAtd,EAAAD,KAAAE,EAAAqd,GAAApd,KAAAH,KAAQuC,0PAFD2B,IAAM4Q,sDAO5B,OACItS,EAAAC,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAAIuV,UAAW/U,KAAKuC,MAAMwS,UAAWrR,MAAO1D,KAAKuC,MAAMmB,MACvEsR,MAAM,6BACNtM,MAAM,KAAKC,OAAO,KAAKsM,QAAQ,aAC/BzS,EAAAC,EAAAC,cAAA,QAAMwC,EAAE,yKAKTqY,m2BChBTC,cAEF,SAAAA,EAAYjb,GAAO,mGAAAxC,CAAAC,KAAAwd,GAAAvd,EAAAD,KAAAE,EAAAsd,GAAArd,KAAAH,KAAQuC,0PAFT2B,IAAM4Q,sDAOpB,OACItS,EAAAC,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAAIuV,UAAW/U,KAAKuC,MAAMwS,UAAWrR,MAAO1D,KAAKuC,MAAMmB,MACvEsR,MAAM,6BACNtM,MAAM,KAAKC,OAAO,KAAKsM,QAAQ,aAC/BzS,EAAAC,EAAAC,cAAA,QAAMwC,EAAE,+IAKTsY,m2BChBTC,cAEF,SAAAA,EAAYlb,GAAO,mGAAAxC,CAAAC,KAAAyd,GAAAxd,EAAAD,KAAAE,EAAAud,GAAAtd,KAAAH,KAAQuC,0PAFJ2B,IAAM4Q,sDAOzB,OACItS,EAAAC,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAAIuV,UAAW/U,KAAKuC,MAAMwS,UAAWrR,MAAO1D,KAAKuC,MAAMmB,MACvEsR,MAAM,6BACNtM,MAAM,KAAKC,OAAO,KAAKsM,QAAQ,aAC/BzS,EAAAC,EAAAC,cAAA,QAAMwC,EAAE,6HAKTuY,m2BChBTC,cAEF,SAAAA,EAAYnb,GAAO,mGAAAxC,CAAAC,KAAA0d,GAAAzd,EAAAD,KAAAE,EAAAwd,GAAAvd,KAAAH,KAAQuC,0PAFD2B,IAAM4Q,sDAO5B,OACItS,EAAAC,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAAIuV,UAAW/U,KAAKuC,MAAMwS,UAAWrR,MAAO1D,KAAKuC,MAAMmB,MACvEsR,MAAM,6BACNtM,MAAM,KAAKC,OAAO,KAAKsM,QAAQ,aAC/BzS,EAAAC,EAAAC,cAAA,QAAMwC,EAAE,oNAKTwY,m2BChBTC,cAEF,SAAAA,EAAYpb,GAAO,mGAAAxC,CAAAC,KAAA2d,GAAA1d,EAAAD,KAAAE,EAAAyd,GAAAxd,KAAAH,KAAQuC,0PAFD2B,IAAM4Q,sDAO5B,OACItS,EAAAC,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAAIuV,UAAW/U,KAAKuC,MAAMwS,UAAWrR,MAAO1D,KAAKuC,MAAMmB,MACvEsR,MAAM,6BACNtM,MAAM,KAAKC,OAAO,KAAKsM,QAAQ,aAC/BzS,EAAAC,EAAAC,cAAA,QAAMwC,EAAE,oRAKTyY,m2BChBTC,cAEF,SAAAA,EAAYrb,GAAO,mGAAAxC,CAAAC,KAAA4d,GAAA3d,EAAAD,KAAAE,EAAA0d,GAAAzd,KAAAH,KAAQuC,0PAFL2B,IAAM4Q,sDAOxB,OACItS,EAAAC,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAAIuV,UAAW/U,KAAKuC,MAAMwS,UAAWrR,MAAO1D,KAAKuC,MAAMmB,MACvEsR,MAAM,6BACNtM,MAAM,KAAKC,OAAO,KAAKsM,QAAQ,aAC/BzS,EAAAC,EAAAC,cAAA,QAAMwC,EAAE,6QAKT0Y,oPCwFAC,aApGX,SAAAA,iGACA9d,CAAAC,KAAA6d,GACI7d,KAAK8d,SAAW,KAChB9d,KAAK+d,SAAW,EAChB/d,KAAKge,SAAW,EAChBhe,KAAKie,aAAe,EACpBje,KAAKke,aAAe,EACpBle,KAAKme,eAAiB,GAEtBne,KAAKoe,aAAe,EACpBpe,KAAKqe,UAAY,EACjBre,KAAKse,UAAY,4DAGVxB,GAGP,OADA9c,KAAK8d,SAAWhB,EACT9c,yCAGCue,GAIR,OAFAve,KAAKqe,UAAYE,EACbve,KAAKoe,aAAepe,KAAKqe,YAAWre,KAAKoe,aAAepe,KAAKqe,WAC1Dre,yCAGCue,GAIR,OAFAve,KAAKse,UAAYC,EACbve,KAAKoe,aAAepe,KAAKse,YAAWte,KAAKoe,aAAepe,KAAKse,WAC1Dte,8CAGMwe,GAGb,OADAxe,KAAKme,eAAiBK,EACfxe,sCAKP,IAAMyB,EAAKzB,KAAKie,aAAeje,KAAK+d,SACpC/d,KAAK+d,UAAYtc,EAAKzB,KAAKme,eAC3B,IAAM3c,EAAKxB,KAAKke,aAAele,KAAKge,SACpChe,KAAKge,UAAYxc,EAAKxB,KAAKme,6DAGTM,EAASC,GAE3B,IAAK1e,KAAK8d,SAAU,MAAO,CAACpe,EAAG+e,EAAUze,KAAK+d,SAAUje,EAAG4e,EAAU1e,KAAKge,UAE1E,IAAMW,EAAM3e,KAAK8d,SAASc,eAC1B,MAAO,CACHlf,GAAI+e,EAAUE,EAAIra,GAAKqa,EAAIlc,EAAIzC,KAAK+d,SACpCje,GAAI4e,EAAUC,EAAIE,GAAKF,EAAIzZ,EAAIlF,KAAKge,4CAIlCte,EAAGI,GACbH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,IAGQK,KAAKie,aAAeje,KAAK+d,SAAWre,EACpCM,KAAKke,aAAele,KAAKge,SAAWle,IAIpCE,KAAKie,aAAeve,EACpBM,KAAKke,aAAepe,qCAIlB2B,EAAID,GACd7B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,IAGQK,KAAK+d,UAAYtc,EACjBzB,KAAKge,UAAYxc,EACjBxB,KAAKie,aAAeje,KAAK+d,SACzB/d,KAAKke,aAAele,KAAKge,WAIzBhe,KAAKie,cAAgBxc,EACrBzB,KAAKke,cAAgB1c,oCAIpB+c,GAASve,KAAKoe,aAAezd,KAAKmD,IAAI9D,KAAKse,UAAW3d,KAAKoD,IAAI/D,KAAKqe,UAAWE,qCAC/EO,GAAU9e,KAAKoe,aAAezd,KAAKmD,IAAI9D,KAAKse,UAAW3d,KAAKoD,IAAI/D,KAAKqe,UAAWre,KAAKoe,aAAeU,yCAC9F,OAAO9e,KAAK+d,8CACZ,OAAO/d,KAAKge,oDACN,OAAOhe,KAAKme,kDACpB,OAAOne,KAAKoe,mDACT,OAAOpe,KAAKqe,gDACZ,OAAOre,KAAKse,+CACb,OAAOte,KAAK8d,wNCpChBiB,aAjEX,SAAAA,iGACAC,CAAAhf,KAAA+e,GACI/e,KAAKif,eAAiB,kEAGVC,GAChB,IAD8BC,EAC9Bxf,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,IAD0C,EAuBtC,OArBIwf,EAAW,EAEXnf,KAAKif,eAAelS,KAAKmS,IAIrBlf,KAAKif,eAAerf,QAAUuf,IAE9Bnf,KAAKif,eAAerf,OAASuf,EAAW,GAGxCnf,KAAKif,eAAeE,GAEpBnf,KAAKif,eAAe1C,OAAO,EAAG,EAAG2C,GAIjClf,KAAKif,eAAeE,GAAYD,GAIjClf,gDAGQkf,GAEf,IAAMnZ,EAAQ/F,KAAKif,eAAe5C,QAAQ6C,GAK1C,OAJInZ,GAAS,IAET/F,KAAKif,eAAelZ,GAAS,MAE1B/F,kDAGYA,KAAKif,eAAerf,OAAS,sCAExCwf,GACZ,QAAAC,EAAA1f,UAAAC,OAD0B0f,EAC1B,IAAAzR,MAAAwR,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAD0BD,EAC1BC,EAAA,GAAA5f,UAAA4f,GAAA,IAAAnW,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IAEI,QAAA0J,EAAAC,EAA2BxJ,KAAKif,eAAhCvV,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADW8V,EACX3V,EAAAO,MACI,GAAKoV,EAAL,CACA,IAAMM,EAAuBN,EAAaE,GAC1C,GAAoC,mBAAzBI,GAEHA,EAAqBC,MAAMP,EAAcI,GAEzC,OAAOJ,IAVvB,MAAAnV,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAeI,OAAO,gDAGU,OAAOtJ,KAAKif,8NCWtBS,aAtEX,SAAAA,EAAYC,EAAcpI,EAAiBuF,gGAC3C8C,CAAA5f,KAAA0f,GACI1f,KAAK6f,cAAgBF,EACrB3f,KAAK8f,iBAAmBvI,EACxBvX,KAAK8d,SAAWhB,EAEhB9c,KAAK+f,SAAU,EACf/f,KAAKggB,GAAK,EACVhgB,KAAKigB,GAAK,EAEVjgB,KAAKkgB,UAAY,CAAExgB,EAAG,EAAGI,EAAG,8DAMpBJ,EAAGI,GAIX,OAFAE,KAAKggB,GAAKtgB,EACVM,KAAKigB,GAAKngB,EACHE,0CAKPA,KAAK+f,SAAU,EACf/f,KAAKkgB,UAAUxgB,EAAIM,KAAKggB,GACxBhgB,KAAKkgB,UAAUpgB,EAAIE,KAAKigB,mDAMF,OAAOjgB,KAAKkgB,2DAEbxgB,EAAGI,GAExBE,KAAKkgB,UAAUxgB,EAAIA,EACnBM,KAAKkgB,UAAUpgB,EAAIA,qCAGVE,KAAK+f,SAAU,qCACf,OAAO/f,KAAK+f,0DAIrB,IAAMI,EAAMngB,KAAKkgB,UACXze,EAAK0e,EAAIzgB,EAAIM,KAAKggB,GAClBxe,EAAK2e,EAAIrgB,EAAIE,KAAKigB,GACxB,OAAOxe,EAAKA,EAAKD,EAAKA,uCAOX,OAAOxB,KAAK8d,sDAMJ,OAAO9d,KAAK8f,2DAKf,OAAO9f,KAAK6f,wCAtDtB,OAAO7f,KAAKggB,6BACZ,OAAOhgB,KAAKigB,kjCChB1B,IAAMG,EAAiB,IACjBC,EAAmB,IACnBC,EAAqB,EAAM,IAE3BC,EAAoBC,GAEpBC,EAAsBC,IAqiBbC,cA7hBX,SAAAA,EAAYpJ,GACZ,IAAA9X,MAAA,mGAAAmhB,CAAA5gB,KAAA2gB,KACI3gB,MAAAP,MAAAS,EAAAygB,GAAAxgB,KAAAH,sDAEK8f,iBAAmBvI,EAExB9X,EAAKohB,UAAY,GACjBphB,EAAKqhB,mBAAqB,KAE1BrhB,EAAKqe,SAAW,KAChBre,EAAKshB,QAAU,CACXC,WAAY,KACZC,SAAU,KACVC,WAAY,KACZC,UAAW,KACXC,OAAQ,MAEZ3hB,EAAK4hB,SAAW,KAIhB5hB,EAAK6hB,WAAY,EACjB7hB,EAAK8hB,WAAY,EAEjB9hB,EAAK+hB,gBAAkBpB,EACvB3gB,EAAKgiB,eAAiBpB,EACtB5gB,EAAKiiB,mBAAqBpB,EAC1B7gB,EAAKkiB,cAAoC,GAApBpB,EACrB9gB,EAAKmiB,mBAAqBrB,EAAoBE,EAE9ChhB,EAAKoiB,iBAAkB,EACvBpiB,EAAKqiB,eAAiB,EACtBriB,EAAKsiB,YAAc,EACnBtiB,EAAKuiB,YAAc,EAEnBviB,EAAKwiB,cAAgBxiB,EAAKwiB,cAAc7K,KAAnB8K,IAAAziB,KACrBA,EAAK0iB,YAAc1iB,EAAK0iB,YAAY/K,KAAjB8K,IAAAziB,KACnBA,EAAK2iB,YAAc3iB,EAAK2iB,YAAYhL,KAAjB8K,IAAAziB,KACnBA,EAAK4iB,aAAe5iB,EAAK4iB,aAAajL,KAAlB8K,IAAAziB,KACpBA,EAAK6iB,QAAU7iB,EAAK6iB,QAAQlL,KAAb8K,IAAAziB,KAEfA,EAAK8iB,oBAAsB9iB,EAAK8iB,oBAAoBnL,KAAzB8K,IAAAziB,KAC3BA,EAAK+iB,kBAAoB/iB,EAAK+iB,kBAAkBpL,KAAvB8K,IAAAziB,KACzBA,EAAKgjB,qBAAuBhjB,EAAKgjB,qBAAqBrL,KAA1B8K,IAAAziB,KAC5BA,EAAKijB,oBAAsBjjB,EAAKijB,oBAAoBtL,KAAzB8K,IAAAziB,KAE3BA,EAAKkjB,mBAAqBljB,EAAKkjB,mBAAmBvL,KAAxB8K,IAAAziB,KA7C9BA,wPAHuBsf,6CAmDX6D,GAER,KAAMA,aAAmB7D,GACrB,MAAM,IAAI5d,MAAM,qEAGpB,OADAnB,KAAK6gB,UAAUgC,QAAQD,GAChB5iB,+CAGO4iB,GAEd,KAAMA,aAAmB7D,GACrB,MAAM,IAAI5d,MAAM,qEAGpB,OADAnB,KAAK6gB,UAAU9T,KAAK6V,GACb5iB,6CAIX,IADc4iB,EACdjjB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADwB,KAEpB,GAAIijB,EACJ,CACI,IAAM7c,EAAQ/F,KAAK6gB,UAAUxE,QAAQuG,GACrC,OAAI7c,GAAS,GAET/F,KAAK6gB,UAAUtE,OAAOxW,EAAO,GACtB6c,GAIA,KAKX,OAAO5iB,KAAK6gB,UAAUiC,gDAM1B9iB,KAAK6gB,UAAUjhB,OAAS,wCAKxB,OAAOI,KAAK6gB,UAAUjhB,OAAS,8CAK/B,OAAII,KAAK6gB,UAAUjhB,OAAS,EAEjBI,KAAK6gB,UAAU7gB,KAAK6gB,UAAUjhB,OAAS,GAIvCI,wCAIJ8c,GAEP,KAAMA,aAAmBiG,YAAa,MAAM,IAAI5hB,MAAM,oDACtD,GAAInB,KAAK8d,SAAU,MAAM,IAAI3c,MAAM,4DAEnCnB,KAAK8f,iBAAiBkD,WAAWhjB,KAAK8d,SAAWhB,GACjD9c,KAAKqhB,SAAW,IAAI3B,EAAa1f,KAAMA,KAAK8f,iBAAkB9f,KAAK8d,UAEnE9d,KAAK8d,SAASmF,iBAAiB,YAAajjB,KAAKmiB,aACjDniB,KAAK8d,SAASmF,iBAAiB,YAAajjB,KAAKoiB,aACjDpiB,KAAK8d,SAASmF,iBAAiB,aAAcjjB,KAAKqiB,cAClDriB,KAAK8d,SAASmF,iBAAiB,YAAajjB,KAAKkjB,aACjDljB,KAAK8d,SAASmF,iBAAiB,cAAejjB,KAAKiiB,eACnDjiB,KAAK8d,SAASmF,iBAAiB,QAASjjB,KAAKsiB,2CAK7C,IAAKtiB,KAAK8d,SAAU,MAAM,IAAI3c,MAAM,iEAEpCnB,KAAK8d,SAASqF,oBAAoB,YAAanjB,KAAKmiB,aACpDniB,KAAK8d,SAASqF,oBAAoB,YAAanjB,KAAKoiB,aACpDpiB,KAAK8d,SAASqF,oBAAoB,aAAcnjB,KAAKqiB,cACrDriB,KAAK8d,SAASqF,oBAAoB,cAAenjB,KAAKiiB,eACtDjiB,KAAK8d,SAASqF,oBAAoB,QAASnjB,KAAKsiB,SAEhDtiB,KAAK8d,SAAW,sCAKZ9d,KAAK8d,UAGL9d,KAAK8f,iBAAiBsD,6CAKlBhE,GACZ,QAAAiE,EAAAhE,EAAA1f,UAAAC,OAD0B0f,EAC1B,IAAAzR,MAAAwR,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAD0BD,EAC1BC,EAAA,GAAA5f,UAAA4f,GAAA,IAAAnW,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IACI,QAAA0J,EAAAC,EAAsBxJ,KAAK6gB,UAA3BnX,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADWwZ,EACXrZ,EAAAO,MACUxI,EAASshB,EAAQU,YAAR7D,MAAAmD,EAAO,CAAaxD,GAAbvb,OAA2Byb,IACjD,GAAIhe,EAEA,OAAOA,GANnB,MAAAyI,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAUI,OAAA+Z,EAAA5iB,EAAAP,EAAAygB,EAAAjgB,WAAA,cAAAV,OAAAG,KAAAsf,MAAA4D,EAAA,CAAArjB,KAAyBof,GAAzBvb,OAAuCyb,wCAG/Bhb,GAERA,EAAEif,kBACFjf,EAAEkf,iBAEF,IAAMjgB,EAASvD,KAAK+gB,QAGpBhE,SAAS0G,cAAcC,OACvB1jB,KAAK8d,SAAS6F,QAGVpgB,EAAOyd,aAEPjE,SAASoG,oBAAoB,YAAa5f,EAAOyd,YACjDzd,EAAOyd,WAAa,MAGpBzd,EAAO0d,WAEPlE,SAASoG,oBAAoB,UAAW5f,EAAO0d,UAC/C1d,EAAO0d,SAAW,MAItB,IAAM2C,EAAStf,EAAEuf,QAAU,EAAIvf,EAAEsf,OAajC,OAVI5jB,KAAK8jB,YAAYxf,EAAEma,QAASna,EAAEoa,QAASkF,KAGvCrgB,EAAOyd,WAAahhB,KAAKuiB,oBACzBhf,EAAO0d,SAAWjhB,KAAKwiB,kBAEvBzF,SAASkG,iBAAiB,YAAa1f,EAAOyd,YAC9CjE,SAASkG,iBAAiB,UAAW1f,EAAO0d,YAGzC,sCAGC3c,GAER,IAAMyf,EAAQ/jB,KAAK8f,iBAAiBkE,sBAAsB1f,EAAEma,QAASna,EAAEoa,SACjExc,EAAUlC,KAAKqhB,SACrBnf,EAAQ+hB,YAAYF,EAAMrkB,EAAGqkB,EAAMjkB,GAE/BE,KAAKsjB,YAAY,mBAAoBphB,KAErCoC,EAAEif,kBACFjf,EAAEkf,iBAEFxjB,KAAKkkB,gEAIO5f,GAOhB,OALAA,EAAEif,kBACFjf,EAAEkf,iBAEFxjB,KAAKmkB,YAAY7f,EAAEma,QAASna,EAAEoa,UAEvB,4CAGOpa,GAEdA,EAAEif,kBACFjf,EAAEkf,iBAEF,IAAMjgB,EAASvD,KAAK+gB,QAiBpB,OAdIxd,EAAOyd,aAEPjE,SAASoG,oBAAoB,YAAa5f,EAAOyd,YACjDzd,EAAOyd,WAAa,MAGpBzd,EAAO0d,WAEPlE,SAASoG,oBAAoB,UAAW5f,EAAO0d,UAC/C1d,EAAO0d,SAAW,MAGtBjhB,KAAKokB,UAAU9f,EAAEma,QAASna,EAAEoa,UAErB,uCAGEpa,GAET,GAA+B,GAA3BA,EAAE+f,eAAezkB,OACrB,CACI0E,EAAEif,kBACFjf,EAAEkf,iBAEF,IAAMjgB,EAASvD,KAAK+gB,QAGpBhE,SAAS0G,cAAcC,OACvB1jB,KAAK8d,SAAS6F,QAGVpgB,EAAO2d,aAEPnE,SAASoG,oBAAoB,YAAa5f,EAAO2d,YACjD3d,EAAO2d,WAAa,MAGpB3d,EAAO4d,YAEPpE,SAASoG,oBAAoB,WAAY5f,EAAO4d,WAChD5d,EAAO4d,UAAY,MAGvB,IAAMmD,EAAQhgB,EAAE+f,eAAe,GAY/B,OAVIrkB,KAAK8jB,YAAYQ,EAAM7F,QAAS6F,EAAM5F,QAAS,KAG/Cnb,EAAO2d,WAAalhB,KAAKyiB,qBACzBlf,EAAO4d,UAAYnhB,KAAK0iB,oBAExB3F,SAASkG,iBAAiB,YAAa1f,EAAO2d,YAC9CnE,SAASkG,iBAAiB,WAAY1f,EAAO4d,aAG1C,+CAIK7c,GAEhBA,EAAEif,kBACFjf,EAAEkf,iBAEF,IAAMjgB,EAASvD,KAAK+gB,QAGhBxd,EAAO2d,aAEPnE,SAASoG,oBAAoB,YAAa5f,EAAO2d,YACjD3d,EAAO2d,WAAa,MAGpB3d,EAAO4d,YAEPpE,SAASoG,oBAAoB,WAAY5f,EAAO4d,WAChD5d,EAAO4d,UAAY,MAGvB,IAAMmD,EAAQhgB,EAAE+f,eAAe,GAG/B,OAFArkB,KAAKokB,UAAUE,EAAM7F,QAAS6F,EAAM5F,UAE7B,+CAGUpa,GAEjBA,EAAEif,kBACFjf,EAAEkf,iBAEF,IAAMc,EAAQhgB,EAAE+f,eAAe,GAG/B,OAFArkB,KAAKmkB,YAAYG,EAAM7F,QAAS6F,EAAM5F,UAE/B,wCAGGpa,GAKV,OAHAA,EAAEif,kBACFjf,EAAEkf,kBAEK,kCAGHlf,GAEJA,EAAEif,kBACFjf,EAAEkf,iBAEF,IAAMthB,EAAUlC,KAAKqhB,SACf7f,EAAK8C,EAAEigB,OAASvkB,KAAK0hB,mBACrBpF,EAAOtc,KAAK8f,iBAAiBrI,WAC7B7N,EAAO0S,EAAO9a,EAQpB,OALKxB,KAAKsjB,YAAY,eAAgBphB,EAAS0H,EAAM0S,IAEjDtc,KAAK8f,iBAAiB0E,SAAS5a,IAG5B,sCAGClK,EAAGI,EAAG8jB,GAGd,IAAMrgB,EAASvD,KAAK+gB,QACd7e,EAAUlC,KAAKqhB,SACf0C,EAAQ/jB,KAAK8f,iBAAiBkE,sBAAsBtkB,EAAGI,GAO7D,OANAoC,EAAQ+hB,YAAYF,EAAMrkB,EAAGqkB,EAAMjkB,GAEnCE,KAAKshB,WAAY,EACjBthB,KAAKuhB,UAAsB,GAAVqC,GAGZ5jB,KAAKsjB,YAAY,kBAAmBphB,KAErCA,EAAQuiB,aACRlhB,EAAO6d,OAASsD,WAAW1kB,KAAK2iB,mBAAoB3iB,KAAKwhB,kBAClD,gDASNxhB,KAAKshB,YAENthB,KAAKuhB,WAAY,uCAIb7hB,EAAGI,GAEX,IAAMoC,EAAUlC,KAAKqhB,SACf0C,EAAQ/jB,KAAK8f,iBAAiBkE,sBAAsBtkB,EAAGI,GAG7D,GAFAoC,EAAQ+hB,YAAYF,EAAMrkB,EAAGqkB,EAAMjkB,GAE9BE,KAAKshB,UAgCFthB,KAAK8gB,oBAEL9gB,KAAK8gB,mBAAmB6D,WAAWziB,QAhCvC,GAAIA,EAAQ0iB,0BAA4B5kB,KAAK4hB,mBAC7C,CACI5hB,KAAKshB,WAAY,EAGjB,IAAMuD,EAAqB3iB,EAAQ4iB,wBAC7BxjB,EAAStB,KAAKsjB,YAAY,cAAephB,EAAS2iB,EAAmBnlB,EAAGmlB,EAAmB/kB,GAC5FwB,EAYDtB,KAAK8gB,mBAAqBxf,GAV1BtB,KAAKshB,WAAY,EAMjBthB,KAAKkkB,uDAsBXxkB,EAAGI,GAET,IAAMyD,EAASvD,KAAK+gB,QACdgE,EAAQxhB,EAAO6d,OACjB2D,IAEAC,aAAaD,GACbxhB,EAAO6d,OAAS,MAIpB,IAAMlf,EAAUlC,KAAKqhB,SACf0C,EAAQ/jB,KAAK8f,iBAAiBkE,sBAAsBtkB,EAAGI,GAG7D,GAFAoC,EAAQ+hB,YAAYF,EAAMrkB,EAAGqkB,EAAMjkB,GAE/BE,KAAKshB,UAGDthB,KAAK8gB,qBAEL9gB,KAAK8gB,mBAAmBmE,WAAW/iB,GACnClC,KAAK8gB,mBAAqB,WAK9B,GAAI9gB,KAAKuhB,UAGLvhB,KAAKsjB,YAAY,kBAAmBphB,QAKpC,IAAKlC,KAAKsjB,YAAY,eAAgBphB,GACtC,CAEI,IAAMT,EAAK/B,EAAIM,KAAK+hB,YACdvgB,EAAK1B,EAAIE,KAAKgiB,YACdkD,EAAOzjB,EAAKA,EAAKD,EAAKA,EACtB2jB,EAAKC,KAAKC,MAAQrlB,KAAK8hB,eACzB9hB,KAAK6hB,iBACLqD,EAAOllB,KAAK2hB,eACZwD,EAAKnlB,KAAKyhB,gBAGVzhB,KAAKsjB,YAAY,kBAAmBphB,GAEpClC,KAAK6hB,iBAAkB,IAIvB7hB,KAAK6hB,iBAAkB,EACvB7hB,KAAK8hB,eAAiBsD,KAAKC,MAC3BrlB,KAAK+hB,YAAcriB,EACnBM,KAAKgiB,YAAcliB,GAMnCoC,EAAQojB,WACRtlB,KAAKsjB,YAAY,mBAAoBphB,8CAKrC,IAAMA,EAAUlC,KAAKqhB,SACf9d,EAASvD,KAAK+gB,QAGhBxd,EAAOyd,aAEPjE,SAASoG,oBAAoB,YAAa5f,EAAOyd,YACjDzd,EAAOyd,WAAa,MAGpBzd,EAAO0d,WAEPlE,SAASoG,oBAAoB,UAAW5f,EAAO0d,UAC/C1d,EAAO0d,SAAW,MAGtB,IAAM8D,EAAQxhB,EAAO6d,OACjB2D,IAEAC,aAAaD,GACbxhB,EAAO6d,OAAS,MAGpBlf,EAAQojB,WACRtlB,KAAKsjB,YAAY,mBAAoBphB,yCAGzB,OAAOlC,KAAK6gB,qDACP,OAAO7gB,KAAK8d,sDACV,OAAO9d,KAAK8f,uDACnB,OAAO9f,KAAKqhB,SAAWrhB,KAAKqhB,SAAS3hB,EAAI,wCACzC,OAAOM,KAAKqhB,SAAWrhB,KAAKqhB,SAASvhB,EAAI,4CACrC,QAAOE,KAAKqhB,UAAWrhB,KAAKqhB,SAASkE,kDACxC,OAAOvlB,KAAK+gB,QAAQG,YAAclhB,KAAK+gB,QAAQI,+CACjD,OAAOnhB,KAAKuhB,+CACZ,OAAOvhB,KAAKshB,+1BCpiB/B,IACMkE,EAAwB,GACxBC,EAAY,GACZC,EAAY,GA2FHC,cAvFX,SAAAA,EAAYpjB,GACZ,IAAA9C,EAAA,mGAAAmmB,CAAA5lB,KAAA2lB,IACIlmB,EAAAomB,EAAA7lB,KAAA8lB,EAAAH,GAAAxlB,KAAAH,KAAMuC,KAEDwjB,KAAO7hB,IAAM8hB,YAElBvmB,EAAKqgB,kBAAmB,IAAIjC,GACvBoI,YAAYR,GACZS,YAAYR,GACZS,iBAAiBX,GACtB/lB,EAAKogB,cAAgB,IAAIc,EAAalhB,EAAKqgB,kBAT/CrgB,wPAH4ByE,IAAMC,yDAelB+a,GAEZ,KAAMA,aAAwBjd,KAAuB,MAAM,IAAId,MAAM,4DAErE,OADAnB,KAAK6f,cAAcuG,gBAAgBlH,GAC5Blf,iDAMPA,KAAK6f,cAAcwG,WAAWrmB,KAAK+lB,KAAKO,wDAMxCtmB,KAAK6f,cAAc0G,uDAMnBvmB,KAAK6f,cAAcuD,yDAKnB,IAAMoD,EAAWxmB,KAAK8f,iBACtB,MAAO,aAAe0G,EAASxN,aAAe,IAAMwN,EAASvN,aAAe,gDAG5DwN,GAEhB,IAAMD,EAAWxmB,KAAK8f,iBAChB4G,EAAWD,EAAe9lB,KAAKoD,IAAI8E,OAAOI,UAAWud,EAAS/O,YAC9DkP,EAAeD,EAAW,EAChC,OAASC,EAAgB,KAAQA,EAAgB,IAAMD,EAAW,IAAMA,0CAKxE,OAAO1mB,KAAK+lB,KAAKO,kDAKjB,OAAOtmB,KAAK6f,2DAKZ,OAAO7f,KAAK6f,cAAc+G,sDAM1B,IAAM3R,EAAUjV,KAAK6mB,oBAAoB7mB,KAAKuC,MAAMmkB,UA7ElC,KA8EZphB,EAAYtF,KAAK8mB,wBAEvB,OACInQ,EAAAlU,EAAAC,cAAA,OAAKqkB,IAAK/mB,KAAK+lB,KACXvmB,GAAIQ,KAAKuC,MAAM/C,GACfuV,UAAW6C,IAAMoP,mBAAqB,IAAMhnB,KAAKuC,MAAMwS,UACvDrR,MAAO1D,KAAKuC,MAAMmB,MAClBuR,QAASA,GACT0B,EAAAlU,EAAAC,cAAA,KAAG4C,UAAWA,GACTtF,KAAKuC,MAAMqX,+NC5FhC,IAAMqN,GAA0B,EAkKjBC,aA9JX,SAAAA,iGACAC,CAAAnnB,KAAAknB,GACIlnB,KAAKonB,YAAa,EAClBpnB,KAAKqnB,WAAY,EACjBrnB,KAAKsnB,eAAiBL,EACtBjnB,KAAKunB,gBAAiB,EAOtBvnB,KAAKwnB,QAAU,CACXC,OAAQ,KACRjjB,KAAM,MAUVxE,KAAK0nB,cAAgB,CACjBD,OAAQ,KACRjjB,KAAM,KACNmjB,OAAO,GAQX3nB,KAAK4nB,iBAAmB,CACpBH,OAAQ,KACRjjB,KAAM,MAIVxE,KAAK6nB,cAAgB,KAGrB7nB,KAAKqD,YAAcrD,KAAKqD,YAAY+T,KAAKpX,MACzCA,KAAKsD,WAAatD,KAAKsD,WAAW8T,KAAKpX,qEAG3B2R,GAGZ,OADA3R,KAAK6nB,cAAgBlW,EACd3R,0CAGEqT,GAGT,OADArT,KAAKonB,WAAa/T,EACXrT,+CAGOqT,GAGd,OADArT,KAAKqnB,UAAYhU,EACVrT,8CAGMqT,GAGb,OADArT,KAAKsnB,eAAiBjU,EACfrT,6CAIKkC,GAKZ,OAHAlC,KAAKunB,gBAAiB,EAEtBvnB,KAAK8nB,oBAAoB9nB,KAAK4nB,iBAAiBH,OAAQznB,KAAK4nB,iBAAiBpjB,OACtE,2CAIMtC,GAEblC,KAAK8nB,oBAAoB,KAAM,MAC/B9nB,KAAKunB,gBAAiB,sCAGdjjB,GAER,IACMwF,EADSxF,EAAEC,OACG,MACpBvE,KAAK4nB,iBAAiBH,OAAS3d,EAAM2d,OACrCznB,KAAK4nB,iBAAiBpjB,KAAOsF,EAAMtF,KAKnCxE,KAAK4nB,iBAAiBG,KAAOje,qCAGtBxF,GAEPtE,KAAK4nB,iBAAiBH,OAAS,KAC/BznB,KAAK4nB,iBAAiBpjB,KAAO,KAE7BxE,KAAK4nB,iBAAiBG,KAAO,8CAGhB9V,EAAc6B,GAC/B,IAD2CkU,IAC3CroB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACIK,KAAK0nB,cAAcD,OAASxV,EAC5BjS,KAAK0nB,cAAcljB,KAAOsP,EAC1B9T,KAAK0nB,cAAcC,MAAQK,+CAK3BhoB,KAAK0nB,cAAcD,OAAS,KAC5BznB,KAAK0nB,cAAcljB,KAAO,KAC1BxE,KAAK0nB,cAAcC,OAAQ,8CAGX1V,EAAc6B,GAE9B9T,KAAKwnB,QAAQC,OAASxV,EACtBjS,KAAKwnB,QAAQhjB,KAAOsP,kDAGE,OAAO9T,KAAK0nB,cAAcD,qDAC5B,OAAOznB,KAAK0nB,cAAcljB,+CAC9B,OAAmC,OAA5BxE,KAAK0nB,cAAcljB,8CAE7ByN,GAEb,OAAIjS,KAAK0nB,cAAcD,SAAWxV,EAAqBjS,KAAK0nB,cAAcC,OACtE3nB,KAAKqnB,WAAkBpV,aAAwB1S,qDAI5B,OAAOS,KAAKwnB,QAAQC,sDACtB,OAAOznB,KAAKwnB,QAAQhjB,gDACxB,OAA6B,OAAtBxE,KAAKwnB,QAAQhjB,wDAEZ,OAAOxE,KAAK4nB,iBAAiBH,wDAC/B,OAAOznB,KAAK4nB,iBAAiBpjB,kDACjC,OAAsC,OAA/BxE,KAAK4nB,iBAAiBpjB,2CAEpC,OAAOxE,KAAKonB,8CACjBzH,GAAgB,QAAS3f,KAAKsnB,gBAAkB3H,EAAasI,yDACnD,OAAOjoB,KAAKqnB,oDACb,OAAOrnB,KAAKsnB,yDAEZ,OAAOtnB,KAAKunB,yDAEZ,OAAOvnB,KAAK6nB,81BC/GrBK,cA9CX,SAAAA,EAAY/X,GACZ,IAAA1Q,EAAA,mGAAA0oB,CAAAnoB,KAAAkoB,IACIzoB,EAAA2oB,EAAApoB,KAAAqoB,EAAAH,GAAA/nB,KAAAH,QAEKqQ,iBAAmBF,EAExB1Q,EAAK8Q,gBAAkB,CAAC7Q,EAAG,EAAGI,EAAG,GALrCL,wPAH+BwC,kDAYnBC,GAER,IAAMiO,EAAkBnQ,KAAKqQ,iBAC7B,GAAIF,EAAgBkB,kBAAmB,OAAO,EAC9C,GAAIlB,EAAgBmY,mBAAoB,OAAO,EAC/C,IAAKnY,EAAgBa,WAAW9O,EAAQ+O,mBAAoB,OAAO,EAEnE,IAAM4T,EAAqB3iB,EAAQ4iB,wBAGnC,OAFA9kB,KAAKuQ,gBAAgB7Q,EAAImlB,EAAmBnlB,EAC5CM,KAAKuQ,gBAAgBzQ,EAAI+kB,EAAmB/kB,GACrC,qCAIAoC,GAEP,IAAMT,EAAKS,EAAQxC,EAAIM,KAAKuQ,gBAAgB7Q,EACtC8B,EAAKU,EAAQpC,EAAIE,KAAKuQ,gBAAgBzQ,EAE3BoC,EAAQ0kB,qBAChB2B,UAAU9mB,EAAID,GAAI,sCAUpBU,o1BCnCTsmB,cAEF,SAAAA,EAAYjmB,GACZ,IAAA9C,EAAA,mGAAAgpB,CAAAzoB,KAAAwoB,IACI/oB,EAAAipB,EAAA1oB,KAAA2oB,EAAAH,GAAAroB,KAAAH,KAAMuC,KAED8N,iBAAmB,IAAI6W,EAC5BznB,EAAKmpB,cAAgB,IAAI7J,EAEzBtf,EAAKopB,mBAAqB3kB,IAAM8hB,YAEhCvmB,EAAKqpB,sBAAwB,IAAIZ,EAAqBzoB,EAAK4Q,kBAR/D5Q,wPAHoByE,IAAMC,6DAiBtB,IAAM4kB,EAAe/oB,KAAK4oB,cAEpBjJ,EADW3f,KAAK6oB,mBAAmBvC,QACXrV,kBAC9B8X,EACK3C,gBAAgBpmB,KAAKqQ,kBACrB+V,gBAAgBpmB,KAAK8oB,sBAAuB,IACjDnJ,EAAaqJ,YAAYD,kDAMzB,IAAMA,EAAe/oB,KAAK4oB,cAEpBjJ,EADW3f,KAAK6oB,mBAAmBvC,QACXrV,kBAC9B8X,EAAaE,qBACbtJ,EAAauJ,cAAcH,8CAGZrpB,EAAGI,GAGlBE,KAAK4mB,qBAAqB/N,WAAWnZ,GAAII,gDAGtB,OAAOE,KAAKqQ,2DACf,OAAOrQ,KAAK4oB,6DAEP,OAAO5oB,KAAK6oB,mBAAmBvC,kDACpC,OAAOtmB,KAAK6oB,mBAAmBvC,QAAQrV,+DACpC,OAAOjR,KAAK6oB,mBAAmBvC,QAAQM,sDAK1D,IAAMzW,EAAkBnQ,KAAKqQ,iBACvBmW,EAAWxmB,KAAK6oB,mBAAmBvC,QACnC6C,EAAcnpB,KAAKuC,MAAM4mB,YACzBC,EAAgBppB,KAAKuC,MAAM6mB,cAEjC,OACIzS,EAAAlU,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAChBuV,UAAW/U,KAAKuC,MAAMwS,UACtBrR,MAAO1D,KAAKuC,MAAMmB,OAClBiT,EAAAlU,EAAAC,cAAC2mB,EAAD,CAAmBtC,IAAK/mB,KAAK6oB,oBACxBM,GAAe3C,GAAY2C,EAAYnpB,KAAMwmB,EAAUrW,IAE3DiZ,GAAiB5C,GAAY4C,EAAcppB,KAAMwmB,EAAUrW,yCAM7DqY,g2BC7Ef,IAsCec,cAlCX,SAAAA,EAAY/mB,GACZ,mGAAAxC,CAAAC,KAAAspB,GAAArpB,EAAAD,KAAAE,EAAAopB,GAAAnpB,KAAAH,KACUuC,0PAJY2B,IAAMC,kDAUxB,IAAMolB,EAAUvpB,KAAKuC,MAAMgnB,QACrBC,EAAQxpB,KAAKuC,MAAMinB,OAAS,EAC5BC,EAAQzpB,KAAKuC,MAAMknB,OAAS,EAC5BC,EAAM1pB,KAAKuC,MAAMmnB,KAAOF,EAAQ,EAChCG,EAAM3pB,KAAKuC,MAAMonB,KAAOF,EAAQ,EAChCvmB,EAAQlD,KAAKuC,MAAMW,OAAS,UAE5BzB,EAAKioB,EAAMF,EACXhoB,EAAKmoB,EAAMF,EAEjB,OACI9S,EAAAlU,EAAAC,cAAA,SACK6mB,GACG5S,EAAAlU,EAAAC,cAAA,QAAMqS,UAAU,WACZrV,EAAGiB,KAAKmD,IAAI4lB,EAAKF,GACjB1pB,EAAGa,KAAKmD,IAAI6lB,EAAKF,GACjB/gB,MAAO/H,KAAK4G,IAAI9F,GAChBkH,OAAQhI,KAAK4G,IAAI/F,GACjB2B,OAAQD,EACRD,KAAMC,EACN0mB,YAhCH,k1BCArB,IACMC,EAAuB,CAAC,EAAG,GAgClBC,cA3BX,SAAAA,EAAYvnB,GACZ,mGAAAwnB,CAAA/pB,KAAA8pB,GAAAE,EAAAhqB,KAAAiqB,EAAAH,GAAA3pB,KAAAH,KACUuC,0PAJuB2B,IAAMC,kDAUnC,IAAM2C,EAAS9G,KAAKuC,MAAMuE,OACpB3D,EAASnD,KAAKuC,MAAMW,OAAS,UAC7BF,EAAShD,KAAKuC,MAAMS,QAAU,GAEpC,OACI2T,EAAAlU,EAAAC,cAACiU,EAAAlU,EAAME,SAAP,KACIgU,EAAAlU,EAAAC,cAAA,UAAQqS,UAAU,WACdnS,GAAIkE,EAAOpH,EAAGoD,GAAIgE,EAAOhH,EAAGiD,EAAGC,EAC/BG,OAAQA,EACR+mB,iBArBK,EAsBLC,gBAAiBN,EACjBpiB,YAzBS,EA0BTxE,KAAK,OACLO,cAAc,s1BCzBlC,IAiDe4mB,cA7CX,SAAAA,EAAY7nB,GACZ,mGAAA8nB,CAAArqB,KAAAoqB,GAAAE,EAAAtqB,KAAAuqB,EAAAH,GAAAjqB,KAAAH,KACUuC,0PAJoB2B,IAAMC,kDAUhC,IAAMqmB,EAAa,GAEbC,EAAQzqB,KAAKuC,MAAMkoB,MACzB,GAAIA,EACJ,KAAArhB,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IACI,QAAA0J,EAAAC,EAAkBihB,EAAlB/gB,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADUlI,EACVqI,EAAAO,MACI0gB,EAAWzd,KACP4J,EAAAlU,EAAAC,cAACgoB,EAAD,CACI9kB,IAAK1E,EAAKgL,oBACVpF,OAAQ5F,EACR8B,OAAQ9B,EAAKY,cAvBZ,MAgBjB,MAAAiI,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,IAYA,IAAMqhB,EAAQ3qB,KAAKuC,MAAMooB,MACzB,GAAIA,EACJ,KAAApgB,GAAA,EAAAC,GAAA,EAAAC,OAAA5K,EAAA,IACI,QAAA6K,EAAAC,EAAkBggB,EAAlBjhB,OAAAC,cAAAY,GAAAG,EAAAC,EAAAf,QAAAC,MAAAU,GAAA,EACA,KADUK,EACVF,EAAAZ,MACI0gB,EAAWzd,KACP4J,EAAAlU,EAAAC,cAACgoB,EAAD,CACI9kB,IAAKgF,EAAKsB,oBACVpF,OAAQ8D,EAAKG,qBAN7B,MAAAhB,GAAAS,GAAA,EAAAC,EAAAV,EAAA,YAAAQ,GAAA,MAAAI,EAAAX,QAAAW,EAAAX,SAAA,WAAAQ,EAAA,MAAAC,IAWA,OACIkM,EAAAlU,EAAAC,cAAA,SACK8nB,8MCoCFI,iBAjFX,SAAAA,iGACAC,CAAA7qB,KAAA4qB,GACI5qB,KAAK8qB,aAAe,CAChBtB,MAAO,EAAGC,MAAO,EACjBC,IAAK,EAAGC,IAAK,EACbJ,SAAS,GAGbvpB,KAAK+qB,QAAU,mEAGA,OAAO/qB,KAAK8qB,kDAElBxY,GAET,GADJ3S,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAEI,CACI,IAAMqrB,EAAMhrB,KAAK8qB,aACXG,EAAKtqB,KAAKoD,IAAIinB,EAAItB,IAAKsB,EAAIxB,OAC3B0B,EAAKvqB,KAAKoD,IAAIinB,EAAIrB,IAAKqB,EAAIvB,OAC3B0B,EAAKxqB,KAAKmD,IAAIknB,EAAItB,IAAKsB,EAAIxB,OAC3B4B,EAAKzqB,KAAKmD,IAAIknB,EAAIrB,IAAKqB,EAAIvB,OACjCzpB,KAAK+R,iBAyCjB,SAAwBO,EAAO+Y,EAAIC,EAAIC,EAAIC,EAAIlrB,GAE3C,IAAMkpB,EAAQ7oB,KAAKmD,IAAIunB,EAAIE,GACrB9B,EAAQ9oB,KAAKmD,IAAIwnB,EAAIE,GACrB9B,EAAM/oB,KAAKoD,IAAIsnB,EAAIE,GACnB5B,EAAMhpB,KAAKoD,IAAIunB,EAAIE,GAJ7BpiB,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IAMI,QAAA0J,EAAAC,EAAmB8I,EAAM3E,WAAzBjE,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADWlI,EACXqI,EAAAO,MACQ5I,EAAKxB,GAAK8pB,GAAStoB,EAAKxB,EAAIgqB,GACrCxoB,EAAKpB,GAAK2pB,GAASvoB,EAAKpB,EAAI6pB,GAEnBrpB,EAAIyM,KAAK7L,IAXrB,MAAA6I,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,IAzCYmiB,CAAenZ,EAAO6Y,EAAIC,EAAIH,EAAIC,EAAIlrB,KAAK+qB,SAG/C,OAAO/qB,KAAK+qB,+CAGDzY,EAAO5S,EAAGI,GAErB,IAAMkrB,EAAMhrB,KAAK8qB,aACjBE,EAAIxB,MAAQwB,EAAItB,IAAMhqB,EACtBsrB,EAAIvB,MAAQuB,EAAIrB,IAAM7pB,EACtBE,KAAK+R,iBAELiZ,EAAIzB,SAAU,0CAGFjX,EAAO5S,EAAGI,GAEtB,IAAMkrB,EAAMhrB,KAAK8qB,aACjBE,EAAItB,IAAMhqB,EACVsrB,EAAIrB,IAAM7pB,EACVE,KAAKmS,aAAaG,GAAO,wCAGhBA,EAAO5S,EAAGI,GAEnB,IAAMkrB,EAAMhrB,KAAK8qB,aACjBE,EAAItB,IAAMhqB,EACVsrB,EAAIrB,IAAM7pB,EACVE,KAAKmS,aAAaG,GAAO,GAEzB0Y,EAAIzB,SAAU,8CAGEhlB,GAAU,OAAOvE,KAAK+qB,QAAQnV,SAASrR,0CAC1C,OAAOvE,KAAK+qB,QAAQnrB,OAAS,2CAC3BI,KAAK+qB,QAAQnrB,OAAS,sCAC3B,OAAOI,KAAK8qB,aAAavB,i2BCD5BmC,cAzDX,SAAAA,EAAYvb,EAAiBC,EAAiBuB,GAC9C,IAAAlS,EAAA,mGAAAksB,CAAA3rB,KAAA0rB,IACIjsB,EAAAmsB,EAAA5rB,KAAA6rB,EAAAH,GAAAvrB,KAAAH,QAEKqQ,iBAAmBF,EACxB1Q,EAAK6Q,iBAAmBF,EACxB3Q,EAAKooB,cAAgBlW,EALzBlS,wPAHmCwC,sDAYnBC,GAEZ,IAAMiO,EAAkBnQ,KAAKqQ,iBACvBsB,EAAe3R,KAAK6nB,cAS1B,OARIlW,EAAaE,iBAER1B,EAAgBa,WAAW9O,EAAQ+O,oBAAuBU,EAAaG,oBAAoB3B,EAAgBgE,6BAE5GxC,EAAaI,mBAId,sCAIC7P,GAER,IAAMiO,EAAkBnQ,KAAKqQ,iBAC7B,GAAIF,EAAgBkB,kBAAmB,OAAO,EAC9C,GAAIlB,EAAgBa,WAAW9O,EAAQ+O,mBAAoB,OAAO,EAClE,GAAId,EAAgBmY,mBAAoB,OAAO,EAE/C,IAAMzD,EAAqB3iB,EAAQ4iB,wBAEnC,OADA9kB,KAAK6nB,cAAciE,eAAe9rB,KAAKsQ,iBAAiBO,WAAYgU,EAAmBnlB,EAAGmlB,EAAmB/kB,IACtG,qCAIAoC,GAEHlC,KAAK6nB,cAAckE,aAEnB/rB,KAAK6nB,cAAcmE,gBAAgBhsB,KAAKsQ,iBAAiBO,WAAY3O,EAAQxC,EAAGwC,EAAQpC,sCAKrFoC,GAEHlC,KAAK6nB,cAAckE,aAEnB/rB,KAAK6nB,cAAcoE,aAAajsB,KAAKsQ,iBAAiBO,WAAY3O,EAAQxC,EAAGwC,EAAQpC,m1BChD3FosB,cAEF,SAAAA,EAAY3pB,GACZ,IAAA9C,+FAAA0sB,CAAAnsB,KAAAksB,GACIzsB,EAAA2sB,EAAApsB,KAAAqsB,EAAAH,GAAA/rB,KAAAH,KAAMuC,IAEN,IAAM4N,EAAkB5N,EAAM4N,gBACxBC,EAAkB7N,EAAM6N,gBAJlC,OAMI3Q,EAAKooB,cAAgB,IAAI+C,EACzBnrB,EAAK6sB,0BAA4B,IAAIZ,EAAyBvb,EAAiBC,EAAiB3Q,EAAKooB,eAPzGpoB,wPAH4ByE,IAAMC,6DAgB9B,IAAMgM,EAAkBnQ,KAAKuC,MAAM4N,gBAC/BA,GAEAA,EAAgBoc,gBAAgBvsB,KAAK6nB,eAGzC,IAAMkB,EAAe/oB,KAAKuC,MAAMwmB,aAChC,GAAIA,EACJ,CACI,IAAMyD,EAAgBxsB,KAAKuC,MAAMiqB,gBAAkB,EACnDzD,EAAa3C,gBAAgBpmB,KAAKssB,0BAA2BE,mDAOjExsB,KAAK6nB,cAAc9V,iBAEnB,IAAMgX,EAAe/oB,KAAKuC,MAAMwmB,aAC5BA,GAEAA,EAAa0D,mBAAmBzsB,KAAKssB,qEAIzB,OAAOtsB,KAAK6nB,oEACA,OAAO7nB,KAAKssB,2DAKxC,IAAM3a,EAAe3R,KAAK6nB,cACpB6E,EAAuB/a,EAAagb,iBAE1C,OACIhW,EAAAlU,EAAAC,cAACiU,EAAAlU,EAAME,SAAP,KACIgU,EAAAlU,EAAAC,cAACkqB,EAAD,CACInC,MAAO9Y,EAAaQ,iBACxBwE,EAAAlU,EAAAC,cAACmqB,EAAD,CAAatD,QAAS5X,EAAaoa,YAC/BvC,MAAOkD,EAAqBlD,MAC5BC,MAAOiD,EAAqBjD,MAC5BC,IAAKgD,EAAqBhD,IAC1BC,IAAK+C,EAAqB/C,4CAM/BuC,k3BCpCAY,cAhCb,SAAAA,EAAYvqB,GACZ,mGAAAxC,CAAAC,KAAA8sB,GAAA7sB,EAAAD,KAAAE,EAAA4sB,GAAA3sB,KAAAH,KACQuC,0PAJY2B,IAAMC,kDASxB,OAAOwS,EAAAlU,EAAAC,cAAA,OAAKqS,UAAU,WAAWC,MAAM,6BAA6BC,QAAQ,aAC1E0B,EAAAlU,EAAAC,cAAA,SACEiU,EAAAlU,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,kMACvByR,EAAAlU,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,kGACvByR,EAAAlU,EAAAC,cAAA,WAASO,KAAK,UAAU6W,OAAO,oCAC/BnD,EAAAlU,EAAAC,cAAA,SACEiU,EAAAlU,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,wmBACvByR,EAAAlU,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,4FACvByR,EAAAlU,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAG,i+BAU1ByR,EAAAlU,EAAAC,cAAA,UAAQO,KAAK,UAAUL,GAAG,SAASE,GAAG,SAASC,EAAE,UACjD4T,EAAAlU,EAAAC,cAAA,WAASO,KAAK,UAAU6W,OAAO,s5BCgBxBiT,cA1Cb,SAAAA,EAAYxqB,GACZ,mGAAAyqB,CAAAhtB,KAAA+sB,GAAAE,EAAAjtB,KAAAktB,EAAAH,GAAA5sB,KAAAH,KACQuC,0PAJY2B,IAAMC,kDASxB,OAAOwS,EAAAlU,EAAAC,cAAA,OAAKqS,UAAU,WAAWC,MAAM,6BAA6BC,QAAQ,aAC1E0B,EAAAlU,EAAAC,cAAA,SACEiU,EAAAlU,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,kMACvByR,EAAAlU,EAAAC,cAAA,WAASO,KAAK,UAAU6W,OAAO,oCAC/BnD,EAAAlU,EAAAC,cAAA,UAAQO,KAAK,UAAUL,GAAG,SAASE,GAAG,SAASC,EAAE,UACjD4T,EAAAlU,EAAAC,cAAA,WAASO,KAAK,UAAU6W,OAAO,oEAC/BnD,EAAAlU,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,kGACvByR,EAAAlU,EAAAC,cAAA,SACEiU,EAAAlU,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAG,ufAKxByR,EAAAlU,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAG,gmBAMxByR,EAAAlU,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAG,+yDCqBnBioB,cAhDb,SAAAA,EAAY5qB,GACZ,mGAAA6qB,CAAAptB,KAAAmtB,GAAAE,EAAArtB,KAAAstB,EAAAH,GAAAhtB,KAAAH,KACQuC,0PAJY2B,IAAMC,kDAUxB,OAAOwS,EAAAlU,EAAAC,cAAA,OAAKqS,UAAU,WAAWC,MAAM,6BAA6BC,QAAQ,aAC3E0B,EAAAlU,EAAAC,cAAA,SACCiU,EAAAlU,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,kMAEvByR,EAAAlU,EAAAC,cAAA,WAASO,KAAK,UAAU6W,OAAO,oCAC/BnD,EAAAlU,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,kGACvByR,EAAAlU,EAAAC,cAAA,SACCiU,EAAAlU,EAAAC,cAAA,QAAMO,KAAK,UACViC,EAAE,2sCAWHyR,EAAAlU,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,0FACvByR,EAAAlU,EAAAC,cAAA,QAAMO,KAAK,UACViC,EAAE,izBASJyR,EAAAlU,EAAAC,cAAA,QAAMO,KAAK,UACViC,EAAE,0qCClBMqoB,cArBX,SAAAA,EAAYhrB,GAAO,mGAAAirB,CAAAxtB,KAAAutB,GAAAE,EAAAztB,KAAA0tB,EAAAH,GAAAptB,KAAAH,KAAQuC,0PAFL2B,IAAM4Q,sDAOxB,OACI6B,EAAAlU,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAAIuV,UAAW/U,KAAKuC,MAAMwS,UAAWrR,MAAO1D,KAAKuC,MAAMmB,MACvEsR,MAAM,6BACNtM,MAAM,KAAKC,OAAO,KAAKsM,QAAQ,aAC/B0B,EAAAlU,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,kMACvByR,EAAAlU,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,kGACvByR,EAAAlU,EAAAC,cAAA,WAASO,KAAK,UAAU6W,OAAO,oCAC/BnD,EAAAlU,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,wmBACvByR,EAAAlU,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,4FACvByR,EAAAlU,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAG,g+BACxByR,EAAAlU,EAAAC,cAAA,UAAQO,KAAK,UAAUL,GAAG,SAASE,GAAG,SAASC,EAAE,UACjD4T,EAAAlU,EAAAC,cAAA,WAASO,KAAK,UAAU6W,OAAO,wtCCXxC,IAAM6T,EAAiB,MAQxBC,cAEF,SAAAA,IACA,IAAAnuB,EADYouB,EACZluB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADwBguB,EACxB,mGAAAG,CAAA9tB,KAAA4tB,IACInuB,EAAAsuB,EAAA/tB,KAAAguB,EAAAJ,GAAAztB,KAAAH,QACKiuB,WAAaJ,EAFtBpuB,wPAHkCyuB,mDASrBC,EAAY5pB,GAErB,IAAMmW,EAAUnW,EACV0W,EAAgBP,EAAQQ,mBACxBjB,EAAWS,EAAQ0T,iBAEnBC,EADY3T,EAAQQ,mBAAmBoT,eAAeC,uBAC/BC,gBACvBC,EAAeJ,EAAWpZ,QAAQyZ,QAClChmB,EAAQ+lB,EAAa/lB,MACrBC,EAAS8lB,EAAa9lB,OACtBgmB,EAAM3uB,KAAK4uB,oBAAoBP,EAAY3lB,EAAOC,EAAQsS,GAE1D4T,EA1Be,OA0BL7uB,KAAKiuB,WAA+BN,EAAiB3tB,KAAKiuB,WAC1E,OAAO7T,QAAQC,QAAQ,CACnByU,KAAM7U,EAAW,IAAM4U,EACvBrqB,KAAM,QACNujB,KAAM4G,EACNjmB,MAAOA,EACPC,OAAQA,EACRomB,aAAcF,kDAIAG,EAAcC,GAEhC,IAAKA,EAAgB,OAAOA,EAE5B,IAAMC,EAAaD,EAAe5S,QAAQ,UAC1C,GAAI6S,EAAa,EAAG,OAAOD,EAE3B,IAAME,EAAYF,EAAe5S,QAAQ,IAAK6S,GACxCplB,EAAQmlB,EAAe3T,UAAU4T,EAAa,EAAGC,GACjDzrB,EAAQsrB,EAAaI,eAAetlB,GACtCxI,EAASoC,EAAQA,EAAM2rB,WAAa,UAExC,GAjDqB,OAiDjBrvB,KAAKiuB,WACT,CACI,IAAMqB,EAAMC,IAAqBjuB,GACjCiuB,IAAyBD,EAAKA,GAC9BhuB,EAASiuB,IAAqBD,GAGlC,OAAOhuB,8CAGSwb,EAASpU,EAAOC,EAAQsS,GAExC,IAAM7K,EAAkB6K,EAAce,qBAEhCwK,EAAWvL,EAAcqT,eAAe1H,qBACxC4I,EAAUhJ,EAASxN,aACnByW,EAAUjJ,EAASvN,aACnByW,EAAStf,EAAgBS,WAAW8e,kBACpCluB,EAAKiuB,EAAOpnB,KAAOknB,EAjER,GAkEXhuB,EAAKkuB,EAAOnnB,KAAOknB,EAjER,EAkEXG,EAAIF,EAAOhnB,MAAQmnB,GACnBC,EAAIJ,EAAO/mB,OAASonB,EACpBC,EAAQlT,EAAQmT,WAAU,GAChCD,EAAM/S,aAAa,UAAWxb,EAAK,IAAMD,EAAK,IAAMouB,EAAI,IAAME,GAC9DE,EAAM/S,aAAa,QAASvU,GAC5BsnB,EAAM/S,aAAa,SAAUtU,GAG7BqnB,EAAM/S,aAAa,YAAa,QAChC+S,EAAM/S,aAAa,cAAe,aAClC+S,EAAM/S,aAAa,QAAS,8BAG5B,IAAM+R,EAAe/T,EAAcN,SAASuV,kBAtBhD9mB,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IAuBI,QAAA0J,EAAAC,EAAsBwmB,EAAMG,qBAAqB,KAAjDzmB,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADW0T,EACXvT,EAAAO,MACUsmB,EAActT,EAAQuT,aAAa,UACnCC,EAAetwB,KAAKuwB,sBAAsBvB,EAAcoB,GAC1DA,IAAgBE,GAAcxT,EAAQG,aAAa,SAAUqT,GAEjE,IAAME,EAAY1T,EAAQuT,aAAa,QACjCI,EAAazwB,KAAKuwB,sBAAsBvB,EAAcwB,GACxDA,IAAcC,GAAY3T,EAAQG,aAAa,OAAQwT,IA/BnE,MAAA1mB,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAoCI,IADA,IAAMonB,EAAaV,EAAMW,uBAAuB,YACzCD,EAAW9wB,OAAS,GAC3B,CAEc8wB,EAAW,GACnBE,SAGN,OAAOZ,yCAMP,OAAQhwB,KAAKiuB,YAEb,KAAKN,EAAgB,OAAOb,EAC5B,IAlHsB,MAkHD,OAAOC,EAC5B,IAlHsB,MAkHD,OAAOI,EAC5B,IAlHqB,KAkHD,OAAO0D,EAC3B,QAAS,OAAO,yCAOhB,OAAQ7wB,KAAKiuB,YAEb,KAAKN,EAAgB,OAAO7R,KAAKC,SAAS,mBAC1C,IA/HsB,MA+HD,OAAOD,KAAKC,SAAS,mBAC1C,IA/HsB,MA+HD,OAAOD,KAAKC,SAAS,mBAC1C,IA/HqB,KA+HD,OAAOD,KAAKC,SAAS,kBACzC,QAAS,OAAAtb,EAAAutB,EAAAJ,EAAAltB,WAAA,WAAAV,MAAAG,KAAAH,0CAOT,OAAQA,KAAKiuB,YAEb,KAAKN,EAAgB,OAAO7R,KAAKC,SAAS,wBAC1C,IA5IsB,MA4ID,OAAOD,KAAKC,SAAS,wBAC1C,IA5IsB,MA4ID,OAAOD,KAAKC,SAAS,wBAC1C,IA5IqB,KA4ID,OAAOD,KAAKC,SAAS,uBACzC,QAAS,OAAAtb,EAAAutB,EAAAJ,EAAAltB,WAAA,WAAAV,MAAAG,KAAAH,8CAMT,OAAOA,KAAKiuB,gDAIP6C,EAAkB,CAC3B,IAAIlD,EAAwBD,GAC5B,IAAIC,EA3JsB,OA4J1B,IAAIA,EA3JsB,OA4J1B,IAAIA,EA3JqB,OA8JtB,SAASmD,EAAuBC,GAEnC,QAAA9jB,EAAA,EAAAA,EAAuB4jB,EAAvBlxB,OAAAsN,IACA,CADK,IAAM+jB,EAAYH,EAAJ5jB,GAEf8jB,EAAcE,iBAAiBD,EAAU,SAAWA,EAASE,05BC5JtDC,cAdX,SAAAA,EAAY7uB,GAAO,mGAAAxC,CAAAC,KAAAoxB,GAAAnxB,EAAAD,KAAAE,EAAAkxB,GAAAjxB,KAAAH,KAAQuC,0PAFI2B,IAAM4Q,sDAOjC,OACI6B,EAAAlU,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAAIuV,UAAW/U,KAAKuC,MAAMwS,UAAWrR,MAAO1D,KAAKuC,MAAMmB,MACvEsR,MAAM,6BACNtM,MAAM,KAAKC,OAAO,KAAKsM,QAAQ,aAC/B0B,EAAAlU,EAAAC,cAAA,QAAMwC,EAAE,gmDCPxB,IA2IemsB,cAvIX,SAAAA,EAAY9uB,GACZ,IAAA9C,MAAA,mGAAA6xB,CAAAtxB,KAAAqxB,KACIrxB,MAAAP,MAAA8xB,EAAAF,GAAAlxB,KAAAH,KAAMuC,mDAEDwjB,KAAO7hB,IAAM8hB,YAClBvmB,EAAK+xB,eAAiBttB,IAAM8hB,YAE5BvmB,EAAKgyB,MAAQ,CACTC,QAAQ,EACRC,aAAa,GAGjBlyB,EAAKmyB,kBAAoB,KAEzBnyB,EAAKoyB,aAAepyB,EAAKoyB,aAAaza,KAAlB0a,IAAAryB,KACpBA,EAAKsyB,aAAetyB,EAAKsyB,aAAa3a,KAAlB0a,IAAAryB,KACpBA,EAAKwY,QAAUxY,EAAKwY,QAAQb,KAAb0a,IAAAryB,KAGfA,EAAKuyB,0BAA4BvyB,EAAKuyB,0BAA0B5a,KAA/B0a,IAAAryB,KAlBrCA,wPAHyByE,IAAMC,sDAwBlBG,GACb,IAAAgP,EAAAtT,KACQA,KAAKyxB,MAAME,aAEf3xB,KAAKiyB,SAAS,CAAEP,QAAQ,GAAQ,WAE5B,IAAMQ,EAAW5e,EAAK/Q,MAAM2vB,SACxBA,GAAUA,GAAS,0CAIlB5tB,GACb,IAAA8P,EAAApU,KACQA,KAAKyxB,MAAME,aAEf3xB,KAAKiyB,SAAS,CAAEP,QAAQ,GAAS,WAE7B,IAAMQ,EAAW9d,EAAK7R,MAAM2vB,SACxBA,GAAUA,GAAS,qCAIvB5tB,GACR,IAAA6tB,EAAAnyB,KACIsE,EAAEif,kBACFjf,EAAEkf,iBAEExjB,KAAK4xB,mBAGL5M,aAAahlB,KAAK4xB,mBAClB5xB,KAAK4xB,kBAAoB,KAEzB5xB,KAAKiyB,SAAS,CAAEP,QAAQ,EAAOC,aAAa,GAAS,WAEjD,IAAMS,EAAUD,EAAK5vB,MAAM6vB,QACvBA,GAASA,IACb,IAAMF,EAAWC,EAAK5vB,MAAM2vB,SACxBA,GAAUA,GAAS,MAM3BlyB,KAAKiyB,SAAS,SAAC3V,EAAM/Z,GAEjB,IAAMjB,GAAUgb,EAAKqV,YAYrB,OAVAQ,EAAKP,kBAAoBlN,WAAW,WAEhCyN,EAAKP,kBAAoB,MA5ErB,KA+EJtwB,GAEAyb,SAASsV,gBAAgBpP,iBAAiB,YAAakP,EAAKH,2BAGzD,CACHN,OAAQpwB,EACRqwB,YAAarwB,IAElB,WAEC,IAAM4wB,EAAWC,EAAK5vB,MAAM2vB,SACxBA,GAAUA,EAASC,EAAKV,MAAMC,4DAKpBptB,GAC1B,IAAAguB,EAAAtyB,KACQA,KAAKyxB,MAAME,aAAe3xB,KAAKwxB,eAAelL,UAAYhiB,EAAEC,SAE5DD,EAAEif,kBACFjf,EAAEkf,iBAEFzG,SAASsV,gBAAgBlP,oBAAoB,YAAanjB,KAAKgyB,2BAE/DhyB,KAAKiyB,SAAS,CAAEP,QAAQ,EAAOC,aAAa,GAAS,WAEjD,IAAMO,EAAWI,EAAK/vB,MAAM2vB,SACxBA,GAAUA,GAAS,uCAQ/B,IAAM3I,EAAUvpB,KAAKuC,MAAMgnB,QACrBmI,EAAS1xB,KAAKyxB,MAAMC,OACpBa,GAAQb,IAAWnI,EAEzB,OACI5S,EAAAlU,EAAAC,cAACoV,EAAA,EAAD,CAAYiP,IAAK/mB,KAAK+lB,KAClByM,UAAWxyB,KAAKwxB,eAChBhyB,GAAIQ,KAAKuC,MAAM/C,GACfuV,UAAW6C,IAAM6a,iBACZf,EAAS,WAAa,KACtBa,EAAO,SAAW,IACnB,IAAMvyB,KAAKuC,MAAMwS,UACrBrR,MAAO1D,KAAKuC,MAAMmB,MAClBsU,MAAO,SACP6Z,aAAc7xB,KAAK6xB,aACnBE,aAAc/xB,KAAK+xB,aACnB9Z,QAASjY,KAAKiY,SACdtB,EAAAlU,EAAAC,cAACgwB,EAAD,i3BCzHDC,cAdX,SAAAA,EAAYpwB,GAAO,mGAAAqwB,CAAA5yB,KAAA2yB,GAAAE,EAAA7yB,KAAA8yB,EAAAH,GAAAxyB,KAAAH,KAAQuC,0PAFR2B,IAAM4Q,sDAOrB,OACI6B,EAAAlU,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAAIuV,UAAW/U,KAAKuC,MAAMwS,UAAWrR,MAAO1D,KAAKuC,MAAMmB,MACvEsR,MAAM,6BACNtM,MAAM,KAAKC,OAAO,KAAKsM,QAAQ,aAC/B0B,EAAAlU,EAAAC,cAAA,QAAMwC,EAAE,k9BCNjB,IA2CQ6tB,cAtCX,SAAAA,EAAYxwB,GAAO,mGAAAywB,CAAAhzB,KAAA+yB,GAAAE,EAAAjzB,KAAAkzB,EAAAH,GAAA5yB,KAAAH,KAAQuC,0PAFF2B,IAAMC,kDAO3B,IAAMolB,EAAUvpB,KAAKuC,MAAMgnB,QACrB4J,EAAOnzB,KAAKuC,MAAM4wB,KAClBjB,EAAWlyB,KAAKuC,MAAM2vB,SACtBK,GAAQhJ,EAEd,OACI5S,EAAAlU,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAChBuV,UAAW6C,IAAMwb,gBACZb,EAAO,SAAW,IACnB,IAAMvyB,KAAKuC,MAAMwS,UACrBrR,MAAO1D,KAAKuC,MAAMmB,OAClBiT,EAAAlU,EAAAC,cAACoV,EAAA,EAAD,CAAY/C,UAAW6C,IAAMyb,aArBlB,IAsBNF,EAAuB,WAAa,IACzClb,QAAS,WAEDia,GAAUA,EAzBP,IA2BXla,MAAO8D,KAAKC,SAAS,sBACjBpF,EAAAlU,EAAAC,cAAC4wB,EAAA,EAAD,OAEJ3c,EAAAlU,EAAAC,cAACoV,EAAA,EAAD,CAAY/C,UAAW6C,IAAMyb,aA7BpB,IA8BJF,EAAqB,WAAa,IACvClb,QAAS,WAEDia,GAAUA,EAjCT,IAmCTla,MAAO8D,KAAKC,SAAS,oBACjBpF,EAAAlU,EAAAC,cAAC6wB,EAAD,oxBCtCdC,cAEF,SAAAA,EAAYjxB,GACZ,IAAA9C,MAAA,mGAAAg0B,CAAAzzB,KAAAwzB,KACIxzB,MAAAP,MAAAi0B,EAAAF,GAAArzB,KAAAH,KAAMuC,mDAEDoxB,cAAgBl0B,EAAKk0B,cAAcvc,KAAnBwc,IAAAn0B,KACrBA,EAAKo0B,aAAep0B,EAAKo0B,aAAazc,KAAlBwc,IAAAn0B,KACpBA,EAAKq0B,aAAer0B,EAAKq0B,aAAa1c,KAAlBwc,IAAAn0B,KALxBA,wPAH4ByE,IAAMC,uDAWpBkP,GAEVrT,KAAKuC,MAAM4N,gBAAgB4jB,aAAa1gB,GACpCA,EAEArT,KAAKuC,MAAMmY,QAAQC,SAASqZ,qBAAqBC,iBAAiB,+BAIlEj0B,KAAKuC,MAAMmY,QAAQC,SAASqZ,qBAAqBC,iBAAiB,6CAMtEj0B,KAAKuC,MAAM6N,gBAAgB8jB,kDAGlBpqB,GAET9J,KAAKuC,MAAM4N,gBAAgBgkB,iBD7BV,IC6B2BrqB,oCAM5C,IAAMqG,EAAkBnQ,KAAKuC,MAAM4N,gBAC7BC,EAAkBpQ,KAAKuC,MAAM6N,gBAC7BoW,EAAWxmB,KAAKuC,MAAMikB,SACtBlU,EAAQlC,EAAgBS,WAE1BujB,EAAW,KAaf,OAZIjkB,IAIIikB,EAFAjkB,EAAgBkkB,kBAELlkB,EAAgBa,WAAWwV,EAASvV,mBD7CtC,EADE,ECkDAd,EAAgBmkB,kBDjDlB,EADE,GCuDf3d,EAAAlU,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAChBuV,UAAW6C,IAAM2c,eAC5B,IAAMv0B,KAAKuC,MAAMwS,UACNrR,MAAO1D,KAAKuC,MAAMmB,OAClBiT,EAAAlU,EAAAC,cAAC8xB,EAAD,CAAgBzf,UAAW6C,IAAM6c,YAC7B/wB,MAAO,CAAEgxB,OAAQ,EAAGC,MAAO,GAC3BpL,SAAUjX,EAAMsiB,WAAapO,KACzCA,EAASvV,kBAAkB4jB,iBAAmBrO,EAASvV,kBAAkB6jB,cAC7D5C,SAAUlyB,KAAK2zB,cACfvB,QAASpyB,KAAK6zB,eAClBld,EAAAlU,EAAAC,cAACqyB,EAAD,CAAgBhgB,UAAW6C,IAAM6c,YAC7B/wB,MAAO,CAAEgxB,OAAQ,EAAGM,KAAM,GAC1BzL,QAASpZ,EACTgjB,KAAMiB,EACNlC,SAAUlyB,KAAK8zB,eAClB9zB,KAAKuC,MAAMqX,+CAMb4Z,8MCnFTyB,2LAEU1wB,EAAQ2wB,GAA6Bv1B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAE,OAAOu1B,0CAC1C3wB,GAAU,MAAO,2CAEjB4wB,GAChBx1B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACI,OAAOw1B,0CAGKC,GAChBz1B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACI,OAAOy1B,gDAGa,MAAO,iDACP,MAAO,wCAItBC,EAA0B,IAAIJ,wKCpB3C,IAAMK,EAAwB,GA4DfC,aAxDX,SAAAA,IACA,IADYC,EACZ71B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD2B21B,+FAC3BG,CAAAz1B,KAAAu1B,GACIv1B,KAAK01B,iBAAmB,EAExB11B,KAAK21B,cAAgBH,EACrBx1B,KAAK41B,cAAgBC,IAErB71B,KAAK81B,WAAa,8DAGVC,GAER,GAAwB,mBAAbA,EACP,MAAM,IAAI50B,MAAM,kCACpBnB,KAAK81B,WAAW/oB,KAAKgpB,0CAGVA,GAEX,IAAMpwB,EAAI3F,KAAK81B,WAAWzZ,QAAQ0Z,GAClC,OAAIpwB,GAAK,IAEL3F,KAAK81B,WAAWvZ,OAAO5W,EAAG,IACnB,4CAKI3F,KAAK81B,WAAWl2B,OAAS,yCAC3B,OAAOI,KAAK81B,2CAIzB91B,KAAK41B,cAAgB,EACrB51B,KAAK01B,iBAAmB,iCAGrBpjB,GAEH,KAAMtS,KAAK41B,eAAiB51B,KAAK21B,cACjC,CACI31B,KAAK41B,cAAgB,EAErB,IAAMI,EAAY1jB,EAAM2jB,aAAY,GACpC,GAAID,IAAch2B,KAAK01B,iBACvB,CACI11B,KAAK01B,iBAAmBM,EAD5B,IAAA5sB,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IAEI,QAAA0J,EAAAC,EAAuBxJ,KAAK81B,WAA5BpsB,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,EACI2sB,EADJxsB,EAAAO,OACawI,IAJjB,MAAAvI,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,mOC1CL,IAED4sB,aAEF,SAAAA,EAAY5jB,gGACZ6jB,CAAAn2B,KAAAk2B,GACIl2B,KAAKo2B,OAAS9jB,EACdtS,KAAKq2B,oBAAsB,IAAId,EAE/Bv1B,KAAKs2B,aAAe,KACpBt2B,KAAKu2B,gBAAkB,KAEvBv2B,KAAK81B,WAAa,iEAGPU,GAGX,OADAx2B,KAAKs2B,aAAeE,EACbx2B,+CAGOsR,GAGd,OADAtR,KAAKu2B,gBAAkBjlB,EAChBtR,yCAGC+1B,GAGR,OADA/1B,KAAK81B,WAAW/oB,KAAKgpB,GACd/1B,4CAGI+1B,GAEX,IAAMhwB,EAAQ/F,KAAK81B,WAAWzZ,QAAQ0Z,GAClChwB,GAAS,GAAG/F,KAAK81B,WAAWvZ,OAAOxW,EAAO,4CAG/B/F,KAAK81B,WAAWl2B,OAAS,yEAQpCI,KAAKq2B,qBAELr2B,KAAKq2B,oBAAoBjT,OAAOpjB,KAAKo2B,gFAWrCxa,OAAOC,QAAQC,KAAKC,SAAS,wBAE7B/b,KAAKo2B,OAAOhpB,QACZpN,KAAK+Q,eA/DgB,qDAmEhBqO,EAAWqX,2CAKTrX,GACf,IAD0BqX,EAC1B92B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADsC,GAElCK,KAAK02B,aAAatX,EAAWqX,GADjC,IAAArtB,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IAGI,QAAA0J,EAAAC,EAAsBxJ,KAAK81B,WAA3BpsB,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,CAAAG,EAAAO,MACa4sB,aAAa12B,KAAMof,EAAWqX,IAL/C,MAAA1sB,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,4CASgB/E,GAChB,IADwBoyB,EACxBh3B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADuC,KAAMgc,EAC7Chc,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADwD,KAEpD,GAAKK,KAAKs2B,aAAV,CAMA,IAAME,EAAcx2B,KAAKs2B,aACnBM,EAAYD,GAAgB,GAClCH,EAAYK,WAAWtyB,EAAQoyB,EAAc,SAACpyB,EAAQuF,GAElD,IAAMqH,GAAcylB,GAAcA,EAAUh3B,OAAS,GAAKkK,IAAU8sB,EAChEryB,aAAkB1D,IAElB0D,EAAOgQ,aAAazK,GAEfvF,aAAkBhF,KAEvBgF,EAAOkN,aAAa3H,GAGpB6R,GAAUA,EAASpX,EAAQuF,EAAOqH,IACvC,SAAC5M,GAEIoX,GAAUA,EAASpX,EAAQ,MAAM,UArBjCoX,GAAUA,EAASpX,EAAQoyB,GAAc,+CAyB/B,OAAO32B,KAAKu2B,iBAAmBlB,2CAClC,OAAOr1B,KAAKs2B,6DAEL,OAAOt2B,KAAKq2B,uDACzB,OAAOr2B,KAAKo2B,4CAGdF,42BCvEAY,cAhDX,SAAAA,EAAYv0B,GACZ,mGAAAxC,CAAAC,KAAA82B,GAAA72B,EAAAD,KAAAE,EAAA42B,GAAA32B,KAAAH,KACUuC,0PAJkB2B,IAAMC,kDAU9B,IAAMyG,EAAO5K,KAAKuC,MAAMqI,KAClBzH,EAASnD,KAAKuC,MAAMY,OACpBE,EAAcrD,KAAKuC,MAAMc,YACzBC,EAAatD,KAAKuC,MAAMe,WACxBE,EAAgBxD,KAAKuC,MAAMiB,cAE3BuzB,EAAQnsB,EAAKC,gBACbmsB,EAAMpsB,EAAKE,cACXhE,EAAS8D,EAAKG,iBACdxK,EAAQqK,EAAKwD,eACb6oB,EAAUrsB,EAAKssB,mBAErB,OACIvgB,EAAAlU,EAAAC,cAACiU,EAAAlU,EAAME,SAAP,KACIgU,EAAAlU,EAAAC,cAACsD,EAAA,EAAD,CACIG,SAAUtB,IACV/D,KAAMi2B,EACNh2B,GAAIi2B,EACJlwB,OAAQA,EACRvG,MAAOA,EACPgF,UAAW0xB,EACX/zB,MAAOC,EACPE,YAAaA,EAAc,SAAAiB,IAETA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDkjB,OAAS7c,EACfvH,EAAYiB,IACZ,KACJhB,WAAYA,EAAa,SAAAgB,IAEPA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDkjB,OAAS7c,EACftH,EAAWgB,IACX,KACJd,cAAeA,81BC3C7B2zB,cAEF,SAAAA,EAAY50B,GACZ,IAAA9C,+FAAA23B,CAAAp3B,KAAAm3B,GACI13B,EAAA43B,EAAAr3B,KAAAs3B,EAAAH,GAAAh3B,KAAAH,KAAMuC,IAEN,IAAM4N,EAAkB5N,EAAM4N,gBACxBC,EAAkB7N,EAAM6N,gBAJlC,OAMI3Q,EAAK83B,uBAAyB,IAAIzkB,IAAsB3C,EAAiBC,GAN7E3Q,wPAHyByE,IAAMC,6DAe3B,IAAM4kB,EAAe/oB,KAAKuC,MAAMwmB,aAChC,GAAIA,EACJ,CACI,IAAMyD,EAAgBxsB,KAAKuC,MAAMiqB,gBAAkB,EACnDzD,EAAa3C,gBAAgBpmB,KAAKu3B,uBAAwB/K,mDAO9D,IAAMzD,EAAe/oB,KAAKuC,MAAMwmB,aAC5BA,GAEAA,EAAa0D,mBAAmBzsB,KAAKu3B,2EAIhB,OAAOv3B,KAAKu3B,wDAKrC,IAAMpnB,EAAkBnQ,KAAKuC,MAAM4N,gBAC7BqnB,EAAWx3B,KAAKuC,MAAMk1B,cAAgBX,EACtCY,EAAW13B,KAAKuC,MAAMm1B,SAEtBr0B,EAAc8M,EAAkBA,EAAgB9M,YAAc,KAC9DC,EAAa6M,EAAkBA,EAAgB7M,WAAa,KAE5DqnB,EAAQ,GARlBvhB,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IASI,QAAA0J,EAAAC,EAAkBxJ,KAAKuC,MAAMooB,MAA7BjhB,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADUwB,EACVrB,EAAAO,MACI6gB,EAAM5d,KACF4J,EAAAlU,EAAAC,cAAC80B,EAAD,CACI5xB,IAAKgF,EAAKsB,oBACVtB,KAAMA,EACNzH,OAAQ,0BACRE,YAAaA,EACbC,WAAYA,EACZE,cAAek0B,GAAYvnB,GAAmBA,EAAgBwnB,iBAAiB/sB,GAAQ,MAAQ,WAlB/G,MAAAb,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAsBI,OACIqN,EAAAlU,EAAAC,cAAA,SACKioB,wCAMFwM,42BCtBAS,cA5CX,SAAAA,EAAYr1B,GACZ,mGAAAxC,CAAAC,KAAA43B,GAAA33B,EAAAD,KAAAE,EAAA03B,GAAAz3B,KAAAH,KACUuC,0PAJkB2B,IAAMC,kDAU9B,IAAMjD,EAAOlB,KAAKuC,MAAMrB,KAClB+B,EAAOjD,KAAKuC,MAAMU,KAClBE,EAASnD,KAAKuC,MAAMY,OACpBE,EAAcrD,KAAKuC,MAAMc,YACzBC,EAAatD,KAAKuC,MAAMe,WACxBE,EAAgBxD,KAAKuC,MAAMiB,cAE3BjD,EAAQW,EAAK0M,eACb5K,EAAS9B,EAAKY,cAEpB,OACI6U,EAAAlU,EAAAC,cAACiU,EAAAlU,EAAME,SAAP,KACIgU,EAAAlU,EAAAC,cAACuB,EAAA,EAAD,CACIpB,SAAU3B,EACV8B,OAAQA,EACRzC,MAAOA,EACP2C,MAAOD,EACPG,QAASD,EACTE,YAAaA,EAAc,SAAAiB,IAETA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDkjB,OAASvmB,EACfmC,EAAYiB,IACZ,KACJhB,WAAYA,EAAa,SAAAgB,IAEPA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDkjB,OAASvmB,EACfoC,EAAWgB,IACX,KACJd,cAAeA,81BCvC7Bq0B,cAEF,SAAAA,EAAYt1B,GACZ,IAAA9C,+FAAAq4B,CAAA93B,KAAA63B,GACIp4B,EAAAs4B,EAAA/3B,KAAAg4B,EAAAH,GAAA13B,KAAAH,KAAMuC,IAEN,IAAM4N,EAAkB5N,EAAM4N,gBACxBC,EAAkB7N,EAAM6N,gBAJlC,OAMI3Q,EAAKw4B,uBAAyB,IAAI/nB,IAAsBC,EAAiBC,GAN7E3Q,wPAHyByE,IAAMC,6DAe3B,IAAM4kB,EAAe/oB,KAAKuC,MAAMwmB,aAChC,GAAIA,EACJ,CACI,IAAMyD,EAAgBxsB,KAAKuC,MAAMiqB,gBAAkB,EACnDzD,EAAa3C,gBAAgBpmB,KAAKi4B,uBAAwBzL,mDAO9D,IAAMzD,EAAe/oB,KAAKuC,MAAMwmB,aAC5BA,GAEAA,EAAa0D,mBAAmBzsB,KAAKi4B,2EAIhB,OAAOj4B,KAAKi4B,wDAKrC,IAAM9nB,EAAkBnQ,KAAKuC,MAAM4N,gBAC7BqnB,EAAWx3B,KAAKuC,MAAM21B,cAAgBN,EACtCF,EAAW13B,KAAKuC,MAAMm1B,SAEtBr0B,EAAc8M,EAAkBA,EAAgB9M,YAAc,KAC9DC,EAAa6M,EAAkBA,EAAgB7M,WAAa,KAE5DmnB,EAAQ,GARlBrhB,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IASI,QAAA0J,EAAAC,EAAmBxJ,KAAKuC,MAAMkoB,MAA9B/gB,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADWlI,EACXqI,EAAAO,MACI2gB,EAAM1d,KACF4J,EAAAlU,EAAAC,cAAC80B,EAAD,CACI5xB,IAAK1E,EAAKgL,oBACVhL,KAAMA,EACN+B,KAAM,0BACNE,OAAQ,0BACRE,YAAaA,EACbC,WAAYA,EACZE,cAAek0B,GAAYvnB,GAAmBA,EAAgBwnB,iBAAiBz2B,GAAQ,MAAQ,WAnB/G,MAAA6I,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAuBI,OACIqN,EAAAlU,EAAAC,cAAA,SACK+nB,wCAMFoN,42BCZAM,cAvDX,SAAAA,EAAY51B,GACZ,IAAA9C,EAAA,mGAAAM,CAAAC,KAAAm4B,IACI14B,EAAAQ,EAAAD,KAAAE,EAAAi4B,GAAAh4B,KAAAH,KAAMuC,KAED61B,UAAY,EAHrB34B,wPAHkCyE,IAAMC,kDAYpC,IAMIwQ,EAAQtM,EANNnH,EAAOlB,KAAKuC,MAAMrB,KAClBgC,EAAQlD,KAAKuC,MAAMW,MACnBG,EAAcrD,KAAKuC,MAAMc,YACzBC,EAAatD,KAAKuC,MAAMe,WACxBE,EAAgBxD,KAAKuC,MAAMiB,cAgBjC,MAbI,gBAAiBtC,GAEjByT,EAASzT,EAAKY,cACduG,EAAOnH,EAAKY,cAAgB,EAE5B9B,KAAKo4B,UAAY/vB,IAIjBsM,EAAS,EACTtM,EAAOrI,KAAKo4B,WAIZzhB,EAAAlU,EAAAC,cAACiU,EAAAlU,EAAME,SAAP,KACIgU,EAAAlU,EAAAC,cAACgS,EAAA,EAAD,CACI7R,SAAU3B,EACVyT,OAAQA,EACRtM,KAAMA,EACNnF,MAAOA,EACPG,YAAaA,EAAc,SAAAiB,IAETA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDkjB,OAASvmB,EACfmC,EAAYiB,IACZ,KACJhB,WAAYA,EAAa,SAAAgB,IAEPA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDkjB,OAASvmB,EACfoC,EAAWgB,IACX,KACJd,cAAeA,81BClD7B60B,cAEF,SAAAA,EAAY91B,GACZ,IAAA9C,+FAAA64B,CAAAt4B,KAAAq4B,GACI54B,EAAA84B,EAAAv4B,KAAAw4B,EAAAH,GAAAl4B,KAAAH,KAAMuC,IAEN,IAAM4N,EAAkB5N,EAAM4N,gBACxBC,EAAkB7N,EAAM6N,gBAJlC,OAMI3Q,EAAKg5B,yBAA2B,IAAIC,IAAoCvoB,EAAiBC,GAN7F3Q,wPAHuCyE,IAAMC,6DAezC,IAAM4kB,EAAe/oB,KAAKuC,MAAMwmB,aAChC,GAAIA,EACJ,CACI,IAAMyD,EAAgBxsB,KAAKuC,MAAMiqB,gBAAkB,EACnDzD,EAAa3C,gBAAgBpmB,KAAKy4B,yBAA0BjM,mDAOhE,IAAMzD,EAAe/oB,KAAKuC,MAAMwmB,aAC5BA,GAEAA,EAAa0D,mBAAmBzsB,KAAKy4B,2DAOzC,IAAMtoB,EAAkBnQ,KAAKuC,MAAM4N,gBAC7BqnB,EAAWx3B,KAAKuC,MAAMo2B,qBAAuBR,EAC7CT,EAAW13B,KAAKuC,MAAMm1B,SAGtBplB,EADkBtS,KAAKuC,MAAM6N,gBACLS,WAC1BtM,EAASvE,KAAKy4B,yBAAyBG,iBAEvC,iBAAkBtmB,IAAU/N,IAE5BA,EAAS+N,EAAMqD,gBAGnB,IAAMtS,EAAc8M,EAAkBA,EAAgB9M,YAAc,KAC9DC,EAAa6M,EAAkBA,EAAgB7M,WAAa,KAElE,OACIqT,EAAAlU,EAAAC,cAAA,SACK6B,GACGoS,EAAAlU,EAAAC,cAAC80B,EAAD,CACIt2B,KAAMqD,EACNrB,MAAO,0BACPG,YAAaA,EACbC,WAAYA,EACZE,cAAek0B,GAAYvnB,GAAmBA,EAAgBwnB,iBAAiBpzB,GAAU,MAAQ,+CAM1G8zB,w0BCrER,IAuOQQ,cAjOX,SAAAA,EAAYt2B,GACZ,IAAA9C,MAAA,mGAAAM,CAAAC,KAAA64B,KACI74B,MAAAP,MAAAS,EAAA24B,GAAA14B,KAAAH,KAAMuC,mDAEDu2B,aAAe,KAEpBr5B,EAAKs5B,YAAc,GACnBt5B,EAAKu5B,UAAY,OACjBv5B,EAAKw5B,WAAY,EACjBx5B,EAAKy5B,UAAY,KAEjBz5B,EAAK05B,eAAiB,KACtB15B,EAAK25B,QAAU72B,EAAM82B,aACrB55B,EAAK65B,WAAY,EACjB75B,EAAK85B,aAAc,EAEnB95B,EAAKgyB,MAAQ,CACTrvB,UAAW,GACX0H,MAAO,IAGXrK,EAAKyyB,SAAWzyB,EAAKyyB,SAAS9a,KAAd8K,IAAAziB,KAChBA,EAAK+5B,QAAU/5B,EAAK+5B,QAAQpiB,KAAb8K,IAAAziB,KACfA,EAAKg6B,OAASh6B,EAAKg6B,OAAOriB,KAAZ8K,IAAAziB,KACdA,EAAKi6B,UAAYj6B,EAAKi6B,UAAUtiB,KAAf8K,IAAAziB,KAvBrBA,wPAHuByE,IAAMC,sDA6BhB+0B,GAGT,OADAl5B,KAAKk5B,UAAYA,EACVl5B,4CAGI+4B,GAGX,OADA/4B,KAAK+4B,YAAcA,EACZ/4B,qCAGHsE,GAEAtE,KAAKu5B,cAELv5B,KAAK84B,aAAaa,SAClB35B,KAAKu5B,aAAc,kCAIpBj1B,GACP,IAAAgP,EAAAtT,KACSA,KAAKm5B,iBAENn5B,KAAKm5B,eAAiBzU,WAAW,WAG7B,GADApR,EAAK6lB,eAAiB,MAClB7lB,EAAKgmB,UAAT,CAEA,IAAMM,EAAStmB,EAAK8lB,QAEpB,GADA9lB,EAAK8lB,QAAU9lB,EAAK/Q,MAAM82B,aACtBtc,SAAS0G,gBAAkBnQ,EAAKwlB,cAAgBc,EACpD,CACI,IAAM9vB,EAAQwJ,EAAKme,MAAM3nB,MACrBwJ,EAAK/Q,MAAMs3B,UAAUvmB,EAAK/Q,MAAMs3B,SAAS/vB,GAE7CwJ,EAAK2e,SAAS,CAAC7vB,UAAW0H,SAI1BwJ,EAAK2e,SAAS,SAAC3V,EAAM/Z,GAEjB,MAAO,CAACuH,MAAOwS,EAAKla,aAIxBkR,EAAK/Q,MAAMk3B,QAAQnmB,EAAK/Q,MAAMk3B,OAAOn1B,KAhF7B,uCAqFdA,GACV,IAAA8P,EAAApU,KACI,GAtFkB,UAsFdsE,EAAEsB,IACN,CACI,GAAItB,EAAEw1B,UAAY95B,KAAKi5B,UAAW,OAElCj5B,KAAKo5B,SAAU,EACfp5B,KAAK84B,aAAapV,OAElBpf,EAAEkf,iBACFlf,EAAEif,sBA7FY,WA+FTjf,EAAEsB,MAEP5F,KAAKiyB,SAAS,SAAC3V,EAAM/Z,GAEjB,MAAO,CAACuH,MAAOwS,EAAKla,YACrB,WAECgS,EAAKglB,SAAU,EACfhlB,EAAK0kB,aAAapV,SAGtBpf,EAAEkf,iBACFlf,EAAEif,oDAIDjf,GAEL,IAAMC,EAASD,EAAEC,OACXw1B,EAAgBx1B,EAAOy1B,eACzBlwB,EAAQvF,EAAOuF,MACf9J,KAAKk5B,YAELpvB,EAAQ9J,KAAKk5B,UAAUpvB,EAAO9J,KAAKyxB,MAAM3nB,QAG7C9J,KAAKiyB,SAAS,CAACnoB,MAAOA,GAAQ,WAE1BvF,EAAO01B,aAAeF,oCAK9B,IADMJ,IACNh6B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACIK,KAAKu5B,YAAcI,EACnB35B,KAAK84B,aAAanV,2CAGXuW,GAEP,IAAM5d,EAAOtc,KAAKs5B,UAElB,OADAt5B,KAAKs5B,UAAYY,EACV5d,IAAS4d,sCAGR9uB,GACZ,IAIQ9J,EALY64B,EACpBx6B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD8B,GAAIy6B,IAClCz6B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACUmK,EAAQ9J,KAAKyxB,MAAM3nB,MACrBA,GAASA,EAAMlK,OAASwL,EAAOxL,OAASI,KAAKg5B,YAK7C13B,EAFAwI,GAASA,EAAMlK,OAAS,EAEfkK,EAAQqwB,EAAY/uB,EAIpBA,EAGTgvB,GAAUp6B,KAAKk5B,YAEf53B,EAAStB,KAAKk5B,UAAU53B,EAAQtB,KAAKyxB,MAAM3nB,QAG/C9J,KAAKiyB,SAAS,SAAC3V,EAAM/Z,GAEjB,MAAO,CAACuH,MAAOxI,yCAIZ8J,GAEPpL,KAAKiyB,SAAS,CAAC7vB,UAAWgJ,EAAQtB,MAAOsB,qCAGpCA,GACT,IACQtB,EAAQsB,KADhBzL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,KAEkBK,KAAKk5B,YAEfpvB,EAAQ9J,KAAKk5B,UAAUpvB,EAAO9J,KAAKyxB,MAAM3nB,QAE7C9J,KAAKiyB,SAAS,CAACnoB,MAAOA,uCAKtB,OAAO9J,KAAKyxB,MAAM3nB,uCAKtB,IAAAqoB,EAAAnyB,KACU+4B,EAAc/4B,KAAK+4B,YACnBsB,EAAYr6B,KAAKg5B,UACjBsB,EAAYt6B,KAAKi5B,UACjBlgB,EAAW/Y,KAAKuC,MAAMwW,SAEtBjP,EAAQ9J,KAAKyxB,MAAM3nB,MAEzB,OACI6M,EAAAlU,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAChBuV,UAAW/U,KAAKuC,MAAMwS,UACtBrR,MAAO1D,KAAKuC,MAAMmB,OAEd42B,EACI3jB,EAAAlU,EAAAC,cAAA,YAAUqkB,IAAK,SAAAA,GAAG,OAAEoL,EAAK2G,aAAa/R,GAClCviB,KAAK,OAAO+1B,KAAK,IAAIC,WAAW,QAChCzhB,SAAUA,EACVggB,YAAaA,EACbC,UAAWqB,EACXvwB,MAAOA,GAAS,GAChBooB,SAAUlyB,KAAKkyB,SACfsH,QAASx5B,KAAKw5B,QACdC,OAAQz5B,KAAKy5B,OACbC,UAAW15B,KAAK05B,YAEpB/iB,EAAAlU,EAAAC,cAAA,SAAOqkB,IAAK,SAAAA,GAAG,OAAEoL,EAAK2G,aAAa/R,GAC/BviB,KAAK,OAAOg2B,WAAW,QACvBzhB,SAAUA,EACVggB,YAAaA,EACbC,UAAWqB,EACXvwB,MAAOA,GAAS,GAChBooB,SAAUlyB,KAAKkyB,SACfsH,QAASx5B,KAAKw5B,QACdC,OAAQz5B,KAAKy5B,OACbC,UAAW15B,KAAK05B,yxBCzNtCe,cAEF,SAAAA,EAAYl4B,GACZ,IAAA9C,MAAA,mGAAAi7B,CAAA16B,KAAAy6B,KACIz6B,MAAAP,MAAAk7B,EAAAF,GAAAt6B,KAAAH,KAAMuC,mDAEDwjB,KAAO7hB,IAAM8hB,YAClBvmB,EAAKm7B,eAAiB,KAEtBn7B,EAAKgyB,MAAQ,CACToJ,MAAM,GAGVp7B,EAAK+nB,QAAU,KACf/nB,EAAKq7B,gBAAkB,KAEvBr7B,EAAKs7B,cAAgBt7B,EAAKs7B,cAAc3jB,KAAnB4jB,IAAAv7B,KACrBA,EAAKw7B,YAAcx7B,EAAKw7B,YAAY7jB,KAAjB4jB,IAAAv7B,KAdvBA,wPAH4ByE,IAAMC,oDAoBvB+2B,GACX,IAAA5nB,EAAAtT,KADyBm7B,EACzBx7B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADwC,KAAMk6B,EAC9Cl6B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADyD,KAAMy7B,EAC/Dz7B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD0E,KAEtE,KAAMu7B,aAAwB76B,KAC1B,MAAM,IAAIc,MAAM,0CAMpB,GAJAnB,KAAKwnB,QAAU0T,EACfl7B,KAAKq7B,gBAAkBxB,EACvB75B,KAAKs7B,gBAAkBF,EAEnBF,aAAwB37B,IAC5B,CACI,IAAM25B,EAAYl5B,KAAKuC,MAAM+O,eAAeiqB,wBAC5Cv7B,KAAK46B,eAAeY,aAAatC,QAEhC,GAAIgC,aAAwBr6B,IACjC,CACI,IAAMq4B,EAAYl5B,KAAKuC,MAAM+O,eAAemqB,wBAC5Cz7B,KAAK46B,eAAeY,aAAatC,GAGrCl5B,KAAKiyB,SAAS,CAAE4I,MAAM,GAAQ,WAE1BvnB,EAAKsnB,eAAec,WAAWP,GAAgB,IAC/C7nB,EAAKsnB,eAAejX,gDAMxB3jB,KAAKwnB,QAAU,KACfxnB,KAAKq7B,gBAAkB,KACvBr7B,KAAKs7B,gBAAkB,KAEvBt7B,KAAK46B,eAAeY,aAAa,MAEjCx7B,KAAKiyB,SAAS,CAAE4I,MAAM,2CAKtB,OAAO76B,KAAKyxB,MAAMoJ,yCAKlB,OAAO76B,KAAKwnB,8CAGF1d,GAEN9J,KAAKq7B,kBAELr7B,KAAKq7B,gBAAgBr7B,KAAKwnB,QAAS1d,GAEnC9J,KAAKs7B,gBAAkB,0CAInBh3B,GAEJtE,KAAKs7B,kBAELt7B,KAAKs7B,gBAAgBt7B,KAAKwnB,SAE1BxnB,KAAKq7B,gBAAkB,MAE3Br7B,KAAK27B,+CAKT,IAAAvnB,EAAApU,KACU47B,EAAe57B,KAAKyxB,MAAMoJ,KAE1Bt2B,EAASvE,KAAKwnB,QACdqU,EAAc77B,KAAKuC,MAAMmB,OAAS,GAGxC,GAFiB1D,KAAKuC,MAAMikB,SAG5B,CACI,IAAMjP,EAAkBvX,KAAKuC,MAAMikB,SAASI,qBAE5C,GAAIriB,EACJ,CACI,IAAMuC,EAASvC,EAAOwG,iBAChB+R,EAAUvF,EAAgBukB,aAC1BC,EAAmBjf,EAAQkf,wBAC3BC,EAkCtB,SAA+BtN,EAAKjvB,EAAGI,GAEnC,IAAM6e,EAAMgQ,EAAI/P,eAChB,MAAO,CACHlf,EAAIA,EAAIif,EAAIlc,EAAKkc,EAAIra,EACrBxE,EAAIA,EAAI6e,EAAIzZ,EAAKyZ,EAAIE,GAvCKqd,CACdpf,EACAhW,EAAOpH,EAAI6X,EAAgByB,aAC3BlS,EAAOhH,EAAIyX,EAAgB0B,cAEzBvZ,EAAIu8B,EAAUv8B,EACdI,EAAIm8B,EAAUn8B,EACd0vB,GAAYxvB,KAAK+lB,KAAKO,QAAQ6V,YAAc,EAAKJ,EAAiB/G,KAClEvF,GAAYzvB,KAAK+lB,KAAKO,QAAQ8V,aAAe,EAAKL,EAAiBM,IAEzER,EAAW,IAAW/7B,EAAI2vB,EAAW,KACrCoM,EAAW,KAAYn8B,EAAI8vB,EAAW,MAI9C,OACI7Y,EAAAlU,EAAAC,cAAA,OAAKqkB,IAAK/mB,KAAK+lB,KACXvmB,GAAIQ,KAAKuC,MAAM/C,GACfuV,UAAW6C,IAAM0kB,kBACZV,EAAe,SAAW,IAC3B,IAAM57B,KAAKuC,MAAMwS,UACrBrR,MAAOm4B,GACPllB,EAAAlU,EAAAC,cAAC65B,EAAD,CAAcxV,IAAK,SAAAA,GAAG,OAAI3S,EAAKwmB,eAAiB7T,GAC5CsS,aAAcr5B,KAAKuC,MAAMi6B,WACzB3C,SAAU75B,KAAK+6B,cACftB,OAAQz5B,KAAKi7B,cACjBtkB,EAAAlU,EAAAC,cAAA,OAAKqS,UAAW6C,IAAMwb,gBACjBpzB,KAAKuC,MAAMqX,gDAgBjB6gB,oCC/JR,SAASgC,EAAoBnqB,GAEhC,GAAIA,EAAMoqB,gBAAkB,EAAG,MAAO,GAEtC,IAAM/R,EAAQrY,EAAMzF,WACd4d,EAAQnY,EAAM3E,WAAWgvB,QACzBjnB,EAAY+U,EAAM3H,QACpB8Z,EAAY,GAGhB,IAFAA,EAAU7vB,KAAK2I,GAETknB,EAAUh9B,OAAS,GACzB,CACI,IAAMsB,EAAO07B,EAAUC,MAD3BzzB,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IAEI,QAAA0J,EAAAC,EAAkBmhB,EAAlBjhB,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADUwB,EACVrB,EAAAO,MACI,GAAIc,EAAKkC,gBAAkB5L,EAC3B,CACI,IAAMyE,EAAI8kB,EAAMpO,QAAQzR,EAAKoC,aAC7B,GAAIrH,GAAK,EACT,CACI,IAAMm3B,EAAWrS,EAAMlO,OAAO5W,EAAG,GAAG,GACpCi3B,EAAU7vB,KAAK+vB,MAV/B,MAAA/yB,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,IAgBA,OAAOmhB,EC3BXxO,EAAA/W,EAAAgX,EAAA,sBAAAugB,2NCEMM,aAEF,SAAAA,iGAAch9B,CAAAC,KAAA+8B,kEAEEx4B,GAEZ,OAAIA,aAAkB1D,IAEXb,KAAKwU,sBAILxU,KAAK0R,gEAIFnN,GAEd,OAAIA,aAAkB1D,IAEXb,KAAKy7B,wBAILz7B,KAAKu7B,sEAOhB,MAAO,iDAMP,MAAO,mDAMP,MAAM,IAAIp6B,MAAM,0FAMhB,MAAM,IAAIA,MAAM,+EAIT47B,8MCvDTC,aAEF,SAAAA,EAAYC,EAAQC,GAEhB,+FADJn9B,CAAAC,KAAAg9B,IACSC,EAAQ,MAAM,IAAI97B,MAAM,yCAC7B,IAAK+7B,EAAgB,MAAM,IAAI/7B,MAAM,kDAErCnB,KAAKm9B,QAAUF,EACfj9B,KAAKo9B,gBAAkBF,4DAGhBD,GAEPj9B,KAAKo9B,gBAAgB/W,WAAW4W,mCAG5BA,GAEJj9B,KAAKo9B,gBAAgB7W,QAAQ0W,kCAG1BA,gDAMH,OAAOj9B,KAAKo9B,oDAKZ,OAAOp9B,KAAKm9B,6CAILH,oCCpCf,IAEMK,EAAY,CACdC,iBAAkB,KAClBC,MAFc,SAERC,GAEF,IAAMC,EAAkBD,EAAY98B,UACpCg9B,OAAOC,OAAOF,EAAiBJ,UACxBI,EAAgBF,OAG3BK,cATc,SASAxe,GAIV,GAFKpf,KAAKs9B,mBAAkBt9B,KAAKs9B,iBAAmB,IAAIr1B,KAEnDjI,KAAKs9B,iBAAiBjxB,IAAI+S,GAM3B,MAAM,IAAIje,MAAM,6BAAgCie,EAAY,KAJ5Dpf,KAAKs9B,iBAAiBlxB,IAAIgT,EAAW,KAQ7Cye,gBAvBc,SAuBEze,GAEZ,GAAKpf,KAAKs9B,iBAAV,CAEA,IAAIt9B,KAAKs9B,iBAAiBjxB,IAAI+S,GAM1B,MAAM,IAAIje,MAAM,yBAA4Bie,EAAY,KAJxDpf,KAAKs9B,iBAAiBhxB,OAAO8S,KAQrC6D,iBArCc,SAqCG7D,EAAW2W,GAKxB,GAHK/1B,KAAKs9B,mBAAkBt9B,KAAKs9B,iBAAmB,IAAIr1B,MAGpDjI,KAAKs9B,iBAAiBjxB,IAAI+S,GAW1B,MAAM,IAAIje,MAAM,yBAA4Bie,EAAY,KAT5Cpf,KAAKs9B,iBAAiBjwB,IAAI+R,GAYhCrS,KAAKgpB,IAGnB5S,oBA3Dc,SA2DM/D,EAAW2W,GAE3B,GAAK/1B,KAAKs9B,iBAAV,CAEA,IAAIt9B,KAAKs9B,iBAAiBjxB,IAAI+S,GAqB1B,MAAM,IAAIje,MAAM,kBAAqBie,EAAY,KAhBjD,IAHA,IAAM0e,EAAY99B,KAAKs9B,iBAAiBjwB,IAAI+R,GACxC/L,GAAO,EACP1N,EAAIm4B,EAAUl+B,OACX+F,KAECm4B,EAAUn4B,KAAOowB,IAEjB+H,EAAUvhB,OAAO5W,EAAG,GACpB0N,GAAO,GAIf,IAAKA,EAED,MAAM,IAAIlS,MAAM,sCAAyCie,EAAY,OASjF2e,oBAxFc,SAwFM3e,GAEhB,GAAKpf,KAAKs9B,iBAEV,GAAKle,EAIA,KAAIpf,KAAKs9B,iBAAiBjxB,IAAI+S,GAY/B,MAAM,IAAIje,MAAM,yBAA4Bie,EAAY,KAVtCpf,KAAKs9B,iBAAiBjwB,IAAI+R,GAClCxf,OAAS,OALnBI,KAAKs9B,iBAAiBlwB,SAkB9B4wB,oBAhHc,SAgHM5e,GAEhB,OAAKpf,KAAKs9B,kBACHt9B,KAAKs9B,iBAAiBjxB,IAAI+S,GAAapf,KAAKs9B,iBAAiBjwB,IAAI+R,GAAWxf,OADhD,GAIvCq+B,kBAtHc,SAsHI7e,GAEd,OAAKpf,KAAKs9B,iBACHt9B,KAAKs9B,iBAAiBjwB,IAAI+R,GADE,MAIvC8e,GA5Hc,SA4HX9e,EAAW2W,GAEV/1B,KAAKijB,iBAAiB7D,EAAW2W,IAGrCoI,KAjIc,SAiIT/e,EAAW2W,GAChB,IAAAt2B,EAAAO,KAaIA,KAAKijB,iBAAiB7D,EAZZ,SAAJP,IAEF,IACA,QAAAQ,EAAA1f,UAAAC,OAHUw+B,EAGV,IAAAvwB,MAAAwR,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAHU6e,EAGV7e,GAAA5f,UAAA4f,GACIwW,EAAStW,MAAM,KAAM2e,GAFzB,QAMI3+B,EAAK0jB,oBAAoB/D,EAAWP,OAOhDwf,KAlJc,SAkJTjf,GACL,QAAAkf,EAAA3+B,UAAAC,OADmBw+B,EACnB,IAAAvwB,MAAAywB,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IADmBH,EACnBG,EAAA,GAAA5+B,UAAA4+B,GACI,IAEI,IAAKv+B,KAAKs9B,iBAAkB,OAE5B,IAAIQ,EACJ,IAAK99B,KAAKs9B,iBAAiBjxB,IAAI+S,GASvB,MAAM,IAAIje,MAAM,yBAA4Bie,EAAY,KAK5D0e,EAAY99B,KAAKs9B,iBAAiBjwB,IAAI+R,GAItC,IAFA,IAAI9d,EAAS,KACTqE,EAAIm4B,EAAUl+B,OACX+F,KACP,CACI,IAEIrE,EAASw8B,EAAUn4B,GAAG8Z,MAAM,KAAM2e,GAEtC,MAAO95B,GAEH,SAGJ,IAAe,IAAXhD,EAAiB,OAlCjC,QAwCItB,KAAKw+B,iBAAL/e,MAAAzf,KAAA,CAAsBof,GAAtBvb,OAAoCu6B,MAI5CI,iBAhMc,SAgMGpf,MAMNie,41BCtMToB,cAEF,SAAAA,EAAYruB,EAAiBsuB,GAC7B,IAAAj/B,EAAA,mGAAAM,CAAAC,KAAAy+B,IACIh/B,EAAAQ,EAAAD,KAAAE,EAAAu+B,GAAAt+B,KAAAH,QAEKsQ,iBAAmBF,EACxB3Q,EAAKk/B,aAAeD,EACpBj/B,EAAKm/B,WAAaF,EAAYG,UAAUzuB,EAAgBS,YAL5DpR,wPAHgC+W,gDAYtBC,GAEN,IAAMqoB,EAAYroB,EAAYsoB,mBAC1BD,aAAqBL,EAErBK,EAAUE,UAAUvoB,GAIpBzW,KAAKsQ,iBAAiBO,WAAWzD,0CAK/BqJ,GAENzW,KAAK2+B,aAAaM,MAAMj/B,KAAK4+B,WAAY5+B,KAAKsQ,iBAAiBO,iDAGxD4tB,q3BC9BTS,cAEF,SAAAA,EAAY38B,GACZ,mGAAAxC,CAAAC,KAAAk/B,GAAAj/B,EAAAD,KAAAE,EAAAg/B,GAAA/+B,KAAAH,KACUuC,0PAJa2B,IAAMC,kDAUzB,OACI3B,EAAAC,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAChBuV,UAAW6C,IAAMunB,cACvB,IAAMn/B,KAAKuC,MAAMwS,UACXrR,MAAO1D,KAAKuC,MAAMmB,6CAMnBw7B,m2BCrBTE,cAEF,SAAAA,EAAY78B,GAAO,mGAAAxC,CAAAC,KAAAo/B,GAAAn/B,EAAAD,KAAAE,EAAAk/B,GAAAj/B,KAAAH,KAAQuC,0PAFJ2B,IAAM4Q,sDAOzB,OACItS,EAAAC,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAAIuV,UAAW/U,KAAKuC,MAAMwS,UAAWrR,MAAO1D,KAAKuC,MAAMmB,MACvEsR,MAAM,6BACNtM,MAAM,KAAKC,OAAO,KAAKsM,QAAQ,aAC/BzS,EAAAC,EAAAC,cAAA,QAAMwC,EAAE,4FAKTk6B,izBCfTC,cAEF,SAAAA,EAAY98B,GACZ,IAAA9C,MAAA,mGAAAM,CAAAC,KAAAq/B,KACIr/B,MAAAP,MAAAS,EAAAm/B,GAAAl/B,KAAAH,KAAMuC,mDAEDkvB,MAAQ,CACT6N,QAAS/8B,EAAMg9B,UAAW,GAG9B9/B,EAAKyyB,SAAWzyB,EAAKyyB,SAAS9a,KAAd8K,IAAAziB,KAPpBA,wPAHwByE,IAAMC,oDAanB2F,GAEP9J,KAAKiyB,SAAS,CAACqN,QAASx1B,wCAKxB,OAAO9J,KAAKyxB,MAAM6N,yCAGbh7B,GAEL,IAAMg7B,EAAUh7B,EAAEC,OAAO+6B,QACrBt/B,KAAKyxB,MAAM6N,UAAYA,GAEvBt/B,KAAKiyB,SAAS,CAACqN,QAASA,qCAO5B,OACI98B,EAAAC,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAChBuV,UAAW6C,IAAM4nB,mBACvB,IAAMx/B,KAAKuC,MAAMwS,UACXrR,MAAO1D,KAAKuC,MAAMmB,OAClBlB,EAAAC,EAAAC,cAAA,SAAO8B,KAAK,WAAWhF,GAAIQ,KAAKuC,MAAM/C,GAAK,YACvCsvB,KAAM9uB,KAAKuC,MAAM/C,GAAK,YAAasK,MAAO9J,KAAKuC,MAAMuH,MACrDw1B,QAASt/B,KAAKyxB,MAAM6N,QACpBvmB,SAAU/Y,KAAKuC,MAAMwW,SACrBmZ,SAAUlyB,KAAKkyB,WACnB1vB,EAAAC,EAAAC,cAAA,SAAO+8B,QAASz/B,KAAKuC,MAAM/C,GAAK,aAAcQ,KAAKuC,MAAMyV,6CAM1DqnB,2xBCpDf,IAEMK,cAEF,SAAAA,EAAYn9B,GACZ,IAAA9C,MAAA,mGAAAM,CAAAC,KAAA0/B,KACI1/B,MAAAP,MAAAS,EAAAw/B,GAAAv/B,KAAAH,KAAMuC,mDAEDwkB,IAAM,KAEXtnB,EAAKkgC,SAAW,KAEhBlgC,EAAK0iB,YAAc1iB,EAAK0iB,YAAY/K,KAAjB8K,IAAAziB,KACnBA,EAAKmgC,aAAengC,EAAKmgC,aAAaxoB,KAAlB8K,IAAAziB,KARxBA,wPAH6ByE,IAAMC,qDAcvBG,GAEOtE,KAAKuC,MAAMs9B,OACfC,YAAW,IAElB/iB,SAASkG,iBAAiB,UAAWjjB,KAAK4/B,cAG1C5/B,KAAKuC,MAAM0V,SAEXjY,KAAKuC,MAAM0V,QAAQ3T,EAAGtE,6CAK9B,IAAAsT,EAAAtT,KACI+c,SAASoG,oBAAoB,UAAWnjB,KAAK4/B,cAEzC5/B,KAAK2/B,UAAU3a,aAAahlB,KAAK2/B,UACrC3/B,KAAK2/B,SAAWjb,WAAW,WAEvBpR,EAAKqsB,SAAW,KAEhB,IAAME,EAASvsB,EAAK/Q,MAAMs9B,OAC1BA,EAAOC,YAAW,GAEd/iB,SAAS0G,gBAAkBnQ,EAAKyT,IAEhC8Y,EAAOlc,OAAM,GAER5G,SAAS0G,gBAAkBnQ,EAAK/Q,MAAMs9B,OAAO/G,cAElD+G,EAAOpG,UAhDI,qCAuDvB,IAAArlB,EAAApU,KACI,OACIwC,EAAAC,EAAAC,cAAA,UAAQqkB,IAAK,SAAAA,GAAG,OAAE3S,EAAK2S,IAAIA,GACvBvnB,GAAIQ,KAAKuC,MAAM/C,GACfuV,UAAW/U,KAAKuC,MAAMwS,UACtBrR,MAAO1D,KAAKuC,MAAMmB,MAClBsU,MAAOhY,KAAKuC,MAAMyV,MAClBmK,YAAaniB,KAAKmiB,aACjBniB,KAAKuC,MAAMyV,4CAMb0nB,m2BCrETK,cAEF,SAAAA,EAAYx9B,GAAO,mGAAAxC,CAAAC,KAAA+/B,GAAA9/B,EAAAD,KAAAE,EAAA6/B,GAAA5/B,KAAAH,KAAQuC,0PAFH2B,IAAM4Q,sDAO1B,OACItS,EAAAC,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAAIuV,UAAW/U,KAAKuC,MAAMwS,UAAWrR,MAAO1D,KAAKuC,MAAMmB,MACvEsR,MAAM,6BACNtM,MAAM,KAAKC,OAAO,KAAKsM,QAAQ,aAC/BzS,EAAAC,EAAAC,cAAA,QAAMwC,EAAE,yGAKT66B,8MC0BAC,aA1CX,SAAAA,iGACAjgC,CAAAC,KAAAggC,GACIhgC,KAAK81B,WAAa,8DAGVC,GAER,GAAwB,mBAAbA,EACP,MAAM,IAAI50B,MAAM,kCACpBnB,KAAK81B,WAAW/oB,KAAKgpB,0CAGVA,GAEX,IAAMpwB,EAAI3F,KAAK81B,WAAWzZ,QAAQ0Z,GAClC,OAAIpwB,GAAK,IAEL3F,KAAK81B,WAAWvZ,OAAO5W,EAAG,IACnB,4CAOX3F,KAAK81B,WAAWl2B,OAAS,yCAKzB,OAAOI,KAAK81B,0CAGToH,GACP,IAAA9zB,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IACI,QAAA0J,EAAAC,EAAuBxJ,KAAK81B,WAA5BpsB,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,EACI2sB,EADJxsB,EAAAO,OACaozB,IAHjB,MAAAnzB,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,mNClCE22B,aAEF,SAAAA,iGACAC,CAAAlgC,KAAAigC,GACIjgC,KAAKmgC,sBAAwB,IAAIH,EAEjChgC,KAAKogC,QAAU,GACfpgC,KAAKqgC,UAAY,GAEjBrgC,KAAKsgC,cAAgBtgC,KAAKsgC,cAAclpB,KAAKpX,gEAGtCi9B,GAEPA,EAAOjhB,qBAAqBukB,wBAAwBC,YAAYxgC,KAAKsgC,+CAGjErD,GAEJA,EAAOjhB,qBAAqBukB,wBAAwBE,eAAezgC,KAAKsgC,qDAG9DhuB,GAEVtS,KAAK0gC,oBAAoBpuB,EAAOtS,KAAK2gC,aAAc3gC,KAAKogC,QAASpgC,KAAKqgC,WACtErgC,KAAKmgC,sBAAsB/c,OAAOpjB,gDAGpB4gC,EAAStgC,GAEvB,MAAM,IAAIa,MAAM,6EAGAmR,EAAOhS,EAAKugC,EAAQC,GAEpC,MAAM,IAAI3/B,MAAM,8EAKhB,OAAOnB,KAAKogC,qDAKZ,OAAOpgC,KAAKqgC,4DAKZ,OAAOrgC,KAAKmgC,+DAKZ,OAAOngC,KAAKogC,QAAQxgC,QAAU,uCAK9B,MAAM,IAAIuB,MAAM,oEAIT8+B,4rCCzBAc,cArCX,SAAAA,EAAYvhC,EAAIE,EAAGI,GACnB,IAAAL,EAAA,mGAAAM,CAAAC,KAAA+gC,IACIthC,EAAAQ,EAAAD,KAAAE,EAAA6gC,GAAA5gC,KAAAH,KAAMR,EAAIE,EAAGI,KAERkhC,SAAU,EAGfvhC,EAAKwhC,SAAU,EANnBxhC,wPAHkBF,oDAYJuK,GAEV9J,KAAKghC,QAAUl3B,0CAKf,OAAO9J,KAAKghC,8CAGFl3B,GAEV9J,KAAKihC,QAAUn3B,0CAKf,OAAO9J,KAAKihC,gDAKhB,IADczgC,IACdb,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACI,OAAOc,EAAAP,EAAA6gC,EAAArgC,WAAA,gBAAAV,MAAAG,KAAAH,KAAoBQ,GAAe,KAAOR,KAAKghC,QAAU,IAAM,ioCCnCvE,IAAME,EAAiB,KACjBC,EAAmB,IACnBC,EAAiB,IACjBC,EAAgB,IAChBC,EAAa,IA0CXC,cAtCX,SAAAA,EAAY/hC,EAAIsB,GAChB,IADsBC,EACtBpB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD2B,KAC3B,mGAAA6hC,CAAAxhC,KAAAuhC,GAAAE,EAAAzhC,KAAA0hC,EAAAH,GAAAphC,KAAAH,KACUR,EAAIsB,EAAMC,0PAJFsN,mDAQL9N,GAELA,EAEAohC,EAAAD,EAAAH,EAAA7gC,WAAA,eAAAV,MAAAG,KAAAH,KAAmBO,GAInBohC,EAAAD,EAAAH,EAAA7gC,WAAA,eAAAV,MAAAG,KAAAH,KACIshC,EAAaF,EACbE,EAAaD,EACbC,kDAIWM,GAGnB,IAAIC,GADJD,EAAOA,EAAKE,QACSzlB,QAAQ+kB,GACzBW,EAAWH,EAAKvlB,QAAQglB,GAE5B,GAAIQ,GAAa,EAAG,MAAO,CAACP,EAAYA,EAAYA,GACpD,IAAIU,EAAaJ,EAAKtmB,UAAU,EAAGumB,GACnC,GAAIE,GAAY,EAAG,MAAO,CAACC,EAAYV,EAAYA,GACnD,IAAIW,EAAYL,EAAKtmB,UAAUumB,EAAY,EAAGE,GAC1CG,EAAaN,EAAKtmB,UAAUymB,EAAW,GAC3C,OAAIG,EAAWtiC,QAAU,EAAU,CAACoiC,EAAYC,EAAWX,GAEpD,CAACU,EAAYC,EAAWC,6qBC/BxBC,cANX,SAAAA,IACA,mGAAAC,CAAApiC,KAAAmiC,GAAAE,EAAAriC,KAAAsiC,EAAAH,GAAAhiC,KAAAH,KACU+gC,EAASQ,gPAJAplB,y2BCMvB,IAAMomB,EAA4B,IA2ElC,SAASC,EAAcC,GAEnB,OAAyB,IAAlBA,EAAO7iC,QACV6iC,IAAWvB,GACXuB,IAAWtB,GACXsB,IAAWrB,GACXqB,IAAWpB,EAGnB,SAASqB,EAAmBt3B,GAQxB,IAPJ,IAKQu3B,EAN4BC,EACpCjjC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACUkjC,EAAQz3B,EAAO1D,MAAMw5B,GACrB5/B,EAAS,IAAIwhC,IACbljC,EAASijC,EAAMjjC,OAGjBmjC,EAAe,EACVp9B,EAAI,EAAGA,EAAI/F,IAAU+F,EAK1B,IAFAo9B,GADAJ,EAAUE,EAAMl9B,GAAGm8B,OAAOp6B,MAAM,KACT9H,SAEH,EAEhB0B,EAAO0hC,IAAI,QAFf,CAWA,IALA,IAAIhB,EAAa,KACbC,EAAY,KACZC,EAAa,KACbO,EAAS,KAEJQ,EAAI,EAAGA,EAAIF,IAAgBE,EAEhC,GAAmB,OAAfjB,EAGIQ,EADJC,EAASE,EAAQM,GAAGnB,UAGhBE,EAAaS,EACTQ,EAAI,EAAIF,IAAiBJ,EAAQM,EAAI,KAAO7B,GAAkBuB,EAAQM,EAAI,KAAO9B,MAE/E8B,QAIT,GAAkB,OAAdhB,EAGDO,EADJC,EAASE,EAAQM,GAAGnB,UAGhBG,EAAYQ,EACRQ,EAAI,EAAIF,IAAiBJ,EAAQM,EAAI,KAAO5B,GAAiBsB,EAAQM,EAAI,KAAO9B,MAE9E8B,QAIT,GAAmB,OAAff,GAGDM,EADJC,EAASE,EAAQM,GAAGnB,QAEpB,CACII,EAAaO,EACb,MAKO,OAAfT,EAEA1gC,EAAO0hC,IAAI,IAEQ,OAAdf,EAEL3gC,EAAO0hC,IAAIhB,EAAaZ,GAEJ,OAAfc,EAEL5gC,EAAO0hC,IAAIhB,EAAaZ,EAAiBa,EAAYZ,GAIrD//B,EAAO0hC,IAAIhB,EAAaZ,EAAiBa,EAAYZ,EAAgBa,GAK7E,OAAI5gC,EAAO+G,MAAQ,EAAUu6B,EAAY,KAAOtB,EACzCzzB,MAAM/M,KAAKQ,GAAQ4hC,KAAKhC,GAGpBiC,kBApKX,SAAAA,IACA,IAAA1jC,EAAA,mGAAA2jC,CAAApjC,KAAAmjC,IACI1jC,EAAA4jC,EAAArjC,KAAAsjC,EAAAH,GAAAhjC,KAAAH,QAEKujC,QAAUhB,EACf9iC,EAAK6Q,iBAAmB,KAJ5B7Q,wPAH0Bs9B,yDAUP3sB,GAGf,OADApQ,KAAKsQ,iBAAmBF,EACjBpQ,uDAGewjC,GAEtBxjC,KAAKujC,QAAUC,sDAKf,OAAOxjC,KAAKujC,sDAMZ,GAAKvjC,KAAKsQ,iBAAiBmzB,wBAK3B,CACI,IAAMnxB,EAAQtS,KAAKsQ,iBAAiBO,WAC9B6yB,EAAa,GACfC,EAAY,EAEVjuB,EAAYpD,EAAMqD,eACpBD,GAAaA,EAAUkuB,kBAAiBD,EAAY,GAGxD,IADA,IAAIE,EAAe7jC,KAAK8jC,4BAA8BH,EAC/CrxB,EAAMyxB,gBAAgBF,EAAcH,GAAY9jC,OAAS,GAE5D8jC,EAAW9jC,OAAS,IAClB+jC,EACFE,EAAe7jC,KAAK8jC,4BAA8BH,EAGtD,OAAOE,EAnBP,OAAO7jC,KAAK8jC,0EA0BhB,MAAO,mDAMP,OAAO,SAAC14B,GAAD,OAAYA,GAAU,oDAM7B,OAAOs3B,gkCCzER,IAKDsB,IAAsB,EAsLbC,eAhLX,SAAAA,EAAY1pB,EAAKjI,EAAOosB,GACxB,IAAAj/B,MAAA,mGAAAykC,CAAAlkC,KAAAikC,KACIjkC,MAAAP,MAAA0kC,GAAAF,GAAA9jC,KAAAH,KAAMsS,oDAEDmI,KAAOF,EAEZ9a,EAAK2kC,mBAAkB,IAAIjB,GAAkBkB,mBAAtBC,MAAA7kC,MAKvBA,EAAK8kC,gBAAkBP,GAV3BvkC,yPAH6By2B,mDAiBhB9W,EAAWqX,GAIpB,OAFA+N,EAAAL,GAAAF,EAAAvjC,WAAA,eAAAV,MAAAG,KAAAH,KAAmBof,EAAWqX,GAEtBrX,GAER,KAAKlK,IACL,KAAKnF,IACL,KAAKC,IACGhQ,KAAKukC,iBAELvkC,KAAKykC,kBAETzkC,KAAKya,KAAKG,iBAAiBC,eAC3B,MACJ,KAAK5K,IACL,KAAK4C,IACD7S,KAAKya,KAAKiqB,yBAAyBC,iBAC/B7oB,KAAKC,SAAS,gCACd6oB,IA7C8B,sBA6CqB,MAAM,GAC7D,MACJ,QACI5kC,KAAKya,KAAKG,iBAAiBC,iDAIxB,OAAO7a,KAAKya,+CAILsQ,GAEd,GAAKA,KAAWA,EAAQnrB,QAAU,GAAlC,CAEA,IAAM0S,EAAQtS,KAAK6Q,WAHvBzH,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IAII,QAAA0J,EAAAC,EAAmBuhB,EAAnBrhB,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADWlI,EACXqI,EAAAO,MACIwI,EAAMxB,WAAW5P,IANzB,MAAA6I,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAUItJ,KAAK+Q,eAAef,IAA6B,CAAEzL,OAAQwmB,+CAM3D,OAAO/qB,KAAKuR,8DAKZgE,IAAYsvB,YAAY7kC,KAAK6Q,YAE7B7Q,KAAKya,KAAKG,iBAAiBC,yDAK3B,IAAMiqB,EAAe9kC,KAAKu2B,gBACpBjkB,EAAQtS,KAAKo2B,OAEnB,IAAI9jB,EAAMsiB,UAAV,CAJJ,IAAArqB,GAAA,EAAAC,GAAA,EAAAC,OAAA5K,EAAA,IAOI,QAAA6K,EAAAC,EAAmB2H,EAAM3E,WAAzBjE,OAAAC,cAAAY,GAAAG,EAAAC,EAAAf,QAAAC,MAAAU,GAAA,EACA,KADWrJ,EACXwJ,EAAAZ,MACS5I,EAAK0iC,iBAAiB1iC,EAAKuQ,aAAa,KATrD,MAAA1H,GAAAS,GAAA,EAAAC,EAAAV,EAAA,YAAAQ,GAAA,MAAAI,EAAAX,QAAAW,EAAAX,SAAA,WAAAQ,EAAA,MAAAC,GAAA,IAAAY,GAAA,EAAAC,GAAA,EAAAC,OAAA1L,EAAA,IAaI,QAAA2L,EAAAC,EAAmB6G,EAAM3E,WAAzBjE,OAAAC,cAAA0B,GAAAG,EAAAC,EAAA7B,QAAAC,MAAAwB,GAAA,EACA,KADWnK,EACXsK,EAAA1B,MACS5I,EAAK0iC,iBAEN1iC,EAAKuQ,aAAaqzB,EAAapzB,wBAjB3C,MAAA3H,GAAAuB,GAAA,EAAAC,EAAAxB,EAAA,YAAAsB,GAAA,MAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,MAAAC,gDAsBmBw5B,GAEf,IAAMzoB,EAAOtc,KAAKukC,gBAClBvkC,KAAKukC,gBAAkBQ,EACnBA,IAAWzoB,GAEXtc,KAAKykC,kEAMT,OAAOzkC,KAAKukC,4DAGIS,GAEhB,IAAMrzB,EAAe3R,KAAKmQ,gBAAgByB,kBACpCqzB,EAAYtzB,EAAaQ,aAAanS,KAAK6Q,YAAY8rB,QAFjEjxB,GAAA,EAAAC,GAAA,EAAAC,OAAA/L,EAAA,IAKI,QAAAgM,EAAAC,EAAkBm5B,EAAlBv7B,OAAAC,cAAA+B,GAAAG,EAAAC,EAAAlC,QAAAC,MAAA6B,GAAA,EACA,KADUxK,EACV2K,EAAA/B,MACI9J,KAAKo2B,OAAOtlB,WAAW5P,IAP/B,MAAA6I,GAAA4B,GAAA,EAAAC,EAAA7B,EAAA,YAAA2B,GAAA,MAAAI,EAAA9B,QAAA8B,EAAA9B,SAAA,WAAA2B,EAAA,MAAAC,GAWI+F,EAAaI,iBAGb/R,KAAK+Q,eAAef,IAA6B,CAAEzL,OAAQ0gC,6CAG9C1gC,GAEbvE,KAAKo2B,OAAOtlB,WAAWvM,GAGvBvE,KAAK+Q,eAAehB,IAAyB,CAAExL,OAAQA,6CAG1CA,GAEbvE,KAAKo2B,OAAOjpB,WAAW5I,GAGvBvE,KAAK+Q,eAAe6B,IAAyB,CAAErO,OAAQA,8CAGzCwmB,GAEd,GAAKA,KAAWA,EAAQnrB,QAAU,GAAlC,CADJ,IAAA4M,GAAA,EAAAC,GAAA,EAAAC,OAAA7M,EAAA,IAGI,QAAA8M,EAAAC,EAAoBme,EAApBrhB,OAAAC,cAAA6C,GAAAG,EAAAC,EAAAhD,QAAAC,MAAA2C,GAAA,EACA,KADUjI,EACVoI,EAAA7C,MACI9J,KAAKklC,iBAAiB3gC,IAL9B,MAAAwF,GAAA0C,GAAA,EAAAC,EAAA3C,EAAA,YAAAyC,GAAA,MAAAI,EAAA5C,QAAA4C,EAAA5C,SAAA,WAAAyC,EAAA,MAAAC,wCASWhN,EAAGI,QAEO,IAANJ,IAAmBA,EAjKZ,GAiKiBiB,KAAKwkC,SAA+B,EAjKrD,SAkKD,IAANrlC,IAAmBA,EAlKZ,GAkKiBa,KAAKwkC,SAA+B,EAlKrD,IAoKlB,IAAMjkC,EAAOlB,KAAKo2B,OAAO5kB,WAAW9R,EAAGI,GAEjC+jC,EAAe7jC,KAAKolC,kBAAkB1zB,sBAI5C,OAHAxQ,EAAKuQ,aAAaoyB,GAElB7jC,KAAKya,KAAKG,iBAAiBC,eACpB3Z,qCAGAA,EAAMmkC,GAEbnkC,EAAKuQ,aAAa4zB,GAClBnkC,EAAKokC,eAAc,GACnBtlC,KAAKya,KAAKG,iBAAiBC,shCC5LnC,IAOa0qB,GAAb,WAEI,SAAAA,IACA,IADYhlC,EACZZ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADkB,GAAIoC,EACtBpC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD0B,KAC1B6lC,GAAAxlC,KAAAulC,GACIvlC,KAAKI,OAASG,EAEdP,KAAKylC,KAAO1jC,EACZ/B,KAAK0E,IAAM3C,aAAe1B,KAAe0B,EAAImK,oBAAsBD,eAP3E,OAAAy5B,GAAAH,EAAA,EAAA3/B,IAAA,OAAAkE,MAAA,WAYQ,IAAMxI,EAAS,IAAIikC,EAInB,OAHAjkC,EAAOlB,OAASJ,KAAKI,OACrBkB,EAAOmkC,KAAOzlC,KAAKylC,KACnBnkC,EAAOoD,IAAM1E,KAAK0E,IACXpD,IAhBf,CAAAsE,IAAA,gBAAAkE,MAAA,WAmBsB,OAAO9J,KAAKI,SAnBlC,CAAAwF,IAAA,aAAAkE,MAAA,WAqBmB,OAAO9J,KAAK0E,MArB/B,CAAAkB,IAAA,YAAAkE,MAAA,WAsBkB,OAAO9J,KAAKylC,OAtB9B,CAAA7/B,IAAA,gBAAAkE,MAAA,WA0BQ,OAAO9J,KAAK0E,QA1BpB6gC,EAAA,GA8BaI,GAAb,WAEI,SAAAA,EAAY7kC,EAAMC,GAClBykC,GAAAxlC,KAAA2lC,GACI3lC,KAAKgB,MAAQF,EACbd,KAAKiB,IAAMF,EACXf,KAAK4lC,SAAW,IAAI39B,IAN5B,OAAAy9B,GAAAC,EAAA,EAAA//B,IAAA,OAAAkE,MAAA,WAWQ,IAAMxI,EAAS,IAAIqkC,EAInB,MAHArkC,EAAON,MAAQhB,KAAKgB,MACpBM,EAAOL,IAAMjB,KAAKiB,IAEZ,IAAIE,MAAM,yBAfxB,CAAAyE,IAAA,iBAAAkE,MAAA,WAuBuB,OAAO9J,KAAKgB,QAvBnC,CAAA4E,IAAA,sBAAAkE,MAAA,WAwB4B,OAAO9J,KAAKiB,MAxBxC,CAAA2E,IAAA,YAAAkE,MAAA,SA0Bc+7B,EAAMhJ,EAAK9vB,GAEjB,IAAM01B,EAAS,IAAI/4B,GAAOm8B,EAAMhJ,EAAK9vB,GACrC/M,KAAK4lC,SAASx5B,IAAIq2B,EAAOzgC,gBAAiBygC,KA7BlD,CAAA78B,IAAA,YAAAkE,MAAA,SAgCc+7B,GACV,IADgBhJ,EAChBl9B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADoB,KAAMoN,EAC1BpN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD+B,KAC/ByJ,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IACI,QAAA0J,EAAAC,EAAoBxJ,KAAK4lC,SAASn8B,SAAlCC,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADUq5B,EACVl5B,EAAAO,MACI,GAAI24B,EAAOqD,kBAAoBD,KAEtBhJ,GAAO4F,EAAOsD,iBAAmBlJ,GAE7B9vB,GAAQ01B,EAAOuD,kBAAoBj5B,GAEpC,OAAO,GAT3B,MAAAhD,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAcI,OAAO,IA/Cf,CAAA1D,IAAA,sBAAAkE,MAAA,SAkDwB+7B,GACpB,IAD0BhJ,EAC1Bl9B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD8B,KAAMW,EACpCX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADwC,GACxC4K,GAAA,EAAAC,GAAA,EAAAC,OAAA5K,EAAA,IACI,QAAA6K,EAAAC,EAAoB3K,KAAK4lC,SAASn8B,SAAlCC,OAAAC,cAAAY,GAAAG,EAAAC,EAAAf,QAAAC,MAAAU,GAAA,EACA,KADUk4B,EACV/3B,EAAAZ,MACQ24B,EAAOqD,kBAAoBD,IAEtBhJ,GAAO4F,EAAOsD,iBAAmBlJ,GAElCv8B,EAAIyM,KAAK01B,KAPzB,MAAA14B,GAAAS,GAAA,EAAAC,EAAAV,EAAA,YAAAQ,GAAA,MAAAI,EAAAX,QAAAW,EAAAX,SAAA,WAAAQ,EAAA,MAAAC,GAWI,OAAOnK,IA9Df,CAAAsF,IAAA,aAAAkE,MAAA,WAiEmB,OAAO9J,KAAK4lC,SAASn8B,WAjExC,CAAA7D,IAAA,gBAAAkE,MAAA,WAqEQ,IAAIm8B,EAAe,GADvB56B,GAAA,EAAAC,GAAA,EAAAC,OAAA1L,EAAA,IAEI,QAAA2L,EAAAC,EAAoBzL,KAAK4lC,SAASn8B,SAAlCC,OAAAC,cAAA0B,GAAAG,EAAAC,EAAA7B,QAAAC,MAAAwB,GAAA,EACA,CACI46B,GADJz6B,EAAA1B,MAC2B9H,gBAAkB,KAJjD,MAAA+H,GAAAuB,GAAA,EAAAC,EAAAxB,EAAA,YAAAsB,GAAA,MAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,MAAAC,GAMI,OAAOvL,KAAKgB,MAAMgB,gBAAkB,IAAMikC,EAAe,IAAMjmC,KAAKiB,IAAIe,oBA1EhF2jC,EAAA,GA8Eaj8B,cAET,SAAAw8B,EAAYL,EAAMhJ,EAAK9vB,GACvBy4B,GAAAxlC,KAAAkmC,GACIlmC,KAAKmmC,MAAQN,EACb7lC,KAAKomC,KAAOvJ,EACZ78B,KAAKqmC,MAAQt5B,qDAGC,OAAO/M,KAAKmmC,6CACb,OAAOnmC,KAAKomC,6CACX,OAAOpmC,KAAKqmC,8CAI1B,OAAOrmC,KAAKmmC,MAAQ,IAAMnmC,KAAKomC,KAAO,IAAMpmC,KAAKqmC,eAouBzD,SAASC,GAAaC,EAAQC,GAE1B,IAAMC,EAAO,GADjBC,GAAA,EAAAC,GAAA,EAAAC,OAAA/mC,EAAA,IAEI,QAAAgnC,EAAAC,EAAqBP,EAArB78B,OAAAC,cAAA+8B,GAAAG,EAAAC,EAAAl9B,QAAAC,MAAA68B,GAAA,EACA,KADU5pB,EACV+pB,EAAA/8B,MACI28B,EAAK15B,KAAK+P,IAJlB,MAAA/S,GAAA48B,GAAA,EAAAC,EAAA78B,EAAA,YAAA28B,GAAA,MAAAI,EAAA98B,QAAA88B,EAAA98B,SAAA,WAAA28B,EAAA,MAAAC,GAAA,IAAAG,GAAA,EAAAC,GAAA,EAAAC,OAAApnC,EAAA,IAMI,QAAAqnC,EAAAC,EAAqBX,EAArB98B,OAAAC,cAAAo9B,GAAAG,EAAAC,EAAAv9B,QAAAC,MAAAk9B,GAAA,EACA,KADUjqB,EACVoqB,EAAAp9B,MACUnE,EAAI8gC,EAAKpqB,QAAQS,GACvB,IAAW,IAAPnX,EAAU,OAAO,EACrB8gC,EAAKlqB,OAAO5W,EAAG,IAVvB,MAAAoE,GAAAi9B,GAAA,EAAAC,EAAAl9B,EAAA,YAAAg9B,GAAA,MAAAI,EAAAn9B,QAAAm9B,EAAAn9B,SAAA,WAAAg9B,EAAA,MAAAC,GAYI,OAAOR,EAAK7mC,QAAU,EAGXwnC,kBA9uBX,SAAAA,IACA5B,GAAAxlC,KAAAonC,GAEIpnC,KAAKqnC,QAAU,IAAIp/B,IAEnBjI,KAAKsnC,UAAY,IAAIr/B,IACrBjI,KAAKunC,eAAiB,IAAIt/B,IAE1BjI,KAAKwnC,aAAe,IAAIv/B,IACxBjI,KAAKynC,aAAe,IAAI3E,IACxB9iC,KAAK0nC,eAAiB,IAAI5E,IAC1B9iC,KAAK2nC,oBAAsB,IAAI7E,IAC/B9iC,KAAK4nC,YAAc,KAEnB5nC,KAAKogC,QAAU,2CASdyH,GAGD,GAAIA,IAAQ7nC,KAAZ,CAGAA,KAAKoN,QALT,IAAA1B,GAAA,EAAAC,GAAA,EAAAC,OAAA/L,EAAA,IAQI,QAAAgM,EAAAC,EAA0B+7B,EAAIR,QAAQS,UAAtCp+B,OAAAC,cAAA+B,GAAAG,EAAAC,EAAAlC,QAAAC,MAAA6B,GAAA,EACA,KAAAq8B,EAAAC,GAAAn8B,EAAA/B,MAAA,GADWlE,EACXmiC,EAAA,GACUzmC,GAFMwI,EAChBi+B,EAAA,IACyBE,OACrBjoC,KAAKqnC,QAAQj7B,IAAIxG,EAAKtE,GAGlBumC,EAAIK,aAAap+B,KAEjB9J,KAAK4nC,YAActmC,GAGnBumC,EAAIM,aAAar+B,IAEjB9J,KAAKynC,aAAazE,IAAI1hC,IArBlC,MAAAyI,GAAA4B,GAAA,EAAAC,EAAA7B,EAAA,YAAA2B,GAAA,MAAAI,EAAA9B,QAAA8B,EAAA9B,SAAA,WAAA2B,EAAA,MAAAC,GAAA,IAAAY,GAAA,EAAAC,GAAA,EAAAC,OAAA7M,EAAA,IAyBI,QAAA8M,EAAAC,EAA0Bi7B,EAAIP,UAAUQ,UAAxCp+B,OAAAC,cAAA6C,GAAAG,EAAAC,EAAAhD,QAAAC,MAAA2C,GAAA,EACA,KAAA47B,EAAAJ,GAAAr7B,EAAA7C,MAAA,GADgBA,GAALlE,EACXwiC,EAAA,GAAAA,EAAA,IACIpoC,KAAKsnC,UAAUl7B,IAAIxG,EAAKkE,IA3BhC,MAAAC,GAAA0C,GAAA,EAAAC,EAAA3C,EAAA,YAAAyC,GAAA,MAAAI,EAAA5C,QAAA4C,EAAA5C,SAAA,WAAAyC,EAAA,MAAAC,GAAA,IAAAY,GAAA,EAAAC,GAAA,EAAAC,OAAA3N,EAAA,IA8BI,QAAA4N,EAAAC,EAA0Bm6B,EAAIN,eAAeO,UAA7Cp+B,OAAAC,cAAA2D,GAAAG,EAAAC,EAAA9D,QAAAC,MAAAyD,GAAA,EACA,KAAA+6B,EAAAL,GAAAv6B,EAAA3D,MAAA,GADWlE,EACXyiC,EAAA,GADgBv+B,EAChBu+B,EAAA,GACIroC,KAAKunC,eAAen7B,IAAIxG,EAAKkE,IAhCrC,MAAAC,GAAAwD,GAAA,EAAAC,EAAAzD,EAAA,YAAAuD,GAAA,MAAAI,EAAA1D,QAAA0D,EAAA1D,SAAA,WAAAuD,EAAA,MAAAC,GAAA,IAAAO,GAAA,EAAAC,GAAA,EAAAC,OAAApO,EAAA,IAmCI,QAAAqO,EAAAC,EAA0B05B,EAAIL,aAAaM,UAA3Cp+B,OAAAC,cAAAoE,GAAAG,EAAAC,EAAAvE,QAAAC,MAAAkE,GAAA,EACA,KAAAu6B,EAAAN,GAAA95B,EAAApE,MAAA,GACUxI,GAFCsE,EACX0iC,EAAA,IADgBx+B,EAChBw+B,EAAA,IACyBL,QACrB3mC,EAAON,MAAQhB,KAAKqnC,QAAQh6B,IAAIvD,EAAMy+B,iBAAiBC,cACvDlnC,EAAOL,IAAMjB,KAAKqnC,QAAQh6B,IAAIvD,EAAM2+B,sBAAsBD,cAC1DxoC,KAAKwnC,aAAap7B,IAAIxG,EAAKtE,IAxCnC,MAAAyI,GAAAiE,GAAA,EAAAC,EAAAlE,EAAA,YAAAgE,GAAA,MAAAI,EAAAnE,QAAAmE,EAAAnE,SAAA,WAAAgE,EAAA,MAAAC,GAAA,IAAAy6B,GAAA,EAAAC,GAAA,EAAAC,OAAA/oC,EAAA,IA2CI,QAAAgpC,EAAAC,EAAoBjB,EAAIH,eAAxBh+B,OAAAC,cAAA++B,GAAAG,EAAAC,EAAAl/B,QAAAC,MAAA6+B,GAAA,EACA,KADUjG,EACVoG,EAAA/+B,MACI9J,KAAK0nC,eAAe1E,IAAIP,IA7ChC,MAAA14B,GAAA4+B,GAAA,EAAAC,EAAA7+B,EAAA,YAAA2+B,GAAA,MAAAI,EAAA9+B,QAAA8+B,EAAA9+B,SAAA,WAAA2+B,EAAA,MAAAC,GAAA,IAAAG,GAAA,EAAAC,GAAA,EAAAC,OAAAppC,EAAA,IAgDI,QAAAqpC,EAAAC,EAAoBtB,EAAIF,oBAAxBj+B,OAAAC,cAAAo/B,GAAAG,EAAAC,EAAAv/B,QAAAC,MAAAk/B,GAAA,EACA,KADUtG,EACVyG,EAAAp/B,MACI9J,KAAK2nC,oBAAoB3E,IAAIP,IAlDrC,MAAA14B,GAAAi/B,GAAA,EAAAC,EAAAl/B,EAAA,YAAAg/B,GAAA,MAAAI,EAAAn/B,QAAAm/B,EAAAn/B,SAAA,WAAAg/B,EAAA,MAAAC,GAAA,IAAAG,GAAA,EAAAC,GAAA,EAAAC,OAAAzpC,EAAA,IAsDI,QAAA0pC,EAAAC,EAAmB3B,EAAIzH,QAAvB12B,OAAAC,cAAAy/B,GAAAG,EAAAC,EAAA5/B,QAAAC,MAAAu/B,GAAA,EACA,KADUK,EACVF,EAAAz/B,MAEI9J,KAAKogC,QAAQrzB,KAAK08B,IAzD1B,MAAA1/B,GAAAs/B,GAAA,EAAAC,EAAAv/B,EAAA,YAAAq/B,GAAA,MAAAI,EAAAx/B,QAAAw/B,EAAAx/B,SAAA,WAAAq/B,EAAA,MAAAC,qCA+DItpC,KAAKqnC,QAAQj6B,QACbpN,KAAKsnC,UAAUl6B,QACfpN,KAAKunC,eAAen6B,QACpBpN,KAAKwnC,aAAap6B,QAClBpN,KAAKynC,aAAar6B,QAClBpN,KAAK0nC,eAAet6B,QACpBpN,KAAK2nC,oBAAoBv6B,QACzBpN,KAAK4nC,YAAc,KAEnB5nC,KAAKogC,QAAQxgC,OAAS,qCAOtB,OADAI,KAAKogC,QAAQxgC,OAAS,GACf,oCAEC,OAA8B,GAAvBI,KAAKogC,QAAQxgC,2CAClB,OAAOI,KAAKogC,8CAG1B,IADY7/B,EACZZ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADkB,GAEd,OAAOK,KAAK0pC,SAAS,IAAInE,GAAMhlC,qCAG1BkxB,GAEL,IAAMkY,EAAUlY,EAAM+W,aACtB,GAAIxoC,KAAKqnC,QAAQh7B,IAAIs9B,GAAU,MAAM,IAAIxoC,MAAM,gCAAmCwoC,EAAU,KAK5F,OAHI3pC,KAAKqnC,QAAQh/B,MAAQ,IAAGrI,KAAK4nC,YAAcnW,GAE/CzxB,KAAKqnC,QAAQj7B,IAAIu9B,EAASlY,GACnBA,sCAGCA,GAER,IAAMkY,EAAUlY,EAAM+W,aACtB,QAAKxoC,KAAKqnC,QAAQh7B,IAAIs9B,KACtB3pC,KAAKqnC,QAAQ/6B,OAAOq9B,GAGhB3pC,KAAK4nC,cAAgBnW,IAEjBzxB,KAAKqnC,QAAQh/B,MAAQ,EAGrBrI,KAAK4nC,YAAc,KAKnB5nC,KAAK4nC,YAAc5nC,KAAKqnC,QAAQ59B,SAASG,OAAOE,QAIjD,6CAGOvJ,GAClB,IAAAqpC,GAAA,EAAAC,GAAA,EAAAC,OAAAjqC,EAAA,IACI,QAAAkqC,EAAAC,EAAmBhqC,KAAKqnC,QAAQ59B,SAAhCC,OAAAC,cAAAigC,GAAAG,EAAAC,EAAApgC,QAAAC,MAAA+/B,GAAA,EACA,CACI,GADJG,EAAAjgC,MACcmgC,iBAAmB1pC,EAEzB,OAAO,GALnB,MAAAwJ,GAAA8/B,GAAA,EAAAC,EAAA//B,EAAA,YAAA6/B,GAAA,MAAAI,EAAAhgC,QAAAggC,EAAAhgC,SAAA,WAAA6/B,EAAA,MAAAC,GAQI,OAAO,2CAGMvpC,GACjB,IADwBD,EACxBX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD4B,GAC5BuqC,GAAA,EAAAC,GAAA,EAAAC,OAAAvqC,EAAA,IACI,QAAAwqC,EAAAC,EAAmBtqC,KAAKqnC,QAAQ59B,SAAhCC,OAAAC,cAAAugC,GAAAG,EAAAC,EAAA1gC,QAAAC,MAAAqgC,GAAA,EACA,KADUzY,EACV4Y,EAAAvgC,MACQ2nB,EAAMwY,iBAAmB1pC,GAEzBD,EAAIyM,KAAK0kB,IALrB,MAAA1nB,GAAAogC,GAAA,EAAAC,EAAArgC,EAAA,YAAAmgC,GAAA,MAAAI,EAAAtgC,QAAAsgC,EAAAtgC,SAAA,WAAAmgC,EAAA,MAAAC,GAQI,OAAO9pC,uCAGEd,GAET,OAAOQ,KAAKqnC,QAAQh6B,IAAI7N,oCAGnBiyB,GAAS,OAAOzxB,KAAKqnC,QAAQh7B,IAAIolB,EAAM+W,kDAElC,OAAOxoC,KAAKqnC,QAAQ59B,iDAEhB,OAAOzJ,KAAKqnC,QAAQh/B,2CAExBvH,EAAMC,EAAIihC,EAAYC,EAAWC,GAE3C,IAAKliC,KAAKuqC,SAASzpC,GAAO,MAAM,IAAIK,MAAM,2DAA8DL,EAAKmpC,gBAAkB,KAC/H,IAAKjqC,KAAKuqC,SAASxpC,GAAK,MAAM,IAAII,MAAM,2DAA8DJ,EAAGkpC,gBAAkB,KAC3H,IAAKjI,EAAY,MAAM,IAAI7gC,MAAM,6EACjC,IAAK8gC,EAAW,MAAM,IAAI9gC,MAAM,4EAChC,IAAK+gC,EAAY,MAAM,IAAI/gC,MAAM,6EAEjC,IAAMqpC,EAAgB1pC,EAAK0nC,aAAe,KAAOznC,EAAGynC,aACpD,GAAIxoC,KAAKwnC,aAAan7B,IAAIm+B,GAC1B,CACI,IAAMC,EAAazqC,KAAKwnC,aAAan6B,IAAIm9B,GACzC,GAAKC,EAAWC,UAAU1I,EAAYC,EAAWC,GAO7C,OAAO,EALPuI,EAAWE,UAAU3I,EAAYC,EAAWC,OASpD,CACI,IAAM0I,EAAgB,IAAIjF,GAAW7kC,EAAMC,GAC3C6pC,EAAcD,UAAU3I,EAAYC,EAAWC,GAC/CliC,KAAKwnC,aAAap7B,IAAIo+B,EAAeI,GAOzC,OAHA5qC,KAAK6qC,iBAAiB7I,GACtBhiC,KAAK8qC,sBAAsB7I,GAC3BjiC,KAAK8qC,sBAAsB5I,IACpB,2CAIMphC,EAAMC,GACvB,IAD2B0hC,EAC3B9iC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADkC,KAExB6qC,EAAgB1pC,EAAK0nC,aAAe,KAAOznC,EAAGynC,aACpD,IAAKxoC,KAAKwnC,aAAan7B,IAAIm+B,GAAgB,OAAO,EAElD,IACM7H,EADa3iC,KAAKwnC,aAAan6B,IAAIm9B,GACdO,aAG3B,GAAItI,EACJ,CACI,IAAM18B,EAAQ48B,EAAQtmB,QAAQomB,GAC9B,OAAI18B,GAAS,IAGT/F,KAAKgrC,iBAAiBvI,GAEtBE,EAAQpmB,OAAOxW,EAAO,GAClB48B,EAAQ/iC,QAAU,GAAGI,KAAKwnC,aAAal7B,OAAOk+B,IAC3C,GASf,IAAAS,GAAA,EAAAC,GAAA,EAAAC,OAAAtrC,EAAA,IAEI,QAAAurC,EAAAC,EAAoB1I,EAApBj5B,OAAAC,cAAAshC,GAAAG,EAAAC,EAAAzhC,QAAAC,MAAAohC,GAAA,EACA,KADUxI,EACV2I,EAAAthC,MACI9J,KAAKgrC,iBAAiBvI,IAJ9B,MAAA14B,GAAAmhC,GAAA,EAAAC,EAAAphC,EAAA,YAAAkhC,GAAA,MAAAI,EAAArhC,QAAAqhC,EAAArhC,SAAA,WAAAkhC,EAAA,MAAAC,GASI,OADAnrC,KAAKwnC,aAAal7B,OAAOk+B,IAClB,wCAID1pC,EAAMC,GACpB,IADwB0hC,EACxB9iC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD+B,KAErB6qC,EAAgB1pC,EAAK0nC,aAAe,KAAOznC,EAAGynC,aACpD,QAAKxoC,KAAKwnC,aAAan7B,IAAIm+B,MAEtB/H,GAGEziC,KAAKwnC,aAAan6B,IAAIm9B,GAAeE,UAAUjI,iDAGrC3hC,EAAMC,GAEvB,IAAMypC,EAAgB1pC,EAAK0nC,aAAe,KAAOznC,EAAGynC,aACpD,OAAKxoC,KAAKwnC,aAAan7B,IAAIm+B,GACpBxqC,KAAKwnC,aAAan6B,IAAIm9B,GAAeO,aADM,8CAInC,OAAO/qC,KAAKwnC,aAAa/9B,kDAE3Bg5B,GAGb,GA/ZoB,WA+ZhBA,EAAJ,CAEA,IAAM6I,EAActrC,KAAKsnC,UAAUj6B,IAAIo1B,IAAW,EAClDziC,KAAKsnC,UAAUl7B,IAAIq2B,EAAQ6I,EAAc,kDAGvBC,GAGlB,GAxaoB,WAwahBA,EAAJ,CAEA,IAAMD,EAActrC,KAAKunC,eAAel6B,IAAIk+B,IAAgB,EAC5DvrC,KAAKunC,eAAen7B,IAAIm/B,EAAaD,EAAc,6CAGtC7I,GAEb,IAAKziC,KAAKsnC,UAAUj7B,IAAIo2B,GAAS,MAAM,IAAIthC,MAAM,sDAGjD,GAnboB,WAmbhBshC,EAAJ,CAEA,IAAM6I,EAActrC,KAAKsnC,UAAUj6B,IAAIo1B,GAEnC6I,GAAe,EAEVtrC,KAAKwrC,eAAe/I,GAQrBziC,KAAKsnC,UAAUl7B,IAAIq2B,EAAQ,GAL3BziC,KAAKsnC,UAAUh7B,OAAOm2B,GAW1BziC,KAAKsnC,UAAUl7B,IAAIq2B,EAAQ6I,EAAc,kDAI3B7I,GAElB,IAAKziC,KAAKunC,eAAel7B,IAAIo2B,GAAS,MAAM,IAAIthC,MAAM,sDAGtD,GAhdoB,WAgdhBshC,EAAJ,CAEA,IAAM6I,EAActrC,KAAKunC,eAAel6B,IAAIo1B,GAExC6I,GAAe,EAEVtrC,KAAKyrC,oBAAoBhJ,GAQ1BziC,KAAKunC,eAAen7B,IAAIq2B,EAAQ,GALhCziC,KAAKunC,eAAej7B,OAAOm2B,GAW/BziC,KAAKunC,eAAen7B,IAAIq2B,EAAQ6I,EAAc,yCAIzC7I,EAAQiJ,GAEjB,GA1eoB,WA0ehBjJ,EAAyB,MAAM,IAAIthC,MAAM,kCAC7C,GA3eoB,WA2ehBuqC,EAA4B,MAAM,IAAIvqC,MAAM,qCAChD,GAAInB,KAAKunC,eAAel7B,IAAIq/B,GAAY,MAAM,IAAIvqC,MAAM,mDAExD,MAAM,IAAIA,MAAM,4DAGPshC,GAET,MAAM,IAAIthC,MAAM,+DAGJshC,GAChB,IADwBkJ,IACxBhsC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACI,GAxfoB,WAwfhB8iC,EAAyB,MAAM,IAAIthC,MAAM,qDAEzCwqC,EAEK3rC,KAAK0nC,eAAer7B,IAAIo2B,KAEzBziC,KAAK0nC,eAAe1E,IAAIP,GAGnBziC,KAAKsnC,UAAUj7B,IAAIo2B,IAASziC,KAAKsnC,UAAUl7B,IAAIq2B,EAAQ,IAK5DziC,KAAK0nC,eAAer7B,IAAIo2B,KAExBziC,KAAK0nC,eAAep7B,OAAOm2B,GAGvBziC,KAAKsnC,UAAUj7B,IAAIo2B,IAAWziC,KAAKsnC,UAAUj6B,IAAIo1B,IAAW,GAAGziC,KAAKsnC,UAAUh7B,OAAOm2B,2CAKtFA,GAEX,OAAOziC,KAAK0nC,eAAer7B,IAAIo2B,8CAK/B,OAAOziC,KAAK0nC,4DAKZ1nC,KAAK0nC,eAAet6B,6CAGXq1B,GAET,OAAOziC,KAAKsnC,UAAUj7B,IAAIo2B,IAAWziC,KAAKsnC,UAAUj6B,IAAIo1B,GAAU,mCAG7DA,GAEL,OAAOziC,KAAKsnC,UAAUj7B,IAAIo2B,yCAK1B,OAAOziC,KAAKsnC,UAAUsE,iDAKRnJ,EAAQiJ,GAEtB,GAljBoB,WAkjBhBjJ,EAAyB,MAAM,IAAIthC,MAAM,kCAC7C,GAnjBoB,WAmjBhBuqC,EAA4B,MAAM,IAAIvqC,MAAM,qCAChD,GAAInB,KAAKunC,eAAel7B,IAAIq/B,GAAY,MAAM,IAAIvqC,MAAM,mDAExD,MAAM,IAAIA,MAAM,iEAGFshC,GAEd,MAAM,IAAIthC,MAAM,oEAGCshC,GACrB,IAD6BkJ,IAC7BhsC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACI,GAhkBoB,WAgkBhB8iC,EAAyB,MAAM,IAAIthC,MAAM,qDAEzCwqC,EAEK3rC,KAAK2nC,oBAAoBt7B,IAAIo2B,KAE9BziC,KAAK2nC,oBAAoB3E,IAAIP,GAGxBziC,KAAKunC,eAAel7B,IAAIo2B,IAASziC,KAAKunC,eAAen7B,IAAIq2B,EAAQ,IAKtEziC,KAAK2nC,oBAAoBt7B,IAAIo2B,KAE7BziC,KAAK2nC,oBAAoBr7B,OAAOm2B,GAG5BziC,KAAKunC,eAAel7B,IAAIo2B,IAAWziC,KAAKunC,eAAel6B,IAAIo1B,IAAW,GAAGziC,KAAKunC,eAAej7B,OAAOm2B,gDAKhGA,GAEhB,OAAOziC,KAAK2nC,oBAAoBt7B,IAAIo2B,mDAKpC,OAAOziC,KAAK2nC,sEAKZ3nC,KAAK2nC,oBAAoBv6B,kDAGXq1B,GAEd,OAAOziC,KAAKunC,eAAel7B,IAAIo2B,IAAWziC,KAAKunC,eAAel6B,IAAIo1B,GAAU,wCAGlEA,GAEV,OAAOziC,KAAKunC,eAAel7B,IAAIo2B,8CAK/B,OAAOziC,KAAKunC,eAAeqE,6CAKjBna,GAEV,IAAMkY,EAAUlY,EAAM+W,aACjBxoC,KAAKqnC,QAAQh7B,IAAIs9B,IAGlB3pC,KAAKqnC,QAAQj7B,IAAIu9B,EAASlY,GAE9BzxB,KAAK4nC,YAAcnW,uCAEVA,GAAS,OAAOzxB,KAAK4nC,cAAgBnW,0CAChC,OAAOzxB,KAAK4nC,kDAEhBnW,GAGV,KAFJ9xB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAKaK,KAAKqnC,QAAQh7B,IAAIolB,EAAM+W,eAExBxoC,KAAK0pC,SAASjY,GAGlBzxB,KAAKynC,aAAazE,IAAIvR,OAG1B,CAGI,IAAKzxB,KAAKqnC,QAAQh7B,IAAIolB,EAAM+W,cAAe,MAAM,IAAIrnC,MAAM,6CAAgDswB,EAAMwY,gBAAkB,KAEnIjqC,KAAKynC,aAAan7B,OAAOmlB,yCAGpBA,GAAS,OAAOzxB,KAAKynC,aAAap7B,IAAIolB,4CAChC,OAAOzxB,KAAKynC,kDAElBhW,EAAOuQ,EAAY6J,GAChC,IADuCvrC,EACvCX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD2C,GAEvC,IAAK8xB,EAAO,OAAOnxB,EACnB,KAAMmxB,aAAiB8T,IAAQ,MAAM,IAAIpkC,MAAM,gCAAmC2qC,GAAQra,GAAS,KACnG,IAAKzxB,KAAKqnC,QAAQh7B,IAAIolB,EAAM+W,cAAe,MAAM,IAAIrnC,MAAM,wCAA2CswB,EAAM+W,aAAe,KAEtHxG,IAAYA,EApqBG,UAsqBpB,IAAM+J,EAAoBta,EAAM+W,aAAe,KAPnDwD,GAAA,EAAAC,GAAA,EAAAC,OAAArsC,EAAA,IAQI,QAAAssC,EAAAC,EAAiBpsC,KAAKwnC,aAAaoE,OAAnCliC,OAAAC,cAAAqiC,GAAAG,EAAAC,EAAAxiC,QAAAC,MAAAmiC,GAAA,EACA,KADUpmC,EACVumC,EAAAriC,MACI,GAAIlE,EAAIymC,WAAWN,GACnB,CACI,IAAMtB,EAAazqC,KAAKwnC,aAAan6B,IAAIzH,GACnC0mC,EAAU7B,EAAWhC,sBAErB8D,EAAe,GACrB9B,EAAW+B,oBAAoBxK,EAAY6J,EAAMA,EAAMjsC,OAAS,GAAI2sC,GACpE9B,EAAW+B,oBAAoBxK,EAhrBnB,SAgrB6CuK,GACzD,QAAAE,EAAA,EAAAA,EAAyBF,EAAzB3sC,OAAA6sC,IACA,CADI,IAAMC,EAAeH,EAAJE,GAEXE,EAAWd,EAAMlP,QACjBiQ,EAAWF,EAAY3G,eACvB8G,EAAYH,EAAY1G,gBArrBtB,WAurBJ4G,GAA2BD,EAAS9P,MAvrBhC,WAwrBJgQ,GAA4BF,EAAS5/B,KAAK8/B,GAE9CvsC,EAAIyM,KAAK,CAACu/B,EAASK,OA3BnC,MAAA5iC,GAAAkiC,GAAA,EAAAC,EAAAniC,EAAA,YAAAiiC,GAAA,MAAAI,EAAApiC,QAAAoiC,EAAApiC,SAAA,WAAAiiC,EAAA,MAAAC,GA+BI,OAAO5rC,+CAGUmxB,EAAOuQ,EAAY6J,GACxC,IAD+CvrC,EAC/CX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADmD,GAE/C,IAAK8xB,EAAO,OAAOnxB,EACnB,IAAKN,KAAKqnC,QAAQh7B,IAAIolB,EAAM+W,cAAe,MAAM,IAAIrnC,MAAM,wCAA2CswB,EAAM+W,aAAe,KAEtHxG,IAAYA,EAtsBG,UAwsBpB,IAAM+J,EAAoBta,EAAM+W,aAAe,KANnDsE,GAAA,EAAAC,GAAA,EAAAC,OAAAntC,EAAA,IAOI,QAAAotC,EAAAC,EAAiBltC,KAAKwnC,aAAaoE,OAAnCliC,OAAAC,cAAAmjC,GAAAG,EAAAC,EAAAtjC,QAAAC,MAAAijC,GAAA,EACA,KADUlnC,EACVqnC,EAAAnjC,MACI,GAAIlE,EAAIymC,WAAWN,GACnB,CACI,IAAMtB,EAAazqC,KAAKwnC,aAAan6B,IAAIzH,GACnC0mC,EAAU7B,EAAWhC,sBAErB8D,EAAe,GACrB9B,EAAW+B,oBAAoBxK,EAAY6J,EAAMA,EAAMjsC,OAAS,GAAI2sC,GACpE9B,EAAW+B,oBAAoBxK,EAltBnB,SAktB6CuK,GACzD,QAAAY,EAAA,EAAAA,EAAyBZ,EAAzB3sC,OAAAutC,IACA,CADI,IAAMT,EAAeH,EAAJY,GAEXR,EAAWd,EAAMlP,QACjBiQ,EAAWF,EAAY3G,eACvB8G,EAAYH,EAAY1G,gBAE9B,GAztBQ,WAytBJ4G,EACJ,CACI,GAAmB,GAAhBf,EAAMjsC,OAEL,SAIA+sC,EAAS9P,MAjuBT,WAquBJgQ,GAA4BF,EAAS5/B,KAAK8/B,GAE9C,IAAMvrC,EAAStB,KAAKotC,oBAAoBd,EAASK,GAnBrDU,GAAA,EAAAC,GAAA,EAAAC,OAAA1tC,EAAA,IAoBI,QAAA2tC,EAAAC,EAAensC,EAAfoI,OAAAC,cAAA0jC,GAAAG,EAAAC,EAAA7jC,QAAAC,MAAAwjC,GAAA,EACA,KADUK,EACVF,EAAA1jC,MAEQuJ,GAAO,EAFfs6B,GAAA,EAAAC,GAAA,EAAAC,OAAAhuC,EAAA,IAGI,QAAAiuC,EAAAC,EAAkBztC,EAAlBoJ,OAAAC,cAAAgkC,GAAAG,EAAAC,EAAAnkC,QAAAC,MAAA8jC,GAAA,EACA,KADUK,EACVF,EAAAhkC,MACI,GAAIkkC,EAAK,KAAON,EAAE,IAEVpH,GAAa0H,EAAK,GAAIN,EAAE,IAC5B,CACIr6B,GAAO,EACP,QAVhB,MAAAtJ,GAAA6jC,GAAA,EAAAC,EAAA9jC,EAAA,YAAA4jC,GAAA,MAAAI,EAAA/jC,QAAA+jC,EAAA/jC,SAAA,WAAA4jC,EAAA,MAAAC,GAcSx6B,GAAM/S,EAAIyM,KAAK2gC,IAnC5B,MAAA3jC,GAAAujC,GAAA,EAAAC,EAAAxjC,EAAA,YAAAsjC,GAAA,MAAAI,EAAAzjC,QAAAyjC,EAAAzjC,SAAA,WAAAsjC,EAAA,MAAAC,OAlBZ,MAAAxjC,GAAAgjC,GAAA,EAAAC,EAAAjjC,EAAA,YAAA+iC,GAAA,MAAAI,EAAAljC,QAAAkjC,EAAAljC,SAAA,WAAA+iC,EAAA,MAAAC,GA2DI,OAAO1sC,8CAGSmxB,EAAOoa,GAC3B,IADkCvrC,EAClCX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADsC,GAElC,IAAK8xB,EAAO,OAAOnxB,EAEnBA,EAAIyM,KAAK,CAAC0kB,EAAOoa,IACjB,IAAI,IAAIlmC,EAAI,EAAGA,EAAIrF,EAAIV,SAAU+F,EACjC,CACI,IAAMsoC,EAAW3tC,EAAIqF,GACfuoC,EAAYD,EAAS,GACrBE,EAAYF,EAAS,GACrBG,EAAcpuC,KAAKquC,uBAAuBH,GAJpDI,GAAA,EAAAC,GAAA,EAAAC,OAAA3uC,EAAA,IAKI,QAAA4uC,EAAAC,EAAwBN,EAAxB1kC,OAAAC,cAAA2kC,GAAAG,EAAAC,EAAA9kC,QAAAC,MAAAykC,GAAA,EACA,KADU7D,EACVgE,EAAA3kC,MACUk4B,EAAayI,EAlxBT,GAmxBJxI,EAAYwI,EAjxBT,GAkxBHvI,EAAauI,EAjxBT,GAmxBV,GAjxBY,WAixBRzI,IACTC,IAAckM,EAAUA,EAAUvuC,OAAS,IAlxB1B,WAmxBlBqiC,GACM,CACI,IAAM0K,EAAWwB,EAAUxR,QACrB2P,EAAU7B,EA1xBb,GAIK,WAuxBJxI,GAA4B0K,EAAS9P,MAvxBjC,WAwxBJqF,GAA6ByK,EAAS5/B,KAAKm1B,GAG/C,IAAI7uB,GAAO,EAPfs7B,GAAA,EAAAC,GAAA,EAAAC,OAAAhvC,EAAA,IAQI,QAAAivC,EAAAC,EAAkBzuC,EAAlBoJ,OAAAC,cAAAglC,GAAAG,EAAAC,EAAAnlC,QAAAC,MAAA8kC,GAAA,EACA,KADUX,EACVc,EAAAhlC,MACI,GAAIkkC,EAAK,KAAO1B,GAERhG,GAAa0H,EAAK,GAAIrB,GAC1B,CACIt5B,GAAO,EACP,QAfhB,MAAAtJ,GAAA6kC,GAAA,EAAAC,EAAA9kC,EAAA,YAAA4kC,GAAA,MAAAI,EAAA/kC,QAAA+kC,EAAA/kC,SAAA,WAAA4kC,EAAA,MAAAC,GAmBSx7B,GAAM/S,EAAIyM,KAAK,CAACu/B,EAASK,MAjC1C,MAAA5iC,GAAAwkC,GAAA,EAAAC,EAAAzkC,EAAA,YAAAukC,GAAA,MAAAI,EAAA1kC,QAAA0kC,EAAA1kC,SAAA,WAAAukC,EAAA,MAAAC,IAqCA,OAAOluC,iDAGYmxB,GACvB,IAD8BnxB,EAC9BX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADkC,GAE9B,IAAK8xB,EAAO,OAAOnxB,EACnB,IAAKN,KAAKqnC,QAAQh7B,IAAIolB,EAAM+W,cAAe,MAAM,IAAIrnC,MAAM,wCAA2CswB,EAAM+W,aAAe,KAE3H,IAAMuD,EAAoBta,EAAM+W,aAAe,KAJnDwG,GAAA,EAAAC,GAAA,EAAAC,OAAArvC,EAAA,IAKI,QAAAsvC,EAAAC,EAAiBpvC,KAAKwnC,aAAaoE,OAAnCliC,OAAAC,cAAAqlC,GAAAG,EAAAC,EAAAxlC,QAAAC,MAAAmlC,GAAA,EACA,KADUppC,EACVupC,EAAArlC,MACI,GAAIlE,EAAIymC,WAAWN,GACnB,CACI,IAAMtB,EAAazqC,KAAKwnC,aAAan6B,IAAIzH,GACnC+8B,EAAU8H,EAAWM,aAF/BsE,GAAA,EAAAC,GAAA,EAAAC,OAAA1vC,EAAA,IAGI,QAAA2vC,EAAAC,EAAoB9M,EAApBj5B,OAAAC,cAAA0lC,GAAAG,EAAAC,EAAA7lC,QAAAC,MAAAwlC,GAAA,EACA,KADU5M,EACV+M,EAAA1lC,MACIxJ,EAAIyM,KAAK,CACL0kB,EACAgR,EAAOqD,gBACP2E,EAAWhC,sBACXhG,EAAOsD,eACPtD,EAAOuD,mBAVnB,MAAAj8B,GAAAulC,GAAA,EAAAC,EAAAxlC,EAAA,YAAAslC,GAAA,MAAAI,EAAAzlC,QAAAylC,EAAAzlC,SAAA,WAAAslC,EAAA,MAAAC,MARR,MAAAxlC,GAAAklC,GAAA,EAAAC,EAAAnlC,EAAA,YAAAilC,GAAA,MAAAI,EAAAplC,QAAAolC,EAAAplC,SAAA,WAAAilC,EAAA,MAAAC,GAwBI,OAAO5uC,wCAKP,IAAI8K,EAAS,GADjBskC,GAAA,EAAAC,GAAA,EAAAC,OAAA/vC,EAAA,IAEI,QAAAgwC,EAAAC,EAAmB9vC,KAAKqnC,QAAQ59B,SAAhCC,OAAAC,cAAA+lC,GAAAG,EAAAC,EAAAlmC,QAAAC,MAAA6lC,GAAA,EACA,CACItkC,GADJykC,EAAA/lC,MACoB9H,gBAAkB,KAJ1C,MAAA+H,GAAA4lC,GAAA,EAAAC,EAAA7lC,EAAA,YAAA2lC,GAAA,MAAAI,EAAA9lC,QAAA8lC,EAAA9lC,SAAA,WAAA2lC,EAAA,MAAAC,GAMIxkC,GAAU,IANd,IAAA2kC,GAAA,EAAAC,GAAA,EAAAC,OAAApwC,EAAA,IAOI,QAAAqwC,EAAAC,EAAwBnwC,KAAKwnC,aAAa/9B,SAA1CC,OAAAC,cAAAomC,GAAAG,EAAAC,EAAAvmC,QAAAC,MAAAkmC,GAAA,EACA,CACI3kC,GADJ8kC,EAAApmC,MACyB9H,gBAAkB,KAT/C,MAAA+H,GAAAimC,GAAA,EAAAC,EAAAlmC,EAAA,YAAAgmC,GAAA,MAAAI,EAAAnmC,QAAAmmC,EAAAnmC,SAAA,WAAAgmC,EAAA,MAAAC,GAWI7kC,GAAU,IAXd,IAAAglC,GAAA,EAAAC,GAAA,EAAAC,OAAAzwC,EAAA,IAYI,QAAA0wC,EAAAC,EAAmBxwC,KAAKynC,aAAxB/9B,OAAAC,cAAAymC,GAAAG,EAAAC,EAAA5mC,QAAAC,MAAAumC,GAAA,EACA,CACIhlC,GADJmlC,EAAAzmC,MACoB9H,iBAdxB,MAAA+H,GAAAsmC,GAAA,EAAAC,EAAAvmC,EAAA,YAAAqmC,GAAA,MAAAI,EAAAxmC,QAAAwmC,EAAAxmC,SAAA,WAAAqmC,EAAA,MAAAC,GAkBI,OAFAllC,GAAU,IACVA,GAAUpL,KAAK4nC,YAAc5nC,KAAK4nC,YAAY5lC,gBAAkB,GACzD+J,aAAWX,ytCCh2BnB,IAgMQqlC,eA1LX,SAAAA,IACA,IAAAhxC,EAAA,mGAAAixC,CAAA1wC,KAAAywC,IACIhxC,EAAAkxC,GAAA3wC,KAAA4wC,GAAAH,GAAAtwC,KAAAH,QAEK6wC,SAAW,IAAIzJ,GAHxB3nC,yPAHqBwgC,yDAUHW,EAAStgC,GAKvB,IAAIY,EAHJZ,EAAI8M,QADR,IAgBQxC,EAAM9J,EAAMC,EAAI8kC,EAhBxBz8B,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IAKI,QAAA0J,EAAAC,EAAoBo3B,EAAQkQ,YAA5BpnC,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADWqoB,EACXloB,EAAAO,OACI5I,EAAOZ,EAAIkR,WAAW,EAAG,IACpBC,aAAaggB,EAAMwY,iBACpBrJ,EAAQuH,aAAa1W,IAErBvwB,EAAK6vC,eAAc,IAX/B,MAAAhnC,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAAA,IAAAiB,GAAA,EAAAC,GAAA,EAAAC,OAAA5K,EAAA,IAiBI,QAAA6K,EAAAC,EAAuBi2B,EAAQoQ,iBAA/BtnC,OAAAC,cAAAY,GAAAG,EAAAC,EAAAf,QAAAC,MAAAU,GAAA,EACA,KADSkgC,EACT//B,EAAAZ,MACIhJ,EAAOd,KAAKixC,yBAAyB3wC,EAAKmqC,EAAW,IACrD5E,EAAO4E,EAAW,GAClB1pC,EAAKf,KAAKixC,yBAAyB3wC,EAAKmqC,EAAW,KACnD7/B,EAAOtK,EAAIkT,WAAW1S,EAAMC,IACvBwT,aAAasxB,GAEdj7B,GADkBtK,EAAI4wC,WAAWtmC,IACVtK,EAAI6M,WAAWvC,IAzBlD,MAAAb,GAAAS,GAAA,EAAAC,EAAAV,EAAA,YAAAQ,GAAA,MAAAI,EAAAX,QAAAW,EAAAX,SAAA,WAAAQ,EAAA,MAAAC,GA6BI,IAAM0mC,EAAavQ,EAAQwQ,gBAG3B,OAFA9wC,EAAIgV,aAAatV,KAAKixC,yBAAyB3wC,EAAK6wC,IAE7C7wC,8CAISgS,EAAOhS,GAC3B,IADgCugC,EAChClhC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADyC,GAAImhC,EAC7CnhC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADwD,GAEpDkhC,EAAOjhC,OAAS,EAChBkhC,EAASlhC,OAAS,EAElB,IAAMyxC,EAAgBxjC,MAAM/M,KAAKR,EAAIgxC,oBAC/BC,EAAqB1jC,MAAM/M,KAAKR,EAAIkxC,yBAC1ClxC,EAAI8M,QACJ,QAAAF,EAAA,EAAAA,EAAqBmkC,EAArBzxC,OAAAsN,IACA,CADK,IAAMu1B,EAAU4O,EAAJnkC,GAEb5M,EAAImxC,gBAAgBhP,GAExB,QAAAgK,EAAA,EAAAA,EAA0B8E,EAA1B3xC,OAAA6sC,IACA,CADK,IAAMlB,EAAegG,EAAJ9E,GAElBnsC,EAAIoxC,qBAAqBnG,GAG7B,IAAMoG,EAAa,IAAI1pC,IACjB2pC,EAAgB,IAAI3pC,IAEpB4pC,EAAmB,GAGnBC,EAAax/B,EAAM3E,WACnBokC,EAAaz/B,EAAMzF,WACnBmlC,EAAa1/B,EAAMqD,eAxB7BtK,GAAA,EAAAC,GAAA,EAAAC,OAAA1L,EAAA,IA0BI,QAAA2L,EAAAC,EAAmBqmC,EAAnBpoC,OAAAC,cAAA0B,GAAAG,EAAAC,EAAA7B,QAAAC,MAAAwB,GAAA,EACA,KADWnK,EACXsK,EAAA1B,MACUmoC,EAAY/wC,EAAK0M,eACjB6jB,EAAQ,IAAI8T,GAAM0M,EAAW/wC,GACnCZ,EAAIopC,SAASjY,GAETvwB,EAAKgxC,iBAEL5xC,EAAI6xC,cAAc1gB,GAAO,GAGzBugB,IAAe9wC,GAEfZ,EAAI8xC,cAAc3gB,GAIlBkgB,EAAWtlC,IAAI4lC,GAAYN,EAAWtkC,IAAI4kC,GAAWllC,KAAK0kB,GACzDkgB,EAAWvlC,IAAI6lC,EAAW,CAACxgB,IAGhCmgB,EAAcxlC,IAAIqlB,EAAO,IAAIxpB,MA/CrC,MAAA8B,GAAAuB,GAAA,EAAAC,EAAAxB,EAAA,YAAAsB,GAAA,MAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,MAAAC,GAAA,IAAAG,GAAA,EAAAC,GAAA,EAAAC,OAAA/L,EAAA,IAkDI,QAAAgM,EAAAC,EAAmBimC,EAAnBroC,OAAAC,cAAA+B,GAAAG,EAAAC,EAAAlC,QAAAC,MAAA6B,GAAA,EACA,KADWd,EACXiB,EAAA/B,MACUuoC,EAAUznC,EAAKkC,cACfwlC,EAAU1nC,EAAKoC,YACrB,IAAKpC,EAAKrJ,iBAAmB8wC,aAAmBtR,GAAWuR,aAAmBvR,EAA9E,CAEI,IAAMwR,EAAWjyC,EAAIkyC,aAAaH,EAAQnmC,qBACpCumC,EAAWnyC,EAAIkyC,aAAaF,EAAQpmC,qBAC1C,IAAKqmC,IAAaE,EAAU,MAAM,IAAItxC,MAAM,qEAE5C,IAAMuxC,EAAiB9nC,EAAKwD,eAAe1G,MAAMw5B,GALrD5zB,GAAA,EAAAC,GAAA,EAAAC,OAAA3N,EAAA,IAMI,QAAA4N,EAAAC,EAAmBglC,EAAnBhpC,OAAAC,cAAA2D,GAAAG,EAAAC,EAAA9D,QAAAC,MAAAyD,GAAA,EACA,KADWs0B,EACXn0B,EAAA3D,MACI,GAAK83B,EAAL,CAKA,IAHA,IAAMe,EAAU/3B,EAAK+nC,uBAAuB/Q,GAGnCj8B,EAAI,EAAGA,EAAIg9B,EAAQ/iC,SAAU+F,EACtC,CACI,IAAI88B,EAASE,EAAQh9B,GACrB,OAAQ88B,GAER,KAAKnB,EACDqB,EAAQh9B,GD3HR,SC4HA,MACJ,QACIg9B,EAAQh9B,GAAK88B,GAKrBniC,EAAIsyC,cAAcL,EAAUE,EAAU9P,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,MA3B9E,MAAA54B,GAAAwD,GAAA,EAAAC,EAAAzD,EAAA,YAAAuD,GAAA,MAAAI,EAAA1D,QAAA0D,EAAA1D,SAAA,WAAAuD,EAAA,MAAAC,SAgCIqkC,EAAiB9kC,KAAKnC,IAvFlC,MAAAb,GAAA4B,GAAA,EAAAC,EAAA7B,EAAA,YAAA2B,GAAA,MAAAI,EAAA9B,QAAA8B,EAAA9B,SAAA,WAAA2B,EAAA,MAAAC,GAAA,IAAAY,GAAA,EAAAC,GAAA,EAAAC,OAAA7M,EAAA,IA6FI,QAAA8M,EAAAC,EAAwC+kC,EAAW7J,UAAnDp+B,OAAAC,cAAA6C,GAAAG,EAAAC,EAAAhD,QAAAC,MAAA2C,GAAA,EACA,KAAA47B,EAAAyK,GAAAlmC,EAAA7C,MAAA,GADYmoC,EACZ7J,EAAA,GADuB0K,GACvB1K,EAAA,GACQ0K,GAAalzC,OAAS,GAEtBkhC,EAAS/zB,KAAK,CACV+hB,KArJiB,kBAsJjBvuB,MAAO0xC,EACPxnB,MAAOqoB,GAAartC,IAAI,SAAAnB,GAAC,OAAIA,EAAEyuC,iBApG/C,MAAAhpC,GAAA0C,GAAA,EAAAC,EAAA3C,EAAA,YAAAyC,GAAA,MAAAI,EAAA5C,QAAA4C,EAAA5C,SAAA,WAAAyC,EAAA,MAAAC,GA0GQmlC,EAAiBjyC,OAAS,GAE1BihC,EAAO9zB,KAAK,CACR+hB,KA/J2B,wBAgK3BnE,MAAOknB,IAKf,IAAMmB,GAAevW,aAAoBnqB,GASzC,OARI0gC,IAAgBA,GAAapzC,OAAS,GAEtCkhC,EAAS/zB,KAAK,CACV+hB,KA3KuB,oBA4KvBrE,MAAOuoB,KAIXnS,EAAOjhC,QAAU,EAGVI,KAAK6wC,SAKL,0CAKA,OAAO7wC,KAAK6wC,8oCCwEhBoC,eAnQX,SAAAA,EAAYhW,GACZ,IAAAx9B,EAAA,mGAAAyzC,CAAAlzC,KAAAizC,IACIxzC,EAAA0zC,GAAAnzC,KAAAozC,GAAAH,GAAA9yC,KAAAH,KAAMi9B,EAAQ,IAAIwT,MAEbrgC,gBAAkB,KAH3B3Q,yPAH4Bu9B,kDAUjBC,GAEPoW,GAAAD,GAAAH,EAAAvyC,WAAA,aAAAV,MAAAG,KAAAH,KAAiBi9B,GAEjBj9B,KAAKoQ,gBAAkB6sB,EAAOjhB,qDAI1BihB,GAEJoW,GAAAD,GAAAH,EAAAvyC,WAAA,UAAAV,MAAAG,KAAAH,KAAci9B,kCAIXA,GAEHoW,GAAAD,GAAAH,EAAAvyC,WAAA,SAAAV,MAAAG,KAAAH,KAAai9B,oDAGQ3qB,EAAO/R,GAChC,IAAA6I,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IACI,QAAA0J,EAAAC,EAAmB8I,EAAM3E,WAAzBjE,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADWlI,EACXqI,EAAAO,MACI,GAAI5I,EAAK0M,gBAAkBrN,EAEvB,OAAOW,GALnB,MAAA6I,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GASI,OAAO,+CAGOgJ,EAAOsuB,GAErB5gC,KAAKo9B,gBAAgBkW,kBAAkB1S,EAAStuB,GAGhDiD,IAAYsvB,YAAYvyB,uCAKxB,OAAOtS,KAAKo9B,gBAAgBuD,aAAamQ,kDAKzC,OAAO9wC,KAAK8wC,YAAYlxC,gDAKxB,OAAOI,KAAKo9B,gBAAgBuD,aAAa4S,0DAKzC,OAAOvzC,KAAKo9B,gBAAgBuD,aAAaqQ,uDAKzC,IAAMpQ,EAAU5gC,KAAKo9B,gBAAgBuD,aACrC,OAAO9yB,MAAM/M,KAAK8/B,EAAQ4S,oDAGjB/Q,GAET,OAAQziC,KAAKwrC,eAAe/I,wCAGnBA,GAETziC,KAAKyzC,gBAAgBhR,wCAGZA,GAQT,IANA,IAAI73B,EAAO,KACP7E,EAAQ,KACRzE,EAAS,KACPypB,EAAU,GAEVzY,EAAQtS,KAAKoQ,gBAAgBS,WAC1BlL,EAAI2M,EAAMzF,WAAWjN,OAAS,EAAG+F,GAAK,IAAKA,GAGhDI,GADA6E,EAAO0H,EAAMzF,WAAWlH,IACXyI,eAAeiO,QAAQomB,KACvB,KAETnhC,EAASsJ,EAAKwD,eAAekN,UAAU,EAAGvV,GAAS6E,EAAKwD,eAAekN,UAAUvV,EAAQ,IAC9EnG,OAAS,EAEhBgL,EAAK2J,aAAajT,IAIlBsJ,EAAK2J,aAAa,IAClBjC,EAAMnF,WAAWvC,IAErBmgB,EAAQhe,KAAKnC,IAIjBmgB,EAAQnrB,QAAU,GAElBI,KAAK0zC,oBAAoBC,mBAAmBlR,wCAIvCmR,EAAYC,GAQrB,IANA,IAAIjpC,EAAO,KACPtJ,EAAS,KACPypB,EAAU,GAEVzY,EAAQtS,KAAKoQ,gBAAgBS,WAC7BjR,EAAS0S,EAAMzF,WAAWjN,OACvB+F,EAAI,EAAGA,EAAI/F,IAAU+F,GAG1BrE,GADAsJ,EAAO0H,EAAMzF,WAAWlH,IACVyI,eAAe0lC,QAAQF,EAAYC,KACnCjpC,EAAKwD,gBAEf2c,EAAQhe,KAAKnC,GAEjBA,EAAK2J,aAAajT,GAGlBypB,EAAQnrB,QAAU,GAElBI,KAAK0zC,oBAAoBK,mBAAmBH,EAAYC,8CAM5D,OAAOhmC,MAAM/M,KAAKd,KAAKo9B,gBAAgBuD,aAAa2Q,2DAGzC7O,GAEX,OAAOziC,KAAKo9B,gBAAgBoO,eAAe/I,2CAG/BA,GAEZziC,KAAKo9B,gBAAgBuD,aAAa8Q,gBAAgBhP,gDAKlDziC,KAAKo9B,gBAAgBuD,aAAaqT,gEAKlC,IAAMpT,EAAU5gC,KAAKo9B,gBAAgBuD,aACrC,OAAO9yB,MAAM/M,KAAK8/B,EAAQqT,8DAGZxR,GAEd,OAAQziC,KAAKyrC,oBAAoBhJ,6CAGnBA,GAEdziC,KAAKk0C,qBAAqBzR,6CAGZA,GAQd,IANA,IAAI73B,EAAO,KACP7E,EAAQ,KACRzE,EAAS,KACPypB,EAAU,GAEVzY,EAAQtS,KAAKoQ,gBAAgBS,WAC1BlL,EAAI2M,EAAMzF,WAAWjN,OAAS,EAAG+F,GAAK,IAAKA,GAGhDI,GADA6E,EAAO0H,EAAMzF,WAAWlH,IACXyI,eAAeiO,QAAQomB,KACvB,KAETnhC,EAASsJ,EAAKwD,eAAekN,UAAU,EAAGvV,GAAS6E,EAAKwD,eAAekN,UAAUvV,EAAQ,IAC9EnG,OAAS,EAEhBgL,EAAK2J,aAAajT,IAIlBsJ,EAAK2J,aAAa,IAClBjC,EAAMnF,WAAWvC,IAErBmgB,EAAQhe,KAAKnC,IAIjBmgB,EAAQnrB,QAAU,GAElBI,KAAK0zC,oBAAoBS,wBAAwB1R,6CAIvCmR,EAAYC,GAQ1B,IANA,IAAIjpC,EAAO,KACPtJ,EAAS,KACPypB,EAAU,GAEVzY,EAAQtS,KAAKoQ,gBAAgBS,WAC7BjR,EAAS0S,EAAMzF,WAAWjN,OACvB+F,EAAI,EAAGA,EAAI/F,IAAU+F,GAG1BrE,GADAsJ,EAAO0H,EAAMzF,WAAWlH,IACVyI,eAAe0lC,QAAQF,EAAYC,KACnCjpC,EAAKwD,gBAEf2c,EAAQhe,KAAKnC,GAEjBA,EAAK2J,aAAajT,GAGlBypB,EAAQnrB,QAAU,GAElBI,KAAK0zC,oBAAoBU,wBAAwBR,EAAYC,mDAMjE,OAAOhmC,MAAM/M,KAAKd,KAAKo9B,gBAAgBuD,aAAa6Q,qEAGpC/O,GAEhB,OAAOziC,KAAKo9B,gBAAgBqO,oBAAoBhJ,gDAG/BA,GAEjBziC,KAAKo9B,gBAAgBuD,aAAa+Q,qBAAqBjP,qDAKvDziC,KAAKo9B,gBAAgBuD,aAAa0T,2ECxNnC,SAASC,GAAezM,EAAKpF,EAAQ8R,EAAcC,GAGtD,IAAI/iB,EAAQ,KACRoa,EAAQ,KACR4I,EAAa,GACbC,EAAY,EAEZjS,GAEA+R,EAAcznC,KAAK01B,GAT3B,IAAAl4B,GAAA,EAAAC,GAAA,EAAAC,OAAA5K,EAAA,IAYI,QAAA6K,EAAAC,EAAoB4pC,EAApB7qC,OAAAC,cAAAY,GAAAG,EAAAC,EAAAf,QAAAC,MAAAU,GAAA,EACA,KADUoqC,EACVjqC,EAAAZ,MAKI,GAJA2nB,EAAQkjB,EAAOljB,MACfoa,EAAQ8I,EAAO9I,MACfpJ,EAASkS,EAAO5uC,MAAQyuC,EAAc50C,OAAS40C,EAAcG,EAAO5uC,OAAS,KAG7E,CAEI2uC,EAAYC,EAAO5uC,MAAQ,EAF/B,IAAAsF,GAAA,EAAAC,GAAA,EAAAC,OAAA1L,EAAA,IAGI,QAAA2L,EAAAC,EAAqBo8B,EAAI+M,qBAAqBnjB,EAAOgR,EAAQoJ,GAA7DniC,OAAAC,cAAA0B,GAAAG,EAAAC,EAAA7B,QAAAC,MAAAwB,GAAA,EACA,KADQwpC,EACRrpC,EAAA1B,MACI2qC,EAAW1nC,KAAK,CAAC0kB,MAAOojB,EAAU,GAAIhJ,MAAOgJ,EAAU,GAAI9uC,MAAO2uC,KAL1E,MAAA3qC,GAAAuB,GAAA,EAAAC,EAAAxB,EAAA,YAAAsB,GAAA,MAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,MAAAC,SAUI,GAAIs8B,EAAIM,aAAa1W,GAAQ,OAAO,EAIxCijB,EAAYC,EAAO5uC,OAjC3B,MAAAgE,GAAAS,GAAA,EAAAC,EAAAV,EAAA,YAAAQ,GAAA,MAAAI,EAAAX,QAAAW,EAAAX,SAAA,WAAAQ,EAAA,MAAAC,GAqCI,OAFA8pC,EAAa30C,OAAS,EACtB20C,EAAaxnC,KAAb0S,MAAA80B,EAAqBE,IACd,6KCNIK,cA7EX,SAAAA,EAAYC,GACZ,IADyBC,EACzBr1C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAD6Cs1C,EAC7Ct1C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,gGAAAu1C,CAAAl1C,KAAA80C,GACI90C,KAAKm1C,WAAaJ,EAAcA,EAAYrtC,MAAM,IAAM,GACxD1H,KAAKo1C,MAAQJ,EACbh1C,KAAKq1C,OAASJ,EAEdj1C,KAAKs1C,OAAS,iEAKZt1C,KAAKs1C,gDAKLt1C,KAAKs1C,wCAKPt1C,KAAKs1C,OAAmC,EAAzBt1C,KAAKm1C,WAAWv1C,uCAK/BI,KAAKs1C,QAAU,iCAKft1C,KAAKu1C,SACLv1C,KAAKw1C,iDAGQzvC,GACjB,IADwB08B,EACxB9iC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD+B,GAE3BK,KAAKm1C,WAAWpvC,GAAS08B,qDAGF18B,GAEvB,OAAO,kDAGUA,GAEjB,OAAIA,EAAQ,GAAKA,GAAS/F,KAAKm1C,WAAWv1C,OAAe,GAClDI,KAAKm1C,WAAWpvC,IAAU,gDAKjC,OAAO/F,KAAKo1C,oDAKZ,OAAOp1C,KAAKq1C,mDAGItvC,GAEhB/F,KAAKs1C,OAASvvC,gDAKd,OAAO/F,KAAKs1C,8CAKZ,OAAOt1C,KAAKm1C,igCCrEdM,eAEF,SAAAA,EAAYC,EAAQtlC,EAAiBulC,GACrC,IAAAl2C,EAAA,OAAAm2C,GAAA51C,KAAAy1C,IACIh2C,EAAAo2C,GAAA71C,KAAA81C,GAAAL,GAAAt1C,KAAAH,KAAM01C,EAAOK,iBAAiB,GAAO,KAEhCC,QAAUN,EACfj2C,EAAK6Q,iBAAmBF,EACxB3Q,EAAKw2C,mBAAqBN,EAL9Bl2C,+OAH0Bq1C,8CActB,IAAM1kC,EAAkBpQ,KAAKsQ,iBACvBqlC,EAAoB31C,KAAKi2C,mBAC/Bj2C,KAAKg2C,QAAQE,YAAY9lC,EAAiBulC,0CAM1C,IAAMvlC,EAAkBpQ,KAAKsQ,iBACvBqlC,EAAoB31C,KAAKi2C,mBAC/Bj2C,KAAKg2C,QAAQG,aAAa/lC,EAAiBulC,mCAM3C31C,KAAKg2C,QAAQI,iDAMb,IAAMhmC,EAAkBpQ,KAAKsQ,iBACvBqlC,EAAoB31C,KAAKi2C,mBAC/Bj2C,KAAKg2C,QAAQK,QAAQjmC,EAAiBulC,GAAmB,kCAMzD31C,KAAKg2C,QAAQM,oDAIAvwC,GACjBpG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACI,MAAM,IAAIwB,MAAM,kFAIO4E,GAEvB,OAAIA,EAAQ,GAAKA,GAAS/F,KAAKm1C,WAAWv1C,OAAe,KAClDI,KAAKg2C,QAAQO,mBAAmBxwC,gDAItBA,GAEjB,OAAIA,EAAQ,GAAKA,GAAS/F,KAAKm1C,WAAWv1C,OAAe,GAClDI,KAAKm1C,WAAWpvC,IAAU,+CAIjBA,GAEhB/F,KAAKg2C,QAAQQ,eAAezwC,iDAM5B,OAAO/F,KAAKg2C,QAAQS,uBAItBC,cAEF,SAAAA,IACAd,GAAA51C,KAAA02C,GACI12C,KAAK22C,YAAc,KACnB32C,KAAK42C,YAAc,EAEnB52C,KAAK62C,aAAe,KAGpB72C,KAAK82C,WAAa,GAClB92C,KAAK+2C,cAAgB,KACrB/2C,KAAKg3C,SAAW,KAChBh3C,KAAKi3C,QAAU,KAEfj3C,KAAK49B,cAAc,aACnB59B,KAAK49B,cAAc,YACnB59B,KAAK49B,cAAc,yDAWbsZ,EAAY9mC,EAAiBulC,GACvC,IAAAriC,EAAAtT,KAEI,GADKk3C,IAAYA,EAAa,IAC1Bl3C,KAAK62C,aAAc,MAAM,IAAI11C,MAAM,2CAGvC,OADciP,EAAgBS,WACpB+jB,UAAkBxa,QAAQ+8B,UAEpCn3C,KAAK22C,YAAcO,EACnBl3C,KAAK42C,YAAc,EACnB52C,KAAK82C,WAAWl3C,OAAS,EACzBI,KAAK+2C,cAAgB,KACrB/2C,KAAK62C,aAAe,IAAIpB,GAAgBz1C,KAAMoQ,EAAiBulC,GAE/D31C,KAAKq+B,KAAK,YAAar+B,MAEhB,IAAIoa,QAAQ,SAACC,EAAS88B,GAEzB7jC,EAAK0jC,SAAW38B,EAChB/G,EAAK2jC,QAAUE,wCAMnB,IAAKn3C,KAAK62C,aAAc,MAAM,IAAI11C,MAAM,4BAIxC,GAFAnB,KAAKq+B,KAAK,WAAYr+B,OAEjBA,KAAKg3C,SAAU,MAAM,IAAI71C,MAAM,8CACpC,IAAKnB,KAAKi3C,QAAS,MAAM,IAAI91C,MAAM,8CAEnC,IAAIi2C,EAAa,KAkBjB,OAjBIp3C,KAAK82C,WAAWl3C,QAAUI,KAAK22C,YAAY/2C,QAE3Cw3C,EAAap3C,KAAK+2C,cAClB/2C,KAAKg3C,SAASI,KAIdA,EAAa,KACbp3C,KAAKi3C,WAGTj3C,KAAK22C,YAAc,KACnB32C,KAAK42C,YAAc,EACnB52C,KAAK82C,WAAWl3C,OAAS,EACzBI,KAAK+2C,cAAgB,KACrB/2C,KAAK62C,aAAe,KAEbz8B,QAAQC,QAAQ+8B,mCAGnBhnC,EAAiBulC,GACzB,IAAAvhC,EAAApU,KAD4Cq3C,EAC5C13C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACI,IAAKK,KAAK62C,aAAc,MAAM,IAAI11C,MAAM,2BAExC,OAAO,IAAIiZ,QAAQ,SAACC,EAAS88B,GAEzB,IAAI71C,GAAS,EACb,GAEIA,EAAS8S,EAAK8hC,YAAY9lC,EAAiBulC,GAAoB0B,SAE5D/1C,GAEP+Y,EAAQjG,EAAK2iC,iBACdO,KAAK,SAACh2C,GAEL,OAAI+1C,EAAiBjjC,EAAKkiC,WACdh1C,wCAIR8O,EAAiBulC,KAC7Bh2C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,OACUihC,EAAU+U,EAAkBjC,oBAAoB/S,aAEtD,GAAI3gC,KAAK42C,YAAc52C,KAAK22C,YAAY/2C,OAAQ,OAAO,EAGvD,KAFEI,KAAK42C,WAEH52C,KAAK82C,WAAWl3C,QAAUI,KAAK42C,WACnC,CAEI,IAAIrC,EAAcC,EAAgB,KAC5B+C,EAAWv3C,KAAK42C,aAAe52C,KAAK22C,YAAY/2C,OAGtD,GAAII,KAAK42C,YAAc,EACvB,CACIrC,EAAe,GACfC,EAAgB,GAEhB,IAAMrD,EAAavQ,EAAQwQ,gBAJ/BhoC,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IAKI,QAAA0J,EAAAC,EAAmCo3B,EAAQwM,oBAAoB+D,EAAY,IAA3EznC,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADWouC,EACXjuC,EAAAO,MACIyqC,EAAaxnC,KAAK,CAAC0kB,MAAO+lB,EAAqB,GAAI3L,MAAO2L,EAAqB,GAAIzxC,MAAO,KAPlG,MAAAgE,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,QAWA,CACI,IAAMmuC,EAAYz3C,KAAK82C,WAAW92C,KAAK42C,WAAa,GACpDrC,EAAekD,EAAUC,OAAO/a,QAChC6X,EAAgBiD,EAAU9U,QAAQhG,QAIlC2X,GAAe1T,EADI5gC,KAAK22C,YAAY32C,KAAK42C,WAAa,GAClBrC,EAAcC,GAIlD+C,IAEAv3C,KAAK+2C,cAAgBzC,GAAe1T,EAAS,KAAM2T,EAAcC,IAIrE,IAAMzpB,EAAU,IAAI+X,IAnCxBv4B,GAAA,EAAAC,GAAA,EAAAC,OAAA5K,EAAA,IAoCI,QAAA6K,EAAAC,EAAyB4pC,EAAzB7qC,OAAAC,cAAAY,GAAAG,EAAAC,EAAAf,QAAAC,MAAAU,GAAA,EACA,KADUotC,EACVjtC,EAAAZ,MACU5I,EAAOy2C,EAAYlmB,MAAMshB,YAG/B,IAAK7xC,EAAM,MAAM,IAAIC,MAAM,wBAA2Bw2C,EAAYlmB,MAAQ,KAE1E1G,EAAQiY,IAAI9hC,IA3CpB,MAAA6I,GAAAS,GAAA,EAAAC,EAAAV,EAAA,YAAAQ,GAAA,MAAAI,EAAAX,QAAAW,EAAAX,SAAA,WAAAQ,EAAA,MAAAC,GA6CI,IAAMmtC,EAAY,CACd7sB,QAASld,MAAM/M,KAAKiqB,GACpB2sB,OAAQnD,EACR5R,QAAS6R,GAEbx0C,KAAK82C,WAAW/pC,KAAK6qC,GAQzB,OADA53C,KAAKq+B,KAAK,aACH,uCAGEjuB,EAAiBulC,GAE1B,QAAI31C,KAAK42C,YAAc,OACrB52C,KAAK42C,WAGP52C,KAAKq+B,KAAK,aACH,uCAKP,OAA4B,OAArBr+B,KAAK22C,mDAGD9zC,GAEPA,GAAY7C,KAAK82C,WAAWl3C,OAE5BI,KAAK42C,WAAa52C,KAAK82C,WAAWl3C,OAAS,EAIvCiD,EAAW,EAEX7C,KAAK42C,WAAa,EAEb/zC,GAAY7C,KAAK22C,YAAY/2C,OAElCI,KAAK42C,WAAa52C,KAAK22C,YAAY/2C,OAAS,EAI5CI,KAAK42C,WAAa/zC,0CAO1B7C,KAAK42C,YAAc,wCAKnB,OAAO52C,KAAK42C,sDAGG/zC,GAEf,OAAO7C,KAAK82C,WAAWl3C,OAASiD,4CAKhC,OAAI7C,KAAK42C,YAAc,GAAK52C,KAAK42C,WAAa52C,KAAK82C,WAAWl3C,OAEnDI,KAAK82C,WAAW92C,KAAK42C,YAIrB,gDAII/zC,GAEf,OAAIA,GAAY,GAAKA,EAAW7C,KAAK82C,WAAWl3C,OAErCI,KAAK82C,WAAWj0C,GAAUkoB,QAI1B,6CAMX,OAAO/qB,KAAK22C,qDAKZ,OAAO32C,KAAK62C,6CAxOZ,OAAI72C,KAAK82C,WAAWl3C,QAAU,EAAU,GAC1BI,KAAK82C,WAAW92C,KAAK82C,WAAWl3C,OAAS,GAC1CmrB,iBAyOrBsS,KAAUE,MAAMmZ,IAEDA,iwBCnQAmB,eAlFX,SAAAA,EAAYt1C,GACZ,IAAA9C,mGAAAq4C,CAAA93C,KAAA63C,KACI73C,MAAAP,MAAAs4C,GAAAF,GAAA13C,KAAAH,KAAMuC,qDAEDy1C,YAAc,EACnBv4C,EAAKw4C,YAAc,GACnB,IAAMltB,EAAUxoB,EAAM21C,QAAQntB,QALlC3hB,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IAMI,QAAA0J,EAAAC,EAAoBuhB,EAApBrhB,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADU7E,EACVgF,EAAAO,MACQrK,EAAKw4C,YAAYr4C,OAAS,IAE1BH,EAAKw4C,aAAe,MAExBx4C,EAAKw4C,aAAe1zC,EAAOqJ,gBAZnC,MAAA7D,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAAA,OAeI7J,EAAKwY,QAAUxY,EAAKwY,QAAQb,KAAb+gC,MAAA14C,KAfnBA,yPAHkCyE,IAAMC,iDAqBhCG,GAEJ,IAAM8zC,EAAep4C,KAAKuC,MAAM61C,aAC1BF,EAAUl4C,KAAKuC,MAAM21C,QAErB9nC,EAAkBpQ,KAAKuC,MAAM6N,gBAEnC,OAAO9L,EAAEC,OAAOuF,OAEhB,IAAK,SAEG,IAAMihB,EAAUmtB,EAAQntB,QAClBstB,EAAettB,EAAQnrB,OAC7B,GAAIy4C,EAAe,GAAKr4C,KAAKg4C,YAAcK,EAC3C,CAEI,IAAM9zC,EAASwmB,EAAQ/qB,KAAKg4C,eACxBh4C,KAAKg4C,aAAeK,IAAcr4C,KAAKg4C,YAAc,GAGzD5nC,EAAgBkoC,YAAY/zC,GAGpC,MACJ,IAAK,YAEG,IAAMwmB,EAAUmtB,EAAQntB,QAExB3a,EAAgBmoC,kBAAkBxtB,GAGlC3a,EAAgBq0B,kBAGhB2T,EAAaI,0CASrB,IAAMN,EAAUl4C,KAAKuC,MAAM21C,QAE3B,OACIvhC,EAAAlU,EAAAC,cAAC+1C,GAAA,EAAD,CAA2Bj5C,GAAIQ,KAAKuC,MAAM/C,GACtCuV,UAAW/U,KAAKuC,MAAMwS,UACtBrR,MAAO1D,KAAKuC,MAAMmB,MAClBg1C,UAAWC,KACXP,aAAcp4C,KAAKuC,MAAM61C,cACzBzhC,EAAAlU,EAAAC,cAAA,SAAIw1C,EAAQU,KAAO,KAAO54C,KAAKi4C,aAC/BthC,EAAAlU,EAAAC,cAAA,UAAQoH,MAAM,SAASmO,QAASjY,KAAKiY,SAChC6D,KAAKC,SAAS,0BAEnBpF,EAAAlU,EAAAC,cAAA,UAAQoH,MAAM,YAAYmO,QAASjY,KAAKiY,SACnC6D,KAAKC,SAAS,gzBC5EnC,IAAM88B,GAAQ,IAqFCC,eAjFX,SAAAA,EAAYv2C,GACZ,IAAA9C,mGAAAs5C,CAAA/4C,KAAA84C,KACI94C,MAAAP,MAAAu5C,GAAAF,GAAA34C,KAAAH,KAAMuC,qDAEDy1C,YAAc,EACnBv4C,EAAKw4C,YAAc,GACnB,IAAMltB,EAAUxoB,EAAM21C,QAAQntB,QALlC3hB,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IAMI,QAAA0J,EAAAC,EAAoBuhB,EAApBrhB,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADU7E,EACVgF,EAAAO,MACQrK,EAAKw4C,YAAYr4C,OAAS,IAE1BH,EAAKw4C,aAAe,MAExBx4C,EAAKw4C,aAAe,IAAM1zC,EAAOuI,cAAcc,eAAiB,KACpErJ,EAAO6J,eAAiB,KACxByqC,GAAQ,KAAOt0C,EAAOyI,sBAAuBzN,IAAYgF,EAAOyI,YAAYY,eAAiB,SAdjG,MAAA7D,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAAA,OAiBI7J,EAAKwY,QAAUxY,EAAKwY,QAAQb,KAAb6hC,MAAAx5C,KAjBnBA,yPAHuCyE,IAAMC,iDAuBrCG,GAEJ,IAAM8zC,EAAep4C,KAAKuC,MAAM61C,aAC1BF,EAAUl4C,KAAKuC,MAAM21C,QAErB9nC,EAAkBpQ,KAAKuC,MAAM6N,gBAEnC,OAAO9L,EAAEC,OAAOuF,OAEhB,IAAK,SAEG,IAAMihB,EAAUmtB,EAAQntB,QAClBstB,EAAettB,EAAQnrB,OAC7B,GAAIy4C,EAAe,GAAKr4C,KAAKg4C,YAAcK,EAC3C,CAEI,IAAM9zC,EAASwmB,EAAQ/qB,KAAKg4C,eACxBh4C,KAAKg4C,aAAeK,IAAcr4C,KAAKg4C,YAAc,GAGzD5nC,EAAgB8oC,YAAY30C,GAGpC,MACJ,IAAK,YAEG,IAAMwmB,EAAUmtB,EAAQntB,QAExB3a,EAAgB+oC,kBAAkBpuB,GAGlCqtB,EAAaI,0CAWrB,OACI7hC,EAAAlU,EAAAC,cAAC+1C,GAAA,EAAD,CAA2Bj5C,GAAIQ,KAAKuC,MAAM/C,GACtCuV,UAAW/U,KAAKuC,MAAMwS,UACtBrR,MAAO1D,KAAKuC,MAAMmB,MAClBg1C,UAAWC,KACXP,aAAcp4C,KAAKuC,MAAM61C,cACzBzhC,EAAAlU,EAAAC,cAAA,SAAI1C,KAAKuC,MAAM21C,QAAQU,KAAO,KAAO54C,KAAKi4C,aAC1CthC,EAAAlU,EAAAC,cAAA,UAAQoH,MAAM,SAASmO,QAASjY,KAAKiY,SAChC6D,KAAKC,SAAS,0BAEnBpF,EAAAlU,EAAAC,cAAA,UAAQoH,MAAM,YAAYmO,QAASjY,KAAKiY,SACnC6D,KAAKC,SAAS,ozBCApBq9B,eA7EX,SAAAA,EAAY72C,GACZ,IAAA9C,mGAAA45C,CAAAr5C,KAAAo5C,KACIp5C,MAAAP,MAAA65C,GAAAF,GAAAj5C,KAAAH,KAAMuC,qDAEDy1C,YAAc,EACnBv4C,EAAKw4C,YAAc,GACnB,IAAMltB,EAAUxoB,EAAM21C,QAL1B9uC,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IAMI,QAAA0J,EAAAC,EAAoBuhB,EAApBrhB,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADU7E,EACVgF,EAAAO,MACQrK,EAAKw4C,YAAYr4C,OAAS,IAE1BH,EAAKw4C,aAAe,MAExBx4C,EAAKw4C,aAAe1zC,EAAOqJ,gBAZnC,MAAA7D,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAAA,OAeI7J,EAAKwY,QAAUxY,EAAKwY,QAAQb,KAAbmiC,MAAA95C,KAfnBA,yPAH6CyE,IAAMC,iDAqB3CG,GAEJ,IAAM8zC,EAAep4C,KAAKuC,MAAM61C,aAC1BF,EAAUl4C,KAAKuC,MAAM21C,QACrB9nC,EAAkBpQ,KAAKuC,MAAM6N,gBAEnC,OAAO9L,EAAEC,OAAOuF,OAEhB,IAAK,SAGG,IAAMvF,EAAS2zC,EAAQl4C,KAAKg4C,eACxBh4C,KAAKg4C,aAAeE,EAAQt4C,SAE5BI,KAAKg4C,YAAc,GAIvB5nC,EAAgBkoC,YAAY/zC,GAEhC,MACJ,IAAK,YAEG,IAAMwmB,EAAUmtB,EAEhB9nC,EAAgBmoC,kBAAkBxtB,GAGlC3a,EAAgBq0B,kBAGhB2T,EAAaI,0CASrB,OACI7hC,EAAAlU,EAAAC,cAAC+1C,GAAA,EAAD,CAA2Bj5C,GAAIQ,KAAKuC,MAAM/C,GACtCuV,UAAW/U,KAAKuC,MAAMwS,UACtBrR,MAAO1D,KAAKuC,MAAMmB,MAClBg1C,UAAWc,KACXpB,aAAcp4C,KAAKuC,MAAM61C,cACzBzhC,EAAAlU,EAAAC,cAAA,SAAIoZ,KAAKC,SAAS,+BAAiC,KAAO/b,KAAKi4C,aAC/DthC,EAAAlU,EAAAC,cAAA,UAAQoH,MAAM,SAASmO,QAASjY,KAAKiY,SAChC6D,KAAKC,SAAS,0BAEnBpF,EAAAlU,EAAAC,cAAA,UAAQoH,MAAM,YAAYmO,QAASjY,KAAKiY,SACnC6D,KAAKC,SAAS,qEC1EtB09B,GAAkB,gBAGlBC,GAAuB,qBAGvBC,GAA8B,uMC2F5BC,cAlFX,SAAAA,EAAYr/B,EAAKnK,EAAiBulC,gGAClCkE,CAAA75C,KAAA45C,GACI55C,KAAKya,KAAOF,EACZva,KAAKsQ,iBAAmBF,EACxBpQ,KAAKi2C,mBAAqBN,EAC1B31C,KAAK85C,oBAAqB,EAE1B95C,KAAK+5C,gBAAkB/5C,KAAK+5C,gBAAgB3iC,KAAKpX,MAEjD21C,EAAkBjC,oBAAoBsG,0BAA0BxZ,YAAYxgC,KAAK+5C,gFAGrE7c,GAERl9B,KAAK85C,oBAEL95C,KAAKi6C,sDAIIC,GAEbl6C,KAAK85C,mBAAqBI,4CAK1B,OAAOl6C,KAAK85C,wDAKZ,IAAMv3C,EAAQ,CAAC6N,gBAAiBpQ,KAAKsQ,iBAAkBqlC,kBAAmB31C,KAAKi2C,oBACzE/Y,EAAiBl9B,KAAKi2C,mBAAmBvC,oBACzC7S,EAAS3D,EAAeid,mBACxBrZ,EAAW5D,EAAekd,qBAG1BC,EADMr6C,KAAKya,KACeiqB,yBAGhC,GADA2V,EAAoBC,mBD/CkB,iBCgDlCzZ,EAAOjhC,QAAU,GAAKkhC,EAASlhC,QAAU,EAEzCy6C,EAAoB1V,iBAChB7oB,KAAKC,SAAS,sBACdw+B,IDpD8B,gBCoDqB,MAAM,OAGjE,KAAAnxC,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IACI,QAAA0J,EAAAC,EAAqBs3B,EAArBp3B,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADUoxC,EACVjxC,EAAAO,MACI,OAAO0wC,EAAQ1rB,MAEf,IT9DqB,kBS+DjBurB,EAAoB1V,iBAAiB,CACjCiU,KAAM,yCACN7tB,QAASyvB,EAAQ/vB,OAClBgvB,GDhEuB,gBCgE0Bl3C,GAAO,GAC3D,MACJ,ITrEuB,oBSsEnB83C,EAAoB1V,iBAAiB6V,EAAQ/vB,MACzCkvB,GDpEsB,gBCoEuCp3C,GAAO,KAbpF,MAAAwH,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAAA,IAAAiB,GAAA,EAAAC,GAAA,EAAAC,OAAA5K,EAAA,IAkBI,QAAA6K,EAAAC,EAAmBk2B,EAAnBn3B,OAAAC,cAAAY,GAAAG,EAAAC,EAAAf,QAAAC,MAAAU,GAAA,EACA,KADUk/B,EACV/+B,EAAAZ,MACI,OAAO2/B,EAAM3a,MAEb,IT9E2B,wBS+EvBurB,EAAoB1V,iBAAiB,CACjCiU,KAAM98B,KAAKC,SAAS,4BACpBgP,QAAS0e,EAAM9e,OAChB+uB,GDjFuB,gBCiF+Bn3C,GAAO,KA1B5E,MAAAwH,GAAAS,GAAA,EAAAC,EAAAV,EAAA,YAAAQ,GAAA,MAAAI,EAAAX,QAAAW,EAAAX,SAAA,WAAAQ,EAAA,MAAAC,4CC5DKgwC,GAAO,CAChBxb,MADgB,SACVlX,GACN,IADYznB,EACZX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADgB,KAEPW,EACAA,EAAI8M,QADC9M,EAAM,IAAI6hC,EAUpB,IAPA,IAAMuY,EAAY3yB,EAAI,OAAa,GAC7B4yB,EAAYh6C,KAAKmD,IAAI42C,EAAU96C,QAAU,EAAGmoB,EAAI,WAAiB,GACjE6yB,EAAY7yB,EAAI,OAAa,GAC7B8yB,EAAYl6C,KAAKmD,IAAI82C,EAAUh7C,QAAU,EAAGmoB,EAAI,WAAiB,GACjE+yB,EAAe/yB,EAAI,SAAe,EAElCgzB,EAAc,IAAI9yC,IAChBtC,EAAI,EAAGA,EAAIg1C,IAAah1C,EAChC,CACI,IAAMq1C,EAAWN,EAAU/0C,GAC3B,GAAKq1C,EAAL,CAGA,IAAM95C,EAAOZ,EAAIkR,WAAWwpC,EAAQ,GAAS,EAAGA,EAAQ,GAAS,EAAGA,EAAQ,IAC5E95C,EAAKuQ,aAAaupC,EAAQ,OAAa,IACvC95C,EAAK6vC,cAAciK,EAAQ,SAAc,GACzC95C,EAAKokC,cAAc0V,EAAQ,SAAc,GAEzCD,EAAY3uC,IAAIzG,EAAGzE,IAGvB,IAAM+5C,EAAcF,EAAY1tC,IAAIytC,GAChCG,GAEA36C,EAAIgV,aAAa2lC,GAGrB,IAAI,IAAIt1C,EAAI,EAAGA,EAAIk1C,IAAal1C,EAChC,CACI,IAAMu1C,EAAWN,EAAUj1C,GAC3B,GAAKu1C,EAAL,CACA,IAAMC,EAAaJ,EAAY1tC,IAAI6tC,EAAQ,OAAa,KAExD,GAAKC,EAAL,CACA,IAAMC,EAAkBL,EAAY1tC,IAAI6tC,EAAQ,KAAW,KAErDtwC,EAAOtK,EAAIkT,WAAW2nC,EAAYC,EAAiBF,EAAQ,IAC3DG,EAAWH,EAAQ,MAAY,GACrCtwC,EAAK2J,aAAa2mC,EAAQ,OAAa,IACvCtwC,EAAKgJ,oBAAoBynC,EAAQ,SAAe,GAChDzwC,EAAKiJ,mBAAmBwnC,EAAQ,QAAc,KAGlD,OAAO/6C,GAEXu+B,UAnDgB,SAmDNvsB,GAUN,IARA,IAAMw/B,EAAax/B,EAAM3E,YAAc,GACjCgtC,EAAY7I,EAAWlyC,QAAU,EACjCmyC,EAAaz/B,EAAMzF,YAAc,GACjCguC,EAAY9I,EAAWnyC,QAAU,EACjC07C,EAAehpC,EAAMqD,eAErB+kC,EAAY,IAAI7sC,MAAM8sC,GACtBI,EAAc,IAAI9yC,IAChBtC,EAAI,EAAGA,EAAIg1C,IAAah1C,EAChC,CACI,IAAMzE,EAAO4wC,EAAWnsC,GACxB,GAAIzE,EACJ,CAEI,IAAMuD,EAAYvD,EAAKgL,oBAEvB6uC,EAAY3uC,IAAIlL,EAAMyE,GACtB+0C,EAAU/0C,GAAK,CACXnG,GAAIiF,EACJ/E,EAAGwB,EAAKxB,GAAK,EAAGI,EAAGoB,EAAKpB,GAAK,EAC7BS,MAAOW,EAAK0M,gBAAkB,GAC9B2tC,OAAQr6C,EAAKgxC,kBAAmB,EAChCvG,OAAQzqC,EAAK0iC,kBAAmB,IAM5C,IADA,IAAMgX,EAAY,IAAI/sC,MAAMgtC,GACpBl1C,EAAI,EAAGA,EAAIk1C,IAAal1C,EAChC,CACI,IAAMiF,EAAOmnC,EAAWpsC,GACxB,GAAIiF,EACJ,CAEI,IAAMnG,EAAYmG,EAAKsB,oBAEjBsvC,EAAO5wC,EAAK6wC,gBAAkB,GAC9BC,EAAa9wC,EAAKkC,cAClB6uC,EAAkB/wC,EAAKoC,YACvB4uC,EAAcb,EAAY1uC,IAAIqvC,GAAcX,EAAY1tC,IAAIquC,IAAe,EAC3EG,EAAmBd,EAAY1uC,IAAIsvC,GAAmBZ,EAAY1tC,IAAIsuC,IAAoB,EAChGf,EAAUj1C,GAAK,CACXnG,GAAIiF,EACJ3D,KAAM86C,EACN76C,GAAI86C,EACJL,KAAM,CAAEjtC,QAASitC,EAAI,SAAe,EAAG57C,OAAQ47C,EAAI,QAAc,GACjEj7C,MAAOqK,EAAKwD,gBAAkB,KAO1C,MAAO,CACHusC,UAAWA,EACXlwB,MAAOiwB,EACPG,UAAWA,EACXlwB,MAAOiwB,EACPrb,QAPiBwb,EAAY1tC,IAAIiuC,IAAiB,EAQlDQ,SAlHiB,q0BC4FdC,mBAvFX,SAAAA,EAAYxhC,EAAKyhC,GACjB,IAAAv8C,EAAA,mGAAAw8C,CAAAj8C,KAAA+7C,IACIt8C,EAAAy8C,GAAAl8C,KAAAm8C,GAAAJ,GAAA57C,KAAAH,KAAMua,KAEDokB,aAAeqd,EACpBv8C,EAAK28C,eAAiB,EAJ1B38C,yPAHsB6a,sDAWPI,EAASP,GAEpB,OAAOsgC,KAAKxb,MAAM9kB,8CAIHO,GAEf,IAEMpI,EAFgBoI,EAAQQ,mBACQc,qBACRnL,WAC9B7Q,KAAKo8C,eAAiB9pC,EAAM2jB,aAAY,GAGnC3jB,EAAMsiB,WAEPla,EAAQC,SAASC,iBAAiBC,uDAK1BH,EAASI,GAErB,IAAMG,EAAgBP,EAAQQ,mBACxB9K,EAAkB6K,EAAce,qBAChC25B,EAAoB16B,EAAcohC,uBAClC/pC,EAAQlC,EAAgBS,WAE9B7Q,KAAK2+B,aAAaM,MAAMnkB,EAAW,UAAexI,GA8B1D,SAA6BlC,EAAiBulC,EAAmB2G,GAE7D,IAAMC,EAAcD,EAAY93C,KAC5B+3C,GAAa5G,EAAkB6G,eAAeD,GAClD,IAAMlL,EAAgBiL,EAAY3Z,QAClC,GAAI0O,GAAiBxjC,MAAM4uC,QAAQpL,GACnC,CACIsE,EAAkB3B,qBADtB,IAAA5qC,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IAEI,QAAA0J,EAAAC,EAAoB6nC,EAApB3nC,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADUq5B,EACVl5B,EAAAO,MACI6rC,EAAkBlC,gBAAgBhR,IAJ1C,MAAA14B,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,IAOA,IAAMozC,EAAcJ,EAAYI,YAC5BA,GAEAtsC,EAAgBg1B,kBAAkBuX,0BAA0BD,GA5C5DE,CAAoB3hC,EAAe7K,EAAiBulC,EAAmB76B,EAAW,yDAIlEJ,GAEhB,IAKMmiC,EALgBniC,EAAQQ,mBACQc,qBACRnL,WAGFolB,aAAY,GACpCj2B,KAAKo8C,iBAAmBS,GAGxBniC,EAAQC,SAASC,iBAAiBC,63BCtB/BiiC,eA9BX,SAAAA,EAAYd,GACZ,IAAAv8C,EAAA,mGAAAs9C,CAAA/8C,KAAA88C,IACIr9C,EAAAu9C,GAAAh9C,KAAAi9C,GAAAH,GAAA38C,KAAAH,KAAM,eACD2+B,aAAeqd,EAFxBv8C,yPAHsByuB,uDASNxT,EAASpa,GAErB,IAAM2a,EAAgBP,EAAQQ,mBACxB9K,EAAkB6K,EAAce,qBAChC25B,EAAoB16B,EAAcohC,uBAClC/pC,EAAQlC,EAAgBS,WACxBqsC,EAAYl9C,KAAK2+B,aAAaE,UAAUvsB,GAE9ChS,EAAG,UAAgB48C,EACnB58C,EAAG,YAAkB,CACjBqiC,QAASgT,EAAkBrE,mBAC3BoL,YAAatsC,EAAgBg1B,kBAAkBtB,oEAKtC,OAAOjqB,wCAEX,OAAOiC,KAAKC,SAAS,0DAErB,OAAOD,KAAKC,SAAS,k8BCjCtC,IAqIeohC,eAhIX,SAAAA,EAAY56C,GACZ,IAAA9C,MAAA,mGAAA29C,CAAAp9C,KAAAm9C,KACIn9C,MAAAP,MAAA49C,GAAAF,GAAAh9C,KAAAH,KAAMuC,qDAEDkvB,MAAQ,CACT3nB,MAAO,KACP2/B,OAAO,GAGXhqC,EAAK69C,cAAgB79C,EAAK69C,cAAclmC,KAAnBmmC,MAAA99C,KACrBA,EAAK+5B,QAAU/5B,EAAK+5B,QAAQpiB,KAAbmmC,MAAA99C,KACfA,EAAKg6B,OAASh6B,EAAKg6B,OAAOriB,KAAZmmC,MAAA99C,KACdA,EAAKi6B,UAAYj6B,EAAKi6B,UAAUtiB,KAAfmmC,MAAA99C,KACjBA,EAAK+9C,QAAU/9C,EAAK+9C,QAAQpmC,KAAbmmC,MAAA99C,KAZnBA,yPAH2ByE,IAAMC,iDAkBzBG,GAEJ,IAAMC,EAASD,EAAEC,OACXrD,EAAOlB,KAAKuC,MAAMrB,KAElB+wC,EAAY/wC,EAAOA,EAAK0M,eAAiB,KAC/C5N,KAAKiyB,SAAS,CACVnoB,MAAOmoC,EACPxI,OAAO,GACR,kBAAMllC,EAAOo1B,WAGZ35B,KAAKuC,MAAMi3B,SAASx5B,KAAKuC,MAAMi3B,QAAQl1B,EAAGtE,qCAG3CsE,GAEH,IAAM4wB,EAAYl1B,KAAKyxB,MAAM3nB,MAG7B9J,KAAKiyB,SAAS,CAAEnoB,MAAO,KAAM2/B,OAAO,IAGhCzpC,KAAKuC,MAAMk3B,QAAQz5B,KAAKuC,MAAMk3B,OAAOn1B,EAAGtE,KAAMk1B,qCAG5C5wB,GAEN,IAAMm5C,EAAUn5C,EAAEsB,IAjDF,UAkDZ63C,GAjDY,WAiDmBA,IAE/Bn5C,EAAEkf,iBACFlf,EAAEif,mDAIFjf,GAEJ,IAAMm5C,EAAUn5C,EAAEsB,IACZrB,EAASD,EAAEC,OA5DD,UA8DZk5C,EAEAl5C,EAAOmf,OA/DK,WAiEP+5B,GAELz9C,KAAKiyB,SAAS,CACVnoB,MAAO,KACP2/B,OAAO,GACR,kBAAMllC,EAAOmf,+CAIVpf,GAEV,IAAIwF,EAAQxF,EAAEC,OAAOuF,MAAMg4B,OACvB2H,GAAQ,EAEZ,GAAIzpC,KAAKuC,MAAM2vB,SAEX,IAEIlyB,KAAKuC,MAAM2vB,SAAS5tB,EAAGtE,KAAM8J,GAEjC,MAAMxF,GAEFmlC,GAAQ,EAIhBzpC,KAAKiyB,SAAS,CACVnoB,MAAOA,EACP2/B,MAAOA,qCAOX,IAAMvoC,EAAOlB,KAAKuC,MAAMrB,KAClBw8C,EAAa19C,KAAKyxB,MAAM3nB,MAExBmoC,EAAY/wC,EAAOA,EAAK0M,eAAiB,GACzC+vC,IAAaz8C,IAAQA,EAAK0iC,iBAAkC,OAAf8Z,GAAuBA,IAAezL,GACnF2L,IAAa18C,GAAOA,EAAKgxC,gBAEzB2L,EAA8B,OAAfH,EAAsBzL,EAAYyL,EAEvD,OACI/mC,EAAAlU,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAChBuV,UAAW6C,KAAMkmC,mBACtBH,EAAa,WAAa,MACxBz8C,EAAK0iC,iBAAmBia,EAAaj+C,QAAU,EAAK,UAAY,KACnD,OAAf89C,GAAuB19C,KAAKyxB,MAAMgY,MAAQ,UAAY,KACtDmU,EAAa,WAAa,IAC3B,IAAM59C,KAAKuC,MAAMwS,UACXrR,MAAO1D,KAAKuC,MAAMmB,OAClBiT,EAAAlU,EAAAC,cAAA,SACI83B,YAAY,EACZ92B,MAAO,CAACgF,MAAOm1C,EAAaj+C,OAAS,MACrCkK,MAAO+zC,EACP3rB,SAAUlyB,KAAKs9C,cACf9jB,QAASx5B,KAAKw5B,QACdC,OAAQz5B,KAAKy5B,OACbC,UAAW15B,KAAK05B,UAChB8jB,QAASx9C,KAAKw9C,iyBCJnBO,eAnHX,SAAAA,EAAYx7C,GACZ,IAAA9C,MAAA,mGAAAu+C,CAAAh+C,KAAA+9C,KACI/9C,MAAAP,MAAAw+C,GAAAF,GAAA59C,KAAAH,KAAMuC,qDAED27C,OAAS,EACdz+C,EAAK0+C,OAAS,EAEd1+C,EAAK2+C,aAAe3+C,EAAK2+C,aAAahnC,KAAlBinC,MAAA5+C,KACpBA,EAAK6+C,eAAiB7+C,EAAK6+C,eAAelnC,KAApBinC,MAAA5+C,KACtBA,EAAK8+C,cAAgB9+C,EAAK8+C,cAAcnnC,KAAnBinC,MAAA5+C,KACrBA,EAAK++C,gBAAkB/+C,EAAK++C,gBAAgBpnC,KAArBinC,MAAA5+C,KAT3BA,yPAHwByE,IAAMC,sDAejBG,GAET,IAAM8L,EAAkBpQ,KAAKuC,MAAM6N,gBACnCpQ,KAAKk+C,QAAU,GACfl+C,KAAKm+C,QAAU,GACf,IAAMj9C,EAAOkP,EAAgBoB,WAAWxR,KAAKk+C,OAAQl+C,KAAKm+C,QAC1D/tC,EAAgBkoC,YAAYp3C,0CAGjBoD,EAAGwY,GAEd9c,KAAKk+C,OAASphC,EAAQva,MAAMrB,KAAKxB,EACjCM,KAAKm+C,OAASrhC,EAAQva,MAAMrB,KAAKpB,EACTE,KAAKuC,MAAM6N,gBACnBkoC,YAAYx7B,EAAQva,MAAMrB,4CAGhCoD,EAAGwY,EAASoY,GAEtB,IAAMh0B,EAAO4b,EAAQva,MAAMrB,KAC3B,GAAKA,EAAL,CAEA,IAAMkP,EAAkBpQ,KAAKuC,MAAM6N,gBAGnC,GAAkB,OAAd8kB,EACJ,CACI,IAAM5iB,EAAQlC,EAAgBS,WAC9B,GAAIqkB,EAAUt1B,OAAS,EAEA0S,EAAMyxB,gBAAgB7O,GAC1Bt1B,QAAU,GAGrBwQ,EAAgBquC,WAAWv9C,EAAMg0B,QAOhCh0B,EAAK0iC,iBAGV1iC,EAAKokC,eAAc,GACnBl1B,EAAgBq0B,mBAKhBr0B,EAAgBsuC,iBAAiBx9C,6CAK7BoD,EAAGwY,EAAShT,GAExB,IAAMsG,EAAkBpQ,KAAKuC,MAAM6N,gBAEnC,GAAItG,EAAMlK,OAAS,EACnB,CACI,IACM8jC,EADQtzB,EAAgBS,WACLkzB,gBAAgBj6B,GAIzC,GAAI45B,EAAW9jC,OAAS,GAA4B,IAAtB8jC,EAAW9jC,QAAgB8jC,EAAW,KAAO5mB,EAAQva,MAAMrB,KAErF,MAAM,IAAIC,MAAM,4DAO5B,IAAAmS,EAAAtT,KAGUyqB,EAFkBzqB,KAAKuC,MAAM6N,gBACLS,WACVlD,WAEpB,OACIgJ,EAAAlU,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAChBuV,UAAW6C,KAAM+mC,eACjBj7C,MAAO1D,KAAKuC,MAAMmB,OAClBiT,EAAAlU,EAAAC,cAAA,OAAKqS,UAAW6C,KAAMgnC,cAClBjoC,EAAAlU,EAAAC,cAAC08B,GAAA,EAAD,CAAcrqB,UAAW6C,KAAMinC,eAC9Bp0B,EAAMhlB,IAAI,SAAAnB,GAAC,OAAIqS,EAAAlU,EAAAC,cAACo8C,GAAD,CAAkBl5C,IAAKtB,EAAE4H,oBACrChL,KAAMoD,EACNk1B,QAASlmB,EAAKgrC,eACd7kB,OAAQnmB,EAAKirC,cACbrsB,SAAU5e,EAAKkrC,qBAEvB7nC,EAAAlU,EAAAC,cAACoV,GAAA,EAAD,CAAY/C,UAAW6C,KAAMmnC,WACzB/mC,MAAM,YACNC,QAASjY,KAAKo+C,cACdznC,EAAAlU,EAAAC,cAACqX,GAAA,EAAD,o0BCpHpB,IAuIeilC,eAlIX,SAAAA,EAAYz8C,GACZ,IAAA9C,MAAA,mGAAAw/C,CAAAj/C,KAAAg/C,KACIh/C,MAAAP,MAAAy/C,GAAAF,GAAA7+C,KAAAH,KAAMuC,qDAED48C,cAAgB,KAErB1/C,EAAKgyB,MAAQ,CACT3nB,MAAO,KACP2/B,OAAO,GAGXhqC,EAAK69C,cAAgB79C,EAAK69C,cAAclmC,KAAnBgoC,MAAA3/C,KACrBA,EAAK+5B,QAAU/5B,EAAK+5B,QAAQpiB,KAAbgoC,MAAA3/C,KACfA,EAAKg6B,OAASh6B,EAAKg6B,OAAOriB,KAAZgoC,MAAA3/C,KACdA,EAAKi6B,UAAYj6B,EAAKi6B,UAAUtiB,KAAfgoC,MAAA3/C,KACjBA,EAAK+9C,QAAU/9C,EAAK+9C,QAAQpmC,KAAbgoC,MAAA3/C,KAdnBA,yPAH8ByE,IAAMC,iDAoB5BG,GAEJ,IAAMC,EAASD,EAAEC,OACXk+B,EAASziC,KAAKuC,MAAMkgC,OAE1BziC,KAAKiyB,SAAS,CACVnoB,MAAO24B,EACPgH,OAAO,GACR,kBAAMllC,EAAOo1B,WAGZ35B,KAAKuC,MAAMi3B,SAASx5B,KAAKuC,MAAMi3B,QAAQl1B,EAAGtE,qCAG3CsE,GAEH,IAAMuvC,EAAa7zC,KAAKyxB,MAAM3nB,MAG1B9J,KAAKuC,MAAMk3B,QAAQz5B,KAAKuC,MAAMk3B,OAAOn1B,EAAGtE,KAAM6zC,GAGlD7zC,KAAKiyB,SAAS,CAAEnoB,MAAO,KAAM2/B,OAAO,sCAG9BnlC,GAEN,IAAMm5C,EAAUn5C,EAAEsB,IAlDF,UAmDZ63C,GAlDY,WAkDmBA,IAE/Bn5C,EAAEkf,iBACFlf,EAAEif,mDAIFjf,GAEJ,IAAMm5C,EAAUn5C,EAAEsB,IACZrB,EAASD,EAAEC,OA7DD,UA+DZk5C,EAEAl5C,EAAOmf,OAhEK,WAkEP+5B,GAELz9C,KAAKiyB,SAAS,CACVnoB,MAAO,KACP2/B,OAAO,GACR,kBAAMllC,EAAOmf,+CAIVpf,GAEV,IAAIwF,EAAQxF,EAAEC,OAAOuF,MAAMg4B,OACvB2H,GAAQ,EAEZ,GAAIzpC,KAAKuC,MAAM2vB,SAEX,IAEIlyB,KAAKuC,MAAM2vB,SAAS5tB,EAAGtE,KAAM8J,GAEjC,MAAMxF,GAEFmlC,GAAQ,EAIhBzpC,KAAKiyB,SAAS,CACVnoB,MAAOA,EACP2/B,MAAOA,oCAMXzpC,KAAKm/C,cAAcx7B,yCAKvB,IAAArQ,EAAAtT,KACUq/C,EAAcr/C,KAAKyxB,MAAM3nB,MACzBw1C,EAAgC,OAAhBD,EAAuBr/C,KAAKuC,MAAMkgC,OAAS4c,EAE3DE,EAAav/C,KAAKuC,MAAMi9C,OAAQ,EAEtC,OACI7oC,EAAAlU,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAChBuV,UAAW6C,KAAMkmC,mBACJ,OAAlBwB,GAA0BA,EAAc1/C,QAAU,EAAI,UAAY,KAClD,OAAhBy/C,GAAwBr/C,KAAKyxB,MAAMgY,MAAQ,UAAY,KACvD8V,EAAa,SAAW,IACzB,IAAMv/C,KAAKuC,MAAMwS,UACXrR,MAAO1D,KAAKuC,MAAMmB,OAClBiT,EAAAlU,EAAAC,cAAA,SAAOqkB,IAAK,SAAAA,GAAG,OAAEzT,EAAK6rC,cAAcp4B,GAChCyT,YAAY,EACZxB,UAAW,EACXt1B,MAAO,CAACgF,MAAO,OACfoB,MAAOw1C,EACPptB,SAAUlyB,KAAKs9C,cACf9jB,QAASx5B,KAAKw5B,QACdC,OAAQz5B,KAAKy5B,OACbC,UAAW15B,KAAK05B,UAChB8jB,QAASx9C,KAAKw9C,iyBCcnBiC,eAxIX,SAAAA,EAAYl9C,GACZ,IAAA9C,MAAA,mGAAAigD,CAAA1/C,KAAAy/C,KACIz/C,MAAAP,MAAAkgD,GAAAF,GAAAt/C,KAAAH,KAAMuC,qDAEDq9C,mBAAqB,KAE1BngD,EAAKgyB,MAAQ,CACTouB,cAAc,GAGlBpgD,EAAK2+C,aAAe3+C,EAAK2+C,aAAahnC,KAAlB0oC,MAAArgD,KACpBA,EAAK6+C,eAAiB7+C,EAAK6+C,eAAelnC,KAApB0oC,MAAArgD,KACtBA,EAAK8+C,cAAgB9+C,EAAK8+C,cAAcnnC,KAAnB0oC,MAAArgD,KACrBA,EAAK++C,gBAAkB/+C,EAAK++C,gBAAgBpnC,KAArB0oC,MAAArgD,KAZ3BA,yPAH2ByE,IAAMC,sDAkBpBG,GACb,IAAAgP,EAAAtT,KAEIA,KAAKiyB,SAAS,CAAC4tB,cAAc,GAAO,WAEhCvsC,EAAKssC,mBAAmBj8B,iDAIjBrf,EAAGwY,0CAKJxY,EAAGwY,EAAS+2B,GAEtB,IAAMpR,EAAS3lB,EAAQva,MAAMkgC,OACvBkT,EAAoB31C,KAAKuC,MAAMozC,kBAErC,GAAmB,OAAf9B,EACJ,CACI,IAAMjT,EAAU+U,EAAkBjC,oBAAoB/S,aAClDkT,EAAWj0C,OAAS,EAEfghC,EAAQmf,SAASlM,KAEdpR,EAGAkT,EAAkBqK,aAAavd,EAAQoR,GAKvC8B,EAAkBsK,aAAapM,IAQlCpR,GAGLkT,EAAkBuK,aAAazd,GAKnCziC,KAAKyxB,MAAMouB,cAEX7/C,KAAKiyB,SAAS,CAAE4tB,cAAc,4CAItBv7C,EAAGwY,EAAS2lB,GAExB,IAAMkT,EAAoB31C,KAAKuC,MAAMozC,kBAErC,GAAIlT,EAAO7iC,OAAS,IAIA+1C,EAAkBjC,oBAAoB/S,aAC1Cof,SAAStd,IAAWA,IAAW3lB,EAAQva,MAAMkgC,QAErD,MAAM,IAAIthC,MAAM,iEAKTy/B,EAASuf,GAExB,IAAM7+C,EAAS,GADnB8H,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IAEI,QAAA0J,EAAAC,EAAoB22C,EAApBz2C,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADUq5B,EACVl5B,EAAAO,MACS24B,GAELnhC,EAAOyL,KAAK4J,EAAAlU,EAAAC,cAAC09C,GAAD,CAAqBx6C,IAAK68B,EAClCA,OAAQA,EACR+c,KAAM5e,EAAQyf,aAAa5d,GAC3BjJ,QAASx5B,KAAKs+C,eACd7kB,OAAQz5B,KAAKu+C,cACbrsB,SAAUlyB,KAAKw+C,oBAX3B,MAAAz0C,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAaI,OAAOhI,mCAKX,IAAA8S,EAAApU,KAEU4gC,EADoB5gC,KAAKuC,MAAMozC,kBACHjC,oBAAoB/S,aAChDwf,EAAWvf,EAAQ4S,cAEzB,OACI78B,EAAAlU,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAChBuV,UAAW6C,KAAM+mC,eACjBj7C,MAAO1D,KAAKuC,MAAMmB,OAClBiT,EAAAlU,EAAAC,cAAA,OAAKqS,UAAW6C,KAAMgnC,cACjB5+C,KAAKsgD,mBAAmB1f,EAASuf,GAClCxpC,EAAAlU,EAAAC,cAAC09C,GAAD,CACIr5B,IAAK,SAAAA,GAAG,OAAE3S,EAAKwrC,mBAAmB74B,GAClCrjB,MAAO,CAACwZ,QAASld,KAAKyxB,MAAMouB,aAAe,QAAU,QACrDpd,OAAQ,GACRjJ,QAASx5B,KAAKs+C,eACd7kB,OAAQz5B,KAAKu+C,cACbrsB,SAAUlyB,KAAKw+C,mBAEvB7nC,EAAAlU,EAAAC,cAACoV,GAAA,EAAD,CAAY/C,UAAW6C,KAAMmnC,WACzB/mC,MAAM,aACNC,QAASjY,KAAKo+C,cACdznC,EAAAlU,EAAAC,cAACqX,GAAA,EAAD,o0BCxIpB,IAuIewmC,eAlIX,SAAAA,EAAYh+C,GACZ,IAAA9C,MAAA,mGAAA+gD,CAAAxgD,KAAAugD,KACIvgD,MAAAP,MAAAghD,GAAAF,GAAApgD,KAAAH,KAAMuC,qDAED48C,cAAgB,KAErB1/C,EAAKgyB,MAAQ,CACT3nB,MAAO,KACP2/B,OAAO,GAGXhqC,EAAK69C,cAAgB79C,EAAK69C,cAAclmC,KAAnBspC,MAAAjhD,KACrBA,EAAK+5B,QAAU/5B,EAAK+5B,QAAQpiB,KAAbspC,MAAAjhD,KACfA,EAAKg6B,OAASh6B,EAAKg6B,OAAOriB,KAAZspC,MAAAjhD,KACdA,EAAKi6B,UAAYj6B,EAAKi6B,UAAUtiB,KAAfspC,MAAAjhD,KACjBA,EAAK+9C,QAAU/9C,EAAK+9C,QAAQpmC,KAAbspC,MAAAjhD,KAdnBA,yPAHmCyE,IAAMC,iDAoBjCG,GAEJ,IAAMC,EAASD,EAAEC,OACXk+B,EAASziC,KAAKuC,MAAMkgC,OAE1BziC,KAAKiyB,SAAS,CACVnoB,MAAO24B,EACPgH,OAAO,GACR,kBAAMllC,EAAOo1B,WAGZ35B,KAAKuC,MAAMi3B,SAASx5B,KAAKuC,MAAMi3B,QAAQl1B,EAAGtE,qCAG3CsE,GAEH,IAAMuvC,EAAa7zC,KAAKyxB,MAAM3nB,MAG1B9J,KAAKuC,MAAMk3B,QAAQz5B,KAAKuC,MAAMk3B,OAAOn1B,EAAGtE,KAAM6zC,GAGlD7zC,KAAKiyB,SAAS,CAAEnoB,MAAO,KAAM2/B,OAAO,sCAG9BnlC,GAEN,IAAMm5C,EAAUn5C,EAAEsB,IAlDF,UAmDZ63C,GAlDY,WAkDmBA,IAE/Bn5C,EAAEkf,iBACFlf,EAAEif,mDAIFjf,GAEJ,IAAMm5C,EAAUn5C,EAAEsB,IACZrB,EAASD,EAAEC,OA7DD,UA+DZk5C,EAEAl5C,EAAOmf,OAhEK,WAkEP+5B,GAELz9C,KAAKiyB,SAAS,CACVnoB,MAAO,KACP2/B,OAAO,GACR,kBAAMllC,EAAOmf,+CAIVpf,GAEV,IAAIwF,EAAQxF,EAAEC,OAAOuF,MAAMg4B,OACvB2H,GAAQ,EAEZ,GAAIzpC,KAAKuC,MAAM2vB,SAEX,IAEIlyB,KAAKuC,MAAM2vB,SAAS5tB,EAAGtE,KAAM8J,GAEjC,MAAMxF,GAEFmlC,GAAQ,EAIhBzpC,KAAKiyB,SAAS,CACVnoB,MAAOA,EACP2/B,MAAOA,oCAMXzpC,KAAKm/C,cAAcx7B,yCAKvB,IAAArQ,EAAAtT,KACUq/C,EAAcr/C,KAAKyxB,MAAM3nB,MACzBw1C,EAAgC,OAAhBD,EAAuBr/C,KAAKuC,MAAMkgC,OAAS4c,EAE3DE,EAAav/C,KAAKuC,MAAMi9C,OAAQ,EAEtC,OACI7oC,EAAAlU,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAChBuV,UAAW6C,KAAMkmC,mBACJ,OAAlBwB,GAA0BA,EAAc1/C,QAAU,EAAI,UAAY,KAClD,OAAhBy/C,GAAwBr/C,KAAKyxB,MAAMgY,MAAQ,UAAY,KACvD8V,EAAa,SAAW,IACzB,IAAMv/C,KAAKuC,MAAMwS,UACXrR,MAAO1D,KAAKuC,MAAMmB,OAClBiT,EAAAlU,EAAAC,cAAA,SAAOqkB,IAAK,SAAAA,GAAG,OAAEzT,EAAK6rC,cAAcp4B,GAChCyT,YAAY,EACZxB,UAAW,EACXt1B,MAAO,CAACgF,MAAO,OACfoB,MAAOw1C,EACPptB,SAAUlyB,KAAKs9C,cACf9jB,QAASx5B,KAAKw5B,QACdC,OAAQz5B,KAAKy5B,OACbC,UAAW15B,KAAK05B,UAChB8jB,QAASx9C,KAAKw9C,iyBCcnBmD,eAxIX,SAAAA,EAAYp+C,GACZ,IAAA9C,MAAA,mGAAAmhD,CAAA5gD,KAAA2gD,KACI3gD,MAAAP,MAAAohD,GAAAF,GAAAxgD,KAAAH,KAAMuC,qDAEDq9C,mBAAqB,KAE1BngD,EAAKgyB,MAAQ,CACTouB,cAAc,GAGlBpgD,EAAK2+C,aAAe3+C,EAAK2+C,aAAahnC,KAAlB0pC,MAAArhD,KACpBA,EAAK6+C,eAAiB7+C,EAAK6+C,eAAelnC,KAApB0pC,MAAArhD,KACtBA,EAAK8+C,cAAgB9+C,EAAK8+C,cAAcnnC,KAAnB0pC,MAAArhD,KACrBA,EAAK++C,gBAAkB/+C,EAAK++C,gBAAgBpnC,KAArB0pC,MAAArhD,KAZ3BA,yPAHgCyE,IAAMC,sDAkBzBG,GACb,IAAAgP,EAAAtT,KAEIA,KAAKiyB,SAAS,CAAC4tB,cAAc,GAAO,WAEhCvsC,EAAKssC,mBAAmBj8B,iDAIjBrf,EAAGwY,0CAKJxY,EAAGwY,EAAS+2B,GAEtB,IAAMpR,EAAS3lB,EAAQva,MAAMkgC,OACvBkT,EAAoB31C,KAAKuC,MAAMozC,kBAErC,GAAmB,OAAf9B,EACJ,CACI,IAAMjT,EAAU+U,EAAkBjC,oBAAoB/S,aAClDkT,EAAWj0C,OAAS,EAEfghC,EAAQmgB,cAAclN,KAEnBpR,EAGAkT,EAAkBqL,kBAAkBve,EAAQoR,GAK5C8B,EAAkBsL,kBAAkBpN,IAQvCpR,GAGLkT,EAAkBuL,kBAAkBze,GAKxCziC,KAAKyxB,MAAMouB,cAEX7/C,KAAKiyB,SAAS,CAAE4tB,cAAc,4CAItBv7C,EAAGwY,EAAS2lB,GAExB,IAAMkT,EAAoB31C,KAAKuC,MAAMozC,kBAErC,GAAIlT,EAAO7iC,OAAS,IAIA+1C,EAAkBjC,oBAAoB/S,aAC1CogB,cAActe,IAAWA,IAAW3lB,EAAQva,MAAMkgC,QAE1D,MAAM,IAAIthC,MAAM,sEAKJy/B,EAASuf,GAE7B,IAAM7+C,EAAS,GADnB8H,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IAEI,QAAA0J,EAAAC,EAAoB22C,EAApBz2C,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADUq5B,EACVl5B,EAAAO,MACS24B,GAELnhC,EAAOyL,KAAK4J,EAAAlU,EAAAC,cAACy+C,GAAD,CAA0Bv7C,IAAK68B,EACvCA,OAAQA,EACR+c,KAAM5e,EAAQwgB,kBAAkB3e,GAChCjJ,QAASx5B,KAAKs+C,eACd7kB,OAAQz5B,KAAKu+C,cACbrsB,SAAUlyB,KAAKw+C,oBAX3B,MAAAz0C,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAaI,OAAOhI,mCAKX,IAAA8S,EAAApU,KAEU4gC,EADoB5gC,KAAKuC,MAAMozC,kBACHjC,oBAAoB/S,aAChDwf,EAAWvf,EAAQqT,mBAEzB,OACIt9B,EAAAlU,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAChBuV,UAAW6C,KAAM+mC,eACjBj7C,MAAO1D,KAAKuC,MAAMmB,OAClBiT,EAAAlU,EAAAC,cAAA,OAAKqS,UAAW6C,KAAMgnC,cACjB5+C,KAAKqhD,wBAAwBzgB,EAASuf,GACvCxpC,EAAAlU,EAAAC,cAACy+C,GAAD,CACIp6B,IAAK,SAAAA,GAAG,OAAE3S,EAAKwrC,mBAAmB74B,GAClCrjB,MAAO,CAACwZ,QAASld,KAAKyxB,MAAMouB,aAAe,QAAU,QACrDpd,OAAQ,GACRjJ,QAASx5B,KAAKs+C,eACd7kB,OAAQz5B,KAAKu+C,cACbrsB,SAAUlyB,KAAKw+C,mBAEvB7nC,EAAAlU,EAAAC,cAACoV,GAAA,EAAD,CAAY/C,UAAW6C,KAAMmnC,WACzB/mC,MAAM,YACNC,QAASjY,KAAKo+C,cACdznC,EAAAlU,EAAAC,cAACqX,GAAA,EAAD,4zBC1ELunC,eA1DX,SAAAA,EAAY/+C,GACZ,IAAA9C,MAAA,mGAAA8hD,CAAAvhD,KAAAshD,KACIthD,MAAAP,MAAA+hD,GAAAF,GAAAnhD,KAAAH,KAAMuC,qDAEDk/C,wBAA0BhiD,EAAKgiD,wBAAwBrqC,KAA7BsqC,MAAAjiD,KAC/BA,EAAKkiD,wBAA0BliD,EAAKkiD,wBAAwBvqC,KAA7BsqC,MAAAjiD,KAJnCA,yPAH6ByE,IAAMC,iEAUXyF,EAAM0S,GAE1B,IAAMlM,EAAkBpQ,KAAKuC,MAAM6N,gBAC7B00B,EAAe10B,EAAgBg1B,kBAEtBN,EAAahB,6BACdl6B,IAEVk7B,EAAa6X,0BAA0B/yC,GACvCwG,EAAgBq0B,mEAIA36B,GAEpB,OAAOA,GAASA,EAAMlK,OAAS,EAAIkK,EAC/B9J,KAAKuC,MAAM6N,gBAAgBg1B,kBAAkBtB,6DAMjD,IAAM1zB,EAAkBpQ,KAAKuC,MAAM6N,gBAEnC,OACIuG,EAAAlU,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAChBuV,UAAW6C,KAAMgqC,iBACvB,IAAM5hD,KAAKuC,MAAMwS,UACXrR,MAAO1D,KAAKuC,MAAMmB,OAClBiT,EAAAlU,EAAAC,cAAA,SAAOqS,UAAW6C,KAAMiqC,cAAxB,gBAGAlrC,EAAAlU,EAAAC,cAACo/C,GAAA,EAAD,CACI/sC,UAAW6C,KAAMmqC,cACjB5mB,aAAc/qB,EAAgBg1B,kBAAkBtB,4BAChDke,cAAc,OACd9oB,UAAWl5B,KAAK2hD,wBAChB9nB,SAAU75B,KAAKyhD,0BACnB9qC,EAAAlU,EAAAC,cAAA,UAAQqS,UAAW6C,KAAMqqC,iBACrB/vB,SAAUlyB,KAAKkiD,oBACfnpC,UAAU,GACVpC,EAAAlU,EAAAC,cAAA,qBACAiU,EAAAlU,EAAAC,cAAA,qBACAiU,EAAAlU,EAAAC,cAAA,6yBC7Cdy/C,eAEF,SAAAA,EAAY5/C,GACZ,IAAA9C,MAAA,mGAAA2iD,CAAApiD,KAAAmiD,KACIniD,MAAAP,MAAA4iD,GAAAF,GAAAhiD,KAAAH,KAAMuC,qDAED+/C,kBAAoB7iD,EAAK6iD,kBAAkBlrC,KAAvBmrC,MAAA9iD,KACzBA,EAAK+iD,mBAAqB/iD,EAAK+iD,mBAAmBprC,KAAxBmrC,MAAA9iD,KAC1BA,EAAKgjD,kBAAoBhjD,EAAKgjD,kBAAkBrrC,KAAvBmrC,MAAA9iD,KACzBA,EAAKijD,mBAAqBjjD,EAAKijD,mBAAmBtrC,KAAxBmrC,MAAA9iD,KAN9BA,yPAHwByE,IAAMC,2DAYZG,GAEEtE,KAAKuC,MAAMmY,QACGQ,mBACQc,qBACtB2mC,6DAGDr+C,8CAKDA,GAEEtE,KAAKuC,MAAMmY,QACGQ,mBACQc,qBACtB4mC,mBAAmBt+C,EAAEC,OAAO+6B,oDAG7Bh7B,qCAQf,IAAMu+C,EAAS7iD,KAAKuC,MAAMsgD,OAEpB5nC,EADUjb,KAAKuC,MAAMmY,QACGQ,mBACxB9K,EAAkB6K,EAAce,qBAChC25B,EAAoB16B,EAAcohC,uBAClCyG,EAAa1yC,EAAgBqzB,wBAE7Bsf,EAAaF,EAAOG,qBAE1B,OACIrsC,EAAAlU,EAAAC,cAACugD,GAAA,EAAD,CAAgBzjD,GAAIQ,KAAKuC,MAAM/C,GAC3BuV,UAAW/U,KAAKuC,MAAMwS,UACtBrR,MAAO1D,KAAKuC,MAAMmB,MAClBsU,MAAOmqC,EAAce,OAErBvsC,EAAAlU,EAAAC,cAACygD,GAAA,EAAD,CAAcnrC,MAAO,SAAUunB,SAAS,EAAM6jB,KAAML,GAChDpsC,EAAAlU,EAAAC,cAAC2gD,GAAD,CAAejzC,gBAAiBA,KAEpCuG,EAAAlU,EAAAC,cAACygD,GAAA,EAAD,CAAcnrC,MAAO,WAAYunB,SAAS,EAAM6jB,KAAML,GAClDpsC,EAAAlU,EAAAC,cAAC4gD,GAAD,CAAkB3N,kBAAmBA,KAEzCh/B,EAAAlU,EAAAC,cAACygD,GAAA,EAAD,CAAcnrC,MAAO,iBAAkBunB,SAAS,EAAM6jB,KAAML,GACxDpsC,EAAAlU,EAAAC,cAAC6gD,GAAD,CAAuB5N,kBAAmBA,KAG9Ch/B,EAAAlU,EAAAC,cAACw8B,GAAA,EAAD,MAEAvoB,EAAAlU,EAAAC,cAAC8gD,GAAD,CAAoBpzC,gBAAiBA,IAErCuG,EAAAlU,EAAAC,cAAA,UAAQqS,UAAW6C,KAAM6rC,kBAAmBxrC,QAASjY,KAAKsiD,kBAAmBvpC,SAAU3I,EAAgBS,WAAW+jB,WAC7G9Y,KAAKC,SAAS,+BAGnBpF,EAAAlU,EAAAC,cAACw8B,GAAA,EAAD,MAEAvoB,EAAAlU,EAAAC,cAACghD,GAAA,EAAD,CAAalkD,GAAI,sBACb8/B,QAASwjB,EACT9qC,MAAO,oBACPka,SAAUlyB,KAAKyiD,oBACnB9rC,EAAAlU,EAAAC,cAACghD,GAAA,EAAD,CAAalkD,GAAI,uBACb8/B,SAAS,EACTtnB,MAAO,oBACPe,UAAU,EACVmZ,SAAUlyB,KAAKwiD,qBACnB7rC,EAAAlU,EAAAC,cAACghD,GAAA,EAAD,CAAalkD,GAAI,qBACb8/B,SAAS,EACTtnB,MAAO,eACPe,UAAU,EACVmZ,SAAUlyB,KAAK0iD,6DAMnChlB,OAAOimB,eAAexB,GAAe,QAAS,CAC1C90C,IAAK,WAAa,OAAOyO,KAAKC,SAAS,+BAG5BomC,w6BCtGR,IAAMyB,GAAe,UAyIbC,eAlIX,SAAAA,EAAYthD,GACZ,IAAA9C,MAAA,mGAAAqkD,CAAA9jD,KAAA6jD,KACI7jD,MAAAP,MAAAskD,GAAAF,GAAA1jD,KAAAH,KAAMuC,qDAEDu2B,aAAe,KAEpBr5B,EAAKgyB,MAAQ,CACT3nB,MAAOrK,EAAK8C,MAAM44B,cAAgB,GAClC6oB,OAAQJ,IAGZnkD,EAAKyyB,SAAWzyB,EAAKyyB,SAAS9a,KAAd6sC,MAAAxkD,KAVpBA,yPAHmByE,IAAMC,iDAkBjBnE,KAAK84B,cAEL94B,KAAK84B,aAAanV,yCAIjB7Z,GACT,IADgB6R,EAChBhc,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADyB,KAEjBK,KAAKyxB,MAAM3nB,QAAUA,EAErB9J,KAAKiyB,SAAS,CAACnoB,MAAOA,GAAQ6R,GAEzBA,GAELA,sCAIEqoC,GACV,IADkBroC,EAClBhc,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD2B,KAEnBK,KAAKyxB,MAAMuyB,SAAWA,EAEtBhkD,KAAKiyB,SAAS,CAAC+xB,OAAQA,GAASroC,GAE3BA,GAELA,0CAKR,IADYA,EACZhc,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADqB,KAEbK,KAAKyxB,MAAMuyB,SAAWJ,GAEtB5jD,KAAKiyB,SAAS,CAAC+xB,OAAQJ,IAAejoC,GAEjCA,GAELA,uCAMJ,OAAO3b,KAAKyxB,MAAM3nB,0CAKlB,OAAO9J,KAAKyxB,MAAMuyB,wCAGb1/C,GAEL,IAAM4/C,EAAY5/C,EAAEC,OAAOuF,MACvB9J,KAAKyxB,MAAM3nB,QAAUo6C,GAErBlkD,KAAKiyB,SAAS,CAACnoB,MAAOo6C,EAAWF,OAAQJ,sCAMjD,IAAAtwC,EAAAtT,KACUmkD,EAAWnkD,KAAKuC,MAAM4hD,SAGtBC,EAASpkD,KAAKuC,MAAM6hD,OAGpB1yB,EAAS1xB,KAAKuC,MAAMmvB,OAEpBqH,EAAc/4B,KAAKuC,MAAMw2B,YACzBirB,EAAShkD,KAAKyxB,MAAMuyB,OAE1B,OACIrtC,EAAAlU,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAChBuV,UAAW6C,KAAMysC,qBACtB3yB,EAAS,WAAa,IACvB,IAAMsyB,EACN,IAAMhkD,KAAKuC,MAAMwS,UACXrR,MAAO1D,KAAKuC,MAAMmB,OAExBiT,EAAAlU,EAAAC,cAACoV,GAAA,EAAD,CAAY/C,UAAW6C,KAAM0sC,YACzBtsC,MAAO,OACPe,UAAWqrC,EACXnsC,QAAS,SAAC3T,GAAD,OAAO8/C,EAAO9/C,EAAGgP,KA5GZ,YA6Gb0wC,EACGrtC,EAAAlU,EAAAC,cAACgb,GAAA,EAAD,MA7GU,YA8GVsmC,EACIrtC,EAAAlU,EAAAC,cAACib,GAAA,EAAD,MA9GM,YA+GNqmC,EACIrtC,EAAAlU,EAAAC,cAACkb,GAAA,EAAD,MACAjH,EAAAlU,EAAAC,cAACmS,GAAA,EAAD,OAEV8B,EAAAlU,EAAAC,cAAA,OAAKqS,UAAW6C,KAAM2sC,YAClB5tC,EAAAlU,EAAAC,cAAA,SAAOqkB,IAAK,SAAAA,GAAG,OAAEzT,EAAKwlB,aAAa/R,GAAKviB,KAAK,OACzCu0B,YAAaA,EACbjvB,MAAO9J,KAAKyxB,MAAM3nB,MAClBooB,SAAUlyB,KAAKkyB,WACnBvb,EAAAlU,EAAAC,cAAA,aAAQ1C,KAAKuC,MAAMiiD,WAG7B7tC,EAAAlU,EAAAC,cAACoV,GAAA,EAAD,CAAY/C,UAAW6C,KAAM6sC,cACzBzsC,MAAO,SACPe,UAAWorC,EACXlsC,QAAS,SAAC3T,GAAD,OAAO6/C,EAAS7/C,EAAGgP,KAC5BqD,EAAAlU,EAAAC,cAAC+a,GAAA,EAAD,0xBC1Hd,IAAMinC,GAAoB,CAAC,QACrBC,GAAgB,WA6QPC,eAxQX,SAAAA,EAAYriD,GACZ,IAAA9C,MAAA,mGAAAolD,CAAA7kD,KAAA4kD,KACI5kD,MAAAP,MAAAqlD,GAAAF,GAAAzkD,KAAAH,KAAMuC,qDAEDwiD,UAAY,GACjBtlD,EAAKulD,UAAYL,GAEjBllD,EAAKwlD,UAAYxlD,EAAKwlD,UAAU7tC,KAAf8tC,MAAAzlD,KACjBA,EAAK0lD,aAAe1lD,EAAK0lD,aAAa/tC,KAAlB8tC,MAAAzlD,KACpBA,EAAK2lD,eAAiB3lD,EAAK2lD,eAAehuC,KAApB8tC,MAAAzlD,KACtBA,EAAK4lD,YAAc5lD,EAAK4lD,YAAYjuC,KAAjB8tC,MAAAzlD,KACnBA,EAAK6lD,UAAY7lD,EAAK6lD,UAAUluC,KAAf8tC,MAAAzlD,KACjBA,EAAK8lD,aAAe9lD,EAAK8lD,aAAanuC,KAAlB8tC,MAAAzlD,KACpBA,EAAK+lD,WAAa/lD,EAAK+lD,WAAWpuC,KAAhB8tC,MAAAzlD,KAClBA,EAAKgmD,aAAehmD,EAAKgmD,aAAaruC,KAAlB8tC,MAAAzlD,KACpBA,EAAK6gC,cAAgB7gC,EAAK6gC,cAAclpB,KAAnB8tC,MAAAzlD,KAdzBA,yPAHuByE,IAAMC,6DAuBzBnE,KAAKuC,MAAM6N,gBAAgBmwB,wBAAwBC,YAAYxgC,KAAKsgC,8DAMpEtgC,KAAKuC,MAAM6N,gBAAgBmwB,wBAAwBE,eAAezgC,KAAKsgC,qDAG7DhuB,GACd,IAAAlJ,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IACI,QAAA0J,EAAAC,EAAkBxJ,KAAK+kD,UAAvBr7C,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,CAAAG,EAAAO,MACSid,IAAI2+B,eAHjB,MAAA37C,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,sCAOUhF,GAEDtE,KAAK40B,WAEN50B,KAAKqlD,YAAY/gD,GAGrBtE,KAAKslD,UAAUhhD,wCAGNqhD,GACb,IAAAryC,EAAAtT,KACU4lD,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAACC,GAEb,IAEIzyC,EAAK0xC,UAAYW,EAAS72B,KAC1Bxb,EAAKyxC,UAAUnlD,OAAS,EAExB,IAAMomD,EAAQD,EAAMxhD,OAAOjD,OAAOoG,MAAM,MAJ5C6C,GAAA,EAAAC,GAAA,EAAAC,OAAA5K,EAAA,IAKI,QAAA6K,EAAAC,EAAgBq7C,EAAhBt8C,OAAAC,cAAAY,GAAAG,EAAAC,EAAAf,QAAAC,MAAAU,GAAA,EACA,KADQ07C,EACRv7C,EAAAZ,OACIm8C,EAAOA,EAAKnkB,QACHliC,OAAS,GAEd0T,EAAKyxC,UAAUh4C,KAAK,CAChBvN,GAAIyM,eACJkvB,aAAc8qB,EACdl/B,IAAK,QAbrB,MAAAhd,GAAAS,GAAA,EAAAC,EAAAV,EAAA,YAAAQ,GAAA,MAAAI,EAAAX,QAAAW,EAAAX,SAAA,WAAAQ,EAAA,MAAAC,GAmBQ6I,EAAKyxC,UAAUnlD,QAAU,GAEzB0T,EAAKgyC,UAAU,MAGvB,MAAMhhD,GAEFshD,EAAOM,UAGfN,EAAOO,WAAWR,0CAGPrhD,GAEX,IAAM8hD,EAAc,GADxB/6C,GAAA,EAAAC,GAAA,EAAAC,OAAA1L,EAAA,IAEI,QAAA2L,EAAAC,EAAkBzL,KAAK+kD,UAAvBr7C,OAAAC,cAAA0B,GAAAG,EAAAC,EAAA7B,QAAAC,MAAAwB,GAAA,EACA,KACU0b,EADVvb,EAAA1B,MACqBid,IACbA,GAEAq/B,EAAYr5C,KAAKga,EAAIsI,aAPjC,MAAAtlB,GAAAuB,GAAA,EAAAC,EAAAxB,EAAA,YAAAsB,GAAA,MAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,MAAAC,GAWIiR,aAAaxc,KAAKglD,UAAWoB,EAAYljB,KAAK,2CAGtC5+B,GAER,IAAMoxC,EAAS11C,KAAKuC,MAAMmzC,OACtBA,EAAO2Q,aAEP3Q,EAAOY,WAGXt2C,KAAK+kD,UAAUnlD,OAAS,oCAGlB0E,GAENtE,KAAK+kD,UAAUh4C,KAAK,CAChBvN,GAAIyM,eACJkvB,aAAc,GACdpU,IAAK,4CAIAziB,GACb,IAAA8P,EAAApU,KAEQ2F,EAAI,GAES,SAAX2gD,IAEF,IAAML,EAAO7xC,EAAK2wC,UAAUp/C,GAC5ByO,EAAKoxC,WAAW,KAAMS,EAAKl/B,KAAK,EAAM,aAEhCphB,EACMyO,EAAK2wC,UAAUnlD,QAEnB0mD,MAIZA,wCAGShiD,EAAGiiD,uCAKLjiD,EAAGiiD,GACd,IADoBC,EACpB7mD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAD0Cgc,EAC1Chc,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADmD,KAEzC8mD,EAAYD,GAAkBxmD,KAAKuC,MAAMkkD,UACzC/Q,EAAS11C,KAAKuC,MAAMmzC,OACpBgR,EAAYH,EAAKl3B,WAEvBk3B,EAAKt0B,SAAS,CAAC+xB,ODnKK,YCqKpB,IAAM5zC,EAAkBpQ,KAAKuC,MAAM6N,gBAC7BulC,EAAoB31C,KAAKuC,MAAMozC,kBAUrC,GATAD,EAAOiR,UAAUD,EAAWt2C,EAAiBulC,GAAmB2B,KAAK,SAACh2C,GAElEilD,EAAKt0B,SAAS,CAAC+xB,OAAQ1iD,ED3KP,UACA,aC2KjB,SAACyI,GAGAw8C,EAAKt0B,SAAS,CAAC+xB,OAAQJ,OAGvB6C,EACJ,CACI,IAAMG,EAAUlR,EAAOW,QAAQjmC,EAAiBulC,GAAmB,GAC/Dh6B,GAEAirC,EAAQtP,KAAK37B,sCAOrB,OAAO3b,KAAK+kD,UAAUnlD,QAAU,mCAKpC,IAAAuyB,EAAAnyB,KAEU01C,EAAS11C,KAAKuC,MAAMmzC,OAEpBtlC,EAAkBpQ,KAAKuC,MAAM6N,gBAG7By2C,EAAQ7mD,KAAK40B,UACb7b,EAAW28B,GAAUA,EAAO2Q,YAElC,OACI1vC,EAAAlU,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAChBuV,UAAW6C,KAAMkvC,eACvB,IAAM9mD,KAAKuC,MAAMwS,UACXrR,MAAO1D,KAAKuC,MAAMmB,OAClBiT,EAAAlU,EAAAC,cAAA,OAAKqS,UAAW6C,KAAMmvC,mBAClBpwC,EAAAlU,EAAAC,cAACoV,GAAA,EAAD,CAAY/C,UAAW6C,KAAMovC,oBACzBhvC,MAAO8D,KAAKC,SAAS,sBACrB9D,QAASjY,KAAKilD,WACdtuC,EAAAlU,EAAAC,cAAC6a,GAAA,EAAD,OAEJ5G,EAAAlU,EAAAC,cAACukD,GAAA,EAAD,CAAkBlyC,UAAW6C,KAAMovC,oBAC/BhvC,MAAO8D,KAAKC,SAAS,yBACrBw/B,OAAQmJ,GAAkBxhB,KAAK,KAC/BgkB,SAAUlnD,KAAKmlD,cACfxuC,EAAAlU,EAAAC,cAACykD,GAAA,EAAD,OAEJxwC,EAAAlU,EAAAC,cAACoV,GAAA,EAAD,CAAY/C,UAAW6C,KAAMovC,oBACzBhvC,MAAO8D,KAAKC,SAAS,uBACrBhD,SAAU8tC,EACV5uC,QAASjY,KAAKolD,gBACdzuC,EAAAlU,EAAAC,cAAC0kD,GAAA,EAAD,OAEJzwC,EAAAlU,EAAAC,cAACoV,GAAA,EAAD,CAAY/C,UAAW6C,KAAMovC,oBACzBhvC,MAAO8D,KAAKC,SAAS,wBACrBhD,SAAU8tC,EACV5uC,QAASjY,KAAKqlD,aACd1uC,EAAAlU,EAAAC,cAAC2kD,GAAA,EAAD,QAGR1wC,EAAAlU,EAAAC,cAAA,OAAKqS,UAAW6C,KAAM0vC,qBAC3BT,EAAQ,UAAY,KACpB9tC,EAAW,aAAc,KAChBpC,EAAAlU,EAAAC,cAACoV,GAAA,EAAD,CAAY/C,UAAW6C,KAAM2vC,cACzBvvC,MAAO,MAAOC,QAASjY,KAAKslD,WAC5B3uC,EAAAlU,EAAAC,cAAC8a,GAAA,EAAD,MACA7G,EAAAlU,EAAAC,cAAA,QAAMqS,UAAW6C,KAAM4vC,iBACjBX,EAAqC,GAA7B,GAAK7mD,KAAK+kD,UAAUnlD,SAGtC+W,EAAAlU,EAAAC,cAAA,OAAKqS,UAAW6C,KAAM6vC,4BAClB9wC,EAAAlU,EAAAC,cAAA,OAAKqS,UAAW6C,KAAM8vC,WACjB1nD,KAAK+kD,UAAUt/C,IAAI,SAACnB,EAAGqB,GAEpB,IAAMnG,EAAK8E,EAAE9E,GACP27B,EAAe72B,EAAC,cAAoB,GACtCqjD,EAAex1B,EAAKqzB,WAKxB,OAJK9P,IAAUtlC,EAAgBS,WAAW+jB,YAEtC+yB,EAAe,MAEZhxC,EAAAlU,EAAAC,cAACklD,GAAD,CAAUhiD,IAAKpG,EAAIunB,IAAK,SAAAA,GAAG,OAAEziB,EAAEyiB,IAAIA,GACtCoU,aAAcA,EACdipB,OAAQuD,EACRxD,SAAU,SAAC7/C,EAAGiiD,GAEVp0B,EAAK4yB,UAAUxoC,OAAO5W,EAAG,GACzBwsB,EAAKozB,aAAajhD,EAAGiiD,UAKzC5vC,EAAAlU,EAAAC,cAACoV,GAAA,EAAD,CAAY/C,UAAW6C,KAAMiwC,iBACzB7vC,MAAO,UAAWC,QAASjY,KAAKylD,cAChC9uC,EAAAlU,EAAAC,cAACmS,GAAA,EAAD,+xBC9QlBizC,eAEF,SAAAA,EAAYvlD,GACZ,IAAA9C,MAAA,mGAAAsoD,CAAA/nD,KAAA8nD,KACI9nD,MAAAP,MAAAuoD,GAAAF,GAAA3nD,KAAAH,KAAMuC,qDAEDkvB,MAAQ,CACTw2B,UAAU,GAGdxoD,EAAKyoD,iBAAmBzoD,EAAKyoD,iBAAiB9wC,KAAtB+wC,MAAA1oD,KACxBA,EAAK2oD,uBAAyB3oD,EAAK2oD,uBAAuBhxC,KAA5B+wC,MAAA1oD,KARlCA,yPAHuByE,IAAMC,6DAkBzB,IAAMuW,EAAU1a,KAAKuC,MAAMmY,QACrBH,EAAMG,EAAQC,SAEd+6B,EADgBh7B,EAAQQ,mBACD86B,QAC7BN,EAAOxX,GAAG,YAAa,SAACwX,GAEpBn7B,EAAI8tC,UAAUC,eAAe,GAC7B/tC,EAAIguC,QAAQC,mBAAmBV,GAC/BvtC,EAAIguC,QAAQE,gBAEhB/S,EAAOxX,GAAG,WAAY,SAACwX,GAEnBn7B,EAAI8tC,UAAUC,eAAe,GAC7B/tC,EAAIguC,QAAQC,mBAAmB,MAC/BjuC,EAAIguC,QAAQG,wDAIHpkD,GAEbtE,KAAKiyB,SAAS,SAAC3V,EAAM/Z,GAEjB,MAAO,CAAC0lD,UAAW3rC,EAAK2rC,2DAIT3jD,GAEnB,IACMqkD,EADgB3oD,KAAKuC,MAAMmY,QAAQQ,mBACN0tC,kBAC7BC,EAAaF,EAAaG,kBAChCH,EAAaI,kBAAkBF,GAC3BA,GAGA7oD,KAAKuC,MAAMmY,QAAQC,SAAS+pB,yBAAyB4V,mBftDnB,kDe6DtC,IACMr/B,EADUjb,KAAKuC,MAAMmY,QACGQ,mBACxB9K,EAAkB6K,EAAce,qBAChC25B,EAAoB16B,EAAcohC,uBAClC3G,EAASz6B,EAAc+tC,kBACvBL,EAAe1tC,EAAc2tC,kBAE7BX,EAAWjoD,KAAKyxB,MAAMw2B,SACtBY,EAAaF,EAAaG,kBAEhC,OACInyC,EAAAlU,EAAAC,cAACugD,GAAA,EAAD,CAAgBzjD,GAAIQ,KAAKuC,MAAM/C,GAC3BuV,UAAW6C,KAAMqxC,gBACvB,IAAMjpD,KAAKuC,MAAMwS,UACXrR,MAAO1D,KAAKuC,MAAMmB,MAClBsU,MAAO8vC,EAAa5E,OAEpBvsC,EAAAlU,EAAAC,cAACwmD,GAAD,CAAcxT,OAAQA,EAAQtlC,gBAAiBA,EAAiBulC,kBAAmBA,EAAmB8Q,WAAYwB,IAElHtxC,EAAAlU,EAAAC,cAACghD,GAAA,EAAD,CAAalkD,GAAI,sBAAuB8/B,QAASupB,EAAY32B,SAAUlyB,KAAKooD,uBAAwBpwC,MAAO,gEAM3H0lB,OAAOimB,eAAemE,GAAc,QAAS,CACzCz6C,IAAK,WAAa,OAAOyO,KAAKC,SAAS,8BAG5B+rC,wxBC1FTqB,eAEF,SAAAA,EAAY5mD,GACZ,IAAA9C,MAAA,mGAAA2pD,CAAAppD,KAAAmpD,KACInpD,MAAAP,MAAA4pD,GAAAF,GAAAhpD,KAAAH,KAAMuC,qDAED+mD,sBAAwB,KAC7B7pD,EAAK8pD,qBAAuB,KAE5B9pD,EAAK+pD,kBAAoB/pD,EAAK+pD,kBAAkBpyC,KAAvBqyC,MAAAhqD,KAN7BA,yPAHwByE,IAAMC,gEAYPG,GAEnB,IAEM8L,EAFUpQ,KAAKuC,MAAMmY,QACGQ,mBACQc,qBAChC0tC,EAAmBjtB,aAAoBrsB,EAAgBS,YAC7DT,EAAgBmoC,kBAAkBmR,6CAGpBplD,GAEVtE,KAAKspD,sBAAsBK,aAE3B3pD,KAAK4pD,uBAAuBtlD,yCAMhC,OAAQtE,KAAKupD,sBAAwBvpD,KAAKupD,qBAAqBI,aAC1D3pD,KAAKspD,uBAAyBtpD,KAAKspD,sBAAsBK,6CAKlE,IAAAr2C,EAAAtT,KAGI,OACI2W,EAAAlU,EAAAC,cAACugD,GAAA,EAAD,CAAgBzjD,GAAIQ,KAAKuC,MAAM/C,GAC3BuV,UAAW/U,KAAKuC,MAAMwS,UACtBrR,MAAO1D,KAAKuC,MAAMmB,MAClBsU,MAAOmxC,EAAcjG,OACrBvsC,EAAAlU,EAAAC,cAACygD,GAAA,EAAD,CAAcnrC,MAAO,gBAAiBunB,SAAS,GAC3C5oB,EAAAlU,EAAAC,cAAC28B,GAAA,EAAD,CAAetY,IAAK,SAAAA,GAAG,OAAIzT,EAAKg2C,sBAAwBviC,GACpDvnB,GAAG,cAAcwY,MAAM,eAAelO,MAAM,YAChD6M,EAAAlU,EAAAC,cAAC28B,GAAA,EAAD,CAAetY,IAAK,SAAAA,GAAG,OAAIzT,EAAKi2C,qBAAuBxiC,GAAKhO,UAAU,EAClEvZ,GAAG,aAAawY,MAAM,mBAAmBlO,MAAM,WACnD6M,EAAAlU,EAAAC,cAAA,UAAQqS,UAAW6C,KAAMiyC,gBAAiB5xC,QAASjY,KAAKwpD,kBAAmBzwC,UAAW/Y,KAAK8pD,eAA3F,qDAMpBpsB,OAAOimB,eAAewF,GAAe,QAAS,CAC1C97C,IAAK,WAAc,OAAOyO,KAAKC,SAAS,+BAG7BotC,g3BCXAY,eApDX,SAAAA,EAAYxnD,GACZ,mGAAAynD,CAAAhqD,KAAA+pD,GAAAE,GAAAjqD,KAAAkqD,GAAAH,GAAA5pD,KAAAH,KACUuC,2PAJgB2B,IAAMC,kDAU5B,IAAMjD,EAAOlB,KAAKuC,MAAMrB,KAClB+B,EAAOjD,KAAKuC,MAAMU,KAClBE,EAASnD,KAAKuC,MAAMY,OACpBE,EAAcrD,KAAKuC,MAAMc,YACzBC,EAAatD,KAAKuC,MAAMe,WACxBE,EAAgBxD,KAAKuC,MAAMiB,cAE3BjD,EAAQW,EAAK0M,eACb5K,EAAS9B,EAAKY,cAEdy5C,EAASr6C,EAAKgxC,gBAEpB,OACIv7B,EAAAlU,EAAAC,cAACiU,EAAAlU,EAAME,SAAP,KACIgU,EAAAlU,EAAAC,cAACuB,GAAA,EAAD,CACIpB,SAAU3B,EACV8B,OAAQA,EACRzC,MAAOA,EACP2C,MAAOD,EACPG,QAASD,EACTE,YAAaA,EAAc,SAAAiB,IAETA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDkjB,OAASvmB,EACfmC,EAAYiB,IACZ,KACJhB,WAAYA,EAAa,SAAAgB,IAEPA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDkjB,OAASvmB,EACfoC,EAAWgB,IACX,KACJd,cAAeA,IAClB+3C,GACG5kC,EAAAlU,EAAAC,cAACuB,GAAA,EAAD,CACIpB,SAAU3B,EACV8B,OAAiB,GAATA,EACRE,MAAM,OACNE,QAASD,s2BCjD1B,IA4BQgnD,eAxBX,SAAAA,EAAYh6C,EAAiBC,GAC7B,IAAA3Q,EAAA,mGAAA2qD,CAAApqD,KAAAmqD,IACI1qD,EAAA4qD,GAAArqD,KAAAsqD,GAAAH,GAAAhqD,KAAAH,QAEKqQ,iBAAmBF,EACxB1Q,EAAK6Q,iBAAmBF,EAJ5B3Q,yPAH8BwC,uDAWdC,GAEZ,IAAMiO,EAAkBnQ,KAAKqQ,iBACvBD,EAAkBpQ,KAAKsQ,iBAE7B,GAD0BH,EAAgBM,yBAChBpO,KAC1B,CACI,IAAMsO,EAAsBR,EAAgBS,yBAC5CD,EAAoBogC,eAAepgC,EAAoBuhC,iBAEvD9hC,EAAgBW,eAvBkB,qBAuB6B,CAAExM,OAAQoM,02BC8BtE45C,eAhDX,SAAAA,EAAYhoD,GACZ,mGAAAioD,CAAAxqD,KAAAuqD,GAAAE,GAAAzqD,KAAA0qD,GAAAH,GAAApqD,KAAAH,KACUuC,2PAJgB2B,IAAMC,kDAU5B,IAAMyG,EAAO5K,KAAKuC,MAAMqI,KAClBzH,EAASnD,KAAKuC,MAAMY,OACpBE,EAAcrD,KAAKuC,MAAMc,YACzBC,EAAatD,KAAKuC,MAAMe,WACxBE,EAAgBxD,KAAKuC,MAAMiB,cAE3BuzB,EAAQnsB,EAAKC,gBACbmsB,EAAMpsB,EAAKE,cACXhE,EAAS8D,EAAKG,iBACdxK,EAAQqK,EAAKwD,eACb6oB,EAAUrsB,EAAKssB,mBAErB,OACIvgB,EAAAlU,EAAAC,cAACiU,EAAAlU,EAAME,SAAP,KACIgU,EAAAlU,EAAAC,cAACsD,GAAA,EAAD,CACIG,SAAUtB,KACV/D,KAAMi2B,EACNh2B,GAAIi2B,EACJlwB,OAAQA,EACRvG,MAAOA,EAAMmH,MAAMw5B,GAAgBgC,KAAK,MACxC39B,UAAW0xB,EACX/zB,MAAOC,EACPE,YAAaA,EAAc,SAAAiB,IAETA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDkjB,OAAS7c,EACfvH,EAAYiB,IACZ,KACJhB,WAAYA,EAAa,SAAAgB,IAEPA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDkjB,OAAS7c,EACftH,EAAWgB,IACX,KACJd,cAAeA,g2BC2CpBmnD,eA/EX,SAAAA,EAAYpoD,GACZ,IAAA9C,+FAAAmrD,CAAA5qD,KAAA2qD,GACIlrD,EAAAorD,GAAA7qD,KAAA8qD,GAAAH,GAAAxqD,KAAAH,KAAMuC,IAEN,IAAMwoD,EAAYxoD,EAAMwoD,UAClB36C,EAAkB7N,EAAM6N,gBACxBD,EAAkB46C,EAAUC,qBALtC,OAOIvrD,EAAKwrD,qBAAuB,IAAId,GAAoBh6C,EAAiBC,GAPzE3Q,yPAHwByE,IAAMC,6DAgBRnE,KAAKuC,MAAMwoD,UACEG,kBAClB9kC,gBAAgBpmB,KAAKirD,qEAMhBjrD,KAAKuC,MAAMwoD,UACEG,kBAClBz+B,mBAAmBzsB,KAAKirD,uDAMrC,IAAMF,EAAY/qD,KAAKuC,MAAMwoD,UACvB36C,EAAkBpQ,KAAKuC,MAAM6N,gBAC7BsnB,EAAW13B,KAAKuC,MAAMm1B,SAEtBplB,EAAQlC,EAAgBS,WACxBV,EAAkB46C,EAAUC,qBAC5BjiC,EAAegiC,EAAUG,kBAE/B,OACIv0C,EAAAlU,EAAAC,cAACiU,EAAAlU,EAAME,SAAP,KACIgU,EAAAlU,EAAAC,cAAC21B,GAAA,EAAD,CACIloB,gBAAiBA,EACjBC,gBAAiBA,EACjB2Y,aAAcA,EACdyD,eAAgB,EAChBkL,SAAUA,IACd/gB,EAAAlU,EAAAC,cAACm1B,GAAA,EAAD,CACIpN,MAAOnY,EAAM3E,WACbwC,gBAAiBA,EACjBC,gBAAiBA,EACjB8nB,aAAc6xB,GACdhhC,aAAcA,EACdyD,eAAgB,EAChBkL,SAAUA,IACd/gB,EAAAlU,EAAAC,cAACy0B,GAAA,EAAD,CACIpQ,IAAK,SAAAA,GAEIA,GACLA,EAAIokC,2BACCC,mCAAkC,GAClCC,gCAA+B,IAExC1gC,MAAOrY,EAAMzF,WACbsD,gBAAiBA,EACjBC,gBAAiBA,EACjBqnB,aAAc8yB,GACdxhC,aAAcA,EACdyD,eAAgB,EAChBkL,SAAUA,IACd/gB,EAAAlU,EAAAC,cAACwpB,GAAA,EAAD,CACI/b,gBAAiBA,EACjBC,gBAAiBA,EACjB2Y,aAAcA,EACdyD,eAAgB,m6BC9EpC,IAAM8+B,GAAsB,CAAC,IAAK,KAC5BC,GAAkB,CAACjqB,GA8DVkqB,eA1DX,SAAAA,EAAYjpD,GACZ,mGAAAkpD,CAAAzrD,KAAAwrD,GAAAE,GAAA1rD,KAAA2rD,GAAAH,GAAArrD,KAAAH,KACUuC,2PAJuB2B,IAAMC,sDAO1Bs+B,GAET,IACMjM,EADkBx2B,KAAKuC,MAAM6N,gBACCw7C,iBACpC,IAAKp1B,EAAa,OAAO,KAEzB,IAAMoE,EAAiBpE,EAAYoE,eACnC,OACIjkB,EAAAlU,EAAAC,cAACg9B,GAAA,EAAD,CAAoB95B,IAAK68B,EAAQ5C,OAAQjF,EAAgB5iB,MAAOyqB,EAC5DxqB,QAAS,SAAA3T,GAAC,OAAIs2B,EAAeixB,YAAYppB,EAAQtB,uCAM7D,IAAA1hC,EAAAO,KAEUw2B,EADkBx2B,KAAKuC,MAAM6N,gBACCw7C,iBAG9BzL,EAFgBngD,KAAKuC,MAAM0Y,cACOohC,uBACL7I,cAE7BsY,EAAet1B,GAAeA,EAAYu1B,sBAAuBlrD,KACjEmrD,EAAex1B,GAAeA,EAAYu1B,sBAAuBxsD,IAEjE0sD,GAAmB9L,GAAYA,EAASvgD,QAAU,EAExD,OACI+W,EAAAlU,EAAAC,cAAA,OAAKqS,UAAW6C,KAAMwb,gBACjB04B,GAAgBn1C,EAAAlU,EAAAC,cAAA,YACbiU,EAAAlU,EAAAC,cAAA,QAAMqS,UAAW6C,KAAMs0C,WAClB/L,EAAS16C,IAAI,SAAAnB,GAAC,OAAI7E,EAAK0sD,aAAa7nD,MAEzCqS,EAAAlU,EAAAC,cAAA,QAAMqS,UAAW6C,KAAMw0C,cAClBH,GACGX,GAAoB7lD,IAAI,SAAAnB,GAAC,OAAI7E,EAAK0sD,aAAa7nD,KAE/CinD,GAAgB9lD,IAAI,SAAAnB,GAAC,OAAI7E,EAAK0sD,aAAa7nD,OAGtD0nD,GAAgBr1C,EAAAlU,EAAAC,cAAA,YACbiU,EAAAlU,EAAAC,cAACg9B,GAAA,EAAD,CAAoBG,OAAQrJ,EAAYoE,eACpC5iB,MAAOwe,EAAYu1B,YAAYnoB,gBAAkB,SAAW,OAC5D3rB,QAAS,WAAQue,EAAYu1B,YAAYzmB,eAAe9O,EAAYu1B,YAAYnoB,oBACpFjtB,EAAAlU,EAAAC,cAACg9B,GAAA,EAAD,CAAoBG,OAAQrJ,EAAYoE,eACpC5iB,MAAOwe,EAAYu1B,YAAY7Z,gBAAkB,SAAW,SAC5Dj6B,QAAS,WAAQue,EAAYu1B,YAAYhb,eAAeva,EAAYu1B,YAAY7Z,i3BCnBzFma,eAnCX,SAAAA,EAAY9pD,GAAO,mGAAA+pD,CAAAtsD,KAAAqsD,GAAAE,GAAAvsD,KAAAwsD,GAAAH,GAAAlsD,KAAAH,KAAQuC,2PAFI2B,IAAMC,kDAOjC,IAAMuW,EAAU1a,KAAKuC,MAAMmY,QACrBO,EAAgBP,EAAQQ,mBACxB6vC,EAAY/qD,KAAKuC,MAAMwoD,UACvB36C,EAAkBpQ,KAAKuC,MAAM6N,gBAC7BkB,EAAiBlB,EAAgBmB,oBACjCpB,EAAkB46C,EAAUC,qBAElC,OACIr0C,EAAAlU,EAAAC,cAACiU,EAAAlU,EAAME,SAAP,KACIgU,EAAAlU,EAAAC,cAAC8wB,GAAA,EAAD,CACIpjB,gBAAiBA,EACjBD,gBAAiBA,EACjBqW,SAAUukC,EAAUx8B,uBACpB7T,QAASA,IACb/D,EAAAlU,EAAAC,cAACyW,GAAA,EAAD,CACIzV,MAAO,CAAEixB,MAAO,GAChBpd,gBAAiBwzC,EAAUnkC,uBAC/BjQ,EAAAlU,EAAAC,cAAC+3B,GAAA,EAAD,CAAmB1T,IAAK,SAAAA,GAAG,OAAI3W,EAAgBq8C,eAAe1lC,IAC1DzV,eAAgBA,EAChBkV,SAAUukC,EAAUx8B,uBACpBiO,YAAY,GACZ7lB,EAAAlU,EAAAC,cAACgqD,GAAD,CACIt8C,gBAAiBA,EACjB6K,cAAeA,uzBClCvC,IA2Je0xC,eAtJX,SAAAA,EAAYpqD,GACZ,IAAA9C,MAAA,mGAAAmtD,CAAA5sD,KAAA2sD,KACI3sD,MAAAP,MAAAotD,GAAAF,GAAAxsD,KAAAH,KAAMuC,qDAEDuqD,mBAAqBrtD,EAAKqtD,mBAAmB11C,KAAxB21C,MAAAttD,KAC1BA,EAAKutD,kBAAoBvtD,EAAKutD,kBAAkB51C,KAAvB21C,MAAAttD,KACzBA,EAAKwtD,aAAextD,EAAKwtD,aAAa71C,KAAlB21C,MAAAttD,KACpBA,EAAKytD,YAAcztD,EAAKytD,YAAY91C,KAAjB21C,MAAAttD,KACnBA,EAAK0tD,kBAAoB1tD,EAAK0tD,kBAAkB/1C,KAAvB21C,MAAAttD,KACzBA,EAAK2tD,mBAAqB3tD,EAAK2tD,mBAAmBh2C,KAAxB21C,MAAAttD,KAC1BA,EAAK4tD,WAAa5tD,EAAK4tD,WAAWj2C,KAAhB21C,MAAAttD,KATtBA,yPAHqByE,IAAMC,4DAeRG,GAEKtE,KAAKuC,MAAMuH,MACnBqsC,yDAGE7xC,GAEMtE,KAAKuC,MAAMuH,MACnBosC,wDAGE5xC,+CAICA,wCAIPA,GAEYtE,KAAKuC,MAAMuH,MACnB0rC,6CAGHlxC,GAEWtE,KAAKuC,MAAMuH,MACnByrC,4CAGLjxC,GAEatE,KAAKuC,MAAMuH,MACnBwjD,wCAMZ,IACMC,EAAcvtD,KAAKuC,MAAMuH,MACzB0jD,EAAYD,EAAcA,EAAYE,uBAAyB,EAErE,OAAKF,EAGD52C,EAAAlU,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAChBuV,UAAW6C,KAAM81C,eACb,IAAM1tD,KAAKuC,MAAMwS,UACrBrR,MAAO1D,KAAKuC,MAAMmB,OAElBiT,EAAAlU,EAAAC,cAAA,OAAKqS,UAAW6C,KAAM+1C,mBAClBh3C,EAAAlU,EAAAC,cAAA,UAAQuV,QAASjY,KAAK8sD,oBAAtB,QACAn2C,EAAAlU,EAAAC,cAAA,UAAQuV,QAASjY,KAAKgtD,mBAAtB,QACAr2C,EAAAlU,EAAAC,cAAA,UAAQuV,QAASjY,KAAKktD,aAAtB,SACAv2C,EAAAlU,EAAAC,cAAA,UAAQuV,QAASjY,KAAKitD,cAAtB,WAGJt2C,EAAAlU,EAAAC,cAAA,OAAKqS,UAAW6C,KAAM+1C,mBAClBh3C,EAAAlU,EAAAC,cAAA,UAAQuV,QAASjY,KAAKmtD,mBAAtB,gBACAx2C,EAAAlU,EAAAC,cAAA,UAAQuV,QAASjY,KAAKotD,oBAAtB,gBACAz2C,EAAAlU,EAAAC,cAAA,UAAQuV,QAASjY,KAAKqtD,YAAtB,SAGJ12C,EAAAlU,EAAAC,cAAA,OAAKqS,UAAW,YAEWw4C,EAAYK,sBAC/Bj3C,EAAAlU,EAAAC,cAAA,OAAKqS,UAAU,2BACX4B,EAAAlU,EAAAC,cAAA,QAAMqS,UAAU,oBAChB4B,EAAAlU,EAAAC,cAAA,SAAOqS,UAAU,mBAAmB,QAG5C4B,EAAAlU,EAAAC,cAACq9B,GAAA,EAAD,CACIhrB,UAAU,eACVrR,MAAO,CAAEmqD,QAASL,EAAY,EAAI,EAAI,EAAGx4B,KAAMw4B,EAAY,QAE9DD,EAAYO,eAAeroD,IAAI,SAACnB,EAAGqB,GAEhC,IAAI+rB,EACAq8B,EACJr8B,EAAS87B,IAAc7nD,EACvBooD,EAAaP,IAAc7nD,EAAI,EAgB/B,IAAMqoD,EAAeT,EAAYU,2BAA2BtoD,GACtDoT,EAA4B,OAAjBi1C,EACjB,OACIr3C,EAAAlU,EAAAC,cAAA,OAAKkD,IAAKtB,EAAI,IAAMqB,EAAGoP,UAAW,kBAC7B2c,EAAS,WAAa,KACtBq8B,EAAa,gBAAkB,KAC/Bh1C,EAAW,aAAe,IAC/Bd,QAAS,SAAC3T,GAAD,OAASyU,EAAgD,KAArCw0C,EAAYW,oBAAoBvoD,KAErDqoD,GACAr3C,EAAAlU,EAAAC,cAAA,QAAMqS,UAAU,mBACXi5C,EAAavoD,IAAI,SAAA0oD,GAEd,OACIx3C,EAAAlU,EAAAC,cAAA,SAAOkD,IAAKuoD,EAAYjiD,qBACnBiiD,EAAYvgD,mBAKjC+I,EAAAlU,EAAAC,cAAA,SAAOqS,UAAU,mBACZzQ,MAMOipD,EAAYa,uBAChCz3C,EAAAlU,EAAAC,cAAA,OAAKqS,UAAU,2BACX4B,EAAAlU,EAAAC,cAAA,QAAMqS,UAAU,oBAChB4B,EAAAlU,EAAAC,cAAA,SAAOqS,UAAU,mBAAmB,UApF/B,g2BCxClBs5C,eApBX,SAAAA,EAAY9rD,GAAO,mGAAA+rD,CAAAtuD,KAAAquD,GAAAE,GAAAvuD,KAAAwuD,GAAAH,GAAAluD,KAAAH,KAAQuC,2PAFQ2B,IAAMC,kDAOrC,IAAM4mD,EAAY/qD,KAAKuC,MAAMwoD,UACvBrV,EAAS11C,KAAKuC,MAAMmzC,OAE1B,OACI/+B,EAAAlU,EAAAC,cAACiU,EAAAlU,EAAME,SAAP,KACIgU,EAAAlU,EAAAC,cAACyW,GAAA,EAAD,CACIzV,MAAO,CAAEixB,MAAO,GAChBpd,gBAAiBwzC,EAAUnkC,uBAC/BjQ,EAAAlU,EAAAC,cAAC+rD,GAAD,CAAY/qD,MAAO,CAAEb,SAAU,WAAY6xB,OAAQ,GAC/C5qB,MAAO4rC,EAASA,EAAOgZ,iBAAmB,gOCa9D,IAIMC,cAEF,SAAAA,EAAYp0C,GACZ,IAAA9a,EAAAO,kGAAA4uD,CAAA5uD,KAAA2uD,GACI3uD,KAAKya,KAAOF,EAEZva,KAAKo2B,OAAS,IAAI+L,EAClBniC,KAAKsQ,iBAAmB,IAAI2zB,GAAmB1pB,EAAKva,KAAKo2B,OAAQ,MACjEp2B,KAAK6uD,oBAAsB3qD,IAAM8hB,YAEjC,IAAM5V,EAAkBpQ,KAAKsQ,iBAE7BiK,EAAIu0C,mBACCC,YAAYC,IAAwB,SAAAzsD,GAAK,OACtCoU,EAAAlU,EAAAC,cAAC8lB,GAAA,EAAD,CACIzB,IAAKtnB,EAAKovD,oBACV1lC,YAAa,SAAA4hC,GAET,OAAOp0C,EAAAlU,EAAAC,cAACusD,GAAD,CACHlE,UAAWA,EACX36C,gBAAiBA,EACjBsnB,UAAWj4B,EAAKyvD,aAExB9lC,cAAe,SAAA2hC,GAEX,OAAKtrD,EAAKyvD,UASCv4C,EAAAlU,EAAAC,cAACysD,GAAD,CACHpE,UAAWA,EACXrV,OAAQj2C,EAAKu2C,UATVr/B,EAAAlU,EAAAC,cAAC0sD,GAAD,CACHrE,UAAWA,EACX36C,gBAAiBA,EACjBsK,QAASjb,EAAKgb,KAAKO,oBAY3Chb,KAAKi2C,mBAAqB,IAAIhD,GAAkBjzC,MAEhDA,KAAKqvD,cAAgB,IAAIzV,GAAgBr/B,EACrCva,KAAKsQ,iBACLtQ,KAAKi2C,oBACTj2C,KAAKg2C,QAAU,IAAIU,GACnB12C,KAAKkvD,WAAY,4DAIV30C,GACX,IzBjFkC8/B,EyBiFlC/mC,EAAAtT,MzBjFkCq6C,EyBkFR9/B,EAAImqB,0BzBhFV4qB,2BAA2B3V,GAA6BP,IAC5EiB,EAAoBiV,2BAA2B7V,GAAiB5B,IAChEwC,EAAoBiV,2BAA2B5V,GAAsBZ,IyBgFjEv+B,EAAIg1C,mBACCr+B,iBAAiB,IAAI4rB,GAAY0S,IAAsB,WAE5Dz+B,aAAuBxW,EAAIg1C,oBAE3Bh1C,EAAIk1C,mBACCC,YAAY,IAAI3T,GAAYxhC,EAAKi1C,IAAsB,YAAa,SAEzEj1C,EAAIK,iBACC+0C,uBAAuB,kBAAa,IAAIlxB,KACrCnrB,EAAKhD,iBAAkBk/C,MAE/Bj1C,EAAIq1C,mBACCC,cAAc,SAAAttD,GAAK,OAChBoU,EAAAlU,EAAAC,cAACugD,GAAA,EAAD,CAAgBzjD,GAAI+C,EAAM/C,GACtBuV,UAAWxS,EAAMwS,UACjBrR,MAAOnB,EAAMmB,MACbsU,MAAO,qBACPrB,EAAAlU,EAAAC,cAAA,SAAI,8CACJiU,EAAAlU,EAAAC,cAAA,SAAI,gCAGXmtD,cAAc1N,IACd0N,cAAc/H,IACd+H,cAAc1G,IAEnB5uC,EAAIu1C,mBACCC,eAAe,gBAAiB,CAACC,IAAU,QAAS,WAAQz1C,EAAIg1C,mBAAmBU,cAAc,YAAa11C,EAAIS,gBAClH+0C,eAAe,eAAgB,CAACC,IAAU,QAAS,WAAQz1C,EAAIg1C,mBAAmBU,cAAc,UAAW11C,EAAIS,gBAEpHhb,KAAKi2C,mBAAmB5vB,WAAWrmB,MACnCA,KAAKsQ,iBAAiB+V,4CAInB9L,GAEHva,KAAKsQ,iBAAiB8S,SACtBpjB,KAAKi2C,mBAAmB7yB,OAAOpjB,sCAI3Bua,GAEJva,KAAKi2C,mBAAmB1vB,QAAQvmB,MAChCA,KAAKsQ,iBAAiBiW,wCAIpBhM,GACN,IADWmB,EACX/b,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACI8b,YAAelB,EAAKmB,EAAW,kBAAMnB,EAAI21C,sBAAsBC,4DAG1C,OAAOnwD,KAAKi2C,gEACd,OAAOj2C,KAAKsQ,wDAClB,OAAOtQ,KAAK6uD,oBAAoBvoC,kDAE7B,OAAOtmB,KAAKqvD,wDACZ,OAAOrvD,KAAKg2C,mDAGX,MAxHF,gDA0HD,MA5HF,uDA8HW,MA7HD,qDA+Hf,OAAOh2C,KAAKya,4CAGZk0C","file":"module_pda.bundle.e23ca202812cb8404c0e.js","sourcesContent":["import GraphElement from './GraphElement.js';\n\n/**\n * A class that represents the node elements of a graph.\n *\n * @see {@link NodeGraph}\n * @extends GraphElement\n */\nclass GraphNode extends GraphElement\n{\n    /**\n   * Creates a node with the unique id.\n   * \n   * @param {String} id         the element id for this node.\n   * @param {Number} [x=0]      the initial x position\n   * @param {Number} [y=0]      the initial y position\n   */\n    constructor(id, x = 0, y = 0)\n    {\n        super(id);\n\n        this.x = x;\n        this.y = y;\n    \n        this._label = '';\n    }\n\n    /** @override */\n    getCenterPoint(dst={x: 0, y: 0})\n    {\n        dst.x = this.x;\n        dst.y = this.y;\n        return dst;\n    }\n\n    /**\n   * Sets the node label to the passed-in string.\n   *\n   * Assumes the label is NOT null.\n   * @param {String} label  The new node label.\n   * @returns {this}\n   */\n    setNodeLabel(label)\n    {\n        this._label = label;\n        return this;\n    }\n\n    /**\n   * Gets the label of the node. If the node has no label, it will return an\n   * empty string.\n   * @returns {String} The node's label.\n   */\n    getNodeLabel() { return this._label; }\n\n    /**\n   * Gets the size of the node. Can be overriden to specify a different size.\n   * @returns {Number} The radius of the node.\n   */\n    getNodeSize() { return 16; }\n\n    /** @override */\n    getHashString(usePosition=true)\n    {\n        if (usePosition)\n        {\n            return super.getHashString(usePosition) + ':' +\n        Math.floor(this.x) + ',' + Math.floor(this.y) + '.' + this._label;\n        }\n        else\n        {\n            return super.getHashString(usePosition) + ':' + this._label;\n        }\n    }\n}\n\nexport default GraphNode;\n","import GraphElement from './GraphElement.js';\n\n/**\n * A class that represents the edge elements of a graph.\n * \n * @see {@link NodeGraph}\n * @extends GraphElement\n */\nclass GraphEdge extends GraphElement\n{\n    /**\n     * Creates a edge with the unique id.\n     * \n     * @param {String} id           The element id for this node.\n     * @param {GraphNode} from      The from node of the edge.\n     * @param {GraphNode} [to=null] The to node of the edge.\n     */\n    constructor(id, from, to=null)\n    {\n        super(id);\n\n        this._from = from;\n        this._to = to;\n\n        this._label = '';\n    }\n\n    setEdgeFrom(node)\n    {\n        if (!node) throw new Error('Source of edge cannot be null');\n\n        this._from = node;\n        return this;\n    }\n\n    setEdgeTo(node)\n    {\n        this._to = node;\n        return this;\n    }\n\n    /**\n     * Sets the edge label to the passed-in string.\n     *\n     * Assumes the label is NOT null.\n     * @param {String} label  The new edge label.\n     * @returns {this}\n     */\n    setEdgeLabel(label)\n    {\n        this._label = label;\n        return this;\n    }\n\n    getEdgeDirection()\n    {\n        const from = this._from;\n        const to = this._to;\n        const HALFPI = Math.PI / 2;\n        let result = 0;\n\n        if (this.isPlaceholder())\n        {\n            result = Math.PI / 4;\n        }\n        else\n        {\n            const dy = to.y - from.y;\n            const dx = to.x - from.x;\n            result = Math.atan2(dy, dx);\n        }\n\n        if (result > HALFPI || result < -HALFPI)\n        {\n            result += Math.PI;\n        }\n\n        return result;\n    }\n\n    getStartPoint(dst = { x: 0, y: 0 })\n    {\n        const from = this._from;\n        dst.x = from.x;\n        dst.y = from.y;\n        return dst;\n    }\n\n    /** @override */\n    getCenterPoint(dst = { x: 0, y: 0 })\n    {\n        const from = this._from;\n        const to = this._to;\n        if (this.isPlaceholder())\n        {\n            const halfPlaceholderLength = this.getPlaceholderLength() / 2;\n            dst.x = from.x + halfPlaceholderLength;\n            dst.y = from.y + halfPlaceholderLength;\n        }\n        else\n        {\n            dst.x = from.x + (to.x - from.x) / 2;\n            dst.y = from.y + (to.y - from.y) / 2;\n        }\n        return dst;\n    }\n\n    getEndPoint(dst = { x: 0, y: 0 })\n    {\n        if (this.isPlaceholder())\n        {\n            const from = this._from;\n            const placeholderLength = this.getPlaceholderLength();\n            dst.x = from.x + placeholderLength;\n            dst.y = from.y + placeholderLength;\n        }\n        else\n        {\n            const to = this._to;\n            dst.x = to.x;\n            dst.y = to.y;\n        }\n        return dst;\n    }\n\n    getPlaceholderLength() { return this._from.getNodeSize(); }\n    isPlaceholder() { return this._to === null; }\n    isSelfLoop() { return this._from === this._to; }\n\n    /**\n     * Gets the label of the edge. If the edge has no label, it will return an\n     * empty string.\n     * @returns {String} The edge's label.\n     */\n    getEdgeLabel() { return this._label; }\n\n    getEdgeFrom() { return this._from; }\n    getEdgeTo() { return this._to; }\n\n    /** @override */\n    getHashString(usePosition = true)\n    {\n        const src = this._from ? this._from.getHashString(usePosition) : '';\n        // HACK: to may be a pointer, which is not a node, so getHashString does not exist.\n        const dst = this._to ? this._to.getHashString ? this._to.getHashString(usePosition) : '0' : '';\n        return super.getHashString(usePosition) + ':' + src + ',' + dst + '.' + this._label;\n    }\n}\n\nexport default GraphEdge;","/**\n * Used by InputAdapter to handle input event logic.\n */\nclass AbstractInputHandler\n{\n    constructor() {}\n\n    /**\n   * Called by InputAdapter before an InputEvent begins.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not begin.\n   */\n    onPreInputEvent(pointer) { return false; }\n\n    /**\n   * Called by InputAdapter when an InputEvent resolves and is not an Alt input.\n   * To handle events for Alt inputs, refer to onAltInputEvent().\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to trigger other events.\n   */\n    onInputEvent(pointer) { return false; }\n\n    /**\n   * Called by InputAdapter when an InputEvent resolves and is an Alt input.\n   * To handle events for non-Alt inputs, refer to onInputEvent().\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to trigger other events.\n   */\n    onAltInputEvent(pointer) { return false; }\n\n    /**\n   * Called by InputAdapter when a DblInputEvent resolves. The input is\n   * assumed by a non-Alt input, since only non-Alt inputs can trigger this\n   * event.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to trigger other events.\n   */\n    onDblInputEvent(pointer) { return false; }\n\n    /**\n   * Called by InputAdapter when input moves. The input is called before drag\n   * logic.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to trigger other events (i.e. dragging events).\n   */\n    onMoveInputEvent(pointer) { return false; }\n\n    /**\n   * Called by InputAdapter before a drag begins. The input could be either\n   * an Alt or non-Alt input.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to trigger other events, and then it will continue the drag\n   * input events for the current handler only.\n   * \n   * NOTE: A drag does not start immediately on move. There is a radius to\n   * compensate for mobile users. Therefore pointer.x and pointer.y refer to\n   * the offset position. To get the starting pointer position, use\n   * pointer.getInputEventPosition().\n   */\n    onDragStart(pointer) { return false; }\n\n    /**\n   * Called by InputAdapter while dragging moves. The input could be either\n   * an Alt or non-Alt input.\n   * Will always be called after onDragStart() and will be followed by\n   * onDragStop() when complete.\n   */\n    onDragMove(pointer) {}\n\n    /**\n   * Called by InputAdapter after a drag ends. The input could be either an\n   * Alt or non-Alt input.\n   * Will always be called after onDragStart(). Although onDragMove may be\n   * called in-between, it is not guaranteed.\n   */\n    onDragStop(pointer) {}\n\n    /**\n   * Called by InputAdapter after an InputEvent ends.\n   */\n    onPostInputEvent(pointer) {}\n\n    /**\n   * Called by InputAdapter when zoom changes.\n   * Returns true if event is consumed (zoom will not be applied)\n   */\n    onZoomChange(pointer, zoomValue, prevValue)\n    {\n        return false;\n    }\n}\n\nexport default AbstractInputHandler;","import React from 'react';\n\nconst INPUT_MASK_NODE_RADIUS_OFFSET = 4;\n\nexport const EVENT_SOURCE_NODE = 'node';\n\nexport const DefaultNodeShapeRenderer = props => (\n    <React.Fragment>\n        <circle cx={props.position.x} cy={props.position.y}\n            r={props.radius}\n            fill={props.color}\n            stroke={props.outline} />\n        {(props.onMouseOver || props.onMouseOut) &&\n            <circle cx={props.position.x} cy={props.position.y}\n                r={props.radius + INPUT_MASK_NODE_RADIUS_OFFSET}\n                fill=\"transparent\"\n                cursor=\"pointer\"\n                onMouseOver={props.onMouseOver}\n                onMouseOut={props.onMouseOut}\n                pointerEvents={props.pointerEvents} />}\n    </React.Fragment>\n);\n\nexport const DefaultLabelRenderer = props => (\n    <text x={props.position.x} y={props.position.y + 4}\n        pointerEvents=\"none\"\n        style={{\n            userSelect: 'none',\n            fontSize: `${(1 - Math.min(Math.max(props.label.length - 2, 0) / 6, 0.5))}em`\n        }}\n        textAnchor=\"middle\"\n        fill={props.color}>\n        {props.label}\n    </text>\n);\n\nclass NodeRenderer extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        const position = this.props.position;\n        const radius = this.props.radius || 16;\n        const label = this.props.label || '';\n        const color = this.props.color || '#FFFFFF';\n        const outline = this.props.outline || '#000000';\n        const onMouseOver = this.props.onMouseOver;\n        const onMouseOut = this.props.onMouseOut;\n        const pointerEvents = this.props.pointerEvents || 'visiblePainted';\n\n        const NodeShapeRenderer = DefaultNodeShapeRenderer;\n        const NodeLabelRenderer = DefaultLabelRenderer;\n\n        return (\n            <g>\n                {NodeShapeRenderer &&\n                    <NodeShapeRenderer\n                        position={position}\n                        radius={radius}\n                        color={color}\n                        outline={outline}\n                        onMouseOver={onMouseOver ? e =>\n                        {\n                            const value = e.target['value'] || (e.target['value'] = {});\n                            value.type = EVENT_SOURCE_NODE;\n                            onMouseOver(e);\n                        } : null}\n                        onMouseOut={onMouseOut ? e =>\n                        {\n                            const value = e.target['value'] || (e.target['value'] = {});\n                            value.type = EVENT_SOURCE_NODE;\n                            onMouseOut(e);\n                        } : null}\n                        pointerEvents={pointerEvents} />}\n                {NodeLabelRenderer &&\n                    <NodeLabelRenderer\n                        position={position}\n                        label={label}\n                        color={outline} />}\n            </g>\n        );\n    }\n}\n\nexport default NodeRenderer;\n","/**\n * A class that represents any positioned, unique object in a graph. Usually\n * this is not instantiated, but rather extended. Look at {@link NodeElement}\n * and {@link EdgeElement} as examples.\n */\nclass GraphElement\n{\n    /**\n   * Creates an element with the unique id.\n   * \n   * @param {Number} elementID The unique id that represents the element.\n   */\n    constructor(elementID)\n    {\n        this._id = elementID;\n    }\n\n    /**\n   * Sets the element's id to the passed-in id.\n   * @param {String} elementID  The new id.\n   * @returns {this}\n   */\n    setGraphElementID(elementID)\n    {\n        this._id = elementID;\n        return this;\n    }\n\n    /**\n   * Compute the center point of the element and store the result in dst. The\n   * properties changed in dst are: x, y.\n   * @param  {Object} [dst={x: 0, y: 0}]    The object to store the result.\n   * @returns {Object}                       The passed-in dst.\n   */\n    getCenterPoint(dst = { x: 0, y: 0 })\n    {\n        dst.x = dst.y = 0;\n        return dst;\n    }\n\n    /**\n   * A unique identifier for this graph element\n   * @returns {String} The unique identifier for this element.\n   */\n    getGraphElementID() { return this._id; }\n\n    /**\n   * Computes the hash string that represents this element and its current state\n   * uniquely and deterministically. {@link NodeGraph} uses this to compute its\n   * hash code that distinguishes it from other graphs. The generated string\n   * should only be used to differentiate between other objects of the same hash\n   * function. In other words, every instance should only be compared to other\n   * instances of the same class (or extended class without override).\n   * @param  {Boolean} [usePosition=true] Whether to consider positioning as\n   *                                      part of the unique state.\n   * @returns {String}                     The hash string that represents this\n   *                                      current state.\n   */\n    getHashString(usePosition = true) { return this._id; }\n}\n\nexport default GraphElement;\n","import React from 'react';\n\nconst QUAD_RADIAN_THRESHOLD = 0.01;\nconst QUAD_REVERSE_OFFSET_THRESHOLD = 4;\nconst ARROW_WIDTH = 10;\nconst SIXTH_PI = Math.PI / 6;\nconst HALF_PI = Math.PI / 4;\nconst INPUT_MASK_EDGE_WIDTH = 8;\n\nexport const DIRECTED_FORWARD = 'forward';\nexport const DIRECTED_BACKWARD = 'backward';\nexport const DIRECTED_BOTH = 'both';\nexport const DIRECTED_NONE = 'undirected';\n\nexport const EVENT_SOURCE_FORWARD_ENDPOINT = 'forward-endpoint';\nexport const EVENT_SOURCE_BACKWARD_ENDPOINT = 'backward-endpoint';\nexport const EVENT_SOURCE_EDGE = 'edge';\nexport const EVENT_SOURCE_LABEL = 'label';\n\nexport const DefaultEndpointRenderer = props => (\n    <React.Fragment>\n        <path d={\n            'M ' +\n            (props.position.x - (props.length * Math.sin(props.angle - SIXTH_PI))) +\n            ' ' +\n            (props.position.y - (props.length * Math.cos(props.angle - SIXTH_PI))) +\n            ' ' +\n            'L ' + props.position.x + ' ' + props.position.y +\n            ' ' +\n            'L ' +\n            (props.position.x - (props.length * Math.sin(props.angle + SIXTH_PI))) +\n            ' ' +\n            (props.position.y - (props.length * Math.cos(props.angle + SIXTH_PI)))}\n        stroke={props.color}\n        fill=\"none\" />\n        <circle cx={props.position.x - (props.length * Math.cos(-props.angle + HALF_PI))} cy={props.position.y - (props.length * Math.sin(-props.angle + HALF_PI))}\n            r={props.length}\n            fill=\"transparent\"\n            cursor=\"pointer\"\n            onMouseOver={props.onMouseOver}\n            onMouseOut={props.onMouseOut}\n            pointerEvents={props.pointerEvents} />\n    </React.Fragment>\n);\n\nexport const DefaultLabelRenderer = props => (\n    <g transform={'translate(' + props.position.x + ',' + props.position.y + ')' +\n        ' ' +\n        'rotate(' + (props.direction * 180 / Math.PI) + ')'}>\n        {\n            props.labels && props.labels.length > 0 &&\n            props.labels.map((str, i) =>\n            {\n                const onMouseOver = props.onMouseOver;\n                const onMouseOut = props.onMouseOut;\n                return (\n                    <text key={str + '.' + i}\n                        transform={'translate(0,' + ((i + 1) * -15) + ')' +\n                            (props.reverse ? ' scale(-1,-1)' : '')}\n                        alignmentBaseline=\"central\"\n                        style={{ userSelect: 'none' }}\n                        textAnchor=\"middle\"\n                        fill={props.color}\n                        cursor=\"pointer\"\n                        onMouseOver={onMouseOver ? e => \n                        {\n                            const value = e.target['value'] || (e.target['value'] = {});\n                            value.index = i;\n                            onMouseOver(e);\n                        } : null}\n                        onMouseOut={onMouseOut ? e =>\n                        {\n                            const value = e.target['value'] || (e.target['value'] = {});\n                            value.index = i;\n                            onMouseOut(e);\n                        } : null}\n                        pointerEvents={props.pointerEvents}>\n                        {str}\n                    </text>\n                );\n            })\n        }\n    </g>\n);\n\nclass EdgeRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const directed = this.props.directed || DIRECTED_NONE;\n\n        const ForwardEndpointRenderer =\n            (directed === DIRECTED_FORWARD || directed === DIRECTED_BOTH) ?\n                (this.props.forwardEndpointRenderer ||\n                    this.props.endpointRenderer ||\n                    DefaultEndpointRenderer) : null;\n        const BackwardEndpointRenderer =\n            (directed === DIRECTED_BACKWARD || directed === DIRECTED_BOTH) ?\n                (this.props.backwardEndpointRenderer ||\n                    this.props.endpointRenderer ||\n                    DefaultEndpointRenderer) : null;\n        const EdgeLabelRenderer = this.props.labelRenderer || DefaultLabelRenderer;\n\n        const fromPoint = this.props.from;\n        const toPoint = this.props.to;\n        const centerPoint = this.props.center;\n        const label = this.props.label || '';\n        const direction = this.props.direction || 0;\n        const color = this.props.color || '#000000';\n        const onMouseOver = this.props.onMouseOver;\n        const onMouseOut = this.props.onMouseOut;\n        const pointerEvents = this.props.pointerEvents || 'visiblePainted';\n\n        let reverseLabel = false;\n        let fromAngle;\n        let toAngle;\n        let quadLine = null;\n\n        const dftx = fromPoint.x - toPoint.x;\n        const dfty = fromPoint.y - toPoint.y;\n        const dfcx = fromPoint.x - centerPoint.x;\n        const dfcy = fromPoint.y - centerPoint.y;\n        const ftrad = Math.atan2(dfty, dftx);\n        const fcrad = Math.atan2(dfcy, dfcx);\n        if (Math.abs(ftrad - fcrad) <= QUAD_RADIAN_THRESHOLD)\n        {\n            toAngle = Math.atan2(centerPoint.x - toPoint.x, centerPoint.y - toPoint.y) + Math.PI;\n            fromAngle = Math.atan2(centerPoint.x - fromPoint.x, centerPoint.y - fromPoint.y) + Math.PI;\n            quadLine = 'L ' + toPoint.x + ' ' + toPoint.y;\n            reverseLabel = false;\n        }\n        else\n        {\n            const cx = ((centerPoint.x * 4) - fromPoint.x - toPoint.x) / 2;\n            const cy = ((centerPoint.y * 4) - fromPoint.y - toPoint.y) / 2;\n            toAngle = Math.atan2(cx - toPoint.x, cy - toPoint.y) + Math.PI;\n            fromAngle = Math.atan2(cx - fromPoint.x, cy - fromPoint.y) + Math.PI;\n            quadLine = 'Q ' + cx + ' ' + cy + ' ' + toPoint.x + ' ' + toPoint.y;\n            reverseLabel = cy > centerPoint.y + QUAD_REVERSE_OFFSET_THRESHOLD;\n        }\n\n        const pathData = `M ${fromPoint.x} ${fromPoint.y} ${quadLine}`;\n        return (\n            <g>\n                <path d={pathData}\n                    stroke={color}\n                    fill=\"none\" />\n                <path d={pathData}\n                    stroke=\"transparent\"\n                    strokeWidth={`${INPUT_MASK_EDGE_WIDTH}px`}\n                    fill=\"none\"\n                    cursor=\"pointer\"\n                    onMouseOver={onMouseOver ? e =>\n                    {\n                        const value = e.target['value'] || (e.target['value'] = {});\n                        value.type = EVENT_SOURCE_EDGE;\n                        onMouseOver(e);\n                    } : null}\n                    onMouseOut={onMouseOut ? e =>\n                    {\n                        const value = e.target['value'] || (e.target['value'] = {});\n                        value.type = EVENT_SOURCE_EDGE;\n                        onMouseOut(e);\n                    } : null}\n                    pointerEvents={pointerEvents} />\n                {ForwardEndpointRenderer &&\n                    <ForwardEndpointRenderer\n                        position={toPoint}\n                        angle={toAngle}\n                        length={ARROW_WIDTH}\n                        color={color}\n                        onMouseOver={onMouseOver ? e =>\n                        {\n                            const value = e.target['value'] || (e.target['value'] = {});\n                            value.type = EVENT_SOURCE_FORWARD_ENDPOINT;\n                            onMouseOver(e);\n                        } : null}\n                        onMouseOut={onMouseOut ? e =>\n                        {\n                            const value = e.target['value'] || (e.target['value'] = {});\n                            value.type = EVENT_SOURCE_FORWARD_ENDPOINT;\n                            onMouseOut(e);\n                        } : null}\n                        pointerEvents={pointerEvents} />}\n                {BackwardEndpointRenderer &&\n                    <BackwardEndpointRenderer\n                        position={fromPoint}\n                        angle={fromAngle}\n                        length={ARROW_WIDTH}\n                        color={color}\n                        onMouseOver={onMouseOver ? e => \n                        {\n                            const value = e.target['value'] || (e.target['value'] = {});\n                            value.type = EVENT_SOURCE_BACKWARD_ENDPOINT;\n                            onMouseOver(e);\n                        } : null}\n                        onMouseOut={onMouseOut ? e =>\n                        {\n                            const value = e.target['value'] || (e.target['value'] = {});\n                            value.type = EVENT_SOURCE_BACKWARD_ENDPOINT;\n                            onMouseOut(e);\n                        } : null}\n                        pointerEvents={pointerEvents} />}\n                {EdgeLabelRenderer &&\n                    <EdgeLabelRenderer\n                        position={centerPoint}\n                        labels={label.split('\\n')}\n                        direction={direction}\n                        reverse={reverseLabel}\n                        color={color}\n                        onMouseOver={onMouseOver ? e => \n                        {\n                            const value = e.target['value'] || (e.target['value'] = {});\n                            value.type = EVENT_SOURCE_LABEL;\n                            onMouseOver(e);\n                        } : null}\n                        onMouseOut={onMouseOut ? e =>\n                        {\n                            const value = e.target['value'] || (e.target['value'] = {});\n                            value.type = EVENT_SOURCE_LABEL;\n                            onMouseOut(e);\n                        } : null}\n                        pointerEvents={pointerEvents} />}\n            </g>\n        );\n    }\n}\n\nexport default EdgeRenderer;\n","import GraphNode from './element/GraphNode.js';\nimport GraphEdge from './element/GraphEdge.js';\nimport { guid, stringHash } from 'util/MathHelper.js';\n\n/**\n * A class that represents a graph that coordinates nodes and edges.\n */\nclass NodeGraph\n{\n    /**\n     * Create a NodeGraph with the respective node and edge classes.\n     * @param {Class} [nodeClass=GraphNode] The class that represents a node.\n     * @param {Class} [edgeClass=GraphEdge] The class that represents an edge.\n     */\n    constructor(nodeClass = GraphNode, edgeClass = GraphEdge)\n    {\n        this._nodeClass = nodeClass;\n        this._edgeClass = edgeClass;\n\n        this._nodeMapping = new Map();\n        this._edgeMapping = new Map();\n    }\n\n    /**\n     * Removes all nodes and edges from the graph.\n     */\n    clear()\n    {\n        this.clearEdges();\n        this.clearNodes();\n    }\n\n    /**\n     * Checks whether there exists any number of nodes or edges.\n     * @returns {Boolean} Whether the graph is empty.\n     */\n    isEmpty()\n    {\n        return this._nodeMapping.size <= 0 && this._edgeMapping.size <= 0;\n    }\n\n    /**\n     * Computes the boundaries of the graph that surrounds all nodes and edges. If\n     * the graph is empty, a rectangle at the origin of size 1 is returned.\n     * @returns {Object}    The object which represents the bounding rectangle. It has\n     *                      the properties: minX, minY, maxX, maxY, width, height.\n     */\n    getBoundingRect()\n    {\n        if (this._nodeMapping.size <= 0) return {\n            minX: 0,\n            minY: 0,\n            maxX: 1,\n            maxY: 1,\n            width: 1,\n            height: 1\n        };\n\n        var minNX = Number.MAX_VALUE;\n        var minNY = Number.MAX_VALUE;\n        var maxNX = Number.MIN_VALUE;\n        var maxNY = Number.MIN_VALUE;\n\n        var maxNodeSize = 0;\n        for (const node of this._nodeMapping.values())\n        {\n            const x = node.x;\n            const y = node.y;\n            const size = node.getNodeSize();\n            if (size > maxNodeSize) maxNodeSize = size;\n\n            minNX = Math.min(minNX, x);\n            maxNX = Math.max(maxNX, x);\n\n            minNY = Math.min(minNY, y);\n            maxNY = Math.max(maxNY, y);\n        }\n\n        minNX -= maxNodeSize;\n        minNY -= maxNodeSize;\n        maxNX += maxNodeSize;\n        maxNY += maxNodeSize;\n\n        var minEX = Number.MAX_VALUE;\n        var minEY = Number.MAX_VALUE;\n        var maxEX = Number.MIN_VALUE;\n        var maxEY = Number.MIN_VALUE;\n\n        const startPoint = { x: 0, y: 0 };\n        const endPoint = { x: 0, y: 0 };\n        const centerPoint = { x: 0, y: 0 };\n        for (const edge of this._edgeMapping.values())\n        {\n            //Will store into point objects...\n            edge.getStartPoint(startPoint);\n            edge.getEndPoint(endPoint);\n            edge.getCenterPoint(centerPoint);\n\n            const sx = startPoint.x;\n            const sy = startPoint.y;\n            const ex = endPoint.x;\n            const ey = endPoint.y;\n            const cx = centerPoint.x;\n            const cy = centerPoint.y;\n\n            minEX = Math.min(minEX, sx, ex, cx);\n            maxEX = Math.max(maxEX, sx, ex, cx);\n\n            minEY = Math.min(minEY, sy, ey, cy);\n            maxEY = Math.max(maxEY, sy, ey, cy);\n        }\n\n        const result = {\n            minX: Math.min(minNX, minEX),\n            minY: Math.min(minNY, minEY),\n            maxX: Math.max(maxNX, maxEX),\n            maxY: Math.max(maxNY, maxEY),\n            width: 0,\n            height: 0\n        };\n        result.width = result.maxX - result.minX;\n        result.height = result.maxY - result.minY;\n        return result;\n    }\n\n    /**\n     * Computes a unique and persistent hash code that describes the current\n     * state.\n     * @param  {Boolean} [usePosition=true] Whether to consider the positioning as\n     *                                      part of the graph's state.\n     * @returns {Number}                    the hash code.\n     */\n    getHashCode(usePosition = true)\n    {\n        let string = '';\n        for (const node of this._nodeMapping.values())\n        {\n            string += node.getHashString(usePosition) + ',';\n        }\n        string += '|';\n        for (const edge of this._edgeMapping.values())\n        {\n            string += edge.getHashString(usePosition) + ',';\n        }\n        return stringHash(string);\n    }\n\n    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= NODES\n\n    /**\n     * Create node for graph.\n     * @param  {Number} [x=0]       the initial x position\n     * @param  {Number} [y=0]       the initial y position\n     * @param  {String} [id=null]   the new node id (will be generated if null)\n     * @returns {GraphNdoe}         the new node\n     */\n    createNode(x = 0, y = 0, id = null)\n    {\n        return this.addNode(new (this._nodeClass)(id || guid(), x, y));\n    }\n\n    /**\n     * Add existing node to the graph. Any edges connected to the node are NOT\n     * deleted in the process. (so pls delete them first.)\n     * @param {GraphNode} node The node to be added.\n     * @returns {GraphNode} The node that was added to the graph.\n     */\n    addNode(node)\n    {\n        if (!node.getGraphElementID()) node.setGraphElementID(guid());\n        this._nodeMapping.set(node.getGraphElementID(), node);\n        return node;\n    }\n\n    /**\n     * Delete node from graph. Any edges whose source is the target node are also\n     * deleted.\n     * @param  {GraphNode} node        Target node to be deleted.\n     */\n    deleteNode(node)\n    {\n        const elementID = node.getGraphElementID();\n        if (this._nodeMapping.has(elementID))\n        {\n            this._nodeMapping.delete(elementID);\n\n            const nullSourceEdges = [];\n            //Find connected edges without sources...\n            for (const edge of this.getEdges())\n            {\n                if (edge.getEdgeFrom() === node)\n                {\n                    nullSourceEdges.push(edge);\n                }\n                else if (edge.getEdgeTo() === node)\n                {\n                    edge.setEdgeTo(null);\n                }\n            }\n            //Delete sourceless edges...\n            for (const edge of nullSourceEdges)\n            {\n                this.deleteEdge(edge);\n            }\n        }\n    }\n\n    clearNodes() { this._nodeMapping.clear(); }\n\n    getNodeByElementID(elementID)\n    {\n        if (this._nodeMapping.has(elementID))\n        {\n            return this._nodeMapping.get(elementID);\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    getNodesByLabel(label, dst = [])\n    {\n        for (const node of this.getNodes())\n        {\n            if (node.getNodeLabel() === label)\n            {\n                dst.push(node);\n            }\n        }\n        return dst;\n    }\n\n    getNodes() { return Array.from(this._nodeMapping.values()); }\n    getNodeCount() { return this._nodeMapping.size; }\n    getNodeClass() { return this._nodeClass; }\n\n    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= EDGES\n\n    /**\n     * This is more like addEdge() without adding it to the graph and just returns the result.\n     * This should only be called once when completing an edge.\n     * @deprecated\n     */\n    formatEdge(edge)\n    {\n        return edge;\n    }\n\n    /**\n     * Create edge for graph. The id argument can be used to set the id to a\n     * pre-defined value instead of generating a new one.\n     * @param  {GraphNode} from                     the source graph node for the edge\n     * @param  {GraphNode|InputPointer} [to=null]   the destination graph node for the edge\n     * @param  {String} [id=null]                   the new edge id (will be generated if null)\n     * @returns {GraphEdge}                         the new edge\n     */\n    createEdge(from, to = null, id = null)\n    {\n        return this.addEdge(new (this._edgeClass)(id || guid(), from, to));\n    }\n\n    /**\n     * Add existing edge to the graph.\n     * \n     * Assumes that the passed-in edge does not have conflicting id's within this graph.\n     * @param {GraphEdge} edge    the edge to be added.\n     * @returns {GraphEdge}       the edge that was added to the graph.\n     */\n    addEdge(edge)\n    {\n        if (!edge.getGraphElementID()) edge.setGraphElementID(guid());\n        this._edgeMapping.set(edge.getGraphElementID(), edge);\n        return edge;\n    }\n\n    /**\n     * Delete edge from graph. The from and to nodes of the target edge are not\n     * modified.\n     * @param  {GraphEdge} edge      target edge to be deleted.\n     */\n    deleteEdge(edge)\n    {\n        const elementID = edge.getGraphElementID();\n        if (this._edgeMapping.has(elementID))\n        {\n            this._edgeMapping.delete(elementID);\n        }\n    }\n\n    clearEdges() { this._edgeMapping.clear(); }\n\n    getEdgeByElementID(elementID)\n    {\n        if (this._edgeMapping.has(elementID))\n        {\n            return this._edgeMapping.get(elementID);\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    getEdgesByLabel(label, dst = [])\n    {\n        for (const edge of this.getEdges())\n        {\n            if (edge.getEdgeLabel() === label)\n            {\n                dst.push(edge);\n            }\n        }\n        return dst;\n    }\n\n    getEdges() { return Array.from(this._edgeMapping.values()); }\n    getEdgeCount() { return this._edgeMapping.size; }\n    getEdgeClass() { return this._edgeClass; }\n}\n\nexport default NodeGraph;\n","import GraphEdge from './GraphEdge.js';\nimport { getDirectionalVector, getMidPoint } from 'util/MathHelper.js';\n\n/**\n * A class that represents the curved edge elements of a graph.\n * \n * @see {@link NodeGraph}\n * @extends GraphEdge\n */\nclass QuadraticEdge extends GraphEdge\n{\n    /**\n     * Creates a quadratic edge with the unique id.\n     * @constructor\n     * @param {String} id           The element id for this node.\n     * @param {GraphNode} from      The from node of the edge.\n     * @param {GraphNode} [to=null] The to node of the edge.\n     */\n    constructor(id, from, to = null)\n    {\n        super(id, from, to);\n\n        //radians = the angle in radians, where 0 is the normal of midpoint\n        //length = the distance from midpoint\n        this._quad = {\n            radians: 0,\n            length: to ? 0 : this.getPlaceholderLength(),\n            coords: { x: 0, y: 0 }\n        };\n    }\n\n    /** @override */\n    setEdgeTo(node)\n    {\n        const prevNode = this._to;\n        if (node !== prevNode)\n        {\n            const result = super.setEdgeTo(node);\n            if (!node)\n            {\n                this.setQuadraticByCoords(prevNode.x, prevNode.y);\n            }\n            else if (node === this._from)\n            {\n                this._quad.length = this._from.getNodeSize() + this.getPlaceholderLength();\n            }\n            return result;\n        }\n        return super.setEdgeTo(node);\n    }\n\n    /**\n     * Set the angle of the curve in radians\n     * @param {Number} radians the radians the quadratic should be curved\n     * @returns {this}\n     */\n    setQuadraticRadians(radians)\n    {\n        this._quad.radians = radians;\n        return this;\n    }\n\n    /**\n     * Set the distance of the curve from the midpoint\n     * @param {Number} length the \"height\" of the curve\n     * @returns {this}\n     */\n    setQuadraticLength(length)\n    {\n        this._quad.length = length;\n        return this;\n    }\n\n    /**\n     * Calculates and sets the quadratic vertex to pass through the position.\n     * This will update the radians and length of the curve.\n     * @param {Number} x the x coordinate\n     * @param {Number} y the y coordinate\n     * @returns {this}\n     */\n    setQuadraticByCoords(x, y)\n    {\n        const from = this._from;\n        const to = this._to;\n\n        if (!to)\n        {\n            /*\n            Quad is re-used to determine edge angle for placeholder.\n            This can be used specifically for quad since regular quad is\n            dependent on edge to to NOT be null, which placeholder assumes\n            to BE null. Also, quad.length is ignored, because the\n            length should always be getPlaceholderLength(). This is\n            resolved by getStartPoint(), getEndPoint(), etc.\n            */\n            const dx = this._from.x - x;\n            const dy = this._from.y - y;\n            const radians = -Math.atan2(dx, dy) - (Math.PI / 2);\n            this._quad.radians = radians;\n            return this;\n        }\n\n        const fromx = from.x;\n        const fromy = from.y;\n        const tox = to.x;\n        const toy = to.y;\n\n        let dx = tox - fromx;\n        let dy = toy - fromy;\n        const midpointx = fromx + dx / 2;\n        const midpointy = fromy + dy / 2;\n\n        // Remember: y-axis is flipped because canvas coord-space is -y => +y\n        // Therefore, dy needs to be flipped\n        const angleOffset = Math.atan2(-dy, dx);\n        dx = x - midpointx;\n        dy = y - midpointy;\n\n        const PI = Math.PI;\n        const HALFPI = PI / 2;\n        // 0 rad = to the right\n        // Also: angleOffset is the offset from midpoint angle, the orthogonal base vector\n        // This is because the from and to could be flipped, and\n        // therefore give a negative, or at least a reversed angle.\n        let radians = Math.atan2(dy, dx) + angleOffset;\n        let length = Math.sqrt(dx * dx + dy * dy);\n        if (length < 0) length = 0;\n\n        // -PI / 2 is outward\n        const outrad = radians - (-HALFPI);\n        // PI / 2 is inward\n        const inrad = radians - (HALFPI);\n        // TODO: Should be dependent on length, instead of a constant.\n        const maxdr = PI / 20;\n\n        if (Math.abs(length) < 8)\n        {\n            radians = 0;\n            length = 0;\n        }\n        else if (outrad < maxdr && outrad > -maxdr)\n        {\n            // -PI / 2 is outward\n            radians = -HALFPI;\n        }\n        else if (-inrad < maxdr && -inrad > -maxdr)\n        {\n            // PI / 2 is inward\n            radians = HALFPI;\n        }\n\n        this._quad.radians = radians;\n        this._quad.length = length;\n        return this;\n    }\n\n    getQuadraticLength() { return this._quad.length; }\n    getQuadraticRadians() { return this._quad.radians; }\n    getQuadratic() { return this._quad; }\n    isQuadratic() { return !this.isPlaceholder() && this._quad.length !== 0; }\n\n    getQuadraticAsCoords()\n    {\n        const from = this._from;\n        const to = this._to;\n        const dst = this._quad.coords;\n        if (from == null || to == null)\n        {\n            dst.x = 0;\n            dst.y = 0;\n        }\n        else\n        {\n            /*\n            //To mark dirty...\n            _capture: {\n                fx: 0, fy: 0,\n                tx: 0, ty: 0,\n                ql: 0, qr: 0\n            }\n            */\n            getDirectionalVector(from.x, from.y, to.x, to.y, this._quad.length, this._quad.radians, dst);\n        }\n        return dst;\n    }\n\n    /** @override */\n    getEdgeDirection()\n    {\n        let result = 0;\n        if (this.isQuadratic())\n        {\n            const coords = this.getQuadraticAsCoords();\n            result = Math.atan2(coords.y, coords.x) + Math.PI / 2;\n        }\n        else\n        {\n            result = super.getEdgeDirection();\n        }\n\n        return result;\n    }\n\n    /** @override */\n    getStartPoint(dst = { x: 0, y: 0 })\n    {\n        const from = this._from;\n        const to = this._to;\n\n        if (!from) throw new Error('Source of edge cannot be null.');\n        if (!to)\n        {\n            //Make sure to use quad for placeholder direction\n            const radians = this._quad.radians;\n            const px = Math.cos(radians);\n            const py = Math.sin(radians);\n            const nodeSize = from.getNodeSize();\n            dst.x = from.x + px * nodeSize;\n            dst.y = from.y + py * nodeSize;\n            return dst;\n        }\n\n        //Check if edge is following something other than a node...then remain flat\n        if (typeof to['getNodeSize'] !== 'function' || !this.isQuadratic())\n        {\n            getDirectionalVector(from.x, from.y, to.x, to.y, from.getNodeSize(), 0, dst);\n            dst.x += from.x;\n            dst.y += from.y;\n            return dst;\n        }\n        else\n        {\n            getMidPoint(from.x, from.y, to.x, to.y, dst);\n            const qcoords = this.getQuadraticAsCoords();\n            const qx = dst.x + qcoords.x;\n            const qy = dst.y + qcoords.y;\n            getDirectionalVector(from.x, from.y, qx, qy, from.getNodeSize(), this.isSelfLoop() ? (Math.PI / 4) : 0, dst);\n            dst.x += from.x;\n            dst.y += from.y;\n            return dst;\n        }\n    }\n\n    /** @override */\n    getCenterPoint(dst = { x: 0, y: 0 })\n    {\n        const from = this._from;\n        const to = this._to;\n\n        if (!from) throw new Error('Source of edge cannot be null.');\n        if (!to)\n        {\n            //Make sure to use quad for placeholder direction (not magnitude)\n            const px = Math.cos(this._quad.radians);\n            const py = Math.sin(this._quad.radians);\n            const placeholderLength = from.getNodeSize() + this.getPlaceholderLength() / 2;\n            dst.x = from.x + px * placeholderLength;\n            dst.y = from.y + py * placeholderLength;\n            return dst;\n        }\n\n        getMidPoint(from.x, from.y, to.x, to.y, dst);\n\n        if (this.isQuadratic())\n        {\n            const qcoords = this.getQuadraticAsCoords();\n            dst.x += qcoords.x;\n            dst.y += qcoords.y;\n        }\n\n        return dst;\n    }\n\n    /** @override */\n    getEndPoint(dst = { x: 0, y: 0 })\n    {\n        const from = this._from;\n        const to = this._to;\n\n        if (!from) throw new Error('Source of edge cannot be null.');\n        if (!to)\n        {\n            //Make sure to use quadCoords for placeholder direction (not magnitude)\n            const radians = this._quad.radians;\n            const px = Math.cos(radians);\n            const py = Math.sin(radians);\n            const placeholderLength = from.getNodeSize() + this.getPlaceholderLength();\n            dst.x = from.x + px * placeholderLength;\n            dst.y = from.y + py * placeholderLength;\n            return dst;\n        }\n\n        //Get end point for non-nodes...\n        if (typeof to['getNodeSize'] !== 'function')\n        {\n            return to;\n        }\n        //Get end point for straight edges...\n        else if (!this.isQuadratic())\n        {\n            getDirectionalVector(to.x, to.y, from.x, from.y, to.getNodeSize(), 0, dst);\n            dst.x += to.x;\n            dst.y += to.y;\n            return dst;\n        }\n        //Get end point for quadratics...\n        else\n        {\n            getMidPoint(from.x, from.y, to.x, to.y, dst);\n            const qcoords = this.getQuadraticAsCoords();\n            const qx = dst.x + qcoords.x;\n            const qy = dst.y + qcoords.y;\n            getDirectionalVector(to.x, to.y, qx, qy, to.getNodeSize(), this.isSelfLoop() ? -(Math.PI / 4.0) : 0, dst);\n            dst.x += to.x;\n            dst.y += to.y;\n            return dst;\n        }\n    }\n\n    /** @override */\n    getHashString(usePosition = true)\n    {\n        if (usePosition)\n        {\n            return super.getHashString(usePosition) + ':' + this._quad.radians + ',' + this._quad.length;\n        }\n        else\n        {\n            return super.getHashString(usePosition);\n        }\n    }\n}\n\nexport default QuadraticEdge;\n","import AbstractInputHandler from 'util/input/AbstractInputHandler.js';\nimport { lerp } from 'util/MathHelper.js';\nimport { EVENT_SOURCE_NODE } from 'graph2/renderer/NodeRenderer.js';\n\nexport const GRAPH_EVENT_NODE_CREATE = 'node-create';\nexport const GRAPH_EVENT_NODE_DELETE = 'node-delete';\nexport const GRAPH_EVENT_NODE_DELETE_ALL = 'node-delete-all';\nexport const GRAPH_EVENT_NODE_LABEL_CHANGE = 'edge-label-change';\nexport const GRAPH_EVENT_NODE_MOVE = 'node-move';\nexport const GRAPH_EVENT_NODE_MOVE_ALL = 'node-move-all';\nexport const GRAPH_EVENT_NODE_EDIT_WHILE_DELETE = 'error-node-edit-while-delete';\n\nconst NODE_POSITION_INTERPOLATION_DELTA = 0.6;\nconst SHOULD_DELETE_NODE_WITH_EMPTY_LABEL = false;\n\nclass GraphNodeInputHandler extends AbstractInputHandler\n{\n    constructor(inputController, graphController)\n    {\n        super();\n        this._inputController = inputController;\n        this._graphController = graphController;\n\n        this._cachedPosition = { x: 0, y: 0 };\n    }\n\n    /** @override */\n    onInputEvent(pointer)\n    {\n        const inputController = this._inputController;\n        const currentTargetType = inputController.getCurrentTargetType();\n\n        if (inputController.isTrashMode())\n        {\n            if (currentTargetType === EVENT_SOURCE_NODE)\n            {\n                const currentTargetSource = inputController.getCurrentTargetSource();\n                const graphController = this._graphController;\n                graphController.getGraph().deleteNode(currentTargetSource);\n                graphController.emitGraphEvent(GRAPH_EVENT_NODE_DELETE, { target: currentTargetSource });\n                return true;\n            }\n        }\n\n        if (!inputController.isMoveMode(pointer.getInputAdapter()) && currentTargetType === EVENT_SOURCE_NODE)\n        {\n            const currentTargetSource = inputController.getCurrentTargetSource();\n            const graphController = this._graphController;\n            graphController.openLabelEditor(currentTargetSource, currentTargetSource.getNodeLabel(),\n                (target, value, hasChanged) => \n                {\n                    if (SHOULD_DELETE_NODE_WITH_EMPTY_LABEL && !value)\n                    {\n                        graphController.getGraph().deleteNode(currentTargetSource);\n                        graphController.emitGraphEvent(GRAPH_EVENT_NODE_DELETE, { target: currentTargetSource });\n                    }\n                    else if (hasChanged)\n                    {\n                        graphController.emitGraphEvent(GRAPH_EVENT_NODE_LABEL_CHANGE, { target: currentTargetSource });\n                    }\n                });\n            return true;\n        }\n\n        return false;\n    }\n\n    /** @override */\n    onAltInputEvent(pointer)\n    {\n        return this.onInputEvent(pointer);\n    }\n\n    /** @override */\n    onDblInputEvent(pointer)\n    {\n        const inputController = this._inputController;\n        if (inputController.hasActiveTarget()) return false;\n        if (inputController.isTrashMode()) return false;\n\n        const currentTargetType = inputController.getCurrentTargetType();\n        if (!currentTargetType)\n        {\n            const graphController = this._graphController;\n            const labelFormatter = graphController.getLabelFormatter();\n            const graph = graphController.getGraph();\n            const node = graph.createNode(pointer.x, pointer.y);\n            if (labelFormatter)\n            {\n                node.setNodeLabel(labelFormatter.getDefaultNodeLabel());\n            }\n            graphController.emitGraphEvent(GRAPH_EVENT_NODE_CREATE, { target: node });\n        }\n    }\n\n    /** @override */\n    onDragStart(pointer)\n    {\n        const inputController = this._inputController;\n        if (inputController.hasActiveTarget()) return false;\n        if (inputController.isTrashMode())\n        {\n            // Don't delete stuff if moving...\n            this._graphController.emitGraphEvent(GRAPH_EVENT_NODE_EDIT_WHILE_DELETE);\n            return false;\n        }\n        \n        const currentTargetType = inputController.getCurrentTargetType();\n        if (inputController.isMoveMode(pointer.getInputAdapter()) && currentTargetType === EVENT_SOURCE_NODE)\n        {\n            const selectionBox = inputController.getSelectionBox();\n            const currentTargetSource = inputController.getCurrentTargetSource();\n            if (selectionBox && selectionBox.hasSelection())\n            {\n                if (!selectionBox.isTargetInSelection(currentTargetSource))\n                {\n                    selectionBox.clearSelection();\n                }\n                else\n                {\n                    this._cachedPosition.x = pointer.x;\n                    this._cachedPosition.y = pointer.y;\n                }\n            }\n            inputController.bindActiveTarget(currentTargetSource, currentTargetType, false);\n            return true;\n        }\n\n        return false;\n    }\n\n    /** @override */\n    onDragMove(pointer)\n    {\n        const inputController = this._inputController;\n        const selectionBox = inputController.getSelectionBox();\n        const targetSource = inputController.getActiveTargetSource();\n        if (selectionBox && selectionBox.hasSelection())\n        {\n            const dx = pointer.x - this._cachedPosition.x;\n            const dy = pointer.y - this._cachedPosition.y;\n            for (const node of selectionBox.getSelection())\n            {\n                node.x += dx;\n                node.y += dy;\n            }\n            this._cachedPosition.x = pointer.x;\n            this._cachedPosition.y = pointer.y;\n        }\n        else\n        {\n            this.moveNodeTo(this._graphController.getGraph(), targetSource, pointer.x, pointer.y);\n        }\n    }\n\n    /** @override */\n    onDragStop(pointer)\n    {\n        const inputController = this._inputController;\n        const graphController = this._graphController;\n        const selectionBox = inputController.getSelectionBox();\n\n        const targetSource = inputController.getActiveTargetSource();\n        inputController.unbindActiveTarget();\n\n        if (inputController.isTrashMode())\n        {\n            if (selectionBox.hasSelection())\n            {\n                const graph = graphController.getGraph();\n                const dst = [];\n                for (const node of selectionBox.getSelection())\n                {\n                    graph.deleteNode(node);\n                    dst.push(node);\n                }\n                selectionBox.clearSelection();\n                graphController.emitGraphEvent(GRAPH_EVENT_NODE_DELETE_ALL, { target: dst });\n            }\n            else\n            {\n                graphController.getGraph().deleteNode(targetSource);\n                graphController.emitGraphEvent(GRAPH_EVENT_NODE_DELETE, { target: targetSource });\n            }\n            return;\n        }\n\n        if (selectionBox.hasSelection())\n        {\n            graphController.emitGraphEvent(GRAPH_EVENT_NODE_MOVE_ALL, { target: selectionBox.getSelection() });\n        }\n        else\n        {\n            graphController.emitGraphEvent(GRAPH_EVENT_NODE_MOVE, { target: targetSource });\n        }\n    }\n\n    moveNodeTo(graph, node, x, y)\n    {\n        x = lerp(node.x, x, NODE_POSITION_INTERPOLATION_DELTA);\n        y = lerp(node.y, y, NODE_POSITION_INTERPOLATION_DELTA);\n\n        const nodeSize = node.getNodeSize();\n        for (const other of graph.getNodes())\n        {\n            //Update node collision\n            if (node === other) continue;\n\n            const dx = x - other.x;\n            const dy = y - other.y;\n            const angle = Math.atan2(dy, dx);\n\n            const diameter = (nodeSize * 2);\n            const nextDX = other.x + (Math.cos(angle) * diameter) - x;\n            const nextDY = other.y + (Math.sin(angle) * diameter) - y;\n\n            if (dx * dx + dy * dy < nodeSize * nodeSize * 4)\n            {\n                x += nextDX;\n                y += nextDY;\n            }\n        }\n\n        node.x = x;\n        node.y = y;\n    }\n}\n\nexport default GraphNodeInputHandler;","import AbstractInputHandler from 'util/input/AbstractInputHandler.js';\nimport { lerp } from 'util/MathHelper.js';\n\nimport { EVENT_SOURCE_FORWARD_ENDPOINT, EVENT_SOURCE_EDGE, EVENT_SOURCE_LABEL } from 'graph2/renderer/EdgeRenderer.js';\nimport { EVENT_SOURCE_NODE } from 'graph2/renderer/NodeRenderer.js';\n\nexport const GRAPH_EVENT_EDGE_CREATE = 'edge-create';\nexport const GRAPH_EVENT_EDGE_DELETE = 'edge-delete';\nexport const GRAPH_EVENT_EDGE_LABEL_CHANGE = 'edge-label-change';\nexport const GRAPH_EVENT_EDGE_TO_CHANGE = 'edge-to-change';\nexport const GRAPH_EVENT_EDGE_QUAD_CHANGE = 'edge-quad-change';\nexport const GRAPH_EVENT_EDGE_EDIT_WHILE_DELETE = 'error-edge-edit-while-delete';\n\nconst EDGE_POSITION_INTERPOLATION_DELTA = 0.6;\n\nclass GraphEdgeInputHandler extends AbstractInputHandler\n{\n    constructor(inputController, graphController)\n    {\n        super();\n\n        this._inputController = inputController;\n        this._graphController = graphController;\n\n        this._cachedEdgeQuads = {\n            radians: 0,\n            length: 0\n        };\n        this._cachedEdgeTo = null;\n        this._cachedPointer = { x: 0, y: 0 };\n        this._newEdge = false;\n\n        this._shouldDeleteEdgePlaceholder = false;\n        this._shouldDeleteEdgeWithEmptyLabel = false;\n    }\n\n    setShouldDeleteEdgePlaceholder(flag)\n    {\n        this._shouldDeleteEdgePlaceholder = flag;\n        return this;\n    }\n\n    setShouldDeleteEdgeWithEmptyLabel(flag)\n    {\n        this._shouldDeleteEdgeWithEmptyLabel = flag;\n        return this;\n    }\n\n    /** @override */\n    onInputEvent(pointer)\n    {\n        const inputController = this._inputController;\n        const currentTargetType = inputController.getCurrentTargetType();\n\n        if (inputController.isTrashMode())\n        {\n            if (currentTargetType === EVENT_SOURCE_EDGE ||\n                currentTargetType === EVENT_SOURCE_FORWARD_ENDPOINT ||\n                currentTargetType === EVENT_SOURCE_LABEL)\n            {\n                const currentTargetSource = inputController.getCurrentTargetSource();\n                const graphController = this._graphController;\n                graphController.getGraph().deleteEdge(currentTargetSource);\n                graphController.emitGraphEvent(GRAPH_EVENT_EDGE_DELETE, {target: currentTargetSource});\n                return true;\n            }\n        }\n\n        if (currentTargetType === EVENT_SOURCE_LABEL || currentTargetType === EVENT_SOURCE_EDGE)\n        {\n            const currentTargetSource = inputController.getCurrentTargetSource();\n            const graphController = this._graphController;\n            graphController.openLabelEditor(currentTargetSource, currentTargetSource.getEdgeLabel(),\n                (target, value, hasChanged) => \n                {\n                    if (this._shouldDeleteEdgeWithEmptyLabel && !value)\n                    {\n                        graphController.getGraph().deleteEdge(currentTargetSource);\n                        graphController.emitGraphEvent(GRAPH_EVENT_EDGE_DELETE, {target: currentTargetSource});\n                    }\n                    else if (hasChanged)\n                    {\n                        graphController.emitGraphEvent(GRAPH_EVENT_EDGE_LABEL_CHANGE, {target: currentTargetSource});\n                    }\n                });\n            return true;\n        }\n\n        return false;\n    }\n\n    /** @override */\n    onAltInputEvent(pointer)\n    {\n        return this.onInputEvent(pointer);\n    }\n\n    /** @override */\n    onDragStart(pointer)\n    {\n        const inputController = this._inputController;\n        if (inputController.hasActiveTarget()) return false;\n        if (inputController.isTrashMode())\n        {\n            //Don't delete stuff if moving...\n            this._graphController.emitGraphEvent(GRAPH_EVENT_EDGE_EDIT_WHILE_DELETE);\n            return false;\n        }\n\n        const currentTargetType = inputController.getCurrentTargetType();\n        if (!inputController.isMoveMode(pointer.getInputAdapter()) && currentTargetType === EVENT_SOURCE_NODE)\n        {\n            const graphController = this._graphController;\n            const graph = graphController.getGraph();\n\n            const currentTargetSource = inputController.getCurrentTargetSource();\n\n            this._cachedEdgeQuads.radians = 0;\n            this._cachedEdgeQuads.length = 0;\n            this._cachedEdgeTo = null;\n            this._newEdge = true;\n            this._cachedPointer.x = pointer.x;\n            this._cachedPointer.y = pointer.y;\n\n            const targetEdge = graph.createEdge(currentTargetSource, this._cachedPointer);\n\n            inputController.bindActiveTarget(targetEdge, EVENT_SOURCE_FORWARD_ENDPOINT, false);\n            inputController.setNodeEventsOnly(true);\n            return true;\n        }\n        else if (currentTargetType === EVENT_SOURCE_FORWARD_ENDPOINT)\n        {\n            const currentTargetSource = inputController.getCurrentTargetSource();\n\n            this._cachedEdgeQuads.radians = currentTargetSource.getQuadraticRadians();\n            this._cachedEdgeQuads.length = currentTargetSource.getQuadraticLength();\n            this._cachedEdgeTo = currentTargetSource.getEdgeTo();\n            this._newEdge = false;\n            this._cachedPointer.x = pointer.x;\n            this._cachedPointer.y = pointer.y;\n\n            currentTargetSource.setQuadraticRadians(0);\n            currentTargetSource.setQuadraticLength(0);\n            currentTargetSource.setEdgeTo(this._cachedPointer);\n\n            inputController.bindActiveTarget(currentTargetSource, currentTargetType, false);\n            inputController.setNodeEventsOnly(true);\n            return true;\n        }\n        else if (currentTargetType === EVENT_SOURCE_EDGE)\n        {\n            const currentTargetSource = inputController.getCurrentTargetSource();\n\n            this._cachedEdgeQuads.radians = currentTargetSource.getQuadraticRadians();\n            this._cachedEdgeQuads.length = currentTargetSource.getQuadraticLength();\n            this._cachedEdgeTo = currentTargetSource.getEdgeTo();\n            this._newEdge = false;\n            this._cachedPointer.x = pointer.x;\n            this._cachedPointer.y = pointer.y;\n\n            inputController.bindActiveTarget(currentTargetSource, currentTargetType, false);\n            return true;\n        }\n\n        return false;\n    }\n\n    /** @override */\n    onDragMove(pointer)\n    {\n        const inputController = this._inputController;\n        const targetSource = inputController.getActiveTargetSource();\n        const targetType = inputController.getActiveTargetType();\n\n        if (targetType === EVENT_SOURCE_EDGE)\n        {\n            targetSource.setQuadraticByCoords(pointer.x, pointer.y);\n        }\n        else if (targetType === EVENT_SOURCE_FORWARD_ENDPOINT)\n        {\n            this.handleDragMoveForEndpoint(targetSource, targetType, pointer, inputController);\n        }\n    }\n\n    handleDragMoveForEndpoint(targetSource, targetType, pointer, inputController)\n    {\n        const immediateTargetType = inputController.getImmediateTargetType();\n        if (immediateTargetType === EVENT_SOURCE_NODE)\n        {\n            const immediateTargetSource = inputController.getImmediateTargetSource();\n            \n            // Restore the previously cached edge quadratics\n            if (targetSource.getEdgeTo() === this._cachedEdgeTo)\n            {\n                targetSource.setQuadraticRadians(this._cachedEdgeQuads.radians);\n                targetSource.setQuadraticLength(this._cachedEdgeQuads.length);\n            }\n            // Angle the self-loop edge towards the pointer\n            else if (targetSource.getEdgeFrom() === immediateTargetSource)\n            {\n                const from = targetSource.getEdgeFrom();\n                const dx = from.x - pointer.x;\n                const dy = from.y - pointer.y;\n                const radians = Math.PI + Math.atan2(dy, dx);\n                targetSource.setQuadraticRadians(radians);\n                targetSource.setEdgeTo(immediateTargetSource);\n            }\n            else\n            {\n                targetSource.setQuadraticRadians(0);\n                targetSource.setQuadraticLength(0);\n                targetSource.setEdgeTo(immediateTargetSource);\n            }\n        }\n        else\n        {\n            this._cachedPointer.x = lerp(this._cachedPointer.x, pointer.x, EDGE_POSITION_INTERPOLATION_DELTA);\n            this._cachedPointer.y = lerp(this._cachedPointer.y, pointer.y, EDGE_POSITION_INTERPOLATION_DELTA);\n\n            if (targetSource.getEdgeTo() !== this._cachedPointer)\n            {\n                targetSource.setQuadraticRadians(0);\n                targetSource.setQuadraticLength(0);\n\n                targetSource.setEdgeTo(this._cachedPointer);\n            }\n        }\n    }\n\n    /** @override */\n    onDragStop(pointer)\n    {\n        const inputController = this._inputController;\n        const targetSource = inputController.getActiveTargetSource();\n        const targetType = inputController.getActiveTargetType();\n        const isNewEdge = this._newEdge;\n\n        inputController.unbindActiveTarget();\n        if (targetType === EVENT_SOURCE_FORWARD_ENDPOINT)\n        {\n            inputController.setNodeEventsOnly(false);\n        }\n\n        const graphController = this._graphController;\n        if (inputController.isTrashMode())\n        {\n            graphController.getGraph().deleteEdge(targetSource);\n            graphController.emitGraphEvent(GRAPH_EVENT_EDGE_DELETE, {target: targetSource});\n            return;\n        }\n\n        if (targetType === EVENT_SOURCE_EDGE)\n        {\n            graphController.emitGraphEvent(GRAPH_EVENT_EDGE_QUAD_CHANGE, {target: targetSource});\n        }\n        else\n        {\n            const edgeTo = targetSource.getEdgeTo();\n            if (!edgeTo || edgeTo === this._cachedPointer)\n            {\n                if (this._shouldDeleteEdgePlaceholder)\n                {\n                    graphController.getGraph().deleteEdge(targetSource);\n                    graphController.emitGraphEvent(GRAPH_EVENT_EDGE_DELETE, {target: targetSource});\n                    return;\n                }\n                else\n                {\n                    targetSource.setEdgeTo(null);\n\n                    if (isNewEdge)\n                    {\n                        const labelFormatter = graphController.getLabelFormatter();\n                        if (labelFormatter)\n                        {\n                            targetSource.setEdgeLabel(labelFormatter.getDefaultEdgeLabel());\n                        }\n                        graphController.emitGraphEvent(GRAPH_EVENT_EDGE_CREATE, {target: targetSource});\n                    }\n                    else\n                    {\n                        graphController.emitGraphEvent(GRAPH_EVENT_EDGE_TO_CHANGE, {target: targetSource});\n                    }\n                }\n            }\n            else if (edgeTo !== this._cachedEdgeTo)\n            {\n                const labelFormatter = graphController.getLabelFormatter();\n                if (isNewEdge && labelFormatter)\n                {\n                    targetSource.setEdgeLabel(labelFormatter.getDefaultEdgeLabel());\n                }\n                graphController.openLabelEditor(targetSource, isNewEdge ? null : targetSource.getEdgeLabel(),\n                    (target, value, hasChanged) => \n                    {\n                        if (this._shouldDeleteEdgeWithEmptyLabel && !value)\n                        {\n                            graphController.getGraph().deleteEdge(targetSource);\n                            graphController.emitGraphEvent(GRAPH_EVENT_EDGE_DELETE, {target: targetSource});\n                        }\n                        else if (isNewEdge)\n                        {\n                            graphController.emitGraphEvent(GRAPH_EVENT_EDGE_CREATE, {target: targetSource});\n                        }\n                        else if (hasChanged)\n                        {\n                            graphController.emitGraphEvent(GRAPH_EVENT_EDGE_TO_CHANGE, {target: targetSource});\n                        }\n                    });\n            }\n        }\n    }\n}\n\nexport default GraphEdgeInputHandler;","import React from 'react';\n\nexport const EVENT_SOURCE_START_MARKER = 'start-marker';\n\nclass StartMarkerRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const position = this.props.position;\n        const radians = this.props.radians || Math.PI;\n        const offset = this.props.offset || 0;\n        const size = this.props.size || 24;\n        const color = this.props.color || '#000000';\n\n        const dx = Math.cos(radians);\n        const dy = Math.sin(radians);\n        const x = position.x + dx * offset;\n        const y = position.y + dy * offset;\n\n        // FIXME: this does not work for ALL arbitrary angles...\n        const radiusX = dx * size;\n        const diameterX = radiusX * 2;\n        // const radiusY = dy * size;\n\n        const onMouseOver = this.props.onMouseOver;\n        const onMouseOut = this.props.onMouseOut;\n        const pointerEvents = this.props.pointerEvents;\n\n        return (\n            <g>\n                <path\n                    d={'M' + x + ' ' + y +\n                        ' L' + (x + diameterX) + ' ' + (y + Math.sin(radians + Math.PI / 2) * size * 2) +\n                        ' L' + (x + diameterX) + ' ' + (y - Math.sin(radians + Math.PI / 2) * size * 2) +\n                        ' Z'}\n                    fill=\"transparent\"\n                    stroke={color}\n                    cursor=\"pointer\"\n                    onMouseOver={onMouseOver ? e =>\n                    {\n                        const value = e.target['value'] || (e.target['value'] = {});\n                        value.type = EVENT_SOURCE_START_MARKER;\n                        onMouseOver(e);\n                    } : null}\n                    onMouseOut={onMouseOut ? e =>\n                    {\n                        const value = e.target['value'] || (e.target['value'] = {});\n                        value.type = EVENT_SOURCE_START_MARKER;\n                        onMouseOut(e);\n                    } : null}\n                    pointerEvents={pointerEvents} />\n            </g>\n        );\n    }\n}\n\nexport default StartMarkerRenderer;\n","import React from 'react';\n\nclass RunningManIcon extends React.PureComponent\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M13.49 5.48c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm-3.6 13.9l1-4.4 2.1 2v6h2v-7.5l-2.1-2 .6-3c1.3 1.5 3.3 2.5 5.5 2.5v-2c-1.9 0-3.5-1-4.3-2.4l-1-1.6c-.4-.6-1-1-1.7-1-.3 0-.5.1-.8.1l-5.2 2.2v4.7h2v-3.4l1.8-.7-1.6 8.1-4.9-1-.4 2 7 1.4z\"/>\n            </svg>\n        );\n    }\n}\nexport default RunningManIcon;\n","import AbstractInputHandler from 'util/input/AbstractInputHandler.js';\nimport { lerp } from 'util/MathHelper.js';\n\nimport { EVENT_SOURCE_START_MARKER } from '../renderer/StartMarkerRenderer.js';\nimport { EVENT_SOURCE_NODE } from '../renderer/NodeRenderer.js';\n\nexport const GRAPH_EVENT_START_MARKER_CHANGE = 'start-marker-change';\n\nconst START_MARKER_POSITION_INTERPOLATION_DELTA = 0.6;\n\nclass GraphStartMarkerInputHandler extends AbstractInputHandler\n{\n    constructor(inputController, graphController)\n    {\n        super();\n\n        this._inputController = inputController;\n        this._graphController = graphController;\n\n        this._ghostMarker = null;\n        this._cachedMarkerTarget = null;\n        this._cachedPointer = { x: 0, y: 0 };\n    }\n\n    /** @override */\n    onDragStart(pointer)\n    {\n        const inputController = this._inputController;\n        const currentTargetType = inputController.getCurrentTargetType();\n\n        if (currentTargetType === EVENT_SOURCE_START_MARKER)\n        {\n            const currentTargetSource = inputController.getCurrentTargetSource();\n            this._cachedMarkerTarget = currentTargetSource;\n            this._cachedPointer.x = pointer.x;\n            this._cachedPointer.y = pointer.y;\n            this._ghostMarker = this._cachedPointer;\n\n            inputController.bindActiveTarget(currentTargetSource, EVENT_SOURCE_START_MARKER, true);\n            inputController.setNodeEventsOnly(true);\n            return true;\n        }\n\n        return false;\n    }\n\n    /** @override */\n    onDragMove(pointer)\n    {\n        const inputController = this._inputController;\n        const targetType = inputController.getActiveTargetType();\n\n        if (targetType === EVENT_SOURCE_START_MARKER)\n        {\n            const immediateTargetType = inputController.getImmediateTargetType();\n            if (immediateTargetType === EVENT_SOURCE_NODE)\n            {\n                const immediateTargetSource = inputController.getImmediateTargetSource();\n\n                this._ghostMarker = immediateTargetSource;\n            }\n            else\n            {\n                this._cachedPointer.x = lerp(this._cachedPointer.x, pointer.x, START_MARKER_POSITION_INTERPOLATION_DELTA);\n                this._cachedPointer.y = lerp(this._cachedPointer.y, pointer.y, START_MARKER_POSITION_INTERPOLATION_DELTA);\n\n                if (this._ghostMarker !== this._cachedPointer)\n                {\n                    this._ghostMarker = this._cachedPointer;\n                }\n            }\n        }\n    }\n\n    /** @override */\n    onDragStop(pointer)\n    {\n        const inputController = this._inputController;\n        const targetType = inputController.getActiveTargetType();\n        inputController.unbindActiveTarget();\n\n        if (targetType === EVENT_SOURCE_START_MARKER)\n        {\n            if (!this._ghostMarker || this._ghostMarker === this._cachedPointer)\n            {\n                // Don't do anything, cause it should already be correct...\n            }\n            else\n            {\n                this._graphController.getGraph().setStartNode(this._ghostMarker);\n                this._graphController.emitGraphEvent(GRAPH_EVENT_START_MARKER_CHANGE, { target: this._ghostMarker });\n            }\n\n            this._ghostMarker = null;\n        }\n    }\n\n    getGhostMarker() { return this._ghostMarker; }\n}\n\nexport default GraphStartMarkerInputHandler;","\nfunction getReachableState(graph)\n{\n    let reachable = [];\n    let startNode = graph.getStartNode();\n    reachable.push(startNode);\n    for(let i = 0; i < reachable.length; i++)\n    {\n        for (const edge of graph.getEdges())\n        {\n            if(edge._from == reachable[i])\n            {\n                if(!reachable.includes(edge._to))\n                {\n                    reachable.push(edge._to);\n                }\n            }\n        }\n    }\n    return reachable;\n}\n\nclass GraphLayout\n{\n    static applyLayout(graph, type='circle')\n    {\n        if (type != 'circle') throw new Error('Invalid layout type');\n        //seperate node to reachable and unreachable\n        const reachableNode= getReachableState(graph);\n        function unreachable(node)\n        {\n            return !reachableNode.includes(node);\n        }\n        const unreachableNode = graph.getNodes().filter(unreachable);\n\n        //get num of nodes\n        const numOfReachable = reachableNode.length;\n        const numOfUnreachable = unreachableNode.length;\n        const numOfNode = graph.getNodes().length;\n        const maxNum = Math.max(numOfReachable, numOfUnreachable);\n        if(numOfNode == 0)\n        {\n            return;\n        }\n        //set radius\n        var radius;\n        if(numOfReachable < 10 && numOfUnreachable < 10)\n        {\n            radius = maxNum/4 * 50 + 30;\n        }\n        else\n        {\n            radius = (maxNum/5) * 40 + 30;\n        }\n\n        let currentStep = 0;\n        if (numOfReachable == 1)\n        {\n            let degree = 2* Math.PI/numOfNode;\n            for(const node of graph.getNodes())\n            {\n                node.y = Math.sin(degree*currentStep + Math.PI)*radius;\n                node.x = Math.cos(degree*currentStep + Math.PI)*radius;\n                currentStep += 1;\n            }\n        }\n        else \n        {\n            const degree_re = 2* Math.PI/numOfReachable;\n            const degree_un = 2* Math.PI/numOfUnreachable;\n\n            currentStep = 0;\n            for(const node of reachableNode)\n            {\n                node.y = Math.sin(degree_re*currentStep + Math.PI)*radius;\n                node.x = Math.cos(degree_re*currentStep + Math.PI)*radius;\n                currentStep += 1;\n            }\n            currentStep = 0;\n            for(const node of unreachableNode)\n            {\n                node.y = Math.sin(degree_un*currentStep + Math.PI)*(radius + 100);\n                node.x = Math.cos(degree_un*currentStep + Math.PI)*(radius + 100);\n                currentStep += 1;\n            }\n        }\n    /*for(const node of graph.getNodes())\n    {\n      node.y = Math.sin(degree*currentStep + Math.PI)*radius;\n      node.x = Math.cos(degree*currentStep + Math.PI)*radius;\n      currentStep += 1\n    }*/\n    }\n\n\n}\n\nexport default GraphLayout;\n","class AbstractEventHandler\n{\n    constructor() {}\n\n    applyUndo(undoManager)\n    {\n        throw new Error('Undo operation for handler not supported');\n    }\n\n    applyRedo(undoManager)\n    {\n        throw new Error('Redo operation for handler not supported');\n    }\n}\n\nexport default AbstractEventHandler;\n","import React from 'react';\n\nclass ZoomInIcon extends React.PureComponent\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n                <path d=\"M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z\"/>\n            </svg>\n        );\n    }\n}\nexport default ZoomInIcon;\n","import React from 'react';\n\nclass ZoomOutIcon extends React.PureComponent\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14zM7 9h5v1H7z\"/>\n            </svg>\n        );\n    }\n}\nexport default ZoomOutIcon;\n","import React from 'react';\nimport Style from './ZoomWidget.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport ZoomInIcon from 'components/iconset/ZoomInIcon.js';\nimport ZoomOutIcon from 'components/iconset/ZoomOutIcon.js';\n\nclass ZoomWidget extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.onZoomIn = this.onZoomIn.bind(this);\n        this.onZoomOut = this.onZoomOut.bind(this);\n    }\n\n    onZoomIn(e)\n    {\n        const viewportAdapter = this.props.viewportAdapter;\n        const viewScale = -viewportAdapter.getScale() * 0.4;\n        viewportAdapter.addScale(viewScale);\n    }\n\n    onZoomOut(e)\n    {\n        const viewportAdapter = this.props.viewportAdapter;\n        const viewScale = viewportAdapter.getScale() * 0.75;\n        viewportAdapter.addScale(viewScale);\n    }\n\n    /** @override */\n    render()\n    {\n        const viewportAdapter = this.props.viewportAdapter;\n        const viewScale = 'x' + (1 / (viewportAdapter.getScale() || 1)).toFixed(2);\n\n        return (\n            <div id={this.props.id}\n                className={Style.zoom_container +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <IconButton className={Style.zoom_button} title=\"Zoom In\" onClick={this.onZoomIn}>\n                    <ZoomInIcon/>\n                </IconButton>\n                <IconButton className={Style.zoom_button} title=\"Zoom Out\" onClick={this.onZoomOut}>\n                    <ZoomOutIcon/>\n                </IconButton>\n                <label className={Style.zoom_label}>{viewScale}</label>\n            </div>\n        );\n    }\n}\n\nexport default ZoomWidget;\n","import React from 'react';\n\nclass PinpointIcon extends React.PureComponent\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm8.94 3c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06C6.83 3.52 3.52 6.83 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c4.17-.46 7.48-3.77 7.94-7.94H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"/>\n            </svg>\n        );\n    }\n}\nexport default PinpointIcon;\n","import React from 'react';\nimport Style from './FocusCenterWidget.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport PinpointIcon from 'components/iconset/PinpointIcon.js';\n\nconst OFFSET_EPSILON = 0.1;\n\nclass FocusCenterWidget extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick(e)\n    {\n        const viewportAdapter = this.props.viewportAdapter;\n        viewportAdapter.setOffset(0, 0);\n    }\n\n    /** @override */\n    render()\n    {\n        const viewportAdapter = this.props.viewportAdapter;\n\n        return (\n            <IconButton id={this.props.id}\n                className={Style.center_focus_button +\n                    ' ' + this.props.className}\n                style={this.props.style}\n                title={'Center Workspace'}\n                disabled={Math.abs(viewportAdapter.getOffsetX()) < OFFSET_EPSILON &&\n                    Math.abs(viewportAdapter.getOffsetY()) < OFFSET_EPSILON}\n                onClick={this.onClick}>\n                <PinpointIcon />\n            </IconButton>\n        );\n    }\n}\n\nexport default FocusCenterWidget;\n","import React from 'react';\nimport Style from './ViewportNavigationLayer.css';\n\nimport ZoomWidget from '../widgets/ZoomWidget.js';\nimport FocusCenterWidget from '../widgets/FocusCenterWidget.js';\n\nclass ViewportNavigationLayer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const viewportAdapter = this.props.viewportAdapter;\n\n        return (\n            <div id={this.props.id}\n                className={Style.navbar_container +\n\t\t\t\t\t' ' + this.props.className}\n                style={this.props.style}>\n                <ZoomWidget className={Style.navbar_widget_container}\n                    viewportAdapter={viewportAdapter} />\n                <FocusCenterWidget className={Style.navbar_widget}\n                    viewportAdapter={viewportAdapter} />\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default ViewportNavigationLayer;","import React from 'react';\n\nclass JSONFileIcon extends React.PureComponent\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 56 56\">\n                <path fill=\"#E9E9E0\" d=\"M36.985,0H7.963C7.155,0,6.5,0.655,6.5,1.926V55c0,0.345,0.655,1,1.463,1h40.074 c0.808,0,1.463-0.655,1.463-1V12.978c0-0.696-0.093-0.92-0.257-1.085L37.607,0.257C37.442,0.093,37.218,0,36.985,0z\"/>\n                <polygon fill=\"#D9D7CA\" points=\"37.5,0.151 37.5,12 49.349,12 \t\"/>\n                <path fill=\"#9777A8\" d=\"M48.037,56H7.963C7.155,56,6.5,55.345,6.5,54.537V39h43v15.537C49.5,55.345,48.845,56,48.037,56z\"/>\n                <path fill=\"#FFFFFF\" d={'M17.021,42.719v7.848c0,0.474-0.087,0.873-0.26,1.196s-0.405,0.583-0.697,0.779 s-0.627,0.333-1.005,0.41c-0.378,0.077-0.768,0.116-1.169,0.116c-0.2,0-0.436-0.021-0.704-0.062s-0.547-0.104-0.834-0.191 s-0.563-0.185-0.827-0.294s-0.487-0.232-0.67-0.369l0.697-1.107c0.091,0.063,0.221,0.13,0.39,0.198s0.354,0.132,0.554,0.191 s0.41,0.111,0.629,0.157s0.424,0.068,0.615,0.068c0.483,0,0.868-0.094,1.155-0.28s0.439-0.504,0.458-0.95v-7.711H17.021z'}/>\n                <path fill=\"#FFFFFF\" d={'M25.184,50.238c0,0.364-0.075,0.718-0.226,1.06s-0.362,0.643-0.636,0.902s-0.61,0.467-1.012,0.622 s-0.856,0.232-1.367,0.232c-0.219,0-0.444-0.012-0.677-0.034s-0.467-0.062-0.704-0.116c-0.237-0.055-0.463-0.13-0.677-0.226 s-0.398-0.212-0.554-0.349l0.287-1.176c0.128,0.073,0.289,0.144,0.485,0.212s0.398,0.132,0.608,0.191s0.419,0.107,0.629,0.144 s0.405,0.055,0.588,0.055c0.556,0,0.982-0.13,1.278-0.39s0.444-0.645,0.444-1.155c0-0.31-0.104-0.574-0.314-0.793 s-0.472-0.417-0.786-0.595s-0.654-0.355-1.019-0.533s-0.706-0.388-1.025-0.629s-0.583-0.526-0.793-0.854s-0.314-0.738-0.314-1.23 c0-0.446,0.082-0.843,0.246-1.189s0.385-0.641,0.663-0.882s0.602-0.426,0.971-0.554s0.759-0.191,1.169-0.191 c0.419,0,0.843,0.039,1.271,0.116s0.774,0.203,1.039,0.376c-0.055,0.118-0.118,0.248-0.191,0.39s-0.142,0.273-0.205,0.396 s-0.118,0.226-0.164,0.308s-0.073,0.128-0.082,0.137c-0.055-0.027-0.116-0.063-0.185-0.109s-0.166-0.091-0.294-0.137 s-0.296-0.077-0.506-0.096s-0.479-0.014-0.807,0.014c-0.183,0.019-0.355,0.07-0.52,0.157s-0.31,0.193-0.438,0.321 s-0.228,0.271-0.301,0.431s-0.109,0.313-0.109,0.458c0,0.364,0.104,0.658,0.314,0.882s0.47,0.419,0.779,0.588 s0.647,0.333,1.012,0.492s0.704,0.354,1.019,0.581s0.576,0.513,0.786,0.854S25.184,49.7,25.184,50.238z'}/>\n                <path fill=\"#FFFFFF\" d={'M35.082,47.914c0,0.848-0.107,1.595-0.321,2.242s-0.511,1.185-0.889,1.613s-0.82,0.752-1.326,0.971 s-1.06,0.328-1.661,0.328s-1.155-0.109-1.661-0.328s-0.948-0.542-1.326-0.971s-0.675-0.966-0.889-1.613s-0.321-1.395-0.321-2.242 s0.107-1.593,0.321-2.235s0.511-1.178,0.889-1.606s0.82-0.754,1.326-0.978s1.06-0.335,1.661-0.335s1.155,0.111,1.661,0.335 s0.948,0.549,1.326,0.978s0.675,0.964,0.889,1.606S35.082,47.066,35.082,47.914z M30.844,51.729c0.337,0,0.658-0.066,0.964-0.198 s0.579-0.349,0.82-0.649s0.431-0.695,0.567-1.183s0.21-1.082,0.219-1.784c-0.009-0.684-0.08-1.265-0.212-1.743 s-0.314-0.873-0.547-1.183s-0.497-0.533-0.793-0.67s-0.608-0.205-0.937-0.205c-0.337,0-0.658,0.063-0.964,0.191 s-0.579,0.344-0.82,0.649s-0.431,0.699-0.567,1.183c-0.137,0.483-0.21,1.075-0.219,1.777c0.009,0.684,0.08,1.267,0.212,1.75 s0.314,0.877,0.547,1.183s0.497,0.528,0.793,0.67S30.516,51.729,30.844,51.729z'}/>\n                <path fill=\"#FFFFFF\" d=\"M44.68,42.924V53h-1.668l-3.951-6.945V53h-1.668V42.924h1.668l3.951,6.945v-6.945H44.68z\"/>\n                <path fill=\"#9777A8\" d=\"M19.5,19v-4c0-0.551,0.448-1,1-1c0.553,0,1-0.448,1-1s-0.447-1-1-1c-1.654,0-3,1.346-3,3v4 c0,1.103-0.897,2-2,2c-0.553,0-1,0.448-1,1s0.447,1,1,1c1.103,0,2,0.897,2,2v4c0,1.654,1.346,3,3,3c0.553,0,1-0.448,1-1 s-0.447-1-1-1c-0.552,0-1-0.449-1-1v-4c0-1.2-0.542-2.266-1.382-3C18.958,21.266,19.5,20.2,19.5,19z\"/>\n                <circle fill=\"#9777A8\" cx=\"27.5\" cy=\"18.5\" r=\"1.5\"/>\n                <path fill=\"#9777A8\" d=\"M39.5,21c-1.103,0-2-0.897-2-2v-4c0-1.654-1.346-3-3-3c-0.553,0-1,0.448-1,1s0.447,1,1,1 c0.552,0,1,0.449,1,1v4c0,1.2,0.542,2.266,1.382,3c-0.84,0.734-1.382,1.8-1.382,3v4c0,0.551-0.448,1-1,1c-0.553,0-1,0.448-1,1 s0.447,1,1,1c1.654,0,3-1.346,3-3v-4c0-1.103,0.897-2,2-2c0.553,0,1-0.448,1-1S40.053,21,39.5,21z\"/>\n                <path fill=\"#9777A8\" d=\"M27.5,24c-0.553,0-1,0.448-1,1v3c0,0.552,0.447,1,1,1s1-0.448,1-1v-3 C28.5,24.448,28.053,24,27.5,24z\"/>\n            </svg>\n        );\n    }\n}\nexport default JSONFileIcon;\n","import React from 'react';\n\nclass BoxAddIcon extends React.PureComponent\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\" />\n            </svg>\n        );\n    }\n}\nexport default BoxAddIcon;\n","class Importer\n{\n    constructor() {}\n\n    /**\n     * Try to import the target file. Assumes that isValidFile() returns true.\n     * \n     * @param {String} fileName the name of the target file\n     * @param {String} fileType the associated file extension\n     * @param {String} fileData the file content to import\n     * @returns {Promise} a Promise that resolves if imported without errors\n     */\n    importFileData(fileName, fileType, fileData)\n    {\n        return Promise.resolve(fileData);\n    }\n    \n    getDataType() { return 'text'; }\n}\nexport default Importer;\n","import Importer from 'util/file/import/Importer.js';\n\nclass SessionImporter extends Importer\n{\n    constructor(app)\n    {\n        super();\n\n        this._app = app;\n    }\n\n    onParseSession(session, fileData)\n    {\n        return fileData;\n    }\n\n    onPreImportSession(session)\n    {\n        session.getApp().getUndoManager().captureEvent();\n    }\n\n    onImportSession(session, sessionData)\n    {\n        \n    }\n\n    onPostImportSession(session)\n    {\n        session.getApp().getUndoManager().captureEvent();\n    }\n\n    /** @override */\n    importFileData(fileName, fileType, fileData)\n    {\n        const app = this._app;\n        const session = app.getSession();\n        const currentModule = session.getCurrentModule();\n        const result = this.onParseSession(session, fileData);\n\n        this.onPreImportSession(session);\n\n        this.onImportSession(session, result);\n\n        let projectName;\n        if (fileName)\n        {\n            projectName = fileName.substring(0, fileName.length - fileType.length);\n        }\n        else\n        {\n            projectName = result['_metadata']['name'];\n        }\n        \n        app.getSession().setProjectName(projectName);\n\n        this.onPostImportSession(session);\n\n        return currentModule;\n    }\n}\n\nexport default SessionImporter;\n","/**\n * @module UserUtil\n * @desc Contains utility functions for user-related actions.\n */\n\n/**\n * Clears the graph with user-prompts.\n * @param {*} app the current app.\n * @param {*} graphOnly whether to only clear the graph only.\n * @param {*} callback a callback for when it is done.\n */\nexport function userClearGraph(app, graphOnly=false, callback=null)\n{\n    if (window.confirm(I18N.toString('alert.graph.clear')))\n    {\n        const module = app.getCurrentModule();\n        module.getGraphController().getGraph().clear();\n        if (!graphOnly)\n        {\n            app.getUndoManager().clear();\n            app.getSession().setProjectName(null);\n        }\n        else\n        {\n            app.getUndoManager().captureEvent();\n        }\n        if (callback) callback();\n    }\n}\n","import NodeGraph from 'graph2/NodeGraph.js';\n\n/**\n * A class that represents a node graph with indexed and ordered node list.\n * This means that there exists a first node, which would be used for the\n * start node, if that semantically makes sense for your graph.\n */\nclass IndexedNodeGraph extends NodeGraph\n{\n    /**\n     * Create an IndexedNodeGraph with the respective node and edge classes.\n     * @param {Class} [nodeClass]\n     * @param {Class} [edgeClass]\n     */\n    constructor(nodeClass, edgeClass)\n    {\n        super(nodeClass, edgeClass);\n\n        this._nodes = [];\n    }\n\n    /**\n     * Sets the first node, which is at index 0, to the passed-in node. The node must\n     * already exist in the graph.\n     * @param {GraphNode} node the node to be first\n     */\n    setStartNode(node)\n    {\n        if (this._nodes.length <= 0) throw new Error('Cannot set start node to empty graph');\n\n        // There is only one node, and that is already the start node\n        if (this._nodes.length === 1) return;\n\n        const i = this._nodes.indexOf(node);\n        if (i > 0)\n        {\n            // This does a swap; we could do a prepend but that's more costly...\n            const prev = this._nodes[0];\n            this._nodes[0] = node;\n            this._nodes[i] = prev;\n        }\n        else if (i < 0)\n        {\n            throw new Error('Cannot set start node for unknown node');\n        }\n    }\n\n    /**\n     * Gets the first node, which is at index 0, for the graph.\n     */\n    getStartNode() { return this._nodes.length > 0 ? this._nodes[0] : null; }\n\n    /**\n     * Gets the node by its index. The index must be between 0 and the node count.\n     * @param {Number} index \n     */\n    getNodeByIndex(index)\n    {\n        return this._nodes[index];\n    }\n\n    /** @override */\n    addNode(node)\n    {\n        this._nodes.push(node);\n        return super.addNode(node);\n    }\n\n    /** @override */\n    deleteNode(node)\n    {\n        super.deleteNode(node);\n        const i = this._nodes.indexOf(node);\n        if (i >= 0) this._nodes.splice(i, 1);\n    }\n\n    /** @override */\n    clearNodes()\n    {\n        super.clearNodes();\n        this._nodes.length = 0;\n    }\n\n    /** @override */\n    getNodes()\n    {\n        return this._nodes;\n    }\n}\n\nexport default IndexedNodeGraph;\n","export const FILE_TYPE_PNG = 'png';\nexport const FILE_TYPE_JPG = 'jpg';\nexport const FILE_TYPE_SVG = 'svg';\n\nexport function downloadText(filename, textData)\n{\n    downloadURL(filename, getTextDataURI(textData));\n}\n\nfunction createBlobFromSVG(svg)\n{\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(svg);\n    const blob = new Blob([svgString], { type: 'image/svg+xml' });\n    return blob;\n}\n\nexport function downloadImageFromSVG(filename, filetype, svg, width, height)\n{\n    const blob = createBlobFromSVG(svg);\n    switch (filetype)\n    {\n    case FILE_TYPE_PNG:\n    case FILE_TYPE_JPG:\n        {\n            const url = URL.createObjectURL(blob);\n\n            const canvas = document.createElement('canvas');\n            const ctx = canvas.getContext('2d');\n            const pixelRatio = window.devicePixelRatio || 1;\n            canvas.width = width * pixelRatio;\n            canvas.height = height * pixelRatio;\n            canvas.style.width = width + 'px';\n            canvas.style.height = height + 'px';\n            ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\n            const image = new Image();\n            image.onload = () => \n            {\n                ctx.drawImage(image, 0, 0);\n                URL.revokeObjectURL(url);\n\n                const imageURI = canvas.toDataURL('image/' + filetype).replace('image/' + filetype, 'image/octet-stream');\n                downloadURL(filename + '.' + filetype, imageURI);\n            };\n            image.src = url;\n        }\n        break;\n    case FILE_TYPE_SVG:\n        {\n            const reader = new FileReader();\n            reader.onload = () => \n            {\n                downloadURL(filename + '.' + filetype, reader.result);\n            };\n            reader.readAsDataURL(blob);\n        }\n        break;\n    default:\n        throw new Error('Unknown file type \\'' + filetype + '\\'');\n    }\n}\n\nexport function downloadURL(filename, url)\n{\n    const element = document.createElement('a');\n    const headerIndex = url.indexOf(';');\n    url = url.substring(0, headerIndex + 1) + 'headers=Content-Disposition%3A%20attachment%3B%20filename=' + filename + ';' + url.substring(headerIndex + 1);\n    element.setAttribute('href', url);\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n    document.body.removeChild(element);\n}\n\nfunction getTextDataURI(data)\n{\n    return 'data:text/plain; charset=utf-8,' + encodeURIComponent(data);\n}\n","import React from 'react';\n\nclass PageContentIcon extends React.PureComponent\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\"/>\n            </svg>\n        );\n    }\n}\nexport default PageContentIcon;\n","import React from 'react';\n\nclass AddIcon extends React.PureComponent\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"/>\n            </svg>\n        );\n    }\n}\nexport default AddIcon;\n","import React from 'react';\n\nclass SubtractIcon extends React.PureComponent\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\"/>\n            </svg>\n        );\n    }\n}\nexport default SubtractIcon;\n","import React from 'react';\n\nclass CheckCircleIcon extends React.PureComponent\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M16.59 7.58L10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/>\n            </svg>\n        );\n    }\n}\nexport default CheckCircleIcon;\n","import React from 'react';\n\nclass CrossCircleIcon extends React.PureComponent\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"/>\n            </svg>\n        );\n    }\n}\nexport default CrossCircleIcon;\n","import React from 'react';\n\nclass PendingIcon extends React.PureComponent\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M19 8l-4 4h3c0 3.31-2.69 6-6 6-1.01 0-1.97-.25-2.8-.7l-1.46 1.46C8.97 19.54 10.43 20 12 20c4.42 0 8-3.58 8-8h3l-4-4zM6 12c0-3.31 2.69-6 6-6 1.01 0 1.97.25 2.8.7l1.46-1.46C15.03 4.46 13.57 4 12 4c-4.42 0-8 3.58-8 8H1l4 4 4-4H6z\"/>\n            </svg>\n        );\n    }\n}\nexport default PendingIcon;\n","/**\n * Represents and handles the transformations to the interactible viewport of\n * the SVG element.\n */\nclass ViewportAdapter\n{\n    constructor()\n    {\n        this._element = null;\n        this._offsetX = 0;\n        this._offsetY = 0;\n        this._nextOffsetX = 0;\n        this._nextOffsetY = 0;\n        this._offsetDamping = 0.1;\n\n        this._scaleFactor = 1;\n        this._minScale = 1;\n        this._maxScale = 1;\n    }\n\n    setElement(element)\n    {\n        this._element = element;\n        return this;\n    }\n\n    setMinScale(scale)\n    {\n        this._minScale = scale;\n        if (this._scaleFactor < this._minScale) this._scaleFactor = this._minScale;\n        return this;\n    }\n\n    setMaxScale(scale)\n    {\n        this._maxScale = scale;\n        if (this._scaleFactor > this._maxScale) this._scaleFactor = this._maxScale;\n        return this;\n    }\n\n    setOffsetDamping(damping)\n    {\n        this._offsetDamping = damping;\n        return this;\n    }\n\n    update()\n    {\n        const dx = this._nextOffsetX - this._offsetX;\n        this._offsetX += dx * this._offsetDamping;\n        const dy = this._nextOffsetY - this._offsetY;\n        this._offsetY += dy * this._offsetDamping;\n    }\n\n    transformScreenToView(clientX, clientY)\n    {\n        if (!this._element) return {x: clientX - this._offsetX, y: clientY - this._offsetY};\n\n        const ctm = this._element.getScreenCTM();\n        return {\n            x: (clientX - ctm.e) / ctm.a - this._offsetX,\n            y: (clientY - ctm.f) / ctm.d - this._offsetY\n        };\n    }\n\n    setOffset(x, y, immediate=false)\n    {\n        if (immediate)\n        {\n            this._nextOffsetX = this._offsetX = x;\n            this._nextOffsetY = this._offsetY = y;\n        }\n        else\n        {\n            this._nextOffsetX = x;\n            this._nextOffsetY = y;\n        }\n    }\n\n    addOffset(dx, dy, immediate=false)\n    {\n        if (immediate)\n        {\n            this._offsetX += dx;\n            this._offsetY += dy;\n            this._nextOffsetX = this._offsetX;\n            this._nextOffsetY = this._offsetY;\n        }\n        else\n        {\n            this._nextOffsetX += dx;\n            this._nextOffsetY += dy;\n        }\n    }\n\n    setScale(scale) { this._scaleFactor = Math.min(this._maxScale, Math.max(this._minScale, scale)); }\n    addScale(dscale) { this._scaleFactor = Math.min(this._maxScale, Math.max(this._minScale, this._scaleFactor + dscale)); }\n    getOffsetX() { return this._offsetX; }\n    getOffsetY() { return this._offsetY; }\n    getOffsetDamping() { return this._offsetDamping; }\n    getScale() { return this._scaleFactor; }\n    getMinScale() { return this._minScale; }\n    getMaxScale() { return this._maxScale; }\n    getElement() { return this._element; }\n}\n\nexport default ViewportAdapter;\n","class InputContext\n{\n    constructor()\n    {\n        this._inputHandlers = [];\n    }\n\n    addInputHandler(inputHandler, priority = -1)\n    {\n        if (priority < 0)\n        {\n            this._inputHandlers.push(inputHandler);\n        }\n        else\n        {\n            if (this._inputHandlers.length <= priority)\n            {\n                this._inputHandlers.length = priority + 1;\n            }\n\n            if (this._inputHandlers[priority])\n            {\n                this._inputHandlers.splice(1, 0, inputHandler);\n            }\n            else\n            {\n                this._inputHandlers[priority] = inputHandler;\n            }\n        }\n\n        return this;\n    }\n\n    removeInputHandler(inputHandler)\n    {\n        const index = this._inputHandlers.indexOf(inputHandler);\n        if (index >= 0)\n        {\n            this._inputHandlers[index] = null;\n        }\n        return this;\n    }\n\n    clearInputHandlers() { this._inputHandlers.length = 0; }\n\n    handleEvent(eventName, ...eventArgs)\n    {\n        //Let others handle this event...\n        for (const inputHandler of this._inputHandlers)\n        {\n            if (!inputHandler) continue;\n            const handlerEventCallback = inputHandler[eventName];\n            if (typeof handlerEventCallback === 'function')\n            {\n                if (handlerEventCallback.apply(inputHandler, eventArgs))\n                {\n                    return inputHandler;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    getInputHandlers() { return this._inputHandlers; }\n}\n\nexport default InputContext;","/**\n * Used by InputAdapter to hold input event data.\n */\nclass InputPointer\n{\n    constructor(inputAdapter, viewportAdapter, element)\n    {\n        this._inputAdapter = inputAdapter;\n        this._viewportAdapter = viewportAdapter;\n        this._element = element;\n\n        this._active = false;\n        this._x = 0;\n        this._y = 0;\n\n        this._inputpos = { x: 0, y: 0 };\n    }\n\n    get x() { return this._x; }\n    get y() { return this._y; }\n\n    setPosition(x, y)\n    {\n        this._x = x;\n        this._y = y;\n        return this;\n    }\n\n    beginInput()\n    {\n        this._active = true;\n        this._inputpos.x = this._x;\n        this._inputpos.y = this._y;\n    }\n\n    /**\n     * Returns the position which the input began at. This is mutable.\n     */\n    getInputEventPosition() { return this._inputpos; }\n\n    changeInputEventPosition(x, y)\n    {\n        this._inputpos.x = x;\n        this._inputpos.y = y;\n    }\n\n    endInput() { this._active = false; }\n    isActive() { return this._active; }\n\n    getDistanceSquToInitial()\n    {\n        const pos = this._inputpos;\n        const dx = pos.x - this._x;\n        const dy = pos.y - this._y;\n        return dx * dx + dy * dy;\n    }\n\n    /**\n     * The DOM element for which this pointer provides context for; this should be\n     * the same element as in the input adapter.\n     */\n    getElement() { return this._element; }\n\n    /**\n     * The viewport for this pointer operates within; this should be the same\n     * viewport as in the input adapter.\n     */\n    getViewportAdapter() { return this._viewportAdapter; }\n\n    /**\n     * The input adapter that controls this pointer's properties\n     */\n    getInputAdapter() { return this._inputAdapter; }\n}\n\nexport default InputPointer;\n","import InputContext from './InputContext.js';\nimport InputPointer from './InputPointer.js';\n\nconst LONG_TAP_TICKS = 600;\nconst DOUBLE_TAP_TICKS = 600;\nconst SCROLL_SENSITIVITY = 1.0 / 300.0;\nconst CURSOR_RADIUS = 4;\nconst CURSOR_RADIUS_SQU = CURSOR_RADIUS * CURSOR_RADIUS;\nconst DRAGGING_BUFFER = 18;\nconst DRAGGING_BUFFER_SQU = DRAGGING_BUFFER * DRAGGING_BUFFER;\n\n/**\n * Provides an interface for input handlers to interact with a HTMLElement.\n * Each listenable element should correspond to only a single InputAdapter.\n */\nclass InputAdapter extends InputContext\n{\n    constructor(viewportAdapter)\n    {\n        super();\n        \n        this._viewportAdapter = viewportAdapter;\n\n        this._contexts = [];\n        this._activeDragHandler = null;\n\n        this._element = null;\n        this._cursor = {\n            _mousemove: null,\n            _mouseup: null,\n            _touchmove: null,\n            _touchend: null,\n            _timer: null\n        };\n        this._pointer = null;\n\n        //Although dragging could be in pointer, it should be here to allow\n        //the adapter to be independent of pointer.\n        this._dragging = false;\n        this._altinput = false;\n\n        this._holdInputDelay = LONG_TAP_TICKS;\n        this._dblInputDelay = DOUBLE_TAP_TICKS;\n        this._scrollSensitivity = SCROLL_SENSITIVITY;\n        this._minTapRadius = CURSOR_RADIUS_SQU * 16;\n        this._draggingRadiusSqu = CURSOR_RADIUS_SQU + DRAGGING_BUFFER_SQU;\n\n        this._prevEmptyInput = false;\n        this._prevEmptyTime = 0;\n        this._prevEmptyX = 0;\n        this._prevEmptyY = 0;\n\n        this.onContextMenu = this.onContextMenu.bind(this);\n        this.onMouseDown = this.onMouseDown.bind(this);\n        this.onMouseMove = this.onMouseMove.bind(this);\n        this.onTouchStart = this.onTouchStart.bind(this);\n        this.onWheel = this.onWheel.bind(this);\n\n        this.onMouseDownThenMove = this.onMouseDownThenMove.bind(this);\n        this.onMouseDownThenUp = this.onMouseDownThenUp.bind(this);\n        this.onTouchStartThenMove = this.onTouchStartThenMove.bind(this);\n        this.onTouchStartThenEnd = this.onTouchStartThenEnd.bind(this);\n\n        this.onDelayedInputDown = this.onDelayedInputDown.bind(this);\n    }\n\n    bindContext(context)\n    {\n        if (!(context instanceof InputContext))\n            throw new Error('Cannot bind invalid context - must be an instance of InputContext');\n\n        this._contexts.unshift(context);\n        return this;\n    }\n\n    bindContextAsLast(context)\n    {\n        if (!(context instanceof InputContext))\n            throw new Error('Cannot bind invalid context - must be an instance of InputContext');\n\n        this._contexts.push(context);\n        return this;\n    }\n\n    unbindContext(context = null)\n    {\n        if (context)\n        {\n            const index = this._contexts.indexOf(context);\n            if (index >= 0)\n            {\n                this._contexts.splice(index, 1);\n                return context;\n            }\n            else\n            {\n                return null;\n            }\n        }\n        else\n        {\n            return this._contexts.shift();\n        }\n    }\n\n    clearContexts()\n    {\n        this._contexts.length = 0;\n    }\n\n    hasContexts()\n    {\n        return this._contexts.length > 0;\n    }\n\n    getCurrentContext()\n    {\n        if (this._contexts.length > 0)\n        {\n            return this._contexts[this._contexts.length - 1];\n        }\n        else\n        {\n            return this;\n        }\n    }\n\n    initialize(element)\n    {\n        if (!(element instanceof SVGElement)) throw new Error('Missing SVG element for input adapter\\'s viewport');\n        if (this._element) throw new Error('Trying to initialize an InputAdapter already initialized');\n\n        this._viewportAdapter.setElement(this._element = element);\n        this._pointer = new InputPointer(this, this._viewportAdapter, this._element);\n\n        this._element.addEventListener('mousedown', this.onMouseDown);\n        this._element.addEventListener('mousemove', this.onMouseMove);\n        this._element.addEventListener('touchstart', this.onTouchStart);\n        this._element.addEventListener('touchmove', this.onTouchMove);\n        this._element.addEventListener('contextmenu', this.onContextMenu);\n        this._element.addEventListener('wheel', this.onWheel);\n    }\n\n    destroy()\n    {\n        if (!this._element) throw new Error('Trying to destroy an InputAdapter that is not yet initialized');\n\n        this._element.removeEventListener('mousedown', this.onMouseDown);\n        this._element.removeEventListener('mousemove', this.onMouseMove);\n        this._element.removeEventListener('touchstart', this.onTouchStart);\n        this._element.removeEventListener('contextmenu', this.onContextMenu);\n        this._element.removeEventListener('wheel', this.onWheel);\n\n        this._element = null;\n    }\n\n    update()\n    {\n        if (this._element)\n        {\n            //Smooth transition offset\n            this._viewportAdapter.update();\n        }\n    }\n\n    /** @override */\n    handleEvent(eventName, ...eventArgs)\n    {\n        for (const context of this._contexts)\n        {\n            const result = context.handleEvent(eventName, ...eventArgs);\n            if (result)\n            {\n                return result;\n            }\n        }\n\n        return super.handleEvent(eventName, ...eventArgs);\n    }\n\n    onMouseDown(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const cursor = this._cursor;\n\n        //Blur any element in focus\n        document.activeElement.blur();\n        this._element.focus();\n\n        //Make sure mouse move is deleted, just in case\n        if (cursor._mousemove)\n        {\n            document.removeEventListener('mousemove', cursor._mousemove);\n            cursor._mousemove = null;\n        }\n        //Make sure mouse up is deleted, just in case\n        if (cursor._mouseup)\n        {\n            document.removeEventListener('mouseup', cursor._mouseup);\n            cursor._mouseup = null;\n        }\n\n        //HACK: To allow Mac's to use ctrl+click as right clicks\n        const button = e.ctrlKey ? 2 : e.button;\n\n        //Is this a valid mouse down?\n        if (this.onInputDown(e.clientX, e.clientY, button))\n        {\n            //Start mouse down logic...\n            cursor._mousemove = this.onMouseDownThenMove;\n            cursor._mouseup = this.onMouseDownThenUp;\n\n            document.addEventListener('mousemove', cursor._mousemove);\n            document.addEventListener('mouseup', cursor._mouseup);\n        }\n\n        return false;\n    }\n\n    onMouseMove(e)\n    {\n        const mouse = this._viewportAdapter.transformScreenToView(e.clientX, e.clientY);\n        const pointer = this._pointer;\n        pointer.setPosition(mouse.x, mouse.y);\n\n        if (this.handleEvent('onMoveInputEvent', pointer))\n        {\n            e.stopPropagation();\n            e.preventDefault();\n\n            this.cancelInputEvent();\n        }\n    }\n\n    onMouseDownThenMove(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        this.onInputMove(e.clientX, e.clientY);\n\n        return false;\n    }\n\n    onMouseDownThenUp(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const cursor = this._cursor;\n\n        //Make sure mouse move is deleted, just in case\n        if (cursor._mousemove)\n        {\n            document.removeEventListener('mousemove', cursor._mousemove);\n            cursor._mousemove = null;\n        }\n        //Make sure mouse up is deleted, just in case\n        if (cursor._mouseup)\n        {\n            document.removeEventListener('mouseup', cursor._mouseup);\n            cursor._mouseup = null;\n        }\n\n        this.onInputUp(e.clientX, e.clientY);\n\n        return false;\n    }\n\n    onTouchStart(e)\n    {\n        if (e.changedTouches.length == 1)\n        {\n            e.stopPropagation();\n            e.preventDefault();\n\n            const cursor = this._cursor;\n\n            //Blur any element in focus\n            document.activeElement.blur();\n            this._element.focus();\n\n            //Make sure touch move is deleted, just in case\n            if (cursor._touchmove)\n            {\n                document.removeEventListener('touchmove', cursor._touchmove);\n                cursor._touchmove = null;\n            }\n            //Make sure touch end is deleted, just in case\n            if (cursor._touchend)\n            {\n                document.removeEventListener('touchend', cursor._touchend);\n                cursor._touchend = null;\n            }\n\n            const touch = e.changedTouches[0];\n            //Is this a valid touch start?\n            if (this.onInputDown(touch.clientX, touch.clientY, 0))\n            {\n                //Start touch start logic...\n                cursor._touchmove = this.onTouchStartThenMove;\n                cursor._touchend = this.onTouchStartThenEnd;\n\n                document.addEventListener('touchmove', cursor._touchmove);\n                document.addEventListener('touchend', cursor._touchend);\n            }\n\n            return false;\n        }\n    }\n\n    onTouchStartThenEnd(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const cursor = this._cursor;\n\n        //Make sure mouse move is deleted, just in case\n        if (cursor._touchmove)\n        {\n            document.removeEventListener('touchmove', cursor._touchmove);\n            cursor._touchmove = null;\n        }\n        //Make sure mouse up is deleted, just in case\n        if (cursor._touchend)\n        {\n            document.removeEventListener('touchend', cursor._touchend);\n            cursor._touchend = null;\n        }\n\n        const touch = e.changedTouches[0];\n        this.onInputUp(touch.clientX, touch.clientY);\n\n        return false;\n    }\n\n    onTouchStartThenMove(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const touch = e.changedTouches[0];\n        this.onInputMove(touch.clientX, touch.clientY);\n\n        return false;\n    }\n\n    onContextMenu(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        return false;\n    }\n\n    onWheel(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const pointer = this._pointer;\n        const dy = e.deltaY * this._scrollSensitivity;\n        const prev = this._viewportAdapter.getScale();\n        const next = prev + dy;\n\n        //Let others handle this event...\n        if (!this.handleEvent('onZoomChange', pointer, next, prev))\n        {\n            this._viewportAdapter.setScale(next);\n        }\n\n        return false;\n    }\n\n    onInputDown(x, y, button)\n    {\n        //Setup for hold timer...\n        const cursor = this._cursor;\n        const pointer = this._pointer;\n        const mouse = this._viewportAdapter.transformScreenToView(x, y);\n        pointer.setPosition(mouse.x, mouse.y);\n\n        this._dragging = false;\n        this._altinput = button == 2;\n\n        //Let others handle this event...\n        if (!this.handleEvent('onPreInputEvent', pointer))\n        {\n            pointer.beginInput();\n            cursor._timer = setTimeout(this.onDelayedInputDown, this._holdInputDelay);\n            return true;\n        }\n\n        return false;\n    }\n\n    onDelayedInputDown()\n    {\n        //That means the input is remaining still (like a hold)...\n        if (!this._dragging)\n        {\n            this._altinput = true;\n        }\n    }\n\n    onInputMove(x, y)\n    {\n        const pointer = this._pointer;\n        const mouse = this._viewportAdapter.transformScreenToView(x, y);\n        pointer.setPosition(mouse.x, mouse.y);\n\n        if (!this._dragging)\n        {\n            if (pointer.getDistanceSquToInitial() > this._draggingRadiusSqu)\n            {\n                this._dragging = true;\n\n                //Let others handle this event...\n                const inputEventPosition = pointer.getInputEventPosition();\n                const result = this.handleEvent('onDragStart', pointer, inputEventPosition.x, inputEventPosition.y);\n                if (!result)\n                {\n                    this._dragging = false;\n\n                    //TODO: you could NOT cancel the event and just update the target?\n                    //If so, who is the initial target then?\n\n                    //Stop the input event early...\n                    this.cancelInputEvent();\n                }\n                else\n                {\n                    this._activeDragHandler = result;\n                }\n            }\n            else\n            {\n                //Still a click or hold...\n            }\n        }\n        else\n        {\n            //Continue to drag...\n            if (this._activeDragHandler)\n            {\n                this._activeDragHandler.onDragMove(pointer);\n            }\n        }\n    }\n\n    onInputUp(x, y)\n    {\n        const cursor = this._cursor;\n        const timer = cursor._timer;\n        if (timer)\n        {\n            clearTimeout(timer);\n            cursor._timer = null;\n        }\n\n        //Update pointer target to final position\n        const pointer = this._pointer;\n        const mouse = this._viewportAdapter.transformScreenToView(x, y);\n        pointer.setPosition(mouse.x, mouse.y);\n\n        if (this._dragging)\n        {\n            //Stop dragging!\n            if (this._activeDragHandler)\n            {\n                this._activeDragHandler.onDragStop(pointer);\n                this._activeDragHandler = null;\n            }\n        }\n        else\n        {\n            if (this._altinput)\n            {\n                //Alt Tap!\n                this.handleEvent('onAltInputEvent', pointer);\n            }\n            else\n            {\n                //If the input was not consumed...\n                if (!this.handleEvent('onInputEvent', pointer))\n                {\n                    //Try for double tap...\n                    const dx = x - this._prevEmptyX;\n                    const dy = y - this._prevEmptyY;\n                    const dist = dx * dx + dy * dy;\n                    const dt = Date.now() - this._prevEmptyTime;\n                    if (this._prevEmptyInput &&\n                        dist < this._minTapRadius &&\n                        dt < this._dblInputDelay)\n                    {\n                        //Double tap!\n                        this.handleEvent('onDblInputEvent', pointer);\n\n                        this._prevEmptyInput = false;\n                    }\n                    else\n                    {\n                        this._prevEmptyInput = true;\n                        this._prevEmptyTime = Date.now();\n                        this._prevEmptyX = x;\n                        this._prevEmptyY = y;\n                    }\n                }\n            }\n        }\n\n        pointer.endInput();\n        this.handleEvent('onPostInputEvent', pointer);\n    }\n\n    cancelInputEvent()\n    {\n        const pointer = this._pointer;\n        const cursor = this._cursor;\n\n        //Make sure mouse move is deleted, just in case\n        if (cursor._mousemove)\n        {\n            document.removeEventListener('mousemove', cursor._mousemove);\n            cursor._mousemove = null;\n        }\n        //Make sure mouse up is deleted, just in case\n        if (cursor._mouseup)\n        {\n            document.removeEventListener('mouseup', cursor._mouseup);\n            cursor._mouseup = null;\n        }\n\n        const timer = cursor._timer;\n        if (timer)\n        {\n            clearTimeout(timer);\n            cursor._timer = null;\n        }\n\n        pointer.endInput();\n        this.handleEvent('onPostInputEvent', pointer);\n    }\n\n    getContexts() { return this._contexts; }\n    getActiveElement() { return this._element; }\n    getViewportAdapter() { return this._viewportAdapter; }\n    getPointerX() { return this._pointer ? this._pointer.x : 0; }\n    getPointerY() { return this._pointer ? this._pointer.y : 0; }\n    isPointerActive() { return this._pointer ? this._pointer.isActive() : false; }\n    isUsingTouch() { return this._cursor._touchmove || this._cursor._touchend; }\n    isAltInput() { return this._altinput; }\n    isDragging() { return this._dragging; }\n}\n\nexport default InputAdapter;","import React from 'react';\nimport Style from './ViewportComponent.css';\n\nimport ViewportAdapter from '../ViewportAdapter.js';\nimport InputAdapter from '../InputAdapter.js';\nimport AbstractInputHandler from '../AbstractInputHandler.js';\n\nconst DEFAULT_VIEW_SIZE = 300;\nconst SMOOTH_OFFSET_DAMPING = 0.4;\nconst MIN_SCALE = 0.1;\nconst MAX_SCALE = 10;\n\nclass ViewportComponent extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this._ref = React.createRef();\n\n        this._viewportAdapter = new ViewportAdapter()\n            .setMinScale(MIN_SCALE)\n            .setMaxScale(MAX_SCALE)\n            .setOffsetDamping(SMOOTH_OFFSET_DAMPING);\n        this._inputAdapter = new InputAdapter(this._viewportAdapter);\n    }\n\n    addInputHandler(inputHandler)\n    {\n        if (!(inputHandler instanceof AbstractInputHandler)) throw new Error('input handler must be an instanceof AbstractInputHandler');\n        this._inputAdapter.addInputHandler(inputHandler);\n        return this;\n    }\n\n    /** @override */\n    componentDidMount()\n    {\n        this._inputAdapter.initialize(this._ref.current);\n    }\n\n    /** @override */\n    componentWillUnmount()\n    {\n        this._inputAdapter.destroy();\n    }\n\n    /** @override */\n    componentDidUpdate()\n    {\n        this._inputAdapter.update();\n    }\n\n    getSVGTransformString()\n    {\n        const viewport = this._viewportAdapter;\n        return 'translate(' + viewport.getOffsetX() + ' ' + viewport.getOffsetY() + ')';\n    }\n\n    getSVGViewBoxString(baseViewSize)\n    {\n        const viewport = this._viewportAdapter;\n        const viewSize = baseViewSize * Math.max(Number.MIN_VALUE, viewport.getScale());\n        const halfViewSize = viewSize / 2;\n        return (-halfViewSize) + ' ' + (-halfViewSize) + ' ' + viewSize + ' ' + viewSize;\n    }\n\n    getSVGElement()\n    {\n        return this._ref.current;\n    }\n\n    getInputAdapter()\n    {\n        return this._inputAdapter;\n    }\n\n    getViewportAdapter()\n    {\n        return this._inputAdapter.getViewportAdapter();\n    }\n\n    /** @override */\n    render()\n    {\n        const viewBox = this.getSVGViewBoxString(this.props.viewSize || DEFAULT_VIEW_SIZE);\n        const transform = this.getSVGTransformString();\n\n        return (\n            <svg ref={this._ref}\n                id={this.props.id}\n                className={Style.viewport_component + ' ' + this.props.className}\n                style={this.props.style}\n                viewBox={viewBox}>\n                <g transform={transform}>\n                    {this.props.children}\n                </g>\n            </svg>\n        );\n    }\n}\n\nexport default ViewportComponent;","import GraphNode from 'graph2/element/GraphNode.js';\n\nconst DEFAULT_MOVE_MODE_FIRST = true;\n\nclass InputController\n{\n    constructor()\n    {\n        this._trashMode = false;\n        this._nodeOnly = false;\n        this._moveModeFirst = DEFAULT_MOVE_MODE_FIRST;\n        this._handlingInput = false;\n\n        /*\n            This is the current target for the event. If this is a multi-stage event,\n            such as dragging, then this will only refer to the first target, the source\n            of the event.\n        */\n        this._target = {\n            source: null,\n            type: null\n        };\n\n        /*\n            This is the active target. It can only be manually set by binding source and\n            type through bindActiveTarget(). This allows future input handling to ignore\n            this target for intersection tests, etc.\n\n            NOTE: You must bind AND unbind the active target.\n        */\n        this._activeTarget = {\n            source: null,\n            type: null,\n            input: true\n        };\n\n        /*\n            This is the immediate target under the cursor. Regardless of input event, this\n            will always refer to the element directly intersecting the cursor. The active target\n            with the proper options may be ignored as possible candidates.\n        */\n        this._immediateTarget = {\n            source: null,\n            type: null\n        };\n\n        // This is only used if set.\n        this._selectionBox = null;\n\n        // Although not used here, it is used to connect to components.\n        this.onMouseOver = this.onMouseOver.bind(this);\n        this.onMouseOut = this.onMouseOut.bind(this);\n    }\n\n    setSelectionBox(selectionBox)\n    {\n        this._selectionBox = selectionBox;\n        return this;\n    }\n\n    setTrashMode(flag)\n    {\n        this._trashMode = flag;\n        return this;\n    }\n\n    setNodeEventsOnly(flag)\n    {\n        this._nodeOnly = flag;\n        return this;\n    }\n\n    setMoveModeFirst(flag)\n    {\n        this._moveModeFirst = flag;\n        return this;\n    }\n\n    /** @override */\n    onPreInputEvent(pointer)\n    {\n        this._handlingInput = true;\n\n        this.updateCurrentTarget(this._immediateTarget.source, this._immediateTarget.type);\n        return false;\n    }\n\n    /** @override */\n    onPostInputEvent(pointer)\n    {\n        this.updateCurrentTarget(null, null);\n        this._handlingInput = false;\n    }\n\n    onMouseOver(e)\n    {\n        const target = e.target;\n        const value = target['value'];\n        this._immediateTarget.source = value.source;\n        this._immediateTarget.type = value.type;\n\t\t\n        // Although you can access this, it cannot be a property for \"active\" targets.\n        // This is because those properties are used for comparison and equality. The\n        // extra data could be used for that, but it's up to you to manage that.\n        this._immediateTarget.data = value;\n    }\n\n    onMouseOut(e)\n    {\n        this._immediateTarget.source = null;\n        this._immediateTarget.type = null;\n\n        this._immediateTarget.data = null;\n    }\n\n    bindActiveTarget(targetSource, targetType, pointerEvent = true)\n    {\n        this._activeTarget.source = targetSource;\n        this._activeTarget.type = targetType;\n        this._activeTarget.input = pointerEvent;\n    }\n\n    unbindActiveTarget()\n    {\n        this._activeTarget.source = null;\n        this._activeTarget.type = null;\n        this._activeTarget.input = false;\n    }\n\n    updateCurrentTarget(targetSource, targetType)\n    {\n        this._target.source = targetSource;\n        this._target.type = targetType;\n    }\n\n    getActiveTargetSource() { return this._activeTarget.source; }\n    getActiveTargetType() { return this._activeTarget.type; }\n    hasActiveTarget() { return this._activeTarget.type !== null; }\n\n    hasPointerEvents(targetSource)\n    {\n        if (this._activeTarget.source === targetSource) return this._activeTarget.input;\n        if (this._nodeOnly) return targetSource instanceof GraphNode;\n        return true;\n    }\n\n    getCurrentTargetSource() { return this._target.source; }\n    getCurrentTargetType() { return this._target.type; }\n    hasCurrentTarget() { return this._target.type !== null; }\n\n    getImmediateTargetSource() { return this._immediateTarget.source; }\n    getImmediateTargetType() { return this._immediateTarget.type; }\n    hasImmediateTarget() { return this._immediateTarget.type !== null; }\n\n    isTrashMode() { return this._trashMode; }\n    isMoveMode(inputAdapter) { return !(this._moveModeFirst ^ !inputAdapter.isAltInput()); }\n    isNodeEventsOnly() { return this._nodeOnly; }\n    isMoveModeFirst() { return this._moveModeFirst; }\n\n    isHandlingInput() { return this._handlingInput; }\n\n    getSelectionBox() { return this._selectionBox; }\n}\n\nexport default InputController;","import AbstractInputHandler from 'util/input/AbstractInputHandler.js';\n\nclass ViewportInputHandler extends AbstractInputHandler\n{\n    constructor(inputController)\n    {\n        super();\n\n        this._inputController = inputController;\n\n        this._cachedPosition = {x: 0, y: 0};\n    }\n\n    /** @override */\n    onDragStart(pointer)\n    {\n        const inputController = this._inputController;\n        if (inputController.hasActiveTarget()) return false;\n        if (inputController.hasCurrentTarget()) return false;\n        if (!inputController.isMoveMode(pointer.getInputAdapter())) return false;\n\n        const inputEventPosition = pointer.getInputEventPosition();\n        this._cachedPosition.x = inputEventPosition.x;\n        this._cachedPosition.y = inputEventPosition.y;\n        return true;\n    }\n  \n    /** @override */\n    onDragMove(pointer)\n    {\n        const dx = pointer.x - this._cachedPosition.x;\n        const dy = pointer.y - this._cachedPosition.y;\n\n        const viewport = pointer.getViewportAdapter();\n        viewport.addOffset(dx, dy, true);\n\n        /*\n\t\t// We don't want to update it due to how viewports are positioned.\n\t\tthis._cachedPosition.x = pointer.x;\n\t\tthis._cachedPosition.y = pointer.y;\n\t\t*/\n    }\n  \n    /** @override */\n    onDragStop(pointer)\n    {\n        // Do nothing.\n    }\n}\n\nexport default ViewportInputHandler;","import React from 'react';\n\nimport ViewportComponent from 'util/input/components/ViewportComponent.js';\n\nimport InputController from 'graph2/controller/InputController.js';\nimport InputContext from 'util/input/InputContext.js';\n\nimport ViewportInputHandler from 'graph2/inputhandler/ViewportInputHandler.js';\n\nclass GraphView extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this._inputController = new InputController();\n        this._inputContext = new InputContext();\n\n        this._viewportComponent = React.createRef();\n\n        this._viewportInputHandler = new ViewportInputHandler(this._inputController);\n    }\n\n    /** @override */\n    componentDidMount()\n    {\n        const inputContext = this._inputContext;\n        const viewport = this._viewportComponent.current;\n        const inputAdapter = viewport.getInputAdapter();\n        inputContext\n            .addInputHandler(this._inputController)\n            .addInputHandler(this._viewportInputHandler, 10);\n        inputAdapter.bindContext(inputContext);\n    }\n\n    /** @override */\n    componentWillUnmount()\n    {\n        const inputContext = this._inputContext;\n        const viewport = this._viewportComponent.current;\n        const inputAdapter = viewport.getInputAdapter();\n        inputContext.clearInputHandlers();\n        inputAdapter.unbindContext(inputContext);\n    }\n\n    moveViewToPosition(x, y)\n    {\n        // Center view at position; inverted due to graph-to-screen space\n        this.getViewportAdapter().setOffset(-x, -y);\n    }\n\n    getInputController() { return this._inputController; }\n    getInputContext() { return this._inputContext; }\n\n    getViewportComponent() { return this._viewportComponent.current; }\n    getInputAdapter() { return this._viewportComponent.current.getInputAdapter(); }\n    getViewportAdapter() { return this._viewportComponent.current.getViewportAdapter(); }\n\n    /** @override */\n    render()\n    {\n        const inputController = this._inputController;\n        const viewport = this._viewportComponent.current;\n        const renderGraph = this.props.renderGraph;\n        const renderOverlay = this.props.renderOverlay;\n\n        return (\n            <div id={this.props.id}\n                className={this.props.className}\n                style={this.props.style}>\n                <ViewportComponent ref={this._viewportComponent}>\n                    {renderGraph && viewport && renderGraph(this, viewport, inputController)}\n                </ViewportComponent>\n                {renderOverlay && viewport && renderOverlay(this, viewport, inputController)}\n            </div>\n        );\n    }\n}\n\nexport default GraphView;\n","import React from 'react';\n\nconst FILL_OPACITY = 0.1;\n\nclass BoxRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const visible = this.props.visible;\n        const fromX = this.props.fromX || 0;\n        const fromY = this.props.fromY || 0;\n        const toX = this.props.toX || fromX + 1;\n        const toY = this.props.toY || fromY + 1;\n        const color = this.props.color || '#000000';\n\n        const dx = toX - fromX;\n        const dy = toY - fromY;\n\n        return (\n            <g>\n                {visible &&\n                    <rect className=\"graph-ui\"\n                        x={Math.min(toX, fromX)}\n                        y={Math.min(toY, fromY)}\n                        width={Math.abs(dx)}\n                        height={Math.abs(dy)}\n                        stroke={color}\n                        fill={color}\n                        fillOpacity={FILL_OPACITY} />}\n            </g>\n        );\n    }\n}\n\nexport default BoxRenderer;\n","import React from 'react';\n\nconst HIGHLIGHT_LINE_WIDTH = 3;\nconst HIGHLIGHT_LINE_ARRAY = [8, 6];\nconst HIGHLIGHT_OFFSET = 0;\n\nclass GraphHighlightRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const center = this.props.center;\n        const stroke = this.props.color || '#CCCCCC';\n        const radius = this.props.radius || 24;\n        \n        return (\n            <React.Fragment>\n                <circle className=\"graph-ui\"\n                    cx={center.x} cy={center.y} r={radius}\n                    stroke={stroke}\n                    strokeDashoffset={HIGHLIGHT_OFFSET}\n                    strokeDasharray={HIGHLIGHT_LINE_ARRAY}\n                    strokeWidth={HIGHLIGHT_LINE_WIDTH}\n                    fill=\"none\"\n                    pointerEvents=\"none\" />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default GraphHighlightRenderer;\n","import React from 'react';\n\nimport GraphHighlightRenderer from '../../renderer/GraphHighlightRenderer.js';\n\nconst HIGHLIGHT_OFFSET = 4;\n\nclass GraphHighlightLayer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const highlights = [];\n\n        const nodes = this.props.nodes;\n        if (nodes)\n        {\n            for(const node of nodes)\n            {\n                highlights.push(\n                    <GraphHighlightRenderer\n                        key={node.getGraphElementID()}\n                        center={node}\n                        radius={node.getNodeSize() + HIGHLIGHT_OFFSET}/>\n                );\n            }\n        }\n\n        const edges = this.props.edges;\n        if (edges)\n        {\n            for(const edge of edges)\n            {\n                highlights.push(\n                    <GraphHighlightRenderer\n                        key={edge.getGraphElementID()}\n                        center={edge.getCenterPoint()}/>\n                );\n            }\n        }\n\n        return (\n            <g>\n                {highlights}\n            </g>\n        );\n    }\n}\n\nexport default GraphHighlightLayer;","class SelectionBox\n{\n    constructor()\n    {\n        this._boundingBox = {\n            fromX: 0, fromY: 0,\n            toX: 0, toY: 0,\n            visible: false\n        };\n\n        this.targets = [];\n    }\n\n    getBoundingBox() { return this._boundingBox; }\n\n    getSelection(graph, forceUpdate = false)\n    {\n        if (forceUpdate)\n        {\n            const box = this._boundingBox;\n            const mx = Math.max(box.toX, box.fromX);\n            const my = Math.max(box.toY, box.fromY);\n            const lx = Math.min(box.toX, box.fromX);\n            const ly = Math.min(box.toY, box.fromY);\n            this.clearSelection();\n            getNodesWithin(graph, lx, ly, mx, my, this.targets);\n        }\n\n        return this.targets;\n    }\n\n    beginSelection(graph, x, y)\n    {\n        const box = this._boundingBox;\n        box.fromX = box.toX = x;\n        box.fromY = box.toY = y;\n        this.clearSelection();\n\n        box.visible = true;\n    }\n\n    updateSelection(graph, x, y)\n    {\n        const box = this._boundingBox;\n        box.toX = x;\n        box.toY = y;\n        this.getSelection(graph, true);\n    }\n\n    endSelection(graph, x, y)\n    {\n        const box = this._boundingBox;\n        box.toX = x;\n        box.toY = y;\n        this.getSelection(graph, true);\n\n        box.visible = false;\n    }\n\t\n    isTargetInSelection(target) { return this.targets.includes(target); }\n    hasSelection() { return this.targets.length > 0; }\n    clearSelection() { this.targets.length = 0; }\n    isVisible() { return this._boundingBox.visible; }\n}\n\nfunction getNodesWithin(graph, x1, y1, x2, y2, dst)\n{\n    const fromX = Math.min(x1, x2);\n    const fromY = Math.min(y1, y2);\n    const toX = Math.max(x1, x2);\n    const toY = Math.max(y1, y2);\n\n    for (const node of graph.getNodes())\n    {\n        if (node.x >= fromX && node.x < toX &&\n\t\t\tnode.y >= fromY && node.y < toY)\n        {\n            dst.push(node);\n        }\n    }\n    return dst;\n}\n\nexport default SelectionBox;\n","import AbstractInputHandler from 'util/input/AbstractInputHandler.js';\n\nclass SelectionBoxInputHandler extends AbstractInputHandler\n{\n    constructor(inputController, graphController, selectionBox)\n    {\n        super();\n\n        this._inputController = inputController;\n        this._graphController = graphController;\n        this._selectionBox = selectionBox;\n    }\n\n    /** @override */\n    onPreInputEvent(pointer)\n    {\n        const inputController = this._inputController;\n        const selectionBox = this._selectionBox;\n        if (selectionBox.hasSelection())\n        {\n            if (!inputController.isMoveMode(pointer.getInputAdapter()) || !selectionBox.isTargetInSelection(inputController.getImmediateTargetSource()))\n            {\n                selectionBox.clearSelection();\n            }\n        }\n\n        return false;\n    }\n\n    /** @override */\n    onDragStart(pointer)\n    {\n        const inputController = this._inputController;\n        if (inputController.hasActiveTarget()) return false;\n        if (inputController.isMoveMode(pointer.getInputAdapter())) return false;\n        if (inputController.hasCurrentTarget()) return false;\n\n        const inputEventPosition = pointer.getInputEventPosition();\n        this._selectionBox.beginSelection(this._graphController.getGraph(), inputEventPosition.x, inputEventPosition.y);\n        return true;\n    }\n  \n    /** @override */\n    onDragMove(pointer)\n    {\n        if (this._selectionBox.isVisible())\n        {\n            this._selectionBox.updateSelection(this._graphController.getGraph(), pointer.x, pointer.y);\n        }\n    }\n  \n    /** @override */\n    onDragStop(pointer)\n    {\n        if (this._selectionBox.isVisible())\n        {\n            this._selectionBox.endSelection(this._graphController.getGraph(), pointer.x, pointer.y);\n        }\n    }\n}\n\nexport default SelectionBoxInputHandler;","import React from 'react';\n\nimport BoxRenderer from 'graph2/renderer/BoxRenderer.js';\nimport GraphHighlightLayer from './GraphHighlightLayer.js';\n\nimport SelectionBox from 'graph2/controller/SelectionBox.js';\nimport SelectionBoxInputHandler from 'graph2/inputhandler/SelectionBoxInputHandler.js';\n\nclass SelectionBoxLayer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        const inputController = props.inputController;\n        const graphController = props.graphController;\n\n        this._selectionBox = new SelectionBox();\n        this._selectionBoxInputHandler = new SelectionBoxInputHandler(inputController, graphController, this._selectionBox);\n    }\n\n    /** @override */\n    componentDidMount()\n    {\n        const inputController = this.props.inputController;\n        if (inputController)\n        {\n            inputController.setSelectionBox(this._selectionBox);\n        }\n\n        const inputContext = this.props.inputContext;\n        if (inputContext)\n        {\n            const inputPriority = this.props.inputPriority || -1;\n            inputContext.addInputHandler(this._selectionBoxInputHandler, inputPriority);\n        }\n    }\n\n    /** @override */\n    componentWillUnmount()\n    {\n        this._selectionBox.clearSelection();\n\n        const inputContext = this.props.inputContext;\n        if (inputContext)\n        {\n            inputContext.removeInputHandler(this._selectionBoxInputHandler);\n        }\n    }\n\n    getSelectionBox() { return this._selectionBox; }\n    getSelectionBoxInputHandler() { return this._selectionBoxInputHandler; }\n\n    /** @override */\n    render()\n    {\n        const selectionBox = this._selectionBox;\n        const selectionBoundingBox = selectionBox.getBoundingBox();\n\n        return (\n            <React.Fragment>\n                <GraphHighlightLayer\n                    nodes={selectionBox.getSelection()} />\n                <BoxRenderer visible={selectionBox.isVisible()}\n                    fromX={selectionBoundingBox.fromX}\n                    fromY={selectionBoundingBox.fromY}\n                    toX={selectionBoundingBox.toX}\n                    toY={selectionBoundingBox.toY} />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default SelectionBoxLayer;","//https://www.flaticon.com/free-icon/png_136523\nimport React from 'react';\n\nclass PNGIcon extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    return <svg className=\"png-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 56 56\">\n      <g>\n        <path fill=\"#E9E9E0\" d=\"M36.985,0H7.963C7.155,0,6.5,0.655,6.5,1.926V55c0,0.345,0.655,1,1.463,1h40.074 c0.808,0,1.463-0.655,1.463-1V12.978c0-0.696-0.093-0.92-0.257-1.085L37.607,0.257C37.442,0.093,37.218,0,36.985,0z\"/>\n        <path fill=\"#659C35\" d=\"M48.037,56H7.963C7.155,56,6.5,55.345,6.5,54.537V39h43v15.537C49.5,55.345,48.845,56,48.037,56z\"/>\n        <polygon fill=\"#D9D7CA\" points=\"37.5,0.151 37.5,12 49.349,12 \t\"/>\n        <g>\n          <path fill=\"#FFFFFF\" d=\"M17.385,53h-1.641V42.924h2.898c0.428,0,0.852,0.068,1.271,0.205 c0.419,0.137,0.795,0.342,1.128,0.615c0.333,0.273,0.602,0.604,0.807,0.991s0.308,0.822,0.308,1.306 c0,0.511-0.087,0.973-0.26,1.388c-0.173,0.415-0.415,0.764-0.725,1.046c-0.31,0.282-0.684,0.501-1.121,0.656 s-0.921,0.232-1.449,0.232h-1.217V53z M17.385,44.168v3.992h1.504c0.2,0,0.398-0.034,0.595-0.103 c0.196-0.068,0.376-0.18,0.54-0.335c0.164-0.155,0.296-0.371,0.396-0.649c0.1-0.278,0.15-0.622,0.15-1.032 c0-0.164-0.023-0.354-0.068-0.567c-0.046-0.214-0.139-0.419-0.28-0.615c-0.142-0.196-0.34-0.36-0.595-0.492 c-0.255-0.132-0.593-0.198-1.012-0.198H17.385z\"/>\n          <path fill=\"#FFFFFF\" d=\"M31.316,42.924V53h-1.668l-3.951-6.945V53h-1.668V42.924h1.668l3.951,6.945v-6.945H31.316z\"/>\n          <path fill=\"#FFFFFF\" d={\"M41.16,47.805v3.896c-0.21,0.265-0.444,0.48-0.704,0.649s-0.533,0.308-0.82,0.417 \" +\n            \"S39.052,52.954,38.747,53c-0.306,0.046-0.608,0.068-0.909,0.068c-0.602,0-1.155-0.109-1.661-0.328s-0.948-0.542-1.326-0.971 \" +\n            \"c-0.378-0.429-0.675-0.966-0.889-1.613c-0.214-0.647-0.321-1.395-0.321-2.242s0.107-1.593,0.321-2.235 \" +\n            \"c0.214-0.643,0.51-1.178,0.889-1.606c0.378-0.429,0.822-0.754,1.333-0.978c0.51-0.224,1.062-0.335,1.654-0.335 \" +\n            \"c0.547,0,1.057,0.091,1.531,0.273c0.474,0.183,0.897,0.456,1.271,0.82l-1.135,1.012c-0.219-0.265-0.47-0.456-0.752-0.574 \" +\n            \"c-0.283-0.118-0.574-0.178-0.875-0.178c-0.337,0-0.659,0.063-0.964,0.191c-0.306,0.128-0.579,0.344-0.82,0.649 \" +\n            \"c-0.242,0.306-0.431,0.699-0.567,1.183s-0.21,1.075-0.219,1.777c0.009,0.684,0.08,1.276,0.212,1.777 \" +\n            \"c0.132,0.501,0.314,0.911,0.547,1.23s0.497,0.556,0.793,0.711c0.296,0.155,0.608,0.232,0.937,0.232c0.1,0,0.234-0.007,0.403-0.021 \" +\n            \"c0.168-0.014,0.337-0.036,0.506-0.068c0.168-0.032,0.33-0.075,0.485-0.13c0.155-0.055,0.269-0.132,0.342-0.232v-2.488h-1.709 v-1.121H41.16z\"}/>\n        </g>\n        <circle fill=\"#F3D55B\" cx=\"18.931\" cy=\"14.431\" r=\"4.569\"/>\n        <polygon fill=\"#88C057\" points=\"6.5,39 17.5,39 49.5,39 49.5,28 39.5,18.5 29,30 23.517,24.517 \t\"/>\n      </g>\n    </svg>;\n  }\n}\n\nexport default PNGIcon;\n","//https://www.flaticon.com/free-icon/jpg_136524\nimport React from 'react';\n\nclass JPGIcon extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    return <svg className=\"jpg-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 56 56\">\n      <g>\n        <path fill=\"#E9E9E0\" d=\"M36.985,0H7.963C7.155,0,6.5,0.655,6.5,1.926V55c0,0.345,0.655,1,1.463,1h40.074 c0.808,0,1.463-0.655,1.463-1V12.978c0-0.696-0.093-0.92-0.257-1.085L37.607,0.257C37.442,0.093,37.218,0,36.985,0z\"/>\n        <polygon fill=\"#D9D7CA\" points=\"37.5,0.151 37.5,12 49.349,12 \t\"/>\n        <circle fill=\"#F3D55B\" cx=\"18.931\" cy=\"14.431\" r=\"4.569\"/>\n        <polygon fill=\"#26B99A\" points=\"6.5,39 17.5,39 49.5,39 49.5,28 39.5,18.5 29,30 23.517,24.517 \t\"/>\n        <path fill=\"#14A085\" d=\"M48.037,56H7.963C7.155,56,6.5,55.345,6.5,54.537V39h43v15.537C49.5,55.345,48.845,56,48.037,56z\"/>\n        <g>\n          <path fill=\"#FFFFFF\" d={\"M21.426,42.65v7.848c0,0.474-0.087,0.873-0.26,1.196c-0.173,0.323-0.406,0.583-0.697,0.779 \" +\n            \"c-0.292,0.196-0.627,0.333-1.005,0.41C19.085,52.961,18.696,53,18.295,53c-0.201,0-0.436-0.021-0.704-0.062 \" +\n            \"c-0.269-0.041-0.547-0.104-0.834-0.191s-0.563-0.185-0.827-0.294c-0.265-0.109-0.488-0.232-0.67-0.369l0.697-1.107 \" +\n            \"c0.091,0.063,0.221,0.13,0.39,0.198c0.168,0.068,0.353,0.132,0.554,0.191c0.2,0.06,0.41,0.111,0.629,0.157 \" +\n            \"s0.424,0.068,0.615,0.068c0.483,0,0.868-0.094,1.155-0.28s0.439-0.504,0.458-0.95V42.65H21.426z\"}/>\n          <path fill=\"#FFFFFF\" d={\"M25.514,52.932h-1.641V42.855h2.898c0.428,0,0.852,0.068,1.271,0.205 \" +\n            \"c0.419,0.137,0.795,0.342,1.128,0.615c0.333,0.273,0.602,0.604,0.807,0.991s0.308,0.822,0.308,1.306 \" +\n            \"c0,0.511-0.087,0.973-0.26,1.388c-0.173,0.415-0.415,0.764-0.725,1.046c-0.31,0.282-0.684,0.501-1.121,0.656 \" +\n            \"s-0.921,0.232-1.449,0.232h-1.217V52.932z M25.514,44.1v3.992h1.504c0.2,0,0.398-0.034,0.595-0.103 \" +\n            \"c0.196-0.068,0.376-0.18,0.54-0.335s0.296-0.371,0.396-0.649c0.1-0.278,0.15-0.622,0.15-1.032c0-0.164-0.023-0.354-0.068-0.567 \" +\n            \"c-0.046-0.214-0.139-0.419-0.28-0.615c-0.142-0.196-0.34-0.36-0.595-0.492C27.5,44.166,27.163,44.1,26.744,44.1H25.514z\"}/>\n          <path fill=\"#FFFFFF\" d={\"M39.5,47.736v3.896c-0.21,0.265-0.444,0.48-0.704,0.649s-0.533,0.308-0.82,0.417 \" +\n            \"s-0.583,0.187-0.889,0.232C36.781,52.978,36.479,53,36.178,53c-0.602,0-1.155-0.109-1.661-0.328s-0.948-0.542-1.326-0.971 \" +\n            \"c-0.378-0.429-0.675-0.966-0.889-1.613c-0.214-0.647-0.321-1.395-0.321-2.242s0.107-1.593,0.321-2.235 \" +\n            \"c0.214-0.643,0.51-1.178,0.889-1.606c0.378-0.429,0.822-0.754,1.333-0.978c0.51-0.224,1.062-0.335,1.654-0.335 \" +\n            \"c0.547,0,1.057,0.091,1.531,0.273c0.474,0.183,0.897,0.456,1.271,0.82l-1.135,1.012c-0.219-0.265-0.47-0.456-0.752-0.574 \" +\n            \"c-0.283-0.118-0.574-0.178-0.875-0.178c-0.337,0-0.659,0.063-0.964,0.191c-0.306,0.128-0.579,0.344-0.82,0.649 \" +\n            \"c-0.242,0.306-0.431,0.699-0.567,1.183s-0.21,1.075-0.219,1.777c0.009,0.684,0.08,1.276,0.212,1.777 \" +\n            \"c0.132,0.501,0.314,0.911,0.547,1.23s0.497,0.556,0.793,0.711c0.296,0.155,0.608,0.232,0.937,0.232c0.1,0,0.234-0.007,0.403-0.021 \" +\n            \"c0.168-0.014,0.337-0.036,0.506-0.068c0.168-0.032,0.33-0.075,0.485-0.13c0.155-0.055,0.269-0.132,0.342-0.232v-2.488h-1.709 \" +\n            \"v-1.121H39.5z\"}/>\n        </g>\n      </g>\n    </svg>;\n  }\n}\n\nexport default JPGIcon;\n","import React from 'react';\n\nclass SVGIcon extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  /** @override */\n  render()\n  {\n    return <svg className=\"svg-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 56 56\">\n    \t<g>\n    \t\t<path fill=\"#E9E9E0\" d=\"M36.985,0H7.963C7.155,0,6.5,0.655,6.5,1.926V55c0,0.345,0.655,1,1.463,1h40.074\n    \t\tc0.808,0,1.463-0.655,1.463-1V12.978c0-0.696-0.093-0.92-0.257-1.085L37.607,0.257C37.442,0.093,37.218,0,36.985,0z\"/>\n    \t\t<polygon fill=\"#D9D7CA\" points=\"37.5,0.151 37.5,12 49.349,12 \t\"/>\n    \t\t<path fill=\"#E57E25\" d=\"M48.037,56H7.963C7.155,56,6.5,55.345,6.5,54.537V39h43v15.537C49.5,55.345,48.845,56,48.037,56z\"/>\n    \t\t<g>\n    \t\t\t<path fill=\"#FFFFFF\"\n    \t\t\t\td=\"M21.459,50.238c0,0.364-0.075,0.718-0.226,1.06s-0.362,0.643-0.636,0.902s-0.61,0.467-1.012,0.622\n    \t\t\ts-0.856,0.232-1.367,0.232c-0.219,0-0.444-0.012-0.677-0.034s-0.467-0.062-0.704-0.116s-0.463-0.13-0.677-0.226\n    \t\t\ts-0.398-0.212-0.554-0.349l0.287-1.176c0.128,0.073,0.289,0.144,0.485,0.212s0.398,0.132,0.608,0.191s0.419,0.107,0.629,0.144\n    \t\t\ts0.405,0.055,0.588,0.055c0.556,0,0.982-0.13,1.278-0.39c0.296-0.26,0.444-0.645,0.444-1.155c0-0.31-0.104-0.574-0.314-0.793\n    \t\t\ts-0.472-0.417-0.786-0.595s-0.654-0.355-1.019-0.533s-0.706-0.388-1.025-0.629s-0.583-0.526-0.793-0.854s-0.314-0.738-0.314-1.23\n    \t\t\tc0-0.446,0.082-0.843,0.246-1.189s0.385-0.641,0.663-0.882s0.602-0.426,0.971-0.554s0.759-0.191,1.169-0.191\n    \t\t\tc0.419,0,0.843,0.039,1.271,0.116s0.774,0.203,1.039,0.376c-0.055,0.118-0.118,0.248-0.191,0.39s-0.142,0.273-0.205,0.396\n    \t\t\ts-0.118,0.226-0.164,0.308s-0.073,0.128-0.082,0.137c-0.055-0.027-0.116-0.063-0.185-0.109s-0.166-0.091-0.294-0.137\n    \t\t\ts-0.296-0.077-0.506-0.096s-0.479-0.014-0.807,0.014c-0.183,0.019-0.355,0.07-0.52,0.157s-0.31,0.193-0.438,0.321\n    \t\t\ts-0.228,0.271-0.301,0.431s-0.109,0.313-0.109,0.458c0,0.364,0.104,0.658,0.314,0.882s0.47,0.419,0.779,0.588\n    \t\t\ts0.647,0.333,1.012,0.492s0.704,0.354,1.019,0.581s0.576,0.513,0.786,0.854S21.459,49.7,21.459,50.238z\"/>\n    \t\t\t<path fill=\"#FFFFFF\" d=\"M25.861,53.055L22.73,42.924h1.873l2.338,8.695l2.475-8.695h1.859l-3.281,10.131H25.861z\"/>\n    \t\t\t<path fill=\"#FFFFFF\"\n    \t\t\t\td=\"M40.668,47.805v3.896c-0.21,0.265-0.444,0.48-0.704,0.649s-0.533,0.308-0.82,0.417\n    \t\t\tS38.561,52.954,38.255,53s-0.608,0.068-0.909,0.068c-0.602,0-1.155-0.109-1.661-0.328s-0.948-0.542-1.326-0.971\n    \t\t\ts-0.675-0.966-0.889-1.613s-0.321-1.395-0.321-2.242s0.107-1.593,0.321-2.235s0.511-1.178,0.889-1.606s0.822-0.754,1.333-0.978\n    \t\t\ts1.062-0.335,1.654-0.335c0.547,0,1.058,0.091,1.531,0.273s0.897,0.456,1.271,0.82l-1.135,1.012\n    \t\t\tc-0.219-0.265-0.47-0.456-0.752-0.574s-0.574-0.178-0.875-0.178c-0.337,0-0.658,0.063-0.964,0.191s-0.579,0.344-0.82,0.649\n    \t\t\ts-0.431,0.699-0.567,1.183s-0.21,1.075-0.219,1.777c0.009,0.684,0.08,1.276,0.212,1.777s0.314,0.911,0.547,1.23\n    \t\t\ts0.497,0.556,0.793,0.711s0.608,0.232,0.937,0.232c0.101,0,0.234-0.007,0.403-0.021s0.337-0.036,0.506-0.068\n    \t\t\ts0.33-0.075,0.485-0.13s0.269-0.132,0.342-0.232v-2.488h-1.709v-1.121H40.668z\"/>\n    \t\t</g>\n    \t\t<path fill=\"#C8BDB8\"\n    \t\t\td=\"M45.5,22v-6h-6v2h-6v-4h-10v4h-6v-2h-6v6h6v-2h3.548c-4.566,2.636-7.548,7.588-7.548,13\n    \t\tc0,0.552,0.447,1,1,1s1-0.448,1-1c0-5.246,3.229-9.999,8-11.995V24h10v-2.995c4.771,1.997,8,6.75,8,11.995c0,0.552,0.447,1,1,1\n    \t\ts1-0.448,1-1c0-5.412-2.982-10.364-7.548-13H39.5v2H45.5z M15.5,20h-2v-2h2V20z M31.5,22h-6v-3.754V16h6v2.246V22z M41.5,18h2v2h-2\n    \t\tV18z\"/>\n    \t</g>\n    </svg>;\n  }\n}\n\nexport default SVGIcon;\n","import React from 'react';\n\nclass PNGFileIcon extends React.PureComponent\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 56 56\">\n                <path fill=\"#E9E9E0\" d=\"M36.985,0H7.963C7.155,0,6.5,0.655,6.5,1.926V55c0,0.345,0.655,1,1.463,1h40.074 c0.808,0,1.463-0.655,1.463-1V12.978c0-0.696-0.093-0.92-0.257-1.085L37.607,0.257C37.442,0.093,37.218,0,36.985,0z\"/>\n                <path fill=\"#659C35\" d=\"M48.037,56H7.963C7.155,56,6.5,55.345,6.5,54.537V39h43v15.537C49.5,55.345,48.845,56,48.037,56z\"/>\n                <polygon fill=\"#D9D7CA\" points=\"37.5,0.151 37.5,12 49.349,12 \t\"/>\n                <path fill=\"#FFFFFF\" d=\"M17.385,53h-1.641V42.924h2.898c0.428,0,0.852,0.068,1.271,0.205 c0.419,0.137,0.795,0.342,1.128,0.615c0.333,0.273,0.602,0.604,0.807,0.991s0.308,0.822,0.308,1.306 c0,0.511-0.087,0.973-0.26,1.388c-0.173,0.415-0.415,0.764-0.725,1.046c-0.31,0.282-0.684,0.501-1.121,0.656 s-0.921,0.232-1.449,0.232h-1.217V53z M17.385,44.168v3.992h1.504c0.2,0,0.398-0.034,0.595-0.103 c0.196-0.068,0.376-0.18,0.54-0.335c0.164-0.155,0.296-0.371,0.396-0.649c0.1-0.278,0.15-0.622,0.15-1.032 c0-0.164-0.023-0.354-0.068-0.567c-0.046-0.214-0.139-0.419-0.28-0.615c-0.142-0.196-0.34-0.36-0.595-0.492 c-0.255-0.132-0.593-0.198-1.012-0.198H17.385z\"/>\n                <path fill=\"#FFFFFF\" d=\"M31.316,42.924V53h-1.668l-3.951-6.945V53h-1.668V42.924h1.668l3.951,6.945v-6.945H31.316z\"/>\n                <path fill=\"#FFFFFF\" d={'M41.16,47.805v3.896c-0.21,0.265-0.444,0.48-0.704,0.649s-0.533,0.308-0.82,0.417 S39.052,52.954,38.747,53c-0.306,0.046-0.608,0.068-0.909,0.068c-0.602,0-1.155-0.109-1.661-0.328s-0.948-0.542-1.326-0.971 c-0.378-0.429-0.675-0.966-0.889-1.613c-0.214-0.647-0.321-1.395-0.321-2.242s0.107-1.593,0.321-2.235 c0.214-0.643,0.51-1.178,0.889-1.606c0.378-0.429,0.822-0.754,1.333-0.978c0.51-0.224,1.062-0.335,1.654-0.335 c0.547,0,1.057,0.091,1.531,0.273c0.474,0.183,0.897,0.456,1.271,0.82l-1.135,1.012c-0.219-0.265-0.47-0.456-0.752-0.574 c-0.283-0.118-0.574-0.178-0.875-0.178c-0.337,0-0.659,0.063-0.964,0.191c-0.306,0.128-0.579,0.344-0.82,0.649 c-0.242,0.306-0.431,0.699-0.567,1.183s-0.21,1.075-0.219,1.777c0.009,0.684,0.08,1.276,0.212,1.777 c0.132,0.501,0.314,0.911,0.547,1.23s0.497,0.556,0.793,0.711c0.296,0.155,0.608,0.232,0.937,0.232c0.1,0,0.234-0.007,0.403-0.021 c0.168-0.014,0.337-0.036,0.506-0.068c0.168-0.032,0.33-0.075,0.485-0.13c0.155-0.055,0.269-0.132,0.342-0.232v-2.488h-1.709 v-1.121H41.16z'}/>\n                <circle fill=\"#F3D55B\" cx=\"18.931\" cy=\"14.431\" r=\"4.569\"/>\n                <polygon fill=\"#88C057\" points=\"6.5,39 17.5,39 49.5,39 49.5,28 39.5,18.5 29,30 23.517,24.517 \t\"/>\n            </svg>\n        );\n    }\n}\nexport default PNGFileIcon;\n","import SessionExporter from 'session/SessionExporter.js';\n\nimport * as ColorHelper from 'util/ColorHelper.js';\n\nimport PNGIcon from 'deprecated/icons/flat/PNGIcon.js';\nimport JPGIcon from 'deprecated/icons/flat/JPGIcon.js';\nimport SVGIcon from 'deprecated/icons/flat/SVGIcon.js';\nimport BWIcon from 'components/iconset/flat/PNGFileIcon.js';\n\nexport const IMAGE_TYPE_PNG = 'png';\nexport const IMAGE_TYPE_JPG = 'jpg';\nexport const IMAGE_TYPE_SVG = 'svg';\nexport const IMAGE_TYPE_BW = 'bw';\n\nconst EXPORT_PADDING_X = 30;\nconst EXPORT_PADDING_Y = 0;\n\nclass NodalGraphImageExporter extends SessionExporter\n{\n    constructor(imageType = IMAGE_TYPE_PNG)\n    {\n        super();\n        this._imageType = imageType;\n    }\n\n    /** @override */\n    exportTarget(exportType, target)\n    {\n        const session = target;\n        const currentModule = session.getCurrentModule();\n        const fileName = session.getProjectName();\n        const workspace = session.getCurrentModule().getGraphView().getViewportComponent();\n        const svgElement = workspace.getSVGElement();\n        const workspaceDim = svgElement.viewBox.baseVal;\n        const width = workspaceDim.width;\n        const height = workspaceDim.height;\n        const svg = this.processSVGForExport(svgElement, width, height, currentModule);\n\n        const fileExt = this._imageType === IMAGE_TYPE_BW ? IMAGE_TYPE_PNG : this._imageType;\n        return Promise.resolve({\n            name: fileName + '.' + fileExt,\n            type: 'image',\n            data: svg,\n            width: width,\n            height: height,\n            'image-type': fileExt\n        });\n    }\n\n    processColorAttribute(themeManager, attributeValue)\n    {\n        if (!attributeValue) return attributeValue;\n\n        const startIndex = attributeValue.indexOf('var(--');\n        if (startIndex < 0) return attributeValue;\n\n        const stopIndex = attributeValue.indexOf(')', startIndex);\n        const value = attributeValue.substring(startIndex + 4, stopIndex);\n        const style = themeManager.getStyleByName(value);\n        let result = style ? style.getValue() : '#000000';\n\n        if (this._imageType === IMAGE_TYPE_BW)\n        {\n            const rgb = ColorHelper.HEXtoRGB(result);\n            ColorHelper.grayscaleRGB(rgb, rgb);\n            result = ColorHelper.RGBtoHEX(rgb);\n        }\n\n        return result;\n    }\n\n    processSVGForExport(element, width, height, currentModule)\n    {\n        const graphController = currentModule.getGraphController();\n\n        const viewport = currentModule.getGraphView().getViewportAdapter();\n        const offsetX = viewport.getOffsetX();\n        const offsetY = viewport.getOffsetY();\n        const bounds = graphController.getGraph().getBoundingRect();\n        const dx = bounds.minX + offsetX - EXPORT_PADDING_X;\n        const dy = bounds.minY + offsetY - EXPORT_PADDING_Y;\n        const w = bounds.width + EXPORT_PADDING_X * 2;\n        const h = bounds.height + EXPORT_PADDING_Y * 2;\n        const clone = element.cloneNode(true);\n        clone.setAttribute('viewBox', dx + ' ' + dy + ' ' + w + ' ' + h);\n        clone.setAttribute('width', width);\n        clone.setAttribute('height', height);\n\n        // Apply the workspace font (refer to Workspace.css)\n        clone.setAttribute('font-size', '16px');\n        clone.setAttribute('font-family', 'monospace');\n        clone.setAttribute('style', '.graph-ui {display: none;}');\n\n        // Go through and replace all colors...\n        const themeManager = currentModule.getApp().getThemeManager();\n        for (const element of clone.getElementsByTagName('*'))\n        {\n            const strokeValue = element.getAttribute('stroke');\n            const strokeResult = this.processColorAttribute(themeManager, strokeValue);\n            if (strokeValue !== strokeResult) element.setAttribute('stroke', strokeResult);\n\n            const fillValue = element.getAttribute('fill');\n            const fillResult = this.processColorAttribute(themeManager, fillValue);\n            if (fillValue !== fillResult) element.setAttribute('fill', fillResult);\n        }\n\n        //Remove unwanted ui elements from image\n        const uiElements = clone.getElementsByClassName('graph-ui');\n        while (uiElements.length > 0)\n        {\n            // This will propagate changes to uiElements, so be careful\n            const e = uiElements[0];\n            e.remove();\n        }\n\n        return clone;\n    }\n\n    /** @override */\n    getIconClass()\n    {\n        switch (this._imageType)\n        {\n        case IMAGE_TYPE_PNG: return PNGIcon;\n        case IMAGE_TYPE_JPG: return JPGIcon;\n        case IMAGE_TYPE_SVG: return SVGIcon;\n        case IMAGE_TYPE_BW: return BWIcon;\n        default: return null;\n        }\n    }\n\n    /** @override */\n    getLabel()\n    {\n        switch (this._imageType)\n        {\n        case IMAGE_TYPE_PNG: return I18N.toString('file.export.png');\n        case IMAGE_TYPE_JPG: return I18N.toString('file.export.jpg');\n        case IMAGE_TYPE_SVG: return I18N.toString('file.export.svg');\n        case IMAGE_TYPE_BW: return I18N.toString('file.export.bw');\n        default: return super.getLabel();\n        }\n    }\n\n    /** @override */\n    getTitle()\n    {\n        switch (this._imageType)\n        {\n        case IMAGE_TYPE_PNG: return I18N.toString('file.export.png.hint');\n        case IMAGE_TYPE_JPG: return I18N.toString('file.export.jpg.hint');\n        case IMAGE_TYPE_SVG: return I18N.toString('file.export.svg.hint');\n        case IMAGE_TYPE_BW: return I18N.toString('file.export.bw.hint');\n        default: return super.getTitle();\n        }\n    }\n\n    getImageType()\n    {\n        return this._imageType;\n    }\n}\n\nexport const IMAGE_EXPORTERS = [\n    new NodalGraphImageExporter(IMAGE_TYPE_PNG),\n    new NodalGraphImageExporter(IMAGE_TYPE_JPG),\n    new NodalGraphImageExporter(IMAGE_TYPE_SVG),\n    new NodalGraphImageExporter(IMAGE_TYPE_BW)\n];\n\nexport function registerImageExporters(exportManager)\n{\n    for (const exporter of IMAGE_EXPORTERS)\n    {\n        exportManager.registerExporter(exporter, 'image-' + exporter.getImageType());\n    }\n}\n\nexport default NodalGraphImageExporter;\n","import React from 'react';\n\nclass TrashCanDetailedIcon extends React.PureComponent\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 26 26\">\n                <path d=\"M 11.5 -0.03125 C 9.542969 -0.03125 7.96875 1.59375 7.96875 3.5625 L 7.96875 4 L 4 4 C 3.449219 4 3 4.449219 3 5 L 3 6 L 2 6 L 2 8 L 4 8 L 4 23 C 4 24.644531 5.355469 26 7 26 L 19 26 C 20.644531 26 22 24.644531 22 23 L 22 8 L 24 8 L 24 6 L 23 6 L 23 5 C 23 4.449219 22.550781 4 22 4 L 18.03125 4 L 18.03125 3.5625 C 18.03125 1.59375 16.457031 -0.03125 14.5 -0.03125 Z M 11.5 2.03125 L 14.5 2.03125 C 15.304688 2.03125 15.96875 2.6875 15.96875 3.5625 L 15.96875 4 L 10.03125 4 L 10.03125 3.5625 C 10.03125 2.6875 10.695313 2.03125 11.5 2.03125 Z M 6 8 L 11.125 8 C 11.25 8.011719 11.371094 8.03125 11.5 8.03125 L 14.5 8.03125 C 14.628906 8.03125 14.75 8.011719 14.875 8 L 20 8 L 20 23 C 20 23.5625 19.5625 24 19 24 L 7 24 C 6.4375 24 6 23.5625 6 23 Z M 8 10 L 8 22 L 10 22 L 10 10 Z M 12 10 L 12 22 L 14 22 L 14 10 Z M 16 10 L 16 22 L 18 22 L 18 10 Z \"/>\n            </svg>\n        );\n    }\n}\nexport default TrashCanDetailedIcon;\n","import React from 'react';\nimport Style from './TrashCanWidget.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport TrashCanDetailedIcon from 'components/iconset/TrashCanDetailedIcon.js';\n\nconst DOUBLE_TAP_TIME = 250;\n\nclass TrashCanWidget extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this._ref = React.createRef();\n        this._buttonElement = React.createRef();\n\n        this.state = {\n            active: false,\n            forceActive: false\n        };\n\n        this._doubleTapTimeout = null;\n\n        this.onMouseEnter = this.onMouseEnter.bind(this);\n        this.onMouseLeave = this.onMouseLeave.bind(this);\n        this.onClick = this.onClick.bind(this);\n\n        // This is kinda a hack to lose trash mode focus...\n        this.onAnyMouseDownNotConsumed = this.onAnyMouseDownNotConsumed.bind(this);\n    }\n\n    onMouseEnter(e)\n    {\n        if (this.state.forceActive) return;\n\n        this.setState({ active: true }, () =>\n        {\n            const onChange = this.props.onChange;\n            if (onChange) onChange(true);\n        });\n    }\n\n    onMouseLeave(e)\n    {\n        if (this.state.forceActive) return;\n\n        this.setState({ active: false }, () =>\n        {\n            const onChange = this.props.onChange;\n            if (onChange) onChange(false);\n        });\n    }\n\n    onClick(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (this._doubleTapTimeout)\n        {\n            // This is a double tap!\n            clearTimeout(this._doubleTapTimeout);\n            this._doubleTapTimeout = null;\n\n            this.setState({ active: false, forceActive: false }, () =>\n            {\n                const onClear = this.props.onClear;\n                if (onClear) onClear();\n                const onChange = this.props.onChange;\n                if (onChange) onChange(false);\n            });\n        }\n        else\n        {\n            // This is a single tap!\n            this.setState((prev, props) =>\n            {\n                const result = !prev.forceActive;\n\n                this._doubleTapTimeout = setTimeout(() =>\n                {\n                    this._doubleTapTimeout = null;\n                }, DOUBLE_TAP_TIME);\n\n                if (result)\n                {\n                    document.documentElement.addEventListener('mousedown', this.onAnyMouseDownNotConsumed);\n                }\n\n                return {\n                    active: result,\n                    forceActive: result\n                };\n            }, () =>\n            {\n                const onChange = this.props.onChange;\n                if (onChange) onChange(this.state.active);\n            });\n        }\n    }\n\n    onAnyMouseDownNotConsumed(e)\n    {\n        if (this.state.forceActive && this._buttonElement.current !== e.target)\n        {\n            e.stopPropagation();\n            e.preventDefault();\n\n            document.documentElement.removeEventListener('mousedown', this.onAnyMouseDownNotConsumed);\n            \n            this.setState({ active: false, forceActive: false }, () =>\n            {\n                const onChange = this.props.onChange;\n                if (onChange) onChange(false);\n            });\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        const visible = this.props.visible;\n        const active = this.state.active;\n        const hide = !active && !visible;\n\n        return (\n            <IconButton ref={this._ref}\n                refButton={this._buttonElement}\n                id={this.props.id}\n                className={Style.trash_container +\n                    (active ? ' active ' : '') +\n                    (hide ? ' hide ' : '') +\n                    ' ' + this.props.className}\n                style={this.props.style}\n                title={'Delete'}\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n                onClick={this.onClick}>\n                <TrashCanDetailedIcon />\n            </IconButton>\n        );\n    }\n}\n\nexport default TrashCanWidget;\n","import React from 'react';\n\nclass MoveIcon extends React.PureComponent\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M13,6V11H18V7.75L22.25,12L18,16.25V13H13V18H16.25L12,22.25L7.75,18H11V13H6V16.25L1.75,12L6,7.75V11H11V6H7.75L12,1.75L16.25,6H13Z\"/>\n            </svg>\n        );\n    }\n}\nexport default MoveIcon;\n","import React from 'react';\nimport Style from './ModeTrayWidget.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport EditPencilIcon from 'components/iconset/EditPencilIcon.js';\nimport MoveIcon from 'components/iconset/MoveIcon.js';\n\nexport const MODE_ACTION = 0;\nexport const MODE_MOVE = 1;\n\nclass ModeTrayWidget extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        const visible = this.props.visible;\n        const mode = this.props.mode;\n        const onChange = this.props.onChange;\n        const hide = !visible;\n\n        return (\n            <div id={this.props.id}\n                className={Style.tray_container +\n                    (hide ? ' hide ' : '') +\n                    ' ' + this.props.className}\n                style={this.props.style}>\n                <IconButton className={Style.tray_button +\n                    (mode === MODE_ACTION ? ' active ' : '')}\n                onClick={() => \n                {\n                    if (onChange) onChange(MODE_ACTION);\n                }}\n                title={I18N.toString('cursor.actionmode')}>\n                    <EditPencilIcon />\n                </IconButton>\n                <IconButton className={Style.tray_button +\n                    (mode === MODE_MOVE ? ' active ' : '')}\n                onClick={() => \n                {\n                    if (onChange) onChange(MODE_MOVE);\n                }}\n                title={I18N.toString('cursor.movemode')}>\n                    <MoveIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\nexport default ModeTrayWidget;\n","import React from 'react';\nimport Style from './ViewportEditLayer.css';\n\nimport TrashCanWidget from '../widgets/TrashCanWidget.js';\nimport ModeTrayWidget, { MODE_ACTION, MODE_MOVE } from '../widgets/ModeTrayWidget.js';\n\nclass ViewportEditLayer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.onTrashChange = this.onTrashChange.bind(this);\n        this.onTrashClear = this.onTrashClear.bind(this);\n        this.onModeChange = this.onModeChange.bind(this);\n    }\n\n    onTrashChange(flag)\n    {\n        this.props.inputController.setTrashMode(flag);\n        if (flag)\n        {\n            this.props.session.getApp().getDrawerComponent().setViewportColor('var(--color-viewport-error)');\n        }\n        else\n        {\n            this.props.session.getApp().getDrawerComponent().setViewportColor(null);\n        }\n    }\n\n    onTrashClear()\n    {\n        this.props.graphController.clearGraph();\n    }\n\n    onModeChange(value)\n    {\n        this.props.inputController.setMoveModeFirst(value === MODE_MOVE);\n    }\n\n    /** @override */\n    render()\n    {\n        const inputController = this.props.inputController;\n        const graphController = this.props.graphController;\n        const viewport = this.props.viewport;\n        const graph = graphController.getGraph();\n\n        let moveMode = null;\n        if (inputController)\n        {\n            if (inputController.isHandlingInput())\n            {\n                moveMode = inputController.isMoveMode(viewport.getInputAdapter()) ? MODE_MOVE : MODE_ACTION;\n            }\n            else\n            {\n                moveMode = inputController.isMoveModeFirst() ? MODE_MOVE : MODE_ACTION;\n            }\n        }\n\n        return (\n            <div id={this.props.id}\n                className={Style.view_container +\n\t\t\t\t\t' ' + this.props.className}\n                style={this.props.style}>\n                <TrashCanWidget className={Style.view_widget}\n                    style={{ bottom: 0, right: 0 }}\n                    visible={!graph.isEmpty() && viewport &&\n\t\t\t\t\t\t(!viewport.getInputAdapter().isUsingTouch() || !viewport.getInputAdapter().isDragging())}\n                    onChange={this.onTrashChange}\n                    onClear={this.onTrashClear} />\n                <ModeTrayWidget className={Style.view_widget}\n                    style={{ bottom: 0, left: 0 }}\n                    visible={inputController}\n                    mode={moveMode}\n                    onChange={this.onModeChange} />\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default ViewportEditLayer;","class LabelFormatter\n{\n    formatLabel(target, nextLabel, prevLabel = null) { return nextLabel; }\n    getDefaultLabel(target) { return ''; }\n\n    formatNodeLabel(nextNodeLabel, prevNodeLabel = null)\n    {\n        return nextNodeLabel;\n    }\n\n    formatEdgeLabel(nextEdgeLabel, prevEdgeLabel = null)\n    {\n        return nextEdgeLabel;\n    }\n\n    getDefaultNodeLabel() { return ''; }\n    getDefaultEdgeLabel() { return ''; }\n}\nexport default LabelFormatter;\n\nexport const DEFAULT_LABEL_FORMATTER = new LabelFormatter();","const DEFAULT_REFRESH_TICKS = 10;\n\nclass GraphChangeHandler\n{\n    constructor(refreshTicks = DEFAULT_REFRESH_TICKS)\n    {\n        this._cachedGraphHash = 0;\n\n        this._refreshTicks = refreshTicks;\n        this._elapsedTicks = Infinity;\n\n        this._listeners = [];\n    }\n\n    addListener(listener)\n    {\n        if (typeof listener !== 'function')\n            throw new Error('Cannot add uncallable listener');\n        this._listeners.push(listener);\n    }\n\n    removeListener(listener)\n    {\n        const i = this._listeners.indexOf(listener);\n        if (i >= 0)\n        {\n            this._listeners.splice(i, 1);\n            return true;\n        }\n        return false;\n    }\n\n    clearListeners() { this._listeners.length = 0; }\n    getListeners() { return this._listeners; }\n\n    reset()\n    {\n        this._elapsedTicks = 0;\n        this._cachedGraphHash = 0;\n    }\n\n    update(graph)\n    {\n        if (++this._elapsedTicks >= this._refreshTicks)\n        {\n            this._elapsedTicks = 0;\n\n            const graphHash = graph.getHashCode(false);\n            if (graphHash !== this._cachedGraphHash)\n            {\n                this._cachedGraphHash = graphHash;\n                for (const listener of this._listeners)\n                {\n                    listener(graph);\n                }\n            }\n        }\n    }\n}\n\nexport default GraphChangeHandler;\n","import {DEFAULT_LABEL_FORMATTER} from './LabelFormatter.js';\n\nimport GraphChangeHandler from './GraphChangeHandler.js';\n\nimport GraphNode from 'graph2/element/GraphNode.js';\nimport GraphEdge from 'graph2/element/GraphEdge.js';\n\nexport const GRAPH_EVENT_CLEAR = 'graph-clear';\n\nclass GraphController\n{\n    constructor(graph)\n    {\n        this._graph = graph;\n        this._graphChangeHandler = new GraphChangeHandler();\n\n        this._labelEditor = null;\n        this._labelFormatter = null;\n\n        this._listeners = [];\n    }\n\n    setLabelEditor(labelEditor)\n    {\n        this._labelEditor = labelEditor;\n        return this;\n    }\n\n    setLabelFormatter(labelFormatter)\n    {\n        this._labelFormatter = labelFormatter;\n        return this;\n    }\n\t\n    addListener(listener)\n    {\n        this._listeners.push(listener);\n        return this;\n    }\n\n    removeListener(listener)\n    {\n        const index = this._listeners.indexOf(listener);\n        if (index >= 0) this._listeners.splice(index, 1);\n    }\n\n    clearListeners() { this._listeners.length = 0; }\n\n    initialize()\n    {\n    }\n\n    update()\n    {\n        if (this._graphChangeHandler)\n        {\n            this._graphChangeHandler.update(this._graph);\n        }\n    }\n\n    destroy()\n    {\n\t\t\n    }\n\t\n    clearGraph()\n    {\n        if (window.confirm(I18N.toString('alert.graph.clear')))\n        {\n            this._graph.clear();\n            this.emitGraphEvent(GRAPH_EVENT_CLEAR);\n        }\n    }\n\n    onGraphEvent(eventName, eventData)\n    {\n        // Do nothing... for now...\n    }\n\n    emitGraphEvent(eventName, eventData = {})\n    {\n        this.onGraphEvent(eventName, eventData);\n\n        for(const listener of this._listeners)\n        {\n            listener.onGraphEvent(this, eventName, eventData);\n        }\n    }\n\n    openLabelEditor(target, defaultLabel = null, callback = null)\n    {\n        if (!this._labelEditor)\n        {\n            if (callback) callback(target, defaultLabel, false);\n            return;\n        }\n\n        const labelEditor = this._labelEditor;\n        const prevLabel = defaultLabel || '';\n        labelEditor.openEditor(target, defaultLabel, (target, value) =>\n        {\n            const hasChanged = !prevLabel || (prevLabel.length > 0 && value !== prevLabel);\n            if (target instanceof GraphEdge)\n            {\n                target.setEdgeLabel(value);\n            }\n            else if (target instanceof GraphNode)\n            {\n                target.setNodeLabel(value);\n            }\n\n            if (callback) callback(target, value, hasChanged);\n        }, (target) =>\n        {\n            if (callback) callback(target, null, false);\n        });\n    }\n\n    getLabelFormatter() { return this._labelFormatter || DEFAULT_LABEL_FORMATTER; }\n    getLabelEditor() { return this._labelEditor; }\n    \n    getGraphChangeHandler() { return this._graphChangeHandler; }\n    getGraph() { return this._graph; }\n}\n\nexport default GraphController;","import React from 'react';\n\nimport EdgeRenderer, {DIRECTED_FORWARD} from 'graph2/renderer/EdgeRenderer.js';\n\nclass GraphEdgeRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const edge = this.props.edge;\n        const stroke = this.props.stroke;\n        const onMouseOver = this.props.onMouseOver;\n        const onMouseOut = this.props.onMouseOut;\n        const pointerEvents = this.props.pointerEvents;\n\n        const start = edge.getStartPoint();\n        const end = edge.getEndPoint();\n        const center = edge.getCenterPoint();\n        const label = edge.getEdgeLabel();\n        const edgeDir = edge.getEdgeDirection();\n\n        return (\n            <React.Fragment>\n                <EdgeRenderer\n                    directed={DIRECTED_FORWARD}\n                    from={start}\n                    to={end}\n                    center={center}\n                    label={label}\n                    direction={edgeDir}\n                    color={stroke}\n                    onMouseOver={onMouseOver ? e =>\n                    {\n                        const value = e.target['value'] || (e.target['value'] = {});\n                        value.source = edge;\n                        onMouseOver(e);\n                    } : null}\n                    onMouseOut={onMouseOut ? e =>\n                    {\n                        const value = e.target['value'] || (e.target['value'] = {});\n                        value.source = edge;\n                        onMouseOut(e);\n                    } : null}\n                    pointerEvents={pointerEvents} />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default GraphEdgeRenderer;\n","import React from 'react';\n\nimport GraphEdgeRenderer from '../../renderer/GraphEdgeRenderer.js';\nimport GraphEdgeInputHandler from '../../inputhandler/GraphEdgeInputHandler.js';\n\nclass GraphEdgeLayer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        const inputController = props.inputController;\n        const graphController = props.graphController;\n        \n        this._graphEdgeInputHandler = new GraphEdgeInputHandler(inputController, graphController);\n    }\n\n    /** @override */\n    componentDidMount()\n    {\n        const inputContext = this.props.inputContext;\n        if (inputContext)\n        {\n            const inputPriority = this.props.inputPriority || -1;\n            inputContext.addInputHandler(this._graphEdgeInputHandler, inputPriority);\n        }\n    }\n\n    /** @override */\n    componentWillUnmount()\n    {\n        const inputContext = this.props.inputContext;\n        if (inputContext)\n        {\n            inputContext.removeInputHandler(this._graphEdgeInputHandler);\n        }\n    }\n\n    getGraphEdgeInputHandler() { return this._graphEdgeInputHandler; }\n\n    /** @override */\n    render()\n    {\n        const inputController = this.props.inputController;\n        const Renderer = this.props.edgeRenderer || GraphEdgeRenderer;\n        const editable = this.props.editable;\n\n        const onMouseOver = inputController ? inputController.onMouseOver : null;\n        const onMouseOut = inputController ? inputController.onMouseOut : null;\n\t\t\n        const edges = [];\n        for(const edge of this.props.edges)\n        {\n            edges.push(\n                <Renderer\n                    key={edge.getGraphElementID()}\n                    edge={edge}\n                    stroke={'var(--color-graph-text)'}\n                    onMouseOver={onMouseOver}\n                    onMouseOut={onMouseOut}\n                    pointerEvents={editable && inputController && inputController.hasPointerEvents(edge) ? 'all' : 'none'} />\n            );\n        }\n\n        return (\n            <g>\n                {edges}\n            </g>\n        );\n    }\n}\n\nexport default GraphEdgeLayer;","import React from 'react';\n\nimport NodeRenderer from 'graph2/renderer/NodeRenderer.js';\n\nclass GraphNodeRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const node = this.props.node;\n        const fill = this.props.fill;\n        const stroke = this.props.stroke;\n        const onMouseOver = this.props.onMouseOver;\n        const onMouseOut = this.props.onMouseOut;\n        const pointerEvents = this.props.pointerEvents;\n\n        const label = node.getNodeLabel();\n        const radius = node.getNodeSize();\n\n        return (\n            <React.Fragment>\n                <NodeRenderer\n                    position={node} \n                    radius={radius}\n                    label={label}\n                    color={fill}\n                    outline={stroke}\n                    onMouseOver={onMouseOver ? e =>\n                    {\n                        const value = e.target['value'] || (e.target['value'] = {});\n                        value.source = node;\n                        onMouseOver(e);\n                    } : null}\n                    onMouseOut={onMouseOut ? e =>\n                    {\n                        const value = e.target['value'] || (e.target['value'] = {});\n                        value.source = node;\n                        onMouseOut(e);\n                    } : null}\n                    pointerEvents={pointerEvents} />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default GraphNodeRenderer;\n","import React from 'react';\n\nimport GraphNodeRenderer from 'graph2/renderer/GraphNodeRenderer.js';\nimport GraphNodeInputHandler from 'graph2/inputhandler/GraphNodeInputHandler.js';\n\nclass GraphNodeLayer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        const inputController = props.inputController;\n        const graphController = props.graphController;\n\n        this._graphNodeInputHandler = new GraphNodeInputHandler(inputController, graphController);\n    }\n\n    /** @override */\n    componentDidMount()\n    {\n        const inputContext = this.props.inputContext;\n        if (inputContext)\n        {\n            const inputPriority = this.props.inputPriority || -1;\n            inputContext.addInputHandler(this._graphNodeInputHandler, inputPriority);\n        }\n    }\n\n    /** @override */\n    componentWillUnmount()\n    {\n        const inputContext = this.props.inputContext;\n        if (inputContext)\n        {\n            inputContext.removeInputHandler(this._graphNodeInputHandler);\n        }\n    }\n\n    getGraphNodeInputHandler() { return this._graphNodeInputHandler; }\n\n    /** @override */\n    render()\n    {\n        const inputController = this.props.inputController;\n        const Renderer = this.props.nodeRenderer || GraphNodeRenderer;\n        const editable = this.props.editable;\n\n        const onMouseOver = inputController ? inputController.onMouseOver : null;\n        const onMouseOut = inputController ? inputController.onMouseOut : null;\n\n        const nodes = [];\n        for (const node of this.props.nodes)\n        {\n            nodes.push(\n                <Renderer\n                    key={node.getGraphElementID()}\n                    node={node}\n                    fill={'var(--color-graph-node)'}\n                    stroke={'var(--color-graph-text)'}\n                    onMouseOver={onMouseOver}\n                    onMouseOut={onMouseOut}\n                    pointerEvents={editable && inputController && inputController.hasPointerEvents(node) ? 'all' : 'none'} />\n            );\n        }\n\n        return (\n            <g>\n                {nodes}\n            </g>\n        );\n    }\n}\n\nexport default GraphNodeLayer;","import React from 'react';\n\nimport StartMarkerRenderer from './StartMarkerRenderer.js';\n\nclass StartNodeMarkerRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this._prevSize = 1;\n    }\n\n    /** @override */\n    render()\n    {\n        const node = this.props.node;\n        const color = this.props.color;\n        const onMouseOver = this.props.onMouseOver;\n        const onMouseOut = this.props.onMouseOut;\n        const pointerEvents = this.props.pointerEvents;\n\n        let offset, size;\n        if ('getNodeSize' in node)\n        {\n            offset = node.getNodeSize();\n            size = node.getNodeSize() / 2;\n\n            this._prevSize = size;\n        }\n        else\n        {\n            offset = 0;\n            size = this._prevSize;\n        }\n\n        return (\n            <React.Fragment>\n                <StartMarkerRenderer\n                    position={node}\n                    offset={offset}\n                    size={size}\n                    color={color}\n                    onMouseOver={onMouseOver ? e =>\n                    {\n                        const value = e.target['value'] || (e.target['value'] = {});\n                        value.source = node;\n                        onMouseOver(e);\n                    } : null}\n                    onMouseOut={onMouseOut ? e =>\n                    {\n                        const value = e.target['value'] || (e.target['value'] = {});\n                        value.source = node;\n                        onMouseOut(e);\n                    } : null}\n                    pointerEvents={pointerEvents} />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default StartNodeMarkerRenderer;\n","import React from 'react';\n\nimport StartNodeMarkerRenderer from '../../renderer/StartNodeMarkerRenderer.js';\nimport IndexedGraphStartMarkerInputHandler from '../../inputhandler/IndexedGraphStartMarkerInputHandler.js';\n\nclass IndexedGraphStartMarkerLayer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        const inputController = props.inputController;\n        const graphController = props.graphController;\n\n        this._startMarkerInputHandler = new IndexedGraphStartMarkerInputHandler(inputController, graphController);\n    }\n\n    /** @override */\n    componentDidMount()\n    {\n        const inputContext = this.props.inputContext;\n        if (inputContext)\n        {\n            const inputPriority = this.props.inputPriority || -1;\n            inputContext.addInputHandler(this._startMarkerInputHandler, inputPriority);\n        }\n    }\n\n    /** @override */\n    componentWillUnmount()\n    {\n        const inputContext = this.props.inputContext;\n        if (inputContext)\n        {\n            inputContext.removeInputHandler(this._startMarkerInputHandler);\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        const inputController = this.props.inputController;\n        const Renderer = this.props.startMarkerRenderer || StartNodeMarkerRenderer;\n        const editable = this.props.editable;\n\n        const graphController = this.props.graphController;\n        const graph = graphController.getGraph();\n        let target = this._startMarkerInputHandler.getGhostMarker();\n        \n        if ('getStartNode' in graph && !target)\n        {\n            target = graph.getStartNode();\n        }\n\n        const onMouseOver = inputController ? inputController.onMouseOver : null;\n        const onMouseOut = inputController ? inputController.onMouseOut : null;\n        \n        return (\n            <g>\n                {target &&\n                    <Renderer\n                        node={target}\n                        color={'var(--color-graph-text)'}\n                        onMouseOver={onMouseOver}\n                        onMouseOut={onMouseOut}\n                        pointerEvents={editable && inputController && inputController.hasPointerEvents(target) ? 'all' : 'none'} />}\n            </g>\n        );\n    }\n}\n\nexport default IndexedGraphStartMarkerLayer;","import React from 'react';\n\nexport const SUBMIT_DELAY = 30;\nexport const SUBMIT_KEY = 'Enter';\nexport const CANCEL_KEY = 'Escape';\n\nclass PatternInput extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.inputElement = null;\n\n        this.placeholder = '';\n        this.maxLength = 524288;/*This is the default value*/\n        this.multiLine = true;\n        this.formatter = null;\n\n        this._submitTimeout = null;\n        this._submit = props.submitOnBlur;\n        this._skipBlur = false;\n        this._skipSelect = false;\n\n        this.state = {\n            prevValue: '',\n            value: ''\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onFocus = this.onFocus.bind(this);\n        this.onBlur = this.onBlur.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n    }\n\n    setFormatter(formatter)\n    {\n        this.formatter = formatter;\n        return this;\n    }\n\n    setPlaceholder(placeholder)\n    {\n        this.placeholder = placeholder;\n        return this;\n    }\n\n    onFocus(e)\n    {\n        if (this._skipSelect)\n        {\n            this.inputElement.select();\n            this._skipSelect = false;\n        }\n    }\n\n    onBlur(e)\n    {\n        if (!this._submitTimeout)\n        {\n            this._submitTimeout = setTimeout(() => \n            {\n                this._submitTimeout = null;\n                if (this._skipBlur) return;\n\n                const submit = this._submit;\n                this._submit = this.props.submitOnBlur;\n                if (document.activeElement !== this.inputElement && submit)\n                {\n                    const value = this.state.value;\n                    if (this.props.onSubmit) this.props.onSubmit(value);\n\n                    this.setState({prevValue: value});\n                }\n                else\n                {\n                    this.setState((prev, props) => \n                    {\n                        return {value: prev.prevValue};\n                    });\n                }\n\n                if (this.props.onBlur) this.props.onBlur(e);\n            }, SUBMIT_DELAY);\n        }\n    }\n\n    onKeyDown(e)\n    {\n        if (e.key === SUBMIT_KEY)\n        {\n            if (e.shiftKey && this.multiLine) return;\n\n            this._submit = true;\n            this.inputElement.blur();\n\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        else if (e.key === CANCEL_KEY)\n        {\n            this.setState((prev, props) => \n            {\n                return {value: prev.prevValue};\n            }, () => \n            {\n                this._submit = false;\n                this.inputElement.blur();\n            });\n\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n\n    onChange(e)\n    {\n        const target = e.target;\n        const caretPosition = target.selectionStart;\n        let value = target.value;\n        if (this.formatter)\n        {\n            value = this.formatter(value, this.state.value);\n        }\n\n        this.setState({value: value}, () => \n        {\n            target.selectionEnd = caretPosition;\n        });\n    }\n\n    focus(select=true)\n    {\n        this._skipSelect = select;\n        this.inputElement.focus();\n    }\n\n    ignoreBlur(ignore)\n    {\n        const prev = this._skipBlur;\n        this._skipBlur = ignore;\n        return prev !== ignore;\n    }\n\n    appendValue(string, separator='', format=true)\n    {\n        const value = this.state.value;\n        if (value && value.length + string.length > this.maxLength) return;\n\n        let result;\n        if (value && value.length > 0)\n        {\n            result = value + separator + string;\n        }\n        else\n        {\n            result = string;\n        }\n\n        if (format && this.formatter)\n        {\n            result = this.formatter(result, this.state.value);\n        }\n\n        this.setState((prev, props) => \n        {\n            return {value: result};\n        });\n    }\n\n    resetValue(string)\n    {\n        this.setState({prevValue: string, value: string});\n    }\n\n    setValue(string, format=true)\n    {\n        let value = string;\n        if (format && this.formatter)\n        {\n            value = this.formatter(value, this.state.value);\n        }\n        this.setState({value: value});\n    }\n\n    getValue()\n    {\n        return this.state.value;\n    }\n\n    /** @override */\n    render()\n    {\n        const placeholder = this.placeholder;\n        const maxlength = this.maxLength;\n        const multiline = this.multiLine;\n        const disabled = this.props.disabled;\n\n        const value = this.state.value;\n\n        return (\n            <div id={this.props.id}\n                className={this.props.className}\n                style={this.props.style}>\n                {\n                    multiline ?\n                        <textarea ref={ref=>this.inputElement=ref}\n                            type=\"text\" rows=\"1\" spellCheck=\"false\"\n                            disabled={disabled}\n                            placeholder={placeholder}\n                            maxLength={maxlength}\n                            value={value || ''}\n                            onChange={this.onChange}\n                            onFocus={this.onFocus}\n                            onBlur={this.onBlur}\n                            onKeyDown={this.onKeyDown}/>\n                        :\n                        <input ref={ref=>this.inputElement=ref}\n                            type=\"text\" spellCheck=\"false\"\n                            disabled={disabled}\n                            placeholder={placeholder}\n                            maxLength={maxlength}\n                            value={value || ''}\n                            onChange={this.onChange}\n                            onFocus={this.onFocus}\n                            onBlur={this.onBlur}\n                            onKeyDown={this.onKeyDown}/>\n                }\n            </div>\n        );\n    }\n}\n\nexport default PatternInput;\n","import React from 'react';\nimport Style from './LabelEditorWidget.css';\n\nimport GraphElement from 'graph2/element/GraphElement.js';\nimport GraphNode from 'graph2/element/GraphNode.js';\nimport GraphEdge from 'graph2/element/GraphEdge.js';\n\nimport PatternInput from 'graph2/components/widgets/pattern/PatternInput.js';\n\nclass LabelEditorWidget extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this._ref = React.createRef();\n        this.inputComponent = null;\n\n        this.state = {\n            open: false\n        };\n\n        this._target = null;\n        this._targetCallback = null;\n\n        this.onInputSubmit = this.onInputSubmit.bind(this);\n        this.onInputBlur = this.onInputBlur.bind(this);\n    }\n\n    openEditor(graphElement, defaultValue = null, onSubmit = null, onCancel = null)\n    {\n        if (!(graphElement instanceof GraphElement))\n            throw new Error('Can only open editor for GraphElements');\n\n        this._target = graphElement;\n        this._targetOnSubmit = onSubmit;\n        this._targetOnCancel = onCancel;\n\n        if (graphElement instanceof GraphNode)\n        {\n            const formatter = this.props.labelFormatter.getNodeLabelFormatter();\n            this.inputComponent.setFormatter(formatter);\n        }\n        else if (graphElement instanceof GraphEdge)\n        {\n            const formatter = this.props.labelFormatter.getEdgeLabelFormatter();\n            this.inputComponent.setFormatter(formatter);\n        }\n\n        this.setState({ open: true }, () =>\n        {\n            this.inputComponent.resetValue(defaultValue || '');\n            this.inputComponent.focus();\n        });\n    }\n\n    closeEditor()\n    {\n        this._target = null;\n        this._targetOnSubmit = null;\n        this._targetOnCancel = null;\n\n        this.inputComponent.setFormatter(null);\n\n        this.setState({ open: false });\n    }\n\n    isEditorOpen()\n    {\n        return this.state.open;\n    }\n\n    getTarget()\n    {\n        return this._target;\n    }\n\n    onInputSubmit(value)\n    {\n        if (this._targetOnSubmit)\n        {\n            this._targetOnSubmit(this._target, value);\n            //Don't handle cancel callbacks...\n            this._targetOnCancel = null;\n        }\n    }\n\n    onInputBlur(e)\n    {\n        if (this._targetOnCancel)\n        {\n            this._targetOnCancel(this._target);\n            //Don't handle submit callbacks...\n            this._targetOnSubmit = null;\n        }\n        this.closeEditor();\n    }\n\n    /** @override */\n    render()\n    {\n        const isEditorOpen = this.state.open;\n\n        const target = this._target;\n        const targetStyle = this.props.style || {};\n        const viewport = this.props.viewport;\n\n        if (viewport)\n        {\n            const viewportAdapter = this.props.viewport.getViewportAdapter();\n\n            if (target)\n            {\n                const center = target.getCenterPoint();\n                const element = viewportAdapter.getElement();\n                const parentClientRect = element.getBoundingClientRect();\n                const screenPos = transformViewToScreen(\n                    element,\n                    center.x + viewportAdapter.getOffsetX(),\n                    center.y + viewportAdapter.getOffsetY()\n                );\n                const x = screenPos.x;\n                const y = screenPos.y;\n                const offsetX = -(this._ref.current.offsetWidth / 2) - parentClientRect.left;\n                const offsetY = -(this._ref.current.offsetHeight / 2) - parentClientRect.top;\n\n                targetStyle['top'] = (y + offsetY) + 'px';\n                targetStyle['left'] = (x + offsetX) + 'px';\n            }\n        }\n\n        return (\n            <div ref={this._ref}\n                id={this.props.id}\n                className={Style.editor_container +\n                    (isEditorOpen ? ' open ' : '') +\n                    ' ' + this.props.className}\n                style={targetStyle}>\n                <PatternInput ref={ref => this.inputComponent = ref}\n                    submitOnBlur={this.props.saveOnExit}\n                    onSubmit={this.onInputSubmit}\n                    onBlur={this.onInputBlur} />\n                <div className={Style.tray_container}>\n                    {this.props.children}\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction transformViewToScreen(svg, x, y)\n{\n    const ctm = svg.getScreenCTM();\n    return {\n        x: (x * ctm.a) + ctm.e,\n        y: (y * ctm.d) + ctm.f\n    };\n}\n\nexport default LabelEditorWidget;\n","export function getUnreachableNodes(graph)\n{\n    if (graph.getNodeCount() <= 1) return [];\n\n    const edges = graph.getEdges();\n    const nodes = graph.getNodes().slice();\n    const startNode = nodes.shift();\n    let nextNodes = [];\n    nextNodes.push(startNode);\n\n    while(nextNodes.length > 0)\n    {\n        const node = nextNodes.pop();\n        for(const edge of edges)\n        {\n            if (edge.getEdgeFrom() === node)\n            {\n                const i = nodes.indexOf(edge.getEdgeTo());\n                if (i >= 0)\n                {\n                    const nextNode = nodes.splice(i, 1)[0];\n                    nextNodes.push(nextNode);\n                }\n            }\n        }\n    }\n\n    return nodes;\n}","export { getUnreachableNodes } from './UnreachableNodes.js';","import GraphEdge from 'graph2/element/GraphEdge.js';\n\nclass AbstractGraphLabeler\n{\n    constructor() {}\n\n    getDefaultLabel(target)\n    {\n        if (target instanceof GraphEdge)\n        {\n            return this.getDefaultEdgeLabel();\n        }\n        else\n        {\n            return this.getDefaultNodeLabel();\n        }\n    }\n\n    getLabelFormatter(target)\n    {\n        if (target instanceof GraphEdge)\n        {\n            return this.getEdgeLabelFormatter();\n        }\n        else\n        {\n            return this.getNodeLabelFormatter();\n        }\n    }\n\n    //Deprecated - use getDefaultLabel()\n    getDefaultNodeLabel()\n    {\n        return '';\n    }\n\n    //Deprecated - use getDefaultLabel()\n    getDefaultEdgeLabel()\n    {\n        return '';\n    }\n\n    //Deprecated - use getDefaultLabel()\n    getNodeLabelFormatter()\n    {\n        throw new Error('Node label formatting is not supported');\n    }\n\n    //Deprecated - use getDefaultLabel()\n    getEdgeLabelFormatter()\n    {\n        throw new Error('Edge label formatting is not supported');\n    }\n}\n\nexport default AbstractGraphLabeler;\n","class AbstractMachineController\n{\n    constructor(module, machineBuilder)\n    {\n        if (!module) throw new Error('Missing module for machine controller');\n        if (!machineBuilder) throw new Error('Missing machine builder for machine controller');\n\n        this._module = module;\n        this._machineBuilder = machineBuilder;\n    }\n\n    initialize(module)\n    {\n        this._machineBuilder.initialize(module);\n    }\n\n    destroy(module)\n    {\n        this._machineBuilder.destroy(module);\n    }\n\n    update(module)\n    {\n    }\n\n    getMachineBuilder()\n    {\n        return this._machineBuilder;\n    }\n\n    getModule()\n    {\n        return this._module;\n    }\n}\n\nexport default AbstractMachineController;\n","const ALLOW_AUTOMATIC_REGISTER = false;\n\nconst Eventable = {\n    __eventListeners: null,\n    mixin(targetClass)\n    {\n        const targetPrototype = targetClass.prototype;\n        Object.assign(targetPrototype, Eventable);\n        delete targetPrototype.mixin;\n    },\n\n    registerEvent(eventName)\n    {\n        if (!this.__eventListeners) this.__eventListeners = new Map();\n\n        if (!this.__eventListeners.has(eventName))\n        {\n            this.__eventListeners.set(eventName, []);\n        }\n        else\n        {\n            throw new Error('Already registered event \\'' + eventName + '\\'');\n        }\n    },\n\n    unregisterEvent(eventName)\n    {\n        if (!this.__eventListeners) return;\n\n        if (this.__eventListeners.has(eventName))\n        {\n            this.__eventListeners.delete(eventName);\n        }\n        else\n        {\n            throw new Error('Unable to find event \\'' + eventName + '\\'');\n        }\n    },\n\n    addEventListener(eventName, listener)\n    {\n        if (!this.__eventListeners) this.__eventListeners = new Map();\n\n        let listeners;\n        if (this.__eventListeners.has(eventName))\n        {\n            listeners = this.__eventListeners.get(eventName);\n        }\n        else if (ALLOW_AUTOMATIC_REGISTER)\n        {\n            listeners = [];\n            this.__eventListeners.set(eventName, listeners);\n        }\n        else\n        {\n            throw new Error('Unable to find event \\'' + eventName + '\\'');\n        }\n\n        listeners.push(listener);\n    },\n\n    removeEventListener(eventName, listener)\n    {\n        if (!this.__eventListeners) return;\n\n        if (this.__eventListeners.has(eventName))\n        {\n            const listeners = this.__eventListeners.get(eventName);\n            let flag = false;\n            let i = listeners.length;\n            while (i--)\n            {\n                if (listeners[i] === listener)\n                {\n                    listeners.splice(i, 1);\n                    flag = true;\n                }\n            }\n\n            if (!flag)\n            {\n                throw new Error('Unable to find listener for event \\'' + eventName + '\\'');\n            }\n        }\n        else\n        {\n            throw new Error('Unknown event \\'' + eventName + '\\'');\n        }\n    },\n\n    clearEventListeners(eventName)\n    {\n        if (!this.__eventListeners) return;\n\n        if (!eventName)\n        {\n            this.__eventListeners.clear();\n        }\n        else if (this.__eventListeners.has(eventName))\n        {\n            const listeners = this.__eventListeners.get(eventName);\n            listeners.length = 0;\n        }\n        else if (ALLOW_AUTOMATIC_REGISTER)\n        {\n            const listeners = [];\n            this.__eventListeners.set(eventName, listeners);\n        }\n        else\n        {\n            throw new Error('Unable to find event \\'' + eventName + '\\'');\n        }\n    },\n\n    countEventListeners(eventName)\n    {\n        if (!this.__eventListeners) return 0;\n        return this.__eventListeners.has(eventName) ? this.__eventListeners.get(eventName).length : 0;\n    },\n\n    getEventListeners(eventName)\n    {\n        if (!this.__eventListeners) return null;\n        return this.__eventListeners.get(eventName);\n    },\n\n    on(eventName, listener)\n    {\n        this.addEventListener(eventName, listener);\n    },\n\n    once(eventName, listener)\n    {\n        const f = (...args) => \n        {\n            try\n            {\n                listener.apply(null, args);\n            }\n            finally\n            {\n                this.removeEventListener(eventName, f);\n            }\n        };\n\n        this.addEventListener(eventName, f);\n    },\n\n    emit(eventName, ...args)\n    {\n        try\n        {\n            if (!this.__eventListeners) return;\n\n            let listeners;\n            if (!this.__eventListeners.has(eventName))\n            {\n                if (ALLOW_AUTOMATIC_REGISTER)\n                {\n                    listeners = [];\n                    this.__eventListeners.set(eventName, listeners);\n                }\n                else\n                {\n                    throw new Error('Unable to find event \\'' + eventName + '\\'');\n                }\n            }\n            else\n            {\n                listeners = this.__eventListeners.get(eventName);\n\n                let result = null;\n                let i = listeners.length;\n                while (i--)\n                {\n                    try\n                    {\n                        result = listeners[i].apply(null, args);\n                    }\n                    catch (e)\n                    {\n                        continue;\n                    }\n\n                    if (result === true) break;\n                }\n            }\n        }\n        finally\n        {\n            this.onEventProcessed(eventName, ...args);\n        }\n    },\n\n    onEventProcessed(eventName, ...args)\n    {\n        //Do nothing.\n    }\n};\n\nexport default Eventable;\n","import AbstractEventHandler from 'session/manager/undo/AbstractEventHandler.js';\n\nclass SafeGraphEventHandler extends AbstractEventHandler\n{\n    constructor(graphController, graphParser)\n    {\n        super();\n\n        this._graphController = graphController;\n        this._graphParser = graphParser;\n        this._graphData = graphParser.objectify(graphController.getGraph());\n    }\n\n    /** @override */\n    applyUndo(undoManager)\n    {\n        const prevEvent = undoManager.getPreviousEvent();\n        if (prevEvent instanceof SafeGraphEventHandler)\n        {\n            prevEvent.applyRedo(undoManager);\n        }\n        else\n        {\n            this._graphController.getGraph().clear();\n        }\n    }\n\n    /** @override */\n    applyRedo(undoManager)\n    {\n        this._graphParser.parse(this._graphData, this._graphController.getGraph());\n    }\n}\nexport default SafeGraphEventHandler;\n","import React from 'react';\nimport Style from './PanelDivider.css';\n\nclass PanelDivider extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        return (\n            <div id={this.props.id}\n                className={Style.panel_divider +\n          ' ' + this.props.className}\n                style={this.props.style}>\n            </div>\n        );\n    }\n}\n\nexport default PanelDivider;\n","import React from 'react';\n\nclass TriangleIcon extends React.PureComponent\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M12 7.77L18.39 18H5.61L12 7.77M12 4L2 20h20L12 4z\"/>\n            </svg>\n        );\n    }\n}\nexport default TriangleIcon;\n","import React from 'react';\nimport Style from './PanelCheckbox.css';\n\nclass PanelCheckbox extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            checked: props.initial || false\n        };\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    setChecked(value)\n    {\n        this.setState({checked: value});\n    }\n\n    isChecked()\n    {\n        return this.state.checked;\n    }\n\n    onChange(e)\n    {\n        const checked = e.target.checked;\n        if (this.state.checked !== checked)\n        {\n            this.setState({checked: checked});\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        return (\n            <div id={this.props.id}\n                className={Style.checkbox_container +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <input type=\"checkbox\" id={this.props.id + '-checkbox'}\n                    name={this.props.id + '-checkbox'} value={this.props.value}\n                    checked={this.state.checked}\n                    disabled={this.props.disabled}\n                    onChange={this.onChange}/>\n                <label htmlFor={this.props.id + '-checkbox'}>{this.props.title}</label>\n            </div>\n        );\n    }\n}\n\nexport default PanelCheckbox;\n","import React from 'react';\n\nconst RETURN_FOCUS_DELAY = 50;\n\nclass PatternInputButton extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.ref = null;\n\n        this._timeout = null;\n\n        this.onMouseDown = this.onMouseDown.bind(this);\n        this.onAnyMouseUp = this.onAnyMouseUp.bind(this);\n    }\n\n    onMouseDown(e)\n    {\n        const parent = this.props.parent;\n        if (parent.ignoreBlur(true))\n        {\n            document.addEventListener('mouseup', this.onAnyMouseUp);\n        }\n\n        if (this.props.onClick)\n        {\n            this.props.onClick(e, this);\n        }\n    }\n\n    onAnyMouseUp()\n    {\n        document.removeEventListener('mouseup', this.onAnyMouseUp);\n\n        if (this._timeout) clearTimeout(this._timeout);\n        this._timeout = setTimeout(() => \n        {\n            this._timeout = null;\n\n            const parent = this.props.parent;\n            parent.ignoreBlur(false);\n\n            if (document.activeElement === this.ref)\n            {\n                parent.focus(false);\n            }\n            else if (document.activeElement !== this.props.parent.inputElement)\n            {\n                parent.onBlur();\n            }\n        }, RETURN_FOCUS_DELAY);\n    }\n\n    /** @override */\n    render()\n    {\n        return (\n            <button ref={ref=>this.ref=ref}\n                id={this.props.id}\n                className={this.props.className}\n                style={this.props.style}\n                title={this.props.title}\n                onMouseDown={this.onMouseDown}>\n                {this.props.title}\n            </button>\n        );\n    }\n}\n\nexport default PatternInputButton;\n","import React from 'react';\n\nclass DownArrowIcon extends React.PureComponent\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"/>\n            </svg>\n        );\n    }\n}\nexport default DownArrowIcon;\n","class MachineChangeHandler\n{\n    constructor()\n    {\n        this._listeners = [];\n    }\n\n    addListener(listener)\n    {\n        if (typeof listener !== 'function')\n            throw new Error('Cannot add uncallable listener');\n        this._listeners.push(listener);\n    }\n\n    removeListener(listener)\n    {\n        const i = this._listeners.indexOf(listener);\n        if (i >= 0)\n        {\n            this._listeners.splice(i, 1);\n            return true;\n        }\n        return false;\n    }\n\n    clearListeners()\n    {\n        this._listeners.length = 0;\n    }\n\n    getListeners()\n    {\n        return this._listeners;\n    }\n\n    update(machineBuilder)\n    {\n        for (const listener of this._listeners)\n        {\n            listener(machineBuilder);\n        }\n    }\n}\n\nexport default MachineChangeHandler;\n","import MachineChangeHandler from 'experimental/MachineChangeHandler.js';\n\nclass AbstractMachineBuilder\n{\n    constructor()\n    {\n        this._machineChangeHandler = new MachineChangeHandler();\n\n        this._errors = [];\n        this._warnings = [];\n\n        this.onGraphChange = this.onGraphChange.bind(this);\n    }\n\n    initialize(module)\n    {\n        module.getGraphController().getGraphChangeHandler().addListener(this.onGraphChange);\n    }\n\n    destroy(module)\n    {\n        module.getGraphController().getGraphChangeHandler().removeListener(this.onGraphChange);\n    }\n\n    onGraphChange(graph)\n    {\n        this.attemptBuildMachine(graph, this.getMachine(), this._errors, this._warnings);\n        this._machineChangeHandler.update(this);\n    }\n\n    attemptBuildGraph(machine, dst)\n    {\n        throw new Error('Missing graph build operation');\n    }\n\n    attemptBuildMachine(graph, dst, errors, warnings)\n    {\n        throw new Error('Missing machine build operation');\n    }\n\n    getMachineErrors()\n    {\n        return this._errors;\n    }\n\n    getMachineWarnings()\n    {\n        return this._warnings;\n    }\n\n    getMachineChangeHandler()\n    {\n        return this._machineChangeHandler;\n    }\n\n    isMachineValid()\n    {\n        return this._errors.length <= 0;\n    }\n\n    getMachine()\n    {\n        throw new Error('Missing machine for builder');\n    }\n}\n\nexport default AbstractMachineBuilder;\n","import GraphNode from 'graph2/element/GraphNode.js';\n\nclass PDANode extends GraphNode\n{\n    constructor(id, x, y)\n    {\n        super(id, x, y);\n\n        this._accept = false;\n\n        //this is not saved to hash since it is an aesthetic option\n        this._custom = false;\n    }\n\n    setNodeAccept(value)\n    {\n        this._accept = value;\n    }\n\n    getNodeAccept()\n    {\n        return this._accept;\n    }\n\n    setNodeCustom(value)\n    {\n        this._custom = value;\n    }\n\n    getNodeCustom()\n    {\n        return this._custom;\n    }\n\n    /** @override */\n    getHashString(usePosition = true)\n    {\n        return super.getHashString(usePosition) + ':' + (this._accept ? '1' : '0');\n    }\n}\n\nexport default PDANode;\n","import QuadraticEdge from 'graph2/element/QuadraticEdge.js';\n\nexport const LINE_SEPARATOR = '\\n';\nexport const SYMBOL_SEPARATOR = ' ';\nexport const READ_SEPARATOR = ',';\nexport const POP_SEPARATOR = '\\u2192';\nexport const EMPTY_CHAR = '\\u03B5';\n\nclass PDAEdge extends QuadraticEdge\n{\n    constructor(id, from, to = null)\n    {\n        super(id, from, to);\n    }\n\n    /** @override */\n    setEdgeLabel(label)\n    {\n        if (label)\n        {\n            super.setEdgeLabel(label);\n        }\n        else\n        {\n            super.setEdgeLabel(\n                EMPTY_CHAR + READ_SEPARATOR +\n                EMPTY_CHAR + POP_SEPARATOR +\n                EMPTY_CHAR);\n        }\n    }\n    \n    getEdgeSymbolsFromLine(line)\n    {\n        line = line.trim();\n        let readIndex = line.indexOf(READ_SEPARATOR);\n        let popIndex = line.indexOf(POP_SEPARATOR);\n\n        if (readIndex <= 0) return [EMPTY_CHAR, EMPTY_CHAR, EMPTY_CHAR];\n        let readSymbol = line.substring(0, readIndex);\n        if (popIndex <= 0) return [readSymbol, EMPTY_CHAR, EMPTY_CHAR];\n        let popSymbol = line.substring(readIndex + 1, popIndex);\n        let pushSymbol = line.substring(popIndex + 1);\n        if (pushSymbol.length <= 0) return [readSymbol, popSymbol, EMPTY_CHAR];\n\n        return [readSymbol, popSymbol, pushSymbol];\n    }\n}\n\nexport default PDAEdge;\n","import IndexedNodeGraph from 'graph2/IndexedNodeGraph.js';\n\nimport PDANode from './element/PDANode.js';\nimport PDAEdge from './element/PDAEdge.js';\n\nclass PDAGraph extends IndexedNodeGraph\n{\n    constructor()\n    {\n        super(PDANode, PDAEdge);\n    }\n}\n\nexport default PDAGraph;\n","import AbstractGraphLabeler from 'graph2/AbstractGraphLabeler.js';\n\nimport\n{\n    EMPTY_CHAR,\n    LINE_SEPARATOR,\n    SYMBOL_SEPARATOR,\n    READ_SEPARATOR,\n    POP_SEPARATOR\n} from './element/PDAEdge.js';\n\nconst DEFAULT_NODE_LABEL_PREFIX = 'q';\n\nclass PDAGraphLabeler extends AbstractGraphLabeler\n{\n    constructor()\n    {\n        super();\n\n        this._prefix = DEFAULT_NODE_LABEL_PREFIX;\n        this._graphController = null;\n    }\n\n    setGraphController(graphController)\n    {\n        this._graphController = graphController;\n        return this;\n    }\n\n    setDefaultNodeLabelPrefix(prefix)\n    {\n        this._prefix = prefix;\n    }\n\n    getDefaultNodeLabelPrefix()\n    {\n        return this._prefix;\n    }\n\n    /** @override */\n    getDefaultNodeLabel()\n    {\n        if (!this._graphController.shouldAutoRenameNodes())\n        {\n            return this.getDefaultNodeLabelPrefix();\n        }\n        else\n        {\n            const graph = this._graphController.getGraph();\n            const otherNodes = [];\n            let nodeIndex = 0;\n\n            const startNode = graph.getStartNode();\n            if (startNode && startNode.getNodeCustom()) nodeIndex = 1;\n\n            let newNodeLabel = this.getDefaultNodeLabelPrefix() + nodeIndex;\n            while (graph.getNodesByLabel(newNodeLabel, otherNodes).length > 0)\n            {\n                otherNodes.length = 0;\n                ++nodeIndex;\n                newNodeLabel = this.getDefaultNodeLabelPrefix() + nodeIndex;\n            }\n\n            return newNodeLabel;\n        }\n    }\n\n    /** @override */\n    getDefaultEdgeLabel()\n    {\n        return '';\n    }\n\n    /** @override */\n    getNodeLabelFormatter()\n    {\n        return (string) => string || '';\n    }\n\n    /** @override */\n    getEdgeLabelFormatter()\n    {\n        return edgeLabelFormatter;\n    }\n}\n\nfunction isValidSymbol(symbol)\n{\n    return symbol.length === 1 &&\n        symbol !== LINE_SEPARATOR &&\n        symbol !== SYMBOL_SEPARATOR &&\n        symbol !== READ_SEPARATOR &&\n        symbol !== POP_SEPARATOR;\n}\n\nfunction edgeLabelFormatter(string, allowNull = false)\n{\n    const lines = string.split(LINE_SEPARATOR);\n    const result = new Set();\n    const length = lines.length;\n\n    let symbols;\n    let symbolLength = 0;\n    for (let i = 0; i < length; ++i)\n    {\n        symbols = lines[i].trim().split('');\n        symbolLength = symbols.length;\n\n        if (symbolLength <= 0)\n        {\n            result.add('');\n            continue;\n        }\n\n        let readSymbol = null;\n        let popSymbol = null;\n        let pushSymbol = null;\n        let symbol = null;\n\n        for (let j = 0; j < symbolLength; ++j)\n        {\n            if (readSymbol === null)\n            {\n                symbol = symbols[j].trim();\n                if (isValidSymbol(symbol))\n                {\n                    readSymbol = symbol;\n                    if (j + 1 < symbolLength && (symbols[j + 1] === READ_SEPARATOR || symbols[j + 1] === SYMBOL_SEPARATOR))\n                    {\n                        ++j;\n                    }\n                }\n            }\n            else if (popSymbol === null)\n            {\n                symbol = symbols[j].trim();\n                if (isValidSymbol(symbol))\n                {\n                    popSymbol = symbol;\n                    if (j + 1 < symbolLength && (symbols[j + 1] === POP_SEPARATOR || symbols[j + 1] === SYMBOL_SEPARATOR))\n                    {\n                        ++j;\n                    }\n                }\n            }\n            else if (pushSymbol === null)\n            {\n                symbol = symbols[j].trim();\n                if (isValidSymbol(symbol))\n                {\n                    pushSymbol = symbol;\n                    break;\n                }\n            }\n        }\n\n        if (readSymbol === null)\n        {\n            result.add('');\n        }\n        else if (popSymbol === null)\n        {\n            result.add(readSymbol + READ_SEPARATOR);\n        }\n        else if (pushSymbol === null)\n        {\n            result.add(readSymbol + READ_SEPARATOR + popSymbol + POP_SEPARATOR);\n        }\n        else\n        {\n            result.add(readSymbol + READ_SEPARATOR + popSymbol + POP_SEPARATOR + pushSymbol);\n        }\n    }\n\n    //If it is an empty string...\n    if (result.size <= 0) return allowNull ? null : EMPTY_CHAR;\n    return Array.from(result).join(LINE_SEPARATOR);\n}\n\nexport default PDAGraphLabeler;\n","import GraphController from 'graph2/controller/GraphController.js';\n\nimport { GRAPH_EVENT_NODE_EDIT_WHILE_DELETE, GRAPH_EVENT_NODE_DELETE, GRAPH_EVENT_NODE_DELETE_ALL } from 'graph2/inputhandler/GraphNodeInputHandler.js';\nimport { GRAPH_EVENT_EDGE_EDIT_WHILE_DELETE, GRAPH_EVENT_EDGE_DELETE } from 'graph2/inputhandler/GraphEdgeInputHandler.js';\nimport { GRAPH_EVENT_START_MARKER_CHANGE } from 'graph2/inputhandler/IndexedGraphStartMarkerInputHandler.js';\n\nimport { WARNING_LAYOUT_ID } from 'session/manager/notification/NotificationManager.js';\nimport PDAGraphLabeler from './PDAGraphLabeler.js';\n\nexport const TRASH_EDITING_NOTIFICATION_TAG = 'tryCreateWhileTrash';\n\n\n// This really shouldn't be here....\nimport GraphLayout from 'modules/fsa2/GraphLayout.js';\nconst DEFAULT_AUTO_RENAME = true;\nconst NODE_SPAWN_RADIUS = 64;\n\n\nclass PDAGraphController extends GraphController\n{\n    constructor(app, graph, graphParser)\n    {\n        super(graph);\n\n        this._app = app;\n\n        this.setLabelFormatter(new PDAGraphLabeler().setGraphController(this));\n\n\n        // This really shouldn't be here...\n\n        this.shouldAutoLabel = DEFAULT_AUTO_RENAME;\n    }\n\n    /** @override */\n    onGraphEvent(eventName, eventData)\n    {\n        super.onGraphEvent(eventName, eventData);\n\n        switch (eventName)\n        {\n        case GRAPH_EVENT_START_MARKER_CHANGE:\n        case GRAPH_EVENT_NODE_DELETE:\n        case GRAPH_EVENT_NODE_DELETE_ALL:\n            if (this.shouldAutoLabel)\n            {\n                this.applyAutoRename();\n            }\n            this._app.getUndoManager().captureEvent();\n            break;\n        case GRAPH_EVENT_NODE_EDIT_WHILE_DELETE:\n        case GRAPH_EVENT_EDGE_EDIT_WHILE_DELETE:\n            this._app.getNotificationManager().pushNotification(\n                I18N.toString('message.warning.cannotmodify'),\n                WARNING_LAYOUT_ID, TRASH_EDITING_NOTIFICATION_TAG, null, true);\n            break;\n        default:\n            this._app.getUndoManager().captureEvent();\n        }\n    }\n\n    getApp() { return this._app; }\n\n    // these really shouldn't be here...\n\n    deleteTargetNodes(targets)\n    {\n        if (!targets || targets.length <= 0) return;\n\n        const graph = this.getGraph();\n        for (const node of targets)\n        {\n            graph.deleteNode(node);\n        }\n\n        //Emit event\n        this.emitGraphEvent(GRAPH_EVENT_NODE_DELETE_ALL, { target: targets });\n    }\n\n    /** @deprecated */\n    getGraphLabeler()\n    {\n        return this.getLabelFormatter();\n    }\n\n    applyAutoLayout()\n    {\n        GraphLayout.applyLayout(this.getGraph());\n\n        this._app.getUndoManager().captureEvent();\n    }\n\n    applyAutoRename()\n    {\n        const graphLabeler = this._labelFormatter;\n        const graph = this._graph;\n\n        if (graph.isEmpty()) return;\n\n        //Reset all default labels...\n        for (const node of graph.getNodes())\n        {\n            if (!node.getNodeCustom()) node.setNodeLabel('');\n        }\n\n        //Rename all default labels appropriately...\n        for (const node of graph.getNodes())\n        {\n            if (!node.getNodeCustom())\n            {\n                node.setNodeLabel(graphLabeler.getDefaultNodeLabel());\n            }\n        }\n    }\n\n    setAutoRenameNodes(enable)\n    {\n        const prev = this.shouldAutoLabel;\n        this.shouldAutoLabel = enable;\n        if (enable && !prev)\n        {\n            this.applyAutoRename();\n        }\n    }\n\n    shouldAutoRenameNodes()\n    {\n        return this.shouldAutoLabel;\n    }\n\n    deleteSelectedNodes(selectedNode)\n    {\n        const selectionBox = this.inputController.getSelectionBox();\n        const selection = selectionBox.getSelection(this.getGraph()).slice();\n\n        //Remove from graph\n        for(const node of selection)\n        {\n            this._graph.deleteNode(node);\n        }\n\n        //Remove from selection\n        selectionBox.clearSelection();\n\n        //Emit event\n        this.emitGraphEvent(GRAPH_EVENT_NODE_DELETE_ALL, { target: selection });\n    }\n\n    deleteTargetNode(target)\n    {\n        this._graph.deleteNode(target);\n\n        //Emit event\n        this.emitGraphEvent(GRAPH_EVENT_NODE_DELETE, { target: target });\n    }\n\n    deleteTargetEdge(target)\n    {\n        this._graph.deleteEdge(target);\n\n        //Emit event\n        this.emitGraphEvent(GRAPH_EVENT_EDGE_DELETE, { target: target });\n    }\n\n    deleteTargetEdges(targets)\n    {\n        if (!targets || targets.length <= 0) return;\n\n        for(const target of targets)\n        {\n            this.deleteTargetEdge(target);\n        }\n    }\n\n    createNode(x, y)\n    {\n        if (typeof x === 'undefined') x = (Math.random() * NODE_SPAWN_RADIUS * 2) - NODE_SPAWN_RADIUS;\n        if (typeof y === 'undefined') y = (Math.random() * NODE_SPAWN_RADIUS * 2) - NODE_SPAWN_RADIUS;\n\n        const node = this._graph.createNode(x, y);\n\n        const newNodeLabel = this.getGraphLabeler().getDefaultNodeLabel();\n        node.setNodeLabel(newNodeLabel);\n\n        this._app.getUndoManager().captureEvent();\n        return node;\n    }\n\n    renameNode(node, newLabel)\n    {\n        node.setNodeLabel(newLabel);\n        node.setNodeCustom(true);\n        this._app.getUndoManager().captureEvent();\n    }\n}\n\nexport default PDAGraphController;","import GraphElement from 'graph2/element/GraphElement.js';\nimport { guid, stringHash } from 'util/MathHelper.js';\n\n// const FROM_STATE_INDEX = 0;\nconst READ_SYMBOL_INDEX = 1;\nconst TO_STATE_INDEX = 2;\nconst POP_SYMBOL_INDEX = 3;\nconst PUSH_SYMBOL_INDEX = 4;\n\nexport const EMPTY_SYMBOL = '&empty';\n\nexport class State\n{\n    constructor(label='', src=null)\n    {\n        this._label = label;\n\n        this._src = src;\n        this._id = src instanceof GraphElement ? src.getGraphElementID() : guid();\n    }\n\n    copy()\n    {\n        const result = new State();\n        result._label = this._label;\n        result._src = this._src;\n        result._id = this._id;\n        return result;\n    }\n\n    getStateLabel() { return this._label; }\n\n    getStateID() { return this._id; }\n    getSource() { return this._src; }\n\n    getHashString()\n    {\n        return this._id;\n    }\n}\n\nexport class Transition\n{\n    constructor(from, to)\n    {\n        this._from = from;\n        this._to = to;\n        this._symbols = new Map();\n    }\n\n    copy()\n    {\n        const result = new Transition();\n        result._from = this._from;\n        result._to = this._to;\n\n        throw new Error('Not yet implemented');\n        /*\n        result._symbols = this._symbols.slice();\n\n        return result;\n        */\n    }\n\n    getSourceState() { return this._from; }\n    getDestinationState() { return this._to; }\n\n    addSymbol(read, pop, push)\n    {\n        const symbol = new Symbol(read, pop, push);\n        this._symbols.set(symbol.getHashString(), symbol);\n    }\n\n    hasSymbol(read, pop=null, push=null)\n    {\n        for(const symbol of this._symbols.values())\n        {\n            if (symbol.getReadSymbol() === read)\n            {\n                if (!pop || symbol.getPopSymbol() === pop)\n                {\n                    if (!push || symbol.getPushSymbol() === push)\n                    {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n    getSymbolsByReadPop(read, pop=null, dst=[])\n    {\n        for(const symbol of this._symbols.values())\n        {\n            if (symbol.getReadSymbol() === read)\n            {\n                if (!pop || symbol.getPopSymbol() === pop)\n                {\n                    dst.push(symbol);\n                }\n            }\n        }\n        return dst;\n    }\n\n    getSymbols() { return this._symbols.values(); }\n\n    getHashString()\n    {\n        let symbolString = '';\n        for(const symbol of this._symbols.values())\n        {\n            symbolString += symbol.getHashString() + ',';\n        }\n        return this._from.getHashString() + ':' + symbolString + ':' + this._to.getHashString();\n    }\n}\n\nexport class Symbol\n{\n    constructor(read, pop, push)\n    {\n        this._read = read;\n        this._pop = pop;\n        this._push = push;\n    }\n\n    getReadSymbol() { return this._read; }\n    getPopSymbol() { return this._pop; }\n    getPushSymbol() { return this._push; }\n\n    getHashString()\n    {\n        return this._read + ';' + this._pop + ';' + this._push;\n    }\n}\n\nclass PDA\n{\n    constructor()\n    {\n    //state id -> state\n        this._states = new Map();\n        //symbol -> symbol use counter\n        this._alphabet = new Map();\n        this._stackAlphabet = new Map();\n        //transition key (from + to) -> transition object\n        this._transitions = new Map();\n        this._finalStates = new Set();\n        this._customSymbols = new Set();\n        this._customStackSymbols = new Set();\n        this._startState = null;\n\n        this._errors = [];\n    }\n\n    /**\n   * Performs a shallow copy of the 2 machines. Any changes to a state will be\n   * reflected in both. However, changes to transitions, alphabet, and final\n   * states will not propagate.\n   */\n    //FIXME: This is not a valid copy\n    copy(pda)\n    {\n    //You are already yourself, don't copy nothing.\n        if (pda === this) return;\n\n        //Make room for the copy...\n        this.clear();\n\n        //Copy state\n        for(const [key, value] of pda._states.entries())\n        {\n            const result = value.copy();\n            this._states.set(key, result);\n\n            //Copy start state\n            if (pda.isStartState(value))\n            {\n                this._startState = result;\n            }\n            //Copy final states\n            if (pda.isFinalState(value))\n            {\n                this._finalStates.add(result);\n            }\n        }\n        //Copy alphabet\n        for(const [key, value] of pda._alphabet.entries())\n        {\n            this._alphabet.set(key, value);\n        }\n        //Copy stack alphabet\n        for(const [key, value] of pda._stackAlphabet.entries())\n        {\n            this._stackAlphabet.set(key, value);\n        }\n        //Copy transitions\n        for(const [key, value] of pda._transitions.entries())\n        {\n            const result = value.copy();\n            result._from = this._states.get(value.getSourceState().getStateID());\n            result._to = this._states.get(value.getDestinationState().getStateID());\n            this._transitions.set(key, result);\n        }\n        //Copy custom symbols\n        for(const symbol of pda._customSymbols)\n        {\n            this._customSymbols.add(symbol);\n        }\n        //Copy custom stack symbols\n        for(const symbol of pda._customStackSymbols)\n        {\n            this._customStackSymbols.add(symbol);\n        }\n\n        //Copy errors\n        for(const error of pda._errors)\n        {\n            //WARNING: if the error's store state objects, they need to be redirected to the copies\n            this._errors.push(error);\n        }\n    }\n\n    clear()\n    {\n        this._states.clear();\n        this._alphabet.clear();\n        this._stackAlphabet.clear();\n        this._transitions.clear();\n        this._finalStates.clear();\n        this._customSymbols.clear();\n        this._customStackSymbols.clear();\n        this._startState = null;\n\n        this._errors.length = 0;\n    }\n\n    validate()\n    {\n    //Reset errors\n        this._errors.length = 0;\n        return true;\n    }\n    isValid() { return this._errors.length == 0; }\n    getErrors() { return this._errors; }\n\n    createState(label='')\n    {\n        return this.addState(new State(label));\n    }\n\n    addState(state)\n    {\n        const stateID = state.getStateID();\n        if (this._states.has(stateID)) throw new Error('Already added state with id \\'' + stateID + '\\'');\n        //Make state as new start state if no other states exist...\n        if (this._states.size <= 0) this._startState = state;\n        //Add to state set\n        this._states.set(stateID, state);\n        return state;\n    }\n\n    removeState(state)\n    {\n        const stateID = state.getStateID();\n        if (!this._states.has(stateID)) return false;\n        this._states.delete(stateID);\n\n        //Deleted the start state, so must pick another one...\n        if (this._startState === state)\n        {\n            if (this._states.size <= 0)\n            {\n                //If no more states to choose from, don't choose anything\n                this._startState = null;\n            }\n            else\n            {\n                //Choose an arbitrary start state\n                this._startState = this._states.values().next().value;\n            }\n        }\n\n        return true;\n    }\n\n    hasStateWithLabel(label)\n    {\n        for(const state of this._states.values())\n        {\n            if (state.getStateLabel() == label)\n            {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    getStatesByLabel(label, dst=[])\n    {\n        for(const state of this._states.values())\n        {\n            if (state.getStateLabel() == label)\n            {\n                dst.push(state);\n            }\n        }\n        return dst;\n    }\n\n    getStateByID(id)\n    {\n        return this._states.get(id);\n    }\n\n    hasState(state) { return this._states.has(state.getStateID()); }\n\n    getStates() { return this._states.values(); }\n\n    getStateCount() { return this._states.size; }\n\n    addTransition(from, to, readSymbol, popSymbol, pushSymbol)\n    {\n        if (!this.hasState(from)) throw new Error('Trying to add a transition to unknown state with label \\'' + from.getStateLabel() + '\\'');\n        if (!this.hasState(to)) throw new Error('Trying to add a transition to unknown state with label \\'' + to.getStateLabel() + '\\'');\n        if (!readSymbol) throw new Error('Cannot add transition for null read symbol - use the empty symbol instead');\n        if (!popSymbol) throw new Error('Cannot add transition for null pop symbol - use the empty symbol instead');\n        if (!pushSymbol) throw new Error('Cannot add transition for null push symbol - use the empty symbol instead');\n\n        const transitionKey = from.getStateID() + '->' + to.getStateID();\n        if (this._transitions.has(transitionKey))\n        {\n            const transition = this._transitions.get(transitionKey);\n            if (!transition.hasSymbol(readSymbol, popSymbol, pushSymbol))\n            {\n                transition.addSymbol(readSymbol, popSymbol, pushSymbol);\n            }\n            else\n            {\n                //Didn't add anything...\n                return false;\n            }\n        }\n        else\n        {\n            const newTransition = new Transition(from, to);\n            newTransition.addSymbol(readSymbol, popSymbol, pushSymbol);\n            this._transitions.set(transitionKey, newTransition);\n        }\n\n        //Add to alphabet...\n        this._incrSymbolCount(readSymbol);\n        this._incrStackSymbolCount(popSymbol);\n        this._incrStackSymbolCount(pushSymbol);\n        return true;\n    }\n\n    //FIXME: not yet implemented\n    removeTransition(from, to, symbol=null)\n    {\n        const transitionKey = from.getStateID() + '->' + to.getStateID();\n        if (!this._transitions.has(transitionKey)) return false;\n\n        const transition = this._transitions.get(transitionKey);\n        const symbols = transition.getSymbols();\n\n        //If deleting a specific symbol...\n        if (symbol)\n        {\n            const index = symbols.indexOf(symbol);\n            if (index >= 0)\n            {\n                //Update symbol counts...\n                this._decrSymbolCount(symbol);\n\n                symbols.splice(index, 1);\n                if (symbols.length <= 0) this._transitions.delete(transitionKey);\n                return true;\n            }\n            else\n            {\n                return false;\n            }\n        }\n        //If deleting a all associated symbols...\n        else\n        {\n            //Update symbol counts...\n            for(const symbol of symbols)\n            {\n                this._decrSymbolCount(symbol);\n            }\n\n            //Remove transition\n            this._transitions.delete(transitionKey);\n            return true;\n        }\n    }\n\n    hasTransition(from, to, symbol=null)\n    {\n        const transitionKey = from.getStateID() + '->' + to.getStateID();\n        if (!this._transitions.has(transitionKey)) return false;\n        //Not checking for specific symbols...\n        if (!symbol) return true;\n\n        //Find the symbol...\n        return this._transitions.get(transitionKey).hasSymbol(symbol);\n    }\n\n    getTransitionSymbols(from, to)\n    {\n        const transitionKey = from.getStateID() + '->' + to.getStateID();\n        if (!this._transitions.has(transitionKey)) return null;\n        return this._transitions.get(transitionKey).getSymbols();\n    }\n\n    getTransitions() { return this._transitions.values(); }\n\n    _incrSymbolCount(symbol)\n    {\n    //Don't add empty symbol to the alphabet\n        if (symbol === EMPTY_SYMBOL) return;\n\n        const symbolCount = this._alphabet.get(symbol) || 0;\n        this._alphabet.set(symbol, symbolCount + 1);\n    }\n\n    _incrStackSymbolCount(stackSymbol)\n    {\n    //Don't add empty symbol to the stack alphabet\n        if (stackSymbol === EMPTY_SYMBOL) return;\n\n        const symbolCount = this._stackAlphabet.get(stackSymbol) || 0;\n        this._stackAlphabet.set(stackSymbol, symbolCount + 1);\n    }\n\n    _decrSymbolCount(symbol)\n    {\n        if (!this._alphabet.has(symbol)) throw new Error('Unable to find valid transition symbol in alphabet');\n\n        //Empty symbol is not in the alphabet\n        if (symbol === EMPTY_SYMBOL) return;\n\n        const symbolCount = this._alphabet.get(symbol);\n        //Delete the symbol, since it is no longer used...\n        if (symbolCount <= 1)\n        {\n            if (!this.isCustomSymbol(symbol))\n            {\n                //Regular symbols are removed if unused...\n                this._alphabet.delete(symbol);\n            }\n            else\n            {\n                //Custom symbols stay in the alphabet, even if unused...\n                this._alphabet.set(symbol, 0);\n            }\n        }\n        else\n        {\n            //Still being used by someone...\n            this._alphabet.set(symbol, symbolCount - 1);\n        }\n    }\n\n    _decrStackSymbolCount(symbol)\n    {\n        if (!this._stackAlphabet.has(symbol)) throw new Error('Unable to find valid transition symbol in alphabet');\n\n        //Empty symbol is not in the alphabet\n        if (symbol === EMPTY_SYMBOL) return;\n\n        const symbolCount = this._stackAlphabet.get(symbol);\n        //Delete the symbol, since it is no longer used...\n        if (symbolCount <= 1)\n        {\n            if (!this.isCustomStackSymbol(symbol))\n            {\n                //Regular symbols are removed if unused...\n                this._stackAlphabet.delete(symbol);\n            }\n            else\n            {\n                //Custom symbols stay in the alphabet, even if unused...\n                this._stackAlphabet.set(symbol, 0);\n            }\n        }\n        else\n        {\n            //Still being used by someone...\n            this._stackAlphabet.set(symbol, symbolCount - 1);\n        }\n    }\n\n    changeSymbol(symbol, newSymbol)\n    {\n        if (symbol === EMPTY_SYMBOL) throw new Error('Cannot change the empty symbol');\n        if (newSymbol === EMPTY_SYMBOL) throw new Error('Cannot change to the empty symbol');\n        if (this._stackAlphabet.has(newSymbol)) throw new Error('Cannot change symbol to another existing symbol');\n\n        throw new Error('Not yet implemented');\n    }\n\n    removeSymbol(symbol)\n    {\n        throw new Error('Not yet implemented');\n    }\n\n    setCustomSymbol(symbol, custom=true)\n    {\n        if (symbol === EMPTY_SYMBOL) throw new Error('Cannot change the empty symbol as a custom symbol');\n\n        if (custom)\n        {\n            if (!this._customSymbols.has(symbol))\n            {\n                this._customSymbols.add(symbol);\n\n                //Add symbol to alphabet if missing...\n                if (!this._alphabet.has(symbol)) this._alphabet.set(symbol, 0);\n            }\n        }\n        else\n        {\n            if (this._customSymbols.has(symbol))\n            {\n                this._customSymbols.delete(symbol);\n\n                //If symbol is unused, delete it\n                if (this._alphabet.has(symbol) && this._alphabet.get(symbol) <= 0) this._alphabet.delete(symbol);\n            }\n        }\n    }\n\n    isCustomSymbol(symbol)\n    {\n        return this._customSymbols.has(symbol);\n    }\n\n    getCustomSymbols()\n    {\n        return this._customSymbols;\n    }\n\n    clearCustomSymbols()\n    {\n        this._customSymbols.clear();\n    }\n\n    isUsedSymbol(symbol)\n    {\n        return this._alphabet.has(symbol) && this._alphabet.get(symbol) > 0;\n    }\n\n    isSymbol(symbol)\n    {\n        return this._alphabet.has(symbol);\n    }\n\n    getAlphabet()\n    {\n        return this._alphabet.keys();\n    }\n\n    /********** STACK ALPHABET **********/\n\n    changeStackSymbol(symbol, newSymbol)\n    {\n        if (symbol === EMPTY_SYMBOL) throw new Error('Cannot change the empty symbol');\n        if (newSymbol === EMPTY_SYMBOL) throw new Error('Cannot change to the empty symbol');\n        if (this._stackAlphabet.has(newSymbol)) throw new Error('Cannot change symbol to another existing symbol');\n\n        throw new Error('Not yet implemented');\n    }\n\n    removeStackSymbol(symbol)\n    {\n        throw new Error('Not yet implemented');\n    }\n\n    setCustomStackSymbol(symbol, custom=true)\n    {\n        if (symbol === EMPTY_SYMBOL) throw new Error('Cannot change the empty symbol as a custom symbol');\n\n        if (custom)\n        {\n            if (!this._customStackSymbols.has(symbol))\n            {\n                this._customStackSymbols.add(symbol);\n\n                //Add symbol to alphabet if missing...\n                if (!this._stackAlphabet.has(symbol)) this._stackAlphabet.set(symbol, 0);\n            }\n        }\n        else\n        {\n            if (this._customStackSymbols.has(symbol))\n            {\n                this._customStackSymbols.delete(symbol);\n\n                //If symbol is unused, delete it\n                if (this._stackAlphabet.has(symbol) && this._stackAlphabet.get(symbol) <= 0) this._stackAlphabet.delete(symbol);\n            }\n        }\n    }\n\n    isCustomStackSymbol(symbol)\n    {\n        return this._customStackSymbols.has(symbol);\n    }\n\n    getCustomStackSymbols()\n    {\n        return this._customStackSymbols;\n    }\n\n    clearCustomStackSymbols()\n    {\n        this._customStackSymbols.clear();\n    }\n\n    isUsedStackSymbol(symbol)\n    {\n        return this._stackAlphabet.has(symbol) && this._stackAlphabet.get(symbol) > 0;\n    }\n\n    isStackSymbol(symbol)\n    {\n        return this._stackAlphabet.has(symbol);\n    }\n\n    getStackAlphabet()\n    {\n        return this._stackAlphabet.keys();\n    }\n\n    /********** OTHER **********/\n\n    setStartState(state)\n    {\n        const stateID = state.getStateID();\n        if (!this._states.has(stateID))\n        {\n            //Add it to the state set\n            this._states.set(stateID, state);\n        }\n        this._startState = state;\n    }\n    isStartState(state) { return this._startState === state; }\n    getStartState() { return this._startState; }\n\n    setFinalState(state, final=true)\n    {\n    //Make final\n        if (final)\n        {\n            //If missing from state set, add it in...\n            if (!this._states.has(state.getStateID()))\n            {\n                this.addState(state);\n            }\n\n            this._finalStates.add(state);\n        }\n        else\n        {\n            //If missing from state set, it would be effectively the same thing as\n            //calling addState(state). So due to ambiguity, don't do it.\n            if (!this._states.has(state.getStateID())) throw new Error('Trying to change final for missing state \\'' + state.getStateLabel() + '\\'');\n\n            this._finalStates.delete(state);\n        }\n    }\n    isFinalState(state) { return this._finalStates.has(state); }\n    getFinalStates() { return this._finalStates; }\n\n    doTransition(state, readSymbol, stack, dst=[])\n    {\n        if (!state) return dst;\n        if (!(state instanceof State)) throw new Error('Invalid state instance type \\'' + (typeof state) + '\\'');\n        if (!this._states.has(state.getStateID())) throw new Error('Unable to find source state with id \\'' + state.getStateID() + '\\'');\n\n        if (!readSymbol) readSymbol = EMPTY_SYMBOL;\n\n        const fromTransitionKey = state.getStateID() + '->';\n        for(const key of this._transitions.keys())\n        {\n            if (key.startsWith(fromTransitionKey))\n            {\n                const transition = this._transitions.get(key);\n                const toState = transition.getDestinationState();\n\n                const validSymbols = [];\n                transition.getSymbolsByReadPop(readSymbol, stack[stack.length - 1], validSymbols);\n                transition.getSymbolsByReadPop(readSymbol, EMPTY_SYMBOL, validSymbols);\n                for(const validSymbol of validSymbols)\n                {\n                    const newStack = stack.slice();\n                    const validPop = validSymbol.getPopSymbol();\n                    const validPush = validSymbol.getPushSymbol();\n\n                    if (validPop !== EMPTY_SYMBOL) newStack.pop();\n                    if (validPush !== EMPTY_SYMBOL) newStack.push(validPush);\n\n                    dst.push([toState, newStack]);\n                }\n            }\n        }\n        return dst;\n    }\n\n    doTerminalTransition(state, readSymbol, stack, dst=[])\n    {\n        if (!state) return dst;\n        if (!this._states.has(state.getStateID())) throw new Error('Unable to find source state with id \\'' + state.getStateID() + '\\'');\n\n        if (!readSymbol) readSymbol = EMPTY_SYMBOL;\n\n        const fromTransitionKey = state.getStateID() + '->';\n        for(const key of this._transitions.keys())\n        {\n            if (key.startsWith(fromTransitionKey))\n            {\n                const transition = this._transitions.get(key);\n                const toState = transition.getDestinationState();\n\n                const validSymbols = [];\n                transition.getSymbolsByReadPop(readSymbol, stack[stack.length - 1], validSymbols);\n                transition.getSymbolsByReadPop(readSymbol, EMPTY_SYMBOL, validSymbols);\n                for(const validSymbol of validSymbols)\n                {\n                    const newStack = stack.slice();\n                    const validPop = validSymbol.getPopSymbol();\n                    const validPush = validSymbol.getPushSymbol();\n\n                    if (validPop !== EMPTY_SYMBOL)\n                    {\n                        if(stack.length == 0)\n                        {\n                            continue;\n                        }\n                        else\n                        {\n                            newStack.pop();\n                        }\n\n                    }\n                    if (validPush !== EMPTY_SYMBOL) newStack.push(validPush);\n\n                    const result = this.doClosureTransition(toState, newStack);\n                    for(const s of result)\n                    {\n                        //Checks if dst includes the new destination and stack pair\n                        let flag = false;\n                        for(const pair of dst)\n                        {\n                            if (pair[0] === s[0])\n                            {\n                                if (isEqualStack(pair[1], s[1]))\n                                {\n                                    flag = true;\n                                    break;\n                                }\n                            }\n                        }\n                        if (!flag) dst.push(s);\n                    }\n                }\n            }\n        }\n\n        return dst;\n    }\n\n    doClosureTransition(state, stack, dst=[])\n    {\n        if (!state) return dst;\n\n        dst.push([state, stack]);\n        for(let i = 0; i < dst.length; ++i)\n        {\n            const thisPair = dst[i];\n            const thisState = thisPair[0];\n            const thisStack = thisPair[1];\n            const transitions = this.getOutgoingTransitions(thisState);\n            for(const transition of transitions)\n            {\n                const readSymbol = transition[READ_SYMBOL_INDEX];\n                const popSymbol = transition[POP_SYMBOL_INDEX];\n                const pushSymbol = transition[PUSH_SYMBOL_INDEX];\n\n                if (readSymbol === EMPTY_SYMBOL &&\n          (popSymbol === thisStack[thisStack.length - 1] ||\n          popSymbol === EMPTY_SYMBOL))\n                {\n                    const newStack = thisStack.slice();\n                    const toState = transition[TO_STATE_INDEX];\n                    if (popSymbol !== EMPTY_SYMBOL) newStack.pop();\n                    if (pushSymbol !== EMPTY_SYMBOL) newStack.push(pushSymbol);\n\n                    //Checks if dst includes the new destination and stack pair\n                    let flag = false;\n                    for(const pair of dst)\n                    {\n                        if (pair[0] === toState)\n                        {\n                            if (isEqualStack(pair[1], newStack))\n                            {\n                                flag = true;\n                                break;\n                            }\n                        }\n                    }\n                    if (!flag) dst.push([toState, newStack]);\n                }\n            }\n        }\n        return dst;\n    }\n\n    getOutgoingTransitions(state, dst=[])\n    {\n        if (!state) return dst;\n        if (!this._states.has(state.getStateID())) throw new Error('Unable to find source state with id \\'' + state.getStateID() + '\\'');\n\n        const fromTransitionKey = state.getStateID() + '->';\n        for(const key of this._transitions.keys())\n        {\n            if (key.startsWith(fromTransitionKey))\n            {\n                const transition = this._transitions.get(key);\n                const symbols = transition.getSymbols();\n                for(const symbol of symbols)\n                {\n                    dst.push([\n                        state,\n                        symbol.getReadSymbol(),\n                        transition.getDestinationState(),\n                        symbol.getPopSymbol(),\n                        symbol.getPushSymbol()\n                    ]);\n                }\n            }\n        }\n\n        return dst;\n    }\n\n    getHashCode()\n    {\n        let string = '';\n        for(const state of this._states.values())\n        {\n            string += state.getHashString() + ',';\n        }\n        string += '|';\n        for(const transition of this._transitions.values())\n        {\n            string += transition.getHashString() + ',';\n        }\n        string += '|';\n        for(const state of this._finalStates)\n        {\n            string += state.getHashString();\n        }\n        string += '|';\n        string += this._startState ? this._startState.getHashString() : '';\n        return stringHash(string);\n    }\n}\n\nfunction isEqualStack(stack1, stack2)\n{\n    const temp = [];\n    for(const element of stack1)\n    {\n        temp.push(element);\n    }\n    for(const element of stack2)\n    {\n        const i = temp.indexOf(element);\n        if (i === -1) return false;\n        temp.splice(i, 1);\n    }\n    return temp.length <= 0;\n}\n\nexport default PDA;\n","import AbstractMachineBuilder from 'modules/abstract/AbstractMachineBuilder.js';\nimport PDA, { EMPTY_SYMBOL, State } from './PDA.js';\nimport PDANode from '../graph/element/PDANode.js';\nimport { LINE_SEPARATOR, EMPTY_CHAR } from '../graph/element/PDAEdge.js';\nimport { getUnreachableNodes } from 'graph2/util/NodeGraphUtils.js';\n\nexport const ERROR_UNREACHABLE_STATE = 'unreachable_state';\nexport const ERROR_DUPLICATE_STATE = 'duplicate_state';\nexport const ERROR_INCOMPLETE_TRANSITION = 'incomplete_transition';\n\nclass PDABuilder extends AbstractMachineBuilder\n{\n    constructor()\n    {\n        super();\n\n        this._machine = new PDA();\n    }\n\n    /** @override */\n    attemptBuildGraph(machine, dst)\n    {\n        dst.clear();\n\n        //Add all states\n        let node;\n        for (const state of machine.getStates())\n        {\n            node = dst.createNode(0, 0);\n            node.setNodeLabel(state.getStateLabel());\n            if (machine.isFinalState(state))\n            {\n                node.setNodeAccept(true);\n            }\n        }\n\n        //Add all transitions\n        let edge, from, to, read;\n        for (let transition of machine.getTransitions())\n        {\n            from = this.getFirstGraphNodeByLabel(dst, transition[0]);\n            read = transition[1];\n            to = this.getFirstGraphNodeByLabel(dst, transition[2]);\n            edge = dst.createEdge(from, to);\n            edge.setEdgeLabel(read);\n            const formattedEdge = dst.formatEdge(edge);\n            if (edge != formattedEdge) dst.deleteEdge(edge);\n        }\n\n        //Set start state\n        const startState = machine.getStartState();\n        dst.setStartNode(this.getFirstGraphNodeByLabel(dst, startState));\n\n        return dst;\n    }\n\n    /** @override */\n    attemptBuildMachine(graph, dst, errors = [], warnings = [])\n    {\n        errors.length = 0;\n        warnings.length = 0;\n\n        const customSymbols = Array.from(dst.getCustomSymbols());\n        const customStackSymbols = Array.from(dst.getCustomStackSymbols());\n        dst.clear();\n        for (const symbol of customSymbols)\n        {\n            dst.setCustomSymbol(symbol);\n        }\n        for (const stackSymbol of customStackSymbols)\n        {\n            dst.setCustomStackSymbol(stackSymbol);\n        }\n\n        const nodeLabels = new Map();\n        const nodeOutgoings = new Map();\n        // const edgeSymbols = new Set();\n        const edgePlaceholders = [];\n        // const edgeEmpties = [];\n\n        const graphNodes = graph.getNodes();\n        const graphEdges = graph.getEdges();\n        const graphStart = graph.getStartNode();\n\n        for (const node of graphNodes)\n        {\n            const nodeLabel = node.getNodeLabel();\n            const state = new State(nodeLabel, node);\n            dst.addState(state);\n\n            if (node.getNodeAccept())\n            {\n                dst.setFinalState(state, true);\n            }\n\n            if (graphStart === node)\n            {\n                dst.setStartState(state);\n            }\n\n            //Check for duplicate states\n            if (nodeLabels.has(nodeLabel)) nodeLabels.get(nodeLabel).push(state);\n            else nodeLabels.set(nodeLabel, [state]);\n\n            //For duplicate transitions\n            nodeOutgoings.set(state, new Map());\n        }\n\n        for (const edge of graphEdges)\n        {\n            const srcNode = edge.getEdgeFrom();\n            const dstNode = edge.getEdgeTo();\n            if (!edge.isPlaceholder() && srcNode instanceof PDANode && dstNode instanceof PDANode)\n            {\n                const srcState = dst.getStateByID(srcNode.getGraphElementID());\n                const dstState = dst.getStateByID(dstNode.getGraphElementID());\n                if (!srcState || !dstState) throw new Error('Cannot find state for edge source/destination nodes - mismatch id');\n\n                const edgeLabelLines = edge.getEdgeLabel().split(LINE_SEPARATOR);\n                for (const line of edgeLabelLines)\n                {\n                    if (!line) continue;\n\n                    const symbols = edge.getEdgeSymbolsFromLine(line);\n\n                    //Translate all labels to symbols\n                    for (let i = 0; i < symbols.length; ++i)\n                    {\n                        let symbol = symbols[i];\n                        switch (symbol)\n                        {\n                        case EMPTY_CHAR:\n                            symbols[i] = EMPTY_SYMBOL;\n                            break;\n                        default:\n                            symbols[i] = symbol;\n                        }\n                    }\n\n                    //Add to machine...\n                    dst.addTransition(srcState, dstState, symbols[0], symbols[1], symbols[2]);\n                }\n            }\n            else\n            {\n                edgePlaceholders.push(edge);\n                continue;\n            }\n        }\n\n        //Check for duplicate node labels\n        for (const [nodeLabel, sharedStates] of nodeLabels.entries())\n        {\n            if (sharedStates.length > 1)\n            {\n                warnings.push({\n                    name: ERROR_DUPLICATE_STATE,\n                    label: nodeLabel,\n                    nodes: sharedStates.map(e => e.getSource())\n                });\n            }\n        }\n\n        //Check for incomplete edge\n        if (edgePlaceholders.length > 0)\n        {\n            errors.push({\n                name: ERROR_INCOMPLETE_TRANSITION,\n                edges: edgePlaceholders\n            });\n        }\n\n        //Check for unreachable nodes\n        const unreachables = getUnreachableNodes(graph);\n        if (unreachables && unreachables.length > 0)\n        {\n            warnings.push({\n                name: ERROR_UNREACHABLE_STATE,\n                nodes: unreachables\n            });\n        }\n\n        if (errors.length <= 0)\n        {\n            //Errors should be empty\n            return this._machine;\n        }\n        else\n        {\n            //Reasons are stored in errors\n            return null;\n        }\n    }\n\n    /** @override */\n    getMachine() { return this._machine; }\n}\n\nexport default PDABuilder;","import AbstractMachineController from 'modules/abstract/AbstractMachineController.js';\n\nimport PDABuilder from 'modules/pda/machine/PDABuilder.js';\n\nimport GraphLayout from 'modules/fsa2/GraphLayout.js';\n\nclass MachineController extends AbstractMachineController\n{\n    constructor(module)\n    {\n        super(module, new PDABuilder());\n\n        this.graphController = null;\n    }\n\n    /** @override */\n    initialize(module)\n    {\n        super.initialize(module);\n\n        this.graphController = module.getGraphController();\n    }\n\n    /** @override */\n    destroy(module)\n    {\n        super.destroy(module);\n    }\n\n    /** @override */\n    update(module)\n    {\n        super.update(module);\n    }\n\n    getFirstGraphNodeByLabel(graph, label)\n    {\n        for (const node of graph.getNodes())\n        {\n            if (node.getNodeLabel() == label)\n            {\n                return node;\n            }\n        }\n\n        return null;\n    }\n\n    setGraphToMachine(graph, machine)\n    {\n        this._machineBuilder.attemptBuildGraph(machine, graph);\n\n        //Auto layout graph\n        GraphLayout.applyLayout(graph);\n    }\n\n    getStates()\n    {\n        return this._machineBuilder.getMachine().getStates();\n    }\n\n    countStates()\n    {\n        return this.getStates().length;\n    }\n\n    getFinalStates()\n    {\n        return this._machineBuilder.getMachine().getFinalStates();\n    }\n\n    getTransitions()\n    {\n        return this._machineBuilder.getMachine().getTransitions();\n    }\n\n    getAlphabet()\n    {\n        const machine = this._machineBuilder.getMachine();\n        return Array.from(machine.getAlphabet());\n    }\n\n    isUsedSymbol(symbol)\n    {\n        return !this.isCustomSymbol(symbol);\n    }\n\n    createSymbol(symbol)\n    {\n        this.addCustomSymbol(symbol);\n    }\n\n    deleteSymbol(symbol)\n    {\n        let edge = null;\n        let index = null;\n        let result = null;\n        const targets = [];\n\n        const graph = this.graphController.getGraph();\n        for (let i = graph.getEdges().length - 1; i >= 0; --i)\n        {\n            edge = graph.getEdges()[i];\n            index = edge.getEdgeLabel().indexOf(symbol);\n            if (index >= 0)\n            {\n                result = edge.getEdgeLabel().substring(0, index) + edge.getEdgeLabel().substring(index + 1);\n                if (result.length > 0)\n                {\n                    edge.setEdgeLabel(result);\n                }\n                else\n                {\n                    edge.setEdgeLabel('');\n                    graph.deleteEdge(edge);\n                }\n                targets.push(edge);\n            }\n        }\n\n        if (targets.length <= 0)\n        {\n            this.getMachineBuilder().removeCustomSymbol(symbol);\n        }\n    }\n\n    renameSymbol(prevSymbol, nextSymbol)\n    {\n        let edge = null;\n        let result = null;\n        const targets = [];\n\n        const graph = this.graphController.getGraph();\n        const length = graph.getEdges().length;\n        for (let i = 0; i < length; ++i)\n        {\n            edge = graph.getEdges()[i];\n            result = edge.getEdgeLabel().replace(prevSymbol, nextSymbol);\n            if (result != edge.getEdgeLabel())\n            {\n                targets.push(edge);\n            }\n            edge.setEdgeLabel(result);\n        }\n\n        if (targets.length <= 0)\n        {\n            this.getMachineBuilder().renameCustomSymbol(prevSymbol, nextSymbol);\n        }\n    }\n\n    getCustomSymbols()\n    {\n        return Array.from(this._machineBuilder.getMachine().getCustomSymbols());\n    }\n\n    isCustomSymbol(symbol)\n    {\n        return this._machineBuilder.isCustomSymbol(symbol);\n    }\n\n    addCustomSymbol(symbol)\n    {\n        this._machineBuilder.getMachine().setCustomSymbol(symbol);\n    }\n\n    clearCustomSymbols()\n    {\n        this._machineBuilder.getMachine().clearCustomSymbols();\n    }\n\n    getStackAlphabet()\n    {\n        const machine = this._machineBuilder.getMachine();\n        return Array.from(machine.getStackAlphabet());\n    }\n\n    isUsedStackSymbol(symbol)\n    {\n        return !this.isCustomStackSymbol(symbol);\n    }\n\n    createStackSymbol(symbol)\n    {\n        this.addCustomStackSymbol(symbol);\n    }\n\n    deleteStackSymbol(symbol)\n    {\n        let edge = null;\n        let index = null;\n        let result = null;\n        const targets = [];\n\n        const graph = this.graphController.getGraph();\n        for (let i = graph.getEdges().length - 1; i >= 0; --i)\n        {\n            edge = graph.getEdges()[i];\n            index = edge.getEdgeLabel().indexOf(symbol);\n            if (index >= 0)\n            {\n                result = edge.getEdgeLabel().substring(0, index) + edge.getEdgeLabel().substring(index + 1);\n                if (result.length > 0)\n                {\n                    edge.setEdgeLabel(result);\n                }\n                else\n                {\n                    edge.setEdgeLabel('');\n                    graph.deleteEdge(edge);\n                }\n                targets.push(edge);\n            }\n        }\n\n        if (targets.length <= 0)\n        {\n            this.getMachineBuilder().removeCustomStackSymbol(symbol);\n        }\n    }\n\n    renameStackSymbol(prevSymbol, nextSymbol)\n    {\n        let edge = null;\n        let result = null;\n        const targets = [];\n\n        const graph = this.graphController.getGraph();\n        const length = graph.getEdges().length;\n        for (let i = 0; i < length; ++i)\n        {\n            edge = graph.getEdges()[i];\n            result = edge.getEdgeLabel().replace(prevSymbol, nextSymbol);\n            if (result != edge.getEdgeLabel())\n            {\n                targets.push(edge);\n            }\n            edge.setEdgeLabel(result);\n        }\n\n        if (targets.length <= 0)\n        {\n            this.getMachineBuilder().renameCustomStackSymbol(prevSymbol, nextSymbol);\n        }\n    }\n\n    getCustomStackSymbols()\n    {\n        return Array.from(this._machineBuilder.getMachine().getCustomStackSymbols());\n    }\n\n    isCustomStackSymbol(symbol)\n    {\n        return this._machineBuilder.isCustomStackSymbol(symbol);\n    }\n\n    addCustomStackSymbol(symbol)\n    {\n        this._machineBuilder.getMachine().setCustomStackSymbol(symbol);\n    }\n\n    clearCustomStackSymbols()\n    {\n        this._machineBuilder.getMachine().clearCustomStackSymbols();\n    }\n}\n\nexport default MachineController;\n","const MAX_COMPUTATION_STEPS = 1000;\n\nexport function solvePDA(pda, input)\n{\n    if (typeof input === 'string') input = input[Symbol.iterator]();\n\n    //Solve it with non-determinism\n    const cachedStates = [];\n    const cachedSymbols = [];\n\n    //Start with the start state...\n    const startState = pda.getStartState();\n    //(index refers to the \"level\" of computation)\n    cachedStates.push({state: startState, stack: [], index: 0});\n    //...and any state defined similarly by closure\n    for (const relatedStateAndStack of pda.doClosureTransition(startState, []))\n    {\n        cachedStates.push({state: relatedStateAndStack[0], stack : relatedStateAndStack[1], index: 0});\n    }\n\n    //The next symbol to compute...\n    let symbol = null;\n\n    //Just to be safe from infinite loops...\n    let counter = 0;\n    while(cachedStates.length > 0)\n    {\n        symbol = input.next().value;\n        if (solvePDAByStep(pda, symbol, cachedStates, cachedSymbols))\n        {\n            return true;\n        }\n\n        //HACK: This is to stop any infinite loops! This will be fixed in the future!\n        ++counter;\n        if (counter > MAX_COMPUTATION_STEPS)\n        {\n            return false;\n        }\n    }\n\n    return false;\n}\n\n//TODO: When an empty transition occurs, it does a closure transition.\n//The closure chain will be stored as a group\n//Any future transitions must not re-enter the group\nexport function solvePDAByStep(pda, symbol, cachedStates, cachedSymbols)\n{\n    //initialize variables\n    let state = null;\n    let stack = null;\n    let nextStates = [];\n    let nextIndex = 0;\n\n    if (symbol)\n    {\n        cachedSymbols.push(symbol);\n    }\n\n    for(const cstate of cachedStates)\n    {\n        state = cstate.state;\n        stack = cstate.stack;\n        symbol = cstate.index < cachedSymbols.length ? cachedSymbols[cstate.index] : null;\n\n        if (symbol)\n        {\n            //Read to next state...\n            nextIndex = cstate.index + 1;\n            for(let nextState of pda.doTerminalTransition(state, symbol, stack))\n            {\n                nextStates.push({state: nextState[0], stack: nextState[1], index: nextIndex});\n            }\n        }\n        else\n        {\n            if (pda.isFinalState(state)) return true;\n        }\n\n        //Read none to next state...\n        nextIndex = cstate.index;\n    }\n    cachedStates.length = 0;\n    cachedStates.push(...nextStates);\n    return false;\n}\n","class TapeContext\n{\n    constructor(inputString, infiniteLeft=false, infiniteRight=false)\n    {\n        this._tapeInput = inputString ? inputString.split('') : [];\n        this._left = infiniteLeft;\n        this._right = infiniteRight;\n\n        this._index = 0;\n    }\n\n    stepForward()\n    {\n        ++this._index;\n    }\n\n    stepBackward()\n    {\n        --this._index;\n    }\n\n    finish()\n    {\n        this._index = (this._tapeInput.length * 2);\n    }\n\n    reset()\n    {\n        this._index = -1;\n    }\n\n    stop()\n    {\n        this.finish();\n        this.reset();\n    }\n\n    changeTapeSymbol(index, symbol='')\n    {\n        this._tapeInput[index] = symbol;\n    }\n\n    getTapeSourceStatesByIndex(index)\n    {\n        return null;\n    }\n\n    getTapeSymbolByIndex(index)\n    {\n        if (index < 0 || index >= this._tapeInput.length) return '';\n        return this._tapeInput[index] || '';\n    }\n\n    isTapeLeftInfinite()\n    {\n        return this._left;\n    }\n\n    isTapeRightInfinite()\n    {\n        return this._right;\n    }\n\n    setCurrentTapeIndex(index)\n    {\n        this._index = index;\n    }\n\n    getCurrentTapeIndex()\n    {\n        return this._index;\n    }\n\n    getTapeInput()\n    {\n        return this._tapeInput;\n    }\n}\n\nexport default TapeContext;\n","import Eventable from 'util/Eventable.js';\n\nimport { solvePDAByStep } from 'modules/pda/machine/PDAUtils.js';\n\nimport TapeContext from './TapeContext.js';\n\nclass TestTapeContext extends TapeContext\n{\n    constructor(tester, graphController, machineController)\n    {\n        super(tester.getTestString(), false, true);\n\n        this._tester = tester;\n        this._graphController = graphController;\n        this._machineController = machineController;\n    }\n\n    /** @override */\n    stepForward()\n    {\n        const graphController = this._graphController;\n        const machineController = this._machineController;\n        this._tester.stepForward(graphController, machineController);\n    }\n\n    /** @override */\n    stepBackward()\n    {\n        const graphController = this._graphController;\n        const machineController = this._machineController;\n        this._tester.stepBackward(graphController, machineController);\n    }\n\n    /** @override */\n    reset()\n    {\n        this._tester.resetPosition();\n    }\n\n    /** @override */\n    finish()\n    {\n        const graphController = this._graphController;\n        const machineController = this._machineController;\n        this._tester.runTest(graphController, machineController, false);\n    }\n\n    /** @override */\n    stop()\n    {\n        this._tester.stopTest();\n    }\n\n    /** @override */\n    changeTapeSymbol(index, symbol='')\n    {\n        throw new Error('Operation not yet supported');\n    }\n\n    /** @override */\n    getTapeSourceStatesByIndex(index)\n    {\n        if (index < 0 || index >= this._tapeInput.length) return null;\n        return this._tester.getNodesAtPosition(index);\n    }\n\n    /** @override */\n    getTapeSymbolByIndex(index)\n    {\n        if (index < 0 || index >= this._tapeInput.length) return [];\n        return this._tapeInput[index] || '';\n    }\n\n    /** @override */\n    setCurrentTapeIndex(index)\n    {\n        this._tester.changePosition(index);\n    }\n\n    /** @override */\n    getCurrentTapeIndex()\n    {\n        return this._tester.getPosition();\n    }\n}\n\nclass StringTester\n{\n    constructor()\n    {\n        this._testString = null;\n        this._testIndex = -1;\n\n        this._tapeContext = null;\n\n        //For nfa solver use\n        this._cachePath = [];\n        this._cachedResult = null;\n        this._resolve = null;\n        this._reject = null;\n\n        this.registerEvent('startTest');\n        this.registerEvent('stepTest');\n        this.registerEvent('stopTest');\n    }\n\n    //TODO: a hack to get current targets.\n    get targets()\n    {\n        if (this._cachePath.length <= 0) return [];\n        const cache = this._cachePath[this._cachePath.length - 1];\n        return cache.targets;\n    }\n\n    startTest(testString, graphController, machineController)\n    {\n        if (!testString) testString = '';\n        if (this._tapeContext) throw new Error('Unable to start an already running test');\n\n        const graph = graphController.getGraph();\n        if (graph.isEmpty()) return Promise.reject();\n\n        this._testString = testString;\n        this._testIndex = -1;\n        this._cachePath.length = 0;\n        this._cachedResult = null;\n        this._tapeContext = new TestTapeContext(this, graphController, machineController);\n\n        this.emit('startTest', this);\n\n        return new Promise((resolve, reject) => \n        {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n    }\n\n    stopTest()\n    {\n        if (!this._tapeContext) throw new Error('Unable to stop null test');\n\n        this.emit('stopTest', this);\n\n        if (!this._resolve) throw new Error('Must call startTest() before anything else');\n        if (!this._reject) throw new Error('Must call startTest() before anything else');\n\n        let testResult = null;\n        if (this._cachePath.length >= this._testString.length)\n        {\n            testResult = this._cachedResult;\n            this._resolve(testResult);\n        }\n        else\n        {\n            testResult = null;\n            this._reject();\n        }\n\n        this._testString = null;\n        this._testIndex = -1;\n        this._cachePath.length = 0;\n        this._cachedResult = null;\n        this._tapeContext = null;\n\n        return Promise.resolve(testResult);\n    }\n\n    runTest(graphController, machineController, thenStop=false)\n    {\n        if (!this._tapeContext) throw new Error('Unable to run null test');\n\n        return new Promise((resolve, reject) => \n        {\n            let result = false;\n            do\n            {\n                result = this.stepForward(graphController, machineController, !thenStop);\n            }\n            while (result);\n\n            resolve(this._cachedResult);\n        }).then((result) => \n        {\n            if (thenStop) return this.stopTest();\n            else return result;\n        });\n    }\n\n    stepForward(graphController, machineController, cacheStep=true)\n    {\n        const machine = machineController.getMachineBuilder().getMachine();\n\n        if (this._testIndex >= this._testString.length) return false;\n        ++this._testIndex;\n\n        if (this._cachePath.length <= this._testIndex)\n        {\n            //Calculate current step...\n            let cachedStates, cachedSymbols = null;\n            const isResult = this._testIndex === this._testString.length;\n\n            //Initialize first step...\n            if (this._testIndex <= 0)\n            {\n                cachedStates = [];\n                cachedSymbols = [];\n\n                const startState = machine.getStartState();\n                for (const relatedStateAndStack of machine.doClosureTransition(startState, []))\n                {\n                    cachedStates.push({state: relatedStateAndStack[0], stack: relatedStateAndStack[1], index: 0});\n                }\n            }\n            else\n            {\n                const prevCache = this._cachePath[this._testIndex - 1];\n                cachedStates = prevCache.states.slice();\n                cachedSymbols = prevCache.symbols.slice();\n\n                //Do the remaining steps...\n                const nextSymbol = this._testString[this._testIndex - 1];\n                solvePDAByStep(machine, nextSymbol, cachedStates, cachedSymbols);\n            }\n\n            //Do one last step for result...\n            if (isResult)\n            {\n                this._cachedResult = solvePDAByStep(machine, null, cachedStates, cachedSymbols);\n            }\n\n            //Store current step...\n            const targets = new Set();\n            for(const cachedState of cachedStates)\n            {\n                const node = cachedState.state.getSource();\n\n                //Couldn't find the node that was solved for this step...\n                if (!node) throw new Error('Could not find node \\'' + cachedState.state + '\\'');\n\n                targets.add(node);\n            }\n            const nextCache = {\n                targets: Array.from(targets),\n                states: cachedStates,\n                symbols: cachedSymbols\n            };\n            this._cachePath.push(nextCache);\n        }\n        else\n        {\n            //Go forward a previously calculated step...by doing nothing...\n        }\n\n        this.emit('stepTest');\n        return true;\n    }\n\n    stepBackward(graphController, machineController)\n    {\n        if (this._testIndex <= 0) return false;\n        --this._testIndex;\n\n        //Go back a step...by doing nothing...\n        this.emit('stepTest');\n        return true;\n    }\n\n    isTesting()\n    {\n        return this._testString !== null;\n    }\n\n    changePosition(position)\n    {\n        if (position >= this._cachePath.length)\n        {\n            this._testIndex = this._cachePath.length - 1;\n        }\n        else\n        {\n            if (position < 0)\n            {\n                this._testIndex = 0;\n            }\n            else if (position >= this._testString.length)\n            {\n                this._testIndex = this._testString.length - 1;\n            }\n            else\n            {\n                this._testIndex = position;\n            }\n        }\n    }\n\n    resetPosition()\n    {\n        this._testIndex = -1;\n    }\n\n    getPosition()\n    {\n        return this._testIndex;\n    }\n\n    isComputedPosition(position)\n    {\n        return this._cachePath.length > position;\n    }\n\n    getCurrentNodes()\n    {\n        if (this._testIndex >= 0 && this._testIndex < this._cachePath.length)\n        {\n            return this._cachePath[this._testIndex];\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    getNodesAtPosition(position)\n    {\n        if (position >= 0 && position < this._cachePath.length)\n        {\n            return this._cachePath[position].targets;\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    getTestString()\n    {\n        return this._testString;\n    }\n\n    getTapeContext()\n    {\n        return this._tapeContext;\n    }\n}\nEventable.mixin(StringTester);\n\nexport default StringTester;\n","import React from 'react';\nimport DefaultNotificationLayout, {STYLE_TYPE_ERROR} from 'session/manager/notification/components/DefaultNotificationLayout.js';\n\nclass StateNotificationLayout extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.targetIndex = 0;\n        this.targetLabel = '';\n        const targets = props.message.targets;\n        for(const target of targets)\n        {\n            if (this.targetLabel.length > 0)\n            {\n                this.targetLabel += ', ';\n            }\n            this.targetLabel += target.getNodeLabel();\n        }\n\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick(e)\n    {\n        const notification = this.props.notification;\n        const message = this.props.message;\n\n        const graphController = this.props.graphController;\n\n        switch(e.target.value)\n        {\n        case 'locate':\n            {\n                const targets = message.targets;\n                const targetLength = targets.length;\n                if (targetLength > 0 && this.targetIndex < targetLength)\n                {\n                    //Locate the target edge\n                    const target = targets[this.targetIndex++];\n                    if (this.targetIndex >= targetLength) this.targetIndex = 0;\n\n                    //Move pointer to target\n                    graphController.focusOnNode(target);\n                }\n            }\n            break;\n        case 'deleteall':\n            {\n                const targets = message.targets;\n                //Delete all target nodes\n                graphController.deleteTargetNodes(targets);\n\n                //Sort the nodes after deleting if enabled...\n                graphController.applyAutoRename();\n\n                //Exit the message\n                notification.close();\n            }\n            break;\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        const message = this.props.message;\n\n        return (\n            <DefaultNotificationLayout id={this.props.id}\n                className={this.props.className}\n                style={this.props.style}\n                styleType={STYLE_TYPE_ERROR}\n                notification={this.props.notification}>\n                <p>{message.text + ': ' + this.targetLabel}</p>\n                <button value=\"locate\" onClick={this.onClick}>\n                    {I18N.toString('message.action.locate')}\n                </button>\n                <button value=\"deleteall\" onClick={this.onClick}>\n                    {I18N.toString('message.action.deleteall')}\n                </button>\n            </DefaultNotificationLayout>\n        );\n    }\n}\n\nexport default StateNotificationLayout;\n","import React from 'react';\nimport DefaultNotificationLayout, {STYLE_TYPE_ERROR} from 'session/manager/notification/components/DefaultNotificationLayout.js';\nimport GraphNode from 'graph2/element/GraphNode.js';\n\nconst ARROW = '\\u2192';\n\nclass TransitionNotificationLayout extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.targetIndex = 0;\n        this.targetLabel = '';\n        const targets = props.message.targets;\n        for(const target of targets)\n        {\n            if (this.targetLabel.length > 0)\n            {\n                this.targetLabel += ', ';\n            }\n            this.targetLabel += '(' + target.getEdgeFrom().getNodeLabel() + ', ' +\n        target.getEdgeLabel() + ') ' +\n        ARROW + ' ' + (target.getEdgeTo() instanceof GraphNode ? target.getEdgeTo().getNodeLabel() : 'null');\n        }\n\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick(e)\n    {\n        const notification = this.props.notification;\n        const message = this.props.message;\n\n        const graphController = this.props.graphController;\n\n        switch(e.target.value)\n        {\n        case 'locate':\n            {\n                const targets = message.targets;\n                const targetLength = targets.length;\n                if (targetLength > 0 && this.targetIndex < targetLength)\n                {\n                    //Locate the target edge\n                    const target = targets[this.targetIndex++];\n                    if (this.targetIndex >= targetLength) this.targetIndex = 0;\n\n                    //Move pointer to target\n                    graphController.focusOnEdge(target);\n                }\n            }\n            break;\n        case 'deleteall':\n            {\n                const targets = message.targets;\n                //Delete all target edges\n                graphController.deleteTargetEdges(targets);\n\n                //Exit the message\n                notification.close();\n            }\n            break;\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        // const message = this.props.message;\n\n        return (\n            <DefaultNotificationLayout id={this.props.id}\n                className={this.props.className}\n                style={this.props.style}\n                styleType={STYLE_TYPE_ERROR}\n                notification={this.props.notification}>\n                <p>{this.props.message.text + ': ' + this.targetLabel}</p>\n                <button value=\"locate\" onClick={this.onClick}>\n                    {I18N.toString('message.action.locate')}\n                </button>\n                <button value=\"deleteall\" onClick={this.onClick}>\n                    {I18N.toString('message.action.deleteall')}\n                </button>\n            </DefaultNotificationLayout>\n        );\n    }\n}\n\nexport default TransitionNotificationLayout;\n","import React from 'react';\nimport DefaultNotificationLayout, {STYLE_TYPE_WARNING} from 'session/manager/notification/components/DefaultNotificationLayout.js';\n\nclass StateUnreachableNotificationLayout extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.targetIndex = 0;\n        this.targetLabel = '';\n        const targets = props.message;\n        for(const target of targets)\n        {\n            if (this.targetLabel.length > 0)\n            {\n                this.targetLabel += ', ';\n            }\n            this.targetLabel += target.getNodeLabel();\n        }\n\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick(e)\n    {\n        const notification = this.props.notification;\n        const message = this.props.message;\n        const graphController = this.props.graphController;\n\n        switch(e.target.value)\n        {\n        case 'locate':\n            {\n                //Locate the target node\n                const target = message[this.targetIndex++];\n                if (this.targetIndex >= message.length)\n                {\n                    this.targetIndex = 0;\n                }\n\n                //Move pointer to target\n                graphController.focusOnNode(target);\n            }\n            break;\n        case 'deleteall':\n            {\n                const targets = message;\n                //Delete all target nodes\n                graphController.deleteTargetNodes(targets);\n\n                //Sort the nodes after deleting if enabled...\n                graphController.applyAutoRename();\n\n                //Exit the message\n                notification.close();\n            }\n            break;\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        return (\n            <DefaultNotificationLayout id={this.props.id}\n                className={this.props.className}\n                style={this.props.style}\n                styleType={STYLE_TYPE_WARNING}\n                notification={this.props.notification}>\n                <p>{I18N.toString('message.warning.unreachable') + ': ' + this.targetLabel}</p>\n                <button value=\"locate\" onClick={this.onClick}>\n                    {I18N.toString('message.action.locate')}\n                </button>\n                <button value=\"deleteall\" onClick={this.onClick}>\n                    {I18N.toString('message.action.deleteall')}\n                </button>\n            </DefaultNotificationLayout>\n        );\n    }\n}\n\nexport default StateUnreachableNotificationLayout;\n","import StateNotificationLayout from './StateNotificationLayout.js';\nexport const STATE_LAYOUT_ID = 'machine-state';\n\nimport TransitionNotificationLayout from './TransitionNotificationLayout.js';\nexport const TRANSITION_LAYOUT_ID = 'machine-transition';\n\nimport StateUnreachableNotificationLayout from './StateUnreachableNotificationLayout.js';\nexport const STATE_UNREACHABLE_LAYOUT_ID = 'machine-state-unreachable';\n\nexport const MACHINE_ERROR_NOTIFICATION_TAG = 'machine-error';\n\nexport function registerNotifications(notificationManager)\n{\n    notificationManager.registerNotificationLayout(STATE_UNREACHABLE_LAYOUT_ID, StateUnreachableNotificationLayout);\n    notificationManager.registerNotificationLayout(STATE_LAYOUT_ID, StateNotificationLayout);\n    notificationManager.registerNotificationLayout(TRANSITION_LAYOUT_ID, TransitionNotificationLayout);\n}\n","import {SUCCESS_LAYOUT_ID} from 'session/manager/notification/NotificationManager.js';\nimport {\n    MACHINE_ERROR_NOTIFICATION_TAG,\n    STATE_LAYOUT_ID,\n    TRANSITION_LAYOUT_ID,\n    STATE_UNREACHABLE_LAYOUT_ID\n} from './components/notifications/PDANotifications.js';\n\nimport {\n    ERROR_UNREACHABLE_STATE,\n    ERROR_DUPLICATE_STATE,\n    ERROR_INCOMPLETE_TRANSITION\n} from './machine/PDABuilder.js';\n\nclass PDAErrorChecker\n{\n    constructor(app, graphController, machineController)\n    {\n        this._app = app;\n        this._graphController = graphController;\n        this._machineController = machineController;\n        this._showErrorOnChange = false;\n\n        this.onMachineChange = this.onMachineChange.bind(this);\n\n        machineController.getMachineBuilder().getMachineChangeHandler().addListener(this.onMachineChange);\n    }\n\n    onMachineChange(machineBuilder)\n    {\n        if (this._showErrorOnChange)\n        {\n            this.showErrors();\n        }\n    }\n\n    setErrorChecking(enabled)\n    {\n        this._showErrorOnChange = enabled;\n    }\n\n    isErrorChecking()\n    {\n        return this._showErrorOnChange;\n    }\n\n    showErrors()\n    {\n        const props = {graphController: this._graphController, machineController: this._machineController};\n        const machineBuilder = this._machineController.getMachineBuilder();\n        const errors = machineBuilder.getMachineErrors();\n        const warnings = machineBuilder.getMachineWarnings();\n\n        const app = this._app;\n        const notificationManager = app.getNotificationManager();\n\n        notificationManager.clearNotifications(MACHINE_ERROR_NOTIFICATION_TAG);\n        if (errors.length <= 0 && warnings.length <= 0)\n        {\n            notificationManager.pushNotification(\n                I18N.toString('message.error.none'),\n                SUCCESS_LAYOUT_ID, MACHINE_ERROR_NOTIFICATION_TAG, null, false);\n        }\n        else\n        {\n            for(const warning of warnings)\n            {\n                switch(warning.name)\n                {\n                case ERROR_DUPLICATE_STATE:\n                    notificationManager.pushNotification({\n                        text: 'Found duplicate nodes of similar names',\n                        targets: warning.nodes\n                    }, STATE_LAYOUT_ID, MACHINE_ERROR_NOTIFICATION_TAG, props, false);\n                    break;\n                case ERROR_UNREACHABLE_STATE:\n                    notificationManager.pushNotification(warning.nodes,\n                        STATE_UNREACHABLE_LAYOUT_ID, MACHINE_ERROR_NOTIFICATION_TAG, props, false);\n                    break;\n                }\n            }\n\n            for(const error of errors)\n            {\n                switch(error.name)\n                {\n                case ERROR_INCOMPLETE_TRANSITION:\n                    notificationManager.pushNotification({\n                        text: I18N.toString('message.error.incomplete'),\n                        targets: error.edges\n                    }, TRANSITION_LAYOUT_ID, MACHINE_ERROR_NOTIFICATION_TAG, props, false);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nexport default PDAErrorChecker;\n","import PDAGraph from './graph/PDAGraph.js';\n\nconst GRAPH_PARSER_VERSION = '1.0.0';\n\nexport const JSON = {\n    parse(data, dst=null)\n    {\n        if (!dst) dst = new PDAGraph();\n        else dst.clear();\n\n        const nodeDatas = data['nodes'] || [];\n        const nodeCount = Math.min(nodeDatas.length || 0, data['nodeCount'] || 0);\n        const edgeDatas = data['edges'] || [];\n        const edgeCount = Math.min(edgeDatas.length || 0, data['edgeCount'] || 0);\n        const initialIndex = data['initial'] || 0;\n\n        const nodeIndices = new Map();\n        for(let i = 0; i < nodeCount; ++i)\n        {\n            const nodeData = nodeDatas[i];\n            if (!nodeData) continue;\n\n            //NOTE: Assumes createNode will maintain order\n            const node = dst.createNode(nodeData['x'] || 0, nodeData['y'] || 0, nodeData['id']);\n            node.setNodeLabel(nodeData['label'] || '');\n            node.setNodeAccept(nodeData['accept'] || false);\n            node.setNodeCustom(nodeData['custom'] || false);\n\n            nodeIndices.set(i, node);\n        }\n\n        const initialNode = nodeIndices.get(initialIndex);\n        if (initialNode)\n        {\n            dst.setStartNode(initialNode);\n        }\n\n        for(let i = 0; i < edgeCount; ++i)\n        {\n            const edgeData = edgeDatas[i];\n            if (!edgeData) continue;\n            const sourceNode = nodeIndices.get(edgeData['from']) || null;\n            //Cannot create source-less edges\n            if (!sourceNode) continue;\n            const destinationNode = nodeIndices.get(edgeData['to']) || null;\n            //NOTE: Assumes createEdge will maintain order\n            const edge = dst.createEdge(sourceNode, destinationNode, edgeData['id']);\n            const quadData = edgeData['quad'] || {};\n            edge.setEdgeLabel(edgeData['label'] || '');\n            edge.setQuadraticRadians(quadData['radians'] || 0);\n            edge.setQuadraticLength(quadData['length'] || 0);\n        }\n\n        return dst;\n    },\n    objectify(graph)\n    {\n        const graphNodes = graph.getNodes() || [];\n        const nodeCount = graphNodes.length || 0;\n        const graphEdges = graph.getEdges() || [];\n        const edgeCount = graphEdges.length || 0;\n        const graphInitial = graph.getStartNode();\n\n        const nodeDatas = new Array(nodeCount);\n        const nodeIndices = new Map();\n        for(let i = 0; i < nodeCount; ++i)\n        {\n            const node = graphNodes[i];\n            if (node)\n            {\n                //NOTE: Assumes node must have an id\n                const elementID = node.getGraphElementID();\n\n                nodeIndices.set(node, i);\n                nodeDatas[i] = {\n                    id: elementID,\n                    x: node.x || 0, y: node.y || 0,\n                    label: node.getNodeLabel() || '',\n                    accept: node.getNodeAccept() || false,\n                    custom: node.getNodeCustom() || false\n                };\n            }\n        }\n\n        const edgeDatas = new Array(edgeCount);\n        for(let i = 0; i < edgeCount; ++i)\n        {\n            const edge = graphEdges[i];\n            if (edge)\n            {\n                //NOTE: Assumes edge must have an id\n                const elementID = edge.getGraphElementID();\n\n                const quad = edge.getQuadratic() || {};\n                const edgeSource = edge.getEdgeFrom();\n                const edgeDestination = edge.getEdgeTo();\n                const sourceIndex = nodeIndices.has(edgeSource) ? nodeIndices.get(edgeSource) : -1;\n                const destinationIndex = nodeIndices.has(edgeDestination) ? nodeIndices.get(edgeDestination) : -1;\n                edgeDatas[i] = {\n                    id: elementID,\n                    from: sourceIndex,\n                    to: destinationIndex,\n                    quad: { radians: quad['radians'] || 0, length: quad['length'] || 0 },\n                    label: edge.getEdgeLabel() || ''\n                };\n            }\n        }\n\n        const initialIndex = nodeIndices.get(graphInitial) || 0;\n\n        return {\n            nodeCount: nodeCount,\n            nodes: nodeDatas,\n            edgeCount: edgeCount,\n            edges: edgeDatas,\n            initial: initialIndex,\n            _version: GRAPH_PARSER_VERSION\n        };\n    }\n};\n","import SessionImporter from 'session/SessionImporter.js';\n\n/**\n * A class that represents a session importer for the PDA module.\n */\nclass PDAImporter extends SessionImporter\n{\n    constructor(app, jsonGraphParser)\n    {\n        super(app);\n\n        this._graphParser = jsonGraphParser;\n        this._prevGraphHash = 0;\n    }\n\n    /** @override */\n    onParseSession(session, fileData)\n    {\n        return JSON.parse(fileData);\n    }\n\n    /** @override */\n    onPreImportSession(session)\n    {\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        const graph = graphController.getGraph();\n        this._prevGraphHash = graph.getHashCode(true);\n\n        // TODO: this should not be here, this should exist somewhere in graphController\n        if (!graph.isEmpty())\n        {\n            session.getApp().getUndoManager().captureEvent();\n        }\n    }\n\n    /** @override */\n    onImportSession(session, sessionData)\n    {\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        const machineController = currentModule.getMachineController();\n        const graph = graphController.getGraph();\n\n        this._graphParser.parse(sessionData['graphData'], graph);\n\n        loadMachineFromData(currentModule, graphController, machineController, sessionData['machineData']);\n    }\n\n    /** @override */\n    onPostImportSession(session)\n    {\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        const graph = graphController.getGraph();\n\n        // Compares the graph hash before and after import, captures event if they are not equal\n        const nextGraphHash = graph.getHashCode(true);\n        if (this._prevGraphHash !== nextGraphHash)\n        {\n            // TODO: this should not be here\n            session.getApp().getUndoManager().captureEvent();\n        }\n    }\n}\n\n/**\n * Sets all of the details pertaining to the module (and the machine)\n *\n * @private\n * @param  {GraphController} graphController        the controller for the graph to be constructed\n * @param  {MachineController} machineController    the controller for the machine to be constructed\n * @param  {Object} machineData                     the machine data to be parsed\n */\nfunction loadMachineFromData(graphController, machineController, machineData)\n{\n    const machineType = machineData.type;\n    if (machineType) machineController.setMachineType(machineType);\n    const customSymbols = machineData.symbols;\n    if (customSymbols && Array.isArray(customSymbols))\n    {\n        machineController.clearCustomSymbols();\n        for(const symbol of customSymbols)\n        {\n            machineController.addCustomSymbol(symbol);\n        }\n    }\n    const statePrefix = machineData.statePrefix;\n    if (statePrefix)\n    {\n        graphController.getGraphLabeler().setDefaultNodeLabelPrefix(statePrefix);\n    }\n}\n\nexport default PDAImporter;\n","import SessionExporter from 'session/SessionExporter.js';\n\nimport JSONFileIcon from 'components/iconset/flat/JSONFileIcon.js';\n\n/**\n * A class that represents a session exporter for the PDA module.\n */\nclass PDAExporter extends SessionExporter\n{\n    constructor(jsonGraphParser)\n    {\n        super('.pda.json');\n        this._graphParser = jsonGraphParser;\n    }\n\n    /** @override */\n    onExportSession(session, dst)\n    {\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        const machineController = currentModule.getMachineController();\n        const graph = graphController.getGraph();\n        const graphData = this._graphParser.objectify(graph);\n\n        dst['graphData'] = graphData;\n        dst['machineData'] = {\n            symbols: machineController.getCustomSymbols(),\n            statePrefix: graphController.getGraphLabeler().getDefaultNodeLabelPrefix()\n        };\n    }\n\n    /** @override */\n    getIconClass() { return JSONFileIcon; }\n    /** @override */\n    getLabel() { return I18N.toString('file.export.machine'); }\n    /** @override */\n    getTitle() { return I18N.toString('file.export.machine.hint'); }\n}\n\nexport default PDAExporter;\n","import React from 'react';\nimport Style from './StateListElement.css';\n\nconst SUBMIT_KEY_CODE = 'Enter';\nconst CANCEL_KEY_CODE = 'Escape';\n\nclass StateListElement extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            value: null,\n            error: false\n        };\n\n        this.onValueChange = this.onValueChange.bind(this);\n        this.onFocus = this.onFocus.bind(this);\n        this.onBlur = this.onBlur.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.onKeyUp = this.onKeyUp.bind(this);\n    }\n\n    onFocus(e)\n    {\n        const target = e.target;\n        const node = this.props.node;\n\n        const nodeLabel = node ? node.getNodeLabel() : null;\n        this.setState({\n            value: nodeLabel,\n            error: false\n        }, () => target.select());\n\n        //Call any listening focus\n        if (this.props.onFocus) this.props.onFocus(e, this);\n    }\n\n    onBlur(e)\n    {\n        const nextLabel = this.state.value;\n\n        //Reset to nothing (will use node.getNodeLabel() instead)\n        this.setState({ value: null, error: false });\n\n        //Call any listening blurs\n        if (this.props.onBlur) this.props.onBlur(e, this, nextLabel);\n    }\n\n    onKeyDown(e)\n    {\n        const keyCode = e.key;\n        if (keyCode === SUBMIT_KEY_CODE || keyCode === CANCEL_KEY_CODE)\n        {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n\n    onKeyUp(e)\n    {\n        const keyCode = e.key;\n        const target = e.target;\n\n        if (keyCode === SUBMIT_KEY_CODE)\n        {\n            target.blur();\n        }\n        else if (keyCode === CANCEL_KEY_CODE)\n        {\n            this.setState({\n                value: null,\n                error: false\n            }, () => target.blur());\n        }\n    }\n\n    onValueChange(e)\n    {\n        let value = e.target.value.trim();\n        let error = false;\n\n        if (this.props.onChange)\n        {\n            try\n            {\n                this.props.onChange(e, this, value);\n            }\n            catch(e)\n            {\n                error = true;\n            }\n        }\n\n        this.setState({\n            value: value,\n            error: error\n        });\n    }\n\n    /** @override */\n    render()\n    {\n        const node = this.props.node;\n        const inputValue = this.state.value;\n\n        const nodeLabel = node ? node.getNodeLabel() : '';\n        const nodeCustom = node ? (node.getNodeCustom() || inputValue !== null && inputValue !== nodeLabel) : false;\n        const nodeAccept = node ? node.getNodeAccept() : false;\n        //Must check for null, not ONLY truthy because value might be empty string.\n        const displayValue = inputValue === null ? nodeLabel : inputValue;\n\n        return (\n            <div id={this.props.id}\n                className={Style.element_container +\n          (nodeCustom ? ' custom ' : '') +\n          ((!node.getNodeCustom() && displayValue.length <= 0) ? ' empty ' : '') +\n          (inputValue !== null && this.state.error ? ' error ' : '') +\n          (nodeAccept ? ' accept ' : '') +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <input\n                    spellCheck={false}\n                    style={{width: displayValue.length + 'ch'}}\n                    value={displayValue}\n                    onChange={this.onValueChange}\n                    onFocus={this.onFocus}\n                    onBlur={this.onBlur}\n                    onKeyDown={this.onKeyDown}\n                    onKeyUp={this.onKeyUp}/>\n            </div>\n        );\n    }\n}\n\nexport default StateListElement;\n","import React from 'react';\nimport Style from './StateListView.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport BoxAddIcon from 'components/iconset/BoxAddIcon.js';\nimport TriangleIcon from 'components/iconset/TriangleIcon.js';\n\nimport StateListElement from './StateListElement.js';\n\nclass StateListView extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this._prevX = 0;\n        this._prevY = 0;\n\n        this.onElementAdd = this.onElementAdd.bind(this);\n        this.onElementFocus = this.onElementFocus.bind(this);\n        this.onElementBlur = this.onElementBlur.bind(this);\n        this.onElementChange = this.onElementChange.bind(this);\n    }\n\n    onElementAdd(e)\n    {\n        const graphController = this.props.graphController;\n        this._prevX += 16;\n        this._prevY += 16;\n        const node = graphController.createNode(this._prevX, this._prevY);\n        graphController.focusOnNode(node);\n    }\n\n    onElementFocus(e, element)\n    {\n        this._prevX = element.props.node.x;\n        this._prevY = element.props.node.y;\n        const graphController = this.props.graphController;\n        graphController.focusOnNode(element.props.node);\n    }\n\n    onElementBlur(e, element, nextLabel)\n    {\n        const node = element.props.node;\n        if (!node) return;\n\n        const graphController = this.props.graphController;\n\n        //The value is already processed, abort\n        if (nextLabel !== null)\n        {\n            const graph = graphController.getGraph();\n            if (nextLabel.length > 0)\n            {\n                const otherNodes = graph.getNodesByLabel(nextLabel);\n                if (otherNodes.length <= 0)\n                {\n                    //None other have the same name. Rename it!\n                    graphController.renameNode(node, nextLabel);\n                }\n                else\n                {\n                    //Found something already named that! Ignore!\n                }\n            }\n            else if (node.getNodeCustom())\n            {\n                //Remove custom naming instead of deleting.\n                node.setNodeCustom(false);\n                graphController.applyAutoRename();\n            }\n            else\n            {\n                //Delete!\n                graphController.deleteTargetNode(node);\n            }\n        }\n    }\n\n    onElementChange(e, element, value)\n    {\n        const graphController = this.props.graphController;\n\n        if (value.length > 0)\n        {\n            const graph = graphController.getGraph();\n            const otherNodes = graph.getNodesByLabel(value);\n\n            //If there are more than 1 nodes by the same name,\n            //OR if the duplicate node found is NOT the same node\n            if (otherNodes.length > 1 || (otherNodes.length === 1 && otherNodes[0] !== element.props.node))\n            {\n                throw new Error('Not a valid node label');\n            }\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        const graphController = this.props.graphController;\n        const graph = graphController.getGraph();\n        const nodes = graph.getNodes();\n\n        return (\n            <div id={this.props.id}\n                className={Style.list_container}\n                style={this.props.style}>\n                <div className={Style.element_list}>\n                    <TriangleIcon className={Style.first_marker}/>\n                    {nodes.map(e => <StateListElement key={e.getGraphElementID()}\n                        node={e}\n                        onFocus={this.onElementFocus}\n                        onBlur={this.onElementBlur}\n                        onChange={this.onElementChange}/>)}\n                </div>\n                <IconButton className={Style.add_button}\n                    title=\"Add State\"\n                    onClick={this.onElementAdd}>\n                    <BoxAddIcon/>\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nexport default StateListView;\n","import React from 'react';\nimport Style from './AlphabetListElement.css';\n\nconst SUBMIT_KEY_CODE = 'Enter';\nconst CANCEL_KEY_CODE = 'Escape';\n\nclass AlphabetListElement extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this._inputElement = null;\n\n        this.state = {\n            value: null,\n            error: false\n        };\n\n        this.onValueChange = this.onValueChange.bind(this);\n        this.onFocus = this.onFocus.bind(this);\n        this.onBlur = this.onBlur.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.onKeyUp = this.onKeyUp.bind(this);\n    }\n\n    onFocus(e)\n    {\n        const target = e.target;\n        const symbol = this.props.symbol;\n\n        this.setState({\n            value: symbol,\n            error: false\n        }, () => target.select());\n\n        //Call any listening focus\n        if (this.props.onFocus) this.props.onFocus(e, this);\n    }\n\n    onBlur(e)\n    {\n        const nextSymbol = this.state.value;\n\n        //Call any listening blurs\n        if (this.props.onBlur) this.props.onBlur(e, this, nextSymbol);\n\n        //Reset to nothing (will use props.symbol instead)\n        this.setState({ value: null, error: false });\n    }\n\n    onKeyDown(e)\n    {\n        const keyCode = e.key;\n        if (keyCode === SUBMIT_KEY_CODE || keyCode === CANCEL_KEY_CODE)\n        {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n\n    onKeyUp(e)\n    {\n        const keyCode = e.key;\n        const target = e.target;\n\n        if (keyCode === SUBMIT_KEY_CODE)\n        {\n            target.blur();\n        }\n        else if (keyCode === CANCEL_KEY_CODE)\n        {\n            this.setState({\n                value: null,\n                error: false\n            }, () => target.blur());\n        }\n    }\n\n    onValueChange(e)\n    {\n        let value = e.target.value.trim();\n        let error = false;\n\n        if (this.props.onChange)\n        {\n            try\n            {\n                this.props.onChange(e, this, value);\n            }\n            catch(e)\n            {\n                error = true;\n            }\n        }\n\n        this.setState({\n            value: value,\n            error: error\n        });\n    }\n\n    focus()\n    {\n        this._inputElement.focus();\n    }\n\n    /** @override */\n    render()\n    {\n        const inputSymbol = this.state.value;\n        const displaySymbol = inputSymbol === null ? this.props.symbol : inputSymbol;\n\n        const symbolUsed = this.props.used || false;\n\n        return (\n            <div id={this.props.id}\n                className={Style.element_container +\n          (displaySymbol !== null && displaySymbol.length <= 0 ? ' empty ' : '') +\n          (inputSymbol !== null && this.state.error ? ' error ' : '') +\n          (symbolUsed ? ' used ' : '') +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <input ref={ref=>this._inputElement=ref}\n                    spellCheck={false}\n                    maxLength={1}\n                    style={{width: '1ch'}}\n                    value={displaySymbol}\n                    onChange={this.onValueChange}\n                    onFocus={this.onFocus}\n                    onBlur={this.onBlur}\n                    onKeyDown={this.onKeyDown}\n                    onKeyUp={this.onKeyUp}/>\n            </div>\n        );\n    }\n}\n\nexport default AlphabetListElement;\n","import React from 'react';\nimport Style from './AlphabetListView.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport BoxAddIcon from 'components/iconset/BoxAddIcon.js';\n\nimport AlphabetListElement from './AlphabetListElement.js';\n\nclass AlphabetListView extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.newSymbolComponent = null;\n\n        this.state = {\n            useNewSymbol: false\n        };\n\n        this.onElementAdd = this.onElementAdd.bind(this);\n        this.onElementFocus = this.onElementFocus.bind(this);\n        this.onElementBlur = this.onElementBlur.bind(this);\n        this.onElementChange = this.onElementChange.bind(this);\n    }\n\n    onElementAdd(e)\n    {\n    //Create a new alphabet element...\n        this.setState({useNewSymbol: true}, () => \n        {\n            this.newSymbolComponent.focus();\n        });\n    }\n\n    onElementFocus(e, element)\n    {\n    //Do nothing...\n    }\n\n    onElementBlur(e, element, nextSymbol)\n    {\n        const symbol = element.props.symbol;\n        const machineController = this.props.machineController;\n\n        if (nextSymbol !== null)\n        {\n            const machine = machineController.getMachineBuilder().getMachine();\n            if (nextSymbol.length > 0)\n            {\n                if (!machine.isSymbol(nextSymbol))\n                {\n                    if (symbol)\n                    {\n                        //None other have the same name. Rename it!\n                        machineController.renameSymbol(symbol, nextSymbol);\n                    }\n                    else\n                    {\n                        //None other have the same name. Create it!\n                        machineController.createSymbol(nextSymbol);\n                    }\n                }\n                else\n                {\n                    //Found something already named that! Ignore!\n                }\n            }\n            else if (symbol)\n            {\n                //Delete!\n                machineController.deleteSymbol(symbol);\n            }\n        }\n\n        //Regardless, just close the \"new\" alphabet element if open.\n        if (this.state.useNewSymbol)\n        {\n            this.setState({ useNewSymbol: false });\n        }\n    }\n\n    onElementChange(e, element, symbol)\n    {\n        const machineController = this.props.machineController;\n\n        if (symbol.length > 0)\n        {\n            //If there are more than 1 symbols by the same name,\n            //OR if the duplicate symbol found is NOT the same symbol\n            const machine = machineController.getMachineBuilder().getMachine();\n            if (machine.isSymbol(symbol) && symbol !== element.props.symbol)\n            {\n                throw new Error('Not a valid symbol');\n            }\n        }\n    }\n\n    renderAlphabetList(machine, alphabet)\n    {\n        const result = [];\n        for(const symbol of alphabet)\n        {\n            if (!symbol) continue;\n\n            result.push(<AlphabetListElement key={symbol}\n                symbol={symbol}\n                used={machine.isUsedSymbol(symbol)}\n                onFocus={this.onElementFocus}\n                onBlur={this.onElementBlur}\n                onChange={this.onElementChange}/>);\n        }\n        return result;\n    }\n\n    /** @override */\n    render()\n    {\n        const machineController = this.props.machineController;\n        const machine = machineController.getMachineBuilder().getMachine();\n        const alphabet = machine.getAlphabet();\n\n        return (\n            <div id={this.props.id}\n                className={Style.list_container}\n                style={this.props.style}>\n                <div className={Style.element_list}>\n                    {this.renderAlphabetList(machine, alphabet)}\n                    <AlphabetListElement\n                        ref={ref=>this.newSymbolComponent=ref}\n                        style={{display: this.state.useNewSymbol ? 'block' : 'none'}}\n                        symbol={''}\n                        onFocus={this.onElementFocus}\n                        onBlur={this.onElementBlur}\n                        onChange={this.onElementChange}/>\n                </div>\n                <IconButton className={Style.add_button}\n                    title=\"Add Symbol\"\n                    onClick={this.onElementAdd}>\n                    <BoxAddIcon/>\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nexport default AlphabetListView;\n","import React from 'react';\nimport Style from './StackAlphabetListElement.css';\n\nconst SUBMIT_KEY_CODE = 'Enter';\nconst CANCEL_KEY_CODE = 'Escape';\n\nclass StackAlphabetListElement extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this._inputElement = null;\n\n        this.state = {\n            value: null,\n            error: false\n        };\n\n        this.onValueChange = this.onValueChange.bind(this);\n        this.onFocus = this.onFocus.bind(this);\n        this.onBlur = this.onBlur.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.onKeyUp = this.onKeyUp.bind(this);\n    }\n\n    onFocus(e)\n    {\n        const target = e.target;\n        const symbol = this.props.symbol;\n\n        this.setState({\n            value: symbol,\n            error: false\n        }, () => target.select());\n\n        //Call any listening focus\n        if (this.props.onFocus) this.props.onFocus(e, this);\n    }\n\n    onBlur(e)\n    {\n        const nextSymbol = this.state.value;\n\n        //Call any listening blurs\n        if (this.props.onBlur) this.props.onBlur(e, this, nextSymbol);\n\n        //Reset to nothing (will use props.symbol instead)\n        this.setState({ value: null, error: false });\n    }\n\n    onKeyDown(e)\n    {\n        const keyCode = e.key;\n        if (keyCode === SUBMIT_KEY_CODE || keyCode === CANCEL_KEY_CODE)\n        {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n\n    onKeyUp(e)\n    {\n        const keyCode = e.key;\n        const target = e.target;\n\n        if (keyCode === SUBMIT_KEY_CODE)\n        {\n            target.blur();\n        }\n        else if (keyCode === CANCEL_KEY_CODE)\n        {\n            this.setState({\n                value: null,\n                error: false\n            }, () => target.blur());\n        }\n    }\n\n    onValueChange(e)\n    {\n        let value = e.target.value.trim();\n        let error = false;\n\n        if (this.props.onChange)\n        {\n            try\n            {\n                this.props.onChange(e, this, value);\n            }\n            catch(e)\n            {\n                error = true;\n            }\n        }\n\n        this.setState({\n            value: value,\n            error: error\n        });\n    }\n\n    focus()\n    {\n        this._inputElement.focus();\n    }\n\n    /** @override */\n    render()\n    {\n        const inputSymbol = this.state.value;\n        const displaySymbol = inputSymbol === null ? this.props.symbol : inputSymbol;\n\n        const symbolUsed = this.props.used || false;\n\n        return (\n            <div id={this.props.id}\n                className={Style.element_container +\n          (displaySymbol !== null && displaySymbol.length <= 0 ? ' empty ' : '') +\n          (inputSymbol !== null && this.state.error ? ' error ' : '') +\n          (symbolUsed ? ' used ' : '') +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <input ref={ref=>this._inputElement=ref}\n                    spellCheck={false}\n                    maxLength={1}\n                    style={{width: '1ch'}}\n                    value={displaySymbol}\n                    onChange={this.onValueChange}\n                    onFocus={this.onFocus}\n                    onBlur={this.onBlur}\n                    onKeyDown={this.onKeyDown}\n                    onKeyUp={this.onKeyUp}/>\n            </div>\n        );\n    }\n}\n\nexport default StackAlphabetListElement;\n","import React from 'react';\nimport Style from './StackAlphabetListView.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport BoxAddIcon from 'components/iconset/BoxAddIcon.js';\n\nimport StackAlphabetListElement from './StackAlphabetListElement.js';\n\nclass StackAlphabetListView extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.newSymbolComponent = null;\n\n        this.state = {\n            useNewSymbol: false\n        };\n\n        this.onElementAdd = this.onElementAdd.bind(this);\n        this.onElementFocus = this.onElementFocus.bind(this);\n        this.onElementBlur = this.onElementBlur.bind(this);\n        this.onElementChange = this.onElementChange.bind(this);\n    }\n\n    onElementAdd(e)\n    {\n    //Create a new alphabet element...\n        this.setState({useNewSymbol: true}, () => \n        {\n            this.newSymbolComponent.focus();\n        });\n    }\n\n    onElementFocus(e, element)\n    {\n    //Do nothing...\n    }\n\n    onElementBlur(e, element, nextSymbol)\n    {\n        const symbol = element.props.symbol;\n        const machineController = this.props.machineController;\n\n        if (nextSymbol !== null)\n        {\n            const machine = machineController.getMachineBuilder().getMachine();\n            if (nextSymbol.length > 0)\n            {\n                if (!machine.isStackSymbol(nextSymbol))\n                {\n                    if (symbol)\n                    {\n                        //None other have the same name. Rename it!\n                        machineController.renameStackSymbol(symbol, nextSymbol);\n                    }\n                    else\n                    {\n                        //None other have the same name. Create it!\n                        machineController.createStackSymbol(nextSymbol);\n                    }\n                }\n                else\n                {\n                    //Found something already named that! Ignore!\n                }\n            }\n            else if (symbol)\n            {\n                //Delete!\n                machineController.deleteStackSymbol(symbol);\n            }\n        }\n\n        //Regardless, just close the \"new\" alphabet element if open.\n        if (this.state.useNewSymbol)\n        {\n            this.setState({ useNewSymbol: false });\n        }\n    }\n\n    onElementChange(e, element, symbol)\n    {\n        const machineController = this.props.machineController;\n\n        if (symbol.length > 0)\n        {\n            //If there are more than 1 symbols by the same name,\n            //OR if the duplicate symbol found is NOT the same symbol\n            const machine = machineController.getMachineBuilder().getMachine();\n            if (machine.isStackSymbol(symbol) && symbol !== element.props.symbol)\n            {\n                throw new Error('Not a valid symbol');\n            }\n        }\n    }\n\n    renderStackAlphabetList(machine, alphabet)\n    {\n        const result = [];\n        for(const symbol of alphabet)\n        {\n            if (!symbol) continue;\n\n            result.push(<StackAlphabetListElement key={symbol}\n                symbol={symbol}\n                used={machine.isUsedStackSymbol(symbol)}\n                onFocus={this.onElementFocus}\n                onBlur={this.onElementBlur}\n                onChange={this.onElementChange}/>);\n        }\n        return result;\n    }\n\n    /** @override */\n    render()\n    {\n        const machineController = this.props.machineController;\n        const machine = machineController.getMachineBuilder().getMachine();\n        const alphabet = machine.getStackAlphabet();\n\n        return (\n            <div id={this.props.id}\n                className={Style.list_container}\n                style={this.props.style}>\n                <div className={Style.element_list}>\n                    {this.renderStackAlphabetList(machine, alphabet)}\n                    <StackAlphabetListElement\n                        ref={ref=>this.newSymbolComponent=ref}\n                        style={{display: this.state.useNewSymbol ? 'block' : 'none'}}\n                        symbol={''}\n                        onFocus={this.onElementFocus}\n                        onBlur={this.onElementBlur}\n                        onChange={this.onElementChange}/>\n                </div>\n                <IconButton className={Style.add_button}\n                    title=\"Add Stack\"\n                    onClick={this.onElementAdd}>\n                    <BoxAddIcon/>\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nexport default StackAlphabetListView;\n","import React from 'react';\nimport Style from './AutoStateLabelView.css';\n\nimport FormattedInput from 'deprecated/system/formattedinput/FormattedInput.js';\n\nclass AutoStateLabelView extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.onAutoStatePrefixSubmit = this.onAutoStatePrefixSubmit.bind(this);\n        this.onAutoStatePrefixFormat = this.onAutoStatePrefixFormat.bind(this);\n    }\n\n    onAutoStatePrefixSubmit(next, prev)\n    {\n        const graphController = this.props.graphController;\n        const graphLabeler = graphController.getGraphLabeler();\n\n        const prefix = graphLabeler.getDefaultNodeLabelPrefix();\n        if (prefix != next)\n        {\n            graphLabeler.setDefaultNodeLabelPrefix(next);\n            graphController.applyAutoRename();\n        }\n    }\n\n    onAutoStatePrefixFormat(value)\n    {\n        return value && value.length > 0 ? value :\n            this.props.graphController.getGraphLabeler().getDefaultNodeLabelPrefix();\n    }\n\n    /** @override */\n    render()\n    {\n        const graphController = this.props.graphController;\n\n        return (\n            <div id={this.props.id}\n                className={Style.select_container +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <label className={Style.select_label}>\n          State Labels\n                </label>\n                <FormattedInput\n                    className={Style.prefix_editor}\n                    defaultValue={graphController.getGraphLabeler().getDefaultNodeLabelPrefix()}\n                    captureOnExit=\"save\"\n                    formatter={this.onAutoStatePrefixFormat}\n                    onSubmit={this.onAutoStatePrefixSubmit}/>\n                <select className={Style.postfix_selector}\n                    onChange={this.onMachineTypeChange}\n                    disabled={true}>\n                    <option>0-9</option>\n                    <option>a-z</option>\n                    <option>A-Z</option>\n                </select>\n            </div>\n        );\n    }\n}\n\nexport default AutoStateLabelView;\n","import React from 'react';\nimport Style from './OverviewPanel.css';\n\nimport PanelContainer from 'experimental/panels/PanelContainer.js';\nimport PanelSection from 'experimental/panels/PanelSection.js';\nimport PanelDivider from 'experimental/panels/PanelDivider.js';\nimport PanelSwitch from 'experimental/panels/PanelSwitch.js';\n\nimport StateListView from './states/StateListView.js';\nimport AlphabetListView from './alphabet/AlphabetListView.js';\nimport StackAlphabetListView from './stackalphabet/StackAlphabetListView.js';\nimport AutoStateLabelView from './AutoStateLabelView.js';\n\nclass OverviewPanel extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.onAutoLayoutApply = this.onAutoLayoutApply.bind(this);\n        this.onAutoLayoutChange = this.onAutoLayoutChange.bind(this);\n        this.onAutoLabelChange = this.onAutoLabelChange.bind(this);\n        this.onSnapToGridChange = this.onSnapToGridChange.bind(this);\n    }\n\n    onAutoLayoutApply(e)\n    {\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        graphController.applyAutoLayout();\n    }\n\n    onAutoLayoutChange(e)\n    {\n    //TODO: Not yet implemented...\n    }\n\n    onAutoLabelChange(e)\n    {\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        graphController.setAutoRenameNodes(e.target.checked);\n    }\n\n    onSnapToGridChange(e)\n    {\n    //TODO: Not yet implemented...\n    }\n\n    /** @override */\n    render()\n    {\n        const drawer = this.props.drawer;\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        const machineController = currentModule.getMachineController();\n        const autoRename = graphController.shouldAutoRenameNodes();\n\n        const drawerFull = drawer.isDrawerFullscreen();\n\n        return (\n            <PanelContainer id={this.props.id}\n                className={this.props.className}\n                style={this.props.style}\n                title={OverviewPanel.TITLE}>\n\n                <PanelSection title={'States'} initial={true} full={drawerFull}>\n                    <StateListView graphController={graphController}/>\n                </PanelSection>\n                <PanelSection title={'Alphabet'} initial={true} full={drawerFull}>\n                    <AlphabetListView machineController={machineController}/>\n                </PanelSection>\n                <PanelSection title={'Stack Alphabet'} initial={true} full={drawerFull}>\n                    <StackAlphabetListView machineController={machineController}/>\n                </PanelSection>\n\n                <PanelDivider/>\n\n                <AutoStateLabelView graphController={graphController}/>\n\n                <button className={Style.autolayout_button} onClick={this.onAutoLayoutApply} disabled={graphController.getGraph().isEmpty()}>\n                    {I18N.toString('action.overview.autolayout')}\n                </button>\n\n                <PanelDivider/>\n\n                <PanelSwitch id={'overview-auto-label'}\n                    checked={autoRename}\n                    title={'Auto rename nodes'}\n                    onChange={this.onAutoLabelChange}/>\n                <PanelSwitch id={'overview-auto-layout'}\n                    checked={false}\n                    title={'Auto layout nodes'}\n                    disabled={true}\n                    onChange={this.onAutoLayoutChange}/>\n                <PanelSwitch id={'overview-snap-grid'}\n                    checked={false}\n                    title={'Snap-to-grid'}\n                    disabled={true}\n                    onChange={this.onSnapToGridChange}/>\n\n            </PanelContainer>\n        );\n    }\n}\nObject.defineProperty(OverviewPanel, 'TITLE', {\n    get: function() { return I18N.toString('component.overview.title'); }\n});\n\nexport default OverviewPanel;\n","import React from 'react';\nimport Style from './TestItem.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport SubtractIcon from 'components/iconset/SubtractIcon.js';\nimport CheckCircleIcon from 'components/iconset/CheckCircleIcon.js';\nimport CrossCircleIcon from 'components/iconset/CrossCircleIcon.js';\nimport PendingIcon from 'components/iconset/PendingIcon.js';\nimport RunningManIcon from 'components/iconset/RunningManIcon.js';\n\nexport const DEFAULT_MODE = 'default';\nexport const SUCCESS_MODE = 'success';\nexport const FAILURE_MODE = 'failure';\nexport const WORKING_MODE = 'working';\n\nclass TestItem extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.inputElement = null;\n\n        this.state = {\n            value: this.props.defaultValue || '',\n            status: DEFAULT_MODE\n        };\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    focus()\n    {\n        if (this.inputElement)\n        {\n            this.inputElement.focus();\n        }\n    }\n\n    setValue(value, callback=null)\n    {\n        if (this.state.value !== value)\n        {\n            this.setState({value: value}, callback);\n        }\n        else if (callback)\n        {\n            callback();\n        }\n    }\n\n    setStatus(status, callback=null)\n    {\n        if (this.state.status !== status)\n        {\n            this.setState({status: status}, callback);\n        }\n        else if (callback)\n        {\n            callback();\n        }\n    }\n\n    resetStatus(callback=null)\n    {\n        if (this.state.status !== DEFAULT_MODE)\n        {\n            this.setState({status: DEFAULT_MODE}, callback);\n        }\n        else if (callback)\n        {\n            callback();\n        }\n    }\n\n    getValue()\n    {\n        return this.state.value;\n    }\n\n    getStatus()\n    {\n        return this.state.status;\n    }\n\n    onChange(e)\n    {\n        const nextValue = e.target.value;\n        if (this.state.value !== nextValue)\n        {\n            this.setState({value: nextValue, status: DEFAULT_MODE});\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        const onDelete = this.props.onDelete;\n        const showDelete = true;\n\n        const onTest = this.props.onTest;\n        const showTest = true;\n\n        const active = this.props.active;\n        // const subtitle = this.props.subtitle;\n        const placeholder = this.props.placeholder;\n        const status = this.state.status;\n\n        return (\n            <div id={this.props.id}\n                className={Style.test_item_container +\n          (active ? ' active ' : '') +\n          ' ' + status +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                {showTest &&\n          <IconButton className={Style.test_button}\n              title={'Test'}\n              disabled={!onTest}\n              onClick={(e) => onTest(e, this)}>\n              {status === SUCCESS_MODE ?\n                  <CheckCircleIcon/> :\n                  status === FAILURE_MODE ?\n                      <CrossCircleIcon/> :\n                      status === WORKING_MODE ?\n                          <PendingIcon/> :\n                          <RunningManIcon/>}\n          </IconButton>}\n                <div className={Style.test_input}>\n                    <input ref={ref=>this.inputElement=ref} type=\"text\"\n                        placeholder={placeholder}\n                        value={this.state.value}\n                        onChange={this.onChange}/>\n                    <label>{this.props.subtitle}</label>\n                </div>\n                {showDelete &&\n          <IconButton className={Style.delete_button}\n              title={'Delete'}\n              disabled={!onDelete}\n              onClick={(e) => onDelete(e, this)}>\n              <SubtractIcon/>\n          </IconButton>}\n            </div>\n        );\n    }\n}\n\nexport default TestItem;\n","import React from 'react';\nimport Style from './TestListView.css';\n\nimport { guid } from 'util/MathHelper.js';\nimport { downloadText } from 'util/Downloader.js';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport IconUploadButton from 'experimental/components/IconUploadButton.js';\n\nimport PageContentIcon from 'components/iconset/PageContentIcon.js';\nimport UploadIcon from 'components/iconset/UploadIcon.js';\nimport DownloadIcon from 'components/iconset/DownloadIcon.js';\nimport CrossIcon from 'components/iconset/CrossIcon.js';\nimport AddIcon from 'components/iconset/AddIcon.js';\nimport RunningManIcon from 'components/iconset/RunningManIcon.js';\n\nimport TestItem, {SUCCESS_MODE, FAILURE_MODE, WORKING_MODE, DEFAULT_MODE} from './TestItem.js';\n\nconst ACCEPT_FILE_TYPES = ['.txt'];\nconst TEST_FILENAME = 'test.txt';\n// const TEST_REFRESH_TICKS = 30;\n\nclass TestListView extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this._testList = [];\n        this._testName = TEST_FILENAME;\n\n        this.onTestNew = this.onTestNew.bind(this);\n        this.onTestUpload = this.onTestUpload.bind(this);\n        this.onTestDownload = this.onTestDownload.bind(this);\n        this.onTestClose = this.onTestClose.bind(this);\n        this.onTestAdd = this.onTestAdd.bind(this);\n        this.onTestDelete = this.onTestDelete.bind(this);\n        this.onTestTest = this.onTestTest.bind(this);\n        this.onTestRunAll = this.onTestRunAll.bind(this);\n        this.onGraphChange = this.onGraphChange.bind(this);\n    }\n\n    /** @override */\n    componentDidMount()\n    {\n        this.props.graphController.getGraphChangeHandler().addListener(this.onGraphChange);\n    }\n\n    /** @override */\n    componentWillUnmount()\n    {\n        this.props.graphController.getGraphChangeHandler().removeListener(this.onGraphChange);\n    }\n\n    onGraphChange(graph)\n    {\n        for(const test of this._testList)\n        {\n            test.ref.resetStatus();\n        }\n    }\n\n    onTestNew(e)\n    {\n        if (!this.isEmpty())\n        {\n            this.onTestClose(e);\n        }\n\n        this.onTestAdd(e);\n    }\n\n    onTestUpload(fileBlob)\n    {\n        const reader = new FileReader();\n        reader.onload = (event) => \n        {\n            try\n            {\n                this._testName = fileBlob.name;\n                this._testList.length = 0;\n\n                const tests = event.target.result.split('\\n');\n                for(let test of tests)\n                {\n                    test = test.trim();\n                    if (test.length > 0)\n                    {\n                        this._testList.push({\n                            id: guid(),\n                            defaultValue: test,\n                            ref: null\n                        });\n                    }\n                }\n\n                //Make sure an element exists, at least\n                if (this._testList.length <= 0)\n                {\n                    this.onTestAdd(null);\n                }\n            }\n            catch(e)\n            {\n                reader.abort();\n            }\n        };\n        reader.readAsText(fileBlob);\n    }\n\n    onTestDownload(e)\n    {\n        const testStrings = [];\n        for(const test of this._testList)\n        {\n            const ref = test.ref;\n            if (ref)\n            {\n                testStrings.push(ref.getValue());\n            }\n        }\n\n        downloadText(this._testName, testStrings.join('\\n'));\n    }\n\n    onTestClose(e)\n    {\n        const tester = this.props.tester;\n        if (tester.isTesting())\n        {\n            tester.stopTest();\n        }\n\n        this._testList.length = 0;\n    }\n\n    onTestAdd(e)\n    {\n        this._testList.push({\n            id: guid(),\n            defaultValue: '',\n            ref: null\n        });\n    }\n\n    onTestRunAll(e)\n    {\n        // const tester = this.props.tester;\n        let i = 0;\n\n        const nextTest = () => \n        {\n            const test = this._testList[i];\n            this.onTestTest(null, test.ref, true, () => \n            {\n                ++i;\n                if (i < this._testList.length)\n                {\n                    nextTest();\n                }\n            });\n        };\n        nextTest();\n    }\n\n    onTestDelete(e, item)\n    {\n    //Already handled in render()\n    }\n\n    onTestTest(e, item, forceImmediate=false, callback=null)\n    {\n        const immediate = forceImmediate || this.props.immediate;\n        const tester = this.props.tester;\n        const itemValue = item.getValue();\n\n        item.setState({status: WORKING_MODE});\n\n        const graphController = this.props.graphController;\n        const machineController = this.props.machineController;\n        tester.startTest(itemValue, graphController, machineController).then((result) => \n        {\n            item.setState({status: result ? SUCCESS_MODE : FAILURE_MODE});\n        }, (err) => \n        {\n            //It didn't work out :(\n            item.setState({status: DEFAULT_MODE});\n        });\n\n        if (immediate)\n        {\n            const promise = tester.runTest(graphController, machineController, true);\n            if (callback)\n            {\n                promise.then(callback);\n            }\n        }\n    }\n\n    isEmpty()\n    {\n        return this._testList.length <= 0;\n    }\n  \n    /** @override */\n    render()\n    {\n        // const immediate = this.props.immediate;\n        const tester = this.props.tester;\n\n        const graphController = this.props.graphController;\n        // const machineController = this.props.machineController;\n\n        const empty = this.isEmpty();\n        const disabled = tester && tester.isTesting();\n\n        return (\n            <div id={this.props.id}\n                className={Style.test_container +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <div className={Style.test_control_tray}>\n                    <IconButton className={Style.test_control_button}\n                        title={I18N.toString('action.testing.new')}\n                        onClick={this.onTestNew}>\n                        <PageContentIcon/>\n                    </IconButton>\n                    <IconUploadButton className={Style.test_control_button}\n                        title={I18N.toString('action.testing.import')}\n                        accept={ACCEPT_FILE_TYPES.join(',')}\n                        onUpload={this.onTestUpload}>\n                        <UploadIcon/>\n                    </IconUploadButton>\n                    <IconButton className={Style.test_control_button}\n                        title={I18N.toString('action.testing.save')}\n                        disabled={empty}\n                        onClick={this.onTestDownload}>\n                        <DownloadIcon/>\n                    </IconButton>\n                    <IconButton className={Style.test_control_button}\n                        title={I18N.toString('action.testing.clear')}\n                        disabled={empty}\n                        onClick={this.onTestClose}>\n                        <CrossIcon/>\n                    </IconButton>\n                </div>\n                <div className={Style.test_list_container +\n          (empty ? ' empty ' : '') +\n          (disabled ? ' disabled ': '')}>\n                    <IconButton className={Style.test_list_add}\n                        title={'Add'} onClick={this.onTestAdd}>\n                        <AddIcon/>\n                        <span className={Style.test_list_count}>\n                            {!empty ? '' + this._testList.length : ''}\n                        </span>\n                    </IconButton>\n                    <div className={Style.test_list_scroll_container}>\n                        <div className={Style.test_list}>\n                            {this._testList.map((e, i) => \n                            {\n                                const id = e.id;\n                                const defaultValue = e['defaultValue'] || '';\n                                let testCallback = this.onTestTest;\n                                if (!tester || graphController.getGraph().isEmpty())\n                                {\n                                    testCallback = null;\n                                }\n                                return <TestItem key={id} ref={ref=>e.ref=ref}\n                                    defaultValue={defaultValue}\n                                    onTest={testCallback}\n                                    onDelete={(e, item) => \n                                    {\n                                        this._testList.splice(i, 1);\n                                        this.onTestDelete(e, item);\n                                    }}/>;\n                            })}\n                        </div>\n                    </div>\n                    <IconButton className={Style.test_list_runall}\n                        title={'Run All'} onClick={this.onTestRunAll}>\n                        <RunningManIcon/>\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TestListView;\n","import React from 'react';\nimport Style from './TestingPanel.css';\n\nimport PanelContainer from 'experimental/panels/PanelContainer.js';\nimport PanelSwitch from 'experimental/panels/PanelSwitch.js';\n\nimport TestListView from './TestListView.js';\n\nimport {MACHINE_ERROR_NOTIFICATION_TAG} from 'modules/pda/components/notifications/PDANotifications.js';\n\nclass TestingPanel extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            stepMode: false\n        };\n\n        this.onStepTestChange = this.onStepTestChange.bind(this);\n        this.onAutoErrorCheckChange = this.onAutoErrorCheckChange.bind(this);\n    }\n\n    /** @override */\n    componentDidMount()\n    {\n    //TODO: This should be in modules...\n        const session = this.props.session;\n        const app = session.getApp();\n        const currentModule = session.getCurrentModule();\n        const tester = currentModule._tester;\n        tester.on('startTest', (tester) => \n        {\n            app._viewport.setCurrentView(1);\n            app._drawer.setDrawerSoloClass(TestingPanel);\n            app._drawer.closeDrawer();\n        });\n        tester.on('stopTest', (tester) => \n        {\n            app._viewport.setCurrentView(0);\n            app._drawer.setDrawerSoloClass(null);\n            app._drawer.openDrawer();\n        });\n    }\n\n    onStepTestChange(e)\n    {\n        this.setState((prev, props) => \n        {\n            return {stepMode: !prev.stepMode};\n        });\n    }\n\n    onAutoErrorCheckChange(e)\n    {\n        const currentModule = this.props.session.getCurrentModule();\n        const errorChecker = currentModule.getErrorChecker();\n        const errorCheck = errorChecker.isErrorChecking();\n        errorChecker.setErrorChecking(!errorCheck);\n        if (errorCheck)\n        {\n            //Turning it off\n            this.props.session.getApp().getNotificationManager().clearNotifications(MACHINE_ERROR_NOTIFICATION_TAG);\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        const machineController = currentModule.getMachineController();\n        const tester = currentModule.getStringTester();\n        const errorChecker = currentModule.getErrorChecker();\n\n        const stepMode = this.state.stepMode;\n        const errorCheck = errorChecker.isErrorChecking();\n\n        return (\n            <PanelContainer id={this.props.id}\n                className={Style.panel_container +\n          ' ' + this.props.className}\n                style={this.props.style}\n                title={TestingPanel.TITLE}>\n\n                <TestListView tester={tester} graphController={graphController} machineController={machineController} immediate={!stepMode}/>\n                {/*<PanelSwitch id={'testing-step-test'} checked={stepMode} onChange={this.onStepTestChange} title={'Step testing'}/>*/}\n                <PanelSwitch id={'testing-error-check'} checked={errorCheck} onChange={this.onAutoErrorCheckChange} title={'Auto error checking'}/>\n\n            </PanelContainer>\n        );\n    }\n}\nObject.defineProperty(TestingPanel, 'TITLE', {\n    get: function() { return I18N.toString('component.testing.title'); }\n});\n\nexport default TestingPanel;\n","import React from 'react';\nimport Style from './AnalysisPanel.css';\n\nimport { getUnreachableNodes } from 'graph2/util/NodeGraphUtils.js';\n\nimport PanelContainer from 'experimental/panels/PanelContainer.js';\nimport PanelSection from 'experimental/panels/PanelSection.js';\nimport PanelCheckbox from 'experimental/panels/PanelCheckbox.js';\n\nclass AnalysisPanel extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.optimizeUnreachOption = null;\n        this.optimizeRedundOption = null;\n\n        this.onOptimizeMachine = this.onOptimizeMachine.bind(this);\n    }\n\n    onDeleteAllUnreachable(e)\n    {\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        const unreachableArray = getUnreachableNodes(graphController.getGraph());\n        graphController.deleteTargetNodes(unreachableArray);\n    }\n\n    onOptimizeMachine(e)\n    {\n        if (this.optimizeUnreachOption.isChecked())\n        {\n            this.onDeleteAllUnreachable(e);\n        }\n    }\n\n    canOptimize()\n    {\n        return (this.optimizeRedundOption && this.optimizeRedundOption.isChecked()) ||\n            (this.optimizeUnreachOption && this.optimizeUnreachOption.isChecked());\n    }\n\n    /** @override */\n    render()\n    {\n        //const session = this.props.session;\n\n        return (\n            <PanelContainer id={this.props.id}\n                className={this.props.className}\n                style={this.props.style}\n                title={AnalysisPanel.TITLE}>\n                <PanelSection title={'Optimizations'} initial={true}>\n                    <PanelCheckbox ref={ref => this.optimizeUnreachOption = ref}\n                        id=\"opt-unreach\" title=\"Unreachables\" value=\"unreach\" />\n                    <PanelCheckbox ref={ref => this.optimizeRedundOption = ref} disabled={true}\n                        id=\"opt-redund\" title=\"Redundant States\" value=\"redund\" />\n                    <button className={Style.analysis_button} onClick={this.onOptimizeMachine} disabled={!this.canOptimize()}>Optimize</button>\n                </PanelSection>\n            </PanelContainer>\n        );\n    }\n}\nObject.defineProperty(AnalysisPanel, 'TITLE', {\n    get: function () { return I18N.toString('component.analysis.title'); }\n});\n\nexport default AnalysisPanel;\n","import React from 'react';\n\nimport NodeRenderer from 'graph2/renderer/NodeRenderer.js';\n\nclass PDANodeRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const node = this.props.node;\n        const fill = this.props.fill;\n        const stroke = this.props.stroke;\n        const onMouseOver = this.props.onMouseOver;\n        const onMouseOut = this.props.onMouseOut;\n        const pointerEvents = this.props.pointerEvents;\n\n        const label = node.getNodeLabel();\n        const radius = node.getNodeSize();\n\n        const accept = node.getNodeAccept();\n\n        return (\n            <React.Fragment>\n                <NodeRenderer\n                    position={node}\n                    radius={radius}\n                    label={label}\n                    color={fill}\n                    outline={stroke}\n                    onMouseOver={onMouseOver ? e =>\n                    {\n                        const value = e.target['value'] || (e.target['value'] = {});\n                        value.source = node;\n                        onMouseOver(e);\n                    } : null}\n                    onMouseOut={onMouseOut ? e =>\n                    {\n                        const value = e.target['value'] || (e.target['value'] = {});\n                        value.source = node;\n                        onMouseOut(e);\n                    } : null}\n                    pointerEvents={pointerEvents} />\n                {accept &&\n                    <NodeRenderer\n                        position={node}\n                        radius={radius * 0.7}\n                        color='none'\n                        outline={stroke} />}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default PDANodeRenderer;\n","import AbstractInputHandler from 'util/input/AbstractInputHandler.js';\nimport { EVENT_SOURCE_NODE } from 'graph2/renderer/NodeRenderer.js';\n\nexport const GRAPH_EVENT_NODE_ACCEPT_CHANGE = 'node-accept-change';\n\nclass PDANodeInputHandler extends AbstractInputHandler\n{\n    constructor(inputController, graphController)\n    {\n        super();\n\n        this._inputController = inputController;\n        this._graphController = graphController;\n    }\n\n    /** @override */\n    onDblInputEvent(pointer)\n    {\n        const inputController = this._inputController;\n        const graphController = this._graphController;\n        const currentTargetType = inputController.getCurrentTargetType();\n        if (currentTargetType === EVENT_SOURCE_NODE)\n        {\n            const currentTargetSource = inputController.getCurrentTargetSource();\n            currentTargetSource.setNodeAccept(!currentTargetSource.getNodeAccept());\n\n            graphController.emitGraphEvent(GRAPH_EVENT_NODE_ACCEPT_CHANGE, { target: currentTargetSource });\n        }\n    }\n}\n\nexport default PDANodeInputHandler;","import React from 'react';\n\nimport EdgeRenderer, { DIRECTED_FORWARD } from 'graph2/renderer/EdgeRenderer.js';\n\nimport { LINE_SEPARATOR } from '../element/PDAEdge.js';\n\nclass PDAEdgeRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const edge = this.props.edge;\n        const stroke = this.props.stroke;\n        const onMouseOver = this.props.onMouseOver;\n        const onMouseOut = this.props.onMouseOut;\n        const pointerEvents = this.props.pointerEvents;\n\n        const start = edge.getStartPoint();\n        const end = edge.getEndPoint();\n        const center = edge.getCenterPoint();\n        const label = edge.getEdgeLabel();\n        const edgeDir = edge.getEdgeDirection();\n\n        return (\n            <React.Fragment>\n                <EdgeRenderer\n                    directed={DIRECTED_FORWARD}\n                    from={start}\n                    to={end}\n                    center={center}\n                    label={label.split(LINE_SEPARATOR).join('\\n')}\n                    direction={edgeDir}\n                    color={stroke}\n                    onMouseOver={onMouseOver ? e =>\n                    {\n                        const value = e.target['value'] || (e.target['value'] = {});\n                        value.source = edge;\n                        onMouseOver(e);\n                    } : null}\n                    onMouseOut={onMouseOut ? e =>\n                    {\n                        const value = e.target['value'] || (e.target['value'] = {});\n                        value.source = edge;\n                        onMouseOut(e);\n                    } : null}\n                    pointerEvents={pointerEvents} />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default PDAEdgeRenderer;\n","import React from 'react';\n\nimport GraphNodeLayer from 'graph2/components/layers/GraphNodeLayer.js';\nimport GraphEdgeLayer from 'graph2/components/layers/GraphEdgeLayer.js';\nimport SelectionBoxLayer from 'graph2/components/layers/SelectionBoxLayer.js';\nimport IndexedGraphStartMarkerLayer from 'graph2/components/layers/IndexedGraphStartMarkerLayer.js';\n\nimport PDANodeRenderer from '../../graph/renderer/PDANodeRenderer.js';\nimport PDANodeInputHandler from '../../graph/inputhandler/PDANodeInputHandler.js';\n\nimport PDAEdgeRenderer from '../../graph/renderer/PDAEdgeRenderer.js';\n\nclass PDAGraphLayer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        const graphView = props.graphView;\n        const graphController = props.graphController;\n        const inputController = graphView.getInputController();\n\n        this._fsaNodeInputHandler = new PDANodeInputHandler(inputController, graphController);\n    }\n\n    /** @override */\n    componentDidMount()\n    {\n        const graphView = this.props.graphView;\n        const inputContext = graphView.getInputContext();\n        inputContext.addInputHandler(this._fsaNodeInputHandler);\n    }\n\n    /** @override */\n    componentWillUnmount()\n    {\n        const graphView = this.props.graphView;\n        const inputContext = graphView.getInputContext();\n        inputContext.removeInputHandler(this._fsaNodeInputHandler);\n    }\n\n    /** @override */\n    render()\n    {\n        const graphView = this.props.graphView;\n        const graphController = this.props.graphController;\n        const editable = this.props.editable;\n\n        const graph = graphController.getGraph();\n        const inputController = graphView.getInputController();\n        const inputContext = graphView.getInputContext();\n\n        return (\n            <React.Fragment>\n                <IndexedGraphStartMarkerLayer\n                    inputController={inputController}\n                    graphController={graphController}\n                    inputContext={inputContext}\n                    inputPriority={-1}\n                    editable={editable} />\n                <GraphNodeLayer\n                    nodes={graph.getNodes()}\n                    inputController={inputController}\n                    graphController={graphController}\n                    nodeRenderer={PDANodeRenderer}\n                    inputContext={inputContext}\n                    inputPriority={-1}\n                    editable={editable} />\n                <GraphEdgeLayer\n                    ref={ref =>\n                    {\n                        if (!ref) return;\n                        ref.getGraphEdgeInputHandler()\n                            .setShouldDeleteEdgeWithEmptyLabel(true)\n                            .setShouldDeleteEdgePlaceholder(true);\n                    }}\n                    edges={graph.getEdges()}\n                    inputController={inputController}\n                    graphController={graphController}\n                    edgeRenderer={PDAEdgeRenderer}\n                    inputContext={inputContext}\n                    inputPriority={-1}\n                    editable={editable} />\n                <SelectionBoxLayer\n                    inputController={inputController}\n                    graphController={graphController}\n                    inputContext={inputContext}\n                    inputPriority={-1} />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default PDAGraphLayer;\n","import React from 'react';\nimport Style from './PDALabelEditorRenderer.css';\n\nimport GraphEdge from 'graph2/element/GraphEdge.js';\nimport GraphNode from 'graph2/element/GraphNode.js';\nimport PatternInputButton from 'graph2/components/widgets/pattern/PatternInputButton.js';\n\nimport { SYMBOL_SEPARATOR, EMPTY_CHAR } from '../../graph/element/PDAEdge.js';\n\nconst RECOMMENDED_SYMBOLS = ['0', '1'];\nconst DEFAULT_SYMBOLS = [EMPTY_CHAR];\n\nclass PDALabelEditorRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    renderSymbol(symbol)\n    {\n        const graphController = this.props.graphController;\n        const labelEditor = graphController.getLabelEditor();\n        if (!labelEditor) return null;\n\n        const inputComponent = labelEditor.inputComponent;\n        return (\n            <PatternInputButton key={symbol} parent={inputComponent} title={symbol}\n                onClick={e => inputComponent.appendValue(symbol, SYMBOL_SEPARATOR)} />\n        );\n    }\n\n    /** @override */\n    render()\n    {\n        const graphController = this.props.graphController;\n        const labelEditor = graphController.getLabelEditor();\n        const currentModule = this.props.currentModule;\n        const machineController = currentModule.getMachineController();\n        const alphabet = machineController.getAlphabet();\n\n        const showEdgeTray = labelEditor && labelEditor.getTarget() instanceof GraphEdge;\n        const showNodeTray = labelEditor && labelEditor.getTarget() instanceof GraphNode;\n        const showDefault = true;\n        const showRecommended = !alphabet || alphabet.length <= 1;\n\n        return (\n            <div className={Style.tray_container}>\n                {showEdgeTray && <span>\n                    <span className={Style.tray_used}>\n                        {alphabet.map(e => this.renderSymbol(e))}\n                    </span>\n                    <span className={Style.tray_default}>\n                        {showRecommended &&\n                            RECOMMENDED_SYMBOLS.map(e => this.renderSymbol(e))}\n                        {showDefault &&\n                            DEFAULT_SYMBOLS.map(e => this.renderSymbol(e))}\n                    </span>\n                </span>}\n                {showNodeTray && <span>\n                    <PatternInputButton parent={labelEditor.inputComponent}\n                        title={labelEditor.getTarget().getNodeCustom() ? 'Custom' : 'Auto'}\n                        onClick={() => { labelEditor.getTarget().setNodeCustom(!labelEditor.getTarget().getNodeCustom()); }} />\n                    <PatternInputButton parent={labelEditor.inputComponent}\n                        title={labelEditor.getTarget().getNodeAccept() ? 'Accept' : 'Reject'}\n                        onClick={() => { labelEditor.getTarget().setNodeAccept(!labelEditor.getTarget().getNodeAccept()); }} />\n                </span>}\n            </div>\n        );\n    }\n}\n\nexport default PDALabelEditorRenderer;\n","import React from 'react';\n\nimport ViewportEditLayer from 'graph2/components/layers/ViewportEditLayer.js';\nimport ViewportNavigationLayer from 'graph2/components/layers/ViewportNavigationLayer.js';\n\nimport LabelEditorWidget from 'graph2/components/widgets/LabelEditorWidget.js';\n\nimport PDALabelEditorRenderer from '../widgets/PDALabelEditorRenderer.js';\n\nclass PDAGraphOverlayLayer extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const graphView = this.props.graphView;\n        const graphController = this.props.graphController;\n        const labelFormatter = graphController.getLabelFormatter();\n        const inputController = graphView.getInputController();\n\n        return (\n            <React.Fragment>\n                <ViewportEditLayer\n                    graphController={graphController}\n                    inputController={inputController}\n                    viewport={graphView.getViewportComponent()}\n                    session={session}/>\n                <ViewportNavigationLayer\n                    style={{ right: 0 }}\n                    viewportAdapter={graphView.getViewportAdapter()} />\n                <LabelEditorWidget ref={ref => graphController.setLabelEditor(ref)}\n                    labelFormatter={labelFormatter}\n                    viewport={graphView.getViewportComponent()}\n                    saveOnExit={true}>\n                    <PDALabelEditorRenderer\n                        graphController={graphController}\n                        currentModule={currentModule} />\n                </LabelEditorWidget>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default PDAGraphOverlayLayer;","import React from 'react';\nimport Style from './TapeWidget.css';\n\nimport DownArrowIcon from 'components/iconset/DownArrowIcon.js';\n\nconst TAPE_INFINITE_LEFT = true;\nconst TAPE_INFINITE_RIGHT = true;\n\nclass TapeWidget extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.onTapeStepBackward = this.onTapeStepBackward.bind(this);\n        this.onTapeStepForward = this.onTapeStepForward.bind(this);\n        this.onTapeFinish = this.onTapeFinish.bind(this);\n        this.onTapeReset = this.onTapeReset.bind(this);\n        this.onTapeSkipForward = this.onTapeSkipForward.bind(this);\n        this.onTapeSkipBackward = this.onTapeSkipBackward.bind(this);\n        this.onTapeStop = this.onTapeStop.bind(this);\n    }\n\n    onTapeStepBackward(e)\n    {\n        const tapeContext = this.props.value;\n        tapeContext.stepBackward();\n    }\n\n    onTapeStepForward(e)\n    {\n        const tapeContext = this.props.value;\n        tapeContext.stepForward();\n    }\n\n    onTapeSkipForward(e)\n    {\n    }\n\n    onTapeSkipBackward(e)\n    {\n    }\n\n    onTapeReset(e)\n    {\n        const tapeContext = this.props.value;\n        tapeContext.reset();\n    }\n\n    onTapeFinish(e)\n    {\n        const tapeContext = this.props.value;\n        tapeContext.finish();\n    }\n\n    onTapeStop(e)\n    {\n        const tapeContext = this.props.value;\n        tapeContext.stop();\n    }\n\n    /** @override */\n    render()\n    {\n        const showTransitionStates = true;\n        const tapeContext = this.props.value;\n        const tapeIndex = tapeContext ? tapeContext.getCurrentTapeIndex() : -1;\n\n        if (!tapeContext) return null;\n\n        return (\n            <div id={this.props.id}\n                className={Style.tape_container +\n                    ' ' + this.props.className}\n                style={this.props.style}>\n\n                <div className={Style.tape_control_tray}>\n                    <button onClick={this.onTapeStepBackward}>BACK</button>\n                    <button onClick={this.onTapeStepForward}>STEP</button>\n                    <button onClick={this.onTapeReset}>RESET</button>\n                    <button onClick={this.onTapeFinish}>TO END</button>\n                </div>\n\n                <div className={Style.tape_control_tray}>\n                    <button onClick={this.onTapeSkipForward}>SKIP TO NEXT</button>\n                    <button onClick={this.onTapeSkipBackward}>SKIP TO PREV</button>\n                    <button onClick={this.onTapeStop}>STOP</button>\n                </div>\n\n                <div className={'tape-row'}>\n\n                    {TAPE_INFINITE_LEFT && tapeContext.isTapeLeftInfinite() &&\n                        <div className=\"tape-row-entry infinite\">\n                            <span className=\"tape-row-states\"></span>\n                            <label className=\"tape-row-symbol\">{'...'}</label>\n                        </div>}\n\n                    <DownArrowIcon\n                        className=\"tape-pointer\"\n                        style={{ opacity: tapeIndex < 0 ? 0 : 1, left: tapeIndex + 'em' }} />\n\n                    {tapeContext.getTapeInput().map((e, i) => \n                    {\n                        let active = false;\n                        let activeRead = false;\n                        active = tapeIndex === i;\n                        activeRead = tapeIndex === i - 1;\n                        /*\n                        const currentIndex = Math.floor(tapeIndex / 2);\n                        if (currentIndex === i)\n                        {\n                        //It's the current index...\n                        active = tapeIndex % 2 === 1;\n                        activeRead = tapeIndex % 2 === 0;\n                        }\n                        else if (currentIndex === i + 1)\n                        {\n                        //It's the previous index...\n                        active = tapeIndex % 2 === 0;\n                        }\n                        */\n\n                        const sourceStates = tapeContext.getTapeSourceStatesByIndex(i);\n                        const disabled = sourceStates === null;\n                        return (\n                            <div key={e + ':' + i} className={'tape-row-entry' +\n                                (active ? ' active ' : '') +\n                                (activeRead ? ' active-read ' : '') +\n                                (disabled ? ' disabled ' : '')}\n                            onClick={(e) => (!disabled ? tapeContext.setCurrentTapeIndex(i) : null)}>\n                                {showTransitionStates &&\n                                    sourceStates &&\n                                    <span className=\"tape-row-states\">\n                                        {sourceStates.map(sourceState => \n                                        {\n                                            return (\n                                                <label key={sourceState.getGraphElementID()}>\n                                                    {sourceState.getNodeLabel()}\n                                                </label>\n                                            );\n                                        })}\n                                    </span>}\n                                <label className=\"tape-row-symbol\">\n                                    {e}\n                                </label>\n                            </div>\n                        );\n                    })}\n\n                    {TAPE_INFINITE_RIGHT && tapeContext.isTapeRightInfinite() &&\n                        <div className=\"tape-row-entry infinite\">\n                            <span className=\"tape-row-states\"></span>\n                            <label className=\"tape-row-symbol\">{'...'}</label>\n                        </div>}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TapeWidget;\n","import React from 'react';\n\nimport TapeWidget from '../widgets/TapeWidget.js';\n\nimport ViewportNavigationLayer from 'graph2/components/layers/ViewportNavigationLayer.js';\n\nclass PDATapeGraphOverlayLayer extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        const graphView = this.props.graphView;\n        const tester = this.props.tester;\n\n        return (\n            <React.Fragment>\n                <ViewportNavigationLayer\n                    style={{ right: 0 }}\n                    viewportAdapter={graphView.getViewportAdapter()} />\n                <TapeWidget style={{ position: 'absolute', bottom: 0 }}\n                    value={tester ? tester.getTapeContext() : null} />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default PDATapeGraphOverlayLayer;","import React from 'react';\n\nimport { userClearGraph } from 'experimental/UserUtil.js';\nimport { CTRL_KEY } from 'session/manager/hotkey/HotKeyManager.js';\nimport { RENDER_LAYER_WORKSPACE } from 'session/manager/RenderManager.js';\n\nimport PDAGraph from './graph/PDAGraph.js';\nimport PDAGraphController from './graph/PDAGraphController.js';\nimport MachineController from './machine/MachineController.js';\n\nimport StringTester from './tester/StringTester.js';\nimport PDAErrorChecker from './PDAErrorChecker.js';\nimport { registerNotifications } from './components/notifications/PDANotifications.js';\n\nimport * as PDAGraphParser from './PDAGraphParser.js';\nimport PDAImporter from './filehandlers/PDAImporter.js';\nimport PDAExporter from './filehandlers/PDAExporter.js';\nimport { registerImageExporters } from 'modules/nodegraph/filehandlers/NodalGraphImageExporter.js';\n\nimport SafeGraphEventHandler from 'modules/nodegraph/SafeGraphEventHandler.js';\n\n/* COMPONENTS */\n\nimport PanelContainer from 'experimental/panels/PanelContainer.js';\n\nimport OverviewPanel from './components/panels/overview/OverviewPanel.js';\nimport TestingPanel from './components/panels/testing/TestingPanel.js';\nimport AnalysisPanel from './components/panels/analysis/AnalysisPanel.js';\n\nimport PDAGraphLayer from './components/layers/PDAGraphLayer.js';\nimport PDAGraphOverlayLayer from './components/layers/PDAGraphOverlayLayer.js';\nimport PDATapeGraphOverlayLayer from './components/layers/PDATapeGraphOverlayLayer.js';\n\nimport GraphView from 'graph2/components/GraphView.js';\n\nconst MODULE_NAME = 'pda';\nconst MODULE_LOCALIZED_NAME = 'Pushdown Automata';\nconst MODULE_VERSION = '0.0.1';\n\nclass PDAModule\n{\n    constructor(app)\n    {\n        this._app = app;\n\n        this._graph = new PDAGraph();\n        this._graphController = new PDAGraphController(app, this._graph, null);\n        this._graphViewComponent = React.createRef();\n\n        const graphController = this._graphController;\n\n        app.getRenderManager()\n            .addRenderer(RENDER_LAYER_WORKSPACE, props => (\n                <GraphView\n                    ref={this._graphViewComponent}\n                    renderGraph={graphView =>\n                    {\n                        return <PDAGraphLayer\n                            graphView={graphView}\n                            graphController={graphController}\n                            editable={!this._testMode} />;\n                    }}\n                    renderOverlay={graphView =>\n                    {\n                        if (!this._testMode)\n                        {\n                            return <PDAGraphOverlayLayer\n                                graphView={graphView}\n                                graphController={graphController}\n                                session={this._app.getSession()} />;\n                        }\n                        else\n                        {\n                            return <PDATapeGraphOverlayLayer\n                                graphView={graphView}\n                                tester={this._tester} />;\n                        }\n                    }}>\n                </GraphView>\n            ));\n\n        this._machineController = new MachineController(this);\n\n        this._errorChecker = new PDAErrorChecker(app,\n            this._graphController,\n            this._machineController);\n        this._tester = new StringTester();\n        this._testMode = false;\n    }\n\n    /** @override */\n    initialize(app)\n    {\n        registerNotifications(app.getNotificationManager());\n\n        app.getExportManager()\n            .registerExporter(new PDAExporter(PDAGraphParser.JSON), 'session');\n\n        registerImageExporters(app.getExportManager());\n        \n        app.getImportManager()\n            .addImporter(new PDAImporter(app, PDAGraphParser.JSON), '.pda.json', '.json');\n\n        app.getUndoManager()\n            .setEventHandlerFactory((...args) => new SafeGraphEventHandler(\n                this._graphController, PDAGraphParser.JSON));\n\n        app.getDrawerManager()\n            .addPanelClass(props => (\n                <PanelContainer id={props.id}\n                    className={props.className}\n                    style={props.style}\n                    title={'Pushdown Automata'}>\n                    <p>{'Brought to you with \\u2764 by the Flap.js team.'}</p>\n                    <p>{'<- Tap on a tab to begin!'}</p>\n                </PanelContainer>\n            ))\n            .addPanelClass(OverviewPanel)\n            .addPanelClass(TestingPanel)\n            .addPanelClass(AnalysisPanel);\n\n        app.getHotKeyManager()\n            .registerHotKey('Export to PNG', [CTRL_KEY, 'KeyP'], () => { app.getExportManager().tryExportFile('image-png', app.getSession()); })\n            .registerHotKey('Save as JSON', [CTRL_KEY, 'KeyS'], () => { app.getExportManager().tryExportFile('session', app.getSession()); });\n\n        this._machineController.initialize(this);\n        this._graphController.initialize();\n    }\n\n    /** @override */\n    update(app)\n    {\n        this._graphController.update();\n        this._machineController.update(this);\n    }\n\n    /** @override */\n    destroy(app)\n    {\n        this._machineController.destroy(this);\n        this._graphController.destroy();\n    }\n\n    /** @override */\n    clear(app, graphOnly = false)\n    {\n        userClearGraph(app, graphOnly, () => app.getToolbarComponent().closeBar());\n    }\n\n    getMachineController() { return this._machineController; }\n    getGraphController() { return this._graphController; }\n    getGraphView() { return this._graphViewComponent.current; }\n\n    getErrorChecker() { return this._errorChecker; }\n    getStringTester() { return this._tester; }\n\n    /** @override */\n    getModuleVersion() { return MODULE_VERSION; }\n    /** @override */\n    getModuleName() { return MODULE_NAME; }\n    /** @override */\n    getLocalizedModuleName() { return MODULE_LOCALIZED_NAME; }\n    /** @override */\n    getApp() { return this._app; }\n}\n\nexport default PDAModule;\n"],"sourceRoot":""}