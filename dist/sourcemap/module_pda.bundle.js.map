{"version":3,"sources":["webpack:///./src/app/graph/elements/GraphNode.js","webpack:///./src/app/graph/elements/GraphEdge.js","webpack:///./src/app/graph/elements/GraphElement.js","webpack:///./src/app/util/input/AbstractInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphElementInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/pickhandler/PickHandler.js","webpack:///./src/app/components/iconset/RunningManIcon.js","webpack:///./src/app/modules/fsa/graph/GraphLayout.js","webpack:///./src/app/util/input/InputContext.js","webpack:///./src/app/session/manager/undo/AbstractEventHandler.js","webpack:///./src/app/modules/fsa2/graph/UnreachableNodes.js","webpack:///./src/app/components/iconset/BoxAddIcon.js","webpack:///./src/app/components/iconset/flat/JSONFileIcon.js","webpack:///./src/app/experimental/widgets/ZoomWidget.js","webpack:///./src/app/experimental/widgets/FocusCenterWidget.js","webpack:///./src/app/experimental/widgets/NavbarWidget.js","webpack:///./src/app/util/file/import/Importer.js","webpack:///./src/app/session/SessionImporter.js","webpack:///./src/app/util/Eventable.js","webpack:///./src/app/graph/elements/QuadraticEdge.js","webpack:///./src/app/graph/NodeGraph.js","webpack:///./src/app/util/Downloader.js","webpack:///./src/app/components/iconset/PageContentIcon.js","webpack:///./src/app/components/iconset/CrossIcon.js","webpack:///./src/app/components/iconset/AddIcon.js","webpack:///./src/app/components/iconset/SubtractIcon.js","webpack:///./src/app/components/iconset/CheckCircleIcon.js","webpack:///./src/app/components/iconset/CrossCircleIcon.js","webpack:///./src/app/components/iconset/PendingIcon.js","webpack:///./src/app/components/iconset/MoveIcon.js","webpack:///./src/app/components/iconset/TrashCanDetailedIcon.js","webpack:///./src/app/components/iconset/ZoomInIcon.js","webpack:///./src/app/components/iconset/ZoomOutIcon.js","webpack:///./src/app/components/iconset/PinpointIcon.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/InputHandler.js","webpack:///./src/app/experimental/UserUtil.js","webpack:///./src/app/util/input/InputPointer.js","webpack:///./src/app/util/input/ViewportAdapter.js","webpack:///./src/app/util/input/InputAdapter.js","webpack:///./src/app/util/input/components/ViewportComponent.js","webpack:///./src/app/modules/fsa2/graph/FSAGraphUtil.js","webpack:///./src/app/modules/abstract/AbstractMachineController.js","webpack:///./src/app/graph/AbstractGraphLabeler.js","webpack:///./src/app/renderer/EdgeRenderer.js","webpack:///./src/app/deprecated/system/patterninput/PatternInputButton.js","webpack:///./src/app/experimental/panels/PanelDivider.js","webpack:///./src/app/components/iconset/TriangleIcon.js","webpack:///./src/app/experimental/panels/PanelCheckbox.js","webpack:///./src/app/experimental/widgets/ModeSelectTray.js","webpack:///./src/app/experimental/widgets/TrashCanWidget.js","webpack:///./src/app/modules/nodalgraph/SafeGraphEventHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphNodeInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphInitialInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphEdgeInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphEndpointInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphNodeCreateInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphNodeAcceptInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/pickhandler/GraphNodePickHandler.js","webpack:///./src/app/modules/nodalgraph/controller/pickhandler/GraphEdgePickHandler.js","webpack:///./src/app/modules/nodalgraph/controller/pickhandler/GraphEndpointPickHandler.js","webpack:///./src/app/modules/nodalgraph/controller/pickhandler/GraphInitialPickHandler.js","webpack:///./src/app/deprecated/system/inputadapter/AbstractInputHandler.js","webpack:///./src/app/modules/abstract/AbstractInputController.js","webpack:///./src/app/graph/GraphNodeSelectionBox.js","webpack:///./src/app/modules/nodalgraph/controller/GraphPicker.js","webpack:///./src/app/modules/nodalgraph/controller/InputController.js","webpack:///./src/app/modules/abstract/AbstractGraphController.js","webpack:///./src/app/experimental/GraphChangeHandler.js","webpack:///./src/app/modules/nodalgraph/controller/GraphController.js","webpack:///./src/app/modules/nodalgraph/controller/SelectionBoxInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/ViewportInputHandler.js","webpack:///./src/app/deprecated/system/patterninput/PatternInput.js","webpack:///./src/app/session/manager/labeleditor/LabelEditorView.js","webpack:///./src/app/session/manager/labeleditor/LabelEditorManager.js","webpack:///./src/app/modules/nodalgraph/manager/NodalGraphInputManager.js","webpack:///./src/app/deprecated/icons/flat/PNGIcon.js","webpack:///./src/app/deprecated/icons/flat/JPGIcon.js","webpack:///./src/app/deprecated/icons/flat/SVGIcon.js","webpack:///./src/app/modules/nodalgraph/filehandlers/NodalGraphImageExporter.js","webpack:///./src/app/modules/nodalgraph/controller/renderer/BoxRenderer.js","webpack:///./src/app/modules/nodalgraph/controller/renderer/HighlightRenderer.js","webpack:///./src/app/modules/nodalgraph/controller/renderer/SelectionBoxRenderer.js","webpack:///./src/app/modules/nodalgraph/controller/renderer/GraphInputRenderer.js","webpack:///./src/app/components/iconset/DownArrowIcon.js","webpack:///./src/app/experimental/widgets/TapeWidget.js","webpack:///./src/app/experimental/MachineChangeHandler.js","webpack:///./src/app/modules/abstract/AbstractMachineBuilder.js","webpack:///./src/app/modules/pda/machine/PDA.js","webpack:///./src/app/modules/pda/graph/PDANode.js","webpack:///./src/app/modules/pda/graph/PDAEdge.js","webpack:///./src/app/modules/pda/machine/PDABuilder.js","webpack:///./src/app/modules/pda/controller/MachineController.js","webpack:///./src/app/modules/pda/graph/PDAGraph.js","webpack:///./src/app/modules/pda/graph/PDAGraphLabeler.js","webpack:///./src/app/modules/pda/graph/PDAGraphParser.js","webpack:///./src/app/modules/pda/renderer/PDANodeRenderer.js","webpack:///./src/app/modules/pda/renderer/PDAEdgeRenderer.js","webpack:///./src/app/modules/pda/renderer/InitialMarkerRenderer.js","webpack:///./src/app/modules/pda/renderer/PDAGraphRenderer.js","webpack:///./src/app/modules/pda/renderer/PDALabelEditorRenderer.js","webpack:///./src/app/modules/pda/components/panels/overview/states/StateListElement.js","webpack:///./src/app/modules/pda/components/panels/overview/states/StateListView.js","webpack:///./src/app/modules/pda/components/panels/overview/alphabet/AlphabetListElement.js","webpack:///./src/app/modules/pda/components/panels/overview/alphabet/AlphabetListView.js","webpack:///./src/app/modules/pda/components/panels/overview/stackalphabet/StackAlphabetListElement.js","webpack:///./src/app/modules/pda/components/panels/overview/stackalphabet/StackAlphabetListView.js","webpack:///./src/app/modules/pda/components/panels/overview/AutoStateLabelView.js","webpack:///./src/app/modules/pda/components/panels/overview/OverviewPanel.js","webpack:///./src/app/modules/pda/components/panels/testing/TestItem.js","webpack:///./src/app/modules/pda/components/panels/testing/TestListView.js","webpack:///./src/app/modules/pda/components/notifications/StateNotificationLayout.js","webpack:///./src/app/modules/pda/components/notifications/TransitionNotificationLayout.js","webpack:///./src/app/modules/pda/components/notifications/StateUnreachableNotificationLayout.js","webpack:///./src/app/modules/pda/components/notifications/PDANotifications.js","webpack:///./src/app/modules/pda/components/panels/testing/TestingPanel.js","webpack:///./src/app/modules/pda/components/panels/analysis/AnalysisPanel.js","webpack:///./src/app/modules/pda/machine/util/SolvePDA.js","webpack:///./src/app/modules/pda/tester/TapeContext.js","webpack:///./src/app/modules/pda/tester/StringTester.js","webpack:///./src/app/modules/pda/PDAErrorChecker.js","webpack:///./src/app/modules/pda/components/views/EditPane.js","webpack:///./src/app/modules/pda/components/views/TapePane.js","webpack:///./src/app/modules/pda/filehandlers/PDAImporter.js","webpack:///./src/app/modules/pda/filehandlers/PDAExporter.js","webpack:///./src/app/modules/pda/PDAModule.js"],"names":["GraphNode","id","_this","x","arguments","length","undefined","y","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","_label","GraphElement","dst","label","usePosition","_get","prototype","Math","floor","GraphEdge","from","to","_from","_to","node","Error","HALFPI","PI","result","isPlaceholder","dy","dx","atan2","halfPlaceholderLength","getPlaceholderLength","placeholderLength","getNodeSize","src","getHashString","elementID","_id","AbstractInputHandler","pointer","zoomValue","prevValue","GraphElementInputHandler","targetType","_targetType","InputHandler","inputController","target","PickHandler","graph","Icon","props","React","Component","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","className","style","xmlns","width","height","viewBox","d","GraphLayout","reachableNode","reachable","startNode","getStartNode","push","i","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","getEdges","Symbol","iterator","next","done","edge","value","includes","err","return","getReachableState","unreachableNode","getNodes","filter","numOfReachable","numOfUnreachable","numOfNode","maxNum","max","radius","currentStep","degree","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","sin","cos","degree_re","degree_un","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","InputContext","_inputHandlers","inputHandler","index","indexOf","splice","eventName","_len","eventArgs","Array","_key","handlerEventCallback","apply","AbstractEventHandler","undoManager","getUnreachableNodes","getNodeCount","edges","nodes","slice","shift","nextNodes","pop","getEdgeFrom","getEdgeTo","nextNode","__webpack_require__","__webpack_exports__","fill","points","cx","cy","r","ZoomWidget","onZoomIn","bind","_assertThisInitialized","onZoomOut","e","viewport","viewScale","getScale","addScale","toFixed","react_default","Style","zoom_container","IconButton","zoom_button","title","onClick","ZoomInIcon","ZoomOutIcon","zoom_label","FocusCenterWidget","FocusCenterWidget_classCallCheck","FocusCenterWidget_getPrototypeOf","FocusCenterWidget_assertThisInitialized","setOffset","center_focus_button","disabled","abs","getOffsetX","getOffsetY","PinpointIcon","NavbarWidget","NavbarWidget_classCallCheck","NavbarWidget_possibleConstructorReturn","NavbarWidget_getPrototypeOf","viewportAdapter","navbar_container","experimental_widgets_ZoomWidget","navbar_widget_container","experimental_widgets_FocusCenterWidget","navbar_widget","Importer","fileName","fileType","fileData","Promise","resolve","SessionImporter","app","SessionImporter_classCallCheck","_app","session","getApp","getUndoManager","captureEvent","sessionData","projectName","getSession","currentModule","getCurrentModule","onParseSession","onPreImportSession","onImportSession","substring","setProjectName","onPostImportSession","Eventable","__eventListeners","mixin","targetClass","targetPrototype","Object","assign","registerEvent","Map","has","set","unregisterEvent","delete","addEventListener","listener","get","removeEventListener","listeners","flag","clearEventListeners","clear","countEventListeners","getEventListeners","on","once","f","args","emit","_len2","_key2","onEventProcessed","concat","QuadraticEdge","_quad","radians","coords","changeDestinationNode","fromx","fromy","midpointx","midpointy","angleOffset","sqrt","outrad","inrad","maxdr","getDirectionalVector","isQuadratic","getQuadraticAsCoords","px","py","nodeSize","getMidPoint","qcoords","qx","qy","isSelfLoop","setQuadraticRadians","setQuadraticLength","getSelfLoopHeight","prevDest","angle","formatAsPlaceholder","formatAsSelfLoop","NodeGraph","nodeClass","edgeClass","_nodeClass","_edgeClass","_nodeMapping","_edgeMapping","clearEdges","clearNodes","size","minX","minY","maxX","maxY","minNX","Number","MAX_VALUE","minNY","maxNX","MIN_VALUE","maxNY","maxNodeSize","values","min","minEX","minEY","maxEX","maxEY","startPoint","endPoint","centerPoint","getStartPoint","getEndPoint","getCenterPoint","sx","sy","ex","ey","string","stringHash","addNode","guid","getGraphElementID","setGraphElementID","nullSourceEdges","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","setEdgeTo","_i","deleteEdge","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","getNodeLabel","addEdge","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","getEdgeLabel","downloadText","filename","textData","downloadURL","encodeURIComponent","url","element","document","headerIndex","setAttribute","display","body","appendChild","click","removeChild","graphController","userClearGraph","graphOnly","callback","window","confirm","I18N","toString","getGraphController","getGraph","InputPointer","inputAdapter","_inputAdapter","_element","_viewportAdapter","_active","_x","_y","_inputpos","pos","ViewportAdapter","ViewportAdapter_classCallCheck","_offsetX","_offsetY","_nextOffsetX","_nextOffsetY","_offsetDamping","_scaleFactor","_minScale","_maxScale","scale","damping","clientX","clientY","ctm","getScreenCTM","dscale","LONG_TAP_TICKS","DOUBLE_TAP_TICKS","SCROLL_SENSITIVITY","CURSOR_RADIUS_SQU","CURSOR_RADIUS","DRAGGING_BUFFER_SQU","DRAGGING_BUFFER","InputAdapter","InputAdapter_classCallCheck","_contexts","_activeDragHandler","_cursor","_mousemove","_mouseup","_touchmove","_touchend","_timer","_pointer","_dragging","_altinput","_holdInputDelay","_dblInputDelay","_scrollSensitivity","_minTapRadius","_draggingRadiusSqu","_prevEmptyInput","_prevEmptyTime","_prevEmptyX","_prevEmptyY","onContextMenu","onMouseDown","onMouseMove","onTouchStart","onWheel","onMouseDownThenMove","onMouseDownThenUp","onTouchStartThenMove","onTouchStartThenEnd","onDelayedInputDown","context","unshift","SVGElement","setElement","onTouchMove","update","_get2","handleEvent","stopPropagation","preventDefault","cursor","activeElement","blur","focus","button","ctrlKey","onInputDown","mouse","transformScreenToView","setPosition","cancelInputEvent","onInputMove","onInputUp","changedTouches","touch","deltaY","prev","setScale","beginInput","setTimeout","onDragMove","getDistanceSquToInitial","inputEventPosition","getInputEventPosition","timer","clearTimeout","onDragStop","dist","dt","Date","now","endInput","isActive","SMOOTH_OFFSET_DAMPING","MIN_SCALE","MAX_SCALE","ViewportComponent","ViewportComponent_classCallCheck","ViewportComponent_possibleConstructorReturn","ViewportComponent_getPrototypeOf","_ref","createRef","getViewportAdapter","setMinScale","setMaxScale","setOffsetDamping","addInputHandler","initialize","current","destroy","baseViewSize","viewSize","halfViewSize","getSVGViewBoxString","transform","getSVGTransformString","ref","viewport_component","children","_UnreachableNodes_js__WEBPACK_IMPORTED_MODULE_0__","AbstractMachineController","module","machineBuilder","_module","_machineBuilder","AbstractGraphLabeler","getDefaultEdgeLabel","getDefaultNodeLabel","getEdgeLabelFormatter","getNodeLabelFormatter","SIXTH_PI","DIRECTED_FORWARD","DefaultEndpointRenderer","Fragment","position","stroke","color","DefaultLabelRenderer","direction","labels","map","str","key","reverse","alignmentBaseline","pointerEvents","userSelect","textAnchor","EdgeRenderer","fromAngle","toAngle","directed","ForwardEndpointRenderer","forwardEndpointRenderer","endpointRenderer","BackwardEndpointRenderer","backwardEndpointRenderer","EdgeLabelRenderer","labelRenderer","fromPoint","toPoint","center","reverseLabel","quadLine","dftx","dfty","dfcx","dfcy","ftrad","fcrad","split","PatternInputButton","_timeout","onAnyMouseUp","parent","ignoreBlur","_this2","inputElement","onBlur","_this3","PanelDivider","panel_divider","PanelCheckbox","state","checked","initial","onChange","setState","checkbox_container","type","name","htmlFor","ModeSelectTray","newValue","mode","tray_container","experimental_components_IconButton_js__WEBPACK_IMPORTED_MODULE_2__","tray_button","components_iconset_EditPencilIcon_js__WEBPACK_IMPORTED_MODULE_3__","components_iconset_MoveIcon_js__WEBPACK_IMPORTED_MODULE_4__","TrashCanWidget","forceActive","_doubleTapTimeout","onMouseEnter","onMouseLeave","onAnyMouseDownNotConsumed","setTrashMode","documentElement","getInputAdapter","active","isTrashMode","hide","isEmpty","isUsingTouch","isDragging","trash_container","components_iconset_TrashCanDetailedIcon_js__WEBPACK_IMPORTED_MODULE_2__","SafeGraphEventHandler","graphParser","_graphController","_graphParser","_graphData","objectify","prevEvent","getPreviousEvent","applyRedo","parse","GraphNodeInputHandler","selectionBox","getSelectionBox","prevX","prevY","hasSelection","deleteSelectedNodes","deleteTargetNode","isMoveMode","openLabelEditor","picker","getPicker","createEdge","setEdgeLabel","getGraphLabeler","setInitialTarget","isNewEdge","edgeQuad","getQuadratic","prevQuad","prevEdgeTo","_snapToGrid","snapSize","_snapSize","round","moveMultipleNodesTo","getSelection","moveNodeTo","onGraphIntentMoveAllNodes","onGraphIntentMoveNode","GraphInitialInputHandler","ghostInitialMarker","getPickHandler","getTargetAt","prevInitial","setStartNode","applyAutoRename","onGraphIntentChangeInitial","GraphEdgeInputHandler","deleteTargetEdge","targetQuad","moveEdgeTo","onGraphIntentMoveEdge","GraphEndpointInputHandler","moveEndpointTo","formatEdge","onGraphIntentFinishEdge","onGraphIntentCreateEdge","onGraphIntentChangeDestination","shouldDestroyPointlessEdges","GraphNodeCreateInputHandler","createNode","GraphNodeAcceptInputHandler","toggleNode","GraphNodePickHandler","GraphEdgePickHandler","EDGE_RADIUS","GraphEndpointPickHandler","end","ENDPOINT_RADIUS","GraphInitialPickHandler","offset","AbstractInputController","AbstractInputController_classCallCheck","onInputEvent","GraphNodeSelectionBox","GraphNodeSelectionBox_classCallCheck","_boundingBox","fromX","fromY","toX","toY","visible","targets","box","mx","my","lx","ly","clearSelection","x1","y1","x2","y2","getNodesWithin","GraphPicker","GraphPicker_classCallCheck","initialTarget","initialTargetType","_prevX","_prevY","_pickHandlers","pickHandler","getTargetType","updateTarget","hasTarget","DEFAULT_SHOULD_DESTROY_POINTLESS_EDGE","InputController","InputController_classCallCheck","InputController_possibleConstructorReturn","InputController_getPrototypeOf","_picker","_selectionBox","_swapMouseScheme","_trashMode","_disabled","getPointerX","getPointerY","updateHoverTarget","updateInitialTarget","isTargetInSelection","handler","isTargetable","onAction","onDblAction","onDragStart","clearTarget","enabled","_drawer","setViewportColor","shouldInputFirst","isAltInput","isPointerActive","AbstractGraphController","labeler","parser","AbstractGraphController_classCallCheck","_graph","_labeler","_parser","parsers","GraphChangeHandler","refreshTicks","GraphChangeHandler_classCallCheck","_cachedGraphHash","_refreshTicks","_elapsedTicks","Infinity","_listeners","graphHash","getHashCode","DEFAULT_AUTO_RENAME","GRAPH_REFRESH_RATE","GraphController","GraphController_classCallCheck","GraphController_getPrototypeOf","_graphChangeHandler","setGraphController","GraphController_assertThisInitialized","shouldAutoLabel","GraphController_get","getInputController","applyLayout","getModule","graphLabeler","getNodeCustom","setNodeLabel","nextQuad","destinationNode","prevDestination","nextInitial","nextX","nextY","targetNodes","enable","setNodeCustom","random","newNodeLabel","getNodeAccept","setNodeAccept","selectedNode","selection","deleteNode","onGraphIntentDeleteNodes","other","diameter","nextDX","nextDY","changeInputEventPosition","setQuadraticByCoords","sourceNode","defaultValue","labelEditor","getInputManager","getLabelEditorManager","getLabelEditorComponent","prevLabel","openEditor","ax","ay","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","SelectionBoxInputHandler","SelectionBoxInputHandler_classCallCheck","SelectionBoxInputHandler_possibleConstructorReturn","SelectionBoxInputHandler_getPrototypeOf","_inputController","beginSelection","isSelecting","updateSelection","endSelection","ViewportInputHandler","ViewportInputHandler_classCallCheck","ViewportInputHandler_possibleConstructorReturn","ViewportInputHandler_getPrototypeOf","addOffset","PatternInput","PatternInput_classCallCheck","PatternInput_getPrototypeOf","placeholder","maxLength","multiLine","formatter","_submitTimeout","_submit","submitOnBlur","_skipBlur","_skipSelect","PatternInput_assertThisInitialized","onFocus","onKeyDown","select","submit","onSubmit","shiftKey","caretPosition","selectionStart","selectionEnd","ignore","separator","format","_this4","maxlength","multiline","rows","spellCheck","LabelEditorView","LabelEditorView_classCallCheck","LabelEditorView_getPrototypeOf","inputComponent","open","_target","_targetCallback","onInputSubmit","LabelEditorView_assertThisInitialized","onInputBlur","graphElement","onCancel","_targetOnSubmit","_targetOnCancel","getLabelFormatter","setFormatter","resetValue","closeEditor","isEditorOpen","targetStyle","getElement","parentClientRect","getBoundingClientRect","screenPos","svg","transformViewToScreen","offsetX","offsetWidth","left","offsetY","offsetHeight","top","editor_container","patterninput_PatternInput","saveOnExit","LabelEditorManager","LabelEditorManager_classCallCheck","_labelEditorComponent","_labelEditorRenderer","renderer","LabelEditorRenderer","getRenderManager","addRenderer","RENDER_LAYER_WORKSPACE_OVERLAY","manager_labeleditor_LabelEditorView","NodalGraphInputManager","nodalGraph","labelEditorRenderer","NodalGraphInputManager_classCallCheck","_labelEditorManager","setLabelEditorRenderer","setLabeler","_selectionBoxInputHandler","_viewportInputHandler","_graphLabeler","onSessionStart","getNotificationManager","pushNotification","WARNING_LAYOUT_ID","removeInputHandler","onSessionStop","getGraphParser","PNGIcon","JPGIcon","JPGIcon_classCallCheck","JPGIcon_possibleConstructorReturn","JPGIcon_getPrototypeOf","SVGIcon","SVGIcon_classCallCheck","SVGIcon_possibleConstructorReturn","SVGIcon_getPrototypeOf","IMAGE_TYPE_PNG","NodalGraphImageExporter","imageType","NodalGraphImageExporter_classCallCheck","NodalGraphImageExporter_possibleConstructorReturn","NodalGraphImageExporter_getPrototypeOf","_imageType","SessionExporter","exportType","getProjectName","svgElement","getWorkspaceComponent","getSVGElement","workspaceDim","baseVal","processSVGForExport","data","image-type","bounds","getBoundingRect","w","EXPORT_PADDING_X","h","EXPORT_PADDING_Y","clone","cloneNode","uiElements","getElementsByClassName","remove","IMAGE_EXPORTERS","registerImageExporters","exportManager","exporter","registerExporter","getImageType","BoxRenderer","HIGHLIGHT_LINE_ARRAY","HighlightRenderer","HighlightRenderer_classCallCheck","HighlightRenderer_possibleConstructorReturn","HighlightRenderer_getPrototypeOf","point","strokeDashoffset","strokeDasharray","strokeWidth","SelectionBoxRenderer","SelectionBoxRenderer_classCallCheck","SelectionBoxRenderer_possibleConstructorReturn","SelectionBoxRenderer_getPrototypeOf","selectionBoundingBox","renderer_HighlightRenderer","renderer_BoxRenderer","GraphInputRenderer","GraphInputRenderer_classCallCheck","GraphInputRenderer_possibleConstructorReturn","GraphInputRenderer_getPrototypeOf","renderer_SelectionBoxRenderer","_tester","TapeWidget","TapeWidget_classCallCheck","TapeWidget_getPrototypeOf","onTapeStepBackward","TapeWidget_assertThisInitialized","onTapeStepForward","onTapeFinish","onTapeReset","onTapeSkipForward","onTapeSkipBackward","onTapeStop","stepBackward","stepForward","reset","finish","stop","tapeContext","tapeIndex","getCurrentTapeIndex","tape_container","tape_control_tray","isTapeLeftInfinite","DownArrowIcon","opacity","getTapeInput","activeRead","sourceStates","getTapeSourceStatesByIndex","setCurrentTapeIndex","sourceState","isTapeRightInfinite","MachineChangeHandler","AbstractMachineBuilder","AbstractMachineBuilder_classCallCheck","_machineChangeHandler","_errors","_warnings","onGraphChange","getGraphChangeHandler","addListener","removeListener","attemptBuildMachine","getMachine","machine","errors","warnings","State","_src","_createClass","Transition","_symbols","read","symbol","getReadSymbol","getPopSymbol","getPushSymbol","symbolString","_Symbol","_read","_pop","_push","isEqualStack","stack1","stack2","temp","_iteratorNormalCompletion25","_didIteratorError25","_iteratorError25","_step25","_iterator25","_iteratorNormalCompletion26","_didIteratorError26","_iteratorError26","_step26","_iterator26","PDA","_states","_alphabet","_stackAlphabet","_transitions","_finalStates","Set","_customSymbols","_customStackSymbols","_startState","pda","entries","_step4$value","_slicedToArray","copy","isStartState","isFinalState","add","_step5$value","_step6$value","_step7$value","getSourceState","getStateID","getDestinationState","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","error","addState","stateID","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","getStateLabel","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","readSymbol","popSymbol","pushSymbol","hasState","transitionKey","transition","hasSymbol","addSymbol","newTransition","_incrSymbolCount","_incrStackSymbolCount","symbols","getSymbols","_decrSymbolCount","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","symbolCount","stackSymbol","isCustomSymbol","isCustomStackSymbol","newSymbol","custom","keys","stack","_typeof","fromTransitionKey","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","startsWith","toState","validSymbols","getSymbolsByReadPop","_i2","validSymbol","newStack","validPop","validPush","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_i3","doClosureTransition","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","s","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","pair","thisPair","thisState","thisStack","transitions","getOutgoingTransitions","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21","_iteratorNormalCompletion22","_didIteratorError22","_iteratorError22","_step22","_iterator22","_iteratorNormalCompletion23","_didIteratorError23","_iteratorError23","_step23","_iterator23","_iteratorNormalCompletion24","_didIteratorError24","_iteratorError24","_step24","_iterator24","PDANode","PDANode_classCallCheck","_accept","_custom","LINE_SEPARATOR","SYMBOL_SEPARATOR","READ_SEPARATOR","POP_SEPARATOR","EMPTY_CHAR","PDAEdge","PDAEdge_classCallCheck","PDAEdge_possibleConstructorReturn","PDAEdge_getPrototypeOf","PDAEdge_get","line","readIndex","trim","popIndex","PDABuilder","PDABuilder_classCallCheck","PDABuilder_possibleConstructorReturn","PDABuilder_getPrototypeOf","_machine","getStates","getTransitions","getFirstGraphNodeByLabel","startState","getStartState","customSymbols","getCustomSymbols","customStackSymbols","getCustomStackSymbols","setCustomSymbol","setCustomStackSymbol","nodeLabels","nodeOutgoings","edgePlaceholders","graphNodes","graphEdges","graphStart","nodeLabel","setFinalState","setStartState","srcNode","dstNode","srcState","getStateByID","dstState","edgeLabelLines","getEdgeLinesFromLabel","getEdgeSymbolsFromLine","addTransition","PDABuilder_slicedToArray","sharedStates","getSource","unreachables","MachineController","MachineController_classCallCheck","MachineController_possibleConstructorReturn","MachineController_getPrototypeOf","MachineController_get","attemptBuildGraph","getFinalStates","getAlphabet","addCustomSymbol","getMachineBuilder","removeCustomSymbol","prevSymbol","nextSymbol","replace","renameCustomSymbol","clearCustomSymbols","getStackAlphabet","addCustomStackSymbol","removeCustomStackSymbol","renameCustomStackSymbol","clearCustomStackSymbols","PDAGraph","PDAGraph_classCallCheck","PDAGraph_possibleConstructorReturn","PDAGraph_getPrototypeOf","_nodes","PDAGraph_get","edgeSource","edgeDestination","edgeLabel","otherEdge","otherLines","join","parallelEdgeHeight","dist12sq","vertical","m","b","x0","y0","DEFAULT_NODE_LABEL_PREFIX","isValidSymbol","edgeLabelFormatter","allowNull","lines","symbolLength","j","PDAGraphLabeler","PDAGraphLabeler_classCallCheck","PDAGraphLabeler_possibleConstructorReturn","PDAGraphLabeler_getPrototypeOf","_prefix","prefix","shouldAutoRenameNodes","otherNodes","nodeIndex","getDefaultNodeLabelPrefix","getNodesByLabel","JSON","nodeDatas","nodeCount","edgeDatas","edgeCount","initialIndex","nodeIndices","nodeData","initialNode","edgeData","quadData","graphInitial","accept","quad","sourceIndex","destinationIndex","_version","PDANodeRenderer","PDANodeRenderer_classCallCheck","PDANodeRenderer_possibleConstructorReturn","PDANodeRenderer_getPrototypeOf","fontSize","PDAEdgeRenderer","PDAEdgeRenderer_classCallCheck","PDAEdgeRenderer_possibleConstructorReturn","PDAEdgeRenderer_getPrototypeOf","start","edgeDir","getEdgeDirection","InitialMarkerRenderer","InitialMarkerRenderer_classCallCheck","InitialMarkerRenderer_possibleConstructorReturn","InitialMarkerRenderer_getPrototypeOf","PDAGraphRenderer","PDAGraphRenderer_classCallCheck","PDAGraphRenderer_possibleConstructorReturn","PDAGraphRenderer_getPrototypeOf","renderer_PDANodeRenderer","renderer_PDAEdgeRenderer","getInputHandlers","renderer_InitialMarkerRenderer","RECOMMENDED_SYMBOLS","DEFAULT_SYMBOLS","PDALabelEditorRenderer","PDALabelEditorRenderer_classCallCheck","PDALabelEditorRenderer_possibleConstructorReturn","PDALabelEditorRenderer_getPrototypeOf","appendValue","alphabet","getMachineController","showRecommended","tray_used","renderSymbol","tray_default","StateListElement","StateListElement_classCallCheck","StateListElement_getPrototypeOf","onValueChange","StateListElement_assertThisInitialized","onKeyUp","nextLabel","keyCode","inputValue","nodeCustom","nodeAccept","displayValue","element_container","StateListView","StateListView_classCallCheck","StateListView_getPrototypeOf","onElementAdd","StateListView_assertThisInitialized","onElementFocus","onElementBlur","onElementChange","focusOnNode","renameNode","list_container","element_list","TriangleIcon","first_marker","overview_states_StateListElement","add_button","BoxAddIcon","AlphabetListElement","AlphabetListElement_classCallCheck","AlphabetListElement_getPrototypeOf","_inputElement","AlphabetListElement_assertThisInitialized","inputSymbol","displaySymbol","symbolUsed","used","AlphabetListView","AlphabetListView_classCallCheck","AlphabetListView_getPrototypeOf","newSymbolComponent","useNewSymbol","AlphabetListView_assertThisInitialized","machineController","isSymbol","renameSymbol","createSymbol","deleteSymbol","overview_alphabet_AlphabetListElement","isUsedSymbol","renderAlphabetList","StackAlphabetListElement","StackAlphabetListElement_classCallCheck","StackAlphabetListElement_getPrototypeOf","StackAlphabetListElement_assertThisInitialized","StackAlphabetListView","StackAlphabetListView_classCallCheck","StackAlphabetListView_getPrototypeOf","StackAlphabetListView_assertThisInitialized","isStackSymbol","renameStackSymbol","createStackSymbol","deleteStackSymbol","overview_stackalphabet_StackAlphabetListElement","isUsedStackSymbol","renderStackAlphabetList","AutoStateLabelView","AutoStateLabelView_classCallCheck","AutoStateLabelView_getPrototypeOf","onAutoStatePrefixSubmit","AutoStateLabelView_assertThisInitialized","onAutoStatePrefixFormat","setDefaultNodeLabelPrefix","select_container","select_label","FormattedInput","prefix_editor","captureOnExit","postfix_selector","onMachineTypeChange","OverviewPanel","OverviewPanel_classCallCheck","OverviewPanel_getPrototypeOf","onAutoLayoutApply","OverviewPanel_assertThisInitialized","onAutoLayoutChange","onAutoLabelChange","onSnapToGridChange","applyAutoLayout","setAutoRenameNodes","drawer","autoRename","drawerFull","isDrawerFullscreen","PanelContainer","TITLE","PanelSection","full","overview_states_StateListView","overview_alphabet_AlphabetListView","overview_stackalphabet_StackAlphabetListView","panels_overview_AutoStateLabelView","autolayout_button","PanelSwitch","defineProperty","DEFAULT_MODE","TestItem","TestItem_classCallCheck","TestItem_getPrototypeOf","status","TestItem_assertThisInitialized","nextValue","onDelete","onTest","test_item_container","test_button","CheckCircleIcon","CrossCircleIcon","PendingIcon","RunningManIcon","test_input","subtitle","delete_button","SubtractIcon","ACCEPT_FILE_TYPES","TEST_FILENAME","TestListView","TestListView_classCallCheck","TestListView_getPrototypeOf","_testList","_testName","onTestNew","TestListView_assertThisInitialized","onTestUpload","onTestDownload","onTestClose","onTestAdd","onTestDelete","onTestTest","onTestRunAll","resetStatus","fileBlob","reader","FileReader","onload","event","tests","test","abort","readAsText","testStrings","getValue","tester","isTesting","stopTest","nextTest","item","forceImmediate","immediate","itemValue","startTest","then","promise","runTest","empty","test_container","test_control_tray","test_control_button","PageContentIcon","IconUploadButton","onUpload","UploadIcon","DownloadIcon","CrossIcon","test_list_container","test_list_add","AddIcon","test_list_count","test_list_scroll_container","test_list","testCallback","panels_testing_TestItem","test_list_runall","StateNotificationLayout","StateNotificationLayout_classCallCheck","StateNotificationLayout_getPrototypeOf","targetIndex","targetLabel","message","StateNotificationLayout_assertThisInitialized","notification","targetLength","deleteTargetNodes","close","DefaultNotificationLayout","styleType","STYLE_TYPE_ERROR","text","ARROW","TransitionNotificationLayout","TransitionNotificationLayout_classCallCheck","TransitionNotificationLayout_getPrototypeOf","TransitionNotificationLayout_assertThisInitialized","focusOnEdge","deleteTargetEdges","StateUnreachableNotificationLayout","StateUnreachableNotificationLayout_classCallCheck","StateUnreachableNotificationLayout_getPrototypeOf","StateUnreachableNotificationLayout_assertThisInitialized","STYLE_TYPE_WARNING","STATE_LAYOUT_ID","TRANSITION_LAYOUT_ID","STATE_UNREACHABLE_LAYOUT_ID","TestingPanel","TestingPanel_classCallCheck","TestingPanel_getPrototypeOf","stepMode","onStepTestChange","TestingPanel_assertThisInitialized","onAutoErrorCheckChange","_viewport","setCurrentView","setDrawerSoloClass","closeDrawer","openDrawer","errorChecker","getErrorChecker","errorCheck","isErrorChecking","setErrorChecking","clearNotifications","getStringTester","panel_container","panels_testing_TestListView","AnalysisPanel","AnalysisPanel_classCallCheck","AnalysisPanel_getPrototypeOf","optimizeUnreachOption","optimizeRedundOption","onOptimizeMachine","AnalysisPanel_assertThisInitialized","unreachableArray","isChecked","onDeleteAllUnreachable","analysis_button","canOptimize","solvePDAByStep","cachedStates","cachedSymbols","nextStates","nextIndex","cstate","doTerminalTransition","nextState","TapeContext","inputString","infiniteLeft","infiniteRight","TapeContext_classCallCheck","_tapeInput","_left","_right","_index","TestTapeContext","StringTester_classCallCheck","StringTester_possibleConstructorReturn","StringTester_getPrototypeOf","getTestString","_machineController","resetPosition","getNodesAtPosition","changePosition","getPosition","StringTester","_testString","_testIndex","_tapeContext","_cachePath","_cachedResult","_resolve","_reject","testString","reject","testResult","thenStop","isResult","relatedStateAndStack","prevCache","states","cachedState","nextCache","PDAErrorChecker","PDAErrorChecker_classCallCheck","_showErrorOnChange","onMachineChange","getMachineChangeHandler","showErrors","getMachineErrors","getMachineWarnings","notificationManager","SUCCESS_LAYOUT_ID","warning","EditPane","EditPane_classCallCheck","EditPane_possibleConstructorReturn","EditPane_getPrototypeOf","inputActionMode","isActionMode","view_pane","view_widget","right","bottom","modeIndex","setInputScheme","TapePane","TapePane_classCallCheck","TapePane_possibleConstructorReturn","TapePane_getPrototypeOf","setDisabled","getTapeContext","PDAImporter","jsonGraphParser","PDAImporter_classCallCheck","PDAImporter_possibleConstructorReturn","PDAImporter_getPrototypeOf","_prevGraphHash","machineData","machineType","setMachineType","isArray","statePrefix","loadMachineFromData","nextGraphHash","PDAExporter","PDAExporter_classCallCheck","PDAExporter_possibleConstructorReturn","PDAExporter_getPrototypeOf","graphData","JSONFileIcon","PDAModule","PDAModule_classCallCheck","_inputManager","PDAGraphParser","RENDER_LAYER_WORKSPACE","_workspace","pda_renderer_PDAGraphRenderer","workspace","_errorChecker","addPickHandler","_initialPickHandler","_endpointPickHandler","_nodePickHandler","_edgePickHandler","_nodeInputHandler","_edgeInputHandler","_endpointInputHandler","_initialInputHandler","_createInputHandler","_acceptInputHandler","registerNotificationLayout","getExportManager","getImportManager","addImporter","getViewportManager","addViewClass","getDrawerManager","addPanelClass","getHotKeyManager","registerHotKey","CTRL_KEY","tryExportFile","undo","SHIFT_KEY","redo","setEventHandlerFactory","UserUtil","getToolbarComponent","closeBar"],"mappings":"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","file":"module_pda.bundle.ca0aac3e79fedbb5d75d.js","sourcesContent":["import GraphElement from './GraphElement.js';\n\n/**\n * A class that represents the node elements of a graph.\n *\n * @see {@link NodeGraph}\n * @extends GraphElement\n */\nclass GraphNode extends GraphElement\n{\n    /**\n   * Creates a node with the unique id.\n   * \n   * @param {String} id     the element id for this node.\n   * @param {Number} [x=0]  the initial x position\n   * @param {Number} [y=0]  the initial y position\n   */\n    constructor(id, x = 0, y = 0)\n    {\n        super(id);\n\n        this.x = x;\n        this.y = y;\n\n        this._label = '';\n    }\n\n    /** @override */\n    getCenterPoint(dst={x: 0, y: 0})\n    {\n        dst.x = this.x;\n        dst.y = this.y;\n        return dst;\n    }\n\n    /**\n   * Sets the node label to the passed-in string.\n   *\n   * Assumes the label is NOT null.\n   * @param {String} label  The new node label.\n   * @returns {this}\n   */\n    setNodeLabel(label)\n    {\n        this._label = label;\n        return this;\n    }\n\n    /**\n   * Gets the label of the node. If the node has no label, it will return an\n   * empty string.\n   * @returns {String} The node's label.\n   */\n    getNodeLabel() { return this._label; }\n\n    /**\n   * Gets the size of the node. Can be overriden to specify a different size.\n   * @returns {Number} The radius of the node.\n   */\n    getNodeSize() { return 16; }\n\n    /** @override */\n    getHashString(usePosition=true)\n    {\n        if (usePosition)\n        {\n            return super.getHashString(usePosition) + ':' +\n        Math.floor(this.x) + ',' + Math.floor(this.y) + '.' + this._label;\n        }\n        else\n        {\n            return super.getHashString(usePosition) + ':' + this._label;\n        }\n    }\n}\n\nexport default GraphNode;\n","import GraphElement from './GraphElement.js';\n\n/**\n * A class that represents the edge elements of a graph.\n * \n * @see {@link NodeGraph}\n * @extends GraphElement\n */\nclass GraphEdge extends GraphElement\n{\n    /**\n     * Creates a edge with the unique id.\n     * \n     * @param {String} id           The element id for this node.\n     * @param {GraphNode} from      The from node of the edge.\n     * @param {GraphNode} [to=null] The to node of the edge.\n     */\n    constructor(id, from, to=null)\n    {\n        super(id);\n\n        this._from = from;\n        this._to = to;\n\n        this._label = '';\n    }\n\n    // DEPRECATED!\n    changeDestinationNode(node)\n    {\n        this._to = node;\n    }\n\n    setEdgeFrom(node)\n    {\n        if (!node) throw new Error('Source of edge cannot be null');\n\n        this._from = node;\n        return this;\n    }\n\n    setEdgeTo(node)\n    {\n        this._to = node;\n        return this;\n    }\n\n    /**\n     * Sets the edge label to the passed-in string.\n     *\n     * Assumes the label is NOT null.\n     * @param {String} label  The new edge label.\n     * @returns {this}\n     */\n    setEdgeLabel(label)\n    {\n        this._label = label;\n        return this;\n    }\n\n    getEdgeDirection()\n    {\n        const from = this._from;\n        const to = this._to;\n        const HALFPI = Math.PI / 2;\n        let result = 0;\n\n        if (this.isPlaceholder())\n        {\n            result = Math.PI / 4;\n        }\n        else\n        {\n            const dy = to.y - from.y;\n            const dx = to.x - from.x;\n            result = Math.atan2(dy, dx);\n        }\n\n        if (result > HALFPI || result < -HALFPI)\n        {\n            result += Math.PI;\n        }\n\n        return result;\n    }\n\n    getStartPoint(dst = { x: 0, y: 0 })\n    {\n        const from = this._from;\n        dst.x = from.x;\n        dst.y = from.y;\n        return dst;\n    }\n\n    /** @override */\n    getCenterPoint(dst = { x: 0, y: 0 })\n    {\n        const from = this._from;\n        const to = this._to;\n        if (this.isPlaceholder())\n        {\n            const halfPlaceholderLength = this.getPlaceholderLength() / 2;\n            dst.x = from.x + halfPlaceholderLength;\n            dst.y = from.y + halfPlaceholderLength;\n        }\n        else\n        {\n            dst.x = from.x + (to.x - from.x) / 2;\n            dst.y = from.y + (to.y - from.y) / 2;\n        }\n        return dst;\n    }\n\n    getEndPoint(dst = { x: 0, y: 0 })\n    {\n        if (this.isPlaceholder())\n        {\n            const from = this._from;\n            const placeholderLength = this.getPlaceholderLength();\n            dst.x = from.x + placeholderLength;\n            dst.y = from.y + placeholderLength;\n        }\n        else\n        {\n            const to = this._to;\n            dst.x = to.x;\n            dst.y = to.y;\n        }\n        return dst;\n    }\n\n    getPlaceholderLength() { return this._from.getNodeSize(); }\n    isPlaceholder() { return this._to === null; }\n    isSelfLoop() { return this._from === this._to; }\n\n    /**\n     * Gets the label of the edge. If the edge has no label, it will return an\n     * empty string.\n     * @returns {String} The edge's label.\n     */\n    getEdgeLabel() { return this._label; }\n\n    getEdgeFrom() { return this._from; }\n    getEdgeTo() { return this._to; }\n\n    /** @override */\n    getHashString(usePosition = true)\n    {\n        const src = this._from ? this._from.getHashString(usePosition) : '';\n        // HACK: to may be a pointer, which is not a node, so getHashString does not exist.\n        const dst = this._to ? this._to.getHashString ? this._to.getHashString(usePosition) : '0' : '';\n        return super.getHashString(usePosition) + ':' + src + ',' + dst + '.' + this._label;\n    }\n}\n\nexport default GraphEdge;","/**\n * A class that represents any positioned, unique object in a graph. Usually\n * this is not instantiated, but rather extended. Look at {@link NodeElement}\n * and {@link EdgeElement} as examples.\n */\nclass GraphElement\n{\n    /**\n   * Creates an element with the unique id.\n   * \n   * @param {Number} elementID The unique id that represents the element.\n   */\n    constructor(elementID)\n    {\n        this._id = elementID;\n    }\n\n    /**\n   * Sets the element's id to the passed-in id.\n   * @param {String} elementID  The new id.\n   * @returns {this}\n   */\n    setGraphElementID(elementID)\n    {\n        this._id = elementID;\n        return this;\n    }\n\n    /**\n   * Compute the center point of the element and store the result in dst. The\n   * properties changed in dst are: x, y.\n   * @param  {Object} [dst={x: 0, y: 0}]    The object to store the result.\n   * @returns {Object}                       The passed-in dst.\n   */\n    getCenterPoint(dst = { x: 0, y: 0 })\n    {\n        dst.x = dst.y = 0;\n        return dst;\n    }\n\n    /**\n   * A unique identifier for this graph element\n   * @returns {String} The unique identifier for this element.\n   */\n    getGraphElementID() { return this._id; }\n\n    /**\n   * Computes the hash string that represents this element and its current state\n   * uniquely and deterministically. {@link NodeGraph} uses this to compute its\n   * hash code that distinguishes it from other graphs. The generated string\n   * should only be used to differentiate between other objects of the same hash\n   * function. In other words, every instance should only be compared to other\n   * instances of the same class (or extended class without override).\n   * @param  {Boolean} [usePosition=true] Whether to consider positioning as\n   *                                      part of the unique state.\n   * @returns {String}                     The hash string that represents this\n   *                                      current state.\n   */\n    getHashString(usePosition = true) { return this._id; }\n}\n\nexport default GraphElement;\n","/**\n * Used by InputAdapter to handle input event logic.\n */\nclass AbstractInputHandler\n{\n    constructor() {}\n\n    /**\n   * Called by InputAdapter before an InputEvent begins.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not begin.\n   */\n    onPreInputEvent(pointer) { return false; }\n\n    /**\n   * Called by InputAdapter when an InputEvent resolves and is not an Alt input.\n   * To handle events for Alt inputs, refer to onAltInputEvent().\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to trigger other events.\n   */\n    onInputEvent(pointer) { return false; }\n\n    /**\n   * Called by InputAdapter when an InputEvent resolves and is an Alt input.\n   * To handle events for non-Alt inputs, refer to onInputEvent().\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to trigger other events.\n   */\n    onAltInputEvent(pointer) { return false; }\n\n    /**\n   * Called by InputAdapter when a DblInputEvent resolves. The input is\n   * assumed by a non-Alt input, since only non-Alt inputs can trigger this\n   * event.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to trigger other events.\n   */\n    onDblInputEvent(pointer) { return false; }\n\n    /**\n   * Called by InputAdapter when input moves. The input is called before drag\n   * logic.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to trigger other events (i.e. dragging events).\n   */\n    onMoveInputEvent(pointer) { return false; }\n\n    /**\n   * Called by InputAdapter before a drag begins. The input could be either\n   * an Alt or non-Alt input.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to trigger other events, and then it will continue the drag\n   * input events for the current handler only.\n   * \n   * NOTE: A drag does not start immediately on move. There is a radius to\n   * compensate for mobile users. Therefore pointer.x and pointer.y refer to\n   * the offset position. To get the starting pointer position, use\n   * pointer.getInputEventPosition().\n   */\n    onDragStart(pointer) { return false; }\n\n    /**\n   * Called by InputAdapter while dragging moves. The input could be either\n   * an Alt or non-Alt input.\n   * Will always be called after onDragStart() and will be followed by\n   * onDragStop() when complete.\n   */\n    onDragMove(pointer) {}\n\n    /**\n   * Called by InputAdapter after a drag ends. The input could be either an\n   * Alt or non-Alt input.\n   * Will always be called after onDragStart(). Although onDragMove may be\n   * called in-between, it is not guaranteed.\n   */\n    onDragStop(pointer) {}\n\n    /**\n   * Called by InputAdapter after an InputEvent ends.\n   */\n    onPostInputEvent(pointer) {}\n\n    /**\n   * Called by InputAdapter when zoom changes.\n   * Returns true if event is consumed (zoom will not be applied)\n   */\n    onZoomChange(pointer, zoomValue, prevValue)\n    {\n        return false;\n    }\n}\n\nexport default AbstractInputHandler;","import InputHandler from './InputHandler.js';\n\nclass GraphElementInputHandler extends InputHandler\n{\n    constructor(targetType)\n    {\n        super();\n\n        if (!targetType)\n        {\n            throw new Error('Missing target type for graph element input handler');\n        }\n\n        this._targetType = targetType;\n    }\n\n    /** @override */\n    isTargetable(inputController, pointer, target, targetType)\n    {\n        if (targetType === this._targetType)\n        {\n            return true;\n        }\n\n        return false;\n    }\n  \n    getTargetType()\n    {\n        return this._targetType;\n    }\n}\n\nexport default GraphElementInputHandler;\n","class PickHandler\n{\n    getTargetAt(graph, x, y) { return null; }\n    getTargetType() { return null; }\n}\nexport default PickHandler;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M13.49 5.48c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm-3.6 13.9l1-4.4 2.1 2v6h2v-7.5l-2.1-2 .6-3c1.3 1.5 3.3 2.5 5.5 2.5v-2c-1.9 0-3.5-1-4.3-2.4l-1-1.6c-.4-.6-1-1-1.7-1-.3 0-.5.1-.8.1l-5.2 2.2v4.7h2v-3.4l1.8-.7-1.6 8.1-4.9-1-.4 2 7 1.4z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","\nfunction getReachableState(graph)\n{\n    let reachable = [];\n    let startNode = graph.getStartNode();\n    reachable.push(startNode);\n    for(let i = 0; i < reachable.length; i++)\n    {\n        for (const edge of graph.getEdges())\n        {\n            if(edge._from == reachable[i])\n            {\n                if(!reachable.includes(edge._to))\n                {\n                    reachable.push(edge._to);\n                }\n            }\n        }\n    }\n    return reachable;\n}\n\nclass GraphLayout\n{\n    static applyLayout(graph, type='circle')\n    {\n        if (type != 'circle') throw new Error('Invalid layout type');\n        //seperate node to reachable and unreachable\n        const reachableNode= getReachableState(graph);\n        function unreachable(node)\n        {\n            return !reachableNode.includes(node);\n        }\n        const unreachableNode = graph.getNodes().filter(unreachable);\n\n        //get num of nodes\n        const numOfReachable = reachableNode.length;\n        const numOfUnreachable = unreachableNode.length;\n        const numOfNode = graph.getNodes().length;\n        const maxNum = Math.max(numOfReachable, numOfUnreachable);\n        if(numOfNode == 0)\n        {\n            return;\n        }\n        //set radius\n        var radius;\n        if(numOfReachable < 10 && numOfUnreachable < 10)\n        {\n            radius = maxNum/4 * 50 + 30;\n        }\n        else\n        {\n            radius = (maxNum/5) * 40 + 30;\n        }\n\n        let currentStep = 0;\n        if (numOfReachable == 1)\n        {\n            let degree = 2* Math.PI/numOfNode;\n            for(const node of graph.getNodes())\n            {\n                node.y = Math.sin(degree*currentStep + Math.PI)*radius;\n                node.x = Math.cos(degree*currentStep + Math.PI)*radius;\n                currentStep += 1;\n            }\n        }\n        else \n        {\n            const degree_re = 2* Math.PI/numOfReachable;\n            const degree_un = 2* Math.PI/numOfUnreachable;\n\n            currentStep = 0;\n            for(const node of reachableNode)\n            {\n                node.y = Math.sin(degree_re*currentStep + Math.PI)*radius;\n                node.x = Math.cos(degree_re*currentStep + Math.PI)*radius;\n                currentStep += 1;\n            }\n            currentStep = 0;\n            for(const node of unreachableNode)\n            {\n                node.y = Math.sin(degree_un*currentStep + Math.PI)*(radius + 100);\n                node.x = Math.cos(degree_un*currentStep + Math.PI)*(radius + 100);\n                currentStep += 1;\n            }\n        }\n    /*for(const node of graph.getNodes())\n    {\n      node.y = Math.sin(degree*currentStep + Math.PI)*radius;\n      node.x = Math.cos(degree*currentStep + Math.PI)*radius;\n      currentStep += 1\n    }*/\n    }\n\n\n}\n\nexport default GraphLayout;\n","class InputContext\n{\n    constructor()\n    {\n        this._inputHandlers = [];\n    }\n\n    addInputHandler(inputHandler)\n    {\n        this._inputHandlers.push(inputHandler);\n        return this;\n    }\n\n    removeInputHandler(inputHandler)\n    {\n        const index = this._inputHandlers.indexOf(inputHandler);\n        if (index >= 0) this._inputHandlers.splice(index, 1);\n        return this;\n    }\n\n    clearInputHandlers() { this._inputHandlers.length = 0; }\n\n    handleEvent(eventName, ...eventArgs)\n    {\n        //Let others handle this event...\n        for (const inputHandler of this._inputHandlers)\n        {\n            const handlerEventCallback = inputHandler[eventName];\n            if (typeof handlerEventCallback === 'function')\n            {\n                if (handlerEventCallback.apply(inputHandler, eventArgs))\n                {\n                    return inputHandler;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    getInputHandlers() { return this._inputHandlers; }\n    hasInputHandlers() { return this._inputHandlers.length > 0; }\n}\n\nexport default InputContext;","class AbstractEventHandler\n{\n    constructor() {}\n\n    applyUndo(undoManager)\n    {\n        throw new Error('Undo operation for handler not supported');\n    }\n\n    applyRedo(undoManager)\n    {\n        throw new Error('Redo operation for handler not supported');\n    }\n}\n\nexport default AbstractEventHandler;\n","export function getUnreachableNodes(graph)\n{\n    if (graph.getNodeCount() <= 1) return [];\n\n    const edges = graph.getEdges();\n    const nodes = graph.getNodes().slice();\n    const startNode = nodes.shift();\n    let nextNodes = [];\n    nextNodes.push(startNode);\n\n    while(nextNodes.length > 0)\n    {\n        const node = nextNodes.pop();\n        for(const edge of edges)\n        {\n            if (edge.getEdgeFrom() === node)\n            {\n                const i = nodes.indexOf(edge.getEdgeTo());\n                if (i >= 0)\n                {\n                    const nextNode = nodes.splice(i, 1)[0];\n                    nextNodes.push(nextNode);\n                }\n            }\n        }\n    }\n\n    return nodes;\n}","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\" />\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 56 56\">\n                <path fill=\"#E9E9E0\" d=\"M36.985,0H7.963C7.155,0,6.5,0.655,6.5,1.926V55c0,0.345,0.655,1,1.463,1h40.074 c0.808,0,1.463-0.655,1.463-1V12.978c0-0.696-0.093-0.92-0.257-1.085L37.607,0.257C37.442,0.093,37.218,0,36.985,0z\"/>\n                <polygon fill=\"#D9D7CA\" points=\"37.5,0.151 37.5,12 49.349,12 \t\"/>\n                <path fill=\"#9777A8\" d=\"M48.037,56H7.963C7.155,56,6.5,55.345,6.5,54.537V39h43v15.537C49.5,55.345,48.845,56,48.037,56z\"/>\n                <path fill=\"#FFFFFF\" d={'M17.021,42.719v7.848c0,0.474-0.087,0.873-0.26,1.196s-0.405,0.583-0.697,0.779 s-0.627,0.333-1.005,0.41c-0.378,0.077-0.768,0.116-1.169,0.116c-0.2,0-0.436-0.021-0.704-0.062s-0.547-0.104-0.834-0.191 s-0.563-0.185-0.827-0.294s-0.487-0.232-0.67-0.369l0.697-1.107c0.091,0.063,0.221,0.13,0.39,0.198s0.354,0.132,0.554,0.191 s0.41,0.111,0.629,0.157s0.424,0.068,0.615,0.068c0.483,0,0.868-0.094,1.155-0.28s0.439-0.504,0.458-0.95v-7.711H17.021z'}/>\n                <path fill=\"#FFFFFF\" d={'M25.184,50.238c0,0.364-0.075,0.718-0.226,1.06s-0.362,0.643-0.636,0.902s-0.61,0.467-1.012,0.622 s-0.856,0.232-1.367,0.232c-0.219,0-0.444-0.012-0.677-0.034s-0.467-0.062-0.704-0.116c-0.237-0.055-0.463-0.13-0.677-0.226 s-0.398-0.212-0.554-0.349l0.287-1.176c0.128,0.073,0.289,0.144,0.485,0.212s0.398,0.132,0.608,0.191s0.419,0.107,0.629,0.144 s0.405,0.055,0.588,0.055c0.556,0,0.982-0.13,1.278-0.39s0.444-0.645,0.444-1.155c0-0.31-0.104-0.574-0.314-0.793 s-0.472-0.417-0.786-0.595s-0.654-0.355-1.019-0.533s-0.706-0.388-1.025-0.629s-0.583-0.526-0.793-0.854s-0.314-0.738-0.314-1.23 c0-0.446,0.082-0.843,0.246-1.189s0.385-0.641,0.663-0.882s0.602-0.426,0.971-0.554s0.759-0.191,1.169-0.191 c0.419,0,0.843,0.039,1.271,0.116s0.774,0.203,1.039,0.376c-0.055,0.118-0.118,0.248-0.191,0.39s-0.142,0.273-0.205,0.396 s-0.118,0.226-0.164,0.308s-0.073,0.128-0.082,0.137c-0.055-0.027-0.116-0.063-0.185-0.109s-0.166-0.091-0.294-0.137 s-0.296-0.077-0.506-0.096s-0.479-0.014-0.807,0.014c-0.183,0.019-0.355,0.07-0.52,0.157s-0.31,0.193-0.438,0.321 s-0.228,0.271-0.301,0.431s-0.109,0.313-0.109,0.458c0,0.364,0.104,0.658,0.314,0.882s0.47,0.419,0.779,0.588 s0.647,0.333,1.012,0.492s0.704,0.354,1.019,0.581s0.576,0.513,0.786,0.854S25.184,49.7,25.184,50.238z'}/>\n                <path fill=\"#FFFFFF\" d={'M35.082,47.914c0,0.848-0.107,1.595-0.321,2.242s-0.511,1.185-0.889,1.613s-0.82,0.752-1.326,0.971 s-1.06,0.328-1.661,0.328s-1.155-0.109-1.661-0.328s-0.948-0.542-1.326-0.971s-0.675-0.966-0.889-1.613s-0.321-1.395-0.321-2.242 s0.107-1.593,0.321-2.235s0.511-1.178,0.889-1.606s0.82-0.754,1.326-0.978s1.06-0.335,1.661-0.335s1.155,0.111,1.661,0.335 s0.948,0.549,1.326,0.978s0.675,0.964,0.889,1.606S35.082,47.066,35.082,47.914z M30.844,51.729c0.337,0,0.658-0.066,0.964-0.198 s0.579-0.349,0.82-0.649s0.431-0.695,0.567-1.183s0.21-1.082,0.219-1.784c-0.009-0.684-0.08-1.265-0.212-1.743 s-0.314-0.873-0.547-1.183s-0.497-0.533-0.793-0.67s-0.608-0.205-0.937-0.205c-0.337,0-0.658,0.063-0.964,0.191 s-0.579,0.344-0.82,0.649s-0.431,0.699-0.567,1.183c-0.137,0.483-0.21,1.075-0.219,1.777c0.009,0.684,0.08,1.267,0.212,1.75 s0.314,0.877,0.547,1.183s0.497,0.528,0.793,0.67S30.516,51.729,30.844,51.729z'}/>\n                <path fill=\"#FFFFFF\" d=\"M44.68,42.924V53h-1.668l-3.951-6.945V53h-1.668V42.924h1.668l3.951,6.945v-6.945H44.68z\"/>\n                <path fill=\"#9777A8\" d=\"M19.5,19v-4c0-0.551,0.448-1,1-1c0.553,0,1-0.448,1-1s-0.447-1-1-1c-1.654,0-3,1.346-3,3v4 c0,1.103-0.897,2-2,2c-0.553,0-1,0.448-1,1s0.447,1,1,1c1.103,0,2,0.897,2,2v4c0,1.654,1.346,3,3,3c0.553,0,1-0.448,1-1 s-0.447-1-1-1c-0.552,0-1-0.449-1-1v-4c0-1.2-0.542-2.266-1.382-3C18.958,21.266,19.5,20.2,19.5,19z\"/>\n                <circle fill=\"#9777A8\" cx=\"27.5\" cy=\"18.5\" r=\"1.5\"/>\n                <path fill=\"#9777A8\" d=\"M39.5,21c-1.103,0-2-0.897-2-2v-4c0-1.654-1.346-3-3-3c-0.553,0-1,0.448-1,1s0.447,1,1,1 c0.552,0,1,0.449,1,1v4c0,1.2,0.542,2.266,1.382,3c-0.84,0.734-1.382,1.8-1.382,3v4c0,0.551-0.448,1-1,1c-0.553,0-1,0.448-1,1 s0.447,1,1,1c1.654,0,3-1.346,3-3v-4c0-1.103,0.897-2,2-2c0.553,0,1-0.448,1-1S40.053,21,39.5,21z\"/>\n                <path fill=\"#9777A8\" d=\"M27.5,24c-0.553,0-1,0.448-1,1v3c0,0.552,0.447,1,1,1s1-0.448,1-1v-3 C28.5,24.448,28.053,24,27.5,24z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './ZoomWidget.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport ZoomInIcon from 'components/iconset/ZoomInIcon.js';\nimport ZoomOutIcon from 'components/iconset/ZoomOutIcon.js';\n\nclass ZoomWidget extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.onZoomIn = this.onZoomIn.bind(this);\n        this.onZoomOut = this.onZoomOut.bind(this);\n    }\n\n    onZoomIn(e)\n    {\n        const viewport = this.props.viewport;\n        const viewScale = -viewport.getScale() * 0.4;\n        viewport.addScale(viewScale);\n    }\n\n    onZoomOut(e)\n    {\n        const viewport = this.props.viewport;\n        const viewScale = viewport.getScale() * 0.75;\n        viewport.addScale(viewScale);\n    }\n\n    /** @override */\n    render()\n    {\n        const viewport = this.props.viewport;\n        const viewScale = 'x' + (1 / (viewport.getScale() || 1)).toFixed(2);\n\n        return (\n            <div id={this.props.id}\n                className={Style.zoom_container +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <IconButton className={Style.zoom_button} title=\"Zoom In\" onClick={this.onZoomIn}>\n                    <ZoomInIcon/>\n                </IconButton>\n                <IconButton className={Style.zoom_button} title=\"Zoom Out\" onClick={this.onZoomOut}>\n                    <ZoomOutIcon/>\n                </IconButton>\n                <label className={Style.zoom_label}>{viewScale}</label>\n            </div>\n        );\n    }\n}\n\nexport default ZoomWidget;\n","import React from 'react';\nimport Style from './FocusCenterWidget.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport PinpointIcon from 'components/iconset/PinpointIcon.js';\n\nconst OFFSET_EPSILON = 0.1;\n\nclass FocusCenterWidget extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick(e)\n    {\n        const viewport = this.props.viewport;\n        viewport.setOffset(0, 0);\n    }\n\n    /** @override */\n    render()\n    {\n        const viewport = this.props.viewport;\n\n        return (\n            <IconButton id={this.props.id}\n                className={Style.center_focus_button +\n          ' ' + this.props.className}\n                style={this.props.style}\n                title={'Center Workspace'}\n                disabled={Math.abs(viewport.getOffsetX()) < OFFSET_EPSILON &&\n          Math.abs(viewport.getOffsetY()) < OFFSET_EPSILON} onClick={this.onClick}>\n                <PinpointIcon/>\n            </IconButton>\n        );\n    }\n}\n\nexport default FocusCenterWidget;\n","import React from 'react';\nimport Style from './NavbarWidget.css';\n\nimport ZoomWidget from 'experimental/widgets/ZoomWidget.js';\nimport FocusCenterWidget from 'experimental/widgets/FocusCenterWidget.js';\n\nclass NavbarWidget extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const viewportAdapter = this.props.viewportAdapter;\n\n        return (\n            <div id={this.props.id}\n                className={Style.navbar_container +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <ZoomWidget className={Style.navbar_widget_container} viewport={viewportAdapter}/>\n                <FocusCenterWidget className={Style.navbar_widget} viewport={viewportAdapter}/>\n            </div>\n        );\n    }\n}\n\nexport default NavbarWidget;\n","class Importer\n{\n    constructor() {}\n\n    /**\n     * Try to import the target file. Assumes that isValidFile() returns true.\n     * \n     * @param {String} fileName the name of the target file\n     * @param {String} fileType the associated file extension\n     * @param {String} fileData the file content to import\n     * @returns {Promise} a Promise that resolves if imported without errors\n     */\n    importFileData(fileName, fileType, fileData)\n    {\n        return Promise.resolve(fileData);\n    }\n    \n    getDataType() { return 'text'; }\n}\nexport default Importer;\n","import Importer from 'util/file/import/Importer.js';\n\nclass SessionImporter extends Importer\n{\n    constructor(app)\n    {\n        super();\n\n        this._app = app;\n    }\n\n    onParseSession(session, fileData)\n    {\n        return fileData;\n    }\n\n    onPreImportSession(session)\n    {\n        session.getApp().getUndoManager().captureEvent();\n    }\n\n    onImportSession(session, sessionData)\n    {\n        \n    }\n\n    onPostImportSession(session)\n    {\n        session.getApp().getUndoManager().captureEvent();\n    }\n\n    /** @override */\n    importFileData(fileName, fileType, fileData)\n    {\n        const app = this._app;\n        const session = app.getSession();\n        const currentModule = session.getCurrentModule();\n        const result = this.onParseSession(session, fileData);\n\n        this.onPreImportSession(session);\n\n        this.onImportSession(session, result);\n\n        let projectName;\n        if (fileName)\n        {\n            projectName = fileName.substring(0, fileName.length - fileType.length);\n        }\n        else\n        {\n            projectName = result['_metadata']['name'];\n        }\n        \n        app.getSession().setProjectName(projectName);\n\n        this.onPostImportSession(session);\n\n        return currentModule;\n    }\n}\n\nexport default SessionImporter;\n","const ALLOW_AUTOMATIC_REGISTER = false;\n\nconst Eventable = {\n    __eventListeners: null,\n    mixin(targetClass)\n    {\n        const targetPrototype = targetClass.prototype;\n        Object.assign(targetPrototype, Eventable);\n        delete targetPrototype.mixin;\n    },\n\n    registerEvent(eventName)\n    {\n        if (!this.__eventListeners) this.__eventListeners = new Map();\n\n        if (!this.__eventListeners.has(eventName))\n        {\n            this.__eventListeners.set(eventName, []);\n        }\n        else\n        {\n            throw new Error('Already registered event \\'' + eventName + '\\'');\n        }\n    },\n\n    unregisterEvent(eventName)\n    {\n        if (!this.__eventListeners) return;\n\n        if (this.__eventListeners.has(eventName))\n        {\n            this.__eventListeners.delete(eventName);\n        }\n        else\n        {\n            throw new Error('Unable to find event \\'' + eventName + '\\'');\n        }\n    },\n\n    addEventListener(eventName, listener)\n    {\n        if (!this.__eventListeners) this.__eventListeners = new Map();\n\n        let listeners;\n        if (this.__eventListeners.has(eventName))\n        {\n            listeners = this.__eventListeners.get(eventName);\n        }\n        else if (ALLOW_AUTOMATIC_REGISTER)\n        {\n            listeners = [];\n            this.__eventListeners.set(eventName, listeners);\n        }\n        else\n        {\n            throw new Error('Unable to find event \\'' + eventName + '\\'');\n        }\n\n        listeners.push(listener);\n    },\n\n    removeEventListener(eventName, listener)\n    {\n        if (!this.__eventListeners) return;\n\n        if (this.__eventListeners.has(eventName))\n        {\n            const listeners = this.__eventListeners.get(eventName);\n            let flag = false;\n            let i = listeners.length;\n            while (i--)\n            {\n                if (listeners[i] === listener)\n                {\n                    listeners.splice(i, 1);\n                    flag = true;\n                }\n            }\n\n            if (!flag)\n            {\n                throw new Error('Unable to find listener for event \\'' + eventName + '\\'');\n            }\n        }\n        else\n        {\n            throw new Error('Unknown event \\'' + eventName + '\\'');\n        }\n    },\n\n    clearEventListeners(eventName)\n    {\n        if (!this.__eventListeners) return;\n\n        if (!eventName)\n        {\n            this.__eventListeners.clear();\n        }\n        else if (this.__eventListeners.has(eventName))\n        {\n            const listeners = this.__eventListeners.get(eventName);\n            listeners.length = 0;\n        }\n        else if (ALLOW_AUTOMATIC_REGISTER)\n        {\n            const listeners = [];\n            this.__eventListeners.set(eventName, listeners);\n        }\n        else\n        {\n            throw new Error('Unable to find event \\'' + eventName + '\\'');\n        }\n    },\n\n    countEventListeners(eventName)\n    {\n        if (!this.__eventListeners) return 0;\n        return this.__eventListeners.has(eventName) ? this.__eventListeners.get(eventName).length : 0;\n    },\n\n    getEventListeners(eventName)\n    {\n        if (!this.__eventListeners) return null;\n        return this.__eventListeners.get(eventName);\n    },\n\n    on(eventName, listener)\n    {\n        this.addEventListener(eventName, listener);\n    },\n\n    once(eventName, listener)\n    {\n        const f = (...args) => \n        {\n            try\n            {\n                listener.apply(null, args);\n            }\n            finally\n            {\n                this.removeEventListener(eventName, f);\n            }\n        };\n\n        this.addEventListener(eventName, f);\n    },\n\n    emit(eventName, ...args)\n    {\n        try\n        {\n            if (!this.__eventListeners) return;\n\n            let listeners;\n            if (!this.__eventListeners.has(eventName))\n            {\n                if (ALLOW_AUTOMATIC_REGISTER)\n                {\n                    listeners = [];\n                    this.__eventListeners.set(eventName, listeners);\n                }\n                else\n                {\n                    throw new Error('Unable to find event \\'' + eventName + '\\'');\n                }\n            }\n            else\n            {\n                listeners = this.__eventListeners.get(eventName);\n\n                let result = null;\n                let i = listeners.length;\n                while (i--)\n                {\n                    try\n                    {\n                        result = listeners[i].apply(null, args);\n                    }\n                    catch (e)\n                    {\n                        continue;\n                    }\n\n                    if (result === true) break;\n                }\n            }\n        }\n        finally\n        {\n            this.onEventProcessed(eventName, ...args);\n        }\n    },\n\n    onEventProcessed(eventName, ...args)\n    {\n        //Do nothing.\n    }\n};\n\nexport default Eventable;\n","import GraphEdge from './GraphEdge.js';\nimport { getDirectionalVector, getMidPoint } from 'util/MathHelper.js';\n\n/**\n * A class that represents the curved edge elements of a graph.\n * \n * @see {@link NodeGraph}\n * @extends GraphEdge\n */\nclass QuadraticEdge extends GraphEdge\n{\n    /**\n   * Creates a quadratic edge with the unique id.\n   * @constructor\n   * @param {String} id           The element id for this node.\n   * @param {GraphNode} from      The from node of the edge.\n   * @param {GraphNode} [to=null] The to node of the edge.\n   */\n    constructor(id, from, to = null)\n    {\n        super(id, from, null);\n\n        //radians = the angle in radians, where 0 is the normal of midpoint\n        //length = the distance from midpoint\n        this._quad = {\n            radians: 0,\n            length: 0,\n            coords: { x: 0, y: 0 }\n        };\n\n        // Make sure to format it correctly when creating...\n        this.changeDestinationNode(to);\n    }\n\n    /**\n   * Set the angle of the curve in radians\n   * @param {Number} radians the radians the quadratic should be curved\n   * @returns {this}\n   */\n    setQuadraticRadians(radians)\n    {\n        this._quad.radians = radians;\n        return this;\n    }\n\n    /**\n   * Set the distance of the curve from the midpoint\n   * @param {Number} length the \"height\" of the curve\n   * @returns {this}\n   */\n    setQuadraticLength(length)\n    {\n        this._quad.length = length;\n        return this;\n    }\n\n    /**\n   * Calculates and sets the quadratic vertex to pass through the position.\n   * This will update the radians and length of the curve.\n   * @param {Number} x the x coordinate\n   * @param {Number} y the y coordinate\n   * @returns {this}\n   */\n    setQuadraticByCoords(x, y)\n    {\n        const from = this._from;\n        const to = this._to;\n        const fromx = from.x;\n        const fromy = from.y;\n        const tox = to.x;\n        const toy = to.y;\n\n        let dx = tox - fromx;\n        let dy = toy - fromy;\n        const midpointx = fromx + dx / 2;\n        const midpointy = fromy + dy / 2;\n\n        // Remember: y-axis is flipped because canvas coord-space is -y => +y\n        // Therefore, dy needs to be flipped\n        const angleOffset = Math.atan2(-dy, dx);\n        dx = x - midpointx;\n        dy = y - midpointy;\n\n        const PI = Math.PI;\n        const HALFPI = PI / 2;\n        // 0 rad = to the right\n        // Also: angleOffset is the offset from midpoint angle, the orthogonal base vector\n        // This is because the from and to could be flipped, and\n        // therefore give a negative, or at least a reversed angle.\n        let radians = Math.atan2(dy, dx) + angleOffset;\n        let length = Math.sqrt(dx * dx + dy * dy);\n        if (length < 0) length = 0;\n\n        // -PI / 2 is outward\n        const outrad = radians - (-HALFPI);\n        // PI / 2 is inward\n        const inrad = radians - (HALFPI);\n        // TODO: Should be dependent on length, instead of a constant.\n        const maxdr = PI / 20;\n\n        if (Math.abs(length) < 8)\n        {\n            radians = 0;\n            length = 0;\n        }\n        else if (outrad < maxdr && outrad > -maxdr)\n        {\n            // -PI / 2 is outward\n            radians = -HALFPI;\n        }\n        else if (-inrad < maxdr && -inrad > -maxdr)\n        {\n            // PI / 2 is inward\n            radians = HALFPI;\n        }\n\n        this._quad.radians = radians;\n        this._quad.length = length;\n        return this;\n    }\n\n    getQuadraticLength() { return this._quad.length; }\n    getQuadraticRadians() { return this._quad.radians; }\n    getQuadratic() { return this._quad; }\n    isQuadratic() { return !this.isPlaceholder() && this._quad.length !== 0; }\n\n    getQuadraticAsCoords()\n    {\n        const from = this._from;\n        const to = this._to;\n        const dst = this._quad.coords;\n        if (from == null || to == null)\n        {\n            dst.x = 0;\n            dst.y = 0;\n        }\n        else\n        {\n            /*\n      //To mark dirty...\n      _capture: {\n        fx: 0, fy: 0,\n        tx: 0, ty: 0,\n        ql: 0, qr: 0\n      }\n      */\n            getDirectionalVector(from.x, from.y, to.x, to.y, this._quad.length, this._quad.radians, dst);\n        }\n        return dst;\n    }\n\n    /** @override */\n    getEdgeDirection()\n    {\n        let result = 0;\n        if (this.isQuadratic())\n        {\n            const coords = this.getQuadraticAsCoords();\n            result = Math.atan2(coords.y, coords.x) + Math.PI / 2;\n        }\n        else\n        {\n            result = super.getEdgeDirection();\n        }\n\n        return result;\n    }\n\n    /** @override */\n    getStartPoint(dst = { x: 0, y: 0 })\n    {\n        const from = this._from;\n        const to = this._to;\n\n        if (!from) throw new Error('Source of edge cannot be null.');\n        if (!to)\n        {\n            //Make sure to use quad for placeholder direction (not magnitude)\n            const px = Math.cos(this._quad.radians);\n            const py = Math.sin(this._quad.radians);\n            const nodeSize = from.getNodeSize();\n            dst.x = from.x + px * nodeSize;\n            dst.y = from.y + py * nodeSize;\n            return dst;\n        }\n\n        //Check if edge is following something other than a node...then remain flat\n        if (!to.getNodeSize || !this.isQuadratic())\n        {\n            getDirectionalVector(from.x, from.y, to.x, to.y, from.getNodeSize(), 0, dst);\n            dst.x += from.x;\n            dst.y += from.y;\n            return dst;\n        }\n        else\n        {\n            getMidPoint(from.x, from.y, to.x, to.y, dst);\n            const qcoords = this.getQuadraticAsCoords();\n            const qx = dst.x + qcoords.x;\n            const qy = dst.y + qcoords.y;\n            getDirectionalVector(from.x, from.y, qx, qy, from.getNodeSize(), this.isSelfLoop() ? (Math.PI / 4) : 0, dst);\n            dst.x += from.x;\n            dst.y += from.y;\n            return dst;\n        }\n    }\n\n    /** @override */\n    getCenterPoint(dst = { x: 0, y: 0 })\n    {\n        const from = this._from;\n        const to = this._to;\n\n        if (!from) throw new Error('Source of edge cannot be null.');\n        if (!to)\n        {\n            //Make sure to use quad for placeholder direction (not magnitude)\n            const px = Math.cos(this._quad.radians);\n            const py = Math.sin(this._quad.radians);\n            const placeholderLength = from.getNodeSize() + this.getPlaceholderLength() / 2;\n            dst.x = from.x + px * placeholderLength;\n            dst.y = from.y + py * placeholderLength;\n            return dst;\n        }\n\n        getMidPoint(from.x, from.y, to.x, to.y, dst);\n\n        if (this.isQuadratic())\n        {\n            const qcoords = this.getQuadraticAsCoords();\n            dst.x += qcoords.x;\n            dst.y += qcoords.y;\n        }\n\n        return dst;\n    }\n\n    /** @override */\n    getEndPoint(dst = { x: 0, y: 0 })\n    {\n        const from = this._from;\n        const to = this._to;\n\n        if (!from) throw new Error('Source of edge cannot be null.');\n        if (!to)\n        {\n            //Make sure to use quadCoords for placeholder direction (not magnitude)\n            const px = Math.cos(this._quad.radians);\n            const py = Math.sin(this._quad.radians);\n            const placeholderLength = from.getNodeSize() + this.getPlaceholderLength();\n            dst.x = from.x + px * placeholderLength;\n            dst.y = from.y + py * placeholderLength;\n            return dst;\n        }\n\n        //Get end point for non-nodes...\n        if (!to.getNodeSize)\n        {\n            return to;\n        }\n        //Get end point for straight edges...\n        else if (!this.isQuadratic())\n        {\n            getDirectionalVector(to.x, to.y, from.x, from.y, to.getNodeSize(), 0, dst);\n            dst.x += to.x;\n            dst.y += to.y;\n            return dst;\n        }\n        //Get end point for quadratics...\n        else\n        {\n            getMidPoint(from.x, from.y, to.x, to.y, dst);\n            const qcoords = this.getQuadraticAsCoords();\n            const qx = dst.x + qcoords.x;\n            const qy = dst.y + qcoords.y;\n            getDirectionalVector(to.x, to.y, qx, qy, to.getNodeSize(), this.isSelfLoop() ? -(Math.PI / 4.0) : 0, dst);\n            dst.x += to.x;\n            dst.y += to.y;\n            return dst;\n        }\n    }\n\n    /** @override */\n    getHashString(usePosition = true)\n    {\n        if (usePosition)\n        {\n            return super.getHashString(usePosition) + ':' + this._quad.radians + ',' + this._quad.length;\n        }\n        else\n        {\n            return super.getHashString(usePosition);\n        }\n    }\n\n    // DEPRECATED STUFF BELOW!!!\n\n    getSelfLoopHeight()\n    {\n        return this._from.getNodeSize();\n    }\n\n    formatAsSelfLoop()\n    {\n        this.setQuadraticRadians(-Math.PI / 2);\n        this.setQuadraticLength(this._from.getNodeSize() + this.getSelfLoopHeight());\n    }\n\n    formatAsPlaceholder(prevDest)\n    {\n    //Quad is re-used to determine edge angle for placeholder\n    //This can be used specifically for quad since regular quad is\n    //dependent on this._to != null, which placeholder assumes this._to == null.\n    //Also, quad.length is ignored, because the length should always be\n    //getPlaceholderLength(). This is resolved by getStartPoint(), etc.\n        if (prevDest)\n        {\n            const dx = this._from.x - prevDest.x;\n            const dy = this._from.y - prevDest.y;\n            const angle = -Math.atan2(dx, dy) - (Math.PI / 2);\n            this._quad.radians = angle;\n        }\n        else\n        {\n            this._quad.radians = 0;\n        }\n    }\n\n    /** @override */\n    changeDestinationNode(node)\n    {\n        const prevDest = this._to;\n\n        //Just to optimize this a little :)\n        if (prevDest === node) return;\n\n        super.changeDestinationNode(node);\n\n        if (this.isPlaceholder())\n        {\n            this.formatAsPlaceholder(prevDest);\n        }\n        else if (this.isSelfLoop())\n        {\n            this.formatAsSelfLoop();\n        }\n    }\n}\n\nexport default QuadraticEdge;","import GraphNode from './elements/GraphNode.js';\nimport GraphEdge from './elements/GraphEdge.js';\nimport { guid, stringHash } from 'util/MathHelper.js';\n\n/**\n * A class that represents a graph that coordinates nodes and edges.\n * \n */\nclass NodeGraph\n{\n    /**\n   * Create a NodeGraph.\n   * \n   * @param {Class} [nodeClass=GraphNode] The class that represents a node.\n   * @param {Class} [edgeClass=GraphEdge] The class that represents an edge.\n   */\n    constructor(nodeClass = GraphNode, edgeClass = GraphEdge)\n    {\n        this._nodeClass = nodeClass;\n        this._edgeClass = edgeClass;\n\n        this._nodeMapping = new Map();\n        this._edgeMapping = new Map();\n    }\n\n    /**\n   * Removes all nodes and edges from the graph.\n   */\n    clear()\n    {\n        this.clearEdges();\n        this.clearNodes();\n    }\n\n    /**\n   * Checks whether there exists any number of nodes or edges.\n   * @returns {Boolean} Whether the graph is empty.\n   */\n    isEmpty()\n    {\n        return this._nodeMapping.size <= 0 && this._edgeMapping.size <= 0;\n    }\n\n    /**\n   * Computes the boundaries of the graph that surrounds all nodes and edges. If\n   * the graph is empty, a rectangle at the origin of size 1 is returned.\n   * @returns {Object} The object which represents the bounding rectangle. It has\n   *                  the properties: minX, minY, maxX, maxY, width, height.\n   */\n    getBoundingRect()\n    {\n        if (this._nodeMapping.size <= 0) return {\n            minX: 0,\n            minY: 0,\n            maxX: 1,\n            maxY: 1,\n            width: 1,\n            height: 1\n        };\n\n        var minNX = Number.MAX_VALUE;\n        var minNY = Number.MAX_VALUE;\n        var maxNX = Number.MIN_VALUE;\n        var maxNY = Number.MIN_VALUE;\n\n        var maxNodeSize = 0;\n        for (const node of this._nodeMapping.values())\n        {\n            const x = node.x;\n            const y = node.y;\n            const size = node.getNodeSize();\n            if (size > maxNodeSize) maxNodeSize = size;\n\n            minNX = Math.min(minNX, x);\n            maxNX = Math.max(maxNX, x);\n\n            minNY = Math.min(minNY, y);\n            maxNY = Math.max(maxNY, y);\n        }\n\n        minNX -= maxNodeSize;\n        minNY -= maxNodeSize;\n        maxNX += maxNodeSize;\n        maxNY += maxNodeSize;\n\n        var minEX = Number.MAX_VALUE;\n        var minEY = Number.MAX_VALUE;\n        var maxEX = Number.MIN_VALUE;\n        var maxEY = Number.MIN_VALUE;\n\n        const startPoint = { x: 0, y: 0 };\n        const endPoint = { x: 0, y: 0 };\n        const centerPoint = { x: 0, y: 0 };\n        for (const edge of this._edgeMapping.values())\n        {\n            //Will store into point objects...\n            edge.getStartPoint(startPoint);\n            edge.getEndPoint(endPoint);\n            edge.getCenterPoint(centerPoint);\n\n            const sx = startPoint.x;\n            const sy = startPoint.y;\n            const ex = endPoint.x;\n            const ey = endPoint.y;\n            const cx = centerPoint.x;\n            const cy = centerPoint.y;\n\n            minEX = Math.min(minEX, sx, ex, cx);\n            maxEX = Math.max(maxEX, sx, ex, cx);\n\n            minEY = Math.min(minEY, sy, ey, cy);\n            maxEY = Math.max(maxEY, sy, ey, cy);\n        }\n\n        const result = {\n            minX: Math.min(minNX, minEX),\n            minY: Math.min(minNY, minEY),\n            maxX: Math.max(maxNX, maxEX),\n            maxY: Math.max(maxNY, maxEY),\n            width: 0,\n            height: 0\n        };\n        result.width = result.maxX - result.minX;\n        result.height = result.maxY - result.minY;\n        return result;\n    }\n\n    /**\n   * Computes a unique and persistent hash code that describes the current\n   * state.\n   * @param  {Boolean} [usePosition=true] Whether to consider the positioning as\n   *                                      part of the graph's state.\n   * @returns {Number}                    the hash code.\n   */\n    getHashCode(usePosition = true)\n    {\n        let string = '';\n        for (const node of this._nodeMapping.values())\n        {\n            string += node.getHashString(usePosition) + ',';\n        }\n        string += '|';\n        for (const edge of this._edgeMapping.values())\n        {\n            string += edge.getHashString(usePosition) + ',';\n        }\n        return stringHash(string);\n    }\n\n    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= NODES\n\n    /**\n   * Create node for graph.\n   * @param  {Number} [x=0]       the initial x position\n   * @param  {Number} [y=0]       the initial y position\n   * @param  {String} [id=null]   the new node id (will be generated if null)\n   * @returns {GraphNdoe}         the new node\n   */\n    createNode(x = 0, y = 0, id = null)\n    {\n        return this.addNode(new (this._nodeClass)(id || guid(), x, y));\n    }\n\n    /**\n   * Add existing node to the graph. Any edges connected to the node are NOT\n   * deleted in the process. (so pls delete them first.)\n   * @param {GraphNode} node The node to be added.\n   * @returns {GraphNode} The node that was added to the graph.\n   */\n    addNode(node)\n    {\n        if (!node.getGraphElementID()) node.setGraphElementID(guid());\n        this._nodeMapping.set(node.getGraphElementID(), node);\n        return node;\n    }\n\n    /**\n   * Delete node from graph. Any edges whose source is the target node are also\n   * deleted.\n   * @param  {GraphNode} node        Target node to be deleted.\n   */\n    deleteNode(node)\n    {\n        const elementID = node.getGraphElementID();\n        if (this._nodeMapping.has(elementID))\n        {\n            this._nodeMapping.delete(elementID);\n\n            const nullSourceEdges = [];\n            //Find connected edges without sources...\n            for (const edge of this.getEdges())\n            {\n                if (edge.getEdgeFrom() === node)\n                {\n                    nullSourceEdges.push(edge);\n                }\n                else if (edge.getEdgeTo() === node)\n                {\n                    edge.setEdgeTo(null);\n                }\n            }\n            //Delete sourceless edges...\n            for (const edge of nullSourceEdges)\n            {\n                this.deleteEdge(edge);\n            }\n        }\n    }\n\n    clearNodes() { this._nodeMapping.clear(); }\n\n    getNodeByElementID(elementID)\n    {\n        if (this._nodeMapping.has(elementID))\n        {\n            return this._nodeMapping.get(elementID);\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    getNodesByLabel(label, dst = [])\n    {\n        for (const node of this.getNodes())\n        {\n            if (node.getNodeLabel() === label)\n            {\n                dst.push(node);\n            }\n        }\n        return dst;\n    }\n\n    getNodes() { return Array.from(this._nodeMapping.values()); }\n    getNodeCount() { return this._nodeMapping.size; }\n    getNodeClass() { return this._nodeClass; }\n\n    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= EDGES\n\n    /**\n   * This is more like addEdge() without adding it to the graph and just returns the result.\n   * This should only be called once when completing an edge.\n   */\n    formatEdge(edge)\n    {\n        return edge;\n    }\n\n    /**\n   * Create edge for graph. The id argument can be used to set the id to a\n   * pre-defined value instead of generating a new one.\n   * @param  {GraphNode} from                     the source graph node for the edge\n   * @param  {GraphNode|InputPointer} [to=null]   the destination graph node for the edge\n   * @param  {String} [id=null]                   the new edge id (will be generated if null)\n   * @returns {GraphEdge}                         the new edge\n   */\n    createEdge(from, to = null, id = null)\n    {\n        return this.addEdge(new (this._edgeClass)(id || guid(), from, to));\n    }\n\n    /**\n   * Add existing edge to the graph.\n   * \n   * Assumes that the passed-in edge does not have conflicting id's within this graph.\n   * @param {GraphEdge} edge    the edge to be added.\n   * @returns {GraphEdge}       the edge that was added to the graph.\n   */\n    addEdge(edge)\n    {\n        if (!edge.getGraphElementID()) edge.setGraphElementID(guid());\n        this._edgeMapping.set(edge.getGraphElementID(), edge);\n        return edge;\n    }\n\n    /**\n   * Delete edge from graph. The from and to nodes of the target edge are not\n   * modified.\n   * @param  {GraphEdge} edge      target edge to be deleted.\n   */\n    deleteEdge(edge)\n    {\n        const elementID = edge.getGraphElementID();\n        if (this._edgeMapping.has(elementID))\n        {\n            this._edgeMapping.delete(elementID);\n        }\n    }\n\n    clearEdges() { this._edgeMapping.clear(); }\n\n    getEdgeByElementID(elementID)\n    {\n        if (this._edgeMapping.has(elementID))\n        {\n            return this._edgeMapping.get(elementID);\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    getEdgesByLabel(label, dst = [])\n    {\n        for (const edge of this.getEdges())\n        {\n            if (edge.getEdgeLabel() === label)\n            {\n                dst.push(edge);\n            }\n        }\n        return dst;\n    }\n\n    getEdges() { return Array.from(this._edgeMapping.values()); }\n    getEdgeCount() { return this._edgeMapping.size; }\n    getEdgeClass() { return this._edgeClass; }\n}\n\nexport default NodeGraph;\n","export const FILE_TYPE_PNG = 'png';\nexport const FILE_TYPE_JPG = 'jpg';\nexport const FILE_TYPE_SVG = 'svg';\n\nexport function downloadText(filename, textData)\n{\n    downloadURL(filename, getTextDataURI(textData));\n}\n\nfunction createBlobFromSVG(svg)\n{\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(svg);\n    const blob = new Blob([svgString], { type: 'image/svg+xml' });\n    return blob;\n}\n\nexport function downloadImageFromSVG(filename, filetype, svg, width, height)\n{\n    const blob = createBlobFromSVG(svg);\n    switch (filetype)\n    {\n    case FILE_TYPE_PNG:\n    case FILE_TYPE_JPG:\n        {\n            const url = URL.createObjectURL(blob);\n\n            const canvas = document.createElement('canvas');\n            const ctx = canvas.getContext('2d');\n            const pixelRatio = window.devicePixelRatio || 1;\n            canvas.width = width * pixelRatio;\n            canvas.height = height * pixelRatio;\n            canvas.style.width = width + 'px';\n            canvas.style.height = height + 'px';\n            ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\n            const image = new Image();\n            image.onload = () => \n            {\n                ctx.drawImage(image, 0, 0);\n                URL.revokeObjectURL(url);\n\n                const imageURI = canvas.toDataURL('image/' + filetype).replace('image/' + filetype, 'image/octet-stream');\n                downloadURL(filename + '.' + filetype, imageURI);\n            };\n            image.src = url;\n        }\n        break;\n    case FILE_TYPE_SVG:\n        {\n            const reader = new FileReader();\n            reader.onload = () => \n            {\n                downloadURL(filename + '.' + filetype, reader.result);\n            };\n            reader.readAsDataURL(blob);\n        }\n        break;\n    default:\n        throw new Error('Unknown file type \\'' + filetype + '\\'');\n    }\n}\n\nexport function downloadURL(filename, url)\n{\n    const element = document.createElement('a');\n    const headerIndex = url.indexOf(';');\n    url = url.substring(0, headerIndex + 1) + 'headers=Content-Disposition%3A%20attachment%3B%20filename=' + filename + ';' + url.substring(headerIndex + 1);\n    element.setAttribute('href', url);\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n    document.body.removeChild(element);\n}\n\nfunction getTextDataURI(data)\n{\n    return 'data:text/plain; charset=utf-8,' + encodeURIComponent(data);\n}\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M16.59 7.58L10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M19 8l-4 4h3c0 3.31-2.69 6-6 6-1.01 0-1.97-.25-2.8-.7l-1.46 1.46C8.97 19.54 10.43 20 12 20c4.42 0 8-3.58 8-8h3l-4-4zM6 12c0-3.31 2.69-6 6-6 1.01 0 1.97.25 2.8.7l1.46-1.46C15.03 4.46 13.57 4 12 4c-4.42 0-8 3.58-8 8H1l4 4 4-4H6z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M13,6V11H18V7.75L22.25,12L18,16.25V13H13V18H16.25L12,22.25L7.75,18H11V13H6V16.25L1.75,12L6,7.75V11H11V6H7.75L12,1.75L16.25,6H13Z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 26 26\">\n                <path d=\"M 11.5 -0.03125 C 9.542969 -0.03125 7.96875 1.59375 7.96875 3.5625 L 7.96875 4 L 4 4 C 3.449219 4 3 4.449219 3 5 L 3 6 L 2 6 L 2 8 L 4 8 L 4 23 C 4 24.644531 5.355469 26 7 26 L 19 26 C 20.644531 26 22 24.644531 22 23 L 22 8 L 24 8 L 24 6 L 23 6 L 23 5 C 23 4.449219 22.550781 4 22 4 L 18.03125 4 L 18.03125 3.5625 C 18.03125 1.59375 16.457031 -0.03125 14.5 -0.03125 Z M 11.5 2.03125 L 14.5 2.03125 C 15.304688 2.03125 15.96875 2.6875 15.96875 3.5625 L 15.96875 4 L 10.03125 4 L 10.03125 3.5625 C 10.03125 2.6875 10.695313 2.03125 11.5 2.03125 Z M 6 8 L 11.125 8 C 11.25 8.011719 11.371094 8.03125 11.5 8.03125 L 14.5 8.03125 C 14.628906 8.03125 14.75 8.011719 14.875 8 L 20 8 L 20 23 C 20 23.5625 19.5625 24 19 24 L 7 24 C 6.4375 24 6 23.5625 6 23 Z M 8 10 L 8 22 L 10 22 L 10 10 Z M 12 10 L 12 22 L 14 22 L 14 10 Z M 16 10 L 16 22 L 18 22 L 18 10 Z \"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n                <path d=\"M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14zM7 9h5v1H7z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm8.94 3c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06C6.83 3.52 3.52 6.83 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c4.17-.46 7.48-3.77 7.94-7.94H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","class InputHandler\n{\n    isTargetable(inputController, pointer, target, targetType)\n    {\n        return false;\n    }\n\n    onAction(inputController, graphController, pointer, target)\n    {\n        return false;\n    }\n\n    onDblAction(inputController, graphController, pointer, target)\n    {\n        return false;\n    }\n\n    onDragStart(inputController, graphController, pointer, target)\n    {\n        return false;\n    }\n\n    onDragMove(inputController, graphController, pointer, target)\n    {\n        return false;\n    }\n\n    onDragStop(inputController, graphController, pointer, target)\n    {\n        return false;\n    }\n}\nexport default InputHandler;\n","export function userClearGraph(app, graphOnly=false, callback=null)\n{\n    if (window.confirm(I18N.toString('alert.graph.clear')))\n    {\n        const module = app.getCurrentModule();\n        module.getGraphController().getGraph().clear();\n        if (!graphOnly)\n        {\n            app.getUndoManager().clear();\n            app.getSession().setProjectName(null);\n        }\n        else\n        {\n            app.getUndoManager().captureEvent();\n        }\n        if (callback) callback();\n    }\n}\n","/**\n * Used by InputAdapter to hold input event data.\n */\nclass InputPointer\n{\n    constructor(inputAdapter, element, viewportAdapter)\n    {\n        this._inputAdapter = inputAdapter;\n        this._element = element;\n        this._viewportAdapter = viewportAdapter;\n\n        this._active = false;\n        this._x = 0;\n        this._y = 0;\n\n        this._inputpos = { x: 0, y: 0 };\n    }\n\n    get x() { return this._x; }\n    get y() { return this._y; }\n\n    setPosition(x, y)\n    {\n        this._x = x;\n        this._y = y;\n        return this;\n    }\n\n    beginInput()\n    {\n        this._active = true;\n        this._inputpos.x = this._x;\n        this._inputpos.y = this._y;\n    }\n\n    /**\n     * Returns the position which the input began at. This is mutable.\n     */\n    getInputEventPosition() { return this._inputpos; }\n\n    changeInputEventPosition(x, y)\n    {\n        this._inputpos.x = x;\n        this._inputpos.y = y;\n    }\n\n    endInput() { this._active = false; }\n    isActive() { return this._active; }\n\n    getDistanceSquToInitial()\n    {\n        const pos = this._inputpos;\n        const dx = pos.x - this._x;\n        const dy = pos.y - this._y;\n        return dx * dx + dy * dy;\n    }\n\n    /**\n     * The DOM element for which this pointer provides context for; this should be\n     * the same element as in the input adapter.\n     */\n    getElement() { return this._element; }\n\n    /**\n     * The viewport for this pointer operates within; this should be the same\n     * viewport as in the input adapter.\n     */\n    getViewportAdapter() { return this._viewportAdapter; }\n\n    /**\n     * The input adapter that controls this pointer's properties\n     */\n    getInputAdapter() { return this._inputAdapter; }\n}\n\nexport default InputPointer;\n","/**\n * Represents and handles the transformations to the interactible viewport of\n * the SVG element.\n */\nclass ViewportAdapter\n{\n    constructor()\n    {\n        this._element = null;\n        this._offsetX = 0;\n        this._offsetY = 0;\n        this._nextOffsetX = 0;\n        this._nextOffsetY = 0;\n        this._offsetDamping = 0.1;\n\n        this._scaleFactor = 1;\n        this._minScale = 1;\n        this._maxScale = 1;\n    }\n\n    setElement(element)\n    {\n        this._element = element;\n        return this;\n    }\n\n    setMinScale(scale)\n    {\n        this._minScale = scale;\n        if (this._scaleFactor < this._minScale) this._scaleFactor = this._minScale;\n        return this;\n    }\n\n    setMaxScale(scale)\n    {\n        this._maxScale = scale;\n        if (this._scaleFactor > this._maxScale) this._scaleFactor = this._maxScale;\n        return this;\n    }\n\n    setOffsetDamping(damping)\n    {\n        this._offsetDamping = damping;\n        return this;\n    }\n\n    update()\n    {\n        const dx = this._nextOffsetX - this._offsetX;\n        this._offsetX += dx * this._offsetDamping;\n        const dy = this._nextOffsetY - this._offsetY;\n        this._offsetY += dy * this._offsetDamping;\n    }\n\n    transformScreenToView(clientX, clientY)\n    {\n        if (!this._element) return {x: clientX - this._offsetX, y: clientY - this._offsetY};\n\n        const ctm = this._element.getScreenCTM();\n        return {\n            x: (clientX - ctm.e) / ctm.a - this._offsetX,\n            y: (clientY - ctm.f) / ctm.d - this._offsetY\n        };\n    }\n\n    setOffset(x, y, immediate=false)\n    {\n        if (immediate)\n        {\n            this._nextOffsetX = this._offsetX = x;\n            this._nextOffsetY = this._offsetY = y;\n        }\n        else\n        {\n            this._nextOffsetX = x;\n            this._nextOffsetY = y;\n        }\n    }\n\n    addOffset(dx, dy, immediate=false)\n    {\n        if (immediate)\n        {\n            this._offsetX += dx;\n            this._offsetY += dy;\n            this._nextOffsetX = this._offsetX;\n            this._nextOffsetY = this._offsetY;\n        }\n        else\n        {\n            this._nextOffsetX += dx;\n            this._nextOffsetY += dy;\n        }\n    }\n\n    setScale(scale) { this._scaleFactor = Math.min(this._maxScale, Math.max(this._minScale, scale)); }\n    addScale(dscale) { this._scaleFactor = Math.min(this._maxScale, Math.max(this._minScale, this._scaleFactor + dscale)); }\n    getOffsetX() { return this._offsetX; }\n    getOffsetY() { return this._offsetY; }\n    getOffsetDamping() { return this._offsetDamping; }\n    getScale() { return this._scaleFactor; }\n    getMinScale() { return this._minScale; }\n    getMaxScale() { return this._maxScale; }\n    getElement() { return this._element; }\n}\n\nexport default ViewportAdapter;\n","import InputContext from './InputContext.js';\nimport InputPointer from './InputPointer.js';\nimport ViewportAdapter from './ViewportAdapter.js';\n\nconst LONG_TAP_TICKS = 600;\nconst DOUBLE_TAP_TICKS = 600;\nconst SCROLL_SENSITIVITY = 1.0 / 300.0;\nconst CURSOR_RADIUS = 4;\nconst CURSOR_RADIUS_SQU = CURSOR_RADIUS * CURSOR_RADIUS;\nconst DRAGGING_BUFFER = 18;\nconst DRAGGING_BUFFER_SQU = DRAGGING_BUFFER * DRAGGING_BUFFER;\n\n/**\n * Provides an interface for input handlers to interact with a HTMLElement.\n * Each listenable element should correspond to only a single InputAdapter.\n */\nclass InputAdapter extends InputContext\n{\n    constructor()\n    {\n        super();\n        this._contexts = [];\n        this._activeDragHandler = null;\n\n        this._element = null;\n        this._cursor = {\n            _mousemove: null,\n            _mouseup: null,\n            _touchmove: null,\n            _touchend: null,\n            _timer: null\n        };\n        this._pointer = null;\n\n        this._viewportAdapter = new ViewportAdapter();\n\n        //Although dragging could be in pointer, it should be here to allow\n        //the adapter to be independent of pointer.\n        this._dragging = false;\n        this._altinput = false;\n\n        this._holdInputDelay = LONG_TAP_TICKS;\n        this._dblInputDelay = DOUBLE_TAP_TICKS;\n        this._scrollSensitivity = SCROLL_SENSITIVITY;\n        this._minTapRadius = CURSOR_RADIUS_SQU * 16;\n        this._draggingRadiusSqu = CURSOR_RADIUS_SQU + DRAGGING_BUFFER_SQU;\n\n        this._prevEmptyInput = false;\n        this._prevEmptyTime = 0;\n        this._prevEmptyX = 0;\n        this._prevEmptyY = 0;\n\n        this.onContextMenu = this.onContextMenu.bind(this);\n        this.onMouseDown = this.onMouseDown.bind(this);\n        this.onMouseMove = this.onMouseMove.bind(this);\n        this.onTouchStart = this.onTouchStart.bind(this);\n        this.onWheel = this.onWheel.bind(this);\n\n        this.onMouseDownThenMove = this.onMouseDownThenMove.bind(this);\n        this.onMouseDownThenUp = this.onMouseDownThenUp.bind(this);\n        this.onTouchStartThenMove = this.onTouchStartThenMove.bind(this);\n        this.onTouchStartThenEnd = this.onTouchStartThenEnd.bind(this);\n\n        this.onDelayedInputDown = this.onDelayedInputDown.bind(this);\n    }\n\n    bindContext(context)\n    {\n        if (!(context instanceof InputContext)) \n            throw new Error('Cannot bind invalid context - must be an instance of InputContext');\n      \n        this._contexts.unshift(context);\n        return this;\n    }\n\n    bindContextAsLast(context)\n    {\n        if (!(context instanceof InputContext)) \n            throw new Error('Cannot bind invalid context - must be an instance of InputContext');\n      \n        this._contexts.push(context);\n        return this;\n    }\n\n    unbindContext(context=null)\n    {\n        if (context)\n        {\n            const index = this._contexts.indexOf(context);\n            if (index >= 0)\n            {\n                this._contexts.splice(index, 1);\n                return context;\n            }\n            else\n            {\n                return null;\n            }\n        }\n        else\n        {\n            return this._contexts.shift();\n        }\n    }\n\n    clearContexts()\n    {\n        this._contexts.length = 0;\n    }\n\n    hasContexts()\n    {\n        return this._contexts.length > 0;\n    }\n\n    getCurrentContext()\n    {\n        if (this._contexts.length > 0)\n        {\n            return this._contexts[this._contexts.length - 1];\n        }\n        else\n        {\n            return this;\n        }\n    }\n\n    initialize(element)\n    {\n        if (!(element instanceof SVGElement)) throw new Error('Missing SVG element for input adapter\\'s viewport');\n        if (this._element) throw new Error('Trying to initialize an InputAdapter already initialized');\n\n        this._viewportAdapter.setElement(this._element = element);\n        this._pointer = new InputPointer(this, this._element, this._viewportAdapter);\n\n        this._element.addEventListener('mousedown', this.onMouseDown);\n        this._element.addEventListener('mousemove', this.onMouseMove);\n        this._element.addEventListener('touchstart', this.onTouchStart);\n        this._element.addEventListener('touchmove', this.onTouchMove);\n        this._element.addEventListener('contextmenu', this.onContextMenu);\n        this._element.addEventListener('wheel', this.onWheel);\n    }\n\n    destroy()\n    {\n        if (!this._element) throw new Error('Trying to destroy an InputAdapter that is not yet initialized');\n\n        this._element.removeEventListener('mousedown', this.onMouseDown);\n        this._element.removeEventListener('mousemove', this.onMouseMove);\n        this._element.removeEventListener('touchstart', this.onTouchStart);\n        this._element.removeEventListener('contextmenu', this.onContextMenu);\n        this._element.removeEventListener('wheel', this.onWheel);\n\n        this._element = null;\n    }\n\n    update()\n    {\n        if (this._element)\n        {\n            //Smooth transition offset\n            this._viewportAdapter.update();\n        }\n    }\n\n    /** @override */\n    handleEvent(eventName, ...eventArgs)\n    {\n        for(const context of this._contexts)\n        {\n            const result = context.handleEvent(eventName, ...eventArgs);\n            if (result)\n            {\n                return result;\n            }\n        }\n    \n        return super.handleEvent(eventName, ...eventArgs);\n    }\n\n    onMouseDown(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const cursor = this._cursor;\n\n        //Blur any element in focus\n        document.activeElement.blur();\n        this._element.focus();\n\n        //Make sure mouse move is deleted, just in case\n        if (cursor._mousemove)\n        {\n            document.removeEventListener('mousemove', cursor._mousemove);\n            cursor._mousemove = null;\n        }\n        //Make sure mouse up is deleted, just in case\n        if (cursor._mouseup)\n        {\n            document.removeEventListener('mouseup', cursor._mouseup);\n            cursor._mouseup = null;\n        }\n\n        //HACK: To allow Mac's to use ctrl+click as right clicks\n        const button = e.ctrlKey ? 2 : e.button;\n\n        //Is this a valid mouse down?\n        if (this.onInputDown(e.clientX, e.clientY, button))\n        {\n            //Start mouse down logic...\n            cursor._mousemove = this.onMouseDownThenMove;\n            cursor._mouseup = this.onMouseDownThenUp;\n\n            document.addEventListener('mousemove', cursor._mousemove);\n            document.addEventListener('mouseup', cursor._mouseup);\n        }\n\n        return false;\n    }\n\n    onMouseMove(e)\n    {\n        const mouse = this._viewportAdapter.transformScreenToView(e.clientX, e.clientY);\n        const pointer = this._pointer;\n        pointer.setPosition(mouse.x, mouse.y);\n\n        if (this.handleEvent('onMoveInputEvent', pointer))\n        {\n            e.stopPropagation();\n            e.preventDefault();\n\n            this.cancelInputEvent();\n        }\n    }\n\n    onMouseDownThenMove(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        this.onInputMove(e.clientX, e.clientY);\n\n        return false;\n    }\n\n    onMouseDownThenUp(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const cursor = this._cursor;\n\n        //Make sure mouse move is deleted, just in case\n        if (cursor._mousemove)\n        {\n            document.removeEventListener('mousemove', cursor._mousemove);\n            cursor._mousemove = null;\n        }\n        //Make sure mouse up is deleted, just in case\n        if (cursor._mouseup)\n        {\n            document.removeEventListener('mouseup', cursor._mouseup);\n            cursor._mouseup = null;\n        }\n\n        this.onInputUp(e.clientX, e.clientY);\n\n        return false;\n    }\n\n    onTouchStart(e)\n    {\n        if (e.changedTouches.length == 1)\n        {\n            e.stopPropagation();\n            e.preventDefault();\n\n            const cursor = this._cursor;\n\n            //Blur any element in focus\n            document.activeElement.blur();\n            this._element.focus();\n\n            //Make sure touch move is deleted, just in case\n            if (cursor._touchmove)\n            {\n                document.removeEventListener('touchmove', cursor._touchmove);\n                cursor._touchmove = null;\n            }\n            //Make sure touch end is deleted, just in case\n            if (cursor._touchend)\n            {\n                document.removeEventListener('touchend', cursor._touchend);\n                cursor._touchend = null;\n            }\n\n            const touch = e.changedTouches[0];\n            //Is this a valid touch start?\n            if (this.onInputDown(touch.clientX, touch.clientY, 0))\n            {\n                //Start touch start logic...\n                cursor._touchmove = this.onTouchStartThenMove;\n                cursor._touchend = this.onTouchStartThenEnd;\n\n                document.addEventListener('touchmove', cursor._touchmove);\n                document.addEventListener('touchend', cursor._touchend);\n            }\n\n            return false;\n        }\n    }\n\n    onTouchStartThenEnd(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const cursor = this._cursor;\n\n        //Make sure mouse move is deleted, just in case\n        if (cursor._touchmove)\n        {\n            document.removeEventListener('touchmove', cursor._touchmove);\n            cursor._touchmove = null;\n        }\n        //Make sure mouse up is deleted, just in case\n        if (cursor._touchend)\n        {\n            document.removeEventListener('touchend', cursor._touchend);\n            cursor._touchend = null;\n        }\n\n        const touch = e.changedTouches[0];\n        this.onInputUp(touch.clientX, touch.clientY);\n\n        return false;\n    }\n\n    onTouchStartThenMove(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const touch = e.changedTouches[0];\n        this.onInputMove(touch.clientX, touch.clientY);\n\n        return false;\n    }\n\n    onContextMenu(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        return false;\n    }\n\n    onWheel(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const pointer = this._pointer;\n        const dy = e.deltaY * this._scrollSensitivity;\n        const prev = this._viewportAdapter.getScale();\n        const next = prev + dy;\n\n        //Let others handle this event...\n        if (!this.handleEvent('onZoomChange', pointer, next, prev))\n        {\n            this._viewportAdapter.setScale(next);\n        }\n\n        return false;\n    }\n\n    onInputDown(x, y, button)\n    {\n    //Setup for hold timer...\n        const cursor = this._cursor;\n        const pointer = this._pointer;\n        const mouse = this._viewportAdapter.transformScreenToView(x, y);\n        pointer.setPosition(mouse.x, mouse.y);\n\n        this._dragging = false;\n        this._altinput = button == 2;\n\n        //Let others handle this event...\n        if (!this.handleEvent('onPreInputEvent', pointer))\n        {\n            pointer.beginInput();\n            cursor._timer = setTimeout(this.onDelayedInputDown, this._holdInputDelay);\n            return true;\n        }\n\n        return false;\n    }\n\n    onDelayedInputDown()\n    {\n    //That means the input is remaining still (like a hold)...\n        if (!this._dragging)\n        {\n            this._altinput = true;\n        }\n    }\n\n    onInputMove(x, y)\n    {\n        const pointer = this._pointer;\n        const mouse = this._viewportAdapter.transformScreenToView(x, y);\n        pointer.setPosition(mouse.x, mouse.y);\n\n        if (!this._dragging)\n        {\n            if (pointer.getDistanceSquToInitial() > this._draggingRadiusSqu)\n            {\n                this._dragging = true;\n\n                //Let others handle this event...\n                const inputEventPosition = pointer.getInputEventPosition();\n                const result = this.handleEvent('onDragStart', pointer, inputEventPosition.x, inputEventPosition.y);\n                if (!result)\n                {\n                    this._dragging = false;\n\n                    //TODO: you could NOT cancel the event and just update the target?\n                    //If so, who is the initial target then?\n\n                    //Stop the input event early...\n                    this.cancelInputEvent();\n                }\n                else\n                {\n                    this._activeDragHandler = result;\n                }\n            }\n            else\n            {\n                //Still a click or hold...\n            }\n        }\n        else\n        {\n            //Continue to drag...\n            if (this._activeDragHandler)\n            {\n                this._activeDragHandler.onDragMove(pointer);\n            }\n        }\n    }\n\n    onInputUp(x, y)\n    {\n        const cursor = this._cursor;\n        const timer = cursor._timer;\n        if (timer)\n        {\n            clearTimeout(timer);\n            cursor._timer = null;\n        }\n\n        //Update pointer target to final position\n        const pointer = this._pointer;\n        const mouse = this._viewportAdapter.transformScreenToView(x, y);\n        pointer.setPosition(mouse.x, mouse.y);\n\n        if (this._dragging)\n        {\n            //Stop dragging!\n            if (this._activeDragHandler)\n            {\n                this._activeDragHandler.onDragStop(pointer);\n                this._activeDragHandler = null;\n            }\n        }\n        else\n        {\n            if (this._altinput)\n            {\n                //Alt Tap!\n                this.handleEvent('onAltInputEvent', pointer);\n            }\n            else\n            {\n                //If the input was not consumed...\n                if (!this.handleEvent('onInputEvent', pointer))\n                {\n                    //Try for double tap...\n                    const dx = x - this._prevEmptyX;\n                    const dy = y - this._prevEmptyY;\n                    const dist = dx * dx + dy * dy;\n                    const dt = Date.now() - this._prevEmptyTime;\n                    if (this._prevEmptyInput &&\n            dist < this._minTapRadius &&\n            dt < this._dblInputDelay)\n                    {\n                        //Double tap!\n                        this.handleEvent('onDblInputEvent', pointer);\n\n                        this._prevEmptyInput = false;\n                    }\n                    else\n                    {\n                        this._prevEmptyInput = true;\n                        this._prevEmptyTime = Date.now();\n                        this._prevEmptyX = x;\n                        this._prevEmptyY = y;\n                    }\n                }\n            }\n        }\n\n        pointer.endInput();\n        this.handleEvent('onPostInputEvent', pointer);\n    }\n\n    cancelInputEvent()\n    {\n        const pointer = this._pointer;\n        const cursor = this._cursor;\n\n        //Make sure mouse move is deleted, just in case\n        if (cursor._mousemove)\n        {\n            document.removeEventListener('mousemove', cursor._mousemove);\n            cursor._mousemove = null;\n        }\n        //Make sure mouse up is deleted, just in case\n        if (cursor._mouseup)\n        {\n            document.removeEventListener('mouseup', cursor._mouseup);\n            cursor._mouseup = null;\n        }\n\n        const timer = cursor._timer;\n        if (timer)\n        {\n            clearTimeout(timer);\n            cursor._timer = null;\n        }\n\n        pointer.endInput();\n        this.handleEvent('onPostInputEvent', pointer);\n    }\n\n    getContexts() { return this._contexts; }\n    getActiveElement() { return this._element; }\n    getViewportAdapter() { return this._viewportAdapter; }\n    getPointerX() { return this._pointer ? this._pointer.x : 0; }\n    getPointerY() { return this._pointer ? this._pointer.y : 0; }\n    isPointerActive() { return this._pointer ? this._pointer.isActive() : false; }\n    isUsingTouch() { return this._cursor._touchmove || this._cursor._touchend; }\n    isAltInput() { return this._altinput; }\n    isDragging() { return this._dragging; }\n}\n\nexport default InputAdapter;","import React from 'react';\nimport Style from './ViewportComponent.css';\n\nimport InputAdapter from '../InputAdapter.js';\nimport AbstractInputHandler from '../AbstractInputHandler.js';\n\nconst DEFAULT_VIEW_SIZE = 300;\nconst SMOOTH_OFFSET_DAMPING = 0.4;\nconst MIN_SCALE = 0.1;\nconst MAX_SCALE = 10;\n\nclass ViewportComponent extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this._ref = React.createRef();\n\n        this._inputAdapter = new InputAdapter();\n        this._inputAdapter.getViewportAdapter()\n            .setMinScale(MIN_SCALE)\n            .setMaxScale(MAX_SCALE)\n            .setOffsetDamping(SMOOTH_OFFSET_DAMPING);\n    }\n\n    addInputHandler(inputHandler)\n    {\n        if (!(inputHandler instanceof AbstractInputHandler)) throw new Error('input handler must be an instanceof AbstractInputHandler');\n        this._inputAdapter.addInputHandler(inputHandler);\n        return this;\n    }\n\n    /** @override */\n    componentDidMount()\n    {\n        this._inputAdapter.initialize(this._ref.current);\n    }\n\n    /** @override */\n    componentWillUnmount()\n    {\n        this._inputAdapter.destroy();\n    }\n\n    /** @override */\n    componentDidUpdate()\n    {\n        this._inputAdapter.update();\n    }\n\n    getSVGTransformString()\n    {\n        const viewport = this._inputAdapter.getViewportAdapter();\n        return 'translate(' + viewport.getOffsetX() + ' ' + viewport.getOffsetY() + ')';\n    }\n\n    getSVGViewBoxString(baseViewSize)\n    {\n        const viewport = this._inputAdapter.getViewportAdapter();\n        const viewSize = baseViewSize * Math.max(Number.MIN_VALUE, viewport.getScale());\n        const halfViewSize = viewSize / 2;\n        return (-halfViewSize) + ' ' + (-halfViewSize) + ' ' + viewSize + ' ' + viewSize;\n    }\n\n    getSVGElement()\n    {\n        return this._ref.current;\n    }\n\n    getInputAdapter()\n    {\n        return this._inputAdapter;\n    }\n\n    /** @override */\n    render()\n    {\n        const viewBox = this.getSVGViewBoxString(this.props.viewSize || DEFAULT_VIEW_SIZE);\n        const transform = this.getSVGTransformString();\n\n        return (\n            <svg ref={this._ref}\n                id={this.props.id}\n                className={Style.viewport_component + ' ' + this.props.className}\n                style={this.props.style}\n                viewBox={viewBox}>\n                <g transform={transform}>\n                    {this.props.children}\n                </g>\n            </svg>\n        );\n    }\n}\n\nexport default ViewportComponent;","export { getUnreachableNodes } from './UnreachableNodes.js';","class AbstractMachineController\n{\n    constructor(module, machineBuilder)\n    {\n        if (!module) throw new Error('Missing module for machine controller');\n        if (!machineBuilder) throw new Error('Missing machine builder for machine controller');\n\n        this._module = module;\n        this._machineBuilder = machineBuilder;\n    }\n\n    initialize(module)\n    {\n        this._machineBuilder.initialize(module);\n    }\n\n    destroy(module)\n    {\n        this._machineBuilder.destroy(module);\n    }\n\n    update(module)\n    {\n    }\n\n    getMachineBuilder()\n    {\n        return this._machineBuilder;\n    }\n\n    getModule()\n    {\n        return this._module;\n    }\n}\n\nexport default AbstractMachineController;\n","import GraphEdge from 'graph/elements/GraphEdge.js';\n\nclass AbstractGraphLabeler\n{\n    constructor() { }\n\n    getDefaultLabel(target)\n    {\n        if (target instanceof GraphEdge)\n        {\n            return this.getDefaultEdgeLabel();\n        }\n        else\n        {\n            return this.getDefaultNodeLabel();\n        }\n    }\n\n    getLabelFormatter(target)\n    {\n        if (target instanceof GraphEdge)\n        {\n            return this.getEdgeLabelFormatter();\n        }\n        else\n        {\n            return this.getNodeLabelFormatter();\n        }\n    }\n\n    //Deprecated - use getDefaultLabel()\n    getDefaultNodeLabel()\n    {\n        return '';\n    }\n\n    //Deprecated - use getDefaultLabel()\n    getDefaultEdgeLabel()\n    {\n        return '';\n    }\n\n    //Deprecated - use getDefaultLabel()\n    getNodeLabelFormatter()\n    {\n        throw new Error('Node label formatting is not supported');\n    }\n\n    //Deprecated - use getDefaultLabel()\n    getEdgeLabelFormatter()\n    {\n        throw new Error('Edge label formatting is not supported');\n    }\n}\n\nexport default AbstractGraphLabeler;\n","import React from 'react';\n\nconst QUAD_RADIAN_THRESHOLD = 0.01;\nconst QUAD_REVERSE_OFFSET_THRESHOLD = 4;\nconst ARROW_WIDTH = 10;\nconst SIXTH_PI = Math.PI / 6;\n\nexport const DIRECTED_FORWARD = 'forward';\nexport const DIRECTED_BACKWARD = 'backward';\nexport const DIRECTED_BOTH = 'both';\nexport const DIRECTED_NONE = 'undirected';\n\nexport const DefaultEndpointRenderer = props => (\n    <React.Fragment>\n        <path d={\n            'M ' +\n            (props.position.x - (props.length * Math.sin(props.angle - SIXTH_PI))) +\n            ' ' +\n            (props.position.y - (props.length * Math.cos(props.angle - SIXTH_PI))) +\n            ' ' +\n            'L ' + props.position.x + ' ' + props.position.y +\n            ' ' +\n            'L ' +\n            (props.position.x - (props.length * Math.sin(props.angle + SIXTH_PI))) +\n            ' ' +\n            (props.position.y - (props.length * Math.cos(props.angle + SIXTH_PI)))\n        }\n        stroke={props.color}\n        fill=\"none\" />\n    </React.Fragment>\n);\n\nexport const DefaultLabelRenderer = props => (\n    <g transform={'translate(' + props.position.x + ',' + props.position.y + ')' +\n        ' ' +\n        'rotate(' + (props.direction * 180 / Math.PI) + ')'}>\n        {\n            props.labels && props.labels.length > 0 &&\n            props.labels.map((str, i) => \n            {\n                return (\n                    <text key={str + '.' + i}\n                        transform={'translate(0,' + ((i + 1) * -15) + ')' +\n                            (props.reverse ? ' scale(-1,-1)' : '')}\n                        alignmentBaseline=\"central\"\n                        pointerEvents=\"none\"\n                        style={{ userSelect: 'none' }}\n                        textAnchor=\"middle\"\n                        fill={props.color}>\n                        {str}\n                    </text>\n                );\n            })\n        }\n    </g>\n);\n\nclass EdgeRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const directed = this.props.directed || DIRECTED_NONE;\n\n        const ForwardEndpointRenderer =\n            (directed === DIRECTED_FORWARD || directed === DIRECTED_BOTH) ?\n                (this.props.forwardEndpointRenderer ||\n                    this.props.endpointRenderer ||\n                    DefaultEndpointRenderer) : null;\n        const BackwardEndpointRenderer =\n            (directed === DIRECTED_BACKWARD || directed === DIRECTED_BOTH) ?\n                (this.props.backwardEndpointRenderer ||\n                    this.props.endpointRenderer ||\n                    DefaultEndpointRenderer) : null;\n        const EdgeLabelRenderer = this.props.labelRenderer || DefaultLabelRenderer;\n\n        const fromPoint = this.props.from;\n        const toPoint = this.props.to;\n        const centerPoint = this.props.center;\n        const label = this.props.label || '';\n        const direction = this.props.direction || 0;\n        const color = this.props.color || '#000000';\n\n        let reverseLabel = false;\n        let fromAngle;\n        let toAngle;\n        let quadLine = null;\n\n        const dftx = fromPoint.x - toPoint.x;\n        const dfty = fromPoint.y - toPoint.y;\n        const dfcx = fromPoint.x - centerPoint.x;\n        const dfcy = fromPoint.y - centerPoint.y;\n        const ftrad = Math.atan2(dfty, dftx);\n        const fcrad = Math.atan2(dfcy, dfcx);\n        if (Math.abs(ftrad - fcrad) <= QUAD_RADIAN_THRESHOLD)\n        {\n            toAngle = Math.atan2(centerPoint.x - toPoint.x, centerPoint.y - toPoint.y) + Math.PI;\n            fromAngle = Math.atan2(centerPoint.x - fromPoint.x, centerPoint.y - fromPoint.y) + Math.PI;\n            quadLine = 'L ' + toPoint.x + ' ' + toPoint.y;\n            reverseLabel = false;\n        }\n        else\n        {\n            const cx = ((centerPoint.x * 4) - fromPoint.x - toPoint.x) / 2;\n            const cy = ((centerPoint.y * 4) - fromPoint.y - toPoint.y) / 2;\n            toAngle = Math.atan2(cx - toPoint.x, cy - toPoint.y) + Math.PI;\n            fromAngle = Math.atan2(cx - fromPoint.x, cy - fromPoint.y) + Math.PI;\n            quadLine = 'Q ' + cx + ' ' + cy + ' ' + toPoint.x + ' ' + toPoint.y;\n            reverseLabel = cy > centerPoint.y + QUAD_REVERSE_OFFSET_THRESHOLD;\n        }\n\n        return (\n            <g>\n                <path d={'M ' + fromPoint.x + ' ' + fromPoint.y + ' ' + quadLine}\n                    stroke={color}\n                    fill=\"none\" />\n                {ForwardEndpointRenderer &&\n                    <ForwardEndpointRenderer position={toPoint} angle={toAngle} length={ARROW_WIDTH} color={color} />}\n                {BackwardEndpointRenderer &&\n                    <BackwardEndpointRenderer position={fromPoint} angle={fromAngle} length={ARROW_WIDTH} color={color} />}\n                {EdgeLabelRenderer &&\n                    <EdgeLabelRenderer position={centerPoint} labels={label.split('\\n')} direction={direction} reverse={reverseLabel} color={color} />}\n            </g>\n        );\n    }\n}\n\nexport default EdgeRenderer;\n","import React from 'react';\n\nconst RETURN_FOCUS_DELAY = 50;\n\nclass PatternInputButton extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.ref = null;\n\n    this._timeout = null;\n\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onAnyMouseUp = this.onAnyMouseUp.bind(this);\n  }\n\n  onMouseDown(e)\n  {\n    const parent = this.props.parent;\n    if (parent.ignoreBlur(true))\n    {\n      document.addEventListener(\"mouseup\", this.onAnyMouseUp);\n    }\n\n    if (this.props.onClick)\n    {\n      this.props.onClick(e, this);\n    }\n  }\n\n  onAnyMouseUp()\n  {\n    document.removeEventListener(\"mouseup\", this.onAnyMouseUp);\n\n    if (this._timeout) clearTimeout(this._timeout);\n    this._timeout = setTimeout(() => {\n      this._timeout = null;\n\n      const parent = this.props.parent;\n      parent.ignoreBlur(false);\n\n      if (document.activeElement === this.ref)\n      {\n        parent.focus(false);\n      }\n      else if (document.activeElement !== this.props.parent.inputElement)\n      {\n        parent.onBlur();\n      }\n    }, RETURN_FOCUS_DELAY);\n  }\n\n  /** @override */\n  render()\n  {\n    return (\n      <button ref={ref=>this.ref=ref}\n        id={this.props.id}\n        className={this.props.className}\n        style={this.props.style}\n        title={this.props.title}\n        onMouseDown={this.onMouseDown}>\n        {this.props.title}\n      </button>\n    );\n  }\n}\n\nexport default PatternInputButton;\n","import React from 'react';\nimport Style from './PanelDivider.css';\n\nclass PanelDivider extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        return (\n            <div id={this.props.id}\n                className={Style.panel_divider +\n          ' ' + this.props.className}\n                style={this.props.style}>\n            </div>\n        );\n    }\n}\n\nexport default PanelDivider;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M12 7.77L18.39 18H5.61L12 7.77M12 4L2 20h20L12 4z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './PanelCheckbox.css';\n\nclass PanelCheckbox extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            checked: props.initial || false\n        };\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    setChecked(value)\n    {\n        this.setState({checked: value});\n    }\n\n    isChecked()\n    {\n        return this.state.checked;\n    }\n\n    onChange(e)\n    {\n        const checked = e.target.checked;\n        if (this.state.checked !== checked)\n        {\n            this.setState({checked: checked});\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        return (\n            <div id={this.props.id}\n                className={Style.checkbox_container +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <input type=\"checkbox\" id={this.props.id + '-checkbox'}\n                    name={this.props.id + '-checkbox'} value={this.props.value}\n                    checked={this.state.checked}\n                    disabled={this.props.disabled}\n                    onChange={this.onChange}/>\n                <label htmlFor={this.props.id + '-checkbox'}>{this.props.title}</label>\n            </div>\n        );\n    }\n}\n\nexport default PanelCheckbox;\n","import React from 'react';\nimport Style from './ModeSelectTray.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport EditPencilIcon from 'components/iconset/EditPencilIcon.js';\nimport MoveIcon from 'components/iconset/MoveIcon.js';\n\nclass ModeSelectTray extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange(newValue)\n    {\n        if (this.props.onChange)\n        {\n            this.props.onChange(newValue);\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        const mode = this.props.mode || 0;\n        //const onChange = this.props.onChange;\n\n        return (\n            <div id={this.props.id}\n                className={Style.tray_container +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <IconButton className={Style.tray_button +\n          (mode === 0 ? ' active ' : '')}\n                onClick={() => this.onChange(0)}\n                title={I18N.toString('cursor.actionmode')}>\n                    <EditPencilIcon/>\n                </IconButton>\n                <IconButton className={Style.tray_button +\n          (mode === 1 ? ' active ' : '')}\n                onClick={() => this.onChange(1)}\n                title={I18N.toString('cursor.movemode')}>\n                    <MoveIcon/>\n                </IconButton>\n            </div>\n        );\n    }\n}\nexport default ModeSelectTray;\n","import React from 'react';\nimport Style from './TrashCanWidget.css';\n\nimport TrashCanDetailedIcon from 'components/iconset/TrashCanDetailedIcon.js';\n\nconst DOUBLE_TAP_TIME = 250;\n\nclass TrashCanWidget extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.ref = null;\n\n        this.state = {\n            forceActive: false\n        };\n\n        this._doubleTapTimeout = null;\n\n        this.onMouseEnter = this.onMouseEnter.bind(this);\n        this.onMouseLeave = this.onMouseLeave.bind(this);\n        this.onClick = this.onClick.bind(this);\n\n        //HACK: This is kinda a hack to lose trash mode focus...\n        this.onAnyMouseDownNotConsumed = this.onAnyMouseDownNotConsumed.bind(this);\n    }\n\n    onMouseEnter(e)\n    {\n        if (this.state.forceActive) return;\n\n        this.props.inputController.setTrashMode(true);\n    }\n\n    onMouseLeave(e)\n    {\n        if (this.state.forceActive) return;\n\n        this.props.inputController.setTrashMode(false);\n    }\n\n    onClick(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (this._doubleTapTimeout)\n        {\n            //This is a double tap!\n            clearTimeout(this._doubleTapTimeout);\n            this._doubleTapTimeout = null;\n            this.setState({forceActive: false});\n\n            this.props.app.getSession().getCurrentModule().clear(this.props.app, true);\n            this.props.inputController.setTrashMode(false);\n        }\n        else\n        {\n            //This is a single tap!\n            this.setState((prev, props) => \n            {\n                const result = !prev.forceActive;\n                props.inputController.setTrashMode(result);\n                this._doubleTapTimeout = setTimeout(() => \n                {\n                    this._doubleTapTimeout = null;\n                }, DOUBLE_TAP_TIME);\n\n                if (result)\n                {\n                    document.documentElement.addEventListener('mousedown', this.onAnyMouseDownNotConsumed);\n                }\n\n                return {\n                    forceActive: result\n                };\n            });\n        }\n    }\n\n    onAnyMouseDownNotConsumed(e)\n    {\n        if (this.state.forceActive && this.ref !== e.target)\n        {\n            e.stopPropagation();\n            e.preventDefault();\n\n            document.documentElement.removeEventListener('mousedown', this.onAnyMouseDownNotConsumed);\n\n            this.props.inputController.setTrashMode(false);\n            this.setState({forceActive: false});\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        const inputController = this.props.inputController;\n        const graphController = this.props.graphController;\n        const inputAdapter = inputController.getInputAdapter();\n\n        const active = inputController.isTrashMode();\n        const hide = !active && (graphController.getGraph().isEmpty() || (inputAdapter.isUsingTouch() && inputAdapter.isDragging()));\n\n        return (\n            <div ref={ref=>this.ref=ref} id={this.props.id}\n                className={Style.trash_container +\n          (active ? ' active ' : '') +\n          (hide ? ' hide ' : '') +\n          ' ' + this.props.className}\n                style={this.props.style}\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n                onClick={this.onClick}>\n                <TrashCanDetailedIcon/>\n            </div>\n        );\n    }\n}\n\nexport default TrashCanWidget;\n","import AbstractEventHandler from 'session/manager/undo/AbstractEventHandler.js';\n\nclass SafeGraphEventHandler extends AbstractEventHandler\n{\n    constructor(graphController, graphParser)\n    {\n        super();\n\n        this._graphController = graphController;\n        this._graphParser = graphParser;\n        this._graphData = graphParser.objectify(graphController.getGraph());\n    }\n\n    /** @override */\n    applyUndo(undoManager)\n    {\n        const prevEvent = undoManager.getPreviousEvent();\n        if (prevEvent instanceof SafeGraphEventHandler)\n        {\n            prevEvent.applyRedo(undoManager);\n        }\n        else\n        {\n            this._graphController.getGraph().clear();\n        }\n    }\n\n    /** @override */\n    applyRedo(undoManager)\n    {\n        this._graphParser.parse(this._graphData, this._graphController.getGraph());\n    }\n}\nexport default SafeGraphEventHandler;\n","import GraphElementInputHandler from './GraphElementInputHandler.js';\n\n// const SNAP_TO_GRID = true;\n// const SNAP_SIZE = 48;\n\nclass GraphNodeInputHandler extends GraphElementInputHandler\n{\n    constructor()\n    {\n        super('node');\n    }\n\n    /** @override */\n    onAction(inputController, graphController, pointer, target)\n    {\n        const selectionBox = inputController.getSelectionBox();\n\n        //Click to delete node\n        if (inputController.isTrashMode())\n        {\n            //So that the emitted 'delete' events can use this\n            graphController.prevX = target.x;\n            graphController.prevY = target.y;\n\n            //If there exists selected states, delete them all!\n            if (selectionBox.hasSelection())\n            {\n                //Delete all selected nodes\n                graphController.deleteSelectedNodes(target);\n            }\n            else\n            {\n                //Delete a single node\n                graphController.deleteTargetNode(target);\n            }\n            return true;\n        }\n        else if (inputController.isMoveMode())\n        {\n            //Edit label for selected node\n            graphController.openLabelEditor(target, target.getNodeLabel());\n        }\n\n        return false;\n    }\n\n    /** @override */\n    onDragStart(inputController, graphController, pointer, target)\n    {\n        if (inputController.isMoveMode())\n        {\n            //Moving node (and selected nodes)\n            graphController.prevX = target.x;\n            graphController.prevY = target.y;\n        }\n        else\n        {\n            const picker = inputController.getPicker();\n            const graph = graphController.getGraph();\n            const edge = graph.createEdge(target, pointer);\n            edge.setEdgeLabel(graphController.getGraphLabeler().getDefaultEdgeLabel());\n\n            //Redirect pointer to refer to the edge as the new target\n            picker.setInitialTarget(edge, 'endpoint');\n            inputController.isNewEdge = true;\n\n            //Reset previous quad values for new proxy edge\n            const edgeQuad = edge.getQuadratic();\n            graphController.prevQuad.radians = edgeQuad.radians;\n            graphController.prevQuad.length = edgeQuad.length;\n            graphController.prevEdgeTo = null;\n\n            //Ready to move proxy edge to pointer...\n        }\n        return true;\n    }\n\n    /** @override */\n    onDragMove(inputController, graphController, pointer, target)\n    {\n        const selectionBox = inputController.getSelectionBox();\n        const graph = graphController.getGraph();\n        let x = pointer.x;\n        let y = pointer.y;\n\n        if (inputController._snapToGrid)\n        {\n            const snapSize = inputController._snapSize;\n            x = Math.round(x / snapSize) * snapSize;\n            y = Math.round(y / snapSize) * snapSize;\n        }\n\n        if (selectionBox.hasSelection())\n        {\n            graphController.moveMultipleNodesTo(pointer, selectionBox.getSelection(graph), x, y);\n        }\n        else\n        {\n            graphController.moveNodeTo(pointer, target, x, y);\n        }\n        return true;\n    }\n\n    /** @override */\n    onDragStop(inputController, graphController, pointer, target)\n    {\n        const selectionBox = inputController.getSelectionBox();\n        const graph = graphController.getGraph();\n        const x = pointer.x;\n        const y = pointer.y;\n\n        //Delete it if withing trash area...\n        if (inputController.isTrashMode())\n        {\n            //If there exists selected states, delete them all!\n            if (selectionBox.hasSelection())\n            {\n                graphController.deleteSelectedNodes(target);\n            }\n            else\n            {\n                //Delete a single node\n                graphController.deleteTargetNode(target);\n            }\n\n            return true;\n        }\n        //If dragged to an empty space (not trash)\n        else\n        {\n            //Do nothing, since should have moved to position\n            if (selectionBox.hasSelection())\n            {\n                const dx = x - graphController.prevX;\n                const dy = y - graphController.prevY;\n                graphController.onGraphIntentMoveAllNodes(selectionBox.getSelection(graph), dx, dy);\n                //graphController.emit(\"nodeMoveAll\", graph, picker.getSelection(graph), dx, dy);\n            }\n            else\n            {\n                graphController.onGraphIntentMoveNode(target, x, y, graphController.prevX, graphController.prevY);\n                //graphController.emit(\"nodeMove\", graph, target, x, y, graphController.prevX, graphController.prevY);\n            }\n            return true;\n        }\n    }\n}\n\nexport default GraphNodeInputHandler;\n","import GraphElementInputHandler from './GraphElementInputHandler.js';\nimport GraphNode from 'graph/elements/GraphNode.js';\n\nclass GraphInitialInputHandler extends GraphElementInputHandler\n{\n    constructor()\n    {\n        super('initial');\n\n        //Used to change render to follow pointer when moving initial marker\n        this.ghostInitialMarker = null;\n    }\n\n    /** @override */\n    onDragStart(inputController, graphController, pointer, target)\n    {\n    //Ready to move the initial marker to another state...\n        this.ghostInitialMarker = pointer;\n        return true;\n    }\n\n    /** @override */\n    onDragMove(inputController, graphController, pointer, target)\n    {\n        const picker = inputController.getPicker();\n        const graph = graphController.getGraph();\n        const x = pointer.x;\n        const y = pointer.y;\n        //Move initial marker to node or pointer\n        const dst = picker.getPickHandler('node').getTargetAt(graph, x, y) || pointer;\n        this.ghostInitialMarker = dst;\n        return true;\n    }\n\n    /** @override */\n    onDragStop(inputController, graphController, pointer, target)\n    {\n        const graph = graphController.getGraph();\n\n        //If valid initial object to mark...\n        if (this.ghostInitialMarker instanceof GraphNode)\n        {\n            const prevInitial = graph.getStartNode();\n\n            //Set the new object as the initial node\n            graph.setStartNode(this.ghostInitialMarker);\n            graphController.applyAutoRename();\n\n            //Emit event\n            graphController.onGraphIntentChangeInitial(this.ghostInitialMarker, prevInitial);\n            //graphController.emit(\"nodeInitial\", graph, this.ghostInitialMarker, prevInitial);\n        }\n\n        //Reset ghost initial marker\n        this.ghostInitialMarker = null;\n        return true;\n    }\n}\n\nexport default GraphInitialInputHandler;\n","import GraphElementInputHandler from './GraphElementInputHandler.js';\n\nclass GraphEdgeInputHandler extends GraphElementInputHandler\n{\n    constructor()\n    {\n        super('edge');\n    }\n\n    /** @override */\n    onAction(inputController, graphController, pointer, target)\n    {\n        if (inputController.isTrashMode())\n        {\n            //Delete a single edge\n            graphController.deleteTargetEdge(target);\n        }\n        else\n        {\n            //Edit label for selected edge\n            graphController.openLabelEditor(target, target.getEdgeLabel());\n        }\n        return true;\n    }\n\n    /** @override */\n    onDragStart(inputController, graphController, pointer, target)\n    {\n        //Makes sure that placeholders are not quadratics!\n        if (target.isPlaceholder())\n        {\n            return false;\n        }\n\n        //Save previous quadratics\n        const targetQuad = target.getQuadratic();\n        graphController.prevQuad.radians = targetQuad.radians;\n        graphController.prevQuad.length = targetQuad.length;\n\n        //Ready to move the edge vertex to pointer...\n        return true;\n    }\n\n    /** @override */\n    onDragMove(inputController, graphController, pointer, target)\n    {\n        graphController.moveEdgeTo(pointer, target, pointer.x, pointer.y);\n        return true;\n    }\n\n    /** @override */\n    onDragStop(inputController, graphController, pointer, target)\n    {\n        //Delete it if withing trash area...\n        if (inputController.isTrashMode())\n        {\n            graphController.deleteTargetEdge(target);\n        }\n        else\n        {\n            //Do nothing, since should have moved to position\n            graphController.onGraphIntentMoveEdge(target, target.getQuadratic(), graphController.prevQuad);\n            //graphController.emit(\"edgeMove\", graph, target, target.getQuadratic(), graphController.prevQuad);\n        }\n        return true;\n    }\n}\n\nexport default GraphEdgeInputHandler;\n","import GraphElementInputHandler from './GraphElementInputHandler.js';\nimport GraphNode from 'graph/elements/GraphNode.js';\n\nclass GraphEndpointInputHandler extends GraphElementInputHandler\n{\n    constructor()\n    {\n        super('endpoint');\n    }\n\n    /** @override */\n    onAction(inputController, graphController, pointer, target)\n    {\n        if (inputController.isTrashMode())\n        {\n            //Delete a single edge\n            graphController.deleteTargetEdge(target);\n            return true;\n        }\n        return false;\n    }\n\n    /** @override */\n    onDragStart(inputController, graphController, pointer, target)\n    {\n        const targetQuad = target.getQuadratic();\n        graphController.prevQuad.radians = targetQuad.radians;\n        graphController.prevQuad.length = targetQuad.length;\n        graphController.prevEdgeTo = target.getEdgeTo();\n\n        inputController.isNewEdge = false;\n\n        //Ready to move the edge endpoint to pointer...\n        return true;\n    }\n\n    /** @override */\n    onDragMove(inputController, graphController, pointer, target)\n    {\n        graphController.moveEndpointTo(pointer, target, pointer.x, pointer.y);\n        return true;\n    }\n\n    /** @override */\n    onDragStop(inputController, graphController, pointer, target)\n    {\n        const graph = graphController.getGraph();\n\n        //Delete it if withing trash area...\n        if (inputController.isTrashMode())\n        {\n            graphController.deleteTargetEdge(target);\n            return true;\n        }\n        //If hovering over a node...\n        else if (target.getEdgeTo() instanceof GraphNode)\n        {\n            const result = graph.formatEdge(target);\n\n            //If a different edge is the result of the target...\n            if (result !== target)\n            {\n                //Allow the user to edit the merged labels\n                graphController.openLabelEditor(result, result.getEdgeLabel());\n\n                //Delete the merged label\n                graph.deleteEdge(target);\n                return true;\n            }\n            //Open label editor if a new edge...\n            else\n            {\n                if (inputController.isNewEdge)\n                {\n                    graphController.openLabelEditor(result, '', (target, value) => graphController.onGraphIntentFinishEdge(target));\n                }\n                else\n                {\n                    graphController.openLabelEditor(target, target.getEdgeLabel());\n                }\n            }\n\n            if (inputController.isNewEdge)\n            {\n                //Must be after openLabelEditor() to allow the function to check it...\n                inputController.isNewEdge = false;\n\n                //Emit event\n                graphController.onGraphIntentCreateEdge(target);\n            }\n            else if (graphController.prevEdgeTo !== null)\n            {\n                //Emit event\n                graphController.onGraphIntentChangeDestination(target, target.getEdgeTo(), graphController.prevEdgeTo, graphController.prevQuad);\n            }\n\n            return true;\n        }\n        //If hovering over anything else...\n        else\n        {\n            //Destroy any edge that no longer have a destination\n            if (inputController.shouldDestroyPointlessEdges)\n            {\n                if (!inputController.isNewEdge)\n                {\n                    graphController.deleteTargetEdge(target);\n                }\n                else\n                {\n                    graph.deleteEdge(target);\n                }\n                return true;\n            }\n            //Keep edges as placeholders (used in DFA's)\n            else\n            {\n                target.changeDestinationNode(null);\n\n                //Open label editor if default edge...\n                if (target.getEdgeLabel().length <= 0)\n                {\n                    graphController.openLabelEditor(target, target.getEdgeLabel());\n                }\n                return true;\n            }\n        }\n    }\n}\n\nexport default GraphEndpointInputHandler;\n","import InputHandler from './InputHandler.js';\n\nclass GraphNodeCreateInputHandler extends InputHandler\n{\n    constructor()\n    {\n        super();\n    }\n\n    /** @override */\n    isTargetable(inputController, pointer, target, targetType)\n    {\n        return targetType === 'none';\n    }\n\n    /** @override */\n    onDblAction(inputController, graphController, pointer, target)\n    {\n        let x = pointer.x;\n        let y = pointer.y;\n\n        if (inputController._snapToGrid)\n        {\n            const snapSize = inputController._snapSize;\n            x = Math.round(x / snapSize) * snapSize;\n            y = Math.round(y / snapSize) * snapSize;\n        }\n\n        //Create node at position\n        graphController.createNode(x, y);\n        //TODO: this allows nodes to move away from other nodes\n        //But undoManager does not recognize it.\n        //graphController.moveNodeTo(pointer, node, x, y);\n        return true;\n    }\n}\n\nexport default GraphNodeCreateInputHandler;\n","import GraphElementInputHandler from './GraphElementInputHandler.js';\n\nclass GraphNodeAcceptInputHandler extends GraphElementInputHandler\n{\n    constructor()\n    {\n        super('node');\n    }\n\n    /** @override */\n    onAction(inputController, graphController, pointer, target)\n    {\n    //Edit click to toggle node\n        if (!inputController.isMoveMode())\n        {\n            graphController.toggleNode(target);\n            return true;\n        }\n\n        return false;\n    }\n}\n\nexport default GraphNodeAcceptInputHandler;\n","import PickHandler from './PickHandler.js';\n\nclass GraphNodePickHandler extends PickHandler\n{\n    constructor()\n    {\n        super();\n    }\n\n    /** @override */\n    getTargetAt(graph, x, y)\n    {\n    //Search graph\n        for(const node of graph.getNodes())\n        {\n            const nodeSize = node.getNodeSize();\n            const dx = x - node.x;\n            const dy = y - node.y;\n            if (dx * dx + dy * dy < nodeSize * nodeSize)\n            {\n                return node;\n            }\n        }\n        return null;\n    }\n\n    /** @override */\n    getTargetType() { return 'node'; }\n}\n\nexport default GraphNodePickHandler;\n","import PickHandler from './PickHandler.js';\n\nconst EDGE_RADIUS = 12;\nconst EDGE_RADIUS_SQU = EDGE_RADIUS * EDGE_RADIUS;\n\nclass GraphEdgePickHandler extends PickHandler\n{\n    constructor()\n    {\n        super();\n    }\n\n    /** @override */\n    getTargetAt(graph, x, y)\n    {\n        const center = {x: 0, y: 0};\n\n        //Search graph\n        for(const edge of graph.getEdges())\n        {\n            edge.getCenterPoint(center);\n            const dx = x - center.x;\n            const dy = y - center.y;\n            if (dx * dx + dy * dy < EDGE_RADIUS_SQU)\n            {\n                return edge;\n            }\n        }\n        return null;\n    }\n\n    /** @override */\n    getTargetType() { return 'edge'; }\n}\n\nexport default GraphEdgePickHandler;\n","import PickHandler from './PickHandler.js';\n\nconst ENDPOINT_RADIUS = 6;\nconst ENDPOINT_RADIUS_SQU = ENDPOINT_RADIUS * ENDPOINT_RADIUS;\n\nclass GraphEndpointPickHandler extends PickHandler\n{\n    constructor()\n    {\n        super();\n    }\n\n    /** @override */\n    getTargetAt(graph, x, y)\n    {\n        const end = {x: 0, y: 0};\n        //Search graph\n        for(const edge of graph.getEdges())\n        {\n            edge.getEndPoint(end);\n            const dx = x - end.x;\n            const dy = y - end.y;\n            if (dx * dx + dy * dy < ENDPOINT_RADIUS_SQU)\n            {\n                return edge;\n            }\n        }\n        return null;\n    }\n\n    /** @override */\n    getTargetType() { return 'endpoint'; }\n}\n\nexport default GraphEndpointPickHandler;\n","import PickHandler from './PickHandler.js';\n\nconst EDGE_RADIUS = 12;\nconst EDGE_RADIUS_SQU = EDGE_RADIUS * EDGE_RADIUS;\n\nclass GraphInitialPickHandler extends PickHandler\n{\n    constructor()\n    {\n        super();\n    }\n\n    /** @override */\n    getTargetAt(graph, x, y)\n    {\n        const startNode = graph.getStartNode();\n        if (!startNode) return null;\n\n        const nodeSize = startNode.getNodeSize();\n        const offset = -(nodeSize + (nodeSize / 2));\n        const dx = x - (startNode.x + offset);\n        const dy = y - startNode.y;\n        if (dx * dx + dy * dy < EDGE_RADIUS_SQU)\n        {\n            return startNode;\n        }\n\n        return null;\n    }\n\n    /** @override */\n    getTargetType() { return 'initial'; }\n}\n\nexport default GraphInitialPickHandler;\n","/**\n * Used by InputAdapter to handle input event logic.\n */\nclass AbstractInputHandler\n{\n  constructor() {}\n\n  /**\n   * Called by InputAdapter before an InputEvent begins.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not begin.\n   */\n  onPreInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter when an InputEvent resolves and is not an Alt input.\n   * To handle events for Alt inputs, refer to onAltInputEvent().\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events.\n   */\n  onInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter when an InputEvent resolves and is an Alt input.\n   * To handle events for non-Alt inputs, refer to onInputEvent().\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events.\n   */\n  onAltInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter when a DblInputEvent resolves. The input is\n   * assumed by a non-Alt input, since only non-Alt inputs can trigger this\n   * event.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events.\n   */\n  onDblInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter when input movess. The input is called before drag\n   * logic.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events (i.e. dragging events).\n   */\n  onMoveInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter before a drag begins. The input could be either\n   * an Alt or non-Alt input.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events, nor continue the drag input.\n   */\n  onDragStart(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter while dragging moves. The input could be either\n   * an Alt or non-Alt input.\n   * Will always be called after onDragStart() and will be followed by\n   * onDragStop() when complete.\n   */\n  onDragMove(pointer) {}\n\n  /**\n   * Called by InputAdapter after a drag ends. The input could be either an\n   * Alt or non-Alt input.\n   * Will always be called after onDragStart(). Although onDragMove may be\n   * called in-between, it is not guaranteed.\n   */\n  onDragStop(pointer) {}\n\n  /**\n   * Called by InputAdapter after an InputEvent ends.\n   */\n  onPostInputEvent(pointer) {}\n\n  /**\n   * Called by InputAdapter when zoom changes.\n   * Returns true if event is consumed (zoom will not be applied)\n   */\n  onZoomChange(pointer, zoomValue, prevValue)\n  {\n    return false;\n  }\n}\n\nexport default AbstractInputHandler;\n","import AbstractInputHandler from 'deprecated/system/inputadapter/AbstractInputHandler.js';\n\nclass AbstractInputController extends AbstractInputHandler\n{\n    constructor(module, inputAdapter)\n    {\n        super();\n\n        if (!module) throw new Error('Missing module for input controller');\n        if (!inputAdapter) throw new Error('Missing inputAdapter for input controller');\n\n        this._module = module;\n        this._inputAdapter = inputAdapter;\n    }\n\n    initialize(module) {}\n    destroy(module) {}\n    update(module) {}\n\n    /** @override */\n    onPreInputEvent(pointer) { return false; }\n    /** @override */\n    onInputEvent(pointer) { return false; }\n    /** @override */\n    onAltInputEvent(pointer) { return this.onInputEvent(pointer); }\n    /** @override */\n    onDblInputEvent(pointer) { return false; }\n    /** @override */\n    onDragStart(pointer) { return false; }\n    /** @override */\n    onDragMove(pointer) { return false; }\n    /** @override */\n    onDragStop(pointer) { return false; }\n    /** @override */\n    onPostInputEvent(pointer) {}\n    /** @override */\n    onZoomChange(pointer, zoomValue, prevValue) { return false; }\n\n    getInputAdapter()\n    {\n        return this._inputAdapter;\n    }\n\n    getModule()\n    {\n        return this._module;\n    }\n}\n\nexport default AbstractInputController;\n","class GraphNodeSelectionBox\n{\n    constructor()\n    {\n        this._boundingBox = {\n            fromX: 0, fromY: 0,\n            toX: 0, toY: 0,\n            visible: false\n        };\n\n        this.targets = [];\n    }\n\n    getSelectionBox()\n    {\n        return this._boundingBox;\n    }\n\n    getSelection(graph, forceUpdate = false)\n    {\n        if (forceUpdate)\n        {\n            const box = this._boundingBox;\n            const mx = Math.max(box.toX, box.fromX);\n            const my = Math.max(box.toY, box.fromY);\n            const lx = Math.min(box.toX, box.fromX);\n            const ly = Math.min(box.toY, box.fromY);\n            this.clearSelection();\n            getNodesWithin(graph, lx, ly, mx, my, this.targets);\n        }\n\n        return this.targets;\n    }\n\n    hasSelection()\n    {\n        return this.targets.length > 0;\n    }\n\n    clearSelection()\n    {\n        this.targets.length = 0;\n    }\n\n    isTargetInSelection(target)\n    {\n        return this.targets.includes(target);\n    }\n\n    beginSelection(graph, x, y)\n    {\n        const box = this._boundingBox;\n        box.fromX = box.toX = x;\n        box.fromY = box.toY = y;\n        this.clearSelection();\n\n        box.visible = true;\n    }\n\n    updateSelection(graph, x, y)\n    {\n        const box = this._boundingBox;\n        box.toX = x;\n        box.toY = y;\n        this.getSelection(graph, true);\n    }\n\n    endSelection(graph, x, y)\n    {\n        const box = this._boundingBox;\n        box.toX = x;\n        box.toY = y;\n        this.getSelection(graph, true);\n\n        box.visible = false;\n    }\n\n    isSelecting()\n    {\n        return this._boundingBox.visible;\n    }\n}\n\nfunction getNodesWithin(graph, x1, y1, x2, y2, dst)\n{\n    const fromX = Math.min(x1, x2);\n    const fromY = Math.min(y1, y2);\n    const toX = Math.max(x1, x2);\n    const toY = Math.max(y1, y2);\n\n    for (const node of graph.getNodes())\n    {\n        if (node.x >= fromX && node.x < toX &&\n            node.y >= fromY && node.y < toY)\n        {\n            dst.push(node);\n        }\n    }\n    return dst;\n}\n\nexport default GraphNodeSelectionBox;\n","class GraphPicker\n{\n    constructor()\n    {\n        this.target = null;\n        this.targetType = '';\n\n        this.initialTarget = null;\n        this.initialTargetType = '';\n\n        this._prevX = 0;\n        this._prevY = 0;\n\n        this._pickHandlers = new Map();\n    }\n\n    addPickHandler(pickHandler)\n    {\n        this._pickHandlers.set(pickHandler.getTargetType(), pickHandler);\n        return this;\n    }\n\n    removePickHandler(pickHandler)\n    {\n        this._pickHandlers.delete(pickHandler.getTargetType());\n        return this;\n    }\n\n    getPickHandler(targetType)\n    {\n        return this._pickHandlers.get(targetType);\n    }\n\n    setInitialTarget(target, type)\n    {\n        this.initialTarget = target;\n        this.initialTargetType = type;\n    }\n\n    updateHoverTarget(graph, x, y)\n    {\n        if (this._prevX !== x || this._prevY !== y)\n        {\n            this._prevX = x;\n            this._prevY = y;\n\n            //Update target\n            this.updateTarget(graph, x, y);\n\n            //HACK: to make the cursor look like a pointer when targeting\n            if (this.hasTarget())\n            {\n                document.body.style.cursor = 'pointer';\n            }\n            else\n            {\n                document.body.style.cursor = 'auto';\n            }\n        }\n    }\n\n    updateInitialTarget(graph, x, y)\n    {\n        this.updateTarget(graph, x, y);\n        this.setInitialTarget(this.target, this.targetType);\n    }\n\n    updateTarget(graph, x, y)\n    {\n        for (const pickHandler of this._pickHandlers.values())\n        {\n            this.target = pickHandler.getTargetAt(graph, x, y);\n            if (this.target)\n            {\n                this.targetType = pickHandler.getTargetType();\n                return;\n            }\n        }\n\n        this.target = null;\n        this.targetType = 'none';\n\n        return this.target;\n    }\n\n    clearTarget()\n    {\n        this.target = null;\n        this.targetType = 'none';\n    }\n\n    hasTarget()\n    {\n        return this.target != null;\n    }\n\n    isTarget(target)\n    {\n        return this.target == target;\n    }\n\n    getPickHandlers()\n    {\n        return this._pickHandlers.values();\n    }\n}\n\nexport default GraphPicker;\n","import AbstractInputController from 'modules/abstract/AbstractInputController.js';\n\n//import NodalGraphPicker from 'graph/picker/NodalGraphPicker.js';\nimport GraphNodeSelectionBox from 'graph/GraphNodeSelectionBox.js';\nimport GraphPicker from './GraphPicker.js';\n\nconst DEFAULT_SHOULD_DESTROY_POINTLESS_EDGE = true;\n\nclass InputController extends AbstractInputController\n{\n    constructor(module, inputAdapter)\n    {\n        super(module, inputAdapter);\n    \n        this._picker = new GraphPicker();\n        this._selectionBox = new GraphNodeSelectionBox();\n        this._graphController = null;\n\n        //Make sure this is always false when moving endpoints\n        this.isNewEdge = false;\n\n        //Whether to destroy pointless edges\n        this.shouldDestroyPointlessEdges = DEFAULT_SHOULD_DESTROY_POINTLESS_EDGE;\n\n        //Swap left to right clicks and vice versa on anything else but Macs\n        this._swapMouseScheme = true;//!navigator.platform.startsWith(\"Mac\");\n\n        //Used to determine whether the target should be destroyed because of trash mode\n        this._trashMode = false;\n\n        this._disabled = false;\n\n        //TODO: this works, it's just not attached to anything\n        this._snapToGrid = false;\n        this._snapSize = 48;\n\n        this._inputHandlers = [];\n    }\n\n    addInputHandler(inputHandler)\n    {\n        this._inputHandlers.push(inputHandler);\n        return this;\n    }\n\n    removeInputHandler(inputHandler)\n    {\n        this._inputHandlers.splice(this._inputHandlers.indexOf(inputHandler), 1);\n        return this;\n    }\n\n    /** @override */\n    initialize(module)\n    {\n        super.initialize(module);\n\n        this._module = module;\n        this._graphController = module.getGraphController();\n    }\n\n    /** @override */\n    destroy(module)\n    {\n        super.destroy(module);\n    }\n\n    /** @override */\n    update(module)\n    {\n        super.update(module);\n\n        const graph = this._graphController.getGraph();\n        const picker = this._picker;\n\n        const x = this._inputAdapter.getPointerX();\n        const y = this._inputAdapter.getPointerY();\n        picker.updateHoverTarget(graph, x, y);\n    }\n\n    setDisabled(disabled)\n    {\n        this._disabled = disabled;\n    }\n\n    isDisabled()\n    {\n        return this._disabled;\n    }\n\n    /** @override */\n    onPreInputEvent(pointer)\n    {\n        if (this._disabled) return super.onPreInputEvent(pointer);\n\n        const inputController = this;\n        const graphController = this._graphController;\n\n        const graph = graphController.getGraph();\n        const picker = inputController.getPicker();\n        picker.updateInitialTarget(graph, pointer.x, pointer.y);\n\n        const target = picker.initialTarget;\n        const targetType = picker.initialTargetType;\n\n        if (this._selectionBox.hasSelection())\n        {\n            //Unselect everything is clicked on something other than nodes...\n            if (targetType != 'node' || !this._selectionBox.isTargetInSelection(target))\n            {\n                this._selectionBox.clearSelection();\n            }\n        }\n\n        /** @override */\n        return super.onPreInputEvent(pointer);\n    }\n\n    /** @override */\n    onInputEvent(pointer)\n    {\n        if (this._disabled) return super.onInputEvent(pointer);\n\n        const inputController = this;\n        const graphController = this._graphController;\n        const picker = inputController.getPicker();\n        picker.updateTarget(graphController.getGraph(), pointer.x, pointer.y);\n        const target = picker.initialTarget;\n        const targetType = picker.initialTargetType;\n\n        for(const handler of this._inputHandlers)\n        {\n            if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onAction(inputController, graphController, pointer, target))\n            {\n                return true;\n            }\n        }\n\n        /** @override */\n        return super.onInputEvent(pointer);\n    }\n\n    /** @override */\n    onDblInputEvent(pointer)\n    {\n        if (this._disabled) return super.onDblInputEvent(pointer);\n\n        const inputController = this;\n        const graphController = this._graphController;\n        const picker = inputController.getPicker();\n        const target = picker.initialTarget;\n        const targetType = picker.initialTargetType;\n\n        //Make sure it is not in trash mode\n        if (inputController.isTrashMode())\n        {\n            graphController.emit('tryCreateWhileTrash');\n            return false;\n        }\n\n        for(const handler of this._inputHandlers)\n        {\n            if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onDblAction(inputController, graphController, pointer, target))\n            {\n                return true;\n            }\n        }\n\n        /** @override */\n        return super.onDblInputEvent(pointer);\n    }\n\n    /** @override */\n    onDragStart(pointer)\n    {\n        if (this._disabled) return super.onDragStart(pointer);\n\n        const inputController = this;\n        const graphController = this._graphController;\n        const picker = inputController.getPicker();\n        const target = picker.initialTarget;\n        const targetType = picker.initialTargetType;\n\n        //Make sure it is not in new edge mode\n        inputController.isNewEdge = false;\n\n        //Make sure it is not in trash mode\n        if (inputController.isTrashMode())\n        {\n            graphController.emit('tryCreateWhileTrash');\n            return false;\n        }\n\n        for(const handler of this._inputHandlers)\n        {\n            if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onDragStart(inputController, graphController, pointer, target))\n            {\n                return true;\n            }\n        }\n\n        /** @override */\n        return super.onDragStart(pointer);\n    }\n\n    /** @override */\n    onDragMove(pointer)\n    {\n        if (this._disabled) return super.onDragMove(pointer);\n\n        const inputController = this;\n        const graphController = this._graphController;\n        const picker = inputController.getPicker();\n        const target = picker.initialTarget;\n        const targetType = picker.initialTargetType;\n\n        for(const handler of this._inputHandlers)\n        {\n            if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onDragMove(inputController, graphController, pointer, target))\n            {\n                return true;\n            }\n        }\n\n        /** @override */\n        return super.onDragMove(pointer);\n    }\n\n    /** @override */\n    onDragStop(pointer)\n    {\n        if (this._disabled) return super.onDragStop(pointer);\n\n        const inputController = this;\n        const graphController = this._graphController;\n        const picker = inputController.getPicker();\n        picker.updateTarget(graphController.getGraph(), pointer.x, pointer.y);\n        const target = picker.initialTarget;\n        const targetType = picker.initialTargetType;\n\n        for(const handler of this._inputHandlers)\n        {\n            if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onDragStop(inputController, graphController, pointer, target))\n            {\n                return true;\n            }\n        }\n\n        /** @override */\n        return super.onDragStop(pointer);\n    }\n\n    /** @override */\n    onPostInputEvent(pointer)\n    {\n        if (this._disabled) return super.onPostInputEvent(pointer);\n\n        const inputController = this;\n        const graphController = this._graphController;\n        const graph = graphController.getGraph();\n        const picker = inputController.getPicker();\n\n        picker.clearTarget();\n        picker.updateTarget(graph, pointer.x, pointer.y);\n\n        /** @override */\n        super.onPostInputEvent(pointer);\n    }\n\n    setTrashMode(enabled)\n    {\n        this._trashMode = enabled;\n        if (enabled)\n        {\n            this._module.getApp()._drawer.setViewportColor('var(--color-viewport-error)');\n        }\n        else\n        {\n            this._module.getApp()._drawer.setViewportColor(null);\n        }\n    }\n\n    isTrashMode()\n    {\n        return this._trashMode;\n    }\n\n    setInputScheme(shouldInputFirst)\n    {\n        this._swapMouseScheme = !shouldInputFirst;\n    }\n\n    getInputScheme()\n    {\n        return this._swapMouseScheme;\n    }\n\n    isMoveMode()\n    {\n        const result = this._inputAdapter.isAltInput();\n        return this._swapMouseScheme ? !result : result;\n    }\n\n    isDragging()\n    {\n        return this._inputAdapter.isDragging();\n    }\n\n    isActionMode()\n    {\n        return this._inputAdapter.isPointerActive() ?\n        //Is considered an input when NOT moving or when creating a new edge...\n            this.isNewEdge || !this.isMoveMode() :\n        //If not active, just show default input...\n            !this._swapMouseScheme;\n    }\n\n    getPicker()\n    {\n        return this._picker;\n    }\n\n    getSelectionBox()\n    {\n        return this._selectionBox;\n    }\n\n    getInputHandlers()\n    {\n        return this._inputHandlers;\n    }\n}\n\nexport default InputController;\n","class AbstractGraphController\n{\n    constructor(module, graph, labeler, parser)\n    {\n        if (!module) throw new Error('Missing module for graph controller');\n        if (!graph) throw new Error('Missing graph for graph controller');\n        if (!labeler) throw new Error('Missing graph labeler for graph controller');\n        if (!parser) throw new Error('Missing graph parser for graph controller');\n\n        this._module = module;\n        this._graph = graph;\n        this._labeler = labeler;\n        this._parser = parser;\n    }\n\n    initialize(module) {}\n    destroy(module) {}\n    update(module) {}\n\n    getGraphParser(type='JSON')\n    {\n        const parsers = this._parser;\n        if (parsers && type in parsers)\n        {\n            return parsers[type];\n        }\n        else\n        {\n            throw new Error('Unsupported type for graph parser \\'' + type + '\\'');\n        }\n    }\n    getGraphLabeler() { return this._labeler; }\n    getGraph() { return this._graph; }\n    getModule() { return this._module; }\n}\n\nexport default AbstractGraphController;\n","class GraphChangeHandler\n{\n    constructor(refreshTicks=10)\n    {\n        this._cachedGraphHash = 0;\n\n        this._refreshTicks = refreshTicks;\n        this._elapsedTicks = Infinity;\n\n        this._listeners = [];\n    }\n\n    addListener(listener)\n    {\n        if (typeof listener !== 'function')\n            throw new Error('Cannot add uncallable listener');\n        this._listeners.push(listener);\n    }\n\n    removeListener(listener)\n    {\n        const i = this._listeners.indexOf(listener);\n        if (i >= 0)\n        {\n            this._listeners.splice(i, 1);\n            return true;\n        }\n        return false;\n    }\n\n    clearListeners()\n    {\n        this._listeners.length = 0;\n    }\n\n    getListeners()\n    {\n        return this._listeners;\n    }\n\n    reset()\n    {\n        this._elapsedTicks = 0;\n        this._cachedGraphHash = 0;\n    }\n\n    update(graph)\n    {\n        if (++this._elapsedTicks >= this._refreshTicks)\n        {\n            this._elapsedTicks = 0;\n\n            const graphHash = graph.getHashCode(false);\n            if (graphHash !== this._cachedGraphHash)\n            {\n                this._cachedGraphHash = graphHash;\n                for(const listener of this._listeners)\n                {\n                    listener(graph);\n                }\n            }\n        }\n    }\n}\n\nexport default GraphChangeHandler;\n","import AbstractGraphController from 'modules/abstract/AbstractGraphController.js';\n\nimport Eventable from 'util/Eventable.js';\nimport GraphEdge from 'graph/elements/GraphEdge.js';\nimport GraphLayout from 'modules/fsa/graph/GraphLayout.js';\n\nimport GraphChangeHandler from 'experimental/GraphChangeHandler.js';\n\nconst NODE_SPAWN_RADIUS = 64;\nconst DEFAULT_AUTO_RENAME = true;\nconst GRAPH_REFRESH_RATE = 30;\nconst DELETE_ON_EMPTY = true;\n\nclass GraphController extends AbstractGraphController\n{\n    constructor(module, graph, labeler, parser)\n    {\n        super(module, graph, labeler, parser);\n\n        this.inputController = null;\n        this._graphChangeHandler = new GraphChangeHandler(GRAPH_REFRESH_RATE);\n\n        this.getGraphLabeler().setGraphController(this);\n\n        this.prevQuad = {\n            radians: 0, length: 0,\n            x: 0, y: 0\n        };\n        this.prevEdgeTo = null;\n        this.prevX = 0;\n        this.prevY = 0;\n\n        this.shouldAutoLabel = DEFAULT_AUTO_RENAME;\n\n        //The difference between controller events vs graph events is: controller has user-intent\n\n        //tryCreateWhileTrash()\n        this.registerEvent('tryCreateWhileTrash');\n    }\n\n    /** @override */\n    initialize(module)\n    {\n        super.initialize(module);\n\n        this._module = module;\n        this.inputController = module.getInputController();\n    }\n\n    /** @override */\n    destroy(module)\n    {\n        super.destroy(module);\n    }\n\n    /** @override */\n    update(module)\n    {\n        super.update(module);\n\n        this._graphChangeHandler.update(this._graph);\n    }\n\n    getGraphChangeHandler()\n    {\n        return this._graphChangeHandler;\n    }\n\n    applyAutoLayout()\n    {\n        GraphLayout.applyLayout(this.getGraph());\n\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    applyAutoRename()\n    {\n        const graphLabeler = this._labeler;\n        const graph = this._graph;\n\n        if (graph.isEmpty()) return;\n\n        //Reset all default labels...\n        for(const node of graph.getNodes())\n        {\n            if (!node.getNodeCustom()) node.setNodeLabel('');\n        }\n\n        //Rename all default labels appropriately...\n        for(const node of graph.getNodes())\n        {\n            if (!node.getNodeCustom())\n            {\n                node.setNodeLabel(graphLabeler.getDefaultNodeLabel());\n            }\n        }\n    }\n\n    onGraphIntentImport()\n    {\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    onGraphIntentCreateEdge(edge)\n    {\n    }\n\n    onGraphIntentFinishEdge(edge)\n    {\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    onGraphIntentMoveEdge(edge, nextQuad, prevQuad)\n    {\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    onGraphIntentChangeDestination(edge, destinationNode, prevDestination, prevQuad)\n    {\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    onGraphIntentChangeInitial(nextInitial, prevInitial)\n    {\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    onGraphIntentMoveNode(node, nextX, nextY, prevX, prevY)\n    {\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    onGraphIntentMoveAllNodes(nodes, dx, dy)\n    {\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    onGraphIntentDeleteNodes(node, targetNodes, prevX, prevY)\n    {\n        if (this.shouldAutoLabel)\n        {\n            this.applyAutoRename();\n        }\n    }\n\n    setAutoRenameNodes(enable)\n    {\n        const prev = this.shouldAutoLabel;\n        this.shouldAutoLabel = enable;\n        if (enable && !prev)\n        {\n            this.applyAutoRename();\n        }\n    }\n\n    shouldAutoRenameNodes()\n    {\n        return this.shouldAutoLabel;\n    }\n\n    renameNode(node, name)\n    {\n        node.setNodeLabel(name);\n        node.setNodeCustom(true);\n\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    createNode(x, y)\n    {\n        if (typeof x === 'undefined') x = (Math.random() * NODE_SPAWN_RADIUS * 2) - NODE_SPAWN_RADIUS;\n        if (typeof y === 'undefined') y = (Math.random() * NODE_SPAWN_RADIUS * 2) - NODE_SPAWN_RADIUS;\n\n        const node = this.getGraph().createNode(x, y);\n\n        const newNodeLabel = this.getGraphLabeler().getDefaultNodeLabel();\n        node.setNodeLabel(newNodeLabel);\n\n        this.getModule().getApp().getUndoManager().captureEvent();\n        return node;\n    }\n\n    toggleNode(node)\n    {\n        const prev = node.getNodeAccept();\n        const result = !prev;\n        //Toggle accept for selected node\n        node.setNodeAccept(result);\n\n        //Emit event\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    deleteSelectedNodes(selectedNode)\n    {\n        const selectionBox = this.inputController.getSelectionBox();\n        const selection = selectionBox.getSelection(this.getGraph()).slice();\n\n        //Remove from graph\n        for(const node of selection)\n        {\n            this.getGraph().deleteNode(node);\n        }\n\n        //Remove from selection\n        selectionBox.clearSelection();\n\n        //Emit event\n        this.onGraphIntentDeleteNodes(selectedNode, selection, this.prevX, this.prevY);\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    deleteTargetNode(target)\n    {\n        this.getGraph().deleteNode(target);\n\n        //Emit event\n        this.onGraphIntentDeleteNodes(target, [target], this.prevX, this.prevY);\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    deleteTargetNodes(targets)\n    {\n        if (!targets || targets.length <= 0) return;\n\n        const graph = this.getGraph();\n        for(const node of targets)\n        {\n            graph.deleteNode(node);\n        }\n\n        //Emit event\n        this.onGraphIntentDeleteNodes(targets[0], targets, this.prevX, this.prevY);\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    deleteTargetEdge(target)\n    {\n        this.getGraph().deleteEdge(target);\n\n        //Emit event\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    deleteTargetEdges(targets)\n    {\n        if (!targets || targets.length <= 0) return;\n\n        for(const target of targets)\n        {\n            this.deleteTargetEdge(target);\n        }\n    }\n\n    moveNodeTo(pointer, node, x, y)\n    {\n        const nodeSize = node.getNodeSize();\n        for(const other of this.getGraph().getNodes())\n        {\n            //Update node collision\n            if (node === other) continue;\n\n            const dx = x - other.x;\n            const dy = y - other.y;\n            const angle = Math.atan2(dy, dx);\n\n            const diameter = (nodeSize * 2);\n            const nextDX = other.x + (Math.cos(angle) * diameter) - x;\n            const nextDY = other.y + (Math.sin(angle) * diameter) - y;\n\n            if (dx * dx + dy * dy < nodeSize * nodeSize * 4)\n            {\n                x += nextDX;\n                y += nextDY;\n            }\n        }\n\n        node.x = x;\n        node.y = y;\n    }\n\n    moveMultipleNodesTo(pointer, nodes, x, y)\n    {\n    //Moves all nodes by difference between initial position with passed-in x and y\n        const pos = pointer.getInputEventPosition();\n        const dx = x - pos.x;\n        const dy = y - pos.y;\n        for(const node of nodes)\n        {\n            node.x += dx;\n            node.y += dy;\n        }\n\n        //Updates initial position to passed-in x and y to maintain relative position\n        pointer.changeInputEventPosition(x, y);\n    }\n\n    moveEdgeTo(pointer, edge, x, y)\n    {\n        edge.setQuadraticByCoords(x, y);\n    }\n\n    moveEndpointTo(pointer, edge, x, y)\n    {\n    //Get ONLY node at x and y (cannot use hover target, since it is not ONLY nodes)\n        const picker = this.inputController.getPicker();\n        const dst = picker.getPickHandler('node').getTargetAt(this.getGraph(), x, y) || pointer;\n\n        edge.changeDestinationNode(dst);\n\n        //If the cursor returns to the state after leaving it...\n        if (edge.isSelfLoop())\n        {\n            //Make it a self loop\n            const sourceNode = edge.getEdgeFrom();\n            const dx = sourceNode.x - x;\n            const dy = sourceNode.y - y;\n            const radians = Math.atan2(dy, dx) + Math.PI;\n            edge.setQuadraticRadians(radians);\n        }\n        //Otherwise, maintain original curve\n        else\n        {\n            //TODO: This also causes self-loops to act weird when no longer a self loop\n            edge.setQuadraticRadians(this.prevQuad.radians).setQuadraticLength(this.prevQuad.length);\n        }\n    }\n\n    openLabelEditor(target, defaultValue=null, callback=null)\n    {\n        const labelEditor = this.getModule().getInputManager().getLabelEditorManager().getLabelEditorComponent();\n        const prevLabel = defaultValue;\n        labelEditor.openEditor(target, defaultValue, (target, value) => \n        {\n            if (DELETE_ON_EMPTY && (!value || value.length <= 0) && target instanceof GraphEdge)\n            {\n                //Assumes target is GraphEdge\n                this._graph.deleteEdge(target);\n            }\n            else\n            {\n                if (target instanceof GraphEdge)\n                {\n                    target.setEdgeLabel(value);\n                }\n                else\n                {\n                    target.setNodeLabel(value);\n                }\n\n                if (!prevLabel || (prevLabel.length > 0 && value !== prevLabel))\n                {\n                    this.getModule().getApp().getUndoManager().captureEvent();\n                }\n                if (callback) callback(target, value);\n            }\n        }, (target) => \n        {\n            if (DELETE_ON_EMPTY && (!prevLabel || prevLabel.length <= 0) && target instanceof GraphEdge)\n            {\n                //Assumes target is GraphEdge\n                this._graph.deleteEdge(target);\n            }\n        });\n    }\n\n    focusOnNode(node)\n    {\n    //Center workspace at focused node; inverted due to graph-to-screen space\n        this.inputController.getInputAdapter().getViewportAdapter().setOffset(-node.x, -node.y);\n    }\n\n    focusOnEdge(edge)\n    {\n    //Center workspace at focused edge; inverted due to graph-to-screen space\n        const center = edge.getCenterPoint();\n        this.inputController.getInputAdapter().getViewportAdapter().setOffset(-center.x, -center.y);\n    }\n\n    focusOnNodes(nodes)\n    {\n    //Center workspace at the average of focused nodes; inverted due to graph-to-screen space\n        const length = nodes.length;\n        let ax = 0;\n        let ay = 0;\n        for(const node of nodes)\n        {\n            ax += node.x;\n            ay += node.y;\n        }\n        this.inputController.getInputAdapter().getViewportAdapter().setOffset(-ax / length, -ay / length);\n    }\n}\n//Mixin Eventable\nEventable.mixin(GraphController);\n\nexport default GraphController;\n","import AbstractInputHandler from 'util/input/AbstractInputHandler.js';\n\nclass SelectionBoxInputHandler extends AbstractInputHandler\n{\n    constructor(inputController, graphController, selectionBox)\n    {\n        super();\n\n        this._inputController = inputController;\n        this._graphController = graphController;\n        this._selectionBox = selectionBox;\n    }\n\n    /** @override */\n    onDragStart(pointer)\n    {\n        if (!this._inputController.isMoveMode())\n        {\n            //Begin selection box...\n            this._selectionBox.beginSelection(this._graphController.getGraph(), pointer.x, pointer.y);\n            return true;\n        }\n\n        return false;\n    }\n\n    /** @override */\n    onDragMove(pointer)\n    {\n    //If the selection box is active...\n        if (this._selectionBox.isSelecting())\n        {\n            //Update the selection box\n            this._selectionBox.updateSelection(this._graphController.getGraph(), pointer.x, pointer.y);\n            return true;\n        }\n\n        return false;\n    }\n\n    /** @override */\n    onDragStop(pointer)\n    {\n    //If was trying to select...\n        if (this._selectionBox.isSelecting())\n        {\n            //Stop selecting stuff, fool.\n            this._selectionBox.endSelection(this._graphController.getGraph(), pointer.x, pointer.y);\n            return true;\n        }\n\n        return false;\n    }\n}\n\nexport default SelectionBoxInputHandler;\n","import AbstractInputHandler from 'util/input/AbstractInputHandler.js';\n\nclass ViewportInputHandler extends AbstractInputHandler\n{\n    constructor()\n    {\n        super();\n\n        this._prevX = 0;\n        this._prevY = 0;\n    }\n\n    /** @override */\n    onDragStart(pointer)\n    {\n        this._prevX = pointer.x;\n        this._prevY = pointer.y;\n        return true;\n    }\n\n    /** @override */\n    onDragMove(pointer)\n    {\n        const dx = pointer.x - this._prevX;\n        const dy = pointer.y - this._prevY;\n        const adapter = pointer.getInputAdapter();\n        const viewport = adapter.getViewportAdapter();\n        viewport.addOffset(dx, dy, true);\n        return true;\n    }\n\n    /** @override */\n    onDragStop(pointer)\n    {\n    //Do nothing. It should already be moved.\n        return true;\n    }\n}\n\nexport default ViewportInputHandler;\n","import React from 'react';\n\nexport const SUBMIT_DELAY = 30;\nexport const SUBMIT_KEY = \"Enter\";\nexport const CANCEL_KEY = \"Escape\";\n\nclass PatternInput extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.inputElement = null;\n\n    this.placeholder = \"\";\n    this.maxLength = 524288;/*This is the default value*/\n    this.multiLine = true;\n    this.formatter = null;\n\n    this._submitTimeout = null;\n    this._submit = props.submitOnBlur;\n    this._skipBlur = false;\n    this._skipSelect = false;\n\n    this.state = {\n      prevValue: \"\",\n      value: \"\"\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n  }\n\n  setFormatter(formatter)\n  {\n    this.formatter = formatter;\n    return this;\n  }\n\n  setPlaceholder(placeholder)\n  {\n    this.placeholder = placeholder;\n    return this;\n  }\n\n  onFocus(e)\n  {\n    if (this._skipSelect)\n    {\n      this.inputElement.select();\n      this._skipSelect = false;\n    }\n  }\n\n  onBlur(e)\n  {\n    if (!this._submitTimeout)\n    {\n      this._submitTimeout = setTimeout(() => {\n        this._submitTimeout = null;\n        if (this._skipBlur) return;\n\n        const submit = this._submit;\n        this._submit = this.props.submitOnBlur;\n        if (document.activeElement !== this.inputElement && submit)\n        {\n          const value = this.state.value;\n          if (this.props.onSubmit) this.props.onSubmit(value);\n\n          this.setState({prevValue: value});\n        }\n        else\n        {\n          this.setState((prev, props) => {\n            return {value: prev.prevValue};\n          });\n        }\n\n        if (this.props.onBlur) this.props.onBlur(e);\n      }, SUBMIT_DELAY);\n    }\n  }\n\n  onKeyDown(e)\n  {\n    if (e.key === SUBMIT_KEY)\n    {\n      if (e.shiftKey && this.multiLine) return;\n\n      this._submit = true;\n      this.inputElement.blur();\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    else if (e.key === CANCEL_KEY)\n    {\n      this.setState((prev, props) => {\n        return {value: prev.prevValue};\n      }, () => {\n        this._submit = false;\n        this.inputElement.blur();\n      });\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  onChange(e)\n  {\n    const target = e.target;\n    const caretPosition = target.selectionStart;\n    let value = target.value;\n    if (this.formatter)\n    {\n      value = this.formatter(value);\n    }\n\n    this.setState({value: value}, () => {\n      target.selectionEnd = caretPosition;\n    });\n  }\n\n  focus(select=true)\n  {\n    this._skipSelect = select;\n    this.inputElement.focus();\n  }\n\n  ignoreBlur(ignore)\n  {\n    const prev = this._skipBlur;\n    this._skipBlur = ignore;\n    return prev !== ignore;\n  }\n\n  appendValue(string, separator=\"\", format=true)\n  {\n    const value = this.state.value;\n    if (value && value.length + string.length > this.maxLength) return;\n\n    let result;\n    if (value && value.length > 0)\n    {\n      result = value + separator + string;\n    }\n    else\n    {\n      result = string;\n    }\n\n    if (format && this.formatter)\n    {\n      result = this.formatter(result);\n    }\n\n    this.setState((prev, props) => {\n      return {value: result};\n    });\n  }\n\n  resetValue(string)\n  {\n    this.setState({prevValue: string, value: string});\n  }\n\n  setValue(string, format=true)\n  {\n    let value = string;\n    if (format && this.formatter)\n    {\n      value = this.formatter(value);\n    }\n    this.setState({value: value});\n  }\n\n  getValue()\n  {\n    return this.state.value;\n  }\n\n  /** @override */\n  render()\n  {\n    const placeholder = this.placeholder;\n    const maxlength = this.maxLength;\n    const multiline = this.multiLine;\n    const disabled = this.props.disabled;\n\n    const value = this.state.value;\n\n    return (\n      <div id={this.props.id}\n        className={this.props.className}\n        style={this.props.style}>\n        {\n          multiline ?\n          <textarea ref={ref=>this.inputElement=ref}\n            type=\"text\" rows=\"1\" spellCheck=\"false\"\n            disabled={disabled}\n            placeholder={placeholder}\n            maxLength={maxlength}\n            value={value}\n            onChange={this.onChange}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            onKeyDown={this.onKeyDown}/>\n          :\n          <input ref={ref=>this.inputElement=ref}\n            type=\"text\" spellCheck=\"false\"\n            disabled={disabled}\n            placeholder={placeholder}\n            maxLength={maxlength}\n            value={value}\n            onChange={this.onChange}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            onKeyDown={this.onKeyDown}/>\n        }\n      </div>\n    );\n  }\n}\n\nexport default PatternInput;\n","import React from 'react';\nimport Style from './LabelEditorView.css';\n\nimport GraphElement from 'graph/elements/GraphElement.js';\n\nimport PatternInput from 'deprecated/system/patterninput/PatternInput.js';\n\nclass LabelEditorView extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.ref = null;\n        this.inputComponent = null;\n\n        this.state = {\n            open: false\n        };\n\n        this._target = null;\n        this._targetCallback = null;\n\n        this.onInputSubmit = this.onInputSubmit.bind(this);\n        this.onInputBlur = this.onInputBlur.bind(this);\n    }\n\n    openEditor(graphElement, defaultValue = null, onSubmit = null, onCancel = null)\n    {\n        if (!(graphElement instanceof GraphElement)) throw new Error('Can only open editor for GraphElements');\n\n        this._target = graphElement;\n        this._targetOnSubmit = onSubmit;\n        this._targetOnCancel = onCancel;\n\n        const formatter = this.props.labeler.getLabelFormatter(this._target);\n        this.inputComponent.setFormatter(formatter);\n\n        this.setState({ open: true }, () => \n        {\n            if (defaultValue !== null)\n            {\n                this.inputComponent.resetValue(defaultValue);\n            }\n            this.inputComponent.focus();\n        });\n    }\n\n    closeEditor()\n    {\n        this._target = null;\n        this._targetOnSubmit = null;\n        this._targetOnCancel = null;\n\n        this.inputComponent.setFormatter(null);\n\n        this.setState({ open: false });\n    }\n\n    isEditorOpen()\n    {\n        return this.state.open;\n    }\n\n    getTarget()\n    {\n        return this._target;\n    }\n\n    onInputSubmit(value)\n    {\n        if (this._targetOnSubmit)\n        {\n            this._targetOnSubmit(this._target, value);\n            //Don't handle cancel callbacks...\n            this._targetOnCancel = null;\n        }\n    }\n\n    onInputBlur(e)\n    {\n        if (this._targetOnCancel)\n        {\n            this._targetOnCancel(this._target);\n            //Don't handle submit callbacks...\n            this._targetOnSubmit = null;\n        }\n        this.closeEditor();\n    }\n\n    /** @override */\n    render()\n    {\n        const isEditorOpen = this.state.open;\n\n        const target = this._target;\n        const targetStyle = this.props.style || {};\n        const viewport = this.props.viewport;\n        //const labeler = this.props.labeler;\n\n        if (target)\n        {\n            const center = target.getCenterPoint();\n            const element = viewport.getElement();\n            const parentClientRect = element.getBoundingClientRect();\n            const screenPos = transformViewToScreen(\n                element,\n                center.x + viewport.getOffsetX(),\n                center.y + viewport.getOffsetY()\n            );\n            const x = screenPos.x;\n            const y = screenPos.y;\n            const offsetX = -(this.ref.offsetWidth / 2) - parentClientRect.left;\n            const offsetY = -(this.ref.offsetHeight / 2) - parentClientRect.top;\n\n            targetStyle['top'] = (y + offsetY) + 'px';\n            targetStyle['left'] = (x + offsetX) + 'px';\n        }\n\n        return (\n            <div ref={ref => this.ref = ref}\n                id={this.props.id}\n                className={Style.editor_container +\n                    (isEditorOpen ? ' open ' : '') +\n                    ' ' + this.props.className}\n                style={targetStyle}>\n                <PatternInput ref={ref => this.inputComponent = ref}\n                    submitOnBlur={this.props.saveOnExit}\n                    onSubmit={this.onInputSubmit}\n                    onBlur={this.onInputBlur} />\n                <div className={Style.tray_container}>\n                    {this.props.children}\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction transformViewToScreen(svg, x, y)\n{\n    const ctm = svg.getScreenCTM();\n    return {\n        x: (x * ctm.a) + ctm.e,\n        y: (y * ctm.d) + ctm.f\n    };\n}\n\nexport default LabelEditorView;\n","import React from 'react';\n\nimport LabelEditorView from './LabelEditorView.js';\nimport {RENDER_LAYER_WORKSPACE_OVERLAY} from 'session/manager/RenderManager.js';\n\nclass LabelEditorManager\n{\n    constructor(app)\n    {\n        this._app = app;\n\n        this._labelEditorComponent = React.createRef();\n        this._labelEditorRenderer = null;\n        this._labeler = null;\n    }\n\n    setLabelEditorRenderer(renderer)\n    {\n        this._labelEditorRenderer = renderer;\n        return this;\n    }\n\n    setLabeler(labeler)\n    {\n        this._labeler = labeler;\n        return this;\n    }\n\n    //DuckType(SessionListener)\n    onSessionStart(session)\n    {\n        const currentModule = session.getCurrentModule();\n        const viewport = session.getApp().getInputAdapter().getViewportAdapter();\n\n        const LabelEditorRenderer = this._labelEditorRenderer;\n        const labeler = this._labeler;\n\n        session.getApp().getRenderManager().addRenderer(RENDER_LAYER_WORKSPACE_OVERLAY, props => (\n            <LabelEditorView ref={this._labelEditorComponent}\n                labeler={labeler}\n                viewport={viewport}\n                saveOnExit={true}>\n                {/* LabelEditor objects */\n                    LabelEditorRenderer &&\n          <LabelEditorRenderer currentModule={currentModule} parent={this._labelEditorComponent.current}/>}\n            </LabelEditorView>\n        ));\n    }\n\n    //DuckType(SessionListener)\n    onSessionStop(session)\n    {\n        this._labeler = null;\n        this._labelEditorRenderer = null;\n    }\n\n    getLabelEditorComponent()\n    {\n        return this._labelEditorComponent.current;\n    }\n}\n\nexport default LabelEditorManager;\n","import InputController from 'modules/nodalgraph/controller/InputController.js';\nimport GraphController from 'modules/nodalgraph/controller/GraphController.js';\n\nimport SelectionBoxInputHandler from 'modules/nodalgraph/controller/SelectionBoxInputHandler.js';\nimport ViewportInputHandler from 'modules/nodalgraph/controller/ViewportInputHandler.js';\n\nimport LabelEditorManager from 'session/manager/labeleditor/LabelEditorManager.js';\n\nimport {WARNING_LAYOUT_ID} from 'session/manager/notification/NotificationManager.js';\n\nexport const TRASH_EDITING_NOTIFICATION_TAG = 'tryCreateWhileTrash';\n\nclass NodalGraphInputManager\n{\n    constructor(currentModule, nodalGraph, graphLabeler, graphParser, labelEditorRenderer)\n    {\n        this._graphController = new GraphController(currentModule, nodalGraph, graphLabeler, graphParser);\n\n        this._labelEditorManager = new LabelEditorManager(currentModule.getApp())\n            .setLabelEditorRenderer(labelEditorRenderer)\n            .setLabeler(graphLabeler);\n\n        this._inputController = null;\n        this._selectionBoxInputHandler = null;\n        this._viewportInputHandler = null;\n    }\n\n    //Not yet implemented\n    setGraphLabeler(labeler)\n    {\n        this._graphLabeler = labeler;\n        return this;\n    }\n\n    //Not yet implemented\n    setGraphParser(parser)\n    {\n        this._graphParser = parser;\n        return this;\n    }\n\n    update(currentModule)\n    {\n        const inputController = this.getInputController();\n        const graphController = this.getGraphController();\n        inputController.update(currentModule);\n        graphController.update(currentModule);\n    }\n\n    //DuckType(SessionListener)\n    onSessionStart(session)\n    {\n        const app = session.getApp();\n        const currentModule = session.getCurrentModule();\n\n        this._inputController = new InputController(currentModule, currentModule.getApp().getInputAdapter());\n        this._selectionBoxInputHandler = new SelectionBoxInputHandler(this._inputController, this._graphController, this._inputController.getSelectionBox());\n        this._viewportInputHandler = new ViewportInputHandler();\n\n        currentModule.getApp().getInputAdapter()\n            .addInputHandler(this._inputController)\n            .addInputHandler(this._selectionBoxInputHandler)\n            .addInputHandler(this._viewportInputHandler);\n\n        const inputController = this.getInputController();\n        const graphController = this.getGraphController();\n        inputController.initialize(currentModule);\n        graphController.initialize(currentModule);\n\n        this._labelEditorManager.onSessionStart(session);\n\n        //Notify on create in delete mode\n        const tryCreateWhileTrash = () => \n        {\n            if (this._inputController.isTrashMode())\n            {\n                app.getNotificationManager().pushNotification(\n                    I18N.toString('message.warning.cannotmodify'),\n                    WARNING_LAYOUT_ID, TRASH_EDITING_NOTIFICATION_TAG, null, true);\n            }\n        };\n        this._graphController.on('tryCreateWhileTrash', tryCreateWhileTrash);\n    }\n\n    //DuckType(SessionListener)\n    onSessionStop(session)\n    {\n        session.getApp().getInputAdapter()\n            .removeInputHandler(this._inputController)\n            .removeInputHandler(this._selectionBoxInputHandler)\n            .removeInputHandler(this._viewportInputHandler);\n\n        this._labelEditorManager.onSessionStop(session);\n\n        const currentModule = session.getCurrentModule();\n        const inputController = this.getInputController();\n        const graphController = this.getGraphController();\n        graphController.destroy(currentModule);\n        inputController.destroy(currentModule);\n    }\n\n    getLabelEditorManager() { return this._labelEditorManager; }\n    getGraphParser() { return this._graphController.getGraphParser(); }\n    getGraphLabeler() { return this._graphController.getGraphLabeler(); }\n    getGraphController() { return this._graphController; }\n    getInputController() { return this._inputController; }\n}\n\nexport default NodalGraphInputManager;\n","//https://www.flaticon.com/free-icon/png_136523\nimport React from 'react';\n\nclass PNGIcon extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    return <svg className=\"png-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 56 56\">\n      <g>\n        <path fill=\"#E9E9E0\" d=\"M36.985,0H7.963C7.155,0,6.5,0.655,6.5,1.926V55c0,0.345,0.655,1,1.463,1h40.074 c0.808,0,1.463-0.655,1.463-1V12.978c0-0.696-0.093-0.92-0.257-1.085L37.607,0.257C37.442,0.093,37.218,0,36.985,0z\"/>\n        <path fill=\"#659C35\" d=\"M48.037,56H7.963C7.155,56,6.5,55.345,6.5,54.537V39h43v15.537C49.5,55.345,48.845,56,48.037,56z\"/>\n        <polygon fill=\"#D9D7CA\" points=\"37.5,0.151 37.5,12 49.349,12 \t\"/>\n        <g>\n          <path fill=\"#FFFFFF\" d=\"M17.385,53h-1.641V42.924h2.898c0.428,0,0.852,0.068,1.271,0.205 c0.419,0.137,0.795,0.342,1.128,0.615c0.333,0.273,0.602,0.604,0.807,0.991s0.308,0.822,0.308,1.306 c0,0.511-0.087,0.973-0.26,1.388c-0.173,0.415-0.415,0.764-0.725,1.046c-0.31,0.282-0.684,0.501-1.121,0.656 s-0.921,0.232-1.449,0.232h-1.217V53z M17.385,44.168v3.992h1.504c0.2,0,0.398-0.034,0.595-0.103 c0.196-0.068,0.376-0.18,0.54-0.335c0.164-0.155,0.296-0.371,0.396-0.649c0.1-0.278,0.15-0.622,0.15-1.032 c0-0.164-0.023-0.354-0.068-0.567c-0.046-0.214-0.139-0.419-0.28-0.615c-0.142-0.196-0.34-0.36-0.595-0.492 c-0.255-0.132-0.593-0.198-1.012-0.198H17.385z\"/>\n          <path fill=\"#FFFFFF\" d=\"M31.316,42.924V53h-1.668l-3.951-6.945V53h-1.668V42.924h1.668l3.951,6.945v-6.945H31.316z\"/>\n          <path fill=\"#FFFFFF\" d={\"M41.16,47.805v3.896c-0.21,0.265-0.444,0.48-0.704,0.649s-0.533,0.308-0.82,0.417 \" +\n            \"S39.052,52.954,38.747,53c-0.306,0.046-0.608,0.068-0.909,0.068c-0.602,0-1.155-0.109-1.661-0.328s-0.948-0.542-1.326-0.971 \" +\n            \"c-0.378-0.429-0.675-0.966-0.889-1.613c-0.214-0.647-0.321-1.395-0.321-2.242s0.107-1.593,0.321-2.235 \" +\n            \"c0.214-0.643,0.51-1.178,0.889-1.606c0.378-0.429,0.822-0.754,1.333-0.978c0.51-0.224,1.062-0.335,1.654-0.335 \" +\n            \"c0.547,0,1.057,0.091,1.531,0.273c0.474,0.183,0.897,0.456,1.271,0.82l-1.135,1.012c-0.219-0.265-0.47-0.456-0.752-0.574 \" +\n            \"c-0.283-0.118-0.574-0.178-0.875-0.178c-0.337,0-0.659,0.063-0.964,0.191c-0.306,0.128-0.579,0.344-0.82,0.649 \" +\n            \"c-0.242,0.306-0.431,0.699-0.567,1.183s-0.21,1.075-0.219,1.777c0.009,0.684,0.08,1.276,0.212,1.777 \" +\n            \"c0.132,0.501,0.314,0.911,0.547,1.23s0.497,0.556,0.793,0.711c0.296,0.155,0.608,0.232,0.937,0.232c0.1,0,0.234-0.007,0.403-0.021 \" +\n            \"c0.168-0.014,0.337-0.036,0.506-0.068c0.168-0.032,0.33-0.075,0.485-0.13c0.155-0.055,0.269-0.132,0.342-0.232v-2.488h-1.709 v-1.121H41.16z\"}/>\n        </g>\n        <circle fill=\"#F3D55B\" cx=\"18.931\" cy=\"14.431\" r=\"4.569\"/>\n        <polygon fill=\"#88C057\" points=\"6.5,39 17.5,39 49.5,39 49.5,28 39.5,18.5 29,30 23.517,24.517 \t\"/>\n      </g>\n    </svg>;\n  }\n}\n\nexport default PNGIcon;\n","//https://www.flaticon.com/free-icon/jpg_136524\nimport React from 'react';\n\nclass JPGIcon extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    return <svg className=\"jpg-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 56 56\">\n      <g>\n        <path fill=\"#E9E9E0\" d=\"M36.985,0H7.963C7.155,0,6.5,0.655,6.5,1.926V55c0,0.345,0.655,1,1.463,1h40.074 c0.808,0,1.463-0.655,1.463-1V12.978c0-0.696-0.093-0.92-0.257-1.085L37.607,0.257C37.442,0.093,37.218,0,36.985,0z\"/>\n        <polygon fill=\"#D9D7CA\" points=\"37.5,0.151 37.5,12 49.349,12 \t\"/>\n        <circle fill=\"#F3D55B\" cx=\"18.931\" cy=\"14.431\" r=\"4.569\"/>\n        <polygon fill=\"#26B99A\" points=\"6.5,39 17.5,39 49.5,39 49.5,28 39.5,18.5 29,30 23.517,24.517 \t\"/>\n        <path fill=\"#14A085\" d=\"M48.037,56H7.963C7.155,56,6.5,55.345,6.5,54.537V39h43v15.537C49.5,55.345,48.845,56,48.037,56z\"/>\n        <g>\n          <path fill=\"#FFFFFF\" d={\"M21.426,42.65v7.848c0,0.474-0.087,0.873-0.26,1.196c-0.173,0.323-0.406,0.583-0.697,0.779 \" +\n            \"c-0.292,0.196-0.627,0.333-1.005,0.41C19.085,52.961,18.696,53,18.295,53c-0.201,0-0.436-0.021-0.704-0.062 \" +\n            \"c-0.269-0.041-0.547-0.104-0.834-0.191s-0.563-0.185-0.827-0.294c-0.265-0.109-0.488-0.232-0.67-0.369l0.697-1.107 \" +\n            \"c0.091,0.063,0.221,0.13,0.39,0.198c0.168,0.068,0.353,0.132,0.554,0.191c0.2,0.06,0.41,0.111,0.629,0.157 \" +\n            \"s0.424,0.068,0.615,0.068c0.483,0,0.868-0.094,1.155-0.28s0.439-0.504,0.458-0.95V42.65H21.426z\"}/>\n          <path fill=\"#FFFFFF\" d={\"M25.514,52.932h-1.641V42.855h2.898c0.428,0,0.852,0.068,1.271,0.205 \" +\n            \"c0.419,0.137,0.795,0.342,1.128,0.615c0.333,0.273,0.602,0.604,0.807,0.991s0.308,0.822,0.308,1.306 \" +\n            \"c0,0.511-0.087,0.973-0.26,1.388c-0.173,0.415-0.415,0.764-0.725,1.046c-0.31,0.282-0.684,0.501-1.121,0.656 \" +\n            \"s-0.921,0.232-1.449,0.232h-1.217V52.932z M25.514,44.1v3.992h1.504c0.2,0,0.398-0.034,0.595-0.103 \" +\n            \"c0.196-0.068,0.376-0.18,0.54-0.335s0.296-0.371,0.396-0.649c0.1-0.278,0.15-0.622,0.15-1.032c0-0.164-0.023-0.354-0.068-0.567 \" +\n            \"c-0.046-0.214-0.139-0.419-0.28-0.615c-0.142-0.196-0.34-0.36-0.595-0.492C27.5,44.166,27.163,44.1,26.744,44.1H25.514z\"}/>\n          <path fill=\"#FFFFFF\" d={\"M39.5,47.736v3.896c-0.21,0.265-0.444,0.48-0.704,0.649s-0.533,0.308-0.82,0.417 \" +\n            \"s-0.583,0.187-0.889,0.232C36.781,52.978,36.479,53,36.178,53c-0.602,0-1.155-0.109-1.661-0.328s-0.948-0.542-1.326-0.971 \" +\n            \"c-0.378-0.429-0.675-0.966-0.889-1.613c-0.214-0.647-0.321-1.395-0.321-2.242s0.107-1.593,0.321-2.235 \" +\n            \"c0.214-0.643,0.51-1.178,0.889-1.606c0.378-0.429,0.822-0.754,1.333-0.978c0.51-0.224,1.062-0.335,1.654-0.335 \" +\n            \"c0.547,0,1.057,0.091,1.531,0.273c0.474,0.183,0.897,0.456,1.271,0.82l-1.135,1.012c-0.219-0.265-0.47-0.456-0.752-0.574 \" +\n            \"c-0.283-0.118-0.574-0.178-0.875-0.178c-0.337,0-0.659,0.063-0.964,0.191c-0.306,0.128-0.579,0.344-0.82,0.649 \" +\n            \"c-0.242,0.306-0.431,0.699-0.567,1.183s-0.21,1.075-0.219,1.777c0.009,0.684,0.08,1.276,0.212,1.777 \" +\n            \"c0.132,0.501,0.314,0.911,0.547,1.23s0.497,0.556,0.793,0.711c0.296,0.155,0.608,0.232,0.937,0.232c0.1,0,0.234-0.007,0.403-0.021 \" +\n            \"c0.168-0.014,0.337-0.036,0.506-0.068c0.168-0.032,0.33-0.075,0.485-0.13c0.155-0.055,0.269-0.132,0.342-0.232v-2.488h-1.709 \" +\n            \"v-1.121H39.5z\"}/>\n        </g>\n      </g>\n    </svg>;\n  }\n}\n\nexport default JPGIcon;\n","import React from 'react';\n\nclass SVGIcon extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  /** @override */\n  render()\n  {\n    return <svg className=\"svg-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 56 56\">\n    \t<g>\n    \t\t<path fill=\"#E9E9E0\" d=\"M36.985,0H7.963C7.155,0,6.5,0.655,6.5,1.926V55c0,0.345,0.655,1,1.463,1h40.074\n    \t\tc0.808,0,1.463-0.655,1.463-1V12.978c0-0.696-0.093-0.92-0.257-1.085L37.607,0.257C37.442,0.093,37.218,0,36.985,0z\"/>\n    \t\t<polygon fill=\"#D9D7CA\" points=\"37.5,0.151 37.5,12 49.349,12 \t\"/>\n    \t\t<path fill=\"#E57E25\" d=\"M48.037,56H7.963C7.155,56,6.5,55.345,6.5,54.537V39h43v15.537C49.5,55.345,48.845,56,48.037,56z\"/>\n    \t\t<g>\n    \t\t\t<path fill=\"#FFFFFF\"\n    \t\t\t\td=\"M21.459,50.238c0,0.364-0.075,0.718-0.226,1.06s-0.362,0.643-0.636,0.902s-0.61,0.467-1.012,0.622\n    \t\t\ts-0.856,0.232-1.367,0.232c-0.219,0-0.444-0.012-0.677-0.034s-0.467-0.062-0.704-0.116s-0.463-0.13-0.677-0.226\n    \t\t\ts-0.398-0.212-0.554-0.349l0.287-1.176c0.128,0.073,0.289,0.144,0.485,0.212s0.398,0.132,0.608,0.191s0.419,0.107,0.629,0.144\n    \t\t\ts0.405,0.055,0.588,0.055c0.556,0,0.982-0.13,1.278-0.39c0.296-0.26,0.444-0.645,0.444-1.155c0-0.31-0.104-0.574-0.314-0.793\n    \t\t\ts-0.472-0.417-0.786-0.595s-0.654-0.355-1.019-0.533s-0.706-0.388-1.025-0.629s-0.583-0.526-0.793-0.854s-0.314-0.738-0.314-1.23\n    \t\t\tc0-0.446,0.082-0.843,0.246-1.189s0.385-0.641,0.663-0.882s0.602-0.426,0.971-0.554s0.759-0.191,1.169-0.191\n    \t\t\tc0.419,0,0.843,0.039,1.271,0.116s0.774,0.203,1.039,0.376c-0.055,0.118-0.118,0.248-0.191,0.39s-0.142,0.273-0.205,0.396\n    \t\t\ts-0.118,0.226-0.164,0.308s-0.073,0.128-0.082,0.137c-0.055-0.027-0.116-0.063-0.185-0.109s-0.166-0.091-0.294-0.137\n    \t\t\ts-0.296-0.077-0.506-0.096s-0.479-0.014-0.807,0.014c-0.183,0.019-0.355,0.07-0.52,0.157s-0.31,0.193-0.438,0.321\n    \t\t\ts-0.228,0.271-0.301,0.431s-0.109,0.313-0.109,0.458c0,0.364,0.104,0.658,0.314,0.882s0.47,0.419,0.779,0.588\n    \t\t\ts0.647,0.333,1.012,0.492s0.704,0.354,1.019,0.581s0.576,0.513,0.786,0.854S21.459,49.7,21.459,50.238z\"/>\n    \t\t\t<path fill=\"#FFFFFF\" d=\"M25.861,53.055L22.73,42.924h1.873l2.338,8.695l2.475-8.695h1.859l-3.281,10.131H25.861z\"/>\n    \t\t\t<path fill=\"#FFFFFF\"\n    \t\t\t\td=\"M40.668,47.805v3.896c-0.21,0.265-0.444,0.48-0.704,0.649s-0.533,0.308-0.82,0.417\n    \t\t\tS38.561,52.954,38.255,53s-0.608,0.068-0.909,0.068c-0.602,0-1.155-0.109-1.661-0.328s-0.948-0.542-1.326-0.971\n    \t\t\ts-0.675-0.966-0.889-1.613s-0.321-1.395-0.321-2.242s0.107-1.593,0.321-2.235s0.511-1.178,0.889-1.606s0.822-0.754,1.333-0.978\n    \t\t\ts1.062-0.335,1.654-0.335c0.547,0,1.058,0.091,1.531,0.273s0.897,0.456,1.271,0.82l-1.135,1.012\n    \t\t\tc-0.219-0.265-0.47-0.456-0.752-0.574s-0.574-0.178-0.875-0.178c-0.337,0-0.658,0.063-0.964,0.191s-0.579,0.344-0.82,0.649\n    \t\t\ts-0.431,0.699-0.567,1.183s-0.21,1.075-0.219,1.777c0.009,0.684,0.08,1.276,0.212,1.777s0.314,0.911,0.547,1.23\n    \t\t\ts0.497,0.556,0.793,0.711s0.608,0.232,0.937,0.232c0.101,0,0.234-0.007,0.403-0.021s0.337-0.036,0.506-0.068\n    \t\t\ts0.33-0.075,0.485-0.13s0.269-0.132,0.342-0.232v-2.488h-1.709v-1.121H40.668z\"/>\n    \t\t</g>\n    \t\t<path fill=\"#C8BDB8\"\n    \t\t\td=\"M45.5,22v-6h-6v2h-6v-4h-10v4h-6v-2h-6v6h6v-2h3.548c-4.566,2.636-7.548,7.588-7.548,13\n    \t\tc0,0.552,0.447,1,1,1s1-0.448,1-1c0-5.246,3.229-9.999,8-11.995V24h10v-2.995c4.771,1.997,8,6.75,8,11.995c0,0.552,0.447,1,1,1\n    \t\ts1-0.448,1-1c0-5.412-2.982-10.364-7.548-13H39.5v2H45.5z M15.5,20h-2v-2h2V20z M31.5,22h-6v-3.754V16h6v2.246V22z M41.5,18h2v2h-2\n    \t\tV18z\"/>\n    \t</g>\n    </svg>;\n  }\n}\n\nexport default SVGIcon;\n","import SessionExporter from 'session/SessionExporter.js';\n\nimport PNGIcon from 'deprecated/icons/flat/PNGIcon.js';\nimport JPGIcon from 'deprecated/icons/flat/JPGIcon.js';\nimport SVGIcon from 'deprecated/icons/flat/SVGIcon.js';\n\nexport const IMAGE_TYPE_PNG = 'png';\nexport const IMAGE_TYPE_JPG = 'jpg';\nexport const IMAGE_TYPE_SVG = 'svg';\n\nconst EXPORT_PADDING_X = 30;\nconst EXPORT_PADDING_Y = 0;\n\nclass NodalGraphImageExporter extends SessionExporter\n{\n    constructor(imageType=IMAGE_TYPE_PNG)\n    {\n        super();\n        this._imageType = imageType;\n    }\n\n    /** @override */\n    exportTarget(exportType, target)\n    {\n        const session = target;\n        const currentModule = session.getCurrentModule();\n        const fileName = session.getProjectName();\n        const workspace = session.getApp().getWorkspaceComponent();\n        const svgElement = workspace.getSVGElement();\n        const workspaceDim = svgElement.viewBox.baseVal;\n        const width = workspaceDim.width;\n        const height = workspaceDim.height;\n        const svg = this.processSVGForExport(svgElement, width, height, currentModule);\n\n        return Promise.resolve({\n            name: fileName + '.' + this._imageType,\n            type: 'image',\n            data: svg,\n            width: width,\n            height: height,\n            'image-type': this._imageType\n        });\n    }\n\n    processSVGForExport(element, width, height, currentModule)\n    {\n        const graphController = currentModule.getGraphController();\n\n        const viewport = currentModule.getApp().getInputAdapter().getViewportAdapter();\n        const offsetX = viewport.getOffsetX();\n        const offsetY = viewport.getOffsetY();\n        const bounds = graphController.getGraph().getBoundingRect();\n        const dx = bounds.minX + offsetX - EXPORT_PADDING_X;\n        const dy = bounds.minY + offsetY - EXPORT_PADDING_Y;\n        const w = bounds.width + EXPORT_PADDING_X * 2;\n        const h = bounds.height + EXPORT_PADDING_Y * 2;\n        const clone = element.cloneNode(true);\n        clone.setAttribute('viewBox', dx + ' ' + dy + ' ' + w + ' ' + h);\n        clone.setAttribute('width', width);\n        clone.setAttribute('height', height);\n\n        //Apply the workspace font (refer to Workspace.css)\n        clone.setAttribute('font-size', '16px');\n        clone.setAttribute('font-family', 'monospace');\n        clone.setAttribute('style', '.graph-ui {display: none;}');\n\n        /*\n        const nodeColor = styleOpts.getOptionByProp(\"--color-graph-node\").getStyle();\n        const textColor = styleOpts.getOptionByProp(\"--color-graph-text\").getStyle();\n        console.log(nodeColor);\n        const styleString = \"* {\"\n        + \"--color-graph-node: blue;\"\n        + \"--color-graph-text: \" + textColor + \";\"\n        + \"}\";\n        */\n\n        /*\n        //TODO: Link the font family to svg\n        const link = document.createElement(\"link\");\n        link.setAttribute(\"rel\", \"stylesheet\");\n        clone.appendChild(link);\n        */\n\n        //Remove unwanted ui elements from image\n        const uiElements = clone.getElementsByClassName('graph-ui');\n        while(uiElements.length > 0)\n        {\n            const e = uiElements[0];\n            e.remove();//This will propagate changes to uiElements, so be careful\n        }\n\n        return clone;\n    }\n\n    /** @override */\n    getIconClass()\n    {\n        switch(this._imageType)\n        {\n        case IMAGE_TYPE_PNG: return PNGIcon;\n        case IMAGE_TYPE_JPG: return JPGIcon;\n        case IMAGE_TYPE_SVG: return SVGIcon;\n        default: return null;\n        }\n    }\n\n    /** @override */\n    getLabel()\n    {\n        switch(this._imageType)\n        {\n        case IMAGE_TYPE_PNG: return I18N.toString('file.export.png');\n        case IMAGE_TYPE_JPG: return I18N.toString('file.export.jpg');\n        case IMAGE_TYPE_SVG: return I18N.toString('file.export.svg');\n        default: return super.getLabel();\n        }\n    }\n\n    /** @override */\n    getTitle()\n    {\n        switch(this._imageType)\n        {\n        case IMAGE_TYPE_PNG: return I18N.toString('file.export.png.hint');\n        case IMAGE_TYPE_JPG: return I18N.toString('file.export.jpg.hint');\n        case IMAGE_TYPE_SVG: return I18N.toString('file.export.svg.hint');\n        default: return super.getTitle();\n        }\n    }\n\n    getImageType()\n    {\n        return this._imageType;\n    }\n}\n\nexport const IMAGE_EXPORTERS = [\n    new NodalGraphImageExporter(IMAGE_TYPE_PNG),\n    new NodalGraphImageExporter(IMAGE_TYPE_JPG),\n    new NodalGraphImageExporter(IMAGE_TYPE_SVG)\n];\n\nexport function registerImageExporters(exportManager)\n{\n    for(const exporter of IMAGE_EXPORTERS)\n    {\n        exportManager.registerExporter(exporter, 'image-' + exporter.getImageType());\n    }\n}\n\nexport default NodalGraphImageExporter;\n","import React from 'react';\n\nclass BoxRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const visible = this.props.visible;\n        const fromX = this.props.fromX || 0;\n        const fromY = this.props.fromY || 0;\n        const toX = this.props.toX || fromX + 1;\n        const toY = this.props.toY || fromY + 1;\n\n        const dx = toX - fromX;\n        const dy = toY - fromY;\n\n        return (\n            <g className=\"graph-selection-container\">\n                { visible &&\n        <rect className=\"graph-selection\"\n            x={dx < 0 ? toX : fromX}\n            y={dy < 0 ? toY : fromY}\n            width={dx < 0 ? -dx : dx}\n            height={dy < 0 ? -dy : dy}/> }\n            </g>\n        );\n    }\n}\n\nexport default BoxRenderer;\n","import React from 'react';\n\nconst CURSOR_RADIUS = 4;\nconst NODE_RADIUS = 16;\nconst EDGE_RADIUS = 12;\nconst ENDPOINT_RADIUS = 6;\nconst INITIAL_MARKER_OFFSET_X = -(NODE_RADIUS + (NODE_RADIUS / 2));\n\nconst HIGHLIGHT_RADIUS_OFFSET = 4;\nconst HIGHLIGHT_LINE_WIDTH = 3;\nconst HIGHLIGHT_LINE_ARRAY = [8, 6];\n\nclass HighlightRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const target = this.props.target;\n        const type = this.props.type;\n\n        let x = 0;\n        let y = 0;\n        let r = CURSOR_RADIUS;\n        let point;\n        switch(type)\n        {\n        case 'node':\n            x = target.x || 0;\n            y = target.y || 0;\n            r = NODE_RADIUS;\n            break;\n        case 'edge':\n            point = target.getCenterPoint();\n            x = point.x || 0;\n            y = point.y || 0;\n            r = EDGE_RADIUS;\n            break;\n        case 'endpoint':\n            point = target.getEndPoint();\n            x = point.x || 0;\n            y = point.y || 0;\n            r = ENDPOINT_RADIUS;\n            break;\n        case 'initial':\n            x = target.x + INITIAL_MARKER_OFFSET_X;\n            y = target.y || 0;\n            r = EDGE_RADIUS;\n            break;\n        }\n\n        return (\n            <g className=\"graph-highlight-container\">\n                <circle className={'graph-highlight ' + this.props.className}\n                    cx={x} cy={y}\n                    r={r + HIGHLIGHT_RADIUS_OFFSET}\n                    strokeDashoffset={this.props.offset || 0}\n                    strokeDasharray={HIGHLIGHT_LINE_ARRAY}\n                    strokeWidth={HIGHLIGHT_LINE_WIDTH}\n                    fill=\"none\"/>\n            </g>\n        );\n    }\n}\n\nexport default HighlightRenderer;\n","import React from 'react';\n\nimport BoxRenderer from './BoxRenderer.js';\nimport HighlightRenderer from './HighlightRenderer.js';\n\nclass SelectionBoxRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const currentModule = this.props.currentModule;\n\n        const graphController = currentModule.getGraphController();\n        const inputController = currentModule.getInputController();\n\n        const graph = graphController.getGraph();\n        const selectionBox = inputController.getSelectionBox();\n        const selectionBoundingBox = selectionBox.getSelectionBox();\n\n        return (\n            <g>\n                {/* Selected elements */}\n                { selectionBox &&\n          selectionBox.hasSelection() &&\n          selectionBox.getSelection(graph).map((e, i) =>\n              <HighlightRenderer key={e.getGraphElementID()}\n                  className={inputController.isTrashMode() ?\n                      'highlight-error' :\n                      'highlight-select'}\n                  target={e} type=\"node\"/>) }\n\n                {/* Selection box */}\n                { selectionBoundingBox &&\n          <BoxRenderer visible={selectionBoundingBox.visible}\n              fromX={selectionBoundingBox.fromX} fromY={selectionBoundingBox.fromY}\n              toX={selectionBoundingBox.toX} toY={selectionBoundingBox.toY}/> }\n            </g>\n        );\n    }\n}\n\nexport default SelectionBoxRenderer;\n","import React from 'react';\n\nimport SelectionBoxRenderer from './SelectionBoxRenderer.js';\nimport HighlightRenderer from './HighlightRenderer.js';\n\nclass GraphInputRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n    //Inherits props from parent\n        const currentModule = this.props.currentModule;\n\n        const inputController = currentModule.getInputController();\n\n        const picker = inputController.getPicker();\n        const selectionBox = inputController.getSelectionBox();\n\n        return (\n            <g>\n                <SelectionBoxRenderer currentModule={currentModule}/>\n\n                {/* Node test targets */}\n                { currentModule._tester &&\n          currentModule._tester.targets &&\n          currentModule._tester.targets.map((e, i) => \n          {\n              return <HighlightRenderer key={e.getGraphElementID()}\n                  className=\"highlight-test graph-gui\"\n                  target={e} type=\"node\" offset=\"6\"/>;\n          })}\n\n                {/* Hover markers */}\n                { picker &&\n          picker.hasTarget() &&\n          !selectionBox.isTargetInSelection(picker.target) &&\n          <HighlightRenderer className={inputController.isTrashMode() ?\n              'highlight-error' :\n              'highlight-select'}\n          target={picker.target}\n          type={picker.targetType}/> }\n            </g>\n        );\n    }\n}\n\nexport default GraphInputRenderer;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './TapeWidget.css';\n\nimport DownArrowIcon from 'components/iconset/DownArrowIcon.js';\n\nconst TAPE_INFINITE_LEFT = true;\nconst TAPE_INFINITE_RIGHT = true;\n\nclass TapeWidget extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.onTapeStepBackward = this.onTapeStepBackward.bind(this);\n        this.onTapeStepForward = this.onTapeStepForward.bind(this);\n        this.onTapeFinish = this.onTapeFinish.bind(this);\n        this.onTapeReset = this.onTapeReset.bind(this);\n        this.onTapeSkipForward = this.onTapeSkipForward.bind(this);\n        this.onTapeSkipBackward = this.onTapeSkipBackward.bind(this);\n        this.onTapeStop = this.onTapeStop.bind(this);\n    }\n\n    onTapeStepBackward(e)\n    {\n        const tapeContext = this.props.value;\n        tapeContext.stepBackward();\n    }\n\n    onTapeStepForward(e)\n    {\n        const tapeContext = this.props.value;\n        tapeContext.stepForward();\n    }\n\n    onTapeSkipForward(e)\n    {\n    }\n\n    onTapeSkipBackward(e)\n    {\n    }\n\n    onTapeReset(e)\n    {\n        const tapeContext = this.props.value;\n        tapeContext.reset();\n    }\n\n    onTapeFinish(e)\n    {\n        const tapeContext = this.props.value;\n        tapeContext.finish();\n    }\n\n    onTapeStop(e)\n    {\n        const tapeContext = this.props.value;\n        tapeContext.stop();\n    }\n\n    /** @override */\n    render()\n    {\n        const showTransitionStates = true;\n        const tapeContext = this.props.value;\n        const tapeIndex = tapeContext ? tapeContext.getCurrentTapeIndex() : -1;\n\n        if (!tapeContext) return null;\n\n        return (\n            <div id={this.props.id}\n                className={Style.tape_container +\n        ' ' + this.props.className}\n                style={this.props.style}>\n\n                <div className={Style.tape_control_tray}>\n                    <button onClick={this.onTapeStepBackward}>BACK</button>\n                    <button onClick={this.onTapeStepForward}>STEP</button>\n                    <button onClick={this.onTapeReset}>RESET</button>\n                    <button onClick={this.onTapeFinish}>TO END</button>\n                </div>\n\n                <div className={Style.tape_control_tray}>\n                    <button onClick={this.onTapeSkipForward}>SKIP TO NEXT</button>\n                    <button onClick={this.onTapeSkipBackward}>SKIP TO PREV</button>\n                    <button onClick={this.onTapeStop}>STOP</button>\n                </div>\n\n                <div className={'tape-row'}>\n\n                    {TAPE_INFINITE_LEFT && tapeContext.isTapeLeftInfinite() &&\n            <div className=\"tape-row-entry infinite\">\n                <span className=\"tape-row-states\"></span>\n                <label className=\"tape-row-symbol\">{'...'}</label>\n            </div>}\n\n                    <DownArrowIcon\n                        className=\"tape-pointer\"\n                        style={{opacity: tapeIndex < 0 ? 0 : 1, left: tapeIndex + 'em'}}/>\n\n                    {tapeContext.getTapeInput().map((e, i) => \n                    {\n                        let active = false;\n                        let activeRead = false;\n                        active = tapeIndex === i;\n                        activeRead = tapeIndex === i - 1;\n                        /*\n            const currentIndex = Math.floor(tapeIndex / 2);\n            if (currentIndex === i)\n            {\n              //It's the current index...\n              active = tapeIndex % 2 === 1;\n              activeRead = tapeIndex % 2 === 0;\n            }\n            else if (currentIndex === i + 1)\n            {\n              //It's the previous index...\n              active = tapeIndex % 2 === 0;\n            }\n            */\n\n                        const sourceStates = tapeContext.getTapeSourceStatesByIndex(i);\n                        const disabled = sourceStates === null;\n                        return (\n                            <div key={e + ':' + i} className={'tape-row-entry' +\n                (active ? ' active ' : '') +\n                (activeRead ? ' active-read ' : '') +\n                (disabled ? ' disabled ' : '')}\n                            onClick={(e) => (!disabled ? tapeContext.setCurrentTapeIndex(i) : null)}>\n                                {showTransitionStates &&\n                  sourceStates &&\n                  <span className=\"tape-row-states\">\n                      {sourceStates.map(sourceState => \n                      {\n                          return (\n                              <label key={sourceState.getGraphElementID()}>\n                                  {sourceState.getNodeLabel()}\n                              </label>\n                          );\n                      })}\n                  </span>}\n                                <label className=\"tape-row-symbol\">\n                                    {e}\n                                </label>\n                            </div>\n                        );\n                    })}\n\n                    {TAPE_INFINITE_RIGHT && tapeContext.isTapeRightInfinite() &&\n            <div className=\"tape-row-entry infinite\">\n                <span className=\"tape-row-states\"></span>\n                <label className=\"tape-row-symbol\">{'...'}</label>\n            </div>}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TapeWidget;\n","class MachineChangeHandler\n{\n    constructor()\n    {\n        this._listeners = [];\n    }\n\n    addListener(listener)\n    {\n        if (typeof listener !== 'function')\n            throw new Error('Cannot add uncallable listener');\n        this._listeners.push(listener);\n    }\n\n    removeListener(listener)\n    {\n        const i = this._listeners.indexOf(listener);\n        if (i >= 0)\n        {\n            this._listeners.splice(i, 1);\n            return true;\n        }\n        return false;\n    }\n\n    clearListeners()\n    {\n        this._listeners.length = 0;\n    }\n\n    getListeners()\n    {\n        return this._listeners;\n    }\n\n    update(machineBuilder)\n    {\n        for (const listener of this._listeners)\n        {\n            listener(machineBuilder);\n        }\n    }\n}\n\nexport default MachineChangeHandler;\n","import MachineChangeHandler from 'experimental/MachineChangeHandler.js';\n\nclass AbstractMachineBuilder\n{\n    constructor()\n    {\n        this._machineChangeHandler = new MachineChangeHandler();\n\n        this._errors = [];\n        this._warnings = [];\n\n        this.onGraphChange = this.onGraphChange.bind(this);\n    }\n\n    initialize(module)\n    {\n        module.getGraphController().getGraphChangeHandler().addListener(this.onGraphChange);\n    }\n\n    destroy(module)\n    {\n        module.getGraphController().getGraphChangeHandler().removeListener(this.onGraphChange);\n    }\n\n    onGraphChange(graph)\n    {\n        this.attemptBuildMachine(graph, this.getMachine(), this._errors, this._warnings);\n        this._machineChangeHandler.update(this);\n    }\n\n    attemptBuildGraph(machine, dst)\n    {\n        throw new Error('Missing graph build operation');\n    }\n\n    attemptBuildMachine(graph, dst, errors, warnings)\n    {\n        throw new Error('Missing machine build operation');\n    }\n\n    getMachineErrors()\n    {\n        return this._errors;\n    }\n\n    getMachineWarnings()\n    {\n        return this._warnings;\n    }\n\n    getMachineChangeHandler()\n    {\n        return this._machineChangeHandler;\n    }\n\n    isMachineValid()\n    {\n        return this._errors.length <= 0;\n    }\n\n    getMachine()\n    {\n        throw new Error('Missing machine for builder');\n    }\n}\n\nexport default AbstractMachineBuilder;\n","import GraphElement from 'graph/elements/GraphElement.js';\nimport { guid, stringHash } from 'util/MathHelper.js';\n\n// const FROM_STATE_INDEX = 0;\nconst READ_SYMBOL_INDEX = 1;\nconst TO_STATE_INDEX = 2;\nconst POP_SYMBOL_INDEX = 3;\nconst PUSH_SYMBOL_INDEX = 4;\n\nexport const EMPTY_SYMBOL = '&empty';\n\nexport class State\n{\n    constructor(label='', src=null)\n    {\n        this._label = label;\n\n        this._src = src;\n        this._id = src instanceof GraphElement ? src.getGraphElementID() : guid();\n    }\n\n    copy()\n    {\n        const result = new State();\n        result._label = this._label;\n        result._src = this._src;\n        result._id = this._id;\n        return result;\n    }\n\n    getStateLabel() { return this._label; }\n\n    getStateID() { return this._id; }\n    getSource() { return this._src; }\n\n    getHashString()\n    {\n        return this._id;\n    }\n}\n\nexport class Transition\n{\n    constructor(from, to)\n    {\n        this._from = from;\n        this._to = to;\n        this._symbols = new Map();\n    }\n\n    copy()\n    {\n        const result = new Transition();\n        result._from = this._from;\n        result._to = this._to;\n\n        throw new Error('Not yet implemented');\n        /*\n        result._symbols = this._symbols.slice();\n\n        return result;\n        */\n    }\n\n    getSourceState() { return this._from; }\n    getDestinationState() { return this._to; }\n\n    addSymbol(read, pop, push)\n    {\n        const symbol = new Symbol(read, pop, push);\n        this._symbols.set(symbol.getHashString(), symbol);\n    }\n\n    hasSymbol(read, pop=null, push=null)\n    {\n        for(const symbol of this._symbols.values())\n        {\n            if (symbol.getReadSymbol() === read)\n            {\n                if (!pop || symbol.getPopSymbol() === pop)\n                {\n                    if (!push || symbol.getPushSymbol() === push)\n                    {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n    getSymbolsByReadPop(read, pop=null, dst=[])\n    {\n        for(const symbol of this._symbols.values())\n        {\n            if (symbol.getReadSymbol() === read)\n            {\n                if (!pop || symbol.getPopSymbol() === pop)\n                {\n                    dst.push(symbol);\n                }\n            }\n        }\n        return dst;\n    }\n\n    getSymbols() { return this._symbols.values(); }\n\n    getHashString()\n    {\n        let symbolString = '';\n        for(const symbol of this._symbols.values())\n        {\n            symbolString += symbol.getHashString() + ',';\n        }\n        return this._from.getHashString() + ':' + symbolString + ':' + this._to.getHashString();\n    }\n}\n\nexport class Symbol\n{\n    constructor(read, pop, push)\n    {\n        this._read = read;\n        this._pop = pop;\n        this._push = push;\n    }\n\n    getReadSymbol() { return this._read; }\n    getPopSymbol() { return this._pop; }\n    getPushSymbol() { return this._push; }\n\n    getHashString()\n    {\n        return this._read + ';' + this._pop + ';' + this._push;\n    }\n}\n\nclass PDA\n{\n    constructor()\n    {\n    //state id -> state\n        this._states = new Map();\n        //symbol -> symbol use counter\n        this._alphabet = new Map();\n        this._stackAlphabet = new Map();\n        //transition key (from + to) -> transition object\n        this._transitions = new Map();\n        this._finalStates = new Set();\n        this._customSymbols = new Set();\n        this._customStackSymbols = new Set();\n        this._startState = null;\n\n        this._errors = [];\n    }\n\n    /**\n   * Performs a shallow copy of the 2 machines. Any changes to a state will be\n   * reflected in both. However, changes to transitions, alphabet, and final\n   * states will not propagate.\n   */\n    //FIXME: This is not a valid copy\n    copy(pda)\n    {\n    //You are already yourself, don't copy nothing.\n        if (pda === this) return;\n\n        //Make room for the copy...\n        this.clear();\n\n        //Copy state\n        for(const [key, value] of pda._states.entries())\n        {\n            const result = value.copy();\n            this._states.set(key, result);\n\n            //Copy start state\n            if (pda.isStartState(value))\n            {\n                this._startState = result;\n            }\n            //Copy final states\n            if (pda.isFinalState(value))\n            {\n                this._finalStates.add(result);\n            }\n        }\n        //Copy alphabet\n        for(const [key, value] of pda._alphabet.entries())\n        {\n            this._alphabet.set(key, value);\n        }\n        //Copy stack alphabet\n        for(const [key, value] of pda._stackAlphabet.entries())\n        {\n            this._stackAlphabet.set(key, value);\n        }\n        //Copy transitions\n        for(const [key, value] of pda._transitions.entries())\n        {\n            const result = value.copy();\n            result._from = this._states.get(value.getSourceState().getStateID());\n            result._to = this._states.get(value.getDestinationState().getStateID());\n            this._transitions.set(key, result);\n        }\n        //Copy custom symbols\n        for(const symbol of pda._customSymbols)\n        {\n            this._customSymbols.add(symbol);\n        }\n        //Copy custom stack symbols\n        for(const symbol of pda._customStackSymbols)\n        {\n            this._customStackSymbols.add(symbol);\n        }\n\n        //Copy errors\n        for(const error of pda._errors)\n        {\n            //WARNING: if the error's store state objects, they need to be redirected to the copies\n            this._errors.push(error);\n        }\n    }\n\n    clear()\n    {\n        this._states.clear();\n        this._alphabet.clear();\n        this._stackAlphabet.clear();\n        this._transitions.clear();\n        this._finalStates.clear();\n        this._customSymbols.clear();\n        this._customStackSymbols.clear();\n        this._startState = null;\n\n        this._errors.length = 0;\n    }\n\n    validate()\n    {\n    //Reset errors\n        this._errors.length = 0;\n        return true;\n    }\n    isValid() { return this._errors.length == 0; }\n    getErrors() { return this._errors; }\n\n    createState(label='')\n    {\n        return this.addState(new State(label));\n    }\n\n    addState(state)\n    {\n        const stateID = state.getStateID();\n        if (this._states.has(stateID)) throw new Error('Already added state with id \\'' + stateID + '\\'');\n        //Make state as new start state if no other states exist...\n        if (this._states.size <= 0) this._startState = state;\n        //Add to state set\n        this._states.set(stateID, state);\n        return state;\n    }\n\n    removeState(state)\n    {\n        const stateID = state.getStateID();\n        if (!this._states.has(stateID)) return false;\n        this._states.delete(stateID);\n\n        //Deleted the start state, so must pick another one...\n        if (this._startState === state)\n        {\n            if (this._states.size <= 0)\n            {\n                //If no more states to choose from, don't choose anything\n                this._startState = null;\n            }\n            else\n            {\n                //Choose an arbitrary start state\n                this._startState = this._states.values().next().value;\n            }\n        }\n\n        return true;\n    }\n\n    hasStateWithLabel(label)\n    {\n        for(const state of this._states.values())\n        {\n            if (state.getStateLabel() == label)\n            {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    getStatesByLabel(label, dst=[])\n    {\n        for(const state of this._states.values())\n        {\n            if (state.getStateLabel() == label)\n            {\n                dst.push(state);\n            }\n        }\n        return dst;\n    }\n\n    getStateByID(id)\n    {\n        return this._states.get(id);\n    }\n\n    hasState(state) { return this._states.has(state.getStateID()); }\n\n    getStates() { return this._states.values(); }\n\n    getStateCount() { return this._states.size; }\n\n    addTransition(from, to, readSymbol, popSymbol, pushSymbol)\n    {\n        if (!this.hasState(from)) throw new Error('Trying to add a transition to unknown state with label \\'' + from.getStateLabel() + '\\'');\n        if (!this.hasState(to)) throw new Error('Trying to add a transition to unknown state with label \\'' + to.getStateLabel() + '\\'');\n        if (!readSymbol) throw new Error('Cannot add transition for null read symbol - use the empty symbol instead');\n        if (!popSymbol) throw new Error('Cannot add transition for null pop symbol - use the empty symbol instead');\n        if (!pushSymbol) throw new Error('Cannot add transition for null push symbol - use the empty symbol instead');\n\n        const transitionKey = from.getStateID() + '->' + to.getStateID();\n        if (this._transitions.has(transitionKey))\n        {\n            const transition = this._transitions.get(transitionKey);\n            if (!transition.hasSymbol(readSymbol, popSymbol, pushSymbol))\n            {\n                transition.addSymbol(readSymbol, popSymbol, pushSymbol);\n            }\n            else\n            {\n                //Didn't add anything...\n                return false;\n            }\n        }\n        else\n        {\n            const newTransition = new Transition(from, to);\n            newTransition.addSymbol(readSymbol, popSymbol, pushSymbol);\n            this._transitions.set(transitionKey, newTransition);\n        }\n\n        //Add to alphabet...\n        this._incrSymbolCount(readSymbol);\n        this._incrStackSymbolCount(popSymbol);\n        this._incrStackSymbolCount(pushSymbol);\n        return true;\n    }\n\n    //FIXME: not yet implemented\n    removeTransition(from, to, symbol=null)\n    {\n        const transitionKey = from.getStateID() + '->' + to.getStateID();\n        if (!this._transitions.has(transitionKey)) return false;\n\n        const transition = this._transitions.get(transitionKey);\n        const symbols = transition.getSymbols();\n\n        //If deleting a specific symbol...\n        if (symbol)\n        {\n            const index = symbols.indexOf(symbol);\n            if (index >= 0)\n            {\n                //Update symbol counts...\n                this._decrSymbolCount(symbol);\n\n                symbols.splice(index, 1);\n                if (symbols.length <= 0) this._transitions.delete(transitionKey);\n                return true;\n            }\n            else\n            {\n                return false;\n            }\n        }\n        //If deleting a all associated symbols...\n        else\n        {\n            //Update symbol counts...\n            for(const symbol of symbols)\n            {\n                this._decrSymbolCount(symbol);\n            }\n\n            //Remove transition\n            this._transitions.delete(transitionKey);\n            return true;\n        }\n    }\n\n    hasTransition(from, to, symbol=null)\n    {\n        const transitionKey = from.getStateID() + '->' + to.getStateID();\n        if (!this._transitions.has(transitionKey)) return false;\n        //Not checking for specific symbols...\n        if (!symbol) return true;\n\n        //Find the symbol...\n        return this._transitions.get(transitionKey).hasSymbol(symbol);\n    }\n\n    getTransitionSymbols(from, to)\n    {\n        const transitionKey = from.getStateID() + '->' + to.getStateID();\n        if (!this._transitions.has(transitionKey)) return null;\n        return this._transitions.get(transitionKey).getSymbols();\n    }\n\n    getTransitions() { return this._transitions.values(); }\n\n    _incrSymbolCount(symbol)\n    {\n    //Don't add empty symbol to the alphabet\n        if (symbol === EMPTY_SYMBOL) return;\n\n        const symbolCount = this._alphabet.get(symbol) || 0;\n        this._alphabet.set(symbol, symbolCount + 1);\n    }\n\n    _incrStackSymbolCount(stackSymbol)\n    {\n    //Don't add empty symbol to the stack alphabet\n        if (stackSymbol === EMPTY_SYMBOL) return;\n\n        const symbolCount = this._stackAlphabet.get(stackSymbol) || 0;\n        this._stackAlphabet.set(stackSymbol, symbolCount + 1);\n    }\n\n    _decrSymbolCount(symbol)\n    {\n        if (!this._alphabet.has(symbol)) throw new Error('Unable to find valid transition symbol in alphabet');\n\n        //Empty symbol is not in the alphabet\n        if (symbol === EMPTY_SYMBOL) return;\n\n        const symbolCount = this._alphabet.get(symbol);\n        //Delete the symbol, since it is no longer used...\n        if (symbolCount <= 1)\n        {\n            if (!this.isCustomSymbol(symbol))\n            {\n                //Regular symbols are removed if unused...\n                this._alphabet.delete(symbol);\n            }\n            else\n            {\n                //Custom symbols stay in the alphabet, even if unused...\n                this._alphabet.set(symbol, 0);\n            }\n        }\n        else\n        {\n            //Still being used by someone...\n            this._alphabet.set(symbol, symbolCount - 1);\n        }\n    }\n\n    _decrStackSymbolCount(symbol)\n    {\n        if (!this._stackAlphabet.has(symbol)) throw new Error('Unable to find valid transition symbol in alphabet');\n\n        //Empty symbol is not in the alphabet\n        if (symbol === EMPTY_SYMBOL) return;\n\n        const symbolCount = this._stackAlphabet.get(symbol);\n        //Delete the symbol, since it is no longer used...\n        if (symbolCount <= 1)\n        {\n            if (!this.isCustomStackSymbol(symbol))\n            {\n                //Regular symbols are removed if unused...\n                this._stackAlphabet.delete(symbol);\n            }\n            else\n            {\n                //Custom symbols stay in the alphabet, even if unused...\n                this._stackAlphabet.set(symbol, 0);\n            }\n        }\n        else\n        {\n            //Still being used by someone...\n            this._stackAlphabet.set(symbol, symbolCount - 1);\n        }\n    }\n\n    changeSymbol(symbol, newSymbol)\n    {\n        if (symbol === EMPTY_SYMBOL) throw new Error('Cannot change the empty symbol');\n        if (newSymbol === EMPTY_SYMBOL) throw new Error('Cannot change to the empty symbol');\n        if (this._stackAlphabet.has(newSymbol)) throw new Error('Cannot change symbol to another existing symbol');\n\n        throw new Error('Not yet implemented');\n    }\n\n    removeSymbol(symbol)\n    {\n        throw new Error('Not yet implemented');\n    }\n\n    setCustomSymbol(symbol, custom=true)\n    {\n        if (symbol === EMPTY_SYMBOL) throw new Error('Cannot change the empty symbol as a custom symbol');\n\n        if (custom)\n        {\n            if (!this._customSymbols.has(symbol))\n            {\n                this._customSymbols.add(symbol);\n\n                //Add symbol to alphabet if missing...\n                if (!this._alphabet.has(symbol)) this._alphabet.set(symbol, 0);\n            }\n        }\n        else\n        {\n            if (this._customSymbols.has(symbol))\n            {\n                this._customSymbols.delete(symbol);\n\n                //If symbol is unused, delete it\n                if (this._alphabet.has(symbol) && this._alphabet.get(symbol) <= 0) this._alphabet.delete(symbol);\n            }\n        }\n    }\n\n    isCustomSymbol(symbol)\n    {\n        return this._customSymbols.has(symbol);\n    }\n\n    getCustomSymbols()\n    {\n        return this._customSymbols;\n    }\n\n    clearCustomSymbols()\n    {\n        this._customSymbols.clear();\n    }\n\n    isUsedSymbol(symbol)\n    {\n        return this._alphabet.has(symbol) && this._alphabet.get(symbol) > 0;\n    }\n\n    isSymbol(symbol)\n    {\n        return this._alphabet.has(symbol);\n    }\n\n    getAlphabet()\n    {\n        return this._alphabet.keys();\n    }\n\n    /********** STACK ALPHABET **********/\n\n    changeStackSymbol(symbol, newSymbol)\n    {\n        if (symbol === EMPTY_SYMBOL) throw new Error('Cannot change the empty symbol');\n        if (newSymbol === EMPTY_SYMBOL) throw new Error('Cannot change to the empty symbol');\n        if (this._stackAlphabet.has(newSymbol)) throw new Error('Cannot change symbol to another existing symbol');\n\n        throw new Error('Not yet implemented');\n    }\n\n    removeStackSymbol(symbol)\n    {\n        throw new Error('Not yet implemented');\n    }\n\n    setCustomStackSymbol(symbol, custom=true)\n    {\n        if (symbol === EMPTY_SYMBOL) throw new Error('Cannot change the empty symbol as a custom symbol');\n\n        if (custom)\n        {\n            if (!this._customStackSymbols.has(symbol))\n            {\n                this._customStackSymbols.add(symbol);\n\n                //Add symbol to alphabet if missing...\n                if (!this._stackAlphabet.has(symbol)) this._stackAlphabet.set(symbol, 0);\n            }\n        }\n        else\n        {\n            if (this._customStackSymbols.has(symbol))\n            {\n                this._customStackSymbols.delete(symbol);\n\n                //If symbol is unused, delete it\n                if (this._stackAlphabet.has(symbol) && this._stackAlphabet.get(symbol) <= 0) this._stackAlphabet.delete(symbol);\n            }\n        }\n    }\n\n    isCustomStackSymbol(symbol)\n    {\n        return this._customStackSymbols.has(symbol);\n    }\n\n    getCustomStackSymbols()\n    {\n        return this._customStackSymbols;\n    }\n\n    clearCustomStackSymbols()\n    {\n        this._customStackSymbols.clear();\n    }\n\n    isUsedStackSymbol(symbol)\n    {\n        return this._stackAlphabet.has(symbol) && this._stackAlphabet.get(symbol) > 0;\n    }\n\n    isStackSymbol(symbol)\n    {\n        return this._stackAlphabet.has(symbol);\n    }\n\n    getStackAlphabet()\n    {\n        return this._stackAlphabet.keys();\n    }\n\n    /********** OTHER **********/\n\n    setStartState(state)\n    {\n        const stateID = state.getStateID();\n        if (!this._states.has(stateID))\n        {\n            //Add it to the state set\n            this._states.set(stateID, state);\n        }\n        this._startState = state;\n    }\n    isStartState(state) { return this._startState === state; }\n    getStartState() { return this._startState; }\n\n    setFinalState(state, final=true)\n    {\n    //Make final\n        if (final)\n        {\n            //If missing from state set, add it in...\n            if (!this._states.has(state.getStateID()))\n            {\n                this.addState(state);\n            }\n\n            this._finalStates.add(state);\n        }\n        else\n        {\n            //If missing from state set, it would be effectively the same thing as\n            //calling addState(state). So due to ambiguity, don't do it.\n            if (!this._states.has(state.getStateID())) throw new Error('Trying to change final for missing state \\'' + state.getStateLabel() + '\\'');\n\n            this._finalStates.delete(state);\n        }\n    }\n    isFinalState(state) { return this._finalStates.has(state); }\n    getFinalStates() { return this._finalStates; }\n\n    doTransition(state, readSymbol, stack, dst=[])\n    {\n        if (!state) return dst;\n        if (!(state instanceof State)) throw new Error('Invalid state instance type \\'' + (typeof state) + '\\'');\n        if (!this._states.has(state.getStateID())) throw new Error('Unable to find source state with id \\'' + state.getStateID() + '\\'');\n\n        if (!readSymbol) readSymbol = EMPTY_SYMBOL;\n\n        const fromTransitionKey = state.getStateID() + '->';\n        for(const key of this._transitions.keys())\n        {\n            if (key.startsWith(fromTransitionKey))\n            {\n                const transition = this._transitions.get(key);\n                const toState = transition.getDestinationState();\n\n                const validSymbols = [];\n                transition.getSymbolsByReadPop(readSymbol, stack[stack.length - 1], validSymbols);\n                transition.getSymbolsByReadPop(readSymbol, EMPTY_SYMBOL, validSymbols);\n                for(const validSymbol of validSymbols)\n                {\n                    const newStack = stack.slice();\n                    const validPop = validSymbol.getPopSymbol();\n                    const validPush = validSymbol.getPushSymbol();\n\n                    if (validPop !== EMPTY_SYMBOL) newStack.pop();\n                    if (validPush !== EMPTY_SYMBOL) newStack.push(validPush);\n\n                    dst.push([toState, newStack]);\n                }\n            }\n        }\n        return dst;\n    }\n\n    doTerminalTransition(state, readSymbol, stack, dst=[])\n    {\n        if (!state) return dst;\n        if (!this._states.has(state.getStateID())) throw new Error('Unable to find source state with id \\'' + state.getStateID() + '\\'');\n\n        if (!readSymbol) readSymbol = EMPTY_SYMBOL;\n\n        const fromTransitionKey = state.getStateID() + '->';\n        for(const key of this._transitions.keys())\n        {\n            if (key.startsWith(fromTransitionKey))\n            {\n                const transition = this._transitions.get(key);\n                const toState = transition.getDestinationState();\n\n                const validSymbols = [];\n                transition.getSymbolsByReadPop(readSymbol, stack[stack.length - 1], validSymbols);\n                transition.getSymbolsByReadPop(readSymbol, EMPTY_SYMBOL, validSymbols);\n                for(const validSymbol of validSymbols)\n                {\n                    const newStack = stack.slice();\n                    const validPop = validSymbol.getPopSymbol();\n                    const validPush = validSymbol.getPushSymbol();\n\n                    if (validPop !== EMPTY_SYMBOL)\n                    {\n                        if(stack.length == 0)\n                        {\n                            continue;\n                        }\n                        else\n                        {\n                            newStack.pop();\n                        }\n\n                    }\n                    if (validPush !== EMPTY_SYMBOL) newStack.push(validPush);\n\n                    const result = this.doClosureTransition(toState, newStack);\n                    for(const s of result)\n                    {\n                        //Checks if dst includes the new destination and stack pair\n                        let flag = false;\n                        for(const pair of dst)\n                        {\n                            if (pair[0] === s[0])\n                            {\n                                if (isEqualStack(pair[1], s[1]))\n                                {\n                                    flag = true;\n                                    break;\n                                }\n                            }\n                        }\n                        if (!flag) dst.push(s);\n                    }\n                }\n            }\n        }\n\n        return dst;\n    }\n\n    doClosureTransition(state, stack, dst=[])\n    {\n        if (!state) return dst;\n\n        dst.push([state, stack]);\n        for(let i = 0; i < dst.length; ++i)\n        {\n            const thisPair = dst[i];\n            const thisState = thisPair[0];\n            const thisStack = thisPair[1];\n            const transitions = this.getOutgoingTransitions(thisState);\n            for(const transition of transitions)\n            {\n                const readSymbol = transition[READ_SYMBOL_INDEX];\n                const popSymbol = transition[POP_SYMBOL_INDEX];\n                const pushSymbol = transition[PUSH_SYMBOL_INDEX];\n\n                if (readSymbol === EMPTY_SYMBOL &&\n          (popSymbol === thisStack[thisStack.length - 1] ||\n          popSymbol === EMPTY_SYMBOL))\n                {\n                    const newStack = thisStack.slice();\n                    const toState = transition[TO_STATE_INDEX];\n                    if (popSymbol !== EMPTY_SYMBOL) newStack.pop();\n                    if (pushSymbol !== EMPTY_SYMBOL) newStack.push(pushSymbol);\n\n                    //Checks if dst includes the new destination and stack pair\n                    let flag = false;\n                    for(const pair of dst)\n                    {\n                        if (pair[0] === toState)\n                        {\n                            if (isEqualStack(pair[1], newStack))\n                            {\n                                flag = true;\n                                break;\n                            }\n                        }\n                    }\n                    if (!flag) dst.push([toState, newStack]);\n                }\n            }\n        }\n        return dst;\n    }\n\n    getOutgoingTransitions(state, dst=[])\n    {\n        if (!state) return dst;\n        if (!this._states.has(state.getStateID())) throw new Error('Unable to find source state with id \\'' + state.getStateID() + '\\'');\n\n        const fromTransitionKey = state.getStateID() + '->';\n        for(const key of this._transitions.keys())\n        {\n            if (key.startsWith(fromTransitionKey))\n            {\n                const transition = this._transitions.get(key);\n                const symbols = transition.getSymbols();\n                for(const symbol of symbols)\n                {\n                    dst.push([\n                        state,\n                        symbol.getReadSymbol(),\n                        transition.getDestinationState(),\n                        symbol.getPopSymbol(),\n                        symbol.getPushSymbol()\n                    ]);\n                }\n            }\n        }\n\n        return dst;\n    }\n\n    getHashCode()\n    {\n        let string = '';\n        for(const state of this._states.values())\n        {\n            string += state.getHashString() + ',';\n        }\n        string += '|';\n        for(const transition of this._transitions.values())\n        {\n            string += transition.getHashString() + ',';\n        }\n        string += '|';\n        for(const state of this._finalStates)\n        {\n            string += state.getHashString();\n        }\n        string += '|';\n        string += this._startState ? this._startState.getHashString() : '';\n        return stringHash(string);\n    }\n}\n\nfunction isEqualStack(stack1, stack2)\n{\n    const temp = [];\n    for(const element of stack1)\n    {\n        temp.push(element);\n    }\n    for(const element of stack2)\n    {\n        const i = temp.indexOf(element);\n        if (i === -1) return false;\n        temp.splice(i, 1);\n    }\n    return temp.length <= 0;\n}\n\nexport default PDA;\n","import GraphNode from 'graph/elements/GraphNode.js';\n\nconst NODE_RADIUS = 16;\n\nclass PDANode extends GraphNode\n{\n    constructor(id, x, y)\n    {\n        super(id, x, y);\n\n        this._accept = false;\n\n        //this is not saved to hash since it is an aesthetic option\n        this._custom = false;\n    }\n\n    setNodeAccept(value)\n    {\n        this._accept = value;\n    }\n\n    getNodeAccept()\n    {\n        return this._accept;\n    }\n\n    setNodeCustom(value)\n    {\n        this._custom = value;\n    }\n\n    getNodeCustom()\n    {\n        return this._custom;\n    }\n\n    /** @override */\n    getNodeSize() { return NODE_RADIUS; }\n\n    /** @override */\n    getHashString(usePosition=true)\n    {\n        return super.getHashString(usePosition) + ':' + (this._accept ? '1' : '0');\n    }\n}\n\nexport default PDANode;\n","import QuadraticEdge from 'graph/elements/QuadraticEdge.js';\n\nexport const LINE_SEPARATOR = '\\n';\nexport const SYMBOL_SEPARATOR = ' ';\nexport const READ_SEPARATOR = ',';\nexport const POP_SEPARATOR = '\\u2192';\nexport const EMPTY_CHAR = '\\u03B5';\n\nclass PDAEdge extends QuadraticEdge\n{\n    constructor(id, from, to=null)\n    {\n        super(id, from, to);\n    }\n\n    /** @override */\n    setEdgeLabel(label)\n    {\n        if (typeof label === 'string')\n        {\n            super.setEdgeLabel(label);\n        }\n        else\n        {\n            super.setEdgeLabel(EMPTY_CHAR + READ_SEPARATOR +\n        EMPTY_CHAR + POP_SEPARATOR +\n        EMPTY_CHAR);\n        }\n    }\n\n    getEdgeSymbolsFromLine(line)\n    {\n        line = line.trim();\n        let readIndex = line.indexOf(READ_SEPARATOR);\n        let popIndex = line.indexOf(POP_SEPARATOR);\n\n        if (readIndex <= 0) return [EMPTY_CHAR, EMPTY_CHAR, EMPTY_CHAR];\n        let readSymbol = line.substring(0, readIndex);\n        if (popIndex <= 0) return [readSymbol, EMPTY_CHAR, EMPTY_CHAR];\n        let popSymbol = line.substring(readIndex + 1, popIndex);\n        let pushSymbol = line.substring(popIndex + 1);\n        if (pushSymbol.length <= 0) return [readSymbol, popSymbol, EMPTY_CHAR];\n\n        return [readSymbol, popSymbol, pushSymbol];\n    }\n\n    getEdgeLinesFromLabel()\n    {\n        return this.getEdgeLabel().split(LINE_SEPARATOR);\n    }\n}\n\nexport default PDAEdge;\n","import AbstractMachineBuilder from 'modules/abstract/AbstractMachineBuilder.js';\nimport PDA, { EMPTY_SYMBOL, State } from './PDA.js';\nimport PDANode from 'modules/pda/graph/PDANode.js';\nimport { EMPTY_CHAR } from 'modules/pda/graph/PDAEdge.js';\nimport { getUnreachableNodes } from 'modules/fsa2/graph/FSAGraphUtil.js';\n\nexport const ERROR_UNREACHABLE_STATE = 'unreachable_state';\nexport const ERROR_DUPLICATE_STATE = 'duplicate_state';\nexport const ERROR_INCOMPLETE_TRANSITION = 'incomplete_transition';\n\nclass PDABuilder extends AbstractMachineBuilder\n{\n    constructor()\n    {\n        super();\n\n        this._machine = new PDA();\n    }\n\n    /** @override */\n    attemptBuildGraph(machine, dst)\n    {\n        dst.clear();\n\n        //Add all states\n        let node;\n        for (const state of machine.getStates())\n        {\n            node = dst.createNode(0, 0);\n            node.setNodeLabel(state.getStateLabel());\n            if (machine.isFinalState(state))\n            {\n                node.setNodeAccept(true);\n            }\n        }\n\n        //Add all transitions\n        let edge, from, to, read;\n        for (let transition of machine.getTransitions())\n        {\n            from = this.getFirstGraphNodeByLabel(dst, transition[0]);\n            read = transition[1];\n            to = this.getFirstGraphNodeByLabel(dst, transition[2]);\n            edge = dst.createEdge(from, to);\n            edge.setEdgeLabel(read);\n            const formattedEdge = dst.formatEdge(edge);\n            if (edge != formattedEdge) dst.deleteEdge(edge);\n        }\n\n        //Set start state\n        const startState = machine.getStartState();\n        dst.setStartNode(this.getFirstGraphNodeByLabel(dst, startState));\n\n        return dst;\n    }\n\n    /** @override */\n    attemptBuildMachine(graph, dst, errors = [], warnings = [])\n    {\n        errors.length = 0;\n        warnings.length = 0;\n\n        const customSymbols = Array.from(dst.getCustomSymbols());\n        const customStackSymbols = Array.from(dst.getCustomStackSymbols());\n        dst.clear();\n        for (const symbol of customSymbols)\n        {\n            dst.setCustomSymbol(symbol);\n        }\n        for (const stackSymbol of customStackSymbols)\n        {\n            dst.setCustomStackSymbol(stackSymbol);\n        }\n\n        const nodeLabels = new Map();\n        const nodeOutgoings = new Map();\n        // const edgeSymbols = new Set();\n        const edgePlaceholders = [];\n        // const edgeEmpties = [];\n\n        const graphNodes = graph.getNodes();\n        const graphEdges = graph.getEdges();\n        const graphStart = graph.getStartNode();\n\n        for (const node of graphNodes)\n        {\n            const nodeLabel = node.getNodeLabel();\n            const state = new State(nodeLabel, node);\n            dst.addState(state);\n\n            if (node.getNodeAccept())\n            {\n                dst.setFinalState(state, true);\n            }\n\n            if (graphStart === node)\n            {\n                dst.setStartState(state);\n            }\n\n            //Check for duplicate states\n            if (nodeLabels.has(nodeLabel)) nodeLabels.get(nodeLabel).push(state);\n            else nodeLabels.set(nodeLabel, [state]);\n\n            //For duplicate transitions\n            nodeOutgoings.set(state, new Map());\n        }\n\n        for (const edge of graphEdges)\n        {\n            const srcNode = edge.getEdgeFrom();\n            const dstNode = edge.getEdgeTo();\n            if (!edge.isPlaceholder() && srcNode instanceof PDANode && dstNode instanceof PDANode)\n            {\n                const srcState = dst.getStateByID(srcNode.getGraphElementID());\n                const dstState = dst.getStateByID(dstNode.getGraphElementID());\n                if (!srcState || !dstState) throw new Error('Cannot find state for edge source/destination nodes - mismatch id');\n\n                const edgeLabelLines = edge.getEdgeLinesFromLabel();\n                for (const line of edgeLabelLines)\n                {\n                    if (!line) continue;\n\n                    const symbols = edge.getEdgeSymbolsFromLine(line);\n\n                    //Translate all labels to symbols\n                    for (let i = 0; i < symbols.length; ++i)\n                    {\n                        let symbol = symbols[i];\n                        switch (symbol)\n                        {\n                        case EMPTY_CHAR:\n                            symbols[i] = EMPTY_SYMBOL;\n                            break;\n                        default:\n                            symbols[i] = symbol;\n                        }\n                    }\n\n                    //Add to machine...\n                    dst.addTransition(srcState, dstState, symbols[0], symbols[1], symbols[2]);\n                }\n            }\n            else\n            {\n                edgePlaceholders.push(edge);\n                continue;\n            }\n        }\n\n        //Check for duplicate node labels\n        for (const [nodeLabel, sharedStates] of nodeLabels.entries())\n        {\n            if (sharedStates.length > 1)\n            {\n                warnings.push({\n                    name: ERROR_DUPLICATE_STATE,\n                    label: nodeLabel,\n                    nodes: sharedStates.map(e => e.getSource())\n                });\n            }\n        }\n\n        //Check for incomplete edge\n        if (edgePlaceholders.length > 0)\n        {\n            errors.push({\n                name: ERROR_INCOMPLETE_TRANSITION,\n                edges: edgePlaceholders\n            });\n        }\n\n        //Check for unreachable nodes\n        const unreachables = getUnreachableNodes(graph);\n        if (unreachables && unreachables.length > 0)\n        {\n            warnings.push({\n                name: ERROR_UNREACHABLE_STATE,\n                nodes: unreachables\n            });\n        }\n\n        if (errors.length <= 0)\n        {\n            //Errors should be empty\n            return this._machine;\n        }\n        else\n        {\n            //Reasons are stored in errors\n            return null;\n        }\n    }\n\n    /** @override */\n    getMachine() { return this._machine; }\n}\n\nexport default PDABuilder;","import AbstractMachineController from 'modules/abstract/AbstractMachineController.js';\n\nimport PDABuilder from 'modules/pda/machine/PDABuilder.js';\n\nimport GraphLayout from 'modules/fsa/graph/GraphLayout.js';\n\nclass MachineController extends AbstractMachineController\n{\n    constructor(module)\n    {\n        super(module, new PDABuilder());\n\n        this.graphController = null;\n    }\n\n    /** @override */\n    initialize(module)\n    {\n        super.initialize(module);\n\n        this.graphController = module.getGraphController();\n    }\n\n    /** @override */\n    destroy(module)\n    {\n        super.destroy(module);\n    }\n\n    /** @override */\n    update(module)\n    {\n        super.update(module);\n    }\n\n    getFirstGraphNodeByLabel(graph, label)\n    {\n        for (const node of graph.getNodes())\n        {\n            if (node.getNodeLabel() == label)\n            {\n                return node;\n            }\n        }\n\n        return null;\n    }\n\n    setGraphToMachine(graph, machine)\n    {\n        this._machineBuilder.attemptBuildGraph(machine, graph);\n\n        //Auto layout graph\n        GraphLayout.applyLayout(graph);\n    }\n\n    getStates()\n    {\n        return this._machineBuilder.getMachine().getStates();\n    }\n\n    countStates()\n    {\n        return this.getStates().length;\n    }\n\n    getFinalStates()\n    {\n        return this._machineBuilder.getMachine().getFinalStates();\n    }\n\n    getTransitions()\n    {\n        return this._machineBuilder.getMachine().getTransitions();\n    }\n\n    getAlphabet()\n    {\n        const machine = this._machineBuilder.getMachine();\n        return Array.from(machine.getAlphabet());\n    }\n\n    isUsedSymbol(symbol)\n    {\n        return !this.isCustomSymbol(symbol);\n    }\n\n    createSymbol(symbol)\n    {\n        this.addCustomSymbol(symbol);\n    }\n\n    deleteSymbol(symbol)\n    {\n        let edge = null;\n        let index = null;\n        let result = null;\n        const targets = [];\n\n        const graph = this.graphController.getGraph();\n        for (let i = graph.getEdges().length - 1; i >= 0; --i)\n        {\n            edge = graph.getEdges()[i];\n            index = edge.getEdgeLabel().indexOf(symbol);\n            if (index >= 0)\n            {\n                result = edge.getEdgeLabel().substring(0, index) + edge.getEdgeLabel().substring(index + 1);\n                if (result.length > 0)\n                {\n                    edge.setEdgeLabel(result);\n                }\n                else\n                {\n                    edge.setEdgeLabel('');\n                    graph.deleteEdge(edge);\n                }\n                targets.push(edge);\n            }\n        }\n\n        if (targets.length <= 0)\n        {\n            this.getMachineBuilder().removeCustomSymbol(symbol);\n        }\n    }\n\n    renameSymbol(prevSymbol, nextSymbol)\n    {\n        let edge = null;\n        let result = null;\n        const targets = [];\n\n        const graph = this.graphController.getGraph();\n        const length = graph.getEdges().length;\n        for (let i = 0; i < length; ++i)\n        {\n            edge = graph.getEdges()[i];\n            result = edge.getEdgeLabel().replace(prevSymbol, nextSymbol);\n            if (result != edge.getEdgeLabel())\n            {\n                targets.push(edge);\n            }\n            edge.setEdgeLabel(result);\n        }\n\n        if (targets.length <= 0)\n        {\n            this.getMachineBuilder().renameCustomSymbol(prevSymbol, nextSymbol);\n        }\n    }\n\n    getCustomSymbols()\n    {\n        return Array.from(this._machineBuilder.getMachine().getCustomSymbols());\n    }\n\n    isCustomSymbol(symbol)\n    {\n        return this._machineBuilder.isCustomSymbol(symbol);\n    }\n\n    addCustomSymbol(symbol)\n    {\n        this._machineBuilder.getMachine().setCustomSymbol(symbol);\n    }\n\n    clearCustomSymbols()\n    {\n        this._machineBuilder.getMachine().clearCustomSymbols();\n    }\n\n    getStackAlphabet()\n    {\n        const machine = this._machineBuilder.getMachine();\n        return Array.from(machine.getStackAlphabet());\n    }\n\n    isUsedStackSymbol(symbol)\n    {\n        return !this.isCustomStackSymbol(symbol);\n    }\n\n    createStackSymbol(symbol)\n    {\n        this.addCustomStackSymbol(symbol);\n    }\n\n    deleteStackSymbol(symbol)\n    {\n        let edge = null;\n        let index = null;\n        let result = null;\n        const targets = [];\n\n        const graph = this.graphController.getGraph();\n        for (let i = graph.getEdges().length - 1; i >= 0; --i)\n        {\n            edge = graph.getEdges()[i];\n            index = edge.getEdgeLabel().indexOf(symbol);\n            if (index >= 0)\n            {\n                result = edge.getEdgeLabel().substring(0, index) + edge.getEdgeLabel().substring(index + 1);\n                if (result.length > 0)\n                {\n                    edge.setEdgeLabel(result);\n                }\n                else\n                {\n                    edge.setEdgeLabel('');\n                    graph.deleteEdge(edge);\n                }\n                targets.push(edge);\n            }\n        }\n\n        if (targets.length <= 0)\n        {\n            this.getMachineBuilder().removeCustomStackSymbol(symbol);\n        }\n    }\n\n    renameStackSymbol(prevSymbol, nextSymbol)\n    {\n        let edge = null;\n        let result = null;\n        const targets = [];\n\n        const graph = this.graphController.getGraph();\n        const length = graph.getEdges().length;\n        for (let i = 0; i < length; ++i)\n        {\n            edge = graph.getEdges()[i];\n            result = edge.getEdgeLabel().replace(prevSymbol, nextSymbol);\n            if (result != edge.getEdgeLabel())\n            {\n                targets.push(edge);\n            }\n            edge.setEdgeLabel(result);\n        }\n\n        if (targets.length <= 0)\n        {\n            this.getMachineBuilder().renameCustomStackSymbol(prevSymbol, nextSymbol);\n        }\n    }\n\n    getCustomStackSymbols()\n    {\n        return Array.from(this._machineBuilder.getMachine().getCustomStackSymbols());\n    }\n\n    isCustomStackSymbol(symbol)\n    {\n        return this._machineBuilder.isCustomStackSymbol(symbol);\n    }\n\n    addCustomStackSymbol(symbol)\n    {\n        this._machineBuilder.getMachine().setCustomStackSymbol(symbol);\n    }\n\n    clearCustomStackSymbols()\n    {\n        this._machineBuilder.getMachine().clearCustomStackSymbols();\n    }\n}\n\nexport default MachineController;\n","import NodeGraph from 'graph/NodeGraph.js';\nimport PDANode from './PDANode.js';\nimport PDAEdge, { LINE_SEPARATOR } from './PDAEdge.js';\n\nconst PARALLEL_EDGE_HEIGHT = 10;\n\nclass PDAGraph extends NodeGraph\n{\n    constructor()\n    {\n        super(PDANode, PDAEdge);\n\n        this._nodes = [];\n    }\n\n    setStartNode(node)\n    {\n        if (this._nodes.length <= 0) throw new Error('Cannot set start node to empty graph');\n\n        //There is only one node, and that is already the start node\n        if (this._nodes.length === 1) return;\n\n        const i = this._nodes.indexOf(node);\n        if (i > 0)\n        {\n            //This does a swap; we could do a prepend but that's more costly...\n            const prev = this._nodes[0];\n            this._nodes[0] = node;\n            this._nodes[i] = prev;\n        }\n        else if (i < 0)\n        {\n            throw new Error('Cannot set start node for unknown node');\n        }\n    }\n\n    getStartNode()\n    {\n        return this._nodes.length > 0 ? this._nodes[0] : null;\n    }\n\n    /** @override */\n    addNode(node)\n    {\n        this._nodes.push(node);\n        return super.addNode(node);\n    }\n\n    /** @override */\n    deleteNode(node)\n    {\n        super.deleteNode(node);\n        const i = this._nodes.indexOf(node);\n        if (i >= 0) this._nodes.splice(i, 1);\n    }\n\n    /** @override */\n    clearNodes()\n    {\n        super.clearNodes();\n        this._nodes.length = 0;\n    }\n\n    //This is more like addEdge() without adding it to the graph and just returns the result\n    //This should only be called once when completing an edge\n    /** @override */\n    formatEdge(edge)\n    {\n        const edgeSource = edge.getEdgeFrom();\n        const edgeDestination = edge.getEdgeTo();\n        const edgeLabel = edge.getEdgeLinesFromLabel();\n\n        //Look for an existing edge with similar from and to\n        for(const otherEdge of this.getEdges())\n        {\n            if (otherEdge === edge) continue;\n            if (otherEdge.getEdgeFrom() === edgeSource && otherEdge.getEdgeTo() === edgeDestination)\n            {\n                const otherLines = otherEdge.getEdgeLinesFromLabel();\n                if (edgeLabel.length > 0)\n                {\n                    const result = otherLines.concat(edgeLabel);\n                    otherEdge.setEdgeLabel(result.join(LINE_SEPARATOR));\n                }\n\n                //Merged with newfound edge...\n                return otherEdge;\n            }\n        }\n\n        //Otherwise, format the current edge\n\n        if (!edge.isSelfLoop())\n        {\n            let flag = false;\n\n            //Bend away if there is another edge not bent with the same src/dst\n            const parallelEdgeHeight = PARALLEL_EDGE_HEIGHT;\n            const HALFPI = Math.PI / 2;\n            for(const otherEdge of this.getEdges())\n            {\n                if (otherEdge.isQuadratic() && Math.abs(otherEdge.getQuadratic().length) >= parallelEdgeHeight * 2) continue;\n                if ((otherEdge.getEdgeTo() === edgeSource && otherEdge.getEdgeFrom() === edgeDestination))\n                {\n                    edge.setQuadraticRadians(HALFPI).setQuadraticLength(parallelEdgeHeight);\n                    otherEdge.setQuadraticRadians(HALFPI).setQuadraticLength(parallelEdgeHeight);\n                    flag = true;\n\n                    //ASSUMES that there will only ever be 2 edges that are parallel...\n                    break;\n                }\n            }\n\n            //Try to move the edge away from intersecting nodes...\n            if (!flag)\n            {\n                const maxNodeSize = Math.max(edgeSource.getNodeSize(), edgeDestination.getNodeSize());\n                const x1 = edgeSource.x;\n                const y1 = edgeSource.y;\n                const x2 = edgeDestination.x;\n                const y2 = edgeDestination.y;\n                const dist12sq = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\n                let vertical = false;\n                let m = 0;\n                let b = 0;\n\n                if(x1 > x2)\n                {\n                    m = (y1-y2) / (x1-x2);\n                    b = y2-m*x2;\n                }\n                else if (x1 < x2)\n                {\n                    m = (y2-y1) / (x2-x1);\n                    b = y1-m*x1;\n                }\n                else\n                {\n                    vertical = true;\n                }\n\n                for(const node of this._nodes)\n                {\n                    if(node === edgeSource || node === edgeDestination) continue;\n\n                    const x0 = node.x;\n                    const y0 = node.y;\n\n                    const dist01sq = (x1-x0)*(x1-x0) + (y1-y0)*(y1-y0);\n                    const dist02sq = (x2-x0)*(x2-x0) + (y2-y0)*(y2-y0);\n                    if(dist01sq > dist12sq || dist02sq > dist12sq) continue;\n\n                    let dist = 0;\n                    if(vertical) \n                    {\n                        dist = Math.abs(x1-x0);\n                    }\n                    else \n                    {\n                        dist = Math.abs(b+ m*x0 - y0) / Math.sqrt(1+m*m);\n                    }\n\n                    if(dist < node.getNodeSize())\n                    {\n                        flag = true;\n                        break;\n                    }\n                }\n\n                if (flag)\n                {\n                    edge.setQuadraticRadians(-Math.PI / 2);\n                    edge.setQuadraticLength(maxNodeSize + 10);\n                }\n            }\n        }\n\n        return edge;\n    }\n}\n\nexport default PDAGraph;\n","import AbstractGraphLabeler from 'graph/AbstractGraphLabeler.js';\n\nimport {EMPTY_CHAR,\n    LINE_SEPARATOR,\n    SYMBOL_SEPARATOR,\n    READ_SEPARATOR,\n    POP_SEPARATOR} from './PDAEdge.js';\n\nconst DEFAULT_NODE_LABEL_PREFIX = 'q';\n\nclass PDAGraphLabeler extends AbstractGraphLabeler\n{\n    constructor()\n    {\n        super();\n\n        this._prefix = DEFAULT_NODE_LABEL_PREFIX;\n        this._graphController = null;\n    }\n\n    setGraphController(graphController)\n    {\n        this._graphController = graphController;\n        return this;\n    }\n\n    setDefaultNodeLabelPrefix(prefix)\n    {\n        this._prefix = prefix;\n    }\n\n    getDefaultNodeLabelPrefix()\n    {\n        return this._prefix;\n    }\n\n    /** @override */\n    getDefaultNodeLabel()\n    {\n        if (!this._graphController.shouldAutoRenameNodes())\n        {\n            return this.getDefaultNodeLabelPrefix();\n        }\n        else\n        {\n            const graph = this._graphController.getGraph();\n            const otherNodes = [];\n            let nodeIndex = 0;\n\n            const startNode = graph.getStartNode();\n            if (startNode && startNode.getNodeCustom()) nodeIndex = 1;\n\n            let newNodeLabel = this.getDefaultNodeLabelPrefix() + nodeIndex;\n            while(graph.getNodesByLabel(newNodeLabel, otherNodes).length > 0)\n            {\n                otherNodes.length = 0;\n                ++nodeIndex;\n                newNodeLabel = this.getDefaultNodeLabelPrefix() + nodeIndex;\n            }\n\n            return newNodeLabel;\n        }\n    }\n\n    /** @override */\n    getDefaultEdgeLabel()\n    {\n        return '';\n    }\n\n    /** @override */\n    getNodeLabelFormatter()\n    {\n        return (string) => string || '';\n    }\n\n    /** @override */\n    getEdgeLabelFormatter()\n    {\n        return edgeLabelFormatter;\n    }\n}\n\nfunction isValidSymbol(symbol)\n{\n    return symbol.length === 1 &&\n    symbol !== LINE_SEPARATOR &&\n    symbol !== SYMBOL_SEPARATOR &&\n    symbol !== READ_SEPARATOR &&\n    symbol !== POP_SEPARATOR;\n}\n\nfunction edgeLabelFormatter(string, allowNull=false)\n{\n    const lines = string.split(LINE_SEPARATOR);\n    const result = new Set();\n    const length = lines.length;\n\n    let symbols;\n    let symbolLength = 0;\n    for(let i = 0; i < length; ++i)\n    {\n        symbols = lines[i].trim().split('');\n        symbolLength = symbols.length;\n\n        if (symbolLength <= 0)\n        {\n            result.add('');\n            continue;\n        }\n\n        let readSymbol = null;\n        let popSymbol = null;\n        let pushSymbol = null;\n        let symbol = null;\n\n        for(let j = 0; j < symbolLength; ++j)\n        {\n            if (readSymbol === null)\n            {\n                symbol = symbols[j].trim();\n                if (isValidSymbol(symbol))\n                {\n                    readSymbol = symbol;\n                    if (j + 1 < symbolLength && (symbols[j + 1] === READ_SEPARATOR || symbols[j + 1] === SYMBOL_SEPARATOR))\n                    {\n                        ++j;\n                    }\n                }\n            }\n            else if (popSymbol === null)\n            {\n                symbol = symbols[j].trim();\n                if (isValidSymbol(symbol))\n                {\n                    popSymbol = symbol;\n                    if (j + 1 < symbolLength && (symbols[j + 1] === POP_SEPARATOR || symbols[j + 1] === SYMBOL_SEPARATOR))\n                    {\n                        ++j;\n                    }\n                }\n            }\n            else if (pushSymbol === null)\n            {\n                symbol = symbols[j].trim();\n                if (isValidSymbol(symbol))\n                {\n                    pushSymbol = symbol;\n                    break;\n                }\n            }\n        }\n\n        if (readSymbol === null)\n        {\n            result.add('');\n        }\n        else if (popSymbol === null)\n        {\n            result.add(readSymbol + READ_SEPARATOR);\n        }\n        else if (pushSymbol === null)\n        {\n            result.add(readSymbol + READ_SEPARATOR + popSymbol + POP_SEPARATOR);\n        }\n        else\n        {\n            result.add(readSymbol + READ_SEPARATOR + popSymbol + POP_SEPARATOR + pushSymbol);\n        }\n    }\n\n    //If it is an empty string...\n    if (result.size <= 0) return allowNull ? null : EMPTY_CHAR;\n    return Array.from(result).join(LINE_SEPARATOR);\n}\n\nexport default PDAGraphLabeler;\n","import PDAGraph from './PDAGraph.js';\n\nconst GRAPH_PARSER_VERSION = '1.0.0';\n\nexport const JSON = {\n    parse(data, dst=null)\n    {\n        if (!dst) dst = new PDAGraph();\n        else dst.clear();\n\n        const nodeDatas = data['nodes'] || [];\n        const nodeCount = Math.min(nodeDatas.length || 0, data['nodeCount'] || 0);\n        const edgeDatas = data['edges'] || [];\n        const edgeCount = Math.min(edgeDatas.length || 0, data['edgeCount'] || 0);\n        const initialIndex = data['initial'] || 0;\n\n        const nodeIndices = new Map();\n        for(let i = 0; i < nodeCount; ++i)\n        {\n            const nodeData = nodeDatas[i];\n            if (!nodeData) continue;\n\n            //NOTE: Assumes createNode will maintain order\n            const node = dst.createNode(nodeData['x'] || 0, nodeData['y'] || 0, nodeData['id']);\n            node.setNodeLabel(nodeData['label'] || '');\n            node.setNodeAccept(nodeData['accept'] || false);\n            node.setNodeCustom(nodeData['custom'] || false);\n\n            nodeIndices.set(i, node);\n        }\n\n        const initialNode = nodeIndices.get(initialIndex);\n        if (initialNode)\n        {\n            dst.setStartNode(initialNode);\n        }\n\n        for(let i = 0; i < edgeCount; ++i)\n        {\n            const edgeData = edgeDatas[i];\n            if (!edgeData) continue;\n            const sourceNode = nodeIndices.get(edgeData['from']) || null;\n            //Cannot create source-less edges\n            if (!sourceNode) continue;\n            const destinationNode = nodeIndices.get(edgeData['to']) || null;\n            //NOTE: Assumes createEdge will maintain order\n            const edge = dst.createEdge(sourceNode, destinationNode, edgeData['id']);\n            const quadData = edgeData['quad'] || {};\n            edge.setEdgeLabel(edgeData['label'] || '');\n            edge.setQuadraticRadians(quadData['radians'] || 0);\n            edge.setQuadraticLength(quadData['length'] || 0);\n        }\n\n        return dst;\n    },\n    objectify(graph)\n    {\n        const graphNodes = graph.getNodes() || [];\n        const nodeCount = graphNodes.length || 0;\n        const graphEdges = graph.getEdges() || [];\n        const edgeCount = graphEdges.length || 0;\n        const graphInitial = graph.getStartNode();\n\n        const nodeDatas = new Array(nodeCount);\n        const nodeIndices = new Map();\n        for(let i = 0; i < nodeCount; ++i)\n        {\n            const node = graphNodes[i];\n            if (node)\n            {\n                //NOTE: Assumes node must have an id\n                const elementID = node.getGraphElementID();\n\n                nodeIndices.set(node, i);\n                nodeDatas[i] = {\n                    id: elementID,\n                    x: node.x || 0, y: node.y || 0,\n                    label: node.getNodeLabel() || '',\n                    accept: node.getNodeAccept() || false,\n                    custom: node.getNodeCustom() || false\n                };\n            }\n        }\n\n        const edgeDatas = new Array(edgeCount);\n        for(let i = 0; i < edgeCount; ++i)\n        {\n            const edge = graphEdges[i];\n            if (edge)\n            {\n                //NOTE: Assumes edge must have an id\n                const elementID = edge.getGraphElementID();\n\n                const quad = edge.getQuadratic() || {};\n                const edgeSource = edge.getEdgeFrom();\n                const edgeDestination = edge.getEdgeTo();\n                const sourceIndex = nodeIndices.has(edgeSource) ? nodeIndices.get(edgeSource) : -1;\n                const destinationIndex = nodeIndices.has(edgeDestination) ? nodeIndices.get(edgeDestination) : -1;\n                edgeDatas[i] = {\n                    id: elementID,\n                    from: sourceIndex,\n                    to: destinationIndex,\n                    quad: { radians: quad['radians'] || 0, length: quad['length'] || 0 },\n                    label: edge.getEdgeLabel() || ''\n                };\n            }\n        }\n\n        const initialIndex = nodeIndices.get(graphInitial) || 0;\n\n        return {\n            nodeCount: nodeCount,\n            nodes: nodeDatas,\n            edgeCount: edgeCount,\n            edges: edgeDatas,\n            initial: initialIndex,\n            _version: GRAPH_PARSER_VERSION\n        };\n    }\n};\n","import React from 'react';\n\nclass PDANodeRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        //TODO: Refer to app.css for comparable colors\n        const node = this.props.node;\n        const nodeLabel = node.getNodeLabel();\n\n        return (\n            <g className=\"graph-node-container\">\n                {/*Outer circle*/}\n                <circle className=\"graph-node\"\n                    cx={node.x}\n                    cy={node.y}\n                    r={node.getNodeSize()}\n\n                    fill=\"#FEE781\"\n                    stroke=\"#000000\" />\n\n                {/*Inner circle*/}\n                {node.getNodeAccept() &&\n                    <circle className=\"graph-node-inner\"\n                        cx={node.x}\n                        cy={node.y}\n                        r={node.getNodeSize() * 0.8}\n                        fill=\"none\"\n\n                        stroke=\"#000000\" />}\n\n                {/*Label*/}\n                <text className=\"graph-node-label\"\n                    x={node.x} y={node.y + 4}\n                    pointerEvents=\"none\"\n                    style={{\n                        userSelect: 'none',\n                        fontSize: (1 - Math.min(Math.max(nodeLabel.length - 2, 0) / 6, 0.5)) + 'em'\n                    }}\n                    textAnchor=\"middle\">\n                    {nodeLabel}\n                </text>\n            </g>\n        );\n    }\n}\n\nexport default PDANodeRenderer;\n","import React from 'react';\n\nimport EdgeRenderer, {DIRECTED_FORWARD} from 'renderer/EdgeRenderer.js';\n\nconst GRAPH_EDGE_CONTAINER_STYLE_NAME = 'graph-edge-container';\n\nclass PDAEdgeRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const edge = this.props.edge;\n        const stroke = this.props.stroke || '#000000';\n        const start = edge.getStartPoint();\n        const end = edge.getEndPoint();\n        const center = edge.getCenterPoint();\n        // const label = edge.getEdgeLabel();\n        const labels = edge.getEdgeLinesFromLabel();\n        const edgeDir = edge.getEdgeDirection();\n\n        return <g className={GRAPH_EDGE_CONTAINER_STYLE_NAME}>\n            <EdgeRenderer\n                directed={DIRECTED_FORWARD}\n                from={start}\n                to={end}\n                center={center}\n                label={labels.join('\\n')}\n                direction={edgeDir}\n                color={stroke}/>\n        </g>;\n    }\n}\n\nexport default PDAEdgeRenderer;\n","import React from 'react';\n\nimport PDANode from 'modules/pda/graph/PDANode.js';\n\nconst NODE_RADIUS = 16;\nconst INITIAL_MARKER_OFFSET_X = -(NODE_RADIUS + (NODE_RADIUS / 2));\n\nclass InitialMarkerRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    render()\n    {\n        const node = this.props.node;\n        //node.x + offset marker back to center if not a node (or is a pointer)\n        const x = node.x + (!(node instanceof PDANode) ? -INITIAL_MARKER_OFFSET_X : 0);\n        const y = node.y;\n        const r = NODE_RADIUS;\n        const d = r * 2;\n        return (\n            <g className=\"graph-initial-container\">\n                <path className=\"graph-initial\" d={\n                    'M' + (x - r) + ' ' + (y) +\n          ' L' + (x - d) + ' ' + (y - r) +\n          ' L' + (x - d) + ' ' + (y + r) +\n          ' Z'}\n                fill=\"none\"\n\n                stroke=\"#000000\"/>\n            </g>\n        );\n    }\n}\n\nexport default InitialMarkerRenderer;\n","import React from 'react';\nimport './PDAGraphRenderer.css';\n\nimport PDANodeRenderer from './PDANodeRenderer.js';\nimport PDAEdgeRenderer from './PDAEdgeRenderer.js';\nimport InitialMarkerRenderer from './InitialMarkerRenderer.js';\n\nclass PDAGraphRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n    //Inherits props from parent\n        const currentModule = this.props.currentModule;\n        const inputController = currentModule.getInputController();\n        const graphController = currentModule.getGraphController();\n        const graph = graphController.getGraph();\n\n        return (\n            <g>\n                {graph.getNodes().map((e, i) => <PDANodeRenderer key={e.getGraphElementID() || i} node={e}/>)}\n                {graph.getEdges().map((e, i) => <PDAEdgeRenderer key={e.getGraphElementID() || i} edge={e}/>)}\n\n                {/* Initial marker and ghost */}\n                { graph.getStartNode() && (inputController.getInputHandlers()[3].ghostInitialMarker == null ?\n                    <InitialMarkerRenderer node={graph.getStartNode()}/> :\n                    <InitialMarkerRenderer node={inputController.getInputHandlers()[3].ghostInitialMarker}/>) }\n            </g>\n        );\n    }\n}\n\nexport default PDAGraphRenderer;\n","import React from 'react';\nimport Style from './PDALabelEditorRenderer.css';\n\nimport PatternInputButton from 'deprecated/system/patterninput/PatternInputButton.js';\nimport { SYMBOL_SEPARATOR, EMPTY_CHAR } from 'modules/pda/graph/PDAEdge.js';\n\nconst RECOMMENDED_SYMBOLS = ['0', '1'];\nconst DEFAULT_SYMBOLS = [EMPTY_CHAR];\n\nclass PDALabelEditorRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    renderSymbol(symbol)\n    {\n        const labelEditor = this.props.parent;\n        if (!labelEditor) return null;\n\n        const inputComponent = labelEditor.inputComponent;\n        return (\n            <PatternInputButton key={symbol} parent={inputComponent} title={symbol}\n                onClick={e=>inputComponent.appendValue(symbol, SYMBOL_SEPARATOR)}/>\n        );\n    }\n\n    /** @override */\n    render()\n    {\n        // const labelEditor = this.props.parent;\n        const currentModule = this.props.currentModule;\n        const machineController = currentModule.getMachineController();\n        const alphabet = machineController.getAlphabet();\n\n        const showDefault = true;\n        const showRecommended = !alphabet || alphabet.length <= 1;\n\n        return (\n            <div className={Style.tray_container}>\n                <span className={Style.tray_used}>\n                    {alphabet.map(e => this.renderSymbol(e))}\n                </span>\n                <span className={Style.tray_default}>\n                    {showRecommended &&\n            RECOMMENDED_SYMBOLS.map(e => this.renderSymbol(e))}\n                    {showDefault &&\n            DEFAULT_SYMBOLS.map(e => this.renderSymbol(e))}\n                </span>\n            </div>\n        );\n    }\n}\n\nexport default PDALabelEditorRenderer;\n","import React from 'react';\nimport Style from './StateListElement.css';\n\nconst SUBMIT_KEY_CODE = 'Enter';\nconst CANCEL_KEY_CODE = 'Escape';\n\nclass StateListElement extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            value: null,\n            error: false\n        };\n\n        this.onValueChange = this.onValueChange.bind(this);\n        this.onFocus = this.onFocus.bind(this);\n        this.onBlur = this.onBlur.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.onKeyUp = this.onKeyUp.bind(this);\n    }\n\n    onFocus(e)\n    {\n        const target = e.target;\n        const node = this.props.node;\n\n        const nodeLabel = node ? node.getNodeLabel() : null;\n        this.setState({\n            value: nodeLabel,\n            error: false\n        }, () => target.select());\n\n        //Call any listening focus\n        if (this.props.onFocus) this.props.onFocus(e, this);\n    }\n\n    onBlur(e)\n    {\n        const nextLabel = this.state.value;\n\n        //Reset to nothing (will use node.getNodeLabel() instead)\n        this.setState({ value: null, error: false });\n\n        //Call any listening blurs\n        if (this.props.onBlur) this.props.onBlur(e, this, nextLabel);\n    }\n\n    onKeyDown(e)\n    {\n        const keyCode = e.key;\n        if (keyCode === SUBMIT_KEY_CODE || keyCode === CANCEL_KEY_CODE)\n        {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n\n    onKeyUp(e)\n    {\n        const keyCode = e.key;\n        const target = e.target;\n\n        if (keyCode === SUBMIT_KEY_CODE)\n        {\n            target.blur();\n        }\n        else if (keyCode === CANCEL_KEY_CODE)\n        {\n            this.setState({\n                value: null,\n                error: false\n            }, () => target.blur());\n        }\n    }\n\n    onValueChange(e)\n    {\n        let value = e.target.value.trim();\n        let error = false;\n\n        if (this.props.onChange)\n        {\n            try\n            {\n                this.props.onChange(e, this, value);\n            }\n            catch(e)\n            {\n                error = true;\n            }\n        }\n\n        this.setState({\n            value: value,\n            error: error\n        });\n    }\n\n    /** @override */\n    render()\n    {\n        const node = this.props.node;\n        const inputValue = this.state.value;\n\n        const nodeLabel = node ? node.getNodeLabel() : '';\n        const nodeCustom = node ? (node.getNodeCustom() || inputValue !== null && inputValue !== nodeLabel) : false;\n        const nodeAccept = node ? node.getNodeAccept() : false;\n        //Must check for null, not ONLY truthy because value might be empty string.\n        const displayValue = inputValue === null ? nodeLabel : inputValue;\n\n        return (\n            <div id={this.props.id}\n                className={Style.element_container +\n          (nodeCustom ? ' custom ' : '') +\n          ((!node.getNodeCustom() && displayValue.length <= 0) ? ' empty ' : '') +\n          (inputValue !== null && this.state.error ? ' error ' : '') +\n          (nodeAccept ? ' accept ' : '') +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <input\n                    spellCheck={false}\n                    style={{width: displayValue.length + 'ch'}}\n                    value={displayValue}\n                    onChange={this.onValueChange}\n                    onFocus={this.onFocus}\n                    onBlur={this.onBlur}\n                    onKeyDown={this.onKeyDown}\n                    onKeyUp={this.onKeyUp}/>\n            </div>\n        );\n    }\n}\n\nexport default StateListElement;\n","import React from 'react';\nimport Style from './StateListView.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport BoxAddIcon from 'components/iconset/BoxAddIcon.js';\nimport TriangleIcon from 'components/iconset/TriangleIcon.js';\n\nimport StateListElement from './StateListElement.js';\n\nclass StateListView extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this._prevX = 0;\n        this._prevY = 0;\n\n        this.onElementAdd = this.onElementAdd.bind(this);\n        this.onElementFocus = this.onElementFocus.bind(this);\n        this.onElementBlur = this.onElementBlur.bind(this);\n        this.onElementChange = this.onElementChange.bind(this);\n    }\n\n    onElementAdd(e)\n    {\n        const graphController = this.props.graphController;\n        this._prevX += 16;\n        this._prevY += 16;\n        const node = graphController.createNode(this._prevX, this._prevY);\n        graphController.focusOnNode(node);\n    }\n\n    onElementFocus(e, element)\n    {\n        this._prevX = element.props.node.x;\n        this._prevY = element.props.node.y;\n        const graphController = this.props.graphController;\n        graphController.focusOnNode(element.props.node);\n    }\n\n    onElementBlur(e, element, nextLabel)\n    {\n        const node = element.props.node;\n        if (!node) return;\n\n        const graphController = this.props.graphController;\n\n        //The value is already processed, abort\n        if (nextLabel !== null)\n        {\n            const graph = graphController.getGraph();\n            if (nextLabel.length > 0)\n            {\n                const otherNodes = graph.getNodesByLabel(nextLabel);\n                if (otherNodes.length <= 0)\n                {\n                    //None other have the same name. Rename it!\n                    graphController.renameNode(node, nextLabel);\n                }\n                else\n                {\n                    //Found something already named that! Ignore!\n                }\n            }\n            else if (node.getNodeCustom())\n            {\n                //Remove custom naming instead of deleting.\n                node.setNodeCustom(false);\n                graphController.applyAutoRename();\n            }\n            else\n            {\n                //Delete!\n                graphController.deleteTargetNode(node);\n            }\n        }\n    }\n\n    onElementChange(e, element, value)\n    {\n        const graphController = this.props.graphController;\n\n        if (value.length > 0)\n        {\n            const graph = graphController.getGraph();\n            const otherNodes = graph.getNodesByLabel(value);\n\n            //If there are more than 1 nodes by the same name,\n            //OR if the duplicate node found is NOT the same node\n            if (otherNodes.length > 1 || (otherNodes.length === 1 && otherNodes[0] !== element.props.node))\n            {\n                throw new Error('Not a valid node label');\n            }\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        const graphController = this.props.graphController;\n        const graph = graphController.getGraph();\n        const nodes = graph.getNodes();\n\n        return (\n            <div id={this.props.id}\n                className={Style.list_container}\n                style={this.props.style}>\n                <div className={Style.element_list}>\n                    <TriangleIcon className={Style.first_marker}/>\n                    {nodes.map(e => <StateListElement key={e.getGraphElementID()}\n                        node={e}\n                        onFocus={this.onElementFocus}\n                        onBlur={this.onElementBlur}\n                        onChange={this.onElementChange}/>)}\n                </div>\n                <IconButton className={Style.add_button}\n                    title=\"Add State\"\n                    onClick={this.onElementAdd}>\n                    <BoxAddIcon/>\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nexport default StateListView;\n","import React from 'react';\nimport Style from './AlphabetListElement.css';\n\nconst SUBMIT_KEY_CODE = 'Enter';\nconst CANCEL_KEY_CODE = 'Escape';\n\nclass AlphabetListElement extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this._inputElement = null;\n\n        this.state = {\n            value: null,\n            error: false\n        };\n\n        this.onValueChange = this.onValueChange.bind(this);\n        this.onFocus = this.onFocus.bind(this);\n        this.onBlur = this.onBlur.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.onKeyUp = this.onKeyUp.bind(this);\n    }\n\n    onFocus(e)\n    {\n        const target = e.target;\n        const symbol = this.props.symbol;\n\n        this.setState({\n            value: symbol,\n            error: false\n        }, () => target.select());\n\n        //Call any listening focus\n        if (this.props.onFocus) this.props.onFocus(e, this);\n    }\n\n    onBlur(e)\n    {\n        const nextSymbol = this.state.value;\n\n        //Call any listening blurs\n        if (this.props.onBlur) this.props.onBlur(e, this, nextSymbol);\n\n        //Reset to nothing (will use props.symbol instead)\n        this.setState({ value: null, error: false });\n    }\n\n    onKeyDown(e)\n    {\n        const keyCode = e.key;\n        if (keyCode === SUBMIT_KEY_CODE || keyCode === CANCEL_KEY_CODE)\n        {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n\n    onKeyUp(e)\n    {\n        const keyCode = e.key;\n        const target = e.target;\n\n        if (keyCode === SUBMIT_KEY_CODE)\n        {\n            target.blur();\n        }\n        else if (keyCode === CANCEL_KEY_CODE)\n        {\n            this.setState({\n                value: null,\n                error: false\n            }, () => target.blur());\n        }\n    }\n\n    onValueChange(e)\n    {\n        let value = e.target.value.trim();\n        let error = false;\n\n        if (this.props.onChange)\n        {\n            try\n            {\n                this.props.onChange(e, this, value);\n            }\n            catch(e)\n            {\n                error = true;\n            }\n        }\n\n        this.setState({\n            value: value,\n            error: error\n        });\n    }\n\n    focus()\n    {\n        this._inputElement.focus();\n    }\n\n    /** @override */\n    render()\n    {\n        const inputSymbol = this.state.value;\n        const displaySymbol = inputSymbol === null ? this.props.symbol : inputSymbol;\n\n        const symbolUsed = this.props.used || false;\n\n        return (\n            <div id={this.props.id}\n                className={Style.element_container +\n          (displaySymbol !== null && displaySymbol.length <= 0 ? ' empty ' : '') +\n          (inputSymbol !== null && this.state.error ? ' error ' : '') +\n          (symbolUsed ? ' used ' : '') +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <input ref={ref=>this._inputElement=ref}\n                    spellCheck={false}\n                    maxLength={1}\n                    style={{width: '1ch'}}\n                    value={displaySymbol}\n                    onChange={this.onValueChange}\n                    onFocus={this.onFocus}\n                    onBlur={this.onBlur}\n                    onKeyDown={this.onKeyDown}\n                    onKeyUp={this.onKeyUp}/>\n            </div>\n        );\n    }\n}\n\nexport default AlphabetListElement;\n","import React from 'react';\nimport Style from './AlphabetListView.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport BoxAddIcon from 'components/iconset/BoxAddIcon.js';\n\nimport AlphabetListElement from './AlphabetListElement.js';\n\nclass AlphabetListView extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.newSymbolComponent = null;\n\n        this.state = {\n            useNewSymbol: false\n        };\n\n        this.onElementAdd = this.onElementAdd.bind(this);\n        this.onElementFocus = this.onElementFocus.bind(this);\n        this.onElementBlur = this.onElementBlur.bind(this);\n        this.onElementChange = this.onElementChange.bind(this);\n    }\n\n    onElementAdd(e)\n    {\n    //Create a new alphabet element...\n        this.setState({useNewSymbol: true}, () => \n        {\n            this.newSymbolComponent.focus();\n        });\n    }\n\n    onElementFocus(e, element)\n    {\n    //Do nothing...\n    }\n\n    onElementBlur(e, element, nextSymbol)\n    {\n        const symbol = element.props.symbol;\n        const machineController = this.props.machineController;\n\n        if (nextSymbol !== null)\n        {\n            const machine = machineController.getMachineBuilder().getMachine();\n            if (nextSymbol.length > 0)\n            {\n                if (!machine.isSymbol(nextSymbol))\n                {\n                    if (symbol)\n                    {\n                        //None other have the same name. Rename it!\n                        machineController.renameSymbol(symbol, nextSymbol);\n                    }\n                    else\n                    {\n                        //None other have the same name. Create it!\n                        machineController.createSymbol(nextSymbol);\n                    }\n                }\n                else\n                {\n                    //Found something already named that! Ignore!\n                }\n            }\n            else if (symbol)\n            {\n                //Delete!\n                machineController.deleteSymbol(symbol);\n            }\n        }\n\n        //Regardless, just close the \"new\" alphabet element if open.\n        if (this.state.useNewSymbol)\n        {\n            this.setState({ useNewSymbol: false });\n        }\n    }\n\n    onElementChange(e, element, symbol)\n    {\n        const machineController = this.props.machineController;\n\n        if (symbol.length > 0)\n        {\n            //If there are more than 1 symbols by the same name,\n            //OR if the duplicate symbol found is NOT the same symbol\n            const machine = machineController.getMachineBuilder().getMachine();\n            if (machine.isSymbol(symbol) && symbol !== element.props.symbol)\n            {\n                throw new Error('Not a valid symbol');\n            }\n        }\n    }\n\n    renderAlphabetList(machine, alphabet)\n    {\n        const result = [];\n        for(const symbol of alphabet)\n        {\n            if (!symbol) continue;\n\n            result.push(<AlphabetListElement key={symbol}\n                symbol={symbol}\n                used={machine.isUsedSymbol(symbol)}\n                onFocus={this.onElementFocus}\n                onBlur={this.onElementBlur}\n                onChange={this.onElementChange}/>);\n        }\n        return result;\n    }\n\n    /** @override */\n    render()\n    {\n        const machineController = this.props.machineController;\n        const machine = machineController.getMachineBuilder().getMachine();\n        const alphabet = machine.getAlphabet();\n\n        return (\n            <div id={this.props.id}\n                className={Style.list_container}\n                style={this.props.style}>\n                <div className={Style.element_list}>\n                    {this.renderAlphabetList(machine, alphabet)}\n                    <AlphabetListElement\n                        ref={ref=>this.newSymbolComponent=ref}\n                        style={{display: this.state.useNewSymbol ? 'block' : 'none'}}\n                        symbol={''}\n                        onFocus={this.onElementFocus}\n                        onBlur={this.onElementBlur}\n                        onChange={this.onElementChange}/>\n                </div>\n                <IconButton className={Style.add_button}\n                    title=\"Add Symbol\"\n                    onClick={this.onElementAdd}>\n                    <BoxAddIcon/>\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nexport default AlphabetListView;\n","import React from 'react';\nimport Style from './StackAlphabetListElement.css';\n\nconst SUBMIT_KEY_CODE = 'Enter';\nconst CANCEL_KEY_CODE = 'Escape';\n\nclass StackAlphabetListElement extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this._inputElement = null;\n\n        this.state = {\n            value: null,\n            error: false\n        };\n\n        this.onValueChange = this.onValueChange.bind(this);\n        this.onFocus = this.onFocus.bind(this);\n        this.onBlur = this.onBlur.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.onKeyUp = this.onKeyUp.bind(this);\n    }\n\n    onFocus(e)\n    {\n        const target = e.target;\n        const symbol = this.props.symbol;\n\n        this.setState({\n            value: symbol,\n            error: false\n        }, () => target.select());\n\n        //Call any listening focus\n        if (this.props.onFocus) this.props.onFocus(e, this);\n    }\n\n    onBlur(e)\n    {\n        const nextSymbol = this.state.value;\n\n        //Call any listening blurs\n        if (this.props.onBlur) this.props.onBlur(e, this, nextSymbol);\n\n        //Reset to nothing (will use props.symbol instead)\n        this.setState({ value: null, error: false });\n    }\n\n    onKeyDown(e)\n    {\n        const keyCode = e.key;\n        if (keyCode === SUBMIT_KEY_CODE || keyCode === CANCEL_KEY_CODE)\n        {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n\n    onKeyUp(e)\n    {\n        const keyCode = e.key;\n        const target = e.target;\n\n        if (keyCode === SUBMIT_KEY_CODE)\n        {\n            target.blur();\n        }\n        else if (keyCode === CANCEL_KEY_CODE)\n        {\n            this.setState({\n                value: null,\n                error: false\n            }, () => target.blur());\n        }\n    }\n\n    onValueChange(e)\n    {\n        let value = e.target.value.trim();\n        let error = false;\n\n        if (this.props.onChange)\n        {\n            try\n            {\n                this.props.onChange(e, this, value);\n            }\n            catch(e)\n            {\n                error = true;\n            }\n        }\n\n        this.setState({\n            value: value,\n            error: error\n        });\n    }\n\n    focus()\n    {\n        this._inputElement.focus();\n    }\n\n    /** @override */\n    render()\n    {\n        const inputSymbol = this.state.value;\n        const displaySymbol = inputSymbol === null ? this.props.symbol : inputSymbol;\n\n        const symbolUsed = this.props.used || false;\n\n        return (\n            <div id={this.props.id}\n                className={Style.element_container +\n          (displaySymbol !== null && displaySymbol.length <= 0 ? ' empty ' : '') +\n          (inputSymbol !== null && this.state.error ? ' error ' : '') +\n          (symbolUsed ? ' used ' : '') +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <input ref={ref=>this._inputElement=ref}\n                    spellCheck={false}\n                    maxLength={1}\n                    style={{width: '1ch'}}\n                    value={displaySymbol}\n                    onChange={this.onValueChange}\n                    onFocus={this.onFocus}\n                    onBlur={this.onBlur}\n                    onKeyDown={this.onKeyDown}\n                    onKeyUp={this.onKeyUp}/>\n            </div>\n        );\n    }\n}\n\nexport default StackAlphabetListElement;\n","import React from 'react';\nimport Style from './StackAlphabetListView.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport BoxAddIcon from 'components/iconset/BoxAddIcon.js';\n\nimport StackAlphabetListElement from './StackAlphabetListElement.js';\n\nclass StackAlphabetListView extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.newSymbolComponent = null;\n\n        this.state = {\n            useNewSymbol: false\n        };\n\n        this.onElementAdd = this.onElementAdd.bind(this);\n        this.onElementFocus = this.onElementFocus.bind(this);\n        this.onElementBlur = this.onElementBlur.bind(this);\n        this.onElementChange = this.onElementChange.bind(this);\n    }\n\n    onElementAdd(e)\n    {\n    //Create a new alphabet element...\n        this.setState({useNewSymbol: true}, () => \n        {\n            this.newSymbolComponent.focus();\n        });\n    }\n\n    onElementFocus(e, element)\n    {\n    //Do nothing...\n    }\n\n    onElementBlur(e, element, nextSymbol)\n    {\n        const symbol = element.props.symbol;\n        const machineController = this.props.machineController;\n\n        if (nextSymbol !== null)\n        {\n            const machine = machineController.getMachineBuilder().getMachine();\n            if (nextSymbol.length > 0)\n            {\n                if (!machine.isStackSymbol(nextSymbol))\n                {\n                    if (symbol)\n                    {\n                        //None other have the same name. Rename it!\n                        machineController.renameStackSymbol(symbol, nextSymbol);\n                    }\n                    else\n                    {\n                        //None other have the same name. Create it!\n                        machineController.createStackSymbol(nextSymbol);\n                    }\n                }\n                else\n                {\n                    //Found something already named that! Ignore!\n                }\n            }\n            else if (symbol)\n            {\n                //Delete!\n                machineController.deleteStackSymbol(symbol);\n            }\n        }\n\n        //Regardless, just close the \"new\" alphabet element if open.\n        if (this.state.useNewSymbol)\n        {\n            this.setState({ useNewSymbol: false });\n        }\n    }\n\n    onElementChange(e, element, symbol)\n    {\n        const machineController = this.props.machineController;\n\n        if (symbol.length > 0)\n        {\n            //If there are more than 1 symbols by the same name,\n            //OR if the duplicate symbol found is NOT the same symbol\n            const machine = machineController.getMachineBuilder().getMachine();\n            if (machine.isStackSymbol(symbol) && symbol !== element.props.symbol)\n            {\n                throw new Error('Not a valid symbol');\n            }\n        }\n    }\n\n    renderStackAlphabetList(machine, alphabet)\n    {\n        const result = [];\n        for(const symbol of alphabet)\n        {\n            if (!symbol) continue;\n\n            result.push(<StackAlphabetListElement key={symbol}\n                symbol={symbol}\n                used={machine.isUsedStackSymbol(symbol)}\n                onFocus={this.onElementFocus}\n                onBlur={this.onElementBlur}\n                onChange={this.onElementChange}/>);\n        }\n        return result;\n    }\n\n    /** @override */\n    render()\n    {\n        const machineController = this.props.machineController;\n        const machine = machineController.getMachineBuilder().getMachine();\n        const alphabet = machine.getStackAlphabet();\n\n        return (\n            <div id={this.props.id}\n                className={Style.list_container}\n                style={this.props.style}>\n                <div className={Style.element_list}>\n                    {this.renderStackAlphabetList(machine, alphabet)}\n                    <StackAlphabetListElement\n                        ref={ref=>this.newSymbolComponent=ref}\n                        style={{display: this.state.useNewSymbol ? 'block' : 'none'}}\n                        symbol={''}\n                        onFocus={this.onElementFocus}\n                        onBlur={this.onElementBlur}\n                        onChange={this.onElementChange}/>\n                </div>\n                <IconButton className={Style.add_button}\n                    title=\"Add Stack\"\n                    onClick={this.onElementAdd}>\n                    <BoxAddIcon/>\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nexport default StackAlphabetListView;\n","import React from 'react';\nimport Style from './AutoStateLabelView.css';\n\nimport FormattedInput from 'deprecated/system/formattedinput/FormattedInput.js';\n\nclass AutoStateLabelView extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.onAutoStatePrefixSubmit = this.onAutoStatePrefixSubmit.bind(this);\n        this.onAutoStatePrefixFormat = this.onAutoStatePrefixFormat.bind(this);\n    }\n\n    onAutoStatePrefixSubmit(next, prev)\n    {\n        const graphController = this.props.graphController;\n        const graphLabeler = graphController.getGraphLabeler();\n\n        const prefix = graphLabeler.getDefaultNodeLabelPrefix();\n        if (prefix != next)\n        {\n            graphLabeler.setDefaultNodeLabelPrefix(next);\n            graphController.applyAutoRename();\n        }\n    }\n\n    onAutoStatePrefixFormat(value)\n    {\n        return value && value.length > 0 ? value :\n            this.props.graphController.getGraphLabeler().getDefaultNodeLabelPrefix();\n    }\n\n    /** @override */\n    render()\n    {\n        const graphController = this.props.graphController;\n\n        return (\n            <div id={this.props.id}\n                className={Style.select_container +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <label className={Style.select_label}>\n          State Labels\n                </label>\n                <FormattedInput\n                    className={Style.prefix_editor}\n                    defaultValue={graphController.getGraphLabeler().getDefaultNodeLabelPrefix()}\n                    captureOnExit=\"save\"\n                    formatter={this.onAutoStatePrefixFormat}\n                    onSubmit={this.onAutoStatePrefixSubmit}/>\n                <select className={Style.postfix_selector}\n                    onChange={this.onMachineTypeChange}\n                    disabled={true}>\n                    <option>0-9</option>\n                    <option>a-z</option>\n                    <option>A-Z</option>\n                </select>\n            </div>\n        );\n    }\n}\n\nexport default AutoStateLabelView;\n","import React from 'react';\nimport Style from './OverviewPanel.css';\n\nimport PanelContainer from 'experimental/panels/PanelContainer.js';\nimport PanelSection from 'experimental/panels/PanelSection.js';\nimport PanelDivider from 'experimental/panels/PanelDivider.js';\nimport PanelSwitch from 'experimental/panels/PanelSwitch.js';\n\nimport StateListView from './states/StateListView.js';\nimport AlphabetListView from './alphabet/AlphabetListView.js';\nimport StackAlphabetListView from './stackalphabet/StackAlphabetListView.js';\nimport AutoStateLabelView from './AutoStateLabelView.js';\n\nclass OverviewPanel extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.onAutoLayoutApply = this.onAutoLayoutApply.bind(this);\n        this.onAutoLayoutChange = this.onAutoLayoutChange.bind(this);\n        this.onAutoLabelChange = this.onAutoLabelChange.bind(this);\n        this.onSnapToGridChange = this.onSnapToGridChange.bind(this);\n    }\n\n    onAutoLayoutApply(e)\n    {\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        graphController.applyAutoLayout();\n    }\n\n    onAutoLayoutChange(e)\n    {\n    //TODO: Not yet implemented...\n    }\n\n    onAutoLabelChange(e)\n    {\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        graphController.setAutoRenameNodes(e.target.checked);\n    }\n\n    onSnapToGridChange(e)\n    {\n    //TODO: Not yet implemented...\n    }\n\n    /** @override */\n    render()\n    {\n        const drawer = this.props.drawer;\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        const machineController = currentModule.getMachineController();\n        const autoRename = graphController.shouldAutoRenameNodes();\n\n        const drawerFull = drawer.isDrawerFullscreen();\n\n        return (\n            <PanelContainer id={this.props.id}\n                className={this.props.className}\n                style={this.props.style}\n                title={OverviewPanel.TITLE}>\n\n                <PanelSection title={'States'} initial={true} full={drawerFull}>\n                    <StateListView graphController={graphController}/>\n                </PanelSection>\n                <PanelSection title={'Alphabet'} initial={true} full={drawerFull}>\n                    <AlphabetListView machineController={machineController}/>\n                </PanelSection>\n                <PanelSection title={'Stack Alphabet'} initial={true} full={drawerFull}>\n                    <StackAlphabetListView machineController={machineController}/>\n                </PanelSection>\n\n                <PanelDivider/>\n\n                <AutoStateLabelView graphController={graphController}/>\n\n                <button className={Style.autolayout_button} onClick={this.onAutoLayoutApply} disabled={graphController.getGraph().isEmpty()}>\n                    {I18N.toString('action.overview.autolayout')}\n                </button>\n\n                <PanelDivider/>\n\n                <PanelSwitch id={'overview-auto-label'}\n                    checked={autoRename}\n                    title={'Auto rename nodes'}\n                    onChange={this.onAutoLabelChange}/>\n                <PanelSwitch id={'overview-auto-layout'}\n                    checked={false}\n                    title={'Auto layout nodes'}\n                    disabled={true}\n                    onChange={this.onAutoLayoutChange}/>\n                <PanelSwitch id={'overview-snap-grid'}\n                    checked={false}\n                    title={'Snap-to-grid'}\n                    disabled={true}\n                    onChange={this.onSnapToGridChange}/>\n\n            </PanelContainer>\n        );\n    }\n}\nObject.defineProperty(OverviewPanel, 'TITLE', {\n    get: function() { return I18N.toString('component.overview.title'); }\n});\n\nexport default OverviewPanel;\n","import React from 'react';\nimport Style from './TestItem.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport SubtractIcon from 'components/iconset/SubtractIcon.js';\nimport CheckCircleIcon from 'components/iconset/CheckCircleIcon.js';\nimport CrossCircleIcon from 'components/iconset/CrossCircleIcon.js';\nimport PendingIcon from 'components/iconset/PendingIcon.js';\nimport RunningManIcon from 'components/iconset/RunningManIcon.js';\n\nexport const DEFAULT_MODE = 'default';\nexport const SUCCESS_MODE = 'success';\nexport const FAILURE_MODE = 'failure';\nexport const WORKING_MODE = 'working';\n\nclass TestItem extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.inputElement = null;\n\n        this.state = {\n            value: this.props.defaultValue || '',\n            status: DEFAULT_MODE\n        };\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    focus()\n    {\n        if (this.inputElement)\n        {\n            this.inputElement.focus();\n        }\n    }\n\n    setValue(value, callback=null)\n    {\n        if (this.state.value !== value)\n        {\n            this.setState({value: value}, callback);\n        }\n        else if (callback)\n        {\n            callback();\n        }\n    }\n\n    setStatus(status, callback=null)\n    {\n        if (this.state.status !== status)\n        {\n            this.setState({status: status}, callback);\n        }\n        else if (callback)\n        {\n            callback();\n        }\n    }\n\n    resetStatus(callback=null)\n    {\n        if (this.state.status !== DEFAULT_MODE)\n        {\n            this.setState({status: DEFAULT_MODE}, callback);\n        }\n        else if (callback)\n        {\n            callback();\n        }\n    }\n\n    getValue()\n    {\n        return this.state.value;\n    }\n\n    getStatus()\n    {\n        return this.state.status;\n    }\n\n    onChange(e)\n    {\n        const nextValue = e.target.value;\n        if (this.state.value !== nextValue)\n        {\n            this.setState({value: nextValue, status: DEFAULT_MODE});\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        const onDelete = this.props.onDelete;\n        const showDelete = true;\n\n        const onTest = this.props.onTest;\n        const showTest = true;\n\n        const active = this.props.active;\n        // const subtitle = this.props.subtitle;\n        const placeholder = this.props.placeholder;\n        const status = this.state.status;\n\n        return (\n            <div id={this.props.id}\n                className={Style.test_item_container +\n          (active ? ' active ' : '') +\n          ' ' + status +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                {showTest &&\n          <IconButton className={Style.test_button}\n              title={'Test'}\n              disabled={!onTest}\n              onClick={(e) => onTest(e, this)}>\n              {status === SUCCESS_MODE ?\n                  <CheckCircleIcon/> :\n                  status === FAILURE_MODE ?\n                      <CrossCircleIcon/> :\n                      status === WORKING_MODE ?\n                          <PendingIcon/> :\n                          <RunningManIcon/>}\n          </IconButton>}\n                <div className={Style.test_input}>\n                    <input ref={ref=>this.inputElement=ref} type=\"text\"\n                        placeholder={placeholder}\n                        value={this.state.value}\n                        onChange={this.onChange}/>\n                    <label>{this.props.subtitle}</label>\n                </div>\n                {showDelete &&\n          <IconButton className={Style.delete_button}\n              title={'Delete'}\n              disabled={!onDelete}\n              onClick={(e) => onDelete(e, this)}>\n              <SubtractIcon/>\n          </IconButton>}\n            </div>\n        );\n    }\n}\n\nexport default TestItem;\n","import React from 'react';\nimport Style from './TestListView.css';\n\nimport { guid } from 'util/MathHelper.js';\nimport { downloadText } from 'util/Downloader.js';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport IconUploadButton from 'experimental/components/IconUploadButton.js';\n\nimport PageContentIcon from 'components/iconset/PageContentIcon.js';\nimport UploadIcon from 'components/iconset/UploadIcon.js';\nimport DownloadIcon from 'components/iconset/DownloadIcon.js';\nimport CrossIcon from 'components/iconset/CrossIcon.js';\nimport AddIcon from 'components/iconset/AddIcon.js';\nimport RunningManIcon from 'components/iconset/RunningManIcon.js';\n\nimport TestItem, {SUCCESS_MODE, FAILURE_MODE, WORKING_MODE, DEFAULT_MODE} from './TestItem.js';\n\nconst ACCEPT_FILE_TYPES = ['.txt'];\nconst TEST_FILENAME = 'test.txt';\n// const TEST_REFRESH_TICKS = 30;\n\nclass TestListView extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this._testList = [];\n        this._testName = TEST_FILENAME;\n\n        this.onTestNew = this.onTestNew.bind(this);\n        this.onTestUpload = this.onTestUpload.bind(this);\n        this.onTestDownload = this.onTestDownload.bind(this);\n        this.onTestClose = this.onTestClose.bind(this);\n        this.onTestAdd = this.onTestAdd.bind(this);\n        this.onTestDelete = this.onTestDelete.bind(this);\n        this.onTestTest = this.onTestTest.bind(this);\n        this.onTestRunAll = this.onTestRunAll.bind(this);\n        this.onGraphChange = this.onGraphChange.bind(this);\n    }\n\n    /** @override */\n    componentDidMount()\n    {\n        this.props.graphController.getGraphChangeHandler().addListener(this.onGraphChange);\n    }\n\n    /** @override */\n    componentWillUnmount()\n    {\n        this.props.graphController.getGraphChangeHandler().removeListener(this.onGraphChange);\n    }\n\n    onGraphChange(graph)\n    {\n        for(const test of this._testList)\n        {\n            test.ref.resetStatus();\n        }\n    }\n\n    onTestNew(e)\n    {\n        if (!this.isEmpty())\n        {\n            this.onTestClose(e);\n        }\n\n        this.onTestAdd(e);\n    }\n\n    onTestUpload(fileBlob)\n    {\n        const reader = new FileReader();\n        reader.onload = (event) => \n        {\n            try\n            {\n                this._testName = fileBlob.name;\n                this._testList.length = 0;\n\n                const tests = event.target.result.split('\\n');\n                for(let test of tests)\n                {\n                    test = test.trim();\n                    if (test.length > 0)\n                    {\n                        this._testList.push({\n                            id: guid(),\n                            defaultValue: test,\n                            ref: null\n                        });\n                    }\n                }\n\n                //Make sure an element exists, at least\n                if (this._testList.length <= 0)\n                {\n                    this.onTestAdd(null);\n                }\n            }\n            catch(e)\n            {\n                reader.abort();\n            }\n        };\n        reader.readAsText(fileBlob);\n    }\n\n    onTestDownload(e)\n    {\n        const testStrings = [];\n        for(const test of this._testList)\n        {\n            const ref = test.ref;\n            if (ref)\n            {\n                testStrings.push(ref.getValue());\n            }\n        }\n\n        downloadText(this._testName, testStrings.join('\\n'));\n    }\n\n    onTestClose(e)\n    {\n        const tester = this.props.tester;\n        if (tester.isTesting())\n        {\n            tester.stopTest();\n        }\n\n        this._testList.length = 0;\n    }\n\n    onTestAdd(e)\n    {\n        this._testList.push({\n            id: guid(),\n            defaultValue: '',\n            ref: null\n        });\n    }\n\n    onTestRunAll(e)\n    {\n        // const tester = this.props.tester;\n        let i = 0;\n\n        const nextTest = () => \n        {\n            const test = this._testList[i];\n            this.onTestTest(null, test.ref, true, () => \n            {\n                ++i;\n                if (i < this._testList.length)\n                {\n                    nextTest();\n                }\n            });\n        };\n        nextTest();\n    }\n\n    onTestDelete(e, item)\n    {\n    //Already handled in render()\n    }\n\n    onTestTest(e, item, forceImmediate=false, callback=null)\n    {\n        const immediate = forceImmediate || this.props.immediate;\n        const tester = this.props.tester;\n        const itemValue = item.getValue();\n\n        item.setState({status: WORKING_MODE});\n\n        const graphController = this.props.graphController;\n        const machineController = this.props.machineController;\n        tester.startTest(itemValue, graphController, machineController).then((result) => \n        {\n            item.setState({status: result ? SUCCESS_MODE : FAILURE_MODE});\n        }, (err) => \n        {\n            //It didn't work out :(\n            item.setState({status: DEFAULT_MODE});\n        });\n\n        if (immediate)\n        {\n            const promise = tester.runTest(graphController, machineController, true);\n            if (callback)\n            {\n                promise.then(callback);\n            }\n        }\n    }\n\n    isEmpty()\n    {\n        return this._testList.length <= 0;\n    }\n  \n    /** @override */\n    render()\n    {\n        // const immediate = this.props.immediate;\n        const tester = this.props.tester;\n\n        const graphController = this.props.graphController;\n        // const machineController = this.props.machineController;\n\n        const empty = this.isEmpty();\n        const disabled = tester && tester.isTesting();\n\n        return (\n            <div id={this.props.id}\n                className={Style.test_container +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <div className={Style.test_control_tray}>\n                    <IconButton className={Style.test_control_button}\n                        title={I18N.toString('action.testing.new')}\n                        onClick={this.onTestNew}>\n                        <PageContentIcon/>\n                    </IconButton>\n                    <IconUploadButton className={Style.test_control_button}\n                        title={I18N.toString('action.testing.import')}\n                        accept={ACCEPT_FILE_TYPES.join(',')}\n                        onUpload={this.onTestUpload}>\n                        <UploadIcon/>\n                    </IconUploadButton>\n                    <IconButton className={Style.test_control_button}\n                        title={I18N.toString('action.testing.save')}\n                        disabled={empty}\n                        onClick={this.onTestDownload}>\n                        <DownloadIcon/>\n                    </IconButton>\n                    <IconButton className={Style.test_control_button}\n                        title={I18N.toString('action.testing.clear')}\n                        disabled={empty}\n                        onClick={this.onTestClose}>\n                        <CrossIcon/>\n                    </IconButton>\n                </div>\n                <div className={Style.test_list_container +\n          (empty ? ' empty ' : '') +\n          (disabled ? ' disabled ': '')}>\n                    <IconButton className={Style.test_list_add}\n                        title={'Add'} onClick={this.onTestAdd}>\n                        <AddIcon/>\n                        <span className={Style.test_list_count}>\n                            {!empty ? '' + this._testList.length : ''}\n                        </span>\n                    </IconButton>\n                    <div className={Style.test_list_scroll_container}>\n                        <div className={Style.test_list}>\n                            {this._testList.map((e, i) => \n                            {\n                                const id = e.id;\n                                const defaultValue = e['defaultValue'] || '';\n                                let testCallback = this.onTestTest;\n                                if (!tester || graphController.getGraph().isEmpty())\n                                {\n                                    testCallback = null;\n                                }\n                                return <TestItem key={id} ref={ref=>e.ref=ref}\n                                    defaultValue={defaultValue}\n                                    onTest={testCallback}\n                                    onDelete={(e, item) => \n                                    {\n                                        this._testList.splice(i, 1);\n                                        this.onTestDelete(e, item);\n                                    }}/>;\n                            })}\n                        </div>\n                    </div>\n                    <IconButton className={Style.test_list_runall}\n                        title={'Run All'} onClick={this.onTestRunAll}>\n                        <RunningManIcon/>\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TestListView;\n","import React from 'react';\nimport DefaultNotificationLayout, {STYLE_TYPE_ERROR} from 'session/manager/notification/components/DefaultNotificationLayout.js';\n\nclass StateNotificationLayout extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.targetIndex = 0;\n        this.targetLabel = '';\n        const targets = props.message.targets;\n        for(const target of targets)\n        {\n            if (this.targetLabel.length > 0)\n            {\n                this.targetLabel += ', ';\n            }\n            this.targetLabel += target.getNodeLabel();\n        }\n\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick(e)\n    {\n        const notification = this.props.notification;\n        const message = this.props.message;\n\n        const graphController = this.props.graphController;\n\n        switch(e.target.value)\n        {\n        case 'locate':\n            {\n                const targets = message.targets;\n                const targetLength = targets.length;\n                if (targetLength > 0 && this.targetIndex < targetLength)\n                {\n                    //Locate the target edge\n                    const target = targets[this.targetIndex++];\n                    if (this.targetIndex >= targetLength) this.targetIndex = 0;\n\n                    //Move pointer to target\n                    graphController.focusOnNode(target);\n                }\n            }\n            break;\n        case 'deleteall':\n            {\n                const targets = message.targets;\n                //Delete all target nodes\n                graphController.deleteTargetNodes(targets);\n\n                //Sort the nodes after deleting if enabled...\n                graphController.applyAutoRename();\n\n                //Exit the message\n                notification.close();\n            }\n            break;\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        const message = this.props.message;\n\n        return (\n            <DefaultNotificationLayout id={this.props.id}\n                className={this.props.className}\n                style={this.props.style}\n                styleType={STYLE_TYPE_ERROR}\n                notification={this.props.notification}>\n                <p>{message.text + ': ' + this.targetLabel}</p>\n                <button value=\"locate\" onClick={this.onClick}>\n                    {I18N.toString('message.action.locate')}\n                </button>\n                <button value=\"deleteall\" onClick={this.onClick}>\n                    {I18N.toString('message.action.deleteall')}\n                </button>\n            </DefaultNotificationLayout>\n        );\n    }\n}\n\nexport default StateNotificationLayout;\n","import React from 'react';\nimport DefaultNotificationLayout, {STYLE_TYPE_ERROR} from 'session/manager/notification/components/DefaultNotificationLayout.js';\nimport GraphNode from 'graph/elements/GraphNode.js';\n\nconst ARROW = '\\u2192';\n\nclass TransitionNotificationLayout extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.targetIndex = 0;\n        this.targetLabel = '';\n        const targets = props.message.targets;\n        for(const target of targets)\n        {\n            if (this.targetLabel.length > 0)\n            {\n                this.targetLabel += ', ';\n            }\n            this.targetLabel += '(' + target.getEdgeFrom().getNodeLabel() + ', ' +\n        target.getEdgeLabel() + ') ' +\n        ARROW + ' ' + (target.getEdgeTo() instanceof GraphNode ? target.getEdgeTo().getNodeLabel() : 'null');\n        }\n\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick(e)\n    {\n        const notification = this.props.notification;\n        const message = this.props.message;\n\n        const graphController = this.props.graphController;\n\n        switch(e.target.value)\n        {\n        case 'locate':\n            {\n                const targets = message.targets;\n                const targetLength = targets.length;\n                if (targetLength > 0 && this.targetIndex < targetLength)\n                {\n                    //Locate the target edge\n                    const target = targets[this.targetIndex++];\n                    if (this.targetIndex >= targetLength) this.targetIndex = 0;\n\n                    //Move pointer to target\n                    graphController.focusOnEdge(target);\n                }\n            }\n            break;\n        case 'deleteall':\n            {\n                const targets = message.targets;\n                //Delete all target edges\n                graphController.deleteTargetEdges(targets);\n\n                //Exit the message\n                notification.close();\n            }\n            break;\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        // const message = this.props.message;\n\n        return (\n            <DefaultNotificationLayout id={this.props.id}\n                className={this.props.className}\n                style={this.props.style}\n                styleType={STYLE_TYPE_ERROR}\n                notification={this.props.notification}>\n                <p>{this.props.message.text + ': ' + this.targetLabel}</p>\n                <button value=\"locate\" onClick={this.onClick}>\n                    {I18N.toString('message.action.locate')}\n                </button>\n                <button value=\"deleteall\" onClick={this.onClick}>\n                    {I18N.toString('message.action.deleteall')}\n                </button>\n            </DefaultNotificationLayout>\n        );\n    }\n}\n\nexport default TransitionNotificationLayout;\n","import React from 'react';\nimport DefaultNotificationLayout, {STYLE_TYPE_WARNING} from 'session/manager/notification/components/DefaultNotificationLayout.js';\n\nclass StateUnreachableNotificationLayout extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.targetIndex = 0;\n        this.targetLabel = '';\n        const targets = props.message;\n        for(const target of targets)\n        {\n            if (this.targetLabel.length > 0)\n            {\n                this.targetLabel += ', ';\n            }\n            this.targetLabel += target.getNodeLabel();\n        }\n\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick(e)\n    {\n        const notification = this.props.notification;\n        const message = this.props.message;\n        const graphController = this.props.graphController;\n\n        switch(e.target.value)\n        {\n        case 'locate':\n            {\n                //Locate the target node\n                const target = message[this.targetIndex++];\n                if (this.targetIndex >= message.length)\n                {\n                    this.targetIndex = 0;\n                }\n\n                //Move pointer to target\n                graphController.focusOnNode(target);\n            }\n            break;\n        case 'deleteall':\n            {\n                const targets = message;\n                //Delete all target nodes\n                graphController.deleteTargetNodes(targets);\n\n                //Sort the nodes after deleting if enabled...\n                graphController.applyAutoRename();\n\n                //Exit the message\n                notification.close();\n            }\n            break;\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        return (\n            <DefaultNotificationLayout id={this.props.id}\n                className={this.props.className}\n                style={this.props.style}\n                styleType={STYLE_TYPE_WARNING}\n                notification={this.props.notification}>\n                <p>{I18N.toString('message.warning.unreachable') + ': ' + this.targetLabel}</p>\n                <button value=\"locate\" onClick={this.onClick}>\n                    {I18N.toString('message.action.locate')}\n                </button>\n                <button value=\"deleteall\" onClick={this.onClick}>\n                    {I18N.toString('message.action.deleteall')}\n                </button>\n            </DefaultNotificationLayout>\n        );\n    }\n}\n\nexport default StateUnreachableNotificationLayout;\n","import StateNotificationLayout from './StateNotificationLayout.js';\nexport const STATE_LAYOUT_ID = 'machine-state';\n\nimport TransitionNotificationLayout from './TransitionNotificationLayout.js';\nexport const TRANSITION_LAYOUT_ID = 'machine-transition';\n\nimport StateUnreachableNotificationLayout from './StateUnreachableNotificationLayout.js';\nexport const STATE_UNREACHABLE_LAYOUT_ID = 'machine-state-unreachable';\n\nexport const MACHINE_ERROR_NOTIFICATION_TAG = 'machine-error';\n\nexport function registerNotifications(notificationManager)\n{\n    notificationManager.registerNotificationLayout(STATE_UNREACHABLE_LAYOUT_ID, StateUnreachableNotificationLayout);\n    notificationManager.registerNotificationLayout(STATE_LAYOUT_ID, StateNotificationLayout);\n    notificationManager.registerNotificationLayout(TRANSITION_LAYOUT_ID, TransitionNotificationLayout);\n}\n","import React from 'react';\nimport Style from './TestingPanel.css';\n\nimport PanelContainer from 'experimental/panels/PanelContainer.js';\nimport PanelSwitch from 'experimental/panels/PanelSwitch.js';\n\nimport TestListView from './TestListView.js';\n\nimport {MACHINE_ERROR_NOTIFICATION_TAG} from 'modules/pda/components/notifications/PDANotifications.js';\n\nclass TestingPanel extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            stepMode: false\n        };\n\n        this.onStepTestChange = this.onStepTestChange.bind(this);\n        this.onAutoErrorCheckChange = this.onAutoErrorCheckChange.bind(this);\n    }\n\n    /** @override */\n    componentDidMount()\n    {\n    //TODO: This should be in modules...\n        const session = this.props.session;\n        const app = session.getApp();\n        const currentModule = session.getCurrentModule();\n        const tester = currentModule._tester;\n        tester.on('startTest', (tester) => \n        {\n            app._viewport.setCurrentView(1);\n            app._drawer.setDrawerSoloClass(TestingPanel);\n            app._drawer.closeDrawer();\n        });\n        tester.on('stopTest', (tester) => \n        {\n            app._viewport.setCurrentView(0);\n            app._drawer.setDrawerSoloClass(null);\n            app._drawer.openDrawer();\n        });\n    }\n\n    onStepTestChange(e)\n    {\n        this.setState((prev, props) => \n        {\n            return {stepMode: !prev.stepMode};\n        });\n    }\n\n    onAutoErrorCheckChange(e)\n    {\n        const currentModule = this.props.session.getCurrentModule();\n        const errorChecker = currentModule.getErrorChecker();\n        const errorCheck = errorChecker.isErrorChecking();\n        errorChecker.setErrorChecking(!errorCheck);\n        if (errorCheck)\n        {\n            //Turning it off\n            this.props.session.getApp().getNotificationManager().clearNotifications(MACHINE_ERROR_NOTIFICATION_TAG);\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        const machineController = currentModule.getMachineController();\n        const tester = currentModule.getStringTester();\n        const errorChecker = currentModule.getErrorChecker();\n\n        const stepMode = this.state.stepMode;\n        const errorCheck = errorChecker.isErrorChecking();\n\n        return (\n            <PanelContainer id={this.props.id}\n                className={Style.panel_container +\n          ' ' + this.props.className}\n                style={this.props.style}\n                title={TestingPanel.TITLE}>\n\n                <TestListView tester={tester} graphController={graphController} machineController={machineController} immediate={!stepMode}/>\n                <PanelSwitch id={'testing-step-test'} checked={stepMode} onChange={this.onStepTestChange} title={'Step testing'}/>\n                <PanelSwitch id={'testing-error-check'} checked={errorCheck} onChange={this.onAutoErrorCheckChange} title={'Auto error checking'}/>\n\n            </PanelContainer>\n        );\n    }\n}\nObject.defineProperty(TestingPanel, 'TITLE', {\n    get: function() { return I18N.toString('component.testing.title'); }\n});\n\nexport default TestingPanel;\n","import React from 'react';\nimport Style from './AnalysisPanel.css';\n\nimport { getUnreachableNodes } from 'modules/fsa2/graph/FSAGraphUtil.js';\n\nimport PanelContainer from 'experimental/panels/PanelContainer.js';\nimport PanelSection from 'experimental/panels/PanelSection.js';\nimport PanelCheckbox from 'experimental/panels/PanelCheckbox.js';\n\nclass AnalysisPanel extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.optimizeUnreachOption = null;\n        this.optimizeRedundOption = null;\n\n        this.onOptimizeMachine = this.onOptimizeMachine.bind(this);\n    }\n\n    onDeleteAllUnreachable(e)\n    {\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        const unreachableArray = getUnreachableNodes(graphController.getGraph());\n        graphController.deleteTargetNodes(unreachableArray);\n    }\n\n    onOptimizeMachine(e)\n    {\n        if (this.optimizeUnreachOption.isChecked())\n        {\n            this.onDeleteAllUnreachable(e);\n        }\n    }\n\n    canOptimize()\n    {\n        return (this.optimizeRedundOption && this.optimizeRedundOption.isChecked()) ||\n            (this.optimizeUnreachOption && this.optimizeUnreachOption.isChecked());\n    }\n\n    /** @override */\n    render()\n    {\n        //const session = this.props.session;\n\n        return (\n            <PanelContainer id={this.props.id}\n                className={this.props.className}\n                style={this.props.style}\n                title={AnalysisPanel.TITLE}>\n                <PanelSection title={'Optimizations'} initial={true}>\n                    <PanelCheckbox ref={ref => this.optimizeUnreachOption = ref}\n                        id=\"opt-unreach\" title=\"Unreachables\" value=\"unreach\" />\n                    <PanelCheckbox ref={ref => this.optimizeRedundOption = ref} disabled={true}\n                        id=\"opt-redund\" title=\"Redundant States\" value=\"redund\" />\n                    <button className={Style.analysis_button} onClick={this.onOptimizeMachine} disabled={!this.canOptimize()}>Optimize</button>\n                </PanelSection>\n            </PanelContainer>\n        );\n    }\n}\nObject.defineProperty(AnalysisPanel, 'TITLE', {\n    get: function () { return I18N.toString('component.analysis.title'); }\n});\n\nexport default AnalysisPanel;\n","const MAX_COMPUTATION_STEPS = 1000;\n\nexport function solvePDA(pda, input)\n{\n    if (typeof input === 'string') input = input[Symbol.iterator]();\n\n    //Solve it with non-determinism\n    const cachedStates = [];\n    const cachedSymbols = [];\n\n    //Start with the start state...\n    const startState = pda.getStartState();\n    //(index refers to the \"level\" of computation)\n    cachedStates.push({state: startState, stack: [], index: 0});\n    //...and any state defined similarly by closure\n    for (const relatedStateAndStack of pda.doClosureTransition(startState, []))\n    {\n        cachedStates.push({state: relatedStateAndStack[0], stack : relatedStateAndStack[1], index: 0});\n    }\n\n    //The next symbol to compute...\n    let symbol = null;\n\n    //Just to be safe from infinite loops...\n    let counter = 0;\n    while(cachedStates.length > 0)\n    {\n        symbol = input.next().value;\n        if (solvePDAByStep(pda, symbol, cachedStates, cachedSymbols))\n        {\n            return true;\n        }\n\n        //HACK: This is to stop any infinite loops! This will be fixed in the future!\n        ++counter;\n        if (counter > MAX_COMPUTATION_STEPS)\n        {\n            return false;\n        }\n    }\n\n    return false;\n}\n\n//TODO: When an empty transition occurs, it does a closure transition.\n//The closure chain will be stored as a group\n//Any future transitions must not re-enter the group\nexport function solvePDAByStep(pda, symbol, cachedStates, cachedSymbols)\n{\n    //initialize variables\n    let state = null;\n    let stack = null;\n    let nextStates = [];\n    let nextIndex = 0;\n\n    if (symbol)\n    {\n        cachedSymbols.push(symbol);\n    }\n\n    for(const cstate of cachedStates)\n    {\n        state = cstate.state;\n        stack = cstate.stack;\n        symbol = cstate.index < cachedSymbols.length ? cachedSymbols[cstate.index] : null;\n\n        if (symbol)\n        {\n            //Read to next state...\n            nextIndex = cstate.index + 1;\n            for(let nextState of pda.doTerminalTransition(state, symbol, stack))\n            {\n                nextStates.push({state: nextState[0], stack: nextState[1], index: nextIndex});\n            }\n        }\n        else\n        {\n            if (pda.isFinalState(state)) return true;\n        }\n\n        //Read none to next state...\n        nextIndex = cstate.index;\n    }\n    cachedStates.length = 0;\n    cachedStates.push(...nextStates);\n    return false;\n}\n","class TapeContext\n{\n    constructor(inputString, infiniteLeft=false, infiniteRight=false)\n    {\n        this._tapeInput = inputString ? inputString.split('') : [];\n        this._left = infiniteLeft;\n        this._right = infiniteRight;\n\n        this._index = 0;\n    }\n\n    stepForward()\n    {\n        ++this._index;\n    }\n\n    stepBackward()\n    {\n        --this._index;\n    }\n\n    finish()\n    {\n        this._index = (this._tapeInput.length * 2);\n    }\n\n    reset()\n    {\n        this._index = -1;\n    }\n\n    stop()\n    {\n        this.finish();\n        this.reset();\n    }\n\n    changeTapeSymbol(index, symbol='')\n    {\n        this._tapeInput[index] = symbol;\n    }\n\n    getTapeSourceStatesByIndex(index)\n    {\n        return null;\n    }\n\n    getTapeSymbolByIndex(index)\n    {\n        if (index < 0 || index >= this._tapeInput.length) return '';\n        return this._tapeInput[index] || '';\n    }\n\n    isTapeLeftInfinite()\n    {\n        return this._left;\n    }\n\n    isTapeRightInfinite()\n    {\n        return this._right;\n    }\n\n    setCurrentTapeIndex(index)\n    {\n        this._index = index;\n    }\n\n    getCurrentTapeIndex()\n    {\n        return this._index;\n    }\n\n    getTapeInput()\n    {\n        return this._tapeInput;\n    }\n}\n\nexport default TapeContext;\n","import Eventable from 'util/Eventable.js';\n\nimport { solvePDAByStep } from 'modules/pda/machine/PDAUtils.js';\n\nimport TapeContext from './TapeContext.js';\n\nclass TestTapeContext extends TapeContext\n{\n    constructor(tester, graphController, machineController)\n    {\n        super(tester.getTestString(), false, true);\n\n        this._tester = tester;\n        this._graphController = graphController;\n        this._machineController = machineController;\n    }\n\n    /** @override */\n    stepForward()\n    {\n        const graphController = this._graphController;\n        const machineController = this._machineController;\n        this._tester.stepForward(graphController, machineController);\n    }\n\n    /** @override */\n    stepBackward()\n    {\n        const graphController = this._graphController;\n        const machineController = this._machineController;\n        this._tester.stepBackward(graphController, machineController);\n    }\n\n    /** @override */\n    reset()\n    {\n        this._tester.resetPosition();\n    }\n\n    /** @override */\n    finish()\n    {\n        const graphController = this._graphController;\n        const machineController = this._machineController;\n        this._tester.runTest(graphController, machineController, false);\n    }\n\n    /** @override */\n    stop()\n    {\n        this._tester.stopTest();\n    }\n\n    /** @override */\n    changeTapeSymbol(index, symbol='')\n    {\n        throw new Error('Operation not yet supported');\n    }\n\n    /** @override */\n    getTapeSourceStatesByIndex(index)\n    {\n        if (index < 0 || index >= this._tapeInput.length) return null;\n        return this._tester.getNodesAtPosition(index);\n    }\n\n    /** @override */\n    getTapeSymbolByIndex(index)\n    {\n        if (index < 0 || index >= this._tapeInput.length) return [];\n        return this._tapeInput[index] || '';\n    }\n\n    /** @override */\n    setCurrentTapeIndex(index)\n    {\n        this._tester.changePosition(index);\n    }\n\n    /** @override */\n    getCurrentTapeIndex()\n    {\n        return this._tester.getPosition();\n    }\n}\n\nclass StringTester\n{\n    constructor()\n    {\n        this._testString = null;\n        this._testIndex = -1;\n\n        this._tapeContext = null;\n\n        //For nfa solver use\n        this._cachePath = [];\n        this._cachedResult = null;\n        this._resolve = null;\n        this._reject = null;\n\n        this.registerEvent('startTest');\n        this.registerEvent('stepTest');\n        this.registerEvent('stopTest');\n    }\n\n    //TODO: a hack to get current targets.\n    get targets()\n    {\n        if (this._cachePath.length <= 0) return [];\n        const cache = this._cachePath[this._cachePath.length - 1];\n        return cache.targets;\n    }\n\n    startTest(testString, graphController, machineController)\n    {\n        if (!testString) testString = '';\n        if (this._tapeContext) throw new Error('Unable to start an already running test');\n\n        const graph = graphController.getGraph();\n        if (graph.isEmpty()) return Promise.reject();\n\n        this._testString = testString;\n        this._testIndex = -1;\n        this._cachePath.length = 0;\n        this._cachedResult = null;\n        this._tapeContext = new TestTapeContext(this, graphController, machineController);\n\n        this.emit('startTest', this);\n\n        return new Promise((resolve, reject) => \n        {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n    }\n\n    stopTest()\n    {\n        if (!this._tapeContext) throw new Error('Unable to stop null test');\n\n        this.emit('stopTest', this);\n\n        if (!this._resolve) throw new Error('Must call startTest() before anything else');\n        if (!this._reject) throw new Error('Must call startTest() before anything else');\n\n        let testResult = null;\n        if (this._cachePath.length >= this._testString.length)\n        {\n            testResult = this._cachedResult;\n            this._resolve(testResult);\n        }\n        else\n        {\n            testResult = null;\n            this._reject();\n        }\n\n        this._testString = null;\n        this._testIndex = -1;\n        this._cachePath.length = 0;\n        this._cachedResult = null;\n        this._tapeContext = null;\n\n        return Promise.resolve(testResult);\n    }\n\n    runTest(graphController, machineController, thenStop=false)\n    {\n        if (!this._tapeContext) throw new Error('Unable to run null test');\n\n        return new Promise((resolve, reject) => \n        {\n            let result = false;\n            do\n            {\n                result = this.stepForward(graphController, machineController, !thenStop);\n            }\n            while (result);\n\n            resolve(this._cachedResult);\n        }).then((result) => \n        {\n            if (thenStop) return this.stopTest();\n            else return result;\n        });\n    }\n\n    stepForward(graphController, machineController, cacheStep=true)\n    {\n        const machine = machineController.getMachineBuilder().getMachine();\n\n        if (this._testIndex >= this._testString.length) return false;\n        ++this._testIndex;\n\n        if (this._cachePath.length <= this._testIndex)\n        {\n            //Calculate current step...\n            let cachedStates, cachedSymbols = null;\n            const isResult = this._testIndex === this._testString.length;\n\n            //Initialize first step...\n            if (this._testIndex <= 0)\n            {\n                cachedStates = [];\n                cachedSymbols = [];\n\n                const startState = machine.getStartState();\n                for (const relatedStateAndStack of machine.doClosureTransition(startState, []))\n                {\n                    cachedStates.push({state: relatedStateAndStack[0], stack: relatedStateAndStack[1], index: 0});\n                }\n            }\n            else\n            {\n                const prevCache = this._cachePath[this._testIndex - 1];\n                cachedStates = prevCache.states.slice();\n                cachedSymbols = prevCache.symbols.slice();\n\n                //Do the remaining steps...\n                const nextSymbol = this._testString[this._testIndex - 1];\n                solvePDAByStep(machine, nextSymbol, cachedStates, cachedSymbols);\n            }\n\n            //Do one last step for result...\n            if (isResult)\n            {\n                this._cachedResult = solvePDAByStep(machine, null, cachedStates, cachedSymbols);\n            }\n\n            //Store current step...\n            const targets = new Set();\n            for(const cachedState of cachedStates)\n            {\n                const node = cachedState.state.getSource();\n\n                //Couldn't find the node that was solved for this step...\n                if (!node) throw new Error('Could not find node \\'' + cachedState.state + '\\'');\n\n                targets.add(node);\n            }\n            const nextCache = {\n                targets: Array.from(targets),\n                states: cachedStates,\n                symbols: cachedSymbols\n            };\n            this._cachePath.push(nextCache);\n        }\n        else\n        {\n            //Go forward a previously calculated step...by doing nothing...\n        }\n\n        this.emit('stepTest');\n        return true;\n    }\n\n    stepBackward(graphController, machineController)\n    {\n        if (this._testIndex <= 0) return false;\n        --this._testIndex;\n\n        //Go back a step...by doing nothing...\n        this.emit('stepTest');\n        return true;\n    }\n\n    isTesting()\n    {\n        return this._testString !== null;\n    }\n\n    changePosition(position)\n    {\n        if (position >= this._cachePath.length)\n        {\n            this._testIndex = this._cachePath.length - 1;\n        }\n        else\n        {\n            if (position < 0)\n            {\n                this._testIndex = 0;\n            }\n            else if (position >= this._testString.length)\n            {\n                this._testIndex = this._testString.length - 1;\n            }\n            else\n            {\n                this._testIndex = position;\n            }\n        }\n    }\n\n    resetPosition()\n    {\n        this._testIndex = -1;\n    }\n\n    getPosition()\n    {\n        return this._testIndex;\n    }\n\n    isComputedPosition(position)\n    {\n        return this._cachePath.length > position;\n    }\n\n    getCurrentNodes()\n    {\n        if (this._testIndex >= 0 && this._testIndex < this._cachePath.length)\n        {\n            return this._cachePath[this._testIndex];\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    getNodesAtPosition(position)\n    {\n        if (position >= 0 && position < this._cachePath.length)\n        {\n            return this._cachePath[position].targets;\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    getTestString()\n    {\n        return this._testString;\n    }\n\n    getTapeContext()\n    {\n        return this._tapeContext;\n    }\n}\nEventable.mixin(StringTester);\n\nexport default StringTester;\n","import {SUCCESS_LAYOUT_ID} from 'session/manager/notification/NotificationManager.js';\nimport {\n    MACHINE_ERROR_NOTIFICATION_TAG,\n    STATE_LAYOUT_ID,\n    TRANSITION_LAYOUT_ID,\n    STATE_UNREACHABLE_LAYOUT_ID\n} from './components/notifications/PDANotifications.js';\n\nimport {\n    ERROR_UNREACHABLE_STATE,\n    ERROR_DUPLICATE_STATE,\n    ERROR_INCOMPLETE_TRANSITION\n} from './machine/PDABuilder.js';\n\nclass PDAErrorChecker\n{\n    constructor(app, graphController, machineController)\n    {\n        this._app = app;\n        this._graphController = graphController;\n        this._machineController = machineController;\n        this._showErrorOnChange = false;\n\n        this.onMachineChange = this.onMachineChange.bind(this);\n\n        machineController.getMachineBuilder().getMachineChangeHandler().addListener(this.onMachineChange);\n    }\n\n    onMachineChange(machineBuilder)\n    {\n        if (this._showErrorOnChange)\n        {\n            this.showErrors();\n        }\n    }\n\n    setErrorChecking(enabled)\n    {\n        this._showErrorOnChange = enabled;\n    }\n\n    isErrorChecking()\n    {\n        return this._showErrorOnChange;\n    }\n\n    showErrors()\n    {\n        const props = {graphController: this._graphController, machineController: this._machineController};\n        const machineBuilder = this._machineController.getMachineBuilder();\n        const errors = machineBuilder.getMachineErrors();\n        const warnings = machineBuilder.getMachineWarnings();\n\n        const app = this._app;\n        const notificationManager = app.getNotificationManager();\n\n        notificationManager.clearNotifications(MACHINE_ERROR_NOTIFICATION_TAG);\n        if (errors.length <= 0 && warnings.length <= 0)\n        {\n            notificationManager.pushNotification(\n                I18N.toString('message.error.none'),\n                SUCCESS_LAYOUT_ID, MACHINE_ERROR_NOTIFICATION_TAG, null, false);\n        }\n        else\n        {\n            for(const warning of warnings)\n            {\n                switch(warning.name)\n                {\n                case ERROR_DUPLICATE_STATE:\n                    notificationManager.pushNotification({\n                        text: 'Found duplicate nodes of similar names',\n                        targets: warning.nodes\n                    }, STATE_LAYOUT_ID, MACHINE_ERROR_NOTIFICATION_TAG, props, false);\n                    break;\n                case ERROR_UNREACHABLE_STATE:\n                    notificationManager.pushNotification(warning.nodes,\n                        STATE_UNREACHABLE_LAYOUT_ID, MACHINE_ERROR_NOTIFICATION_TAG, props, false);\n                    break;\n                }\n            }\n\n            for(const error of errors)\n            {\n                switch(error.name)\n                {\n                case ERROR_INCOMPLETE_TRANSITION:\n                    notificationManager.pushNotification({\n                        text: I18N.toString('message.error.incomplete'),\n                        targets: error.edges\n                    }, TRANSITION_LAYOUT_ID, MACHINE_ERROR_NOTIFICATION_TAG, props, false);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nexport default PDAErrorChecker;\n","import React from 'react';\nimport Style from 'experimental/viewport/ViewportView.css';\n\nimport ModeSelectTray from 'experimental/widgets/ModeSelectTray.js';\nimport TrashCanWidget from 'experimental/widgets/TrashCanWidget.js';\nimport NavbarWidget from 'experimental/widgets/NavbarWidget.js';\n\nclass EditPane extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const app = session.getApp();\n\n        // const viewport = this.props.viewport;\n        const inputController = currentModule.getInputController();\n        const graphController = currentModule.getGraphController();\n        const inputActionMode = inputController.isActionMode();\n\n        return (\n            <div id={this.props.id}\n                className={Style.view_pane +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <NavbarWidget className={Style.view_widget} style={{right: 0}}\n                    viewportAdapter={app.getInputAdapter().getViewportAdapter()}/>\n                <div className={Style.view_widget} style={{bottom: 0, left: 0}}>\n                    <ModeSelectTray mode={inputActionMode ? 0 : 1} onChange={modeIndex => inputController.setInputScheme(modeIndex === 0)}/>\n                </div>\n                <div className={Style.view_widget} style={{bottom: 0, right: 0}}>\n                    <TrashCanWidget app={app} inputController={inputController} graphController={graphController}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default EditPane;\n","import React from 'react';\nimport Style from 'experimental/viewport/ViewportView.css';\n\nimport TapeWidget from 'experimental/widgets/TapeWidget.js';\nimport NavbarWidget from 'experimental/widgets/NavbarWidget.js';\n\nclass TapePane extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    componentDidMount()\n    {\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const inputController = currentModule.getInputController();\n\n        inputController.setDisabled(true);\n    }\n\n    /** @override */\n    componentWillUnmount()\n    {\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const inputController = currentModule.getInputController();\n\n        inputController.setDisabled(false);\n    }\n\n    /** @override */\n    render()\n    {\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const app = session.getApp();\n\n        // const viewport = this.props.viewport;\n        const tester = currentModule._tester;\n\n        return (\n            <div id={this.props.id}\n                className={Style.view_pane +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <NavbarWidget className={Style.view_widget} style={{right: 0}}\n                    viewportAdapter={app.getInputAdapter().getViewportAdapter()}/>\n                <div className={Style.view_widget} style={{bottom: 0}}>\n                    <TapeWidget value={tester ? tester.getTapeContext() : null}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TapePane;\n","import SessionImporter from 'session/SessionImporter.js';\n\n/**\n * Sets all of the details pertaining to the module (and the machine)\n *\n * @param  {GraphController} graphController        the controller for the graph to be constructed\n * @param  {MachineController} machineController    the controller for the machine to be constructed\n * @param  {Object} machineData                     the machine data to be parsed\n */\nfunction loadMachineFromData(graphController, machineController, machineData)\n{\n    const machineType = machineData.type;\n    if (machineType) machineController.setMachineType(machineType);\n    const customSymbols = machineData.symbols;\n    if (customSymbols && Array.isArray(customSymbols))\n    {\n        machineController.clearCustomSymbols();\n        for(const symbol of customSymbols)\n        {\n            machineController.addCustomSymbol(symbol);\n        }\n    }\n    const statePrefix = machineData.statePrefix;\n    if (statePrefix)\n    {\n        graphController.getGraphLabeler().setDefaultNodeLabelPrefix(statePrefix);\n    }\n}\n\nclass PDAImporter extends SessionImporter\n{\n    constructor(app, jsonGraphParser)\n    {\n        super(app);\n\n        this._graphParser = jsonGraphParser;\n        this._prevGraphHash = 0;\n    }\n\n    /** @override */\n    onParseSession(session, fileData)\n    {\n        return JSON.parse(fileData);\n    }\n\n    /** @override */\n    onPreImportSession(session)\n    {\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        const graph = graphController.getGraph();\n        this._prevGraphHash = graph.getHashCode(true);\n\n        // TODO: this should not be here, this should exist somewhere in graphController\n        if (!graph.isEmpty())\n        {\n            session.getApp().getUndoManager().captureEvent();\n        }\n    }\n\n    /** @override */\n    onImportSession(session, sessionData)\n    {\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        const machineController = currentModule.getMachineController();\n        const graph = graphController.getGraph();\n\n        this._graphParser.parse(sessionData['graphData'], graph);\n\n        loadMachineFromData(currentModule, graphController, machineController, sessionData['machineData']);\n    }\n\n    /** @override */\n    onPostImportSession(session)\n    {\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        const graph = graphController.getGraph();\n\n        // Compares the graph hash before and after import, captures event if they are not equal\n        const nextGraphHash = graph.getHashCode(true);\n        if (this._prevGraphHash !== nextGraphHash)\n        {\n            // TODO: this should not be here\n            session.getApp().getUndoManager().captureEvent();\n        }\n    }\n}\n\nexport default PDAImporter;\n","import SessionExporter from 'session/SessionExporter.js';\n\nimport JSONFileIcon from 'components/iconset/flat/JSONFileIcon.js';\n\nclass PDAExporter extends SessionExporter\n{\n    constructor(jsonGraphParser)\n    {\n        super('.pda.json');\n        this._graphParser = jsonGraphParser;\n    }\n\n    /** @override */\n    onExportSession(session, dst)\n    {\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        const machineController = currentModule.getMachineController();\n        const graph = graphController.getGraph();\n        const graphData = this._graphParser.objectify(graph);\n\n        dst['graphData'] = graphData;\n        dst['machineData'] = {\n            symbols: machineController.getCustomSymbols(),\n            statePrefix: graphController.getGraphLabeler().getDefaultNodeLabelPrefix()\n        };\n    }\n\n    /** @override */\n    getIconClass() { return JSONFileIcon; }\n    /** @override */\n    getLabel() { return I18N.toString('file.export.machine'); }\n    /** @override */\n    getTitle() { return I18N.toString('file.export.machine.hint'); }\n}\n\nexport default PDAExporter;\n","import React from 'react';\nimport PanelContainer from 'experimental/panels/PanelContainer.js';\n\nimport NodalGraphInputManager from 'modules/nodalgraph/manager/NodalGraphInputManager.js';\nimport MachineController from './controller/MachineController.js';\nimport ViewportComponent from 'util/input/components/ViewportComponent.js';\n\nimport PDAGraph from './graph/PDAGraph.js';\nimport PDAGraphLabeler from './graph/PDAGraphLabeler.js';\nimport * as PDAGraphParser from './graph/PDAGraphParser.js';\n\nimport PDAGraphRenderer from './renderer/PDAGraphRenderer.js';\nimport PDALabelEditorRenderer from './renderer/PDALabelEditorRenderer.js';\nimport GraphInputRenderer from 'modules/nodalgraph/controller/renderer/GraphInputRenderer.js';\n\nimport OverviewPanel from './components/panels/overview/OverviewPanel.js';\nimport TestingPanel from './components/panels/testing/TestingPanel.js';\nimport AnalysisPanel from './components/panels/analysis/AnalysisPanel.js';\n\nimport StringTester from './tester/StringTester.js';\nimport PDAErrorChecker from './PDAErrorChecker.js';\n\nimport EditPane from './components/views/EditPane.js';\nimport TapePane from './components/views/TapePane.js';\nimport { CTRL_KEY, SHIFT_KEY } from 'session/manager/hotkey/HotKeyManager.js';\nimport { RENDER_LAYER_WORKSPACE } from 'session/manager/RenderManager.js';\n\nimport SafeGraphEventHandler from 'modules/nodalgraph/SafeGraphEventHandler.js';\n\nimport { registerNotifications } from './components/notifications/PDANotifications.js';\n\nimport GraphNodeInputHandler from 'modules/nodalgraph/controller/inputhandler/GraphNodeInputHandler.js';\nimport GraphInitialInputHandler from 'modules/nodalgraph/controller/inputhandler/GraphInitialInputHandler.js';\nimport GraphEdgeInputHandler from 'modules/nodalgraph/controller/inputhandler/GraphEdgeInputHandler.js';\nimport GraphEndpointInputHandler from 'modules/nodalgraph/controller/inputhandler/GraphEndpointInputHandler.js';\nimport GraphNodeCreateInputHandler from 'modules/nodalgraph/controller/inputhandler/GraphNodeCreateInputHandler.js';\nimport GraphNodeAcceptInputHandler from 'modules/nodalgraph/controller/inputhandler/GraphNodeAcceptInputHandler.js';\n\nimport GraphNodePickHandler from 'modules/nodalgraph/controller/pickhandler/GraphNodePickHandler.js';\nimport GraphEdgePickHandler from 'modules/nodalgraph/controller/pickhandler/GraphEdgePickHandler.js';\nimport GraphEndpointPickHandler from 'modules/nodalgraph/controller/pickhandler/GraphEndpointPickHandler.js';\nimport GraphInitialPickHandler from 'modules/nodalgraph/controller/pickhandler/GraphInitialPickHandler.js';\n\nimport * as UserUtil from 'experimental/UserUtil.js';\n\nimport PDAImporter from './filehandlers/PDAImporter.js';\nimport PDAExporter from './filehandlers/PDAExporter.js';\nimport { registerImageExporters } from 'modules/nodalgraph/filehandlers/NodalGraphImageExporter.js';\n\nconst MODULE_NAME = 'pda';\nconst MODULE_LOCALIZED_NAME = 'PDA';\nconst MODULE_VERSION = '0.0.1';\n\nclass PDAModule\n{\n    constructor(app)\n    {\n        this._app = app;\n\n        this._inputManager = new NodalGraphInputManager(this,\n            new PDAGraph(),\n            new PDAGraphLabeler(),\n            PDAGraphParser,\n            PDALabelEditorRenderer);\n\n        app.getRenderManager()\n            .addRenderer(RENDER_LAYER_WORKSPACE, props => (\n                <ViewportComponent ref={ref => app._workspace.current = ref}>\n                    <PDAGraphRenderer currentModule={this} parent={props.workspace} />\n                    {this._inputManager.getInputController() && <GraphInputRenderer currentModule={this} />}\n                </ViewportComponent>\n            ));\n\n        this._machineController = new MachineController(this);\n\n        this._errorChecker = new PDAErrorChecker(app,\n            this._inputManager.getGraphController(),\n            this._machineController);\n        this._tester = new StringTester();\n    }\n\n    /** @override */\n    initialize(app)\n    {\n        this._inputManager.onSessionStart(app.getSession());\n\n        this._inputManager.getInputController().getPicker()\n            .addPickHandler(this._initialPickHandler = new GraphInitialPickHandler())\n            .addPickHandler(this._endpointPickHandler = new GraphEndpointPickHandler())\n            .addPickHandler(this._nodePickHandler = new GraphNodePickHandler())\n            .addPickHandler(this._edgePickHandler = new GraphEdgePickHandler());\n        this._inputManager.getInputController()\n            .addInputHandler(this._nodeInputHandler = new GraphNodeInputHandler())\n            .addInputHandler(this._edgeInputHandler = new GraphEdgeInputHandler())\n            .addInputHandler(this._endpointInputHandler = new GraphEndpointInputHandler())\n            .addInputHandler(this._initialInputHandler = new GraphInitialInputHandler())\n            .addInputHandler(this._createInputHandler = new GraphNodeCreateInputHandler())\n            .addInputHandler(this._acceptInputHandler = new GraphNodeAcceptInputHandler());\n\n        registerNotifications(app.getNotificationManager());\n\n        app.getExportManager()\n            .registerExporter(new PDAExporter(PDAGraphParser.JSON), 'session');\n\n        registerImageExporters(app.getExportManager());\n        \n        app.getImportManager()\n            .addImporter(new PDAImporter(app, PDAGraphParser.JSON), '.pda.json', '.json');\n\n        app.getViewportManager()\n            .addViewClass(EditPane)\n            .addViewClass(TapePane);\n\n        app.getDrawerManager()\n            .addPanelClass(props => (\n                <PanelContainer id={props.id}\n                    className={props.className}\n                    style={props.style}\n                    title={'Pushdown Automata'}>\n                    <p>{'Brought to you with \\u2764 by the Flap.js team.'}</p>\n                    <p>{'<- Tap on a tab to begin!'}</p>\n                </PanelContainer>\n            ))\n            .addPanelClass(OverviewPanel)\n            .addPanelClass(TestingPanel)\n            .addPanelClass(AnalysisPanel);\n\n        app.getHotKeyManager()\n            .registerHotKey('Export to PNG', [CTRL_KEY, 'KeyP'], () => { app.getExportManager().tryExportFile('image-png', app.getSession()); })\n            .registerHotKey('Save as JSON', [CTRL_KEY, 'KeyS'], () => { app.getExportManager().tryExportFile('session', app.getSession()); })\n            .registerHotKey('New', [CTRL_KEY, 'KeyN'], () => { this.clear(app); })\n            .registerHotKey('Undo', [CTRL_KEY, 'KeyZ'], () => { app.getUndoManager().undo(); })\n            .registerHotKey('Redo', [CTRL_KEY, SHIFT_KEY, 'KeyZ'], () => { app.getUndoManager().redo(); });\n\n        app.getUndoManager()\n            .setEventHandlerFactory((...args) => \n            {\n                return new SafeGraphEventHandler(this._inputManager.getGraphController(), this._inputManager.getGraphParser());\n            });\n\n        const machineController = this.getMachineController();\n        machineController.initialize(this);\n    }\n\n    /** @override */\n    update(app)\n    {\n        this._inputManager.update(this);\n\n        const machineController = this.getMachineController();\n        machineController.update(this);\n    }\n\n    /** @override */\n    destroy(app)\n    {\n        this._inputManager.onSessionStop(app.getSession());\n\n        const machineController = this.getMachineController();\n        machineController.destroy(this);\n    }\n\n    /** @override */\n    clear(app, graphOnly = false)\n    {\n        UserUtil.userClearGraph(app, graphOnly, () => app.getToolbarComponent().closeBar());\n    }\n\n    getInputManager() { return this._inputManager; }\n\n    getInputController() { return this._inputManager.getInputController(); }\n    getMachineController() { return this._machineController; }\n    getGraphController() { return this._inputManager.getGraphController(); }\n\n    getErrorChecker() { return this._errorChecker; }\n    getStringTester() { return this._tester; }\n\n    /** @override */\n    getModuleVersion() { return MODULE_VERSION; }\n    /** @override */\n    getModuleName() { return MODULE_NAME; }\n    /** @override */\n    getLocalizedModuleName() { return MODULE_LOCALIZED_NAME; }\n    getApp() { return this._app; }\n}\n\nexport default PDAModule;\n"],"sourceRoot":""}