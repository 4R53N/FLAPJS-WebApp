{"version":3,"sources":["webpack:///./src/app/graph/renderer/GraphNodeRenderer.js","webpack:///./src/app/graph/renderer/GraphEdgeRenderer.js","webpack:///./src/app/graph/renderer/NodalGraphRenderer.js","webpack:///./src/app/modules/nodalgraph/EmptyGraphLabeler.js","webpack:///./src/app/graph/parser/NodalGraphParser.js","webpack:///./src/app/modules/nodalgraph/components/views/EditPane.js","webpack:///./src/app/modules/nodalgraph/NodalGraphExporter.js","webpack:///./src/app/modules/nodalgraph/NodalGraphModule.js","webpack:///./src/app/experimental/components/IconButton.js","webpack:///./src/app/experimental/panels/PanelContainer.js","webpack:///./src/app/manager/export/AbstractGraphExporter.js","webpack:///./src/app/input/AbstractInputHandler.js","webpack:///./src/app/experimental/UserUtil.js","webpack:///./src/app/manager/RenderManager.js","webpack:///./src/app/experimental/iconset/flat/JSONFileIcon.js","webpack:///./src/app/experimental/iconset/EditPencilIcon.js","webpack:///./src/app/manager/undo/AbstractEventHandler.js","webpack:///./src/app/experimental/components/IconStateButton.js","webpack:///./src/app/experimental/iconset/FullscreenIcon.js","webpack:///./src/app/experimental/iconset/FullscreenExitIcon.js","webpack:///./src/app/experimental/widgets/FullscreenWidget.js","webpack:///./src/app/experimental/iconset/ZoomInIcon.js","webpack:///./src/app/experimental/iconset/ZoomOutIcon.js","webpack:///./src/app/experimental/widgets/ZoomWidget.js","webpack:///./src/app/experimental/iconset/PinpointIcon.js","webpack:///./src/app/experimental/widgets/FocusCenterWidget.js","webpack:///./src/app/experimental/widgets/NavbarWidget.js","webpack:///./src/app/renderer/EdgeRenderer.js","webpack:///./src/app/modules/nodalgraph/NodalGraphImageExporter.js","webpack:///./src/app/modules/nodalgraph/SafeGraphEventHandler.js","webpack:///./src/app/graph/GraphNodeSelectionBox.js","webpack:///./src/app/modules/nodalgraph/controller/GraphPicker.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/InputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphElementInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphNodeInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphInitialInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphEdgeInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphEndpointInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphNodeCreateInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/InputController.js","webpack:///./src/app/modules/nodalgraph/controller/GraphController.js","webpack:///./src/app/modules/nodalgraph/controller/SelectionBoxInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/ViewportInputHandler.js","webpack:///./src/app/system/patterninput/PatternInput.js","webpack:///./src/app/manager/labeleditor/LabelEditorView.js","webpack:///./src/app/manager/labeleditor/LabelEditorManager.js","webpack:///./src/app/modules/nodalgraph/manager/NodalGraphInputManager.js","webpack:///./src/app/modules/nodalgraph/controller/renderer/BoxRenderer.js","webpack:///./src/app/modules/nodalgraph/controller/renderer/HighlightRenderer.js","webpack:///./src/app/modules/nodalgraph/controller/renderer/SelectionBoxRenderer.js","webpack:///./src/app/modules/nodalgraph/controller/renderer/GraphInputRenderer.js","webpack:///./src/app/experimental/iconset/MoveIcon.js","webpack:///./src/app/experimental/widgets/ModeSelectTray.js","webpack:///./src/app/experimental/iconset/TrashCanDetailedIcon.js","webpack:///./src/app/experimental/widgets/TrashCanWidget.js"],"names":["GraphNodeRenderer","props","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","React","Component","node","fill","stroke","label","getNodeLabel","react_default","a","createElement","className","cx","x","cy","y","r","getNodeSize","pointerEvents","style","userSelect","fontSize","Math","min","max","length","textAnchor","GraphEdgeRenderer","GraphEdgeRenderer_classCallCheck","GraphEdgeRenderer_possibleConstructorReturn","GraphEdgeRenderer_getPrototypeOf","edge","start","getStartPoint","end","getEndPoint","center","getCenterPoint","getEdgeLabel","edgeDir","getEdgeDirection","EdgeRenderer","directed","DIRECTED_NONE","from","to","direction","color","NodalGraphRenderer","NodalGraphRenderer_classCallCheck","NodalGraphRenderer_possibleConstructorReturn","NodalGraphRenderer_getPrototypeOf","graph","currentModule","getGraphController","getGraph","getNodes","map","e","i","renderer_GraphNodeRenderer","key","getGraphElementID","getEdges","renderer_GraphEdgeRenderer","edgeLabelFormatter","string","EmptyGraphLabeler","EmptyGraphLabeler_classCallCheck","EmptyGraphLabeler_possibleConstructorReturn","EmptyGraphLabeler_getPrototypeOf","AbstractGraphLabeler","JSON","parse","data","dst","arguments","undefined","nodeDatas","nodeCount","edgeDatas","edgeCount","hasQuad","clear","NodalGraph","GraphNode","QuadraticEdge","GraphEdge","nodeIndices","Map","nodeData","createNode","setNodeLabel","set","edgeData","sourceNode","get","destinationNode","createEdge","setEdgeLabel","quadData","setQuadratic","objectify","graphNodes","graphEdges","Array","elementID","id","flag","quad","getQuadratic","edgeSource","getSourceNode","edgeDestination","getDestinationNode","sourceIndex","has","destinationIndex","radians","nodes","edges","_version","EditPane","EditPane_classCallCheck","EditPane_possibleConstructorReturn","EditPane_getPrototypeOf","session","getCurrentModule","app","getApp","inputController","viewport","getInputController","graphController","inputActionMode","isActionMode","Style","view_pane","NavbarWidget","view_widget","right","bottom","left","ModeSelectTray","mode","onChange","modeIndex","setInputScheme","TrashCanWidget","NodalGraphExporter","NodalGraphExporter_classCallCheck","NodalGraphExporter_possibleConstructorReturn","NodalGraphExporter_getPrototypeOf","AbstractGraphExporter","module","newGraph","JSONGraphParser","graphData","machineName","machineData","name","getSession","setProjectName","getModuleName","version","process","getModuleVersion","timestamp","Date","toString","getProjectName","fromJSON","toJSON","fileBlob","_this","Promise","resolve","reject","filename","endsWith","getFileType","Error","reader","FileReader","onload","target","result","substring","prevGraphHash","getHashCode","isEmpty","getUndoManager","captureEvent","jsonData","abort","onerror","error","code","readAsText","jsonString","stringify","downloadText","I18N","JSONFileIcon","NodalGraphModule","NodalGraphModule_classCallCheck","_app","_inputManager","NodalGraphInputManager","NodalGraphParser","getDrawerManager","addPanelClass","PanelContainer","title","getExportManager","addExporter","addExporters","DEFAULT_IMAGE_EXPORTERS","getViewportManager","addViewClass","getRenderManager","addRenderer","RENDER_LAYER_WORKSPACE","Fragment","renderer_NodalGraphRenderer","parent","workspace","GraphInputRenderer","setEventHandlerFactory","SafeGraphEventHandler","getGraphParser","onSessionStart","update","onSessionStop","UserUtil","getToolbarComponent","closeBar","IconButton","showButtonLabel","SHOW_LABEL","react__WEBPACK_IMPORTED_MODULE_0___default","icon_button","disabled","onClick","children","panel_container","panel_title","panel_content","panel_bottom","getLabel","toUpperCase","AbstractInputHandler","pointer","zoomValue","prevValue","userClearGraph","graphOnly","callback","window","confirm","__webpack_require__","d","__webpack_exports__","RENDER_LAYER_WORKSPACE_OVERLAY","RENDER_LAYER_VIEWPORT","RENDER_LAYER_VIEWPORT_OVERLAY","RenderManager","_renderMapping","layerID","rendererClass","push","Icon","xmlns","width","height","viewBox","points","AbstractEventHandler","undoManager","IconStateButton","state","index","initial","bind","_assertThisInitialized","_this2","prevIndex","setState","prev","count","Children","nextIndex","_this3","child","FullscreenIcon_classCallCheck","FullscreenIcon_possibleConstructorReturn","FullscreenIcon_getPrototypeOf","FullscreenExitIcon_classCallCheck","FullscreenExitIcon_possibleConstructorReturn","FullscreenExitIcon_getPrototypeOf","FullscreenWidget","FullscreenWidget_classCallCheck","FullscreenWidget_possibleConstructorReturn","FullscreenWidget_getPrototypeOf","components_IconStateButton","fullscreen_button","hide","FullscreenIcon","FullscreenExitIcon","ZoomInIcon_classCallCheck","ZoomInIcon_possibleConstructorReturn","ZoomInIcon_getPrototypeOf","ZoomOutIcon_classCallCheck","ZoomOutIcon_possibleConstructorReturn","ZoomOutIcon_getPrototypeOf","ZoomWidget","ZoomWidget_classCallCheck","ZoomWidget_getPrototypeOf","onZoomIn","ZoomWidget_assertThisInitialized","onZoomOut","viewScale","getScale","addScale","toFixed","zoom_container","zoom_button","ZoomInIcon","ZoomOutIcon","zoom_label","PinpointIcon_classCallCheck","PinpointIcon_possibleConstructorReturn","PinpointIcon_getPrototypeOf","FocusCenterWidget","FocusCenterWidget_classCallCheck","FocusCenterWidget_getPrototypeOf","FocusCenterWidget_assertThisInitialized","setOffset","center_focus_button","abs","getOffsetX","getOffsetY","PinpointIcon","NavbarWidget_classCallCheck","NavbarWidget_possibleConstructorReturn","NavbarWidget_getPrototypeOf","getInputAdapter","getViewport","navbar_container","experimental_widgets_FullscreenWidget","navbar_widget","experimental_widgets_ZoomWidget","navbar_widget_container","experimental_widgets_FocusCenterWidget","SIXTH_PI","PI","DIRECTED_FORWARD","DefaultEndpointRenderer","position","sin","angle","cos","DefaultLabelRenderer","transform","labels","str","reverse","alignmentBaseline","fromAngle","toAngle","ForwardEndpointRenderer","forwardEndpointRenderer","endpointRenderer","BackwardEndpointRenderer","backwardEndpointRenderer","EdgeLabelRenderer","labelRenderer","fromPoint","toPoint","centerPoint","reverseLabel","quadLine","dftx","dfty","dfcx","dfcy","ftrad","atan2","fcrad","split","GraphImageExporter","imageType","FILE_TYPE_PNG","_imageType","element","offsetX","offsetY","bounds","getBoundingRect","dx","minX","dy","minY","w","EXPORT_PADDING_X","h","EXPORT_PADDING_Y","clone","cloneNode","setAttribute","uiElements","getElementsByClassName","remove","svgElement","getSVGElement","workspaceDim","baseVal","svg","processSVGForExport","downloadImageFromSVG","FILE_TYPE_JPG","FILE_TYPE_SVG","_get","prototype","PNGIcon","JPGIcon","SVGIcon","graphParser","_graphController","_graphParser","_graphData","prevEvent","getPreviousEvent","applyRedo","GraphNodeSelectionBox","_boundingBox","fromX","fromY","toX","toY","visible","targets","box","mx","my","lx","ly","clearSelection","x1","y1","x2","y2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","err","return","getNodesWithin","includes","getSelection","GraphPicker","GraphPicker_classCallCheck","targetType","initialTarget","initialTargetType","_prevX","_prevY","type","updateTarget","hasTarget","document","body","cursor","setInitialTarget","getNodeByInitialMarkerAt","getEdgeByEndPointAt","getNodeAt","getEdgeAt","nodeSize","startNode","getStartNode","offset","EDGE_RADIUS","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","ENDPOINT_RADIUS","InputHandler","GraphElementInputHandler","GraphElementInputHandler_classCallCheck","_targetType","GraphNodeInputHandler","GraphNodeInputHandler_classCallCheck","GraphNodeInputHandler_possibleConstructorReturn","GraphNodeInputHandler_getPrototypeOf","getPicker","selectionBox","getSelectionBox","isTrashMode","prevX","prevY","hasSelection","deleteSelectedNodes","deleteTargetNode","isMoveMode","openLabelEditor","toggleNode","picker","getGraphLabeler","getDefaultEdgeLabel","isNewEdge","edgeQuad","prevQuad","prevEdgeTo","_snapToGrid","snapSize","_snapSize","round","moveMultipleNodesTo","moveNodeTo","onGraphIntentMoveAllNodes","onGraphIntentMoveNode","GraphInitialInputHandler","GraphInitialInputHandler_classCallCheck","GraphInitialInputHandler_possibleConstructorReturn","GraphInitialInputHandler_getPrototypeOf","ghostInitialMarker","prevInitial","setStartNode","applyAutoRename","onGraphIntentChangeInitial","GraphEdgeInputHandler","GraphEdgeInputHandler_classCallCheck","GraphEdgeInputHandler_possibleConstructorReturn","GraphEdgeInputHandler_getPrototypeOf","deleteTargetEdge","isPlaceholder","targetQuad","moveEdgeTo","onGraphIntentMoveEdge","GraphEndpointInputHandler","GraphEndpointInputHandler_classCallCheck","GraphEndpointInputHandler_possibleConstructorReturn","GraphEndpointInputHandler_getPrototypeOf","moveEndpointTo","formatEdge","deleteEdge","onGraphIntentFinishEdge","onGraphIntentCreateEdge","onGraphIntentChangeDestination","shouldDestroyPointlessEdges","changeDestinationNode","GraphNodeCreateInputHandler","GraphNodeCreateInputHandler_classCallCheck","GraphNodeCreateInputHandler_possibleConstructorReturn","GraphNodeCreateInputHandler_getPrototypeOf","DEFAULT_SHOULD_DESTROY_POINTLESS_EDGE","InputController","inputAdapter","InputController_classCallCheck","InputController_possibleConstructorReturn","InputController_getPrototypeOf","_picker","_selectionBox","_swapMouseScheme","_trashMode","_disabled","_inputHandlers","AbstractInputController","_module","_inputAdapter","getPointerX","getPointerY","updateHoverTarget","updateInitialTarget","isTargetInSelection","handler","isTargetable","onAction","emit","onDblAction","onDragStart","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","onDragMove","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","onDragStop","clearTarget","enabled","_drawer","setViewportColor","shouldInputFirst","isAltInput","isDragging","isPointerActive","DEFAULT_AUTO_RENAME","GRAPH_REFRESH_RATE","GraphController","labeler","parser","GraphController_classCallCheck","GraphController_getPrototypeOf","_graphChangeHandler","GraphChangeHandler","setGraphController","GraphController_assertThisInitialized","labelEditorElement","shouldAutoLabel","registerEvent","AbstractGraphController","GraphController_get","_graph","GraphLayout","applyLayout","getModule","graphLabeler","_labeler","getNodeCustom","getDefaultNodeLabel","nextQuad","prevDestination","nextInitial","nextX","nextY","targetNodes","enable","setNodeCustom","random","newNodeLabel","getNodeAccept","setNodeAccept","selectedNode","selection","slice","deleteNode","onGraphIntentDeleteNodes","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","other","diameter","nextDX","nextDY","pos","getInputEventPosition","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","changeInputEventPosition","setQuadraticByCoords","isSelfLoop","defaultValue","labelEditor","getInputManager","getLabelEditorManager","getLabelEditorComponent","prevLabel","openEditor","ax","ay","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","Eventable","mixin","SelectionBoxInputHandler","SelectionBoxInputHandler_classCallCheck","SelectionBoxInputHandler_possibleConstructorReturn","SelectionBoxInputHandler_getPrototypeOf","_inputController","beginSelection","isSelecting","updateSelection","endSelection","ViewportInputHandler","ViewportInputHandler_classCallCheck","ViewportInputHandler_possibleConstructorReturn","ViewportInputHandler_getPrototypeOf","getAdapter","addOffset","PatternInput","PatternInput_classCallCheck","PatternInput_getPrototypeOf","inputElement","placeholder","maxLength","multiLine","formatter","_submitTimeout","_submit","submitOnBlur","_skipBlur","_skipSelect","PatternInput_assertThisInitialized","onFocus","onBlur","onKeyDown","select","setTimeout","submit","activeElement","onSubmit","shiftKey","blur","preventDefault","stopPropagation","focus","ignore","separator","format","_this4","maxlength","multiline","ref","rows","spellCheck","LabelEditorView","LabelEditorView_classCallCheck","LabelEditorView_getPrototypeOf","inputComponent","open","_target","_targetCallback","onInputSubmit","LabelEditorView_assertThisInitialized","onInputBlur","graphElement","onCancel","GraphElement","_targetOnSubmit","_targetOnCancel","getLabelFormatter","setFormatter","resetValue","closeEditor","isEditorOpen","targetStyle","getElement","parentClientRect","getBoundingClientRect","screenPos","ctm","getScreenCTM","f","transformViewToScreen","offsetWidth","offsetHeight","top","editor_container","patterninput_PatternInput","saveOnExit","tray_container","LabelEditorManager","LabelEditorManager_classCallCheck","_labelEditorComponent","_labelEditorRenderer","renderer","LabelEditorRenderer","manager_labeleditor_LabelEditorView","nodalGraph","labelEditorRenderer","NodalGraphInputManager_classCallCheck","_labelEditorManager","setLabelEditorRenderer","setLabeler","_selectionBoxInputHandler","_viewportInputHandler","_graphLabeler","addInputHandler","initialize","on","Notifications","addMessage","removeInputHandler","destroy","BoxRenderer","HIGHLIGHT_LINE_ARRAY","HighlightRenderer","HighlightRenderer_classCallCheck","HighlightRenderer_possibleConstructorReturn","HighlightRenderer_getPrototypeOf","endpoint","strokeDashoffset","strokeDasharray","strokeWidth","SelectionBoxRenderer","SelectionBoxRenderer_classCallCheck","SelectionBoxRenderer_possibleConstructorReturn","SelectionBoxRenderer_getPrototypeOf","selectionBoundingBox","renderer_HighlightRenderer","renderer_BoxRenderer","GraphInputRenderer_classCallCheck","GraphInputRenderer_possibleConstructorReturn","GraphInputRenderer_getPrototypeOf","renderer_SelectionBoxRenderer","_tester","ModeSelectTray_classCallCheck","ModeSelectTray_getPrototypeOf","ModeSelectTray_assertThisInitialized","newValue","tray_button","EditPencilIcon","MoveIcon","TrashCanWidget_classCallCheck","TrashCanWidget_getPrototypeOf","forceActive","_doubleTapTimeout","onMouseEnter","TrashCanWidget_assertThisInitialized","onMouseLeave","onAnyMouseDownNotConsumed","setTrashMode","clearTimeout","documentElement","addEventListener","removeEventListener","active","isUsingTouch","trash_container","TrashCanDetailedIcon"],"mappings":"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","file":"module_nodalgraph.bundle.2aadece65c928aa0a746.js","sourcesContent":["import React from 'react';\n\nconst GRAPH_NODE_CONTAINER_STYLE_NAME = \"graph-node-container\";\nconst GRAPH_NODE_BODY_STYLE_NAME = \"graph-node\";\nconst GRAPH_NODE_LABEL_STYLE_NAME = \"graph-node-label\";\n\nclass GraphNodeRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const node = this.props.node;\n    const fill = this.props.fill || \"#FFFFFF\";\n    const stroke = this.props.stroke || \"#000000\";\n\n    const label = node.getNodeLabel() || \"\";\n\n    return (\n      <g className={GRAPH_NODE_CONTAINER_STYLE_NAME}>\n        {/*Outer circle*/}\n        <circle className={GRAPH_NODE_BODY_STYLE_NAME}\n          cx={node.x} cy={node.y}\n          r={node.getNodeSize()}\n\n          fill={fill}\n          stroke={stroke}/>\n\n        {/*Label*/}\n        <text className={GRAPH_NODE_LABEL_STYLE_NAME}\n          x={node.x} y={node.y + 4}\n          pointerEvents=\"none\"\n          style={{\n            userSelect: \"none\",\n            fontSize: (1 - Math.min(Math.max(label.length - 2, 0) / 6, 0.5)) + \"em\"\n          }}\n          textAnchor=\"middle\">\n          {label}\n        </text>\n      </g>\n    );\n  }\n}\n\nexport default GraphNodeRenderer;\n","import React from 'react';\n\nimport EdgeRenderer, {DIRECTED_NONE} from 'renderer/EdgeRenderer.js';\n\nconst GRAPH_EDGE_CONTAINER_STYLE_NAME = \"graph-edge-container\";\nconst GRAPH_EDGE_BODY_STYLE_NAME = \"graph-edge\";\nconst GRAPH_EDGE_LABEL_STYLE_NAME = \"graph-edge-label\";\n\nclass GraphEdgeRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const edge = this.props.edge;\n    const stroke = this.props.stroke || \"#000000\";\n    const start = edge.getStartPoint();\n    const end = edge.getEndPoint();\n    const center = edge.getCenterPoint();\n    const label = edge.getEdgeLabel();\n    const edgeDir = edge.getEdgeDirection();\n\n    return <g className={GRAPH_EDGE_CONTAINER_STYLE_NAME}>\n      <EdgeRenderer\n        directed={DIRECTED_NONE}\n        from={start}\n        to={end}\n        center={center}\n        label={label}\n        direction={edgeDir}\n        color={stroke}/>\n    </g>;\n  }\n}\n\nexport default GraphEdgeRenderer;\n","import React from 'react';\n\nimport GraphNodeRenderer from './GraphNodeRenderer.js';\nimport GraphEdgeRenderer from './GraphEdgeRenderer.js';\n\nimport GraphEdge from '../GraphEdge.js';\nimport QuadraticEdge from '../QuadraticEdge.js';\n\nclass NodalGraphRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    //Inherits props from parent\n    const currentModule = this.props.currentModule;\n    const graphController = currentModule.getGraphController();\n    const graph = graphController.getGraph();\n\n    return (\n      <g>\n        {graph.getNodes().map(\n          (e, i) => <GraphNodeRenderer key={e.getGraphElementID() || i}\n          node={e}/>)}\n        {graph.getEdges().map(\n          (e, i) => <GraphEdgeRenderer key={e.getGraphElementID() || i}\n          edge={e}/>)}\n      </g>\n    );\n  }\n}\n\nexport default NodalGraphRenderer;\n","import AbstractGraphLabeler from 'graph/AbstractGraphLabeler.js';\n\nclass EmptyGraphLabeler extends AbstractGraphLabeler\n{\n  constructor()\n  {\n    super();\n  }\n\n  //TODO: this is from GraphController (refactor this out of here pls)\n  setGraphController(getGraphController) {}\n\n  //Override\n  getDefaultNodeLabel() { return \"\"; }\n\n  //Override\n  getDefaultEdgeLabel() { return \"\"; }\n\n  //Override\n  getEdgeLabelFormatter() { return edgeLabelFormatter; }\n}\n\nfunction edgeLabelFormatter(string)\n{\n  return string || \"\";\n}\n\nexport default EmptyGraphLabeler;\n","import NodalGraph from '../NodalGraph.js';\n\nimport GraphNode from '../GraphNode.js';\nimport GraphEdge from '../GraphEdge.js';\nimport QuadraticEdge from '../QuadraticEdge.js';\n\nconst GRAPH_PARSER_VERSION = \"1.0.0\";\n\nexport const JSON = {\n  parse(data, dst=null)\n  {\n    const nodeDatas = data['nodes'] || [];\n    const nodeCount = Math.min(nodeDatas.length || 0, data['nodeCount'] || 0);\n    const edgeDatas = data['edges'] || [];\n    const edgeCount = Math.min(edgeDatas.length || 0, data['edgeCount'] || 0);\n    const hasQuad = data['quad'] || false;\n\n    if (!dst) dst = new NodalGraph(GraphNode, hasQuad ? QuadraticEdge : GraphEdge);\n    else dst.clear();\n\n    const nodeIndices = new Map();\n    for(let i = 0; i < nodeCount; ++i)\n    {\n      const nodeData = nodeDatas[i];\n      if (!nodeData) continue;\n\n      //NOTE: Assumes createNode will maintain order\n      const node = dst.createNode(nodeData['x'] || 0, nodeData['y'] || 0, nodeData['id']);\n      node.setNodeLabel(nodeData['label'] || \"\");\n\n      nodeIndices.set(i, node);\n    }\n\n    for(let i = 0; i < edgeCount; ++i)\n    {\n      const edgeData = edgeDatas[i];\n      if (!edgeData) continue;\n      const sourceNode = nodeIndices.get(edgeData['from']) || null;\n      //Cannot create source-less edges\n      if (!sourceNode) continue;\n      const destinationNode = nodeIndices.get(edgeData['to']) || null;\n      //NOTE: Assumes createEdge will maintain order\n      const edge = dst.createEdge(sourceNode, destinationNode, edgeData['id']);\n      edge.setEdgeLabel(edgeData['label'] || \"\");\n\n      if (edge instanceof QuadraticEdge)\n      {\n        const quadData = edgeData['quad'] || {};\n        edge.setQuadratic(quadData['radians'] || 0, quadData['length'] || 0);\n      }\n    }\n\n    return dst;\n  },\n  objectify(graph)\n  {\n    const graphNodes = graph.getNodes() || [];\n    const nodeCount = graphNodes.length || 0;\n    const graphEdges = graph.getEdges() || [];\n    const edgeCount = graphEdges.length || 0;\n\n    const nodeDatas = new Array(nodeCount);\n    const nodeIndices = new Map();\n    for(let i = 0; i < nodeCount; ++i)\n    {\n      const node = graphNodes[i];\n      if (node)\n      {\n        //NOTE: Assumes node must have an id\n        const elementID = node.getGraphElementID();\n\n        nodeIndices.set(node, i);\n        nodeDatas[i] = {\n          id: elementID,\n          x: node.x || 0, y: node.y || 0,\n          label: node.getNodeLabel() || \"\"\n        };\n      }\n    }\n\n    let flag = false;\n    const edgeDatas = new Array(edgeCount);\n    for(let i = 0; i < edgeCount; ++i)\n    {\n      const edge = graphEdges[i];\n      if (edge)\n      {\n        //NOTE: Assumes edge must have an id\n        const elementID = edge.getGraphElementID();\n\n        const quad = edge.getQuadratic() || {};\n        const edgeSource = edge.getSourceNode();\n        const edgeDestination = edge.getDestinationNode();\n        const sourceIndex = nodeIndices.has(edgeSource) ? nodeIndices.get(edgeSource) : -1;\n        const destinationIndex = nodeIndices.has(edgeDestination) ? nodeIndices.get(edgeDestination) : -1;\n        edgeDatas[i] = {\n          id: elementID,\n          from: sourceIndex,\n          to: destinationIndex,\n          label: edge.getEdgeLabel() || \"\"\n        };\n\n        if (edge instanceof QuadraticEdge)\n        {\n          flag = true;\n          edgeDatas[i]['quad'] = {\n            radians: quad['radians'] || 0,\n            length: quad['length'] || 0\n          };\n        }\n      }\n    }\n\n    return {\n      nodeCount: nodeCount,\n      nodes: nodeDatas,\n      edgeCount: edgeCount,\n      edges: edgeDatas,\n      hasQuad: flag,\n      _version: GRAPH_PARSER_VERSION\n    };\n  }\n};\n","import React from 'react';\nimport Style from 'experimental/viewport/ViewportView.css';\n\nimport ModeSelectTray from 'experimental/widgets/ModeSelectTray.js';\nimport TrashCanWidget from 'experimental/widgets/TrashCanWidget.js';\nimport NavbarWidget from 'experimental/widgets/NavbarWidget.js';\n\nclass EditPane extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const session = this.props.session;\n    const currentModule = session.getCurrentModule();\n    const app = session.getApp();\n\n    const viewport = this.props.viewport;\n    const inputController = currentModule.getInputController();\n    const graphController = currentModule.getGraphController();\n    const inputActionMode = inputController.isActionMode();\n\n    return (\n      <div id={this.props.id}\n        className={Style.view_pane +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <NavbarWidget className={Style.view_widget} style={{right: 0}}\n          app={app}/>\n        <div className={Style.view_widget} style={{bottom: 0, left: 0}}>\n          <ModeSelectTray mode={inputActionMode ? 0 : 1} onChange={modeIndex => inputController.setInputScheme(modeIndex === 0)}/>\n        </div>\n        <div className={Style.view_widget} style={{bottom: 0, right: 0}}>\n          <TrashCanWidget app={app} inputController={inputController} graphController={graphController}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditPane;\n","import AbstractGraphExporter from 'manager/export/AbstractGraphExporter.js';\n\nimport { JSON as JSONGraphParser } from 'graph/parser/NodalGraphParser.js';\nimport { downloadText } from 'util/Downloader.js';\n\nimport JSONFileIcon from 'experimental/iconset/flat/JSONFileIcon.js';\n\nclass NodalGraphExporter extends AbstractGraphExporter\n{\n  constructor() { super(); }\n\n  fromJSON(data, module)\n  {\n    const graphController = module.getGraphController();\n    const graph = graphController.getGraph();\n\n    const metadata = '_metadata' in data ? data['_metadata'] : {};\n    const newGraph = JSONGraphParser.parse(data.graphData, graph);\n\n    //HACK: this should be calculated elsewhere\n    const machineData = data.machineData;\n    const machineName = machineData.name;\n    if (machineName) module.getApp().getSession().setProjectName(machineName);\n\n    return newGraph;\n  }\n\n  toJSON(graphData, module)\n  {\n    const graphController = module.getGraphController();\n\n    const dst = {};\n    dst[\"_metadata\"] = {\n      module: module.getModuleName(),\n      version: process.env.VERSION + \":\" + module.getModuleVersion(),\n      timestamp: new Date().toString()\n    };\n    dst[\"graphData\"] = graphData;\n    dst[\"machineData\"] = {\n      name: module.getApp().getSession().getProjectName()\n    };\n    return dst;\n  }\n\n  //Override\n  importFromData(data, module)\n  {\n    this.fromJSON(data, module);\n  }\n\n  //Override\n  exportToData(module)\n  {\n    const graph = module.getGraphController().getGraph();\n    const graphData = JSONGraphParser.objectify(graph);\n    const result = this.toJSON(graphData, module);\n    return result;\n  }\n\n  //Override\n  doesSupportData()\n  {\n    return true;\n  }\n\n  //Override\n  importFromFile(fileBlob, module)\n  {\n    return new Promise((resolve, reject) => {\n      const filename = fileBlob.name;\n      if (!filename.endsWith(this.getFileType()))\n      {\n        throw new Error(\"Trying to import invalid file type for \\'\" + this.getFileType() + \"\\': \" + filename);\n      }\n\n      const reader = new FileReader();\n      reader.onload = e => {\n        const graphController = module.getGraphController();\n        const data = e.target.result;\n        const name = filename.substring(0, filename.length - this.getFileType().length - 1);\n        const graph = graphController.getGraph();\n        const prevGraphHash = graph.getHashCode(true);\n\n        //TODO: this should not be here, this should exist somewhere in graphController\n        if (!graph.isEmpty())\n        {\n          module.getApp().getUndoManager().captureEvent();\n        }\n\n        try\n        {\n          const jsonData = JSON.parse(data);\n\n          this.fromJSON(jsonData, module);\n\n          module.getApp().getSession().setProjectName(name);\n\n          resolve();\n        }\n        catch (e)\n        {\n          reader.abort();\n          reject(e);\n        }\n        finally\n        {\n          const nextGraphHash = graph.getHashCode(true);\n          if (prevGraphHash !== nextGraphHash)\n          {\n            module.getApp().getUndoManager().captureEvent();\n          }\n        }\n      };\n\n      reader.onerror = e => {\n        reject(new Error(\"Unable to import file: \" + e.target.error.code));\n      }\n\n      reader.readAsText(fileBlob);\n    });\n  }\n\n  //Override\n  exportToFile(filename, module)\n  {\n    const graph = module.getGraphController().getGraph();\n    const graphData = JSONGraphParser.objectify(graph);\n    const dst = this.toJSON(graphData, module);\n    const jsonString = JSON.stringify(dst);\n    downloadText(filename + '.' + this.getFileType(), jsonString);\n  }\n\n  //Override\n  doesSupportFile()\n  {\n    return true;\n  }\n\n  //Override\n  canImport(module)\n  {\n    return true;\n  }\n\n  //Override\n  canExport(module)\n  {\n    return !module.getGraphController().getGraph().isEmpty();\n  }\n\n  //Override\n  getTitle()\n  {\n    return I18N.toString(\"file.export.machine.hint\");\n  }\n\n  //Override\n  getLabel()\n  {\n    return I18N.toString(\"file.export.machine\");\n  }\n\n  //Override\n  getFileType()\n  {\n    return \"json\";\n  }\n\n  //Override\n  getIconClass()\n  {\n    return JSONFileIcon;\n  }\n}\n\nexport default NodalGraphExporter;\n","import React from 'react';\nimport PanelContainer from 'experimental/panels/PanelContainer.js';\n\nimport NodalGraphInputManager from 'modules/nodalgraph/manager/NodalGraphInputManager.js';\n\nimport NodalGraphRenderer from 'graph/renderer/NodalGraphRenderer.js';\nimport GraphInputRenderer from 'modules/nodalgraph/controller/renderer/GraphInputRenderer.js';\n\nimport NodalGraph from 'graph/NodalGraph.js';\nimport GraphNode from 'graph/GraphNode.js';\nimport QuadraticEdge from 'graph/QuadraticEdge.js';\nimport EmptyGraphLabeler from './EmptyGraphLabeler.js';\nimport * as NodalGraphParser from 'graph/parser/NodalGraphParser.js';\n\nimport EditPane from './components/views/EditPane.js';\nimport {RENDER_LAYER_WORKSPACE} from 'manager/RenderManager.js';\n\nimport NodalGraphExporter from './NodalGraphExporter.js';\nimport {DEFAULT_IMAGE_EXPORTERS} from './NodalGraphImageExporter.js';\nimport SafeGraphEventHandler from './SafeGraphEventHandler.js';\n\nimport * as UserUtil from 'experimental/UserUtil.js';\n\nconst MODULE_NAME = \"nodalgraph\";\nconst MODULE_VERSION = \"0.0.1\";\nconst MODULE_LOCALIZED_NAME = \"NodalGraph\";\n\nclass NodalGraphModule\n{\n  constructor(app)\n  {\n    this._app = app;\n\n    this._inputManager = new NodalGraphInputManager(this,\n      new NodalGraph(GraphNode, QuadraticEdge),\n      new EmptyGraphLabeler(),\n      NodalGraphParser,\n      null);\n\n    app.getDrawerManager()\n      .addPanelClass(props => (\n        <PanelContainer id={props.id}\n          className={props.className}\n          style={props.style}\n          title={\"Your Average Graph Editor\"}>\n          <p>{\"Brought to you with \\u2764 by the Flap.js team.\"}</p>\n          <p>{\"<- Tap on a tab to begin!\"}</p>\n        </PanelContainer>\n      ));\n\n    app.getExportManager()\n      .addExporter(new NodalGraphExporter())\n      .addExporters(DEFAULT_IMAGE_EXPORTERS);\n\n    app.getViewportManager()\n      .addViewClass(EditPane);\n\n    app.getRenderManager()\n      .addRenderer(RENDER_LAYER_WORKSPACE, props => (\n        <>\n          {/* Graph objects */\n            <NodalGraphRenderer currentModule={this} parent={props.workspace}/>}\n        </>\n      ))\n      .addRenderer(RENDER_LAYER_WORKSPACE, props => (\n        <GraphInputRenderer currentModule={this}/>\n      ));\n\n    app.getUndoManager()\n      .setEventHandlerFactory((...args) => {\n        return new SafeGraphEventHandler(this._inputManager.getGraphController(), this._inputManager.getGraphParser());\n      });\n  }\n\n  //Override\n  initialize(app)\n  {\n    this._inputManager.onSessionStart(app.getSession());\n  }\n\n  //Override\n  update(app)\n  {\n    this._inputManager.update(this);\n  }\n\n  //Override\n  destroy(app)\n  {\n    this._inputManager.onSessionStop(app.getSession());\n  }\n\n  //Override\n  clear(app)\n  {\n    UserUtil.userClearGraph(app, false, () => app.getToolbarComponent().closeBar());\n  }\n\n  getInputManager() { return this._inputManager; }\n  getInputController() { return this._inputManager.getInputController(); }\n  getGraphController() { return this._inputManager.getGraphController(); }\n\n  //Override\n  getModuleVersion() { return MODULE_VERSION; }\n  //Override\n  getModuleName() { return MODULE_NAME; }\n  //Override\n  getLocalizedModuleName() { return MODULE_LOCALIZED_NAME; }\n\n  getApp() { return this._app; }\n}\n\nexport default NodalGraphModule;\n","import React from 'react';\nimport Style from './IconButton.css';\n\nclass IconButton extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const title = this.props.title;\n    const showButtonLabel = IconButton.SHOW_LABEL && title;\n\n    return (\n      <button id={this.props.id}\n        className={Style.icon_button +\n          (showButtonLabel ? \" hint \" : \"\") +\n          \" \" + this.props.className}\n        style={this.props.style}\n        title={title}\n        disabled={this.props.disabled}\n        onClick={this.props.onClick}>\n        {this.props.children}\n        <label>{title}</label>\n      </button>\n    );\n  }\n}\nIconButton.SHOW_LABEL = false;\n\nexport default IconButton;\n","import React from 'react';\nimport Style from './PanelContainer.css';\n\nclass PanelContainer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n  \n  //Override\n  render()\n  {\n    const title = this.props.title;\n\n    return (\n      <div id={this.props.id}\n        className={Style.panel_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <div className={Style.panel_title}>\n          <h1>{title}</h1>\n        </div>\n        <div className={Style.panel_content}>\n          {this.props.children}\n        </div>\n        <div className={Style.panel_bottom}>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PanelContainer;\n","class AbstractGraphExporter\n{\n  constructor() {}\n\n  importFromData(data, module)\n  {\n    throw new Error(\"Unsupported import for type \\'\" + this.getFileType() + \"\\'\");\n  }\n\n  exportToData(module)\n  {\n    throw new Error(\"Unsupported export for type \\'\" + this.getFileType() + \"\\'\");\n  }\n\n  doesSupportData()\n  {\n    return false;\n  }\n\n  importFromFile(fileBlob, module)\n  {\n    throw new Error(\"Unsupported import for type \\'\" + this.getFileType() + \"\\'\");\n  }\n\n  exportToFile(filename, module)\n  {\n    throw new Error(\"Unsupported export for type \\'\" + this.getFileType() + \"\\'\");\n  }\n\n  doesSupportFile()\n  {\n    return false;\n  }\n\n  canImport(module)\n  {\n    return false;\n  }\n\n  canExport(module)\n  {\n    return true;\n  }\n\n  getTitle()\n  {\n    return this.getLabel();\n  }\n\n  getIconClass()\n  {\n    return null;\n  }\n\n  getLabel()\n  {\n    return \"Export as \" + this.getFileType().toUpperCase();\n  }\n\n  getFileType()\n  {\n    throw new Error(\"Unknown file type for exporter\");\n  }\n}\n\nexport default AbstractGraphExporter;\n","/**\n * Used by InputAdapter to handle input event logic.\n */\nclass AbstractInputHandler\n{\n  constructor() {}\n\n  /**\n   * Called by InputAdapter before an InputEvent begins.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not begin.\n   */\n  onPreInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter when an InputEvent resolves and is not an Alt input.\n   * To handle events for Alt inputs, refer to onAltInputEvent().\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events.\n   */\n  onInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter when an InputEvent resolves and is an Alt input.\n   * To handle events for non-Alt inputs, refer to onInputEvent().\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events.\n   */\n  onAltInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter when a DblInputEvent resolves. The input is\n   * assumed by a non-Alt input, since only non-Alt inputs can trigger this\n   * event.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events.\n   */\n  onDblInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter when input movess. The input is called before drag\n   * logic.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events (i.e. dragging events).\n   */\n  onMoveInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter before a drag begins. The input could be either\n   * an Alt or non-Alt input.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events, nor continue the drag input.\n   */\n  onDragStart(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter while dragging moves. The input could be either\n   * an Alt or non-Alt input.\n   * Will always be called after onDragStart() and will be followed by\n   * onDragStop() when complete.\n   */\n  onDragMove(pointer) {}\n\n  /**\n   * Called by InputAdapter after a drag ends. The input could be either an\n   * Alt or non-Alt input.\n   * Will always be called after onDragStart(). Although onDragMove may be\n   * called in-between, it is not guaranteed.\n   */\n  onDragStop(pointer) {}\n\n  /**\n   * Called by InputAdapter after an InputEvent ends.\n   */\n  onPostInputEvent(pointer) {}\n\n  /**\n   * Called by InputAdapter when zoom changes.\n   * Returns true if event is consumed (zoom will not be applied)\n   */\n  onZoomChange(pointer, zoomValue, prevValue)\n  {\n    return false;\n  }\n}\n\nexport default AbstractInputHandler;\n","export function userClearGraph(app, graphOnly=false, callback=null)\n{\n  if (window.confirm(I18N.toString(\"alert.graph.clear\")))\n  {\n    const module = app.getCurrentModule();\n    module.getGraphController().getGraph().clear();\n    if (!graphOnly)\n    {\n      app.getUndoManager().clear();\n      app.getSession().setProjectName(null);\n    }\n    if (callback) callback();\n  }\n}\n","export const RENDER_LAYER_WORKSPACE = \"workspace\";\nexport const RENDER_LAYER_WORKSPACE_OVERLAY = \"workspace-overlay\";\nexport const RENDER_LAYER_VIEWPORT = \"viewport\";\nexport const RENDER_LAYER_VIEWPORT_OVERLAY = \"viewport-overlay\";\n\nclass RenderManager\n{\n  constructor()\n  {\n    this._renderMapping = new Map();\n  }\n\n  addRenderer(layerID, rendererClass)\n  {\n    if (this._renderMapping.has(layerID))\n    {\n      this._renderMapping.get(layerID).push(rendererClass);\n    }\n    else\n    {\n      this._renderMapping.set(layerID, [rendererClass]);\n    }\n    return this;\n  }\n\n  //DuckType(SessionListener)\n  onSessionStart(session)\n  {\n\n  }\n\n  //DuckType(SessionListener)\n  onSessionStop(session)\n  {\n    this._renderMapping.clear();\n  }\n\n  getRenderersByLayer(layerID)\n  {\n    return this._renderMapping.get(layerID);\n  }\n}\n\nexport default RenderManager;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 56 56\">\n        <path fill=\"#E9E9E0\" d=\"M36.985,0H7.963C7.155,0,6.5,0.655,6.5,1.926V55c0,0.345,0.655,1,1.463,1h40.074 c0.808,0,1.463-0.655,1.463-1V12.978c0-0.696-0.093-0.92-0.257-1.085L37.607,0.257C37.442,0.093,37.218,0,36.985,0z\"/>\n        <polygon fill=\"#D9D7CA\" points=\"37.5,0.151 37.5,12 49.349,12 \t\"/>\n        <path fill=\"#9777A8\" d=\"M48.037,56H7.963C7.155,56,6.5,55.345,6.5,54.537V39h43v15.537C49.5,55.345,48.845,56,48.037,56z\"/>\n        <path fill=\"#FFFFFF\" d={\"M17.021,42.719v7.848c0,0.474-0.087,0.873-0.26,1.196s-0.405,0.583-0.697,0.779 s-0.627,0.333-1.005,0.41c-0.378,0.077-0.768,0.116-1.169,0.116c-0.2,0-0.436-0.021-0.704-0.062s-0.547-0.104-0.834-0.191 s-0.563-0.185-0.827-0.294s-0.487-0.232-0.67-0.369l0.697-1.107c0.091,0.063,0.221,0.13,0.39,0.198s0.354,0.132,0.554,0.191 s0.41,0.111,0.629,0.157s0.424,0.068,0.615,0.068c0.483,0,0.868-0.094,1.155-0.28s0.439-0.504,0.458-0.95v-7.711H17.021z\"}/>\n        <path fill=\"#FFFFFF\" d={\"M25.184,50.238c0,0.364-0.075,0.718-0.226,1.06s-0.362,0.643-0.636,0.902s-0.61,0.467-1.012,0.622 s-0.856,0.232-1.367,0.232c-0.219,0-0.444-0.012-0.677-0.034s-0.467-0.062-0.704-0.116c-0.237-0.055-0.463-0.13-0.677-0.226 s-0.398-0.212-0.554-0.349l0.287-1.176c0.128,0.073,0.289,0.144,0.485,0.212s0.398,0.132,0.608,0.191s0.419,0.107,0.629,0.144 s0.405,0.055,0.588,0.055c0.556,0,0.982-0.13,1.278-0.39s0.444-0.645,0.444-1.155c0-0.31-0.104-0.574-0.314-0.793 s-0.472-0.417-0.786-0.595s-0.654-0.355-1.019-0.533s-0.706-0.388-1.025-0.629s-0.583-0.526-0.793-0.854s-0.314-0.738-0.314-1.23 c0-0.446,0.082-0.843,0.246-1.189s0.385-0.641,0.663-0.882s0.602-0.426,0.971-0.554s0.759-0.191,1.169-0.191 c0.419,0,0.843,0.039,1.271,0.116s0.774,0.203,1.039,0.376c-0.055,0.118-0.118,0.248-0.191,0.39s-0.142,0.273-0.205,0.396 s-0.118,0.226-0.164,0.308s-0.073,0.128-0.082,0.137c-0.055-0.027-0.116-0.063-0.185-0.109s-0.166-0.091-0.294-0.137 s-0.296-0.077-0.506-0.096s-0.479-0.014-0.807,0.014c-0.183,0.019-0.355,0.07-0.52,0.157s-0.31,0.193-0.438,0.321 s-0.228,0.271-0.301,0.431s-0.109,0.313-0.109,0.458c0,0.364,0.104,0.658,0.314,0.882s0.47,0.419,0.779,0.588 s0.647,0.333,1.012,0.492s0.704,0.354,1.019,0.581s0.576,0.513,0.786,0.854S25.184,49.7,25.184,50.238z\"}/>\n        <path fill=\"#FFFFFF\" d={\"M35.082,47.914c0,0.848-0.107,1.595-0.321,2.242s-0.511,1.185-0.889,1.613s-0.82,0.752-1.326,0.971 s-1.06,0.328-1.661,0.328s-1.155-0.109-1.661-0.328s-0.948-0.542-1.326-0.971s-0.675-0.966-0.889-1.613s-0.321-1.395-0.321-2.242 s0.107-1.593,0.321-2.235s0.511-1.178,0.889-1.606s0.82-0.754,1.326-0.978s1.06-0.335,1.661-0.335s1.155,0.111,1.661,0.335 s0.948,0.549,1.326,0.978s0.675,0.964,0.889,1.606S35.082,47.066,35.082,47.914z M30.844,51.729c0.337,0,0.658-0.066,0.964-0.198 s0.579-0.349,0.82-0.649s0.431-0.695,0.567-1.183s0.21-1.082,0.219-1.784c-0.009-0.684-0.08-1.265-0.212-1.743 s-0.314-0.873-0.547-1.183s-0.497-0.533-0.793-0.67s-0.608-0.205-0.937-0.205c-0.337,0-0.658,0.063-0.964,0.191 s-0.579,0.344-0.82,0.649s-0.431,0.699-0.567,1.183c-0.137,0.483-0.21,1.075-0.219,1.777c0.009,0.684,0.08,1.267,0.212,1.75 s0.314,0.877,0.547,1.183s0.497,0.528,0.793,0.67S30.516,51.729,30.844,51.729z\"}/>\n        <path fill=\"#FFFFFF\" d=\"M44.68,42.924V53h-1.668l-3.951-6.945V53h-1.668V42.924h1.668l3.951,6.945v-6.945H44.68z\"/>\n        <path fill=\"#9777A8\" d=\"M19.5,19v-4c0-0.551,0.448-1,1-1c0.553,0,1-0.448,1-1s-0.447-1-1-1c-1.654,0-3,1.346-3,3v4 c0,1.103-0.897,2-2,2c-0.553,0-1,0.448-1,1s0.447,1,1,1c1.103,0,2,0.897,2,2v4c0,1.654,1.346,3,3,3c0.553,0,1-0.448,1-1 s-0.447-1-1-1c-0.552,0-1-0.449-1-1v-4c0-1.2-0.542-2.266-1.382-3C18.958,21.266,19.5,20.2,19.5,19z\"/>\n        <circle fill=\"#9777A8\" cx=\"27.5\" cy=\"18.5\" r=\"1.5\"/>\n        <path fill=\"#9777A8\" d=\"M39.5,21c-1.103,0-2-0.897-2-2v-4c0-1.654-1.346-3-3-3c-0.553,0-1,0.448-1,1s0.447,1,1,1 c0.552,0,1,0.449,1,1v4c0,1.2,0.542,2.266,1.382,3c-0.84,0.734-1.382,1.8-1.382,3v4c0,0.551-0.448,1-1,1c-0.553,0-1,0.448-1,1 s0.447,1,1,1c1.654,0,3-1.346,3-3v-4c0-1.103,0.897-2,2-2c0.553,0,1-0.448,1-1S40.053,21,39.5,21z\"/>\n        <path fill=\"#9777A8\" d=\"M27.5,24c-0.553,0-1,0.448-1,1v3c0,0.552,0.447,1,1,1s1-0.448,1-1v-3 C28.5,24.448,28.053,24,27.5,24z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","class AbstractEventHandler\n{\n  constructor() {}\n\n  applyUndo(undoManager)\n  {\n    throw new Error(\"Undo operation for handler not supported\");\n  }\n\n  applyRedo(undoManager)\n  {\n    throw new Error(\"Redo operation for handler not supported\");\n  }\n}\n\nexport default AbstractEventHandler;\n","import React from 'react';\nimport IconButton from './IconButton.js';\n\nclass IconStateButton extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.state = {\n      index: props.initial || 0\n    };\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e)\n  {\n    const prevIndex = this.state.index;\n    this.setState((prev, props) => {\n      const count = React.Children.count(props.children);\n      let nextIndex = prev.index + 1;\n      if (nextIndex >= count)\n      {\n        nextIndex = 0;\n      }\n      return {index: nextIndex};\n    }, () => {\n      if (this.props.onClick)\n      {\n        this.props.onClick(e, prevIndex);\n      }\n    });\n  }\n\n  setStateIndex(index)\n  {\n    this.setState({index: index});\n  }\n\n  getStateIndex()\n  {\n    return this.state.index;\n  }\n\n  //Override\n  render()\n  {\n    const child = React.Children.map(this.props.children, (child, i) => {\n      if (i === this.state.index) return child;\n    })[0];\n\n    return (\n      <IconButton id={this.props.id}\n        className={this.props.className}\n        style={this.props.style}\n        title={this.props.title}\n        disabled={this.props.disabled}\n        onClick={this.onClick}>\n        {child}\n      </IconButton>\n    );\n  }\n}\nexport default IconStateButton;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './FullscreenWidget.css';\n\nimport IconStateButton from 'experimental/components/IconStateButton.js';\nimport FullscreenIcon from 'experimental/iconset/FullscreenIcon.js';\nimport FullscreenExitIcon from 'experimental/iconset/FullscreenExitIcon.js';\n\nclass FullscreenWidget extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const app = this.props.app;\n\n    return (\n      <IconStateButton id={this.props.id}\n        className={Style.fullscreen_button + \" \" + this.props.className}\n        style={this.props.style}\n        title={\"Fullscreen Mode\"}\n        onClick={(e, i) => app.setState({hide: (i === 0)})}>\n        <FullscreenIcon/>\n        <FullscreenExitIcon/>\n      </IconStateButton>\n    );\n  }\n}\n\nexport default FullscreenWidget;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n        <path d=\"M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14zM7 9h5v1H7z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './ZoomWidget.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport ZoomInIcon from 'experimental/iconset/ZoomInIcon.js';\nimport ZoomOutIcon from 'experimental/iconset/ZoomOutIcon.js';\n\nclass ZoomWidget extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.onZoomIn = this.onZoomIn.bind(this);\n    this.onZoomOut = this.onZoomOut.bind(this);\n  }\n\n  onZoomIn(e)\n  {\n    const viewport = this.props.viewport;\n    const viewScale = -viewport.getScale() * 0.4;\n    viewport.addScale(viewScale);\n  }\n\n  onZoomOut(e)\n  {\n    const viewport = this.props.viewport;\n    const viewScale = viewport.getScale() * 0.75;\n    viewport.addScale(viewScale);\n  }\n\n  //Override\n  render()\n  {\n    const viewport = this.props.viewport;\n    const viewScale = \"x\" + (1 / (viewport.getScale() || 1)).toFixed(2);\n\n    return (\n      <div id={this.props.id}\n        className={Style.zoom_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <IconButton className={Style.zoom_button} title=\"Zoom In\" onClick={this.onZoomIn}>\n          <ZoomInIcon/>\n        </IconButton>\n        <IconButton className={Style.zoom_button} title=\"Zoom Out\" onClick={this.onZoomOut}>\n          <ZoomOutIcon/>\n        </IconButton>\n        <label className={Style.zoom_label}>{viewScale}</label>\n      </div>\n    );\n  }\n}\n\nexport default ZoomWidget;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm8.94 3c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06C6.83 3.52 3.52 6.83 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c4.17-.46 7.48-3.77 7.94-7.94H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './FocusCenterWidget.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport PinpointIcon from 'experimental/iconset/PinpointIcon.js';\n\nconst OFFSET_EPSILON = 0.1;\n\nclass FocusCenterWidget extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e)\n  {\n    const viewport = this.props.viewport;\n    viewport.setOffset(0, 0);\n  }\n\n  //Override\n  render()\n  {\n    const viewport = this.props.viewport;\n\n    return (\n      <IconButton id={this.props.id}\n        className={Style.center_focus_button +\n          \" \" + this.props.className}\n        style={this.props.style}\n        title={\"Center Workspace\"}\n        disabled={Math.abs(viewport.getOffsetX()) < OFFSET_EPSILON &&\n          Math.abs(viewport.getOffsetY()) < OFFSET_EPSILON} onClick={this.onClick}>\n        <PinpointIcon/>\n      </IconButton>\n    );\n  }\n}\n\nexport default FocusCenterWidget;\n","import React from 'react';\nimport Style from './NavbarWidget.css';\n\nimport FullscreenWidget from 'experimental/widgets/FullscreenWidget.js';\nimport ZoomWidget from 'experimental/widgets/ZoomWidget.js';\nimport FocusCenterWidget from 'experimental/widgets/FocusCenterWidget.js';\n\nclass NavbarWidget extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const app = this.props.app;\n    const viewport = app.getInputAdapter().getViewport();\n\n    return (\n      <div id={this.props.id}\n        className={Style.navbar_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <FullscreenWidget className={Style.navbar_widget} app={app}/>\n        <ZoomWidget className={Style.navbar_widget_container} viewport={viewport}/>\n        <FocusCenterWidget className={Style.navbar_widget} viewport={viewport}/>\n      </div>\n    );\n  }\n}\n\nexport default NavbarWidget;\n","import React from 'react';\n\nconst QUAD_RADIAN_THRESHOLD = 0.01;\nconst QUAD_REVERSE_OFFSET_THRESHOLD = 4;\nconst ARROW_WIDTH = 10;\nconst SIXTH_PI = Math.PI / 6;\n\nexport const DIRECTED_FORWARD = \"forward\";\nexport const DIRECTED_BACKWARD = \"backward\";\nexport const DIRECTED_BOTH = \"both\";\nexport const DIRECTED_NONE = \"undirected\";\n\nexport const DefaultEndpointRenderer = props => (\n  <>\n    <path d={\n      \"M \" +\n        (props.position.x - (props.length * Math.sin(props.angle - SIXTH_PI))) +\n        \" \" +\n        (props.position.y - (props.length * Math.cos(props.angle - SIXTH_PI))) +\n        \" \" +\n        \"L \" + props.position.x + \" \" + props.position.y +\n        \" \" +\n        \"L \" +\n        (props.position.x - (props.length * Math.sin(props.angle + SIXTH_PI))) +\n        \" \" +\n        (props.position.y - (props.length * Math.cos(props.angle + SIXTH_PI)))\n    }\n    stroke={props.color}\n    fill=\"none\"/>\n  </>\n);\n\nexport const DefaultLabelRenderer = props => (\n  <g transform={\"translate(\" + props.position.x + \",\" + props.position.y + \")\" +\n    \" \" +\n    \"rotate(\" + (props.direction * 180 / Math.PI) + \")\"}>\n    {\n      props.labels && props.labels.length > 0 &&\n      props.labels.map((str, i) => {\n        return (\n          <text key={str + \".\" + i}\n            transform={\"translate(0,\" + ((i + 1) * -15) + \")\" +\n              (props.reverse ? \" scale(-1,-1)\" : \"\")}\n            alignmentBaseline=\"central\"\n            pointerEvents=\"none\"\n            style={{userSelect: \"none\"}}\n            textAnchor=\"middle\"\n            stroke={props.color}>\n            {str}\n          </text>\n        );\n      })\n    }\n  </g>\n);\n\nclass EdgeRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const directed = this.props.directed || DIRECTED_NONE;\n\n    const ForwardEndpointRenderer =\n      (directed === DIRECTED_FORWARD || directed === DIRECTED_BOTH) ?\n        (this.props.forwardEndpointRenderer ||\n        this.props.endpointRenderer ||\n        DefaultEndpointRenderer) : null;\n    const BackwardEndpointRenderer =\n      (directed === DIRECTED_BACKWARD || directed === DIRECTED_BOTH) ?\n        (this.props.backwardEndpointRenderer ||\n        this.props.endpointRenderer ||\n        DefaultEndpointRenderer) : null;\n    const EdgeLabelRenderer = this.props.labelRenderer || DefaultLabelRenderer;\n\n    const fromPoint = this.props.from;\n    const toPoint = this.props.to;\n    const centerPoint = this.props.center;\n    const label = this.props.label || \"\";\n    const direction = this.props.direction || 0;\n    const color = this.props.color || \"#000000\";\n\n    let reverseLabel = false;\n    let fromAngle;\n    let toAngle;\n    let quadLine = null;\n\n    const dftx = fromPoint.x - toPoint.x;\n    const dfty = fromPoint.y - toPoint.y;\n    const dfcx = fromPoint.x - centerPoint.x;\n    const dfcy = fromPoint.y - centerPoint.y;\n    const ftrad = Math.atan2(dfty, dftx);\n    const fcrad = Math.atan2(dfcy, dfcx);\n    if (Math.abs(ftrad - fcrad) <= QUAD_RADIAN_THRESHOLD)\n    {\n      toAngle = Math.atan2(centerPoint.x - toPoint.x, centerPoint.y - toPoint.y) + Math.PI;\n      fromAngle = Math.atan2(centerPoint.x - fromPoint.x, centerPoint.y - fromPoint.y) + Math.PI;\n      quadLine = \"L \" + toPoint.x + \" \" + toPoint.y;\n      reverseLabel = false;\n    }\n    else\n    {\n      const cx = ((centerPoint.x * 4) - fromPoint.x - toPoint.x) / 2;\n      const cy = ((centerPoint.y * 4) - fromPoint.y - toPoint.y) / 2;\n      toAngle = Math.atan2(cx - toPoint.x, cy - toPoint.y) + Math.PI;\n      fromAngle = Math.atan2(cx - fromPoint.x, cy - fromPoint.y) + Math.PI;\n      quadLine = \"Q \" + cx + \" \" + cy + \" \" + toPoint.x + \" \" + toPoint.y;\n      reverseLabel = cy > centerPoint.y + QUAD_REVERSE_OFFSET_THRESHOLD;\n    }\n\n    return (\n      <g>\n        <path d={\"M \" + fromPoint.x + \" \" + fromPoint.y + \" \" + quadLine}\n          stroke={color}\n          fill=\"none\"/>\n        {ForwardEndpointRenderer &&\n          <ForwardEndpointRenderer position={toPoint} angle={toAngle} length={ARROW_WIDTH} color={color}/>}\n        {BackwardEndpointRenderer &&\n          <BackwardEndpointRenderer position={fromPoint} angle={fromAngle} length={ARROW_WIDTH} color={color}/>}\n        {EdgeLabelRenderer &&\n          <EdgeLabelRenderer position={centerPoint} labels={label.split('\\n')} direction={direction} reverse={reverseLabel}/>}\n      </g>\n    );\n  }\n}\n\nexport default EdgeRenderer;\n","import AbstractGraphExporter from 'manager/export/AbstractGraphExporter.js';\n\nimport PNGIcon from 'icons/flat/PNGIcon.js';\nimport JPGIcon from 'icons/flat/JPGIcon.js';\nimport XMLIcon from 'icons/flat/XMLIcon.js';\nimport SVGIcon from 'icons/flat/SVGIcon.js';\nimport { FILE_TYPE_PNG, FILE_TYPE_JPG, FILE_TYPE_SVG, downloadImageFromSVG } from 'util/Downloader.js';\n\nconst EXPORT_PADDING_X = 30;\nconst EXPORT_PADDING_Y = 0;\n\nclass GraphImageExporter extends AbstractGraphExporter\n{\n  constructor(imageType=FILE_TYPE_PNG)\n  {\n    super();\n    this._imageType = imageType;\n  }\n\n  processSVGForExport(element, width, height, currentModule)\n  {\n    const graphController = currentModule.getGraphController();\n\n    const viewport = currentModule.getApp().getInputAdapter().getViewport();\n    const offsetX = viewport.getOffsetX();\n    const offsetY = viewport.getOffsetY();\n    const bounds = graphController.getGraph().getBoundingRect();\n    const dx = bounds.minX + offsetX - EXPORT_PADDING_X;\n    const dy = bounds.minY + offsetY - EXPORT_PADDING_Y;\n    const w = bounds.width + EXPORT_PADDING_X * 2;\n    const h = bounds.height + EXPORT_PADDING_Y * 2;\n    const clone = element.cloneNode(true);\n    clone.setAttribute('viewBox', dx + \" \" + dy + \" \" + w + \" \" + h);\n    clone.setAttribute('width', width);\n    clone.setAttribute('height', height);\n\n    //Apply the workspace font (refer to Workspace.css)\n    clone.setAttribute('font-size', \"16px\");\n    clone.setAttribute('font-family', \"monospace\");\n    clone.setAttribute('style', \".graph-ui {display: none;}\");\n\n    /*\n\n    const nodeColor = styleOpts.getOptionByProp(\"--color-graph-node\").getStyle();\n    const textColor = styleOpts.getOptionByProp(\"--color-graph-text\").getStyle();\n    console.log(nodeColor);\n    const styleString = \"* {\"\n      + \"--color-graph-node: blue;\"\n      + \"--color-graph-text: \" + textColor + \";\"\n      + \"}\";\n\n    */\n\n    /*\n    //TODO: Link the font family to svg\n    const link = document.createElement(\"link\");\n    link.setAttribute(\"rel\", \"stylesheet\");\n    clone.appendChild(link);\n    */\n\n    //Remove unwanted ui elements from image\n    const uiElements = clone.getElementsByClassName(\"graph-ui\");\n    while(uiElements.length > 0)\n    {\n      const e = uiElements[0];\n      e.remove();//This will propagate changes to uiElements, so be careful\n    }\n\n    return clone;\n  }\n\n  //Override\n  exportToFile(filename, module)\n  {\n    const workspace = module.getApp().workspace;\n    const svgElement = workspace.getSVGElement();\n    const workspaceDim = svgElement.viewBox.baseVal;\n    const width = workspaceDim.width;\n    const height = workspaceDim.height;\n    const svg = this.processSVGForExport(svgElement, width, height, module);\n\n    downloadImageFromSVG(filename, this._imageType, svg, width, height);\n  }\n\n  //Override\n  doesSupportFile()\n  {\n    return true;\n  }\n\n  //Override\n  canImport(module)\n  {\n    return false;\n  }\n\n  //Override\n  getTitle()\n  {\n    switch(this._imageType)\n    {\n      case FILE_TYPE_PNG: return I18N.toString(\"file.export.png.hint\");\n      case FILE_TYPE_JPG: return I18N.toString(\"file.export.jpg.hint\");\n      case FILE_TYPE_SVG: return I18N.toString(\"file.export.svg.hint\");\n      default: return super.getTitle();\n    }\n  }\n\n  //Override\n  getLabel()\n  {\n    switch(this._imageType)\n    {\n      case FILE_TYPE_PNG: return I18N.toString(\"file.export.png\");\n      case FILE_TYPE_JPG: return I18N.toString(\"file.export.jpg\");\n      case FILE_TYPE_SVG: return I18N.toString(\"file.export.svg\");\n      default: return super.getLabel();\n    }\n  }\n\n  //Override\n  getFileType()\n  {\n    return this._imageType;\n  }\n\n  //Override\n  getIconClass()\n  {\n    switch(this._imageType)\n    {\n      case FILE_TYPE_PNG: return PNGIcon;\n      case FILE_TYPE_JPG: return JPGIcon;\n      case FILE_TYPE_SVG: return SVGIcon;\n      default: return null;\n    }\n  }\n}\n\nexport const DEFAULT_IMAGE_EXPORTERS = [\n  new GraphImageExporter(FILE_TYPE_PNG),\n  new GraphImageExporter(FILE_TYPE_JPG),\n  new GraphImageExporter(FILE_TYPE_SVG)\n];\n\nexport default GraphImageExporter;\n","import AbstractEventHandler from 'manager/undo/AbstractEventHandler.js';\n\nclass SafeGraphEventHandler extends AbstractEventHandler\n{\n  constructor(graphController, graphParser)\n  {\n    super();\n\n    this._graphController = graphController;\n    this._graphParser = graphParser;\n    this._graphData = graphParser.objectify(graphController.getGraph());\n  }\n\n  //Override\n  applyUndo(undoManager)\n  {\n    const prevEvent = undoManager.getPreviousEvent();\n    if (prevEvent instanceof SafeGraphEventHandler)\n    {\n      prevEvent.applyRedo(undoManager);\n    }\n    else\n    {\n      this._graphController.getGraph().clear();\n    }\n  }\n\n  //Override\n  applyRedo(undoManager)\n  {\n    this._graphParser.parse(this._graphData, this._graphController.getGraph());\n  }\n}\nexport default SafeGraphEventHandler;\n","class GraphNodeSelectionBox\n{\n  constructor()\n  {\n    this._boundingBox = {\n      fromX: 0, fromY: 0,\n      toX: 0, toY: 0,\n      visible: false\n    };\n\n    this.targets = [];\n  }\n\n  getSelectionBox()\n  {\n    return this._boundingBox;\n  }\n\n  getSelection(graph, forceUpdate=false)\n  {\n    if (forceUpdate)\n    {\n      const box = this._boundingBox;\n      const mx = Math.max(box.toX, box.fromX);\n      const my = Math.max(box.toY, box.fromY);\n      const lx = Math.min(box.toX, box.fromX);\n      const ly = Math.min(box.toY, box.fromY);\n      this.clearSelection();\n      getNodesWithin(graph, lx, ly, mx, my, this.targets);\n    }\n\n    return this.targets;\n  }\n\n  hasSelection()\n  {\n    return this.targets.length > 0;\n  }\n\n  clearSelection()\n  {\n    this.targets.length = 0;\n  }\n\n  isTargetInSelection(target)\n  {\n    return this.targets.includes(target);\n  }\n\n  beginSelection(graph, x, y)\n  {\n    const box = this._boundingBox;\n    box.fromX = box.toX = x;\n    box.fromY = box.toY = y;\n    this.clearSelection();\n\n    box.visible = true;\n  }\n\n  updateSelection(graph, x, y)\n  {\n    const box = this._boundingBox;\n    box.toX = x;\n    box.toY = y;\n    this.getSelection(graph, true);\n  }\n\n  endSelection(graph, x, y)\n  {\n    const box = this._boundingBox;\n    box.toX = x;\n    box.toY = y;\n    this.getSelection(graph, true);\n\n    box.visible = false;\n  }\n\n  isSelecting()\n  {\n    return this._boundingBox.visible;\n  }\n}\n\nfunction getNodesWithin(graph, x1, y1, x2, y2, dst)\n{\n  const fromX = Math.min(x1, x2);\n  const fromY = Math.min(y1, y2);\n  const toX = Math.max(x1, x2);\n  const toY = Math.max(y1, y2);\n\n  for(const node of graph.getNodes())\n  {\n    if (node.x >= fromX && node.x < toX &&\n        node.y >= fromY && node.y < toY)\n    {\n      dst.push(node);\n    }\n  }\n  return dst;\n}\n\nexport default GraphNodeSelectionBox;\n","const EDGE_RADIUS = 12;\nconst EDGE_RADIUS_SQU = EDGE_RADIUS * EDGE_RADIUS;\nconst ENDPOINT_RADIUS = 6;\nconst ENDPOINT_RADIUS_SQU = ENDPOINT_RADIUS * ENDPOINT_RADIUS;\n\nclass GraphPicker\n{\n  constructor(graphController)\n  {\n    this.target = null;\n    this.targetType = \"\";\n\n    this.initialTarget = null;\n    this.initialTargetType = \"\";\n\n    this._prevX = 0;\n    this._prevY = 0;\n  }\n\n  setInitialTarget(target, type)\n  {\n    this.initialTarget = target;\n    this.initialTargetType = type;\n  }\n\n  updateHoverTarget(graph, x, y)\n  {\n    if (this._prevX !== x || this._prevY !== y)\n    {\n      this._prevX = x;\n      this._prevY = y;\n\n      //Update target\n      this.updateTarget(graph, x, y);\n\n      //HACK: to make the cursor look like a pointer when targeting\n      if (this.hasTarget())\n      {\n        document.body.style.cursor = \"pointer\";\n      }\n      else\n      {\n        document.body.style.cursor = \"auto\";\n      }\n    }\n  }\n\n  updateInitialTarget(graph, x, y)\n  {\n    this.updateTarget(graph, x, y);\n    this.setInitialTarget(this.target, this.targetType);\n  }\n\n  updateTarget(graph, x, y)\n  {\n    if (this.target = this.getNodeByInitialMarkerAt(graph, x, y))\n    {\n      //Clicked on initial marker\n      this.targetType = \"initial\";\n    }\n    else if (this.target = this.getEdgeByEndPointAt(graph, x, y))\n    {\n      //Clicked on endpoint\n      this.targetType = \"endpoint\";\n    }\n    else if (this.target = this.getNodeAt(graph, x, y))\n    {\n      //Clicked on node\n      this.targetType = \"node\";\n    }\n    else if (this.target = this.getEdgeAt(graph, x, y))\n    {\n      //Clicked on edge\n      this.targetType = \"edge\";\n    }\n    else\n    {\n      //Clicked on graph\n      this.target = null;\n      this.targetType = \"none\";\n    }\n\n    return this.target;\n  }\n\n  clearTarget()\n  {\n    this.target = null;\n    this.targetType = \"none\";\n  }\n\n  hasTarget()\n  {\n    return this.target != null;\n  }\n\n  getNodeAt(graph, x, y)\n  {\n    //Search graph\n    for(const node of graph.getNodes())\n    {\n      const nodeSize = node.getNodeSize();\n      const dx = x - node.x;\n      const dy = y - node.y;\n      if (dx * dx + dy * dy < nodeSize * nodeSize)\n      {\n        return node;\n      }\n    }\n    return null;\n  }\n\n  getNodeByInitialMarkerAt(graph, x, y)\n  {\n    const startNode = graph.getStartNode();\n    if (!startNode) return null;\n\n    const nodeSize = startNode.getNodeSize();\n    const offset = -(nodeSize + (nodeSize / 2));\n    const dx = x - (startNode.x + offset);\n    const dy = y - startNode.y;\n    if (dx * dx + dy * dy < EDGE_RADIUS_SQU)\n    {\n      return startNode;\n    }\n\n    return null;\n  }\n\n  getEdgeAt(graph, x, y)\n  {\n    const center = {x: 0, y: 0};\n\n    //Search graph\n    for(const edge of graph.getEdges())\n    {\n      edge.getCenterPoint(center);\n      const dx = x - center.x;\n      const dy = y - center.y;\n      if (dx * dx + dy * dy < EDGE_RADIUS_SQU)\n      {\n        return edge;\n      }\n    }\n    return null;\n  }\n\n  getEdgeByEndPointAt(graph, x, y)\n  {\n    const end = {x: 0, y: 0};\n    //Search graph\n    for(const edge of graph.getEdges())\n    {\n      edge.getEndPoint(end);\n      const dx = x - end.x;\n      const dy = y - end.y;\n      if (dx * dx + dy * dy < ENDPOINT_RADIUS_SQU)\n      {\n        return edge;\n      }\n    }\n    return null;\n  }\n\n\n  isTarget(target)\n  {\n    return this.target == target;\n  }\n}\n\nexport default GraphPicker;\n","class InputHandler\n{\n  isTargetable(inputController, pointer, target, targetType)\n  {\n    return false;\n  }\n\n  onAction(inputController, graphController, pointer, target)\n  {\n    return false;\n  }\n\n  onDblAction(inputController, graphController, pointer, target)\n  {\n    return false;\n  }\n\n  onDragStart(inputController, graphController, pointer, target)\n  {\n    return false;\n  }\n\n  onDragMove(inputController, graphController, pointer, target)\n  {\n    return false;\n  }\n\n  onDragStop(inputController, graphController, pointer, target)\n  {\n    return false;\n  }\n}\nexport default InputHandler;\n","import InputHandler from './InputHandler.js';\n\nclass GraphElementInputHandler extends InputHandler\n{\n  constructor(targetType)\n  {\n    super();\n\n    if (!targetType)\n    {\n      throw new Error(\"Missing target type for graph element input handler\");\n    }\n\n    this._targetType = targetType;\n  }\n\n  //Override\n  isTargetable(inputController, pointer, target, targetType)\n  {\n    if (targetType === this._targetType)\n    {\n      return true;\n    }\n\n    return false;\n  }\n  \n  getTargetType()\n  {\n    return this._targetType;\n  }\n}\n\nexport default GraphElementInputHandler;\n","import GraphElementInputHandler from './GraphElementInputHandler.js';\n\nconst SNAP_TO_GRID = true;\nconst SNAP_SIZE = 48;\n\nclass GraphNodeInputHandler extends GraphElementInputHandler\n{\n  constructor()\n  {\n    super(\"node\");\n  }\n\n  //Override\n  onAction(inputController, graphController, pointer, target)\n  {\n    const picker = inputController.getPicker();\n    const selectionBox = inputController.getSelectionBox();\n\n    //Click to delete node\n    if (inputController.isTrashMode())\n    {\n      //So that the emitted 'delete' events can use this\n      graphController.prevX = target.x;\n      graphController.prevY = target.y;\n\n      //If there exists selected states, delete them all!\n      if (selectionBox.hasSelection())\n      {\n        //Delete all selected nodes\n        graphController.deleteSelectedNodes(target);\n      }\n      else\n      {\n        //Delete a single node\n        graphController.deleteTargetNode(target);\n      }\n      return true;\n    }\n    //Edit click to toggle node\n    else if (!inputController.isMoveMode())\n    {\n      graphController.toggleNode(target);\n      return true;\n    }\n    else\n    {\n      //Edit label for selected node\n      graphController.openLabelEditor(target, target.getNodeLabel());\n    }\n\n    return false;\n  }\n\n  //Override\n  onDragStart(inputController, graphController, pointer, target)\n  {\n    if (inputController.isMoveMode())\n    {\n      //Moving node (and selected nodes)\n      graphController.prevX = target.x;\n      graphController.prevY = target.y;\n    }\n    else\n    {\n      const picker = inputController.getPicker();\n      const graph = graphController.getGraph();\n      const edge = graph.createEdge(target, pointer);\n      edge.setEdgeLabel(graphController.getGraphLabeler().getDefaultEdgeLabel());\n\n      //Redirect pointer to refer to the edge as the new target\n      picker.setInitialTarget(edge, \"endpoint\");\n      inputController.isNewEdge = true;\n\n      //Reset previous quad values for new proxy edge\n      const edgeQuad = edge.getQuadratic();\n      graphController.prevQuad.radians = edgeQuad.radians;\n      graphController.prevQuad.length = edgeQuad.length;\n      graphController.prevEdgeTo = null;\n\n      //Ready to move proxy edge to pointer...\n    }\n    return true;\n  }\n\n  //Override\n  onDragMove(inputController, graphController, pointer, target)\n  {\n    const picker = inputController.getPicker();\n    const selectionBox = inputController.getSelectionBox();\n    const graph = graphController.getGraph();\n    let x = pointer.x;\n    let y = pointer.y;\n\n    if (inputController._snapToGrid)\n    {\n      const snapSize = inputController._snapSize;\n      x = Math.round(x / snapSize) * snapSize;\n      y = Math.round(y / snapSize) * snapSize;\n    }\n\n    if (selectionBox.hasSelection())\n    {\n      graphController.moveMultipleNodesTo(pointer, selectionBox.getSelection(graph), x, y);\n    }\n    else\n    {\n      graphController.moveNodeTo(pointer, target, x, y);\n    }\n    return true;\n  }\n\n  //Override\n  onDragStop(inputController, graphController, pointer, target)\n  {\n    const picker = inputController.getPicker();\n    const selectionBox = inputController.getSelectionBox();\n    const graph = graphController.getGraph();\n    const x = pointer.x;\n    const y = pointer.y;\n\n    //Delete it if withing trash area...\n    if (inputController.isTrashMode())\n    {\n      //If there exists selected states, delete them all!\n      if (selectionBox.hasSelection())\n      {\n        graphController.deleteSelectedNodes(target);\n      }\n      else\n      {\n        //Delete a single node\n        graphController.deleteTargetNode(target);\n      }\n\n      return true;\n    }\n    //If dragged to an empty space (not trash)\n    else\n    {\n      //Do nothing, since should have moved to position\n      if (selectionBox.hasSelection())\n      {\n        const dx = x - graphController.prevX;\n        const dy = y - graphController.prevY;\n        graphController.onGraphIntentMoveAllNodes(selectionBox.getSelection(graph), dx, dy);\n        //graphController.emit(\"nodeMoveAll\", graph, picker.getSelection(graph), dx, dy);\n      }\n      else\n      {\n        graphController.onGraphIntentMoveNode(target, x, y, graphController.prevX, graphController.prevY);\n        //graphController.emit(\"nodeMove\", graph, target, x, y, graphController.prevX, graphController.prevY);\n      }\n      return true;\n    }\n\n    return false;\n  }\n}\n\nexport default GraphNodeInputHandler;\n","import GraphElementInputHandler from './GraphElementInputHandler.js';\nimport GraphNode from 'graph/GraphNode.js';\n\nclass GraphInitialInputHandler extends GraphElementInputHandler\n{\n  constructor()\n  {\n    super(\"initial\");\n  }\n\n  //Override\n  onDragStart(inputController, graphController, pointer, target)\n  {\n    //Ready to move the initial marker to another state...\n    inputController.ghostInitialMarker = pointer;\n    return true;\n  }\n\n  //Override\n  onDragMove(inputController, graphController, pointer, target)\n  {\n    const picker = inputController.getPicker();\n    const graph = graphController.getGraph();\n    const x = pointer.x;\n    const y = pointer.y;\n    //Move initial marker to node or pointer\n    const dst = picker.getNodeAt(graph, x, y) || pointer;\n    inputController.ghostInitialMarker = dst;\n    return true;\n  }\n\n  //Override\n  onDragStop(inputController, graphController, pointer, target)\n  {\n    const graph = graphController.getGraph();\n\n    //If valid initial object to mark...\n    if (inputController.ghostInitialMarker instanceof GraphNode)\n    {\n      const prevInitial = graph.getStartNode();\n\n      //Set the new object as the initial node\n      graph.setStartNode(inputController.ghostInitialMarker);\n      graphController.applyAutoRename();\n\n      //Emit event\n      graphController.onGraphIntentChangeInitial(inputController.ghostInitialMarker, prevInitial);\n      //graphController.emit(\"nodeInitial\", graph, inputController.ghostInitialMarker, prevInitial);\n    }\n\n    //Reset ghost initial marker\n    inputController.ghostInitialMarker = null;\n    return true;\n  }\n}\n\nexport default GraphInitialInputHandler;\n","import GraphElementInputHandler from './GraphElementInputHandler.js';\n\nclass GraphEdgeInputHandler extends GraphElementInputHandler\n{\n  constructor()\n  {\n    super(\"edge\");\n  }\n\n  //Override\n  onAction(inputController, graphController, pointer, target)\n  {\n    if (inputController.isTrashMode())\n    {\n      //Delete a single edge\n      graphController.deleteTargetEdge(target);\n    }\n    else\n    {\n      //Edit label for selected edge\n      graphController.openLabelEditor(target, target.getEdgeLabel());\n    }\n    return true;\n  }\n\n  //Override\n  onDragStart(inputController, graphController, pointer, target)\n  {\n    //Makes sure that placeholders are not quadratics!\n    if (target.isPlaceholder())\n    {\n      return false;\n    }\n\n    //Save previous quadratics\n    const targetQuad = target.getQuadratic();\n    graphController.prevQuad.radians = targetQuad.radians;\n    graphController.prevQuad.length = targetQuad.length;\n\n    //Ready to move the edge vertex to pointer...\n    return true;\n  }\n\n  //Override\n  onDragMove(inputController, graphController, pointer, target)\n  {\n    graphController.moveEdgeTo(pointer, target, pointer.x, pointer.y);\n    return true;\n  }\n\n  //Override\n  onDragStop(inputController, graphController, pointer, target)\n  {\n    const graph = graphController.getGraph();\n\n    //Delete it if withing trash area...\n    if (inputController.isTrashMode())\n    {\n      graphController.deleteTargetEdge(target);\n    }\n    else\n    {\n      //Do nothing, since should have moved to position\n      graphController.onGraphIntentMoveEdge(target, target.getQuadratic(), graphController.prevQuad);\n      //graphController.emit(\"edgeMove\", graph, target, target.getQuadratic(), graphController.prevQuad);\n    }\n    return true;\n  }\n}\n\nexport default GraphEdgeInputHandler;\n","import GraphElementInputHandler from './GraphElementInputHandler.js';\nimport GraphNode from 'graph/GraphNode.js';\n\nclass GraphEndpointInputHandler extends GraphElementInputHandler\n{\n  constructor()\n  {\n    super(\"endpoint\");\n  }\n\n  //Override\n  onAction(inputController, graphController, pointer, target)\n  {\n    if (inputController.isTrashMode())\n    {\n      //Delete a single edge\n      graphController.deleteTargetEdge(target);\n      return true;\n    }\n    return false;\n  }\n\n  //Override\n  onDragStart(inputController, graphController, pointer, target)\n  {\n    const targetQuad = target.getQuadratic();\n    graphController.prevQuad.radians = targetQuad.radians;\n    graphController.prevQuad.length = targetQuad.length;\n    graphController.prevEdgeTo = target.getDestinationNode();\n\n    inputController.isNewEdge = false;\n\n    //Ready to move the edge endpoint to pointer...\n    return true;\n  }\n\n  //Override\n  onDragMove(inputController, graphController, pointer, target)\n  {\n    graphController.moveEndpointTo(pointer, target, pointer.x, pointer.y);\n    return true;\n  }\n\n  //Override\n  onDragStop(inputController, graphController, pointer, target)\n  {\n    const graph = graphController.getGraph();\n    const x = pointer.x;\n    const y = pointer.y;\n\n    //Delete it if withing trash area...\n    if (inputController.isTrashMode())\n    {\n      graphController.deleteTargetEdge(target);\n      return true;\n    }\n    //If hovering over a node...\n    else if (target.getDestinationNode() instanceof GraphNode)\n    {\n      const result = graph.formatEdge(target);\n\n      //If a different edge is the result of the target...\n      if (result !== target)\n      {\n        //Allow the user to edit the merged labels\n        graphController.openLabelEditor(result, result.getEdgeLabel());\n\n        //Delete the merged label\n        graph.deleteEdge(target);\n        return true;\n      }\n      //Open label editor if a new edge...\n      else\n      {\n        if (inputController.isNewEdge)\n        {\n          graphController.openLabelEditor(result, \"\", (target, value) => graphController.onGraphIntentFinishEdge(target));\n        }\n        else\n        {\n          graphController.openLabelEditor(target, target.getEdgeLabel());\n        }\n      }\n\n      if (inputController.isNewEdge)\n      {\n        //Must be after openLabelEditor() to allow the function to check it...\n        inputController.isNewEdge = false;\n\n        //Emit event\n        graphController.onGraphIntentCreateEdge(target);\n      }\n      else if (graphController.prevEdgeTo !== null)\n      {\n        //Emit event\n        graphController.onGraphIntentChangeDestination(target, target.getDestinationNode(), graphController.prevEdgeTo, graphController.prevQuad);\n      }\n\n      return true;\n    }\n    //If hovering over anything else...\n    else\n    {\n      //Destroy any edge that no longer have a destination\n      if (inputController.shouldDestroyPointlessEdges)\n      {\n        if (!inputController.isNewEdge)\n        {\n          graphController.deleteTargetEdge(target);\n        }\n        else\n        {\n          graph.deleteEdge(target);\n        }\n        return true;\n      }\n      //Keep edges as placeholders (used in DFA's)\n      else\n      {\n        target.changeDestinationNode(null);\n\n        //Open label editor if default edge...\n        if (target.getEdgeLabel().length <= 0)\n        {\n          graphController.openLabelEditor(target, target.getEdgeLabel());\n        }\n        return true;\n      }\n    }\n  }\n}\n\nexport default GraphEndpointInputHandler;\n","import InputHandler from './InputHandler.js';\n\nclass GraphNodeCreateInputHandler extends InputHandler\n{\n  constructor()\n  {\n    super();\n  }\n\n  //Override\n  isTargetable(inputController, pointer, target, targetType)\n  {\n    return targetType === 'none';\n  }\n\n  //Override\n  onDblAction(inputController, graphController, pointer, target)\n  {\n    let x = pointer.x;\n    let y = pointer.y;\n\n    if (inputController._snapToGrid)\n    {\n      const snapSize = inputController._snapSize;\n      x = Math.round(x / snapSize) * snapSize;\n      y = Math.round(y / snapSize) * snapSize;\n    }\n\n    //Create node at position\n    const node = graphController.createNode(x, y);\n    //TODO: this allows nodes to move away from other nodes\n    //But undoManager does not recognize it.\n    //graphController.moveNodeTo(pointer, node, x, y);\n    return true;\n  }\n}\n\nexport default GraphNodeCreateInputHandler;\n","import AbstractInputController from 'modules/abstract/AbstractInputController.js';\n\n//import NodalGraphPicker from 'graph/picker/NodalGraphPicker.js';\nimport GraphNodeSelectionBox from 'graph/GraphNodeSelectionBox.js';\nimport GraphPicker from './GraphPicker.js';\n\nimport GraphNodeInputHandler from './inputhandler/GraphNodeInputHandler.js';\nimport GraphInitialInputHandler from './inputhandler/GraphInitialInputHandler.js';\n\nimport GraphEdgeInputHandler from './inputhandler/GraphEdgeInputHandler.js';\nimport GraphEndpointInputHandler from './inputhandler/GraphEndpointInputHandler.js';\nimport GraphNodeCreateInputHandler from './inputhandler/GraphNodeCreateInputHandler.js';\n\nconst DEFAULT_SHOULD_DESTROY_POINTLESS_EDGE = true;\n\nclass InputController extends AbstractInputController\n{\n  constructor(module, inputAdapter)\n  {\n    super(module, inputAdapter);\n\n    this._picker = null;\n    this._selectionBox = new GraphNodeSelectionBox();\n    this._graphController = null;\n\n    //Make sure this is always false when moving endpoints\n    this.isNewEdge = false;\n\n    //Used to change render to follow pointer when moving initial marker\n    this.ghostInitialMarker = null;\n\n    //Whether to destroy pointless edges\n    this.shouldDestroyPointlessEdges = DEFAULT_SHOULD_DESTROY_POINTLESS_EDGE;\n\n    //Swap left to right clicks and vice versa on anything else but Macs\n    this._swapMouseScheme = true;//!navigator.platform.startsWith(\"Mac\");\n\n    //Used to determine whether the target should be destroyed because of trash mode\n    this._trashMode = false;\n\n    this._disabled = false;\n\n    //TODO: this works, it's just not attached to anything\n    this._snapToGrid = false;\n    this._snapSize = 48;\n\n    this._inputHandlers = [\n      new GraphNodeInputHandler(),\n      new GraphEdgeInputHandler(),\n      new GraphEndpointInputHandler(),\n      new GraphInitialInputHandler(),\n      new GraphNodeCreateInputHandler()\n    ];\n  }\n\n  //Override\n  initialize(module)\n  {\n    super.initialize(module);\n\n    this._module = module;\n    this._graphController = module.getGraphController();\n    //this._picker = new NodalGraphPicker(this._graphController);\n    this._picker = new GraphPicker(this._graphController);\n  }\n\n  //Override\n  destroy(module)\n  {\n    super.destroy(module);\n  }\n\n  //Override\n  update(module)\n  {\n    super.update(module);\n\n    const graph = this._graphController.getGraph();\n    const picker = this._picker;\n\n    const x = this._inputAdapter.getPointerX();\n    const y = this._inputAdapter.getPointerY();\n    picker.updateHoverTarget(graph, x, y);\n  }\n\n  setDisabled(disabled)\n  {\n    this._disabled = disabled;\n  }\n\n  isDisabled()\n  {\n    return this._disabled;\n  }\n\n  //Override\n  onPreInputEvent(pointer)\n  {\n    if (this._disabled) return super.onPreInputEvent(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n\n    const graph = graphController.getGraph();\n    const picker = inputController.getPicker();\n    picker.updateInitialTarget(graph, pointer.x, pointer.y);\n\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    if (this._selectionBox.hasSelection())\n    {\n      //Unselect everything is clicked on something other than nodes...\n      if (targetType != \"node\" || !this._selectionBox.isTargetInSelection(target))\n      {\n        this._selectionBox.clearSelection();\n      }\n    }\n\n    //Override\n    return super.onPreInputEvent(pointer);\n  }\n\n  //Override\n  onInputEvent(pointer)\n  {\n    if (this._disabled) return super.onInputEvent(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n    const picker = inputController.getPicker();\n    picker.updateTarget(graphController.getGraph(), pointer.x, pointer.y);\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    for(const handler of this._inputHandlers)\n    {\n      if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onAction(inputController, graphController, pointer, target))\n      {\n        return true;\n      }\n    }\n\n    //Override\n    return super.onInputEvent(pointer);\n  }\n\n  //Override\n  onDblInputEvent(pointer)\n  {\n    if (this._disabled) return super.onDblInputEvent(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n    const picker = inputController.getPicker();\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    //Make sure it is not in trash mode\n    if (inputController.isTrashMode())\n    {\n      graphController.emit(\"tryCreateWhileTrash\");\n      return false;\n    }\n\n    for(const handler of this._inputHandlers)\n    {\n      if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onDblAction(inputController, graphController, pointer, target))\n      {\n        return true;\n      }\n    }\n\n    //Override\n    return super.onDblInputEvent(pointer);\n  }\n\n  //Override\n  onDragStart(pointer)\n  {\n    if (this._disabled) return super.onDragStart(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n    const picker = inputController.getPicker();\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    //Make sure it is not in new edge mode\n    inputController.isNewEdge = false;\n\n    //Make sure it is not in trash mode\n    if (inputController.isTrashMode())\n    {\n      graphController.emit(\"tryCreateWhileTrash\");\n      return false;\n    }\n\n    for(const handler of this._inputHandlers)\n    {\n      if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onDragStart(inputController, graphController, pointer, target))\n      {\n        return true;\n      }\n    }\n\n    //Override\n    return super.onDragStart(pointer);\n  }\n\n  //Override\n  onDragMove(pointer)\n  {\n    if (this._disabled) return super.onDragMove(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n    const picker = inputController.getPicker();\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    for(const handler of this._inputHandlers)\n    {\n      if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onDragMove(inputController, graphController, pointer, target))\n      {\n        return true;\n      }\n    }\n\n    //Override\n    return super.onDragMove(pointer);\n  }\n\n  //Override\n  onDragStop(pointer)\n  {\n    if (this._disabled) return super.onDragStop(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n    const picker = inputController.getPicker();\n    picker.updateTarget(graphController.getGraph(), pointer.x, pointer.y);\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    for(const handler of this._inputHandlers)\n    {\n      if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onDragStop(inputController, graphController, pointer, target))\n      {\n        return true;\n      }\n    }\n\n    //Override\n    return super.onDragStop(pointer);\n  }\n\n  //Override\n  onPostInputEvent(pointer)\n  {\n    if (this._disabled) return super.onPostInputEvent(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n    const graph = graphController.getGraph();\n    const picker = inputController.getPicker();\n\n    picker.clearTarget();\n    picker.updateTarget(graph, pointer.x, pointer.y);\n\n    //Override\n    super.onPostInputEvent(pointer);\n  }\n\n  setTrashMode(enabled)\n  {\n    this._trashMode = enabled;\n    if (enabled)\n    {\n      this._module.getApp()._drawer.setViewportColor(\"var(--color-viewport-error)\");\n    }\n    else\n    {\n      this._module.getApp()._drawer.setViewportColor(null);\n    }\n  }\n\n  isTrashMode()\n  {\n    return this._trashMode;\n  }\n\n  setInputScheme(shouldInputFirst)\n  {\n    this._swapMouseScheme = !shouldInputFirst;\n  }\n\n  getInputScheme()\n  {\n    return this._swapMouseScheme;\n  }\n\n  isMoveMode()\n  {\n    const result = this._inputAdapter.isAltInput();\n    return this._swapMouseScheme ? !result : result;\n  }\n\n  isDragging()\n  {\n    return this._inputAdapter.isDragging();\n  }\n\n  isActionMode()\n  {\n    return this._inputAdapter.isPointerActive() ?\n      //Is considered an input when NOT moving or when creating a new edge...\n      this.isNewEdge || !this.isMoveMode() :\n      //If not active, just show default input...\n      !this._swapMouseScheme;\n  }\n\n  getPicker()\n  {\n    return this._picker;\n  }\n\n  getSelectionBox()\n  {\n    return this._selectionBox;\n  }\n}\n\nexport default InputController;\n","import AbstractGraphController from 'modules/abstract/AbstractGraphController.js';\n\nimport Eventable from 'util/Eventable.js';\nimport GraphEdge from 'graph/GraphEdge.js';\nimport GraphLayout from 'modules/fsa/graph/GraphLayout.js';\n\nimport GraphChangeHandler from 'experimental/GraphChangeHandler.js';\n\nconst NODE_SPAWN_RADIUS = 64;\nconst DEFAULT_AUTO_RENAME = true;\nconst GRAPH_REFRESH_RATE = 30;\nconst DELETE_ON_EMPTY = true;\n\nclass GraphController extends AbstractGraphController\n{\n  constructor(module, graph, labeler, parser)\n  {\n    super(module, graph, labeler, parser);\n\n    this.inputController = null;\n    this._graphChangeHandler = new GraphChangeHandler(GRAPH_REFRESH_RATE);\n\n    this.getGraphLabeler().setGraphController(this);\n\n    this.labelEditorElement = null;\n\n    this.prevQuad = {\n      radians: 0, length: 0,\n      x: 0, y: 0\n    };\n    this.prevEdgeTo = null;\n    this.prevX = 0;\n    this.prevY = 0;\n\n    this.shouldAutoLabel = DEFAULT_AUTO_RENAME;\n\n    //The difference between controller events vs graph events is: controller has user-intent\n\n    //tryCreateWhileTrash()\n    this.registerEvent(\"tryCreateWhileTrash\");\n  }\n\n  //Override\n  initialize(module)\n  {\n    super.initialize(module);\n\n    this._module = module;\n    this.inputController = module.getInputController();\n  }\n\n  //Override\n  destroy(module)\n  {\n    super.destroy(module);\n  }\n\n  //Override\n  update(module)\n  {\n    super.update(module);\n\n    this._graphChangeHandler.update(this._graph);\n  }\n\n  getGraphChangeHandler()\n  {\n    return this._graphChangeHandler;\n  }\n\n  applyAutoLayout()\n  {\n    GraphLayout.applyLayout(this.getGraph());\n\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  applyAutoRename()\n  {\n    const graphLabeler = this._labeler;\n    const graph = this._graph;\n\n    if (graph.isEmpty()) return;\n\n    //Reset all default labels...\n    for(const node of graph.getNodes())\n    {\n      if (!node.getNodeCustom()) node.setNodeLabel(\"\");\n    }\n\n    //Rename all default labels appropriately...\n    for(const node of graph.getNodes())\n    {\n      if (!node.getNodeCustom())\n      {\n        node.setNodeLabel(graphLabeler.getDefaultNodeLabel());\n      }\n    }\n  }\n\n  onGraphIntentImport()\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentCreateEdge(edge)\n  {\n  }\n\n  onGraphIntentFinishEdge(edge)\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentMoveEdge(edge, nextQuad, prevQuad)\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentChangeDestination(edge, destinationNode, prevDestination, prevQuad)\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentChangeInitial(nextInitial, prevInitial)\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentMoveNode(node, nextX, nextY, prevX, prevY)\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentMoveAllNodes(nodes, dx, dy)\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentDeleteNodes(node, targetNodes, prevX, prevY)\n  {\n    if (this.shouldAutoLabel)\n    {\n      this.applyAutoRename();\n    }\n  }\n\n  setAutoRenameNodes(enable)\n  {\n    const prev = this.shouldAutoLabel;\n    this.shouldAutoLabel = enable;\n    if (enable && !prev)\n    {\n      this.applyAutoRename();\n    }\n  }\n\n  shouldAutoRenameNodes()\n  {\n    return this.shouldAutoLabel;\n  }\n\n  renameNode(node, name)\n  {\n    const prev = node.getNodeLabel();\n    const isPrevCustom = node.getNodeCustom();\n\n    node.setNodeLabel(name);\n    node.setNodeCustom(true);\n\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  createNode(x, y)\n  {\n    if (typeof x === 'undefined') x = (Math.random() * NODE_SPAWN_RADIUS * 2) - NODE_SPAWN_RADIUS;\n    if (typeof y === 'undefined') y = (Math.random() * NODE_SPAWN_RADIUS * 2) - NODE_SPAWN_RADIUS;\n\n    const node = this.getGraph().createNode(x, y);\n\n    const newNodeLabel = this.getGraphLabeler().getDefaultNodeLabel();\n    node.setNodeLabel(newNodeLabel);\n\n    this.getModule().getApp().getUndoManager().captureEvent();\n    return node;\n  }\n\n  toggleNode(node)\n  {\n    const prev = node.getNodeAccept();\n    const result = !prev;\n    //Toggle accept for selected node\n    node.setNodeAccept(result);\n\n    //Emit event\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  deleteSelectedNodes(selectedNode)\n  {\n    const selectionBox = this.inputController.getSelectionBox();\n    const selection = selectionBox.getSelection(this.getGraph()).slice();\n\n    //Remove from graph\n    for(const node of selection)\n    {\n      this.getGraph().deleteNode(node);\n    }\n\n    //Remove from selection\n    selectionBox.clearSelection();\n\n    //Emit event\n    this.onGraphIntentDeleteNodes(selectedNode, selection, this.prevX, this.prevY);\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  deleteTargetNode(target)\n  {\n    this.getGraph().deleteNode(target);\n\n    //Emit event\n    this.onGraphIntentDeleteNodes(target, [target], this.prevX, this.prevY);\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  deleteTargetNodes(targets)\n  {\n    if (!targets || targets.length <= 0) return;\n\n    const graph = this.getGraph();\n    for(const node of targets)\n    {\n      graph.deleteNode(node);\n    }\n\n    //Emit event\n    this.onGraphIntentDeleteNodes(targets[0], targets, this.prevX, this.prevY);\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  deleteTargetEdge(target)\n  {\n    this.getGraph().deleteEdge(target);\n\n    //Emit event\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  deleteTargetEdges(targets)\n  {\n    if (!targets || targets.length <= 0) return;\n\n    for(const target of targets)\n    {\n      this.deleteTargetEdge(target);\n    }\n  }\n\n  moveNodeTo(pointer, node, x, y)\n  {\n    const nodeSize = node.getNodeSize();\n    for(const other of this.getGraph().getNodes())\n    {\n      //Update node collision\n      if (node === other) continue;\n\n      const dx = x - other.x;\n      const dy = y - other.y;\n      const angle = Math.atan2(dy, dx);\n\n      const diameter = (nodeSize * 2);\n      const nextDX = other.x + (Math.cos(angle) * diameter) - x;\n      const nextDY = other.y + (Math.sin(angle) * diameter) - y;\n\n      if (dx * dx + dy * dy < nodeSize * nodeSize * 4)\n      {\n        x += nextDX;\n        y += nextDY;\n      }\n    }\n\n    node.x = x;\n    node.y = y;\n  }\n\n  moveMultipleNodesTo(pointer, nodes, x, y)\n  {\n    //Moves all nodes by difference between initial position with passed-in x and y\n    const pos = pointer.getInputEventPosition();\n    const dx = x - pos.x;\n    const dy = y - pos.y;\n    for(const node of nodes)\n    {\n      node.x += dx;\n      node.y += dy;\n    }\n\n    //Updates initial position to passed-in x and y to maintain relative position\n    pointer.changeInputEventPosition(x, y);\n  }\n\n  moveEdgeTo(pointer, edge, x, y)\n  {\n    edge.setQuadraticByCoords(x, y);\n  }\n\n  moveEndpointTo(pointer, edge, x, y)\n  {\n    //Get ONLY node at x and y (cannot use hover target, since it is not ONLY nodes)\n    const picker = this.inputController.getPicker();\n    const dst = picker.getNodeAt(this.getGraph(), x, y) || pointer;\n\n    edge.changeDestinationNode(dst);\n\n    //If the cursor returns to the state after leaving it...\n    if (edge.isSelfLoop())\n    {\n      //Make it a self loop\n      const sourceNode = edge.getSourceNode();\n      const dx = sourceNode.x - x;\n      const dy = sourceNode.y - y;\n      const radians = Math.atan2(dy, dx) + Math.PI;\n      edge.setQuadratic(radians);\n    }\n    //Otherwise, maintain original curve\n    else\n    {\n      //TODO: This also causes self-loops to act weird when no longer a self loop\n      edge.setQuadratic(this.prevQuad.radians, this.prevQuad.length);\n    }\n  }\n\n  openLabelEditor(target, defaultValue=null, callback=null)\n  {\n    const labelEditor = this.getModule().getInputManager().getLabelEditorManager().getLabelEditorComponent();\n    const prevLabel = defaultValue;\n    labelEditor.openEditor(target, defaultValue, (target, value) => {\n      if (DELETE_ON_EMPTY && (!value || value.length <= 0) && target instanceof GraphEdge)\n      {\n        //Assumes target is GraphEdge\n        this._graph.deleteEdge(target);\n      }\n      else\n      {\n        if (target instanceof GraphEdge)\n        {\n          target.setEdgeLabel(value);\n        }\n        else\n        {\n          target.setNodeLabel(value);\n        }\n\n        if (!prevLabel || (prevLabel.length > 0 && value !== prevLabel))\n        {\n          this.getModule().getApp().getUndoManager().captureEvent();\n        }\n        if (callback) callback(target, value);\n      }\n    }, (target) => {\n      if (DELETE_ON_EMPTY && (!prevLabel || prevLabel.length <= 0) && target instanceof GraphEdge)\n      {\n        //Assumes target is GraphEdge\n        this._graph.deleteEdge(target);\n      }\n    });\n  }\n\n  focusOnNode(node)\n  {\n    //Center workspace at focused node; inverted due to graph-to-screen space\n    this.inputController.getInputAdapter().getViewport().setOffset(-node.x, -node.y);\n  }\n\n  focusOnEdge(edge)\n  {\n    //Center workspace at focused edge; inverted due to graph-to-screen space\n    const center = edge.getCenterPoint();\n    this.inputController.getInputAdapter().getViewport().setOffset(-center.x, -center.y);\n  }\n\n  focusOnNodes(nodes)\n  {\n    //Center workspace at the average of focused nodes; inverted due to graph-to-screen space\n    const length = nodes.length;\n    let ax = 0;\n    let ay = 0;\n    for(const node of nodes)\n    {\n      ax += node.x;\n      ay += node.y;\n    }\n    this.inputController.getInputAdapter().getViewport().setOffset(-ax / length, -ay / length);\n  }\n}\n//Mixin Eventable\nEventable.mixin(GraphController);\n\nexport default GraphController;\n","import AbstractInputHandler from 'input/AbstractInputHandler.js';\n\nclass SelectionBoxInputHandler extends AbstractInputHandler\n{\n  constructor(inputController, graphController, selectionBox)\n  {\n    super();\n\n    this._inputController = inputController;\n    this._graphController = graphController;\n    this._selectionBox = selectionBox;\n  }\n\n  //Override\n  onDragStart(pointer)\n  {\n    if (!this._inputController.isMoveMode())\n    {\n      //Begin selection box...\n      this._selectionBox.beginSelection(this._graphController.getGraph(), pointer.x, pointer.y);\n      return true;\n    }\n\n    return false;\n  }\n\n  //Override\n  onDragMove(pointer)\n  {\n    //If the selection box is active...\n    if (this._selectionBox.isSelecting())\n    {\n      //Update the selection box\n      this._selectionBox.updateSelection(this._graphController.getGraph(), pointer.x, pointer.y);\n      return true;\n    }\n\n    return false;\n  }\n\n  //Override\n  onDragStop(pointer)\n  {\n    //If was trying to select...\n    if (this._selectionBox.isSelecting())\n    {\n      //Stop selecting stuff, fool.\n      this._selectionBox.endSelection(this._graphController.getGraph(), pointer.x, pointer.y);\n      return true;\n    }\n\n    return false;\n  }\n}\n\nexport default SelectionBoxInputHandler;\n","import AbstractInputHandler from 'input/AbstractInputHandler.js';\n\nclass ViewportInputHandler extends AbstractInputHandler\n{\n  constructor()\n  {\n    super();\n\n    this._prevX = 0;\n    this._prevY = 0;\n  }\n\n  //Override\n  onDragStart(pointer)\n  {\n    this._prevX = pointer.x;\n    this._prevY = pointer.y;\n    return true;\n  }\n\n  //Override\n  onDragMove(pointer)\n  {\n    const dx = pointer.x - this._prevX;\n    const dy = pointer.y - this._prevY;\n    const adapter = pointer.getAdapter();\n    const viewport = adapter.getViewport();\n    viewport.addOffset(dx, dy, true);\n    return true;\n  }\n\n  //Override\n  onDragStop(pointer)\n  {\n    //Do nothing. It should already be moved.\n    return true;\n  }\n}\n\nexport default ViewportInputHandler;\n","import React from 'react';\n\nexport const SUBMIT_DELAY = 30;\nexport const SUBMIT_KEY = \"Enter\";\nexport const CANCEL_KEY = \"Escape\";\n\nclass PatternInput extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.inputElement = null;\n\n    this.placeholder = \"\";\n    this.maxLength = 524288;/*This is the default value*/\n    this.multiLine = true;\n    this.formatter = null;\n\n    this._submitTimeout = null;\n    this._submit = props.submitOnBlur;\n    this._skipBlur = false;\n    this._skipSelect = false;\n\n    this.state = {\n      prevValue: \"\",\n      value: \"\"\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n  }\n\n  setFormatter(formatter)\n  {\n    this.formatter = formatter;\n    return this;\n  }\n\n  onFocus(e)\n  {\n    if (this._skipSelect)\n    {\n      this.inputElement.select();\n      this._skipSelect = false;\n    }\n  }\n\n  onBlur(e)\n  {\n    if (!this._submitTimeout)\n    {\n      this._submitTimeout = setTimeout(() => {\n        this._submitTimeout = null;\n        if (this._skipBlur) return;\n\n        const submit = this._submit;\n        this._submit = this.props.submitOnBlur;\n        if (document.activeElement !== this.inputElement && submit)\n        {\n          const value = this.state.value;\n          if (this.props.onSubmit) this.props.onSubmit(value);\n\n          this.setState({prevValue: value});\n        }\n        else\n        {\n          this.setState((prev, props) => {\n            return {value: prev.prevValue};\n          });\n        }\n\n        if (this.props.onBlur) this.props.onBlur(e);\n      }, SUBMIT_DELAY);\n    }\n  }\n\n  onKeyDown(e)\n  {\n    if (e.key === SUBMIT_KEY)\n    {\n      if (e.shiftKey && this.multiLine) return;\n\n      this._submit = true;\n      this.inputElement.blur();\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    else if (e.key === CANCEL_KEY)\n    {\n      this.setState((prev, props) => {\n        return {value: prev.prevValue};\n      }, () => {\n        this._submit = false;\n        this.inputElement.blur();\n      });\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  onChange(e)\n  {\n    let value = e.target.value;\n    if (this.formatter)\n    {\n      value = this.formatter(value);\n    }\n\n    this.setState({value: value});\n  }\n\n  focus(select=true)\n  {\n    this._skipSelect = select;\n    this.inputElement.focus();\n  }\n\n  ignoreBlur(ignore)\n  {\n    const prev = this._skipBlur;\n    this._skipBlur = ignore;\n    return prev !== ignore;\n  }\n\n  appendValue(string, separator=\"\", format=true)\n  {\n    const value = this.state.value;\n    if (value && value.length + string.length > this.maxLength) return;\n\n    let result;\n    if (value && value.length > 0)\n    {\n      result = value + separator + string;\n    }\n    else\n    {\n      result = string;\n    }\n\n    if (format && this.formatter)\n    {\n      result = this.formatter(result);\n    }\n\n    this.setState((prev, props) => {\n      return {value: result};\n    });\n  }\n\n  resetValue(string)\n  {\n    this.setState({prevValue: string, value: string});\n  }\n\n  setValue(string, format=true)\n  {\n    let value = string;\n    if (format && this.formatter)\n    {\n      value = this.formatter(value);\n    }\n    this.setState({value: value});\n  }\n\n  getValue()\n  {\n    return this.state.value;\n  }\n\n  //Override\n  render()\n  {\n    const placeholder = this.placeholder;\n    const maxlength = this.maxLength;\n    const multiline = this.multiLine;\n    const disabled = this.props.disabled;\n\n    const value = this.state.value;\n\n    return (\n      <div id={this.props.id}\n        className={this.props.className}\n        style={this.props.style}>\n        {\n          multiline ?\n          <textarea ref={ref=>this.inputElement=ref}\n            type=\"text\" rows=\"1\" spellCheck=\"false\"\n            disabled={disabled}\n            placeholder={placeholder}\n            maxLength={maxlength}\n            value={value}\n            onChange={this.onChange}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            onKeyDown={this.onKeyDown}/>\n          :\n          <input ref={ref=>this.inputElement=ref}\n            type=\"text\" spellCheck=\"false\"\n            disabled={disabled}\n            placeholder={placeholder}\n            maxLength={maxlength}\n            value={value}\n            onChange={this.onChange}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            onKeyDown={this.onKeyDown}/>\n        }\n      </div>\n    );\n  }\n}\n\nexport default PatternInput;\n","import React from 'react';\nimport Style from './LabelEditorView.css';\n\nimport GraphElement from 'graph/GraphElement.js';\n\nimport PatternInput from 'system/patterninput/PatternInput.js';\n\nclass LabelEditorView extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.ref = null;\n    this.inputComponent = null;\n\n    this.state = {\n      open: false\n    };\n\n    this._target = null;\n    this._targetCallback = null;\n\n    this.onInputSubmit = this.onInputSubmit.bind(this);\n    this.onInputBlur = this.onInputBlur.bind(this);\n  }\n\n  openEditor(graphElement, defaultValue=null, onSubmit=null, onCancel=null)\n  {\n    if (!(graphElement instanceof GraphElement)) throw new Error(\"Can only open editor for GraphElements\");\n\n    this._target = graphElement;\n    this._targetOnSubmit = onSubmit;\n    this._targetOnCancel = onCancel;\n\n    const formatter = this.props.labeler.getLabelFormatter(this._target);\n    this.inputComponent.setFormatter(formatter);\n\n    this.setState({open: true}, () => {\n      if (defaultValue !== null)\n      {\n        this.inputComponent.resetValue(defaultValue);\n      }\n      this.inputComponent.focus();\n    });\n  }\n\n  closeEditor()\n  {\n    this._target = null;\n    this._targetOnSubmit = null;\n    this._targetOnCancel = null;\n\n    this.inputComponent.setFormatter(null);\n\n    this.setState({open: false});\n  }\n\n  isEditorOpen()\n  {\n    return this.state.open;\n  }\n\n  getTarget()\n  {\n    return this._target;\n  }\n\n  onInputSubmit(value)\n  {\n    if (this._targetOnSubmit)\n    {\n      this._targetOnSubmit(this._target, value);\n      //Don't handle cancel callbacks...\n      this._targetOnCancel = null;\n    }\n  }\n\n  onInputBlur(e)\n  {\n    if (this._targetOnCancel)\n    {\n      this._targetOnCancel(this._target);\n      //Don't handle submit callbacks...\n      this._targetOnSubmit = null;\n    }\n    this.closeEditor();\n  }\n\n  //Override\n  render()\n  {\n    const isEditorOpen = this.state.open;\n\n    const target = this._target;\n    const targetStyle = this.props.style || {};\n    const viewport = this.props.viewport;\n    const labeler = this.props.labeler;\n\n    if (target)\n    {\n      const center = target.getCenterPoint();\n      const element = viewport.getElement();\n      const parentClientRect = element.getBoundingClientRect();\n      const screenPos = transformViewToScreen(\n        element,\n        center.x + viewport.getOffsetX(),\n        center.y + viewport.getOffsetY()\n      );\n      const x = screenPos.x;\n      const y = screenPos.y;\n      const offsetX = -(this.ref.offsetWidth / 2) - parentClientRect.left;\n      const offsetY = -(this.ref.offsetHeight / 2) - parentClientRect.top;\n\n      targetStyle['top'] = (y + offsetY) + \"px\";\n      targetStyle['left'] = (x + offsetX) + \"px\";\n    }\n\n    return (\n      <div ref={ref=>this.ref=ref}\n        id={this.props.id}\n        className={Style.editor_container +\n          (isEditorOpen ? \" open \" : \"\") +\n          \" \" + this.props.className}\n        style={targetStyle}>\n        <PatternInput ref={ref=>this.inputComponent=ref}\n          submitOnBlur={this.props.saveOnExit}\n          onSubmit={this.onInputSubmit}\n          onBlur={this.onInputBlur}/>\n        <div className={Style.tray_container}>\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction transformViewToScreen(svg, x, y)\n{\n  const ctm = svg.getScreenCTM();\n  return {\n    x: (x * ctm.a) + ctm.e,\n    y: (y * ctm.d) + ctm.f\n  };\n}\n\nexport default LabelEditorView;\n","import React from 'react';\n\nimport LabelEditorView from './LabelEditorView.js';\nimport {RENDER_LAYER_WORKSPACE_OVERLAY} from 'manager/RenderManager.js';\n\nclass LabelEditorManager\n{\n  constructor(app)\n  {\n    this._app = app;\n\n    this._labelEditorComponent = null;\n    this._labelEditorRenderer = null;\n    this._labeler = null;\n  }\n\n  setLabelEditorRenderer(renderer)\n  {\n    this._labelEditorRenderer = renderer;\n    return this;\n  }\n\n  setLabeler(labeler)\n  {\n    this._labeler = labeler;\n    return this;\n  }\n\n  //DuckType(SessionListener)\n  onSessionStart(session)\n  {\n    const currentModule = session.getCurrentModule();\n    const viewport = session.getApp().getInputAdapter().getViewport();\n\n    const LabelEditorRenderer = this._labelEditorRenderer;\n    const labeler = this._labeler;\n    session.getApp().getRenderManager().addRenderer(RENDER_LAYER_WORKSPACE_OVERLAY, props => (\n      <LabelEditorView ref={ref=>this._labelEditorComponent=ref}\n        labeler={labeler}\n        viewport={viewport}\n        saveOnExit={true}>\n        {/* LabelEditor objects */\n          LabelEditorRenderer &&\n          <LabelEditorRenderer currentModule={currentModule} parent={this._labelEditorComponent}/>}\n      </LabelEditorView>\n    ));\n  }\n\n  //DuckType(SessionListener)\n  onSessionStop(session)\n  {\n    this._labeler = null;\n    this._labelEditorRenderer = null;\n    this._labelEditorComponent = null;\n  }\n\n  getLabelEditorComponent()\n  {\n    return this._labelEditorComponent;\n  }\n}\n\nexport default LabelEditorManager;\n","import InputController from 'modules/nodalgraph/controller/InputController.js';\nimport GraphController from 'modules/nodalgraph/controller/GraphController.js';\n\nimport SelectionBoxInputHandler from 'modules/nodalgraph/controller/SelectionBoxInputHandler.js';\nimport ViewportInputHandler from 'modules/nodalgraph/controller/ViewportInputHandler.js';\n\nimport LabelEditorManager from 'manager/labeleditor/LabelEditorManager.js';\n\nimport Notifications from 'system/notification/Notifications.js';\n\nclass NodalGraphInputManager\n{\n  constructor(currentModule, nodalGraph, graphLabeler, graphParser, labelEditorRenderer)\n  {\n    this._inputController = new InputController(currentModule, currentModule.getApp().getInputAdapter());\n    this._graphController = new GraphController(currentModule, nodalGraph, graphLabeler, graphParser);\n\n    this._labelEditorManager = new LabelEditorManager()\n      .setLabelEditorRenderer(labelEditorRenderer)\n      .setLabeler(graphLabeler);\n\n    this._selectionBoxInputHandler = new SelectionBoxInputHandler(this._inputController, this._graphController, this._inputController.getSelectionBox());\n    this._viewportInputHandler = new ViewportInputHandler();\n  }\n\n  //Not yet implemented\n  setGraphLabeler(labeler)\n  {\n    this._graphLabeler = labeler;\n    return this;\n  }\n\n  //Not yet implemented\n  setGraphParser(parser)\n  {\n    this._graphParser = parser;\n    return this;\n  }\n\n  update(currentModule)\n  {\n    const inputController = this.getInputController();\n    const graphController = this.getGraphController();\n    inputController.update(currentModule);\n    graphController.update(currentModule);\n  }\n\n  //DuckType(SessionListener)\n  onSessionStart(session)\n  {\n    const currentModule = session.getCurrentModule();\n\n    currentModule.getApp().getInputAdapter()\n      .addInputHandler(this._inputController)\n      .addInputHandler(this._selectionBoxInputHandler)\n      .addInputHandler(this._viewportInputHandler);\n\n    const inputController = this.getInputController();\n    const graphController = this.getGraphController();\n    inputController.initialize(currentModule);\n    graphController.initialize(currentModule);\n\n    this._labelEditorManager.onSessionStart(session);\n\n    //Notify on create in delete mode\n    const tryCreateWhileTrash = () => {\n      if (this._inputController.isTrashMode())\n      {\n        Notifications.addMessage(I18N.toString(\"message.warning.cannotmodify\"), \"warning\", \"tryCreateWhileTrash\");\n      }\n    };\n    this._graphController.on(\"tryCreateWhileTrash\", tryCreateWhileTrash);\n  }\n\n  //DuckType(SessionListener)\n  onSessionStop(session)\n  {\n    session.getApp().getInputAdapter()\n      .removeInputHandler(this._inputController)\n      .removeInputHandler(this._selectionBoxInputHandler)\n      .removeInputHandler(this._viewportInputHandler);\n\n\n    this._labelEditorManager.onSessionStop(session);\n\n    const currentModule = session.getCurrentModule();\n    const inputController = this.getInputController();\n    const graphController = this.getGraphController();\n    graphController.destroy(currentModule);\n    inputController.destroy(currentModule);\n  }\n\n  getLabelEditorManager() { return this._labelEditorManager; }\n  getGraphParser() { return this._graphController.getGraphParser(); }\n  getGraphLabeler() { return this._graphController.getGraphLabeler(); }\n  getGraphController() { return this._graphController; }\n  getInputController() { return this._inputController; }\n}\n\nexport default NodalGraphInputManager;\n","import React from 'react';\n\nclass BoxRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const visible = this.props.visible;\n    const fromX = this.props.fromX || 0;\n    const fromY = this.props.fromY || 0;\n    const toX = this.props.toX || fromX + 1;\n    const toY = this.props.toY || fromY + 1;\n\n    const dx = toX - fromX;\n    const dy = toY - fromY;\n\n    return (\n      <g className=\"graph-selection-container\">\n      { visible &&\n        <rect className=\"graph-selection\"\n          x={dx < 0 ? toX : fromX}\n          y={dy < 0 ? toY : fromY}\n          width={dx < 0 ? -dx : dx}\n          height={dy < 0 ? -dy : dy}/> }\n      </g>\n    );\n  }\n}\n\nexport default BoxRenderer;\n","import React from 'react';\n\nconst CURSOR_RADIUS = 4;\nconst NODE_RADIUS = 16;\nconst EDGE_RADIUS = 12;\nconst ENDPOINT_RADIUS = 6;\nconst INITIAL_MARKER_OFFSET_X = -(NODE_RADIUS + (NODE_RADIUS / 2));\n\nconst HIGHLIGHT_RADIUS_OFFSET = 4;\nconst HIGHLIGHT_LINE_WIDTH = 3;\nconst HIGHLIGHT_LINE_ARRAY = [8, 6];\n\nclass HighlightRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const target = this.props.target;\n    const type = this.props.type;\n\n    let x = 0;\n    let y = 0;\n    let r = CURSOR_RADIUS;\n    switch(type)\n    {\n      case \"node\":\n        x = target.x || 0;\n        y = target.y || 0;\n        r = NODE_RADIUS;\n        break;\n      case \"edge\":\n        const center = target.getCenterPoint();\n        x = center.x || 0;\n        y = center.y || 0;\n        r = EDGE_RADIUS;\n        break;\n      case \"endpoint\":\n        const endpoint = target.getEndPoint();\n        x = endpoint.x || 0;\n        y = endpoint.y || 0;\n        r = ENDPOINT_RADIUS;\n        break;\n      case \"initial\":\n        x = target.x + INITIAL_MARKER_OFFSET_X;\n        y = target.y || 0;\n        r = EDGE_RADIUS;\n        break;\n    }\n\n    return (\n      <g className=\"graph-highlight-container\">\n        <circle className={\"graph-highlight \" + this.props.className}\n          cx={x} cy={y}\n          r={r + HIGHLIGHT_RADIUS_OFFSET}\n          strokeDashoffset={this.props.offset || 0}\n          strokeDasharray={HIGHLIGHT_LINE_ARRAY}\n          strokeWidth={HIGHLIGHT_LINE_WIDTH}\n          fill=\"none\"/>\n      </g>\n    );\n  }\n}\n\nexport default HighlightRenderer;\n","import React from 'react';\n\nimport BoxRenderer from './BoxRenderer.js';\nimport HighlightRenderer from './HighlightRenderer.js';\n\nclass SelectionBoxRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const currentModule = this.props.currentModule;\n\n    const graphController = currentModule.getGraphController();\n    const inputController = currentModule.getInputController();\n\n    const graph = graphController.getGraph();\n    const selectionBox = inputController.getSelectionBox();\n    const selectionBoundingBox = selectionBox.getSelectionBox();\n\n    return (\n      <g>\n        {/* Selected elements */}\n        { selectionBox &&\n          selectionBox.hasSelection() &&\n          selectionBox.getSelection(graph).map((e, i) =>\n            <HighlightRenderer key={e.getGraphElementID()}\n              className={inputController.isTrashMode() ?\n                \"highlight-error\" :\n                \"highlight-select\"}\n              target={e} type=\"node\"/>) }\n\n        {/* Selection box */}\n        { selectionBoundingBox &&\n          <BoxRenderer visible={selectionBoundingBox.visible}\n            fromX={selectionBoundingBox.fromX} fromY={selectionBoundingBox.fromY}\n            toX={selectionBoundingBox.toX} toY={selectionBoundingBox.toY}/> }\n      </g>\n    );\n  }\n}\n\nexport default SelectionBoxRenderer;\n","import React from 'react';\n\nimport SelectionBoxRenderer from './SelectionBoxRenderer.js';\nimport HighlightRenderer from './HighlightRenderer.js';\n\nclass GraphInputRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    //Inherits props from parent\n    const currentModule = this.props.currentModule;\n\n    const inputController = currentModule.getInputController();\n\n    const viewport = inputController.getInputAdapter().getViewport();\n    const picker = inputController.getPicker();\n    const selectionBox = inputController.getSelectionBox();\n\n    return (\n      <g>\n        <SelectionBoxRenderer currentModule={currentModule}/>\n\n        {/* Node test targets */}\n        { currentModule._tester &&\n          currentModule._tester.targets &&\n          currentModule._tester.targets.map((e, i) => {\n            return <HighlightRenderer key={e.getGraphElementID()}\n              className=\"highlight-test graph-gui\"\n              target={e} type=\"node\" offset=\"6\"/>;\n          })}\n\n        {/* Hover markers */}\n        { picker &&\n          picker.hasTarget() &&\n          !selectionBox.isTargetInSelection(picker.target) &&\n          <HighlightRenderer className={inputController.isTrashMode() ?\n            \"highlight-error\" :\n            \"highlight-select\"}\n            target={picker.target}\n            type={picker.targetType}/> }\n      </g>\n    );\n  }\n}\n\nexport default GraphInputRenderer;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M13,6V11H18V7.75L22.25,12L18,16.25V13H13V18H16.25L12,22.25L7.75,18H11V13H6V16.25L1.75,12L6,7.75V11H11V6H7.75L12,1.75L16.25,6H13Z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './ModeSelectTray.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport EditPencilIcon from 'experimental/iconset/EditPencilIcon.js';\nimport MoveIcon from 'experimental/iconset/MoveIcon.js';\n\nclass ModeSelectTray extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(newValue)\n  {\n    if (this.props.onChange)\n    {\n      this.props.onChange(newValue);\n    }\n  }\n\n  //Override\n  render()\n  {\n    const mode = this.props.mode || 0;\n    const onChange = this.props.onChange;\n\n    return (\n      <div id={this.props.id}\n        className={Style.tray_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <IconButton className={Style.tray_button +\n          (mode === 0 ? \" active \" : \"\")}\n          onClick={() => this.onChange(0)}\n          title={I18N.toString(\"cursor.actionmode\")}>\n          <EditPencilIcon/>\n        </IconButton>\n        <IconButton className={Style.tray_button +\n          (mode === 1 ? \" active \" : \"\")}\n          onClick={() => this.onChange(1)}\n          title={I18N.toString(\"cursor.movemode\")}>\n          <MoveIcon/>\n        </IconButton>\n      </div>\n    );\n  }\n}\nexport default ModeSelectTray;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 26 26\">\n        <path d=\"M 11.5 -0.03125 C 9.542969 -0.03125 7.96875 1.59375 7.96875 3.5625 L 7.96875 4 L 4 4 C 3.449219 4 3 4.449219 3 5 L 3 6 L 2 6 L 2 8 L 4 8 L 4 23 C 4 24.644531 5.355469 26 7 26 L 19 26 C 20.644531 26 22 24.644531 22 23 L 22 8 L 24 8 L 24 6 L 23 6 L 23 5 C 23 4.449219 22.550781 4 22 4 L 18.03125 4 L 18.03125 3.5625 C 18.03125 1.59375 16.457031 -0.03125 14.5 -0.03125 Z M 11.5 2.03125 L 14.5 2.03125 C 15.304688 2.03125 15.96875 2.6875 15.96875 3.5625 L 15.96875 4 L 10.03125 4 L 10.03125 3.5625 C 10.03125 2.6875 10.695313 2.03125 11.5 2.03125 Z M 6 8 L 11.125 8 C 11.25 8.011719 11.371094 8.03125 11.5 8.03125 L 14.5 8.03125 C 14.628906 8.03125 14.75 8.011719 14.875 8 L 20 8 L 20 23 C 20 23.5625 19.5625 24 19 24 L 7 24 C 6.4375 24 6 23.5625 6 23 Z M 8 10 L 8 22 L 10 22 L 10 10 Z M 12 10 L 12 22 L 14 22 L 14 10 Z M 16 10 L 16 22 L 18 22 L 18 10 Z \"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './TrashCanWidget.css';\n\nimport { userClearGraph } from 'experimental/UserUtil.js';\n\nimport TrashCanDetailedIcon from 'experimental/iconset/TrashCanDetailedIcon.js';\n\nconst DOUBLE_TAP_TIME = 250;\n\nclass TrashCanWidget extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.ref = null;\n\n    this.state = {\n      forceActive: false\n    };\n\n    this._doubleTapTimeout = null;\n\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseLeave = this.onMouseLeave.bind(this);\n    this.onClick = this.onClick.bind(this);\n\n    //HACK: This is kinda a hack to lose trash mode focus...\n    this.onAnyMouseDownNotConsumed = this.onAnyMouseDownNotConsumed.bind(this);\n  }\n\n  onMouseEnter(e)\n  {\n    if (this.state.forceActive) return;\n\n    this.props.inputController.setTrashMode(true);\n  }\n\n  onMouseLeave(e)\n  {\n    if (this.state.forceActive) return;\n\n    this.props.inputController.setTrashMode(false);\n  }\n\n  onClick(e)\n  {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (this._doubleTapTimeout)\n    {\n      //This is a double tap!\n      clearTimeout(this._doubleTapTimeout);\n      this._doubleTapTimeout = null;\n      this.setState({forceActive: false});\n\n      userClearGraph(this.props.app, true);\n      this.props.inputController.setTrashMode(false);\n    }\n    else\n    {\n      //This is a single tap!\n      this.setState((prev, props) => {\n        const result = !prev.forceActive;\n        props.inputController.setTrashMode(result);\n        this._doubleTapTimeout = setTimeout(() => {\n          this._doubleTapTimeout = null;\n        }, DOUBLE_TAP_TIME);\n\n        if (result)\n        {\n          document.documentElement.addEventListener('mousedown', this.onAnyMouseDownNotConsumed);\n        }\n\n        return {\n          forceActive: result\n        };\n      });\n    }\n  }\n\n  onAnyMouseDownNotConsumed(e)\n  {\n    if (this.state.forceActive && this.ref !== e.target)\n    {\n      e.stopPropagation();\n      e.preventDefault();\n\n      document.documentElement.removeEventListener('mousedown', this.onAnyMouseDownNotConsumed);\n\n      this.props.inputController.setTrashMode(false);\n      this.setState({forceActive: false});\n    }\n  }\n\n  //Override\n  render()\n  {\n    const inputController = this.props.inputController;\n    const graphController = this.props.graphController;\n    const inputAdapter = inputController.getInputAdapter();\n\n    const active = inputController.isTrashMode();\n    const hide = !active && (graphController.getGraph().isEmpty() || (inputAdapter.isUsingTouch() && inputAdapter.isDragging()));\n\n    return (\n      <div ref={ref=>this.ref=ref} id={this.props.id}\n        className={Style.trash_container +\n          (active ? \" active \" : \"\") +\n          (hide ? \" hide \" : \"\") +\n          \" \" + this.props.className}\n        style={this.props.style}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n        onClick={this.onClick}>\n        <TrashCanDetailedIcon/>\n      </div>\n    );\n  }\n}\n\nexport default TrashCanWidget;\n"],"sourceRoot":""}