{"version":3,"sources":["webpack:///./src/app/graph/renderer/GraphNodeRenderer.js","webpack:///./src/app/graph/renderer/GraphEdgeRenderer.js","webpack:///./src/app/graph/renderer/NodalGraphRenderer.js","webpack:///./src/app/modules/nodalgraph/EmptyGraphLabeler.js","webpack:///./src/app/graph/parser/NodalGraphParser.js","webpack:///./src/app/modules/nodalgraph/components/views/EditPane.js","webpack:///./src/app/modules/nodalgraph/NodalGraphExporter.js","webpack:///./src/app/modules/nodalgraph/NodalGraphModule.js","webpack:///./src/app/experimental/components/IconButton.js","webpack:///./src/app/experimental/panels/PanelContainer.js","webpack:///./src/app/session/manager/notification/components/DefaultNotificationLayout.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphElementInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/pickhandler/PickHandler.js","webpack:///./src/app/session/manager/export/AbstractGraphExporter.js","webpack:///./src/app/session/manager/notification/Notification.js","webpack:///./src/app/session/manager/notification/NotificationManager.js","webpack:///./src/app/util/input/AbstractInputHandler.js","webpack:///./src/app/session/manager/RenderManager.js","webpack:///./src/app/experimental/iconset/flat/JSONFileIcon.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/InputHandler.js","webpack:///./src/app/experimental/iconset/EditPencilIcon.js","webpack:///./src/app/session/manager/undo/AbstractEventHandler.js","webpack:///./src/app/experimental/components/IconStateButton.js","webpack:///./src/app/experimental/iconset/FullscreenIcon.js","webpack:///./src/app/experimental/iconset/FullscreenExitIcon.js","webpack:///./src/app/experimental/widgets/FullscreenWidget.js","webpack:///./src/app/experimental/iconset/ZoomInIcon.js","webpack:///./src/app/experimental/iconset/ZoomOutIcon.js","webpack:///./src/app/experimental/widgets/ZoomWidget.js","webpack:///./src/app/experimental/iconset/PinpointIcon.js","webpack:///./src/app/experimental/widgets/FocusCenterWidget.js","webpack:///./src/app/experimental/widgets/NavbarWidget.js","webpack:///./src/app/renderer/EdgeRenderer.js","webpack:///./src/app/modules/nodalgraph/NodalGraphImageExporter.js","webpack:///./src/app/modules/nodalgraph/SafeGraphEventHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphNodeInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphEdgeInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphEndpointInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphNodeCreateInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/pickhandler/GraphNodePickHandler.js","webpack:///./src/app/modules/nodalgraph/controller/pickhandler/GraphEdgePickHandler.js","webpack:///./src/app/modules/nodalgraph/controller/pickhandler/GraphEndpointPickHandler.js","webpack:///./src/app/experimental/UserUtil.js","webpack:///./src/app/graph/GraphNodeSelectionBox.js","webpack:///./src/app/modules/nodalgraph/controller/GraphPicker.js","webpack:///./src/app/modules/nodalgraph/controller/InputController.js","webpack:///./src/app/modules/nodalgraph/controller/GraphController.js","webpack:///./src/app/modules/nodalgraph/controller/SelectionBoxInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/ViewportInputHandler.js","webpack:///./src/app/deprecated/system/patterninput/PatternInput.js","webpack:///./src/app/session/manager/labeleditor/LabelEditorView.js","webpack:///./src/app/session/manager/labeleditor/LabelEditorManager.js","webpack:///./src/app/modules/nodalgraph/manager/NodalGraphInputManager.js","webpack:///./src/app/modules/nodalgraph/controller/renderer/BoxRenderer.js","webpack:///./src/app/modules/nodalgraph/controller/renderer/HighlightRenderer.js","webpack:///./src/app/modules/nodalgraph/controller/renderer/SelectionBoxRenderer.js","webpack:///./src/app/modules/nodalgraph/controller/renderer/GraphInputRenderer.js","webpack:///./src/app/experimental/iconset/TrashCanDetailedIcon.js","webpack:///./src/app/experimental/widgets/TrashCanWidget.js","webpack:///./src/app/experimental/iconset/MoveIcon.js","webpack:///./src/app/experimental/widgets/ModeSelectTray.js"],"names":["GraphNodeRenderer","props","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","React","Component","node","fill","stroke","label","getNodeLabel","react_default","a","createElement","className","cx","x","cy","y","r","getNodeSize","pointerEvents","style","userSelect","fontSize","Math","min","max","length","textAnchor","GraphEdgeRenderer","GraphEdgeRenderer_classCallCheck","GraphEdgeRenderer_possibleConstructorReturn","GraphEdgeRenderer_getPrototypeOf","edge","start","getStartPoint","end","getEndPoint","center","getCenterPoint","getEdgeLabel","edgeDir","getEdgeDirection","EdgeRenderer","directed","DIRECTED_NONE","from","to","direction","color","NodalGraphRenderer","NodalGraphRenderer_classCallCheck","NodalGraphRenderer_possibleConstructorReturn","NodalGraphRenderer_getPrototypeOf","graph","currentModule","getGraphController","getGraph","getNodes","map","e","i","renderer_GraphNodeRenderer","key","getGraphElementID","getEdges","renderer_GraphEdgeRenderer","labelFormatter","string","EmptyGraphLabeler","EmptyGraphLabeler_classCallCheck","EmptyGraphLabeler_possibleConstructorReturn","EmptyGraphLabeler_getPrototypeOf","AbstractGraphLabeler","JSON","parse","data","dst","arguments","undefined","nodeDatas","nodeCount","edgeDatas","edgeCount","hasQuad","clear","NodalGraph","GraphNode","QuadraticEdge","GraphEdge","nodeIndices","Map","nodeData","createNode","setNodeLabel","set","edgeData","sourceNode","get","destinationNode","createEdge","setEdgeLabel","quadData","setQuadratic","objectify","graphNodes","graphEdges","Array","elementID","id","flag","quad","getQuadratic","edgeSource","getSourceNode","edgeDestination","getDestinationNode","sourceIndex","has","destinationIndex","radians","nodes","edges","_version","EditPane","EditPane_classCallCheck","EditPane_possibleConstructorReturn","EditPane_getPrototypeOf","session","getCurrentModule","app","getApp","inputController","viewport","getInputController","graphController","inputActionMode","isActionMode","Style","view_pane","NavbarWidget","view_widget","right","bottom","left","ModeSelectTray","mode","onChange","modeIndex","setInputScheme","TrashCanWidget","NodalGraphExporter","NodalGraphExporter_classCallCheck","NodalGraphExporter_possibleConstructorReturn","NodalGraphExporter_getPrototypeOf","AbstractGraphExporter","module","newGraph","JSONGraphParser","graphData","machineName","machineData","name","getSession","setProjectName","getModuleName","version","process","getModuleVersion","timestamp","Date","toString","getProjectName","fromJSON","toJSON","fileBlob","_this","Promise","resolve","reject","filename","endsWith","getFileType","Error","reader","FileReader","onload","target","result","substring","prevGraphHash","getHashCode","isEmpty","getUndoManager","captureEvent","jsonData","abort","onerror","error","code","readAsText","jsonString","stringify","downloadText","I18N","JSONFileIcon","NodalGraphModule","NodalGraphModule_classCallCheck","_app","_inputManager","NodalGraphInputManager","NodalGraphParser","getPicker","addPickHandler","_endpointPickHandler","GraphEndpointPickHandler","_nodePickHandler","GraphNodePickHandler","_edgePickHandler","GraphEdgePickHandler","addInputHandler","_nodeInputHandler","GraphNodeInputHandler","_edgeInputHandler","GraphEdgeInputHandler","_endpointInputHandler","GraphEndpointInputHandler","_createInputHandler","GraphNodeCreateInputHandler","getDrawerManager","addPanelClass","PanelContainer","title","getExportManager","addExporter","addExporters","DEFAULT_IMAGE_EXPORTERS","getViewportManager","addViewClass","getRenderManager","addRenderer","RENDER_LAYER_WORKSPACE","Fragment","renderer_NodalGraphRenderer","parent","workspace","GraphInputRenderer","setEventHandlerFactory","SafeGraphEventHandler","getGraphParser","onSessionStart","update","onSessionStop","graphOnly","UserUtil","getToolbarComponent","closeBar","IconButton","showButtonLabel","SHOW_LABEL","react__WEBPACK_IMPORTED_MODULE_0___default","icon_button","disabled","onClick","children","panel_container","panel_title","panel_content","panel_bottom","STYLE_TYPE_DEFAULT","STYLE_TYPE_WARNING","STYLE_TYPE_ERROR","STYLE_TYPE_SUCCESS","DefaultNotificationLayout","message","notification","notification_container","styleType","split","close","GraphElementInputHandler","targetType","_targetType","InputHandler","pointer","PickHandler","getLabel","toUpperCase","Notification","notificationManager","layoutID","tags","_notificationManager","_message","_layoutID","_tags","_props","_id","guid","removeNotification","tag","includes","WARNING_LAYOUT_ID","ERROR_LAYOUT_ID","SUCCESS_LAYOUT_ID","NotificationManager","NotificationManager_classCallCheck","_layouts","_notifications","notificationLayout","delete","clearNotifications","push","isArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","hasTag","err","return","splice","pop","indexOf","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","registerNotificationLayout","_extends","AbstractInputHandler","zoomValue","prevValue","RENDER_LAYER_WORKSPACE_OVERLAY","RENDER_LAYER_VIEWPORT","RENDER_LAYER_VIEWPORT_OVERLAY","RenderManager","_renderMapping","layerID","rendererClass","Icon","xmlns","width","height","viewBox","d","points","AbstractEventHandler","undoManager","IconStateButton","state","index","initial","bind","_assertThisInitialized","_this2","prevIndex","setState","prev","count","Children","nextIndex","_this3","child","FullscreenIcon_classCallCheck","FullscreenIcon_possibleConstructorReturn","FullscreenIcon_getPrototypeOf","FullscreenExitIcon_classCallCheck","FullscreenExitIcon_possibleConstructorReturn","FullscreenExitIcon_getPrototypeOf","FullscreenWidget","FullscreenWidget_classCallCheck","FullscreenWidget_possibleConstructorReturn","FullscreenWidget_getPrototypeOf","components_IconStateButton","fullscreen_button","hide","FullscreenIcon","FullscreenExitIcon","ZoomInIcon_classCallCheck","ZoomInIcon_possibleConstructorReturn","ZoomInIcon_getPrototypeOf","ZoomOutIcon_classCallCheck","ZoomOutIcon_possibleConstructorReturn","ZoomOutIcon_getPrototypeOf","ZoomWidget","ZoomWidget_classCallCheck","ZoomWidget_getPrototypeOf","onZoomIn","ZoomWidget_assertThisInitialized","onZoomOut","viewScale","getScale","addScale","toFixed","zoom_container","zoom_button","ZoomInIcon","ZoomOutIcon","zoom_label","PinpointIcon_classCallCheck","PinpointIcon_possibleConstructorReturn","PinpointIcon_getPrototypeOf","FocusCenterWidget","FocusCenterWidget_classCallCheck","FocusCenterWidget_getPrototypeOf","FocusCenterWidget_assertThisInitialized","setOffset","center_focus_button","abs","getOffsetX","getOffsetY","PinpointIcon","NavbarWidget_classCallCheck","NavbarWidget_possibleConstructorReturn","NavbarWidget_getPrototypeOf","getInputAdapter","getViewport","navbar_container","experimental_widgets_FullscreenWidget","navbar_widget","experimental_widgets_ZoomWidget","navbar_widget_container","experimental_widgets_FocusCenterWidget","SIXTH_PI","PI","DIRECTED_FORWARD","DefaultEndpointRenderer","position","sin","angle","cos","DefaultLabelRenderer","transform","labels","str","reverse","alignmentBaseline","fromAngle","toAngle","ForwardEndpointRenderer","forwardEndpointRenderer","endpointRenderer","BackwardEndpointRenderer","backwardEndpointRenderer","EdgeLabelRenderer","labelRenderer","fromPoint","toPoint","centerPoint","reverseLabel","quadLine","dftx","dfty","dfcx","dfcy","ftrad","atan2","fcrad","GraphImageExporter","imageType","FILE_TYPE_PNG","_imageType","element","offsetX","offsetY","bounds","getBoundingRect","dx","minX","dy","minY","w","EXPORT_PADDING_X","h","EXPORT_PADDING_Y","clone","cloneNode","setAttribute","uiElements","getElementsByClassName","remove","svgElement","getSVGElement","workspaceDim","baseVal","svg","processSVGForExport","downloadImageFromSVG","FILE_TYPE_JPG","FILE_TYPE_SVG","_get","prototype","PNGIcon","JPGIcon","SVGIcon","graphParser","_graphController","_graphParser","_graphData","prevEvent","getPreviousEvent","applyRedo","selectionBox","getSelectionBox","isTrashMode","prevX","prevY","hasSelection","deleteSelectedNodes","deleteTargetNode","isMoveMode","openLabelEditor","picker","getGraphLabeler","getDefaultEdgeLabel","setInitialTarget","isNewEdge","edgeQuad","prevQuad","prevEdgeTo","_snapToGrid","snapSize","_snapSize","round","moveMultipleNodesTo","getSelection","moveNodeTo","onGraphIntentMoveAllNodes","onGraphIntentMoveNode","deleteTargetEdge","isPlaceholder","targetQuad","moveEdgeTo","onGraphIntentMoveEdge","moveEndpointTo","formatEdge","deleteEdge","onGraphIntentFinishEdge","onGraphIntentCreateEdge","onGraphIntentChangeDestination","shouldDestroyPointlessEdges","changeDestinationNode","nodeSize","EDGE_RADIUS","ENDPOINT_RADIUS","userClearGraph","callback","window","confirm","__webpack_require__","__webpack_exports__","GraphNodeSelectionBox","_boundingBox","fromX","fromY","toX","toY","visible","targets","box","mx","my","lx","ly","clearSelection","x1","y1","x2","y2","getNodesWithin","GraphPicker","GraphPicker_classCallCheck","initialTarget","initialTargetType","_prevX","_prevY","_pickHandlers","pickHandler","getTargetType","type","updateTarget","hasTarget","document","body","cursor","values","getTargetAt","DEFAULT_SHOULD_DESTROY_POINTLESS_EDGE","InputController","inputAdapter","InputController_classCallCheck","_picker","_selectionBox","_swapMouseScheme","_trashMode","_disabled","_inputHandlers","AbstractInputController","inputHandler","_module","_inputAdapter","getPointerX","getPointerY","updateHoverTarget","updateInitialTarget","isTargetInSelection","handler","isTargetable","onAction","emit","onDblAction","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","onDragStart","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","onDragMove","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","onDragStop","clearTarget","enabled","_drawer","setViewportColor","shouldInputFirst","isAltInput","isDragging","isPointerActive","DEFAULT_AUTO_RENAME","GRAPH_REFRESH_RATE","GraphController","labeler","parser","GraphController_classCallCheck","GraphController_getPrototypeOf","_graphChangeHandler","GraphChangeHandler","setGraphController","GraphController_assertThisInitialized","shouldAutoLabel","registerEvent","AbstractGraphController","GraphController_get","_graph","GraphLayout","applyLayout","getModule","graphLabeler","_labeler","getNodeCustom","getDefaultNodeLabel","nextQuad","prevDestination","nextInitial","prevInitial","nextX","nextY","targetNodes","applyAutoRename","enable","setNodeCustom","random","newNodeLabel","getNodeAccept","setNodeAccept","selectedNode","selection","slice","deleteNode","onGraphIntentDeleteNodes","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","other","diameter","nextDX","nextDY","pos","getInputEventPosition","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","changeInputEventPosition","setQuadraticByCoords","getPickHandler","isSelfLoop","defaultValue","labelEditor","getInputManager","getLabelEditorManager","getLabelEditorComponent","prevLabel","openEditor","ax","ay","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","Eventable","mixin","SelectionBoxInputHandler","SelectionBoxInputHandler_classCallCheck","SelectionBoxInputHandler_possibleConstructorReturn","SelectionBoxInputHandler_getPrototypeOf","_inputController","beginSelection","isSelecting","updateSelection","endSelection","ViewportInputHandler","ViewportInputHandler_classCallCheck","ViewportInputHandler_possibleConstructorReturn","ViewportInputHandler_getPrototypeOf","getAdapter","addOffset","PatternInput","PatternInput_classCallCheck","PatternInput_getPrototypeOf","inputElement","placeholder","maxLength","multiLine","formatter","_submitTimeout","_submit","submitOnBlur","_skipBlur","_skipSelect","PatternInput_assertThisInitialized","onFocus","onBlur","onKeyDown","select","setTimeout","submit","activeElement","onSubmit","shiftKey","blur","preventDefault","stopPropagation","caretPosition","selectionStart","selectionEnd","focus","ignore","separator","format","_this4","maxlength","multiline","ref","rows","spellCheck","LabelEditorView","LabelEditorView_classCallCheck","LabelEditorView_getPrototypeOf","inputComponent","open","_target","_targetCallback","onInputSubmit","LabelEditorView_assertThisInitialized","onInputBlur","graphElement","onCancel","GraphElement","_targetOnSubmit","_targetOnCancel","getLabelFormatter","setFormatter","resetValue","closeEditor","isEditorOpen","targetStyle","getElement","parentClientRect","getBoundingClientRect","screenPos","ctm","getScreenCTM","f","transformViewToScreen","offsetWidth","offsetHeight","top","editor_container","patterninput_PatternInput","saveOnExit","tray_container","LabelEditorManager","LabelEditorManager_classCallCheck","_labelEditorComponent","createRef","_labelEditorRenderer","renderer","LabelEditorRenderer","manager_labeleditor_LabelEditorView","current","nodalGraph","labelEditorRenderer","NodalGraphInputManager_classCallCheck","_labelEditorManager","setLabelEditorRenderer","setLabeler","_selectionBoxInputHandler","_viewportInputHandler","_graphLabeler","initialize","on","getNotificationManager","pushNotification","removeInputHandler","destroy","BoxRenderer","HIGHLIGHT_LINE_ARRAY","HighlightRenderer","HighlightRenderer_classCallCheck","HighlightRenderer_possibleConstructorReturn","HighlightRenderer_getPrototypeOf","endpoint","strokeDashoffset","offset","strokeDasharray","strokeWidth","SelectionBoxRenderer","SelectionBoxRenderer_classCallCheck","SelectionBoxRenderer_possibleConstructorReturn","SelectionBoxRenderer_getPrototypeOf","selectionBoundingBox","renderer_HighlightRenderer","renderer_BoxRenderer","GraphInputRenderer_classCallCheck","GraphInputRenderer_possibleConstructorReturn","GraphInputRenderer_getPrototypeOf","renderer_SelectionBoxRenderer","_tester","TrashCanWidget_classCallCheck","TrashCanWidget_getPrototypeOf","forceActive","_doubleTapTimeout","onMouseEnter","TrashCanWidget_assertThisInitialized","onMouseLeave","onAnyMouseDownNotConsumed","setTrashMode","clearTimeout","documentElement","addEventListener","removeEventListener","active","isUsingTouch","trash_container","TrashCanDetailedIcon","ModeSelectTray_classCallCheck","ModeSelectTray_getPrototypeOf","ModeSelectTray_assertThisInitialized","newValue","tray_button","EditPencilIcon","MoveIcon"],"mappings":"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","file":"module_nodalgraph.bundle.419b561d6c205eaca0b9.js","sourcesContent":["import React from 'react';\n\nconst GRAPH_NODE_CONTAINER_STYLE_NAME = \"graph-node-container\";\nconst GRAPH_NODE_BODY_STYLE_NAME = \"graph-node\";\nconst GRAPH_NODE_LABEL_STYLE_NAME = \"graph-node-label\";\n\nclass GraphNodeRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const node = this.props.node;\n    const fill = this.props.fill || \"#FFFFFF\";\n    const stroke = this.props.stroke || \"#000000\";\n\n    const label = node.getNodeLabel() || \"\";\n\n    return (\n      <g className={GRAPH_NODE_CONTAINER_STYLE_NAME}>\n        {/*Outer circle*/}\n        <circle className={GRAPH_NODE_BODY_STYLE_NAME}\n          cx={node.x} cy={node.y}\n          r={node.getNodeSize()}\n\n          fill={fill}\n          stroke={stroke}/>\n\n        {/*Label*/}\n        <text className={GRAPH_NODE_LABEL_STYLE_NAME}\n          x={node.x} y={node.y + 4}\n          pointerEvents=\"none\"\n          style={{\n            userSelect: \"none\",\n            fontSize: (1 - Math.min(Math.max(label.length - 2, 0) / 6, 0.5)) + \"em\"\n          }}\n          textAnchor=\"middle\">\n          {label}\n        </text>\n      </g>\n    );\n  }\n}\n\nexport default GraphNodeRenderer;\n","import React from 'react';\n\nimport EdgeRenderer, {DIRECTED_NONE} from 'renderer/EdgeRenderer.js';\n\nconst GRAPH_EDGE_CONTAINER_STYLE_NAME = \"graph-edge-container\";\nconst GRAPH_EDGE_BODY_STYLE_NAME = \"graph-edge\";\nconst GRAPH_EDGE_LABEL_STYLE_NAME = \"graph-edge-label\";\n\nclass GraphEdgeRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const edge = this.props.edge;\n    const stroke = this.props.stroke || \"#000000\";\n    const start = edge.getStartPoint();\n    const end = edge.getEndPoint();\n    const center = edge.getCenterPoint();\n    const label = edge.getEdgeLabel();\n    const edgeDir = edge.getEdgeDirection();\n\n    return <g className={GRAPH_EDGE_CONTAINER_STYLE_NAME}>\n      <EdgeRenderer\n        directed={DIRECTED_NONE}\n        from={start}\n        to={end}\n        center={center}\n        label={label}\n        direction={edgeDir}\n        color={stroke}/>\n    </g>;\n  }\n}\n\nexport default GraphEdgeRenderer;\n","import React from 'react';\n\nimport GraphNodeRenderer from './GraphNodeRenderer.js';\nimport GraphEdgeRenderer from './GraphEdgeRenderer.js';\n\nimport GraphEdge from '../GraphEdge.js';\nimport QuadraticEdge from '../QuadraticEdge.js';\n\nclass NodalGraphRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    //Inherits props from parent\n    const currentModule = this.props.currentModule;\n    const graphController = currentModule.getGraphController();\n    const graph = graphController.getGraph();\n\n    return (\n      <g>\n        {graph.getNodes().map(\n          (e, i) => <GraphNodeRenderer key={e.getGraphElementID() || i}\n          node={e}/>)}\n        {graph.getEdges().map(\n          (e, i) => <GraphEdgeRenderer key={e.getGraphElementID() || i}\n          edge={e}/>)}\n      </g>\n    );\n  }\n}\n\nexport default NodalGraphRenderer;\n","import AbstractGraphLabeler from 'graph/AbstractGraphLabeler.js';\n\nclass EmptyGraphLabeler extends AbstractGraphLabeler\n{\n  constructor()\n  {\n    super();\n  }\n\n  //TODO: this is from GraphController (refactor this out of here pls)\n  setGraphController(getGraphController) {}\n\n  //Override\n  getDefaultNodeLabel() { return \"\"; }\n\n  //Override\n  getDefaultEdgeLabel() { return \"\"; }\n\n  //Override\n  getNodeLabelFormatter() { return labelFormatter; }\n\n  //Override\n  getEdgeLabelFormatter() { return labelFormatter; }\n}\n\nfunction labelFormatter(string)\n{\n  return string || \"\";\n}\n\nexport default EmptyGraphLabeler;\n","import NodalGraph from '../NodalGraph.js';\n\nimport GraphNode from '../GraphNode.js';\nimport GraphEdge from '../GraphEdge.js';\nimport QuadraticEdge from '../QuadraticEdge.js';\n\nconst GRAPH_PARSER_VERSION = \"1.0.0\";\n\nexport const JSON = {\n  parse(data, dst=null)\n  {\n    const nodeDatas = data['nodes'] || [];\n    const nodeCount = Math.min(nodeDatas.length || 0, data['nodeCount'] || 0);\n    const edgeDatas = data['edges'] || [];\n    const edgeCount = Math.min(edgeDatas.length || 0, data['edgeCount'] || 0);\n    const hasQuad = data['quad'] || false;\n\n    if (!dst) dst = new NodalGraph(GraphNode, hasQuad ? QuadraticEdge : GraphEdge);\n    else dst.clear();\n\n    const nodeIndices = new Map();\n    for(let i = 0; i < nodeCount; ++i)\n    {\n      const nodeData = nodeDatas[i];\n      if (!nodeData) continue;\n\n      //NOTE: Assumes createNode will maintain order\n      const node = dst.createNode(nodeData['x'] || 0, nodeData['y'] || 0, nodeData['id']);\n      node.setNodeLabel(nodeData['label'] || \"\");\n\n      nodeIndices.set(i, node);\n    }\n\n    for(let i = 0; i < edgeCount; ++i)\n    {\n      const edgeData = edgeDatas[i];\n      if (!edgeData) continue;\n      const sourceNode = nodeIndices.get(edgeData['from']) || null;\n      //Cannot create source-less edges\n      if (!sourceNode) continue;\n      const destinationNode = nodeIndices.get(edgeData['to']) || null;\n      //NOTE: Assumes createEdge will maintain order\n      const edge = dst.createEdge(sourceNode, destinationNode, edgeData['id']);\n      edge.setEdgeLabel(edgeData['label'] || \"\");\n\n      if (edge instanceof QuadraticEdge)\n      {\n        const quadData = edgeData['quad'] || {};\n        edge.setQuadratic(quadData['radians'] || 0, quadData['length'] || 0);\n      }\n    }\n\n    return dst;\n  },\n  objectify(graph)\n  {\n    const graphNodes = graph.getNodes() || [];\n    const nodeCount = graphNodes.length || 0;\n    const graphEdges = graph.getEdges() || [];\n    const edgeCount = graphEdges.length || 0;\n\n    const nodeDatas = new Array(nodeCount);\n    const nodeIndices = new Map();\n    for(let i = 0; i < nodeCount; ++i)\n    {\n      const node = graphNodes[i];\n      if (node)\n      {\n        //NOTE: Assumes node must have an id\n        const elementID = node.getGraphElementID();\n\n        nodeIndices.set(node, i);\n        nodeDatas[i] = {\n          id: elementID,\n          x: node.x || 0, y: node.y || 0,\n          label: node.getNodeLabel() || \"\"\n        };\n      }\n    }\n\n    let flag = false;\n    const edgeDatas = new Array(edgeCount);\n    for(let i = 0; i < edgeCount; ++i)\n    {\n      const edge = graphEdges[i];\n      if (edge)\n      {\n        //NOTE: Assumes edge must have an id\n        const elementID = edge.getGraphElementID();\n\n        const quad = edge.getQuadratic() || {};\n        const edgeSource = edge.getSourceNode();\n        const edgeDestination = edge.getDestinationNode();\n        const sourceIndex = nodeIndices.has(edgeSource) ? nodeIndices.get(edgeSource) : -1;\n        const destinationIndex = nodeIndices.has(edgeDestination) ? nodeIndices.get(edgeDestination) : -1;\n        edgeDatas[i] = {\n          id: elementID,\n          from: sourceIndex,\n          to: destinationIndex,\n          label: edge.getEdgeLabel() || \"\"\n        };\n\n        if (edge instanceof QuadraticEdge)\n        {\n          flag = true;\n          edgeDatas[i]['quad'] = {\n            radians: quad['radians'] || 0,\n            length: quad['length'] || 0\n          };\n        }\n      }\n    }\n\n    return {\n      nodeCount: nodeCount,\n      nodes: nodeDatas,\n      edgeCount: edgeCount,\n      edges: edgeDatas,\n      hasQuad: flag,\n      _version: GRAPH_PARSER_VERSION\n    };\n  }\n};\n","import React from 'react';\nimport Style from 'experimental/viewport/ViewportView.css';\n\nimport ModeSelectTray from 'experimental/widgets/ModeSelectTray.js';\nimport TrashCanWidget from 'experimental/widgets/TrashCanWidget.js';\nimport NavbarWidget from 'experimental/widgets/NavbarWidget.js';\n\nclass EditPane extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const session = this.props.session;\n    const currentModule = session.getCurrentModule();\n    const app = session.getApp();\n\n    const viewport = this.props.viewport;\n    const inputController = currentModule.getInputController();\n    const graphController = currentModule.getGraphController();\n    const inputActionMode = inputController.isActionMode();\n\n    return (\n      <div id={this.props.id}\n        className={Style.view_pane +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <NavbarWidget className={Style.view_widget} style={{right: 0}}\n          app={app}/>\n        <div className={Style.view_widget} style={{bottom: 0, left: 0}}>\n          <ModeSelectTray mode={inputActionMode ? 0 : 1} onChange={modeIndex => inputController.setInputScheme(modeIndex === 0)}/>\n        </div>\n        <div className={Style.view_widget} style={{bottom: 0, right: 0}}>\n          <TrashCanWidget app={app} inputController={inputController} graphController={graphController}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditPane;\n","import AbstractGraphExporter from 'session/manager/export/AbstractGraphExporter.js';\n\nimport { JSON as JSONGraphParser } from 'graph/parser/NodalGraphParser.js';\nimport { downloadText } from 'util/Downloader.js';\n\nimport JSONFileIcon from 'experimental/iconset/flat/JSONFileIcon.js';\n\nclass NodalGraphExporter extends AbstractGraphExporter\n{\n  constructor() { super(); }\n\n  fromJSON(data, module)\n  {\n    const graphController = module.getGraphController();\n    const graph = graphController.getGraph();\n\n    const metadata = '_metadata' in data ? data['_metadata'] : {};\n    const newGraph = JSONGraphParser.parse(data.graphData, graph);\n\n    //HACK: this should be calculated elsewhere\n    const machineData = data.machineData;\n    const machineName = machineData.name;\n    if (machineName) module.getApp().getSession().setProjectName(machineName);\n\n    return newGraph;\n  }\n\n  toJSON(graphData, module)\n  {\n    const graphController = module.getGraphController();\n\n    const dst = {};\n    dst[\"_metadata\"] = {\n      module: module.getModuleName(),\n      version: process.env.VERSION + \":\" + module.getModuleVersion(),\n      timestamp: new Date().toString()\n    };\n    dst[\"graphData\"] = graphData;\n    dst[\"machineData\"] = {\n      name: module.getApp().getSession().getProjectName()\n    };\n    return dst;\n  }\n\n  //Override\n  importFromData(data, module)\n  {\n    this.fromJSON(data, module);\n  }\n\n  //Override\n  exportToData(module)\n  {\n    const graph = module.getGraphController().getGraph();\n    const graphData = JSONGraphParser.objectify(graph);\n    const result = this.toJSON(graphData, module);\n    return result;\n  }\n\n  //Override\n  doesSupportData()\n  {\n    return true;\n  }\n\n  //Override\n  importFromFile(fileBlob, module)\n  {\n    return new Promise((resolve, reject) => {\n      const filename = fileBlob.name;\n      if (!filename.endsWith(this.getFileType()))\n      {\n        throw new Error(\"Trying to import invalid file type for \\'\" + this.getFileType() + \"\\': \" + filename);\n      }\n\n      const reader = new FileReader();\n      reader.onload = e => {\n        const graphController = module.getGraphController();\n        const data = e.target.result;\n        const name = filename.substring(0, filename.length - this.getFileType().length - 1);\n        const graph = graphController.getGraph();\n        const prevGraphHash = graph.getHashCode(true);\n\n        //TODO: this should not be here, this should exist somewhere in graphController\n        if (!graph.isEmpty())\n        {\n          module.getApp().getUndoManager().captureEvent();\n        }\n\n        try\n        {\n          const jsonData = JSON.parse(data);\n\n          this.fromJSON(jsonData, module);\n\n          module.getApp().getSession().setProjectName(name);\n\n          resolve();\n        }\n        catch (e)\n        {\n          reader.abort();\n          reject(e);\n        }\n        finally\n        {\n          const nextGraphHash = graph.getHashCode(true);\n          if (prevGraphHash !== nextGraphHash)\n          {\n            module.getApp().getUndoManager().captureEvent();\n          }\n        }\n      };\n\n      reader.onerror = e => {\n        reject(new Error(\"Unable to import file: \" + e.target.error.code));\n      }\n\n      reader.readAsText(fileBlob);\n    });\n  }\n\n  //Override\n  exportToFile(filename, module)\n  {\n    const graph = module.getGraphController().getGraph();\n    const graphData = JSONGraphParser.objectify(graph);\n    const dst = this.toJSON(graphData, module);\n    const jsonString = JSON.stringify(dst);\n    downloadText(filename + '.' + this.getFileType(), jsonString);\n  }\n\n  //Override\n  doesSupportFile()\n  {\n    return true;\n  }\n\n  //Override\n  canImport(module)\n  {\n    return true;\n  }\n\n  //Override\n  canExport(module)\n  {\n    return !module.getGraphController().getGraph().isEmpty();\n  }\n\n  //Override\n  getTitle()\n  {\n    return I18N.toString(\"file.export.machine.hint\");\n  }\n\n  //Override\n  getLabel()\n  {\n    return I18N.toString(\"file.export.machine\");\n  }\n\n  //Override\n  getFileType()\n  {\n    return \"json\";\n  }\n\n  //Override\n  getIconClass()\n  {\n    return JSONFileIcon;\n  }\n}\n\nexport default NodalGraphExporter;\n","import React from 'react';\nimport PanelContainer from 'experimental/panels/PanelContainer.js';\n\nimport NodalGraphInputManager from 'modules/nodalgraph/manager/NodalGraphInputManager.js';\n\nimport NodalGraphRenderer from 'graph/renderer/NodalGraphRenderer.js';\nimport GraphInputRenderer from 'modules/nodalgraph/controller/renderer/GraphInputRenderer.js';\n\nimport NodalGraph from 'graph/NodalGraph.js';\nimport GraphNode from 'graph/GraphNode.js';\nimport QuadraticEdge from 'graph/QuadraticEdge.js';\nimport EmptyGraphLabeler from './EmptyGraphLabeler.js';\nimport * as NodalGraphParser from 'graph/parser/NodalGraphParser.js';\n\nimport EditPane from './components/views/EditPane.js';\nimport {RENDER_LAYER_WORKSPACE} from 'session/manager/RenderManager.js';\n\nimport NodalGraphExporter from './NodalGraphExporter.js';\nimport {DEFAULT_IMAGE_EXPORTERS} from './NodalGraphImageExporter.js';\nimport SafeGraphEventHandler from './SafeGraphEventHandler.js';\n\nimport GraphNodeInputHandler from 'modules/nodalgraph/controller/inputhandler/GraphNodeInputHandler.js';\nimport GraphEdgeInputHandler from 'modules/nodalgraph/controller/inputhandler/GraphEdgeInputHandler.js';\nimport GraphEndpointInputHandler from 'modules/nodalgraph/controller/inputhandler/GraphEndpointInputHandler.js';\nimport GraphNodeCreateInputHandler from 'modules/nodalgraph/controller/inputhandler/GraphNodeCreateInputHandler.js';\n\nimport GraphNodePickHandler from 'modules/nodalgraph/controller/pickhandler/GraphNodePickHandler.js';\nimport GraphEdgePickHandler from 'modules/nodalgraph/controller/pickhandler/GraphEdgePickHandler.js';\nimport GraphEndpointPickHandler from 'modules/nodalgraph/controller/pickhandler/GraphEndpointPickHandler.js';\n\nimport * as UserUtil from 'experimental/UserUtil.js';\n\nconst MODULE_NAME = \"nodalgraph\";\nconst MODULE_VERSION = \"0.0.1\";\nconst MODULE_LOCALIZED_NAME = \"NodalGraph\";\n\nclass NodalGraphModule\n{\n  constructor(app)\n  {\n    this._app = app;\n\n    this._inputManager = new NodalGraphInputManager(this,\n      new NodalGraph(GraphNode, QuadraticEdge),\n      new EmptyGraphLabeler(),\n      NodalGraphParser,\n      null);\n    this._inputManager.getInputController().getPicker()\n      .addPickHandler(this._endpointPickHandler = new GraphEndpointPickHandler())\n      .addPickHandler(this._nodePickHandler = new GraphNodePickHandler())\n      .addPickHandler(this._edgePickHandler = new GraphEdgePickHandler());\n    this._inputManager.getInputController()\n      .addInputHandler(this._nodeInputHandler = new GraphNodeInputHandler())\n      .addInputHandler(this._edgeInputHandler = new GraphEdgeInputHandler())\n      .addInputHandler(this._endpointInputHandler = new GraphEndpointInputHandler())\n      .addInputHandler(this._createInputHandler = new GraphNodeCreateInputHandler());\n\n    app.getDrawerManager()\n      .addPanelClass(props => (\n        <PanelContainer id={props.id}\n          className={props.className}\n          style={props.style}\n          title={\"Your Average Graph Editor\"}>\n          <p>{\"Brought to you with \\u2764 by the Flap.js team.\"}</p>\n          <p>{\"<- Tap on a tab to begin!\"}</p>\n        </PanelContainer>\n      ));\n\n    app.getExportManager()\n      .addExporter(new NodalGraphExporter())\n      .addExporters(DEFAULT_IMAGE_EXPORTERS);\n\n    app.getViewportManager()\n      .addViewClass(EditPane);\n\n    app.getRenderManager()\n      .addRenderer(RENDER_LAYER_WORKSPACE, props => (\n        <>\n          {/* Graph objects */\n            <NodalGraphRenderer currentModule={this} parent={props.workspace}/>}\n        </>\n      ))\n      .addRenderer(RENDER_LAYER_WORKSPACE, props => (\n        <GraphInputRenderer currentModule={this}/>\n      ));\n\n    app.getUndoManager()\n      .setEventHandlerFactory((...args) => {\n        return new SafeGraphEventHandler(this._inputManager.getGraphController(), this._inputManager.getGraphParser());\n      });\n  }\n\n  //Override\n  initialize(app)\n  {\n    this._inputManager.onSessionStart(app.getSession());\n  }\n\n  //Override\n  update(app)\n  {\n    this._inputManager.update(this);\n  }\n\n  //Override\n  destroy(app)\n  {\n    this._inputManager.onSessionStop(app.getSession());\n  }\n\n  //Override\n  clear(app, graphOnly=false)\n  {\n    UserUtil.userClearGraph(app, graphOnly, () => app.getToolbarComponent().closeBar());\n  }\n\n  getInputManager() { return this._inputManager; }\n  getInputController() { return this._inputManager.getInputController(); }\n  getGraphController() { return this._inputManager.getGraphController(); }\n\n  //Override\n  getModuleVersion() { return MODULE_VERSION; }\n  //Override\n  getModuleName() { return MODULE_NAME; }\n  //Override\n  getLocalizedModuleName() { return MODULE_LOCALIZED_NAME; }\n\n  getApp() { return this._app; }\n}\n\nexport default NodalGraphModule;\n","import React from 'react';\nimport Style from './IconButton.css';\n\nclass IconButton extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const title = this.props.title;\n    const showButtonLabel = IconButton.SHOW_LABEL && title;\n\n    return (\n      <button id={this.props.id}\n        className={Style.icon_button +\n          (showButtonLabel ? \" hint \" : \"\") +\n          \" \" + this.props.className}\n        style={this.props.style}\n        title={title}\n        disabled={this.props.disabled}\n        onClick={this.props.onClick}>\n        {this.props.children}\n        <label>{title}</label>\n      </button>\n    );\n  }\n}\nIconButton.SHOW_LABEL = false;\n\nexport default IconButton;\n","import React from 'react';\nimport Style from './PanelContainer.css';\n\nclass PanelContainer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n  \n  //Override\n  render()\n  {\n    const title = this.props.title;\n\n    return (\n      <div id={this.props.id}\n        className={Style.panel_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <div className={Style.panel_title}>\n          <h1>{title}</h1>\n        </div>\n        <div className={Style.panel_content}>\n          {this.props.children}\n        </div>\n        <div className={Style.panel_bottom}>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PanelContainer;\n","import React from 'react';\nimport Style from './DefaultNotificationLayout.css';\n\nexport const STYLE_TYPE_DEFAULT = \"default\";\nexport const STYLE_TYPE_WARNING = \"warning\";\nexport const STYLE_TYPE_ERROR = \"error\";\nexport const STYLE_TYPE_SUCCESS = \"success\";\n\nclass DefaultNotificationLayout extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const message = this.props.message;\n    const notification = this.props.notification;\n\n    return (\n      <div id={this.props.id}\n        className={Style.notification_container +\n          \" \" + this.props.styleType +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        {message &&\n          message.split('\\n').map((e, i) => <p key={e + \":\" + i}>{e}</p>)}\n        {this.props.children}\n        {notification &&\n          <button onClick={e => notification.close()}>\n            {I18N.toString(\"message.action.close\")}\n          </button>}\n      </div>\n    );\n  }\n}\n\nexport default DefaultNotificationLayout;\n","import InputHandler from './InputHandler.js';\n\nclass GraphElementInputHandler extends InputHandler\n{\n  constructor(targetType)\n  {\n    super();\n\n    if (!targetType)\n    {\n      throw new Error(\"Missing target type for graph element input handler\");\n    }\n\n    this._targetType = targetType;\n  }\n\n  //Override\n  isTargetable(inputController, pointer, target, targetType)\n  {\n    if (targetType === this._targetType)\n    {\n      return true;\n    }\n\n    return false;\n  }\n  \n  getTargetType()\n  {\n    return this._targetType;\n  }\n}\n\nexport default GraphElementInputHandler;\n","class PickHandler\n{\n  getTargetAt(graph, x, y) { return null; }\n  getTargetType() { return null; }\n}\nexport default PickHandler;\n","class AbstractGraphExporter\n{\n  constructor() {}\n\n  importFromData(data, module)\n  {\n    throw new Error(\"Unsupported import for type \\'\" + this.getFileType() + \"\\'\");\n  }\n\n  exportToData(module)\n  {\n    throw new Error(\"Unsupported export for type \\'\" + this.getFileType() + \"\\'\");\n  }\n\n  doesSupportData()\n  {\n    return false;\n  }\n\n  importFromFile(fileBlob, module)\n  {\n    throw new Error(\"Unsupported import for type \\'\" + this.getFileType() + \"\\'\");\n  }\n\n  exportToFile(filename, module)\n  {\n    throw new Error(\"Unsupported export for type \\'\" + this.getFileType() + \"\\'\");\n  }\n\n  doesSupportFile()\n  {\n    return false;\n  }\n\n  canImport(module)\n  {\n    return false;\n  }\n\n  canExport(module)\n  {\n    return true;\n  }\n\n  getTitle()\n  {\n    return this.getLabel();\n  }\n\n  getIconClass()\n  {\n    return null;\n  }\n\n  getLabel()\n  {\n    return \"Export as \" + this.getFileType().toUpperCase();\n  }\n\n  getFileType()\n  {\n    throw new Error(\"Unknown file type for exporter\");\n  }\n}\n\nexport default AbstractGraphExporter;\n","import {guid} from 'util/MathHelper.js';\n\nclass Notification\n{\n  constructor(notificationManager, message, layoutID, tags, props)\n  {\n    this._notificationManager = notificationManager;\n    this._message = message;\n    this._layoutID = layoutID;\n    this._tags = tags;\n    this._props = props;\n    this._id = guid();\n  }\n\n  close() { this._notificationManager.removeNotification(this); }\n  hasTag(tag) { return this._tags.includes(tag); }\n\n  getMessage() { return this._message; }\n  getLayoutID() { return this._layoutID; }\n  getTags() { return this._tags; }\n  getProps() { return this._props; }\n  getID() { return this._id; }\n  getNotificationManager() { return this._notificationManager; }\n}\n\nexport default Notification;\n","import React from 'react';\nimport Notification from './Notification.js';\n\nimport DefaultNotificationLayout, {\n  STYLE_TYPE_DEFAULT,\n  STYLE_TYPE_WARNING,\n  STYLE_TYPE_ERROR,\n  STYLE_TYPE_SUCCESS\n} from './components/DefaultNotificationLayout.js';\n\nexport const DEFAULT_LAYOUT_ID = \"default\";\nexport const WARNING_LAYOUT_ID = \"warning\";\nexport const ERROR_LAYOUT_ID = \"error\";\nexport const SUCCESS_LAYOUT_ID = \"success\";\n\nclass NotificationManager\n{\n  constructor()\n  {\n    this._layouts = new Map();\n    this._notifications = [];\n  }\n\n  registerNotificationLayout(layoutID, notificationLayout)\n  {\n    this._layouts.set(layoutID, notificationLayout);\n    return this;\n  }\n\n  unregisterNotificationLayout(layoutID)\n  {\n    this._layouts.delete(layoutID);\n    return this;\n  }\n\n  pushNotification(message, layoutID=null, tags=[], props={}, replace=true)\n  {\n    if (replace)\n    {\n      this.clearNotifications(tags);\n    }\n\n    const notification = new Notification(this, message, layoutID, tags, props);\n    this._notifications.push(notification);\n    return notification;\n  }\n\n  popNotification(tags=null)\n  {\n    if (this._notifications.length <= 0) return null;\n\n    if (Array.isArray(tags))\n    {\n      for(let i = this._notifications.length - 1; i >= 0; --i)\n      {\n        const notification = this._notifications[i];\n        let flag = true;\n        for(const tag of tags)\n        {\n          if (!notification.hasTag(tag))\n          {\n            flag = false;\n            break;\n          }\n        }\n        if (flag)\n        {\n          this._notifications.splice(i, 1);\n          return notification;\n        }\n      }\n    }\n    else if (typeof tags === 'string')\n    {\n      for(let i = 0, length = this._notifications.length; i < length; ++i)\n      {\n        const notification = this._notifications[i];\n        if (notification.hasTag(tags))\n        {\n          this._notifications.splice(i, 1);\n          return notification;\n        }\n      }\n    }\n    else\n    {\n      return this._notifications.pop();\n    }\n  }\n\n  removeNotification(notification)\n  {\n    const i = this._notifications.indexOf(notification);\n    if (i >= 0)\n    {\n      this._notifications.splice(i, 1);\n    }\n  }\n\n  clearNotifications(tags=null)\n  {\n    if (this._notifications.length <= 0) return;\n\n    if (Array.isArray(tags))\n    {\n      for(let i = this._notifications.length - 1; i >= 0; --i)\n      {\n        const notification = this._notifications[i];\n        let flag = true;\n        for(const tag of tags)\n        {\n          if (!notification.hasTag(tag))\n          {\n            flag = false;\n            break;\n          }\n        }\n        if (flag)\n        {\n          this._notifications.splice(i, 1);\n        }\n      }\n    }\n    else if (typeof tags === 'string')\n    {\n      for(let i = this._notifications.length - 1; i >= 0; --i)\n      {\n        const notification = this._notifications[i];\n        if (notification.hasTag(tags))\n        {\n          this._notifications.splice(i, 1);\n        }\n      }\n    }\n    else\n    {\n      this._notifications.length = 0;\n    }\n  }\n\n  //DuckType(SessionListener)\n  onSessionStart(session)\n  {\n    //Overwrite any changes to default notifications...\n    this.registerNotificationLayout(DEFAULT_LAYOUT_ID, props => <DefaultNotificationLayout styleType={STYLE_TYPE_DEFAULT} {...props}/>);\n    this.registerNotificationLayout(WARNING_LAYOUT_ID, props => <DefaultNotificationLayout styleType={STYLE_TYPE_WARNING} {...props}/>);\n    this.registerNotificationLayout(ERROR_LAYOUT_ID, props => <DefaultNotificationLayout styleType={STYLE_TYPE_ERROR} {...props}/>);\n    this.registerNotificationLayout(SUCCESS_LAYOUT_ID, props => <DefaultNotificationLayout styleType={STYLE_TYPE_SUCCESS} {...props}/>);\n  }\n\n  //DuckType(SessionListener)\n  onSessionStop(session)\n  {\n    this.clearNotifications();\n  }\n\n  hasNotificationLayout(layoutID)\n  {\n    return this._layouts.has(layoutID);\n  }\n\n  getNotificationLayout(layoutID)\n  {\n    return this._layouts.get(layoutID);\n  }\n\n  getNotifications()\n  {\n    return this._notifications;\n  }\n\n  isEmpty()\n  {\n    return this._notifications.length <= 0;\n  }\n}\n\nexport default NotificationManager;\n","/**\n * Used by InputAdapter to handle input event logic.\n */\nclass AbstractInputHandler\n{\n  constructor() {}\n\n  /**\n   * Called by InputAdapter before an InputEvent begins.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not begin.\n   */\n  onPreInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter when an InputEvent resolves and is not an Alt input.\n   * To handle events for Alt inputs, refer to onAltInputEvent().\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events.\n   */\n  onInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter when an InputEvent resolves and is an Alt input.\n   * To handle events for non-Alt inputs, refer to onInputEvent().\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events.\n   */\n  onAltInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter when a DblInputEvent resolves. The input is\n   * assumed by a non-Alt input, since only non-Alt inputs can trigger this\n   * event.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events.\n   */\n  onDblInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter when input movess. The input is called before drag\n   * logic.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events (i.e. dragging events).\n   */\n  onMoveInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter before a drag begins. The input could be either\n   * an Alt or non-Alt input.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events, nor continue the drag input.\n   */\n  onDragStart(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter while dragging moves. The input could be either\n   * an Alt or non-Alt input.\n   * Will always be called after onDragStart() and will be followed by\n   * onDragStop() when complete.\n   */\n  onDragMove(pointer) {}\n\n  /**\n   * Called by InputAdapter after a drag ends. The input could be either an\n   * Alt or non-Alt input.\n   * Will always be called after onDragStart(). Although onDragMove may be\n   * called in-between, it is not guaranteed.\n   */\n  onDragStop(pointer) {}\n\n  /**\n   * Called by InputAdapter after an InputEvent ends.\n   */\n  onPostInputEvent(pointer) {}\n\n  /**\n   * Called by InputAdapter when zoom changes.\n   * Returns true if event is consumed (zoom will not be applied)\n   */\n  onZoomChange(pointer, zoomValue, prevValue)\n  {\n    return false;\n  }\n}\n\nexport default AbstractInputHandler;\n","export const RENDER_LAYER_WORKSPACE = \"workspace\";\nexport const RENDER_LAYER_WORKSPACE_OVERLAY = \"workspace-overlay\";\nexport const RENDER_LAYER_VIEWPORT = \"viewport\";\nexport const RENDER_LAYER_VIEWPORT_OVERLAY = \"viewport-overlay\";\n\nclass RenderManager\n{\n  constructor()\n  {\n    this._renderMapping = new Map();\n  }\n\n  addRenderer(layerID, rendererClass)\n  {\n    if (this._renderMapping.has(layerID))\n    {\n      this._renderMapping.get(layerID).push(rendererClass);\n    }\n    else\n    {\n      this._renderMapping.set(layerID, [rendererClass]);\n    }\n    return this;\n  }\n\n  //DuckType(SessionListener)\n  onSessionStart(session)\n  {\n\n  }\n\n  //DuckType(SessionListener)\n  onSessionStop(session)\n  {\n    this._renderMapping.clear();\n  }\n\n  getRenderersByLayer(layerID)\n  {\n    return this._renderMapping.get(layerID);\n  }\n}\n\nexport default RenderManager;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 56 56\">\n        <path fill=\"#E9E9E0\" d=\"M36.985,0H7.963C7.155,0,6.5,0.655,6.5,1.926V55c0,0.345,0.655,1,1.463,1h40.074 c0.808,0,1.463-0.655,1.463-1V12.978c0-0.696-0.093-0.92-0.257-1.085L37.607,0.257C37.442,0.093,37.218,0,36.985,0z\"/>\n        <polygon fill=\"#D9D7CA\" points=\"37.5,0.151 37.5,12 49.349,12 \t\"/>\n        <path fill=\"#9777A8\" d=\"M48.037,56H7.963C7.155,56,6.5,55.345,6.5,54.537V39h43v15.537C49.5,55.345,48.845,56,48.037,56z\"/>\n        <path fill=\"#FFFFFF\" d={\"M17.021,42.719v7.848c0,0.474-0.087,0.873-0.26,1.196s-0.405,0.583-0.697,0.779 s-0.627,0.333-1.005,0.41c-0.378,0.077-0.768,0.116-1.169,0.116c-0.2,0-0.436-0.021-0.704-0.062s-0.547-0.104-0.834-0.191 s-0.563-0.185-0.827-0.294s-0.487-0.232-0.67-0.369l0.697-1.107c0.091,0.063,0.221,0.13,0.39,0.198s0.354,0.132,0.554,0.191 s0.41,0.111,0.629,0.157s0.424,0.068,0.615,0.068c0.483,0,0.868-0.094,1.155-0.28s0.439-0.504,0.458-0.95v-7.711H17.021z\"}/>\n        <path fill=\"#FFFFFF\" d={\"M25.184,50.238c0,0.364-0.075,0.718-0.226,1.06s-0.362,0.643-0.636,0.902s-0.61,0.467-1.012,0.622 s-0.856,0.232-1.367,0.232c-0.219,0-0.444-0.012-0.677-0.034s-0.467-0.062-0.704-0.116c-0.237-0.055-0.463-0.13-0.677-0.226 s-0.398-0.212-0.554-0.349l0.287-1.176c0.128,0.073,0.289,0.144,0.485,0.212s0.398,0.132,0.608,0.191s0.419,0.107,0.629,0.144 s0.405,0.055,0.588,0.055c0.556,0,0.982-0.13,1.278-0.39s0.444-0.645,0.444-1.155c0-0.31-0.104-0.574-0.314-0.793 s-0.472-0.417-0.786-0.595s-0.654-0.355-1.019-0.533s-0.706-0.388-1.025-0.629s-0.583-0.526-0.793-0.854s-0.314-0.738-0.314-1.23 c0-0.446,0.082-0.843,0.246-1.189s0.385-0.641,0.663-0.882s0.602-0.426,0.971-0.554s0.759-0.191,1.169-0.191 c0.419,0,0.843,0.039,1.271,0.116s0.774,0.203,1.039,0.376c-0.055,0.118-0.118,0.248-0.191,0.39s-0.142,0.273-0.205,0.396 s-0.118,0.226-0.164,0.308s-0.073,0.128-0.082,0.137c-0.055-0.027-0.116-0.063-0.185-0.109s-0.166-0.091-0.294-0.137 s-0.296-0.077-0.506-0.096s-0.479-0.014-0.807,0.014c-0.183,0.019-0.355,0.07-0.52,0.157s-0.31,0.193-0.438,0.321 s-0.228,0.271-0.301,0.431s-0.109,0.313-0.109,0.458c0,0.364,0.104,0.658,0.314,0.882s0.47,0.419,0.779,0.588 s0.647,0.333,1.012,0.492s0.704,0.354,1.019,0.581s0.576,0.513,0.786,0.854S25.184,49.7,25.184,50.238z\"}/>\n        <path fill=\"#FFFFFF\" d={\"M35.082,47.914c0,0.848-0.107,1.595-0.321,2.242s-0.511,1.185-0.889,1.613s-0.82,0.752-1.326,0.971 s-1.06,0.328-1.661,0.328s-1.155-0.109-1.661-0.328s-0.948-0.542-1.326-0.971s-0.675-0.966-0.889-1.613s-0.321-1.395-0.321-2.242 s0.107-1.593,0.321-2.235s0.511-1.178,0.889-1.606s0.82-0.754,1.326-0.978s1.06-0.335,1.661-0.335s1.155,0.111,1.661,0.335 s0.948,0.549,1.326,0.978s0.675,0.964,0.889,1.606S35.082,47.066,35.082,47.914z M30.844,51.729c0.337,0,0.658-0.066,0.964-0.198 s0.579-0.349,0.82-0.649s0.431-0.695,0.567-1.183s0.21-1.082,0.219-1.784c-0.009-0.684-0.08-1.265-0.212-1.743 s-0.314-0.873-0.547-1.183s-0.497-0.533-0.793-0.67s-0.608-0.205-0.937-0.205c-0.337,0-0.658,0.063-0.964,0.191 s-0.579,0.344-0.82,0.649s-0.431,0.699-0.567,1.183c-0.137,0.483-0.21,1.075-0.219,1.777c0.009,0.684,0.08,1.267,0.212,1.75 s0.314,0.877,0.547,1.183s0.497,0.528,0.793,0.67S30.516,51.729,30.844,51.729z\"}/>\n        <path fill=\"#FFFFFF\" d=\"M44.68,42.924V53h-1.668l-3.951-6.945V53h-1.668V42.924h1.668l3.951,6.945v-6.945H44.68z\"/>\n        <path fill=\"#9777A8\" d=\"M19.5,19v-4c0-0.551,0.448-1,1-1c0.553,0,1-0.448,1-1s-0.447-1-1-1c-1.654,0-3,1.346-3,3v4 c0,1.103-0.897,2-2,2c-0.553,0-1,0.448-1,1s0.447,1,1,1c1.103,0,2,0.897,2,2v4c0,1.654,1.346,3,3,3c0.553,0,1-0.448,1-1 s-0.447-1-1-1c-0.552,0-1-0.449-1-1v-4c0-1.2-0.542-2.266-1.382-3C18.958,21.266,19.5,20.2,19.5,19z\"/>\n        <circle fill=\"#9777A8\" cx=\"27.5\" cy=\"18.5\" r=\"1.5\"/>\n        <path fill=\"#9777A8\" d=\"M39.5,21c-1.103,0-2-0.897-2-2v-4c0-1.654-1.346-3-3-3c-0.553,0-1,0.448-1,1s0.447,1,1,1 c0.552,0,1,0.449,1,1v4c0,1.2,0.542,2.266,1.382,3c-0.84,0.734-1.382,1.8-1.382,3v4c0,0.551-0.448,1-1,1c-0.553,0-1,0.448-1,1 s0.447,1,1,1c1.654,0,3-1.346,3-3v-4c0-1.103,0.897-2,2-2c0.553,0,1-0.448,1-1S40.053,21,39.5,21z\"/>\n        <path fill=\"#9777A8\" d=\"M27.5,24c-0.553,0-1,0.448-1,1v3c0,0.552,0.447,1,1,1s1-0.448,1-1v-3 C28.5,24.448,28.053,24,27.5,24z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","class InputHandler\n{\n  isTargetable(inputController, pointer, target, targetType)\n  {\n    return false;\n  }\n\n  onAction(inputController, graphController, pointer, target)\n  {\n    return false;\n  }\n\n  onDblAction(inputController, graphController, pointer, target)\n  {\n    return false;\n  }\n\n  onDragStart(inputController, graphController, pointer, target)\n  {\n    return false;\n  }\n\n  onDragMove(inputController, graphController, pointer, target)\n  {\n    return false;\n  }\n\n  onDragStop(inputController, graphController, pointer, target)\n  {\n    return false;\n  }\n}\nexport default InputHandler;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","class AbstractEventHandler\n{\n  constructor() {}\n\n  applyUndo(undoManager)\n  {\n    throw new Error(\"Undo operation for handler not supported\");\n  }\n\n  applyRedo(undoManager)\n  {\n    throw new Error(\"Redo operation for handler not supported\");\n  }\n}\n\nexport default AbstractEventHandler;\n","import React from 'react';\nimport IconButton from './IconButton.js';\n\nclass IconStateButton extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.state = {\n      index: props.initial || 0\n    };\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e)\n  {\n    const prevIndex = this.state.index;\n    this.setState((prev, props) => {\n      const count = React.Children.count(props.children);\n      let nextIndex = prev.index + 1;\n      if (nextIndex >= count)\n      {\n        nextIndex = 0;\n      }\n      return {index: nextIndex};\n    }, () => {\n      if (this.props.onClick)\n      {\n        this.props.onClick(e, prevIndex);\n      }\n    });\n  }\n\n  setStateIndex(index)\n  {\n    this.setState({index: index});\n  }\n\n  getStateIndex()\n  {\n    return this.state.index;\n  }\n\n  //Override\n  render()\n  {\n    const child = React.Children.map(this.props.children, (child, i) => {\n      if (i === this.state.index) return child;\n    })[0];\n\n    return (\n      <IconButton id={this.props.id}\n        className={this.props.className}\n        style={this.props.style}\n        title={this.props.title}\n        disabled={this.props.disabled}\n        onClick={this.onClick}>\n        {child}\n      </IconButton>\n    );\n  }\n}\nexport default IconStateButton;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './FullscreenWidget.css';\n\nimport IconStateButton from 'experimental/components/IconStateButton.js';\nimport FullscreenIcon from 'experimental/iconset/FullscreenIcon.js';\nimport FullscreenExitIcon from 'experimental/iconset/FullscreenExitIcon.js';\n\nclass FullscreenWidget extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const app = this.props.app;\n\n    return (\n      <IconStateButton id={this.props.id}\n        className={Style.fullscreen_button + \" \" + this.props.className}\n        style={this.props.style}\n        title={\"Fullscreen Mode\"}\n        onClick={(e, i) => app.setState({hide: (i === 0)})}>\n        <FullscreenIcon/>\n        <FullscreenExitIcon/>\n      </IconStateButton>\n    );\n  }\n}\n\nexport default FullscreenWidget;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n        <path d=\"M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14zM7 9h5v1H7z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './ZoomWidget.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport ZoomInIcon from 'experimental/iconset/ZoomInIcon.js';\nimport ZoomOutIcon from 'experimental/iconset/ZoomOutIcon.js';\n\nclass ZoomWidget extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.onZoomIn = this.onZoomIn.bind(this);\n    this.onZoomOut = this.onZoomOut.bind(this);\n  }\n\n  onZoomIn(e)\n  {\n    const viewport = this.props.viewport;\n    const viewScale = -viewport.getScale() * 0.4;\n    viewport.addScale(viewScale);\n  }\n\n  onZoomOut(e)\n  {\n    const viewport = this.props.viewport;\n    const viewScale = viewport.getScale() * 0.75;\n    viewport.addScale(viewScale);\n  }\n\n  //Override\n  render()\n  {\n    const viewport = this.props.viewport;\n    const viewScale = \"x\" + (1 / (viewport.getScale() || 1)).toFixed(2);\n\n    return (\n      <div id={this.props.id}\n        className={Style.zoom_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <IconButton className={Style.zoom_button} title=\"Zoom In\" onClick={this.onZoomIn}>\n          <ZoomInIcon/>\n        </IconButton>\n        <IconButton className={Style.zoom_button} title=\"Zoom Out\" onClick={this.onZoomOut}>\n          <ZoomOutIcon/>\n        </IconButton>\n        <label className={Style.zoom_label}>{viewScale}</label>\n      </div>\n    );\n  }\n}\n\nexport default ZoomWidget;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm8.94 3c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06C6.83 3.52 3.52 6.83 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c4.17-.46 7.48-3.77 7.94-7.94H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './FocusCenterWidget.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport PinpointIcon from 'experimental/iconset/PinpointIcon.js';\n\nconst OFFSET_EPSILON = 0.1;\n\nclass FocusCenterWidget extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e)\n  {\n    const viewport = this.props.viewport;\n    viewport.setOffset(0, 0);\n  }\n\n  //Override\n  render()\n  {\n    const viewport = this.props.viewport;\n\n    return (\n      <IconButton id={this.props.id}\n        className={Style.center_focus_button +\n          \" \" + this.props.className}\n        style={this.props.style}\n        title={\"Center Workspace\"}\n        disabled={Math.abs(viewport.getOffsetX()) < OFFSET_EPSILON &&\n          Math.abs(viewport.getOffsetY()) < OFFSET_EPSILON} onClick={this.onClick}>\n        <PinpointIcon/>\n      </IconButton>\n    );\n  }\n}\n\nexport default FocusCenterWidget;\n","import React from 'react';\nimport Style from './NavbarWidget.css';\n\nimport FullscreenWidget from 'experimental/widgets/FullscreenWidget.js';\nimport ZoomWidget from 'experimental/widgets/ZoomWidget.js';\nimport FocusCenterWidget from 'experimental/widgets/FocusCenterWidget.js';\n\nclass NavbarWidget extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const app = this.props.app;\n    const viewport = app.getInputAdapter().getViewport();\n\n    return (\n      <div id={this.props.id}\n        className={Style.navbar_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <FullscreenWidget className={Style.navbar_widget} app={app}/>\n        <ZoomWidget className={Style.navbar_widget_container} viewport={viewport}/>\n        <FocusCenterWidget className={Style.navbar_widget} viewport={viewport}/>\n      </div>\n    );\n  }\n}\n\nexport default NavbarWidget;\n","import React from 'react';\n\nconst QUAD_RADIAN_THRESHOLD = 0.01;\nconst QUAD_REVERSE_OFFSET_THRESHOLD = 4;\nconst ARROW_WIDTH = 10;\nconst SIXTH_PI = Math.PI / 6;\n\nexport const DIRECTED_FORWARD = \"forward\";\nexport const DIRECTED_BACKWARD = \"backward\";\nexport const DIRECTED_BOTH = \"both\";\nexport const DIRECTED_NONE = \"undirected\";\n\nexport const DefaultEndpointRenderer = props => (\n  <>\n    <path d={\n      \"M \" +\n        (props.position.x - (props.length * Math.sin(props.angle - SIXTH_PI))) +\n        \" \" +\n        (props.position.y - (props.length * Math.cos(props.angle - SIXTH_PI))) +\n        \" \" +\n        \"L \" + props.position.x + \" \" + props.position.y +\n        \" \" +\n        \"L \" +\n        (props.position.x - (props.length * Math.sin(props.angle + SIXTH_PI))) +\n        \" \" +\n        (props.position.y - (props.length * Math.cos(props.angle + SIXTH_PI)))\n    }\n    stroke={props.color}\n    fill=\"none\"/>\n  </>\n);\n\nexport const DefaultLabelRenderer = props => (\n  <g transform={\"translate(\" + props.position.x + \",\" + props.position.y + \")\" +\n    \" \" +\n    \"rotate(\" + (props.direction * 180 / Math.PI) + \")\"}>\n    {\n      props.labels && props.labels.length > 0 &&\n      props.labels.map((str, i) => {\n        return (\n          <text key={str + \".\" + i}\n            transform={\"translate(0,\" + ((i + 1) * -15) + \")\" +\n              (props.reverse ? \" scale(-1,-1)\" : \"\")}\n            alignmentBaseline=\"central\"\n            pointerEvents=\"none\"\n            style={{userSelect: \"none\"}}\n            textAnchor=\"middle\"\n            fill={props.color}>\n            {str}\n          </text>\n        );\n      })\n    }\n  </g>\n);\n\nclass EdgeRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const directed = this.props.directed || DIRECTED_NONE;\n\n    const ForwardEndpointRenderer =\n      (directed === DIRECTED_FORWARD || directed === DIRECTED_BOTH) ?\n        (this.props.forwardEndpointRenderer ||\n        this.props.endpointRenderer ||\n        DefaultEndpointRenderer) : null;\n    const BackwardEndpointRenderer =\n      (directed === DIRECTED_BACKWARD || directed === DIRECTED_BOTH) ?\n        (this.props.backwardEndpointRenderer ||\n        this.props.endpointRenderer ||\n        DefaultEndpointRenderer) : null;\n    const EdgeLabelRenderer = this.props.labelRenderer || DefaultLabelRenderer;\n\n    const fromPoint = this.props.from;\n    const toPoint = this.props.to;\n    const centerPoint = this.props.center;\n    const label = this.props.label || \"\";\n    const direction = this.props.direction || 0;\n    const color = this.props.color || \"#000000\";\n\n    let reverseLabel = false;\n    let fromAngle;\n    let toAngle;\n    let quadLine = null;\n\n    const dftx = fromPoint.x - toPoint.x;\n    const dfty = fromPoint.y - toPoint.y;\n    const dfcx = fromPoint.x - centerPoint.x;\n    const dfcy = fromPoint.y - centerPoint.y;\n    const ftrad = Math.atan2(dfty, dftx);\n    const fcrad = Math.atan2(dfcy, dfcx);\n    if (Math.abs(ftrad - fcrad) <= QUAD_RADIAN_THRESHOLD)\n    {\n      toAngle = Math.atan2(centerPoint.x - toPoint.x, centerPoint.y - toPoint.y) + Math.PI;\n      fromAngle = Math.atan2(centerPoint.x - fromPoint.x, centerPoint.y - fromPoint.y) + Math.PI;\n      quadLine = \"L \" + toPoint.x + \" \" + toPoint.y;\n      reverseLabel = false;\n    }\n    else\n    {\n      const cx = ((centerPoint.x * 4) - fromPoint.x - toPoint.x) / 2;\n      const cy = ((centerPoint.y * 4) - fromPoint.y - toPoint.y) / 2;\n      toAngle = Math.atan2(cx - toPoint.x, cy - toPoint.y) + Math.PI;\n      fromAngle = Math.atan2(cx - fromPoint.x, cy - fromPoint.y) + Math.PI;\n      quadLine = \"Q \" + cx + \" \" + cy + \" \" + toPoint.x + \" \" + toPoint.y;\n      reverseLabel = cy > centerPoint.y + QUAD_REVERSE_OFFSET_THRESHOLD;\n    }\n\n    return (\n      <g>\n        <path d={\"M \" + fromPoint.x + \" \" + fromPoint.y + \" \" + quadLine}\n          stroke={color}\n          fill=\"none\"/>\n        {ForwardEndpointRenderer &&\n          <ForwardEndpointRenderer position={toPoint} angle={toAngle} length={ARROW_WIDTH} color={color}/>}\n        {BackwardEndpointRenderer &&\n          <BackwardEndpointRenderer position={fromPoint} angle={fromAngle} length={ARROW_WIDTH} color={color}/>}\n        {EdgeLabelRenderer &&\n          <EdgeLabelRenderer position={centerPoint} labels={label.split('\\n')} direction={direction} reverse={reverseLabel} color={color}/>}\n      </g>\n    );\n  }\n}\n\nexport default EdgeRenderer;\n","import AbstractGraphExporter from 'session/manager/export/AbstractGraphExporter.js';\n\nimport PNGIcon from 'deprecated/icons/flat/PNGIcon.js';\nimport JPGIcon from 'deprecated/icons/flat/JPGIcon.js';\nimport XMLIcon from 'deprecated/icons/flat/XMLIcon.js';\nimport SVGIcon from 'deprecated/icons/flat/SVGIcon.js';\nimport { FILE_TYPE_PNG, FILE_TYPE_JPG, FILE_TYPE_SVG, downloadImageFromSVG } from 'util/Downloader.js';\n\nconst EXPORT_PADDING_X = 30;\nconst EXPORT_PADDING_Y = 0;\n\nclass GraphImageExporter extends AbstractGraphExporter\n{\n  constructor(imageType=FILE_TYPE_PNG)\n  {\n    super();\n    this._imageType = imageType;\n  }\n\n  processSVGForExport(element, width, height, currentModule)\n  {\n    const graphController = currentModule.getGraphController();\n\n    const viewport = currentModule.getApp().getInputAdapter().getViewport();\n    const offsetX = viewport.getOffsetX();\n    const offsetY = viewport.getOffsetY();\n    const bounds = graphController.getGraph().getBoundingRect();\n    const dx = bounds.minX + offsetX - EXPORT_PADDING_X;\n    const dy = bounds.minY + offsetY - EXPORT_PADDING_Y;\n    const w = bounds.width + EXPORT_PADDING_X * 2;\n    const h = bounds.height + EXPORT_PADDING_Y * 2;\n    const clone = element.cloneNode(true);\n    clone.setAttribute('viewBox', dx + \" \" + dy + \" \" + w + \" \" + h);\n    clone.setAttribute('width', width);\n    clone.setAttribute('height', height);\n\n    //Apply the workspace font (refer to Workspace.css)\n    clone.setAttribute('font-size', \"16px\");\n    clone.setAttribute('font-family', \"monospace\");\n    clone.setAttribute('style', \".graph-ui {display: none;}\");\n\n    /*\n\n    const nodeColor = styleOpts.getOptionByProp(\"--color-graph-node\").getStyle();\n    const textColor = styleOpts.getOptionByProp(\"--color-graph-text\").getStyle();\n    console.log(nodeColor);\n    const styleString = \"* {\"\n      + \"--color-graph-node: blue;\"\n      + \"--color-graph-text: \" + textColor + \";\"\n      + \"}\";\n\n    */\n\n    /*\n    //TODO: Link the font family to svg\n    const link = document.createElement(\"link\");\n    link.setAttribute(\"rel\", \"stylesheet\");\n    clone.appendChild(link);\n    */\n\n    //Remove unwanted ui elements from image\n    const uiElements = clone.getElementsByClassName(\"graph-ui\");\n    while(uiElements.length > 0)\n    {\n      const e = uiElements[0];\n      e.remove();//This will propagate changes to uiElements, so be careful\n    }\n\n    return clone;\n  }\n\n  //Override\n  exportToFile(filename, module)\n  {\n    const workspace = module.getApp().workspace;\n    const svgElement = workspace.getSVGElement();\n    const workspaceDim = svgElement.viewBox.baseVal;\n    const width = workspaceDim.width;\n    const height = workspaceDim.height;\n    const svg = this.processSVGForExport(svgElement, width, height, module);\n\n    downloadImageFromSVG(filename, this._imageType, svg, width, height);\n  }\n\n  //Override\n  doesSupportFile()\n  {\n    return true;\n  }\n\n  //Override\n  canImport(module)\n  {\n    return false;\n  }\n\n  //Override\n  getTitle()\n  {\n    switch(this._imageType)\n    {\n      case FILE_TYPE_PNG: return I18N.toString(\"file.export.png.hint\");\n      case FILE_TYPE_JPG: return I18N.toString(\"file.export.jpg.hint\");\n      case FILE_TYPE_SVG: return I18N.toString(\"file.export.svg.hint\");\n      default: return super.getTitle();\n    }\n  }\n\n  //Override\n  getLabel()\n  {\n    switch(this._imageType)\n    {\n      case FILE_TYPE_PNG: return I18N.toString(\"file.export.png\");\n      case FILE_TYPE_JPG: return I18N.toString(\"file.export.jpg\");\n      case FILE_TYPE_SVG: return I18N.toString(\"file.export.svg\");\n      default: return super.getLabel();\n    }\n  }\n\n  //Override\n  getFileType()\n  {\n    return this._imageType;\n  }\n\n  //Override\n  getIconClass()\n  {\n    switch(this._imageType)\n    {\n      case FILE_TYPE_PNG: return PNGIcon;\n      case FILE_TYPE_JPG: return JPGIcon;\n      case FILE_TYPE_SVG: return SVGIcon;\n      default: return null;\n    }\n  }\n}\n\nexport const DEFAULT_IMAGE_EXPORTERS = [\n  new GraphImageExporter(FILE_TYPE_PNG),\n  new GraphImageExporter(FILE_TYPE_JPG),\n  new GraphImageExporter(FILE_TYPE_SVG)\n];\n\nexport default GraphImageExporter;\n","import AbstractEventHandler from 'session/manager/undo/AbstractEventHandler.js';\n\nclass SafeGraphEventHandler extends AbstractEventHandler\n{\n  constructor(graphController, graphParser)\n  {\n    super();\n\n    this._graphController = graphController;\n    this._graphParser = graphParser;\n    this._graphData = graphParser.objectify(graphController.getGraph());\n  }\n\n  //Override\n  applyUndo(undoManager)\n  {\n    const prevEvent = undoManager.getPreviousEvent();\n    if (prevEvent instanceof SafeGraphEventHandler)\n    {\n      prevEvent.applyRedo(undoManager);\n    }\n    else\n    {\n      this._graphController.getGraph().clear();\n    }\n  }\n\n  //Override\n  applyRedo(undoManager)\n  {\n    this._graphParser.parse(this._graphData, this._graphController.getGraph());\n  }\n}\nexport default SafeGraphEventHandler;\n","import GraphElementInputHandler from './GraphElementInputHandler.js';\n\nconst SNAP_TO_GRID = true;\nconst SNAP_SIZE = 48;\n\nclass GraphNodeInputHandler extends GraphElementInputHandler\n{\n  constructor()\n  {\n    super(\"node\");\n  }\n\n  //Override\n  onAction(inputController, graphController, pointer, target)\n  {\n    const picker = inputController.getPicker();\n    const selectionBox = inputController.getSelectionBox();\n\n    //Click to delete node\n    if (inputController.isTrashMode())\n    {\n      //So that the emitted 'delete' events can use this\n      graphController.prevX = target.x;\n      graphController.prevY = target.y;\n\n      //If there exists selected states, delete them all!\n      if (selectionBox.hasSelection())\n      {\n        //Delete all selected nodes\n        graphController.deleteSelectedNodes(target);\n      }\n      else\n      {\n        //Delete a single node\n        graphController.deleteTargetNode(target);\n      }\n      return true;\n    }\n    else if (inputController.isMoveMode())\n    {\n      //Edit label for selected node\n      graphController.openLabelEditor(target, target.getNodeLabel());\n    }\n\n    return false;\n  }\n\n  //Override\n  onDragStart(inputController, graphController, pointer, target)\n  {\n    if (inputController.isMoveMode())\n    {\n      //Moving node (and selected nodes)\n      graphController.prevX = target.x;\n      graphController.prevY = target.y;\n    }\n    else\n    {\n      const picker = inputController.getPicker();\n      const graph = graphController.getGraph();\n      const edge = graph.createEdge(target, pointer);\n      edge.setEdgeLabel(graphController.getGraphLabeler().getDefaultEdgeLabel());\n\n      //Redirect pointer to refer to the edge as the new target\n      picker.setInitialTarget(edge, \"endpoint\");\n      inputController.isNewEdge = true;\n\n      //Reset previous quad values for new proxy edge\n      const edgeQuad = edge.getQuadratic();\n      graphController.prevQuad.radians = edgeQuad.radians;\n      graphController.prevQuad.length = edgeQuad.length;\n      graphController.prevEdgeTo = null;\n\n      //Ready to move proxy edge to pointer...\n    }\n    return true;\n  }\n\n  //Override\n  onDragMove(inputController, graphController, pointer, target)\n  {\n    const picker = inputController.getPicker();\n    const selectionBox = inputController.getSelectionBox();\n    const graph = graphController.getGraph();\n    let x = pointer.x;\n    let y = pointer.y;\n\n    if (inputController._snapToGrid)\n    {\n      const snapSize = inputController._snapSize;\n      x = Math.round(x / snapSize) * snapSize;\n      y = Math.round(y / snapSize) * snapSize;\n    }\n\n    if (selectionBox.hasSelection())\n    {\n      graphController.moveMultipleNodesTo(pointer, selectionBox.getSelection(graph), x, y);\n    }\n    else\n    {\n      graphController.moveNodeTo(pointer, target, x, y);\n    }\n    return true;\n  }\n\n  //Override\n  onDragStop(inputController, graphController, pointer, target)\n  {\n    const picker = inputController.getPicker();\n    const selectionBox = inputController.getSelectionBox();\n    const graph = graphController.getGraph();\n    const x = pointer.x;\n    const y = pointer.y;\n\n    //Delete it if withing trash area...\n    if (inputController.isTrashMode())\n    {\n      //If there exists selected states, delete them all!\n      if (selectionBox.hasSelection())\n      {\n        graphController.deleteSelectedNodes(target);\n      }\n      else\n      {\n        //Delete a single node\n        graphController.deleteTargetNode(target);\n      }\n\n      return true;\n    }\n    //If dragged to an empty space (not trash)\n    else\n    {\n      //Do nothing, since should have moved to position\n      if (selectionBox.hasSelection())\n      {\n        const dx = x - graphController.prevX;\n        const dy = y - graphController.prevY;\n        graphController.onGraphIntentMoveAllNodes(selectionBox.getSelection(graph), dx, dy);\n        //graphController.emit(\"nodeMoveAll\", graph, picker.getSelection(graph), dx, dy);\n      }\n      else\n      {\n        graphController.onGraphIntentMoveNode(target, x, y, graphController.prevX, graphController.prevY);\n        //graphController.emit(\"nodeMove\", graph, target, x, y, graphController.prevX, graphController.prevY);\n      }\n      return true;\n    }\n\n    return false;\n  }\n}\n\nexport default GraphNodeInputHandler;\n","import GraphElementInputHandler from './GraphElementInputHandler.js';\n\nclass GraphEdgeInputHandler extends GraphElementInputHandler\n{\n  constructor()\n  {\n    super(\"edge\");\n  }\n\n  //Override\n  onAction(inputController, graphController, pointer, target)\n  {\n    if (inputController.isTrashMode())\n    {\n      //Delete a single edge\n      graphController.deleteTargetEdge(target);\n    }\n    else\n    {\n      //Edit label for selected edge\n      graphController.openLabelEditor(target, target.getEdgeLabel());\n    }\n    return true;\n  }\n\n  //Override\n  onDragStart(inputController, graphController, pointer, target)\n  {\n    //Makes sure that placeholders are not quadratics!\n    if (target.isPlaceholder())\n    {\n      return false;\n    }\n\n    //Save previous quadratics\n    const targetQuad = target.getQuadratic();\n    graphController.prevQuad.radians = targetQuad.radians;\n    graphController.prevQuad.length = targetQuad.length;\n\n    //Ready to move the edge vertex to pointer...\n    return true;\n  }\n\n  //Override\n  onDragMove(inputController, graphController, pointer, target)\n  {\n    graphController.moveEdgeTo(pointer, target, pointer.x, pointer.y);\n    return true;\n  }\n\n  //Override\n  onDragStop(inputController, graphController, pointer, target)\n  {\n    const graph = graphController.getGraph();\n\n    //Delete it if withing trash area...\n    if (inputController.isTrashMode())\n    {\n      graphController.deleteTargetEdge(target);\n    }\n    else\n    {\n      //Do nothing, since should have moved to position\n      graphController.onGraphIntentMoveEdge(target, target.getQuadratic(), graphController.prevQuad);\n      //graphController.emit(\"edgeMove\", graph, target, target.getQuadratic(), graphController.prevQuad);\n    }\n    return true;\n  }\n}\n\nexport default GraphEdgeInputHandler;\n","import GraphElementInputHandler from './GraphElementInputHandler.js';\nimport GraphNode from 'graph/GraphNode.js';\n\nclass GraphEndpointInputHandler extends GraphElementInputHandler\n{\n  constructor()\n  {\n    super(\"endpoint\");\n  }\n\n  //Override\n  onAction(inputController, graphController, pointer, target)\n  {\n    if (inputController.isTrashMode())\n    {\n      //Delete a single edge\n      graphController.deleteTargetEdge(target);\n      return true;\n    }\n    return false;\n  }\n\n  //Override\n  onDragStart(inputController, graphController, pointer, target)\n  {\n    const targetQuad = target.getQuadratic();\n    graphController.prevQuad.radians = targetQuad.radians;\n    graphController.prevQuad.length = targetQuad.length;\n    graphController.prevEdgeTo = target.getDestinationNode();\n\n    inputController.isNewEdge = false;\n\n    //Ready to move the edge endpoint to pointer...\n    return true;\n  }\n\n  //Override\n  onDragMove(inputController, graphController, pointer, target)\n  {\n    graphController.moveEndpointTo(pointer, target, pointer.x, pointer.y);\n    return true;\n  }\n\n  //Override\n  onDragStop(inputController, graphController, pointer, target)\n  {\n    const graph = graphController.getGraph();\n    const x = pointer.x;\n    const y = pointer.y;\n\n    //Delete it if withing trash area...\n    if (inputController.isTrashMode())\n    {\n      graphController.deleteTargetEdge(target);\n      return true;\n    }\n    //If hovering over a node...\n    else if (target.getDestinationNode() instanceof GraphNode)\n    {\n      const result = graph.formatEdge(target);\n\n      //If a different edge is the result of the target...\n      if (result !== target)\n      {\n        //Allow the user to edit the merged labels\n        graphController.openLabelEditor(result, result.getEdgeLabel());\n\n        //Delete the merged label\n        graph.deleteEdge(target);\n        return true;\n      }\n      //Open label editor if a new edge...\n      else\n      {\n        if (inputController.isNewEdge)\n        {\n          graphController.openLabelEditor(result, \"\", (target, value) => graphController.onGraphIntentFinishEdge(target));\n        }\n        else\n        {\n          graphController.openLabelEditor(target, target.getEdgeLabel());\n        }\n      }\n\n      if (inputController.isNewEdge)\n      {\n        //Must be after openLabelEditor() to allow the function to check it...\n        inputController.isNewEdge = false;\n\n        //Emit event\n        graphController.onGraphIntentCreateEdge(target);\n      }\n      else if (graphController.prevEdgeTo !== null)\n      {\n        //Emit event\n        graphController.onGraphIntentChangeDestination(target, target.getDestinationNode(), graphController.prevEdgeTo, graphController.prevQuad);\n      }\n\n      return true;\n    }\n    //If hovering over anything else...\n    else\n    {\n      //Destroy any edge that no longer have a destination\n      if (inputController.shouldDestroyPointlessEdges)\n      {\n        if (!inputController.isNewEdge)\n        {\n          graphController.deleteTargetEdge(target);\n        }\n        else\n        {\n          graph.deleteEdge(target);\n        }\n        return true;\n      }\n      //Keep edges as placeholders (used in DFA's)\n      else\n      {\n        target.changeDestinationNode(null);\n\n        //Open label editor if default edge...\n        if (target.getEdgeLabel().length <= 0)\n        {\n          graphController.openLabelEditor(target, target.getEdgeLabel());\n        }\n        return true;\n      }\n    }\n  }\n}\n\nexport default GraphEndpointInputHandler;\n","import InputHandler from './InputHandler.js';\n\nclass GraphNodeCreateInputHandler extends InputHandler\n{\n  constructor()\n  {\n    super();\n  }\n\n  //Override\n  isTargetable(inputController, pointer, target, targetType)\n  {\n    return targetType === 'none';\n  }\n\n  //Override\n  onDblAction(inputController, graphController, pointer, target)\n  {\n    let x = pointer.x;\n    let y = pointer.y;\n\n    if (inputController._snapToGrid)\n    {\n      const snapSize = inputController._snapSize;\n      x = Math.round(x / snapSize) * snapSize;\n      y = Math.round(y / snapSize) * snapSize;\n    }\n\n    //Create node at position\n    const node = graphController.createNode(x, y);\n    //TODO: this allows nodes to move away from other nodes\n    //But undoManager does not recognize it.\n    //graphController.moveNodeTo(pointer, node, x, y);\n    return true;\n  }\n}\n\nexport default GraphNodeCreateInputHandler;\n","import PickHandler from './PickHandler.js';\n\nclass GraphNodePickHandler extends PickHandler\n{\n  constructor()\n  {\n    super();\n  }\n\n  //Override\n  getTargetAt(graph, x, y)\n  {\n    //Search graph\n    for(const node of graph.getNodes())\n    {\n      const nodeSize = node.getNodeSize();\n      const dx = x - node.x;\n      const dy = y - node.y;\n      if (dx * dx + dy * dy < nodeSize * nodeSize)\n      {\n        return node;\n      }\n    }\n    return null;\n  }\n\n  //Override\n  getTargetType() { return \"node\"; }\n}\n\nexport default GraphNodePickHandler;\n","import PickHandler from './PickHandler.js';\n\nconst EDGE_RADIUS = 12;\nconst EDGE_RADIUS_SQU = EDGE_RADIUS * EDGE_RADIUS;\n\nclass GraphEdgePickHandler extends PickHandler\n{\n  constructor()\n  {\n    super();\n  }\n\n  //Override\n  getTargetAt(graph, x, y)\n  {\n    const center = {x: 0, y: 0};\n\n    //Search graph\n    for(const edge of graph.getEdges())\n    {\n      edge.getCenterPoint(center);\n      const dx = x - center.x;\n      const dy = y - center.y;\n      if (dx * dx + dy * dy < EDGE_RADIUS_SQU)\n      {\n        return edge;\n      }\n    }\n    return null;\n  }\n\n  //Override\n  getTargetType() { return \"edge\"; }\n}\n\nexport default GraphEdgePickHandler;\n","import PickHandler from './PickHandler.js';\n\nconst ENDPOINT_RADIUS = 6;\nconst ENDPOINT_RADIUS_SQU = ENDPOINT_RADIUS * ENDPOINT_RADIUS;\n\nclass GraphEndpointPickHandler extends PickHandler\n{\n  constructor()\n  {\n    super();\n  }\n\n  //Override\n  getTargetAt(graph, x, y)\n  {\n    const end = {x: 0, y: 0};\n    //Search graph\n    for(const edge of graph.getEdges())\n    {\n      edge.getEndPoint(end);\n      const dx = x - end.x;\n      const dy = y - end.y;\n      if (dx * dx + dy * dy < ENDPOINT_RADIUS_SQU)\n      {\n        return edge;\n      }\n    }\n    return null;\n  }\n\n  //Override\n  getTargetType() { return \"endpoint\"; }\n}\n\nexport default GraphEndpointPickHandler;\n","export function userClearGraph(app, graphOnly=false, callback=null)\n{\n  if (window.confirm(I18N.toString(\"alert.graph.clear\")))\n  {\n    const module = app.getCurrentModule();\n    module.getGraphController().getGraph().clear();\n    if (!graphOnly)\n    {\n      app.getUndoManager().clear();\n      app.getSession().setProjectName(null);\n    }\n    else\n    {\n      app.getUndoManager().captureEvent();\n    }\n    if (callback) callback();\n  }\n}\n","class GraphNodeSelectionBox\n{\n  constructor()\n  {\n    this._boundingBox = {\n      fromX: 0, fromY: 0,\n      toX: 0, toY: 0,\n      visible: false\n    };\n\n    this.targets = [];\n  }\n\n  getSelectionBox()\n  {\n    return this._boundingBox;\n  }\n\n  getSelection(graph, forceUpdate=false)\n  {\n    if (forceUpdate)\n    {\n      const box = this._boundingBox;\n      const mx = Math.max(box.toX, box.fromX);\n      const my = Math.max(box.toY, box.fromY);\n      const lx = Math.min(box.toX, box.fromX);\n      const ly = Math.min(box.toY, box.fromY);\n      this.clearSelection();\n      getNodesWithin(graph, lx, ly, mx, my, this.targets);\n    }\n\n    return this.targets;\n  }\n\n  hasSelection()\n  {\n    return this.targets.length > 0;\n  }\n\n  clearSelection()\n  {\n    this.targets.length = 0;\n  }\n\n  isTargetInSelection(target)\n  {\n    return this.targets.includes(target);\n  }\n\n  beginSelection(graph, x, y)\n  {\n    const box = this._boundingBox;\n    box.fromX = box.toX = x;\n    box.fromY = box.toY = y;\n    this.clearSelection();\n\n    box.visible = true;\n  }\n\n  updateSelection(graph, x, y)\n  {\n    const box = this._boundingBox;\n    box.toX = x;\n    box.toY = y;\n    this.getSelection(graph, true);\n  }\n\n  endSelection(graph, x, y)\n  {\n    const box = this._boundingBox;\n    box.toX = x;\n    box.toY = y;\n    this.getSelection(graph, true);\n\n    box.visible = false;\n  }\n\n  isSelecting()\n  {\n    return this._boundingBox.visible;\n  }\n}\n\nfunction getNodesWithin(graph, x1, y1, x2, y2, dst)\n{\n  const fromX = Math.min(x1, x2);\n  const fromY = Math.min(y1, y2);\n  const toX = Math.max(x1, x2);\n  const toY = Math.max(y1, y2);\n\n  for(const node of graph.getNodes())\n  {\n    if (node.x >= fromX && node.x < toX &&\n        node.y >= fromY && node.y < toY)\n    {\n      dst.push(node);\n    }\n  }\n  return dst;\n}\n\nexport default GraphNodeSelectionBox;\n","const EDGE_RADIUS = 12;\nconst EDGE_RADIUS_SQU = EDGE_RADIUS * EDGE_RADIUS;\nconst ENDPOINT_RADIUS = 6;\nconst ENDPOINT_RADIUS_SQU = ENDPOINT_RADIUS * ENDPOINT_RADIUS;\n\nclass GraphPicker\n{\n  constructor()\n  {\n    this.target = null;\n    this.targetType = \"\";\n\n    this.initialTarget = null;\n    this.initialTargetType = \"\";\n\n    this._prevX = 0;\n    this._prevY = 0;\n\n    this._pickHandlers = new Map();\n  }\n\n  addPickHandler(pickHandler)\n  {\n    this._pickHandlers.set(pickHandler.getTargetType(), pickHandler);\n    return this;\n  }\n\n  removePickHandler(pickHandler)\n  {\n    this._pickHandlers.delete(pickHandler.getTargetType());\n    return this;\n  }\n\n  getPickHandler(targetType)\n  {\n    return this._pickHandlers.get(targetType);\n  }\n\n  setInitialTarget(target, type)\n  {\n    this.initialTarget = target;\n    this.initialTargetType = type;\n  }\n\n  updateHoverTarget(graph, x, y)\n  {\n    if (this._prevX !== x || this._prevY !== y)\n    {\n      this._prevX = x;\n      this._prevY = y;\n\n      //Update target\n      this.updateTarget(graph, x, y);\n\n      //HACK: to make the cursor look like a pointer when targeting\n      if (this.hasTarget())\n      {\n        document.body.style.cursor = \"pointer\";\n      }\n      else\n      {\n        document.body.style.cursor = \"auto\";\n      }\n    }\n  }\n\n  updateInitialTarget(graph, x, y)\n  {\n    this.updateTarget(graph, x, y);\n    this.setInitialTarget(this.target, this.targetType);\n  }\n\n  updateTarget(graph, x, y)\n  {\n    for(const pickHandler of this._pickHandlers.values())\n    {\n      if (this.target = pickHandler.getTargetAt(graph, x, y))\n      {\n        this.targetType = pickHandler.getTargetType();\n        return;\n      }\n    }\n\n    this.target = null;\n    this.targetType = \"none\";\n\n    return this.target;\n  }\n\n  clearTarget()\n  {\n    this.target = null;\n    this.targetType = \"none\";\n  }\n\n  hasTarget()\n  {\n    return this.target != null;\n  }\n\n  isTarget(target)\n  {\n    return this.target == target;\n  }\n\n  getPickHandlers()\n  {\n    return this._pickHandlers.values();\n  }\n}\n\nexport default GraphPicker;\n","import AbstractInputController from 'modules/abstract/AbstractInputController.js';\n\n//import NodalGraphPicker from 'graph/picker/NodalGraphPicker.js';\nimport GraphNodeSelectionBox from 'graph/GraphNodeSelectionBox.js';\nimport GraphPicker from './GraphPicker.js';\n\nconst DEFAULT_SHOULD_DESTROY_POINTLESS_EDGE = true;\n\nclass InputController extends AbstractInputController\n{\n  constructor(module, inputAdapter)\n  {\n    super(module, inputAdapter);\n    \n    this._picker = new GraphPicker();\n    this._selectionBox = new GraphNodeSelectionBox();\n    this._graphController = null;\n\n    //Make sure this is always false when moving endpoints\n    this.isNewEdge = false;\n\n    //Whether to destroy pointless edges\n    this.shouldDestroyPointlessEdges = DEFAULT_SHOULD_DESTROY_POINTLESS_EDGE;\n\n    //Swap left to right clicks and vice versa on anything else but Macs\n    this._swapMouseScheme = true;//!navigator.platform.startsWith(\"Mac\");\n\n    //Used to determine whether the target should be destroyed because of trash mode\n    this._trashMode = false;\n\n    this._disabled = false;\n\n    //TODO: this works, it's just not attached to anything\n    this._snapToGrid = false;\n    this._snapSize = 48;\n\n    this._inputHandlers = [];\n  }\n\n  addInputHandler(inputHandler)\n  {\n    this._inputHandlers.push(inputHandler);\n    return this;\n  }\n\n  removeInputHandler(inputHandler)\n  {\n    this._inputHandlers.splice(this._inputHandlers.indexOf(inputHandler), 1);\n    return this;\n  }\n\n  //Override\n  initialize(module)\n  {\n    super.initialize(module);\n\n    this._module = module;\n    this._graphController = module.getGraphController();\n  }\n\n  //Override\n  destroy(module)\n  {\n    super.destroy(module);\n  }\n\n  //Override\n  update(module)\n  {\n    super.update(module);\n\n    const graph = this._graphController.getGraph();\n    const picker = this._picker;\n\n    const x = this._inputAdapter.getPointerX();\n    const y = this._inputAdapter.getPointerY();\n    picker.updateHoverTarget(graph, x, y);\n  }\n\n  setDisabled(disabled)\n  {\n    this._disabled = disabled;\n  }\n\n  isDisabled()\n  {\n    return this._disabled;\n  }\n\n  //Override\n  onPreInputEvent(pointer)\n  {\n    if (this._disabled) return super.onPreInputEvent(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n\n    const graph = graphController.getGraph();\n    const picker = inputController.getPicker();\n    picker.updateInitialTarget(graph, pointer.x, pointer.y);\n\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    if (this._selectionBox.hasSelection())\n    {\n      //Unselect everything is clicked on something other than nodes...\n      if (targetType != \"node\" || !this._selectionBox.isTargetInSelection(target))\n      {\n        this._selectionBox.clearSelection();\n      }\n    }\n\n    //Override\n    return super.onPreInputEvent(pointer);\n  }\n\n  //Override\n  onInputEvent(pointer)\n  {\n    if (this._disabled) return super.onInputEvent(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n    const picker = inputController.getPicker();\n    picker.updateTarget(graphController.getGraph(), pointer.x, pointer.y);\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    for(const handler of this._inputHandlers)\n    {\n      if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onAction(inputController, graphController, pointer, target))\n      {\n        return true;\n      }\n    }\n\n    //Override\n    return super.onInputEvent(pointer);\n  }\n\n  //Override\n  onDblInputEvent(pointer)\n  {\n    if (this._disabled) return super.onDblInputEvent(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n    const picker = inputController.getPicker();\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    //Make sure it is not in trash mode\n    if (inputController.isTrashMode())\n    {\n      graphController.emit(\"tryCreateWhileTrash\");\n      return false;\n    }\n\n    for(const handler of this._inputHandlers)\n    {\n      if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onDblAction(inputController, graphController, pointer, target))\n      {\n        return true;\n      }\n    }\n\n    //Override\n    return super.onDblInputEvent(pointer);\n  }\n\n  //Override\n  onDragStart(pointer)\n  {\n    if (this._disabled) return super.onDragStart(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n    const picker = inputController.getPicker();\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    //Make sure it is not in new edge mode\n    inputController.isNewEdge = false;\n\n    //Make sure it is not in trash mode\n    if (inputController.isTrashMode())\n    {\n      graphController.emit(\"tryCreateWhileTrash\");\n      return false;\n    }\n\n    for(const handler of this._inputHandlers)\n    {\n      if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onDragStart(inputController, graphController, pointer, target))\n      {\n        return true;\n      }\n    }\n\n    //Override\n    return super.onDragStart(pointer);\n  }\n\n  //Override\n  onDragMove(pointer)\n  {\n    if (this._disabled) return super.onDragMove(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n    const picker = inputController.getPicker();\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    for(const handler of this._inputHandlers)\n    {\n      if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onDragMove(inputController, graphController, pointer, target))\n      {\n        return true;\n      }\n    }\n\n    //Override\n    return super.onDragMove(pointer);\n  }\n\n  //Override\n  onDragStop(pointer)\n  {\n    if (this._disabled) return super.onDragStop(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n    const picker = inputController.getPicker();\n    picker.updateTarget(graphController.getGraph(), pointer.x, pointer.y);\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    for(const handler of this._inputHandlers)\n    {\n      if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onDragStop(inputController, graphController, pointer, target))\n      {\n        return true;\n      }\n    }\n\n    //Override\n    return super.onDragStop(pointer);\n  }\n\n  //Override\n  onPostInputEvent(pointer)\n  {\n    if (this._disabled) return super.onPostInputEvent(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n    const graph = graphController.getGraph();\n    const picker = inputController.getPicker();\n\n    picker.clearTarget();\n    picker.updateTarget(graph, pointer.x, pointer.y);\n\n    //Override\n    super.onPostInputEvent(pointer);\n  }\n\n  setTrashMode(enabled)\n  {\n    this._trashMode = enabled;\n    if (enabled)\n    {\n      this._module.getApp()._drawer.setViewportColor(\"var(--color-viewport-error)\");\n    }\n    else\n    {\n      this._module.getApp()._drawer.setViewportColor(null);\n    }\n  }\n\n  isTrashMode()\n  {\n    return this._trashMode;\n  }\n\n  setInputScheme(shouldInputFirst)\n  {\n    this._swapMouseScheme = !shouldInputFirst;\n  }\n\n  getInputScheme()\n  {\n    return this._swapMouseScheme;\n  }\n\n  isMoveMode()\n  {\n    const result = this._inputAdapter.isAltInput();\n    return this._swapMouseScheme ? !result : result;\n  }\n\n  isDragging()\n  {\n    return this._inputAdapter.isDragging();\n  }\n\n  isActionMode()\n  {\n    return this._inputAdapter.isPointerActive() ?\n      //Is considered an input when NOT moving or when creating a new edge...\n      this.isNewEdge || !this.isMoveMode() :\n      //If not active, just show default input...\n      !this._swapMouseScheme;\n  }\n\n  getPicker()\n  {\n    return this._picker;\n  }\n\n  getSelectionBox()\n  {\n    return this._selectionBox;\n  }\n\n  getInputHandlers()\n  {\n    return this._inputHandlers;\n  }\n}\n\nexport default InputController;\n","import AbstractGraphController from 'modules/abstract/AbstractGraphController.js';\n\nimport Eventable from 'util/Eventable.js';\nimport GraphEdge from 'graph/GraphEdge.js';\nimport GraphLayout from 'modules/fsa/graph/GraphLayout.js';\n\nimport GraphChangeHandler from 'experimental/GraphChangeHandler.js';\n\nconst NODE_SPAWN_RADIUS = 64;\nconst DEFAULT_AUTO_RENAME = true;\nconst GRAPH_REFRESH_RATE = 30;\nconst DELETE_ON_EMPTY = true;\n\nclass GraphController extends AbstractGraphController\n{\n  constructor(module, graph, labeler, parser)\n  {\n    super(module, graph, labeler, parser);\n\n    this.inputController = null;\n    this._graphChangeHandler = new GraphChangeHandler(GRAPH_REFRESH_RATE);\n\n    this.getGraphLabeler().setGraphController(this);\n\n    this.prevQuad = {\n      radians: 0, length: 0,\n      x: 0, y: 0\n    };\n    this.prevEdgeTo = null;\n    this.prevX = 0;\n    this.prevY = 0;\n\n    this.shouldAutoLabel = DEFAULT_AUTO_RENAME;\n\n    //The difference between controller events vs graph events is: controller has user-intent\n\n    //tryCreateWhileTrash()\n    this.registerEvent(\"tryCreateWhileTrash\");\n  }\n\n  //Override\n  initialize(module)\n  {\n    super.initialize(module);\n\n    this._module = module;\n    this.inputController = module.getInputController();\n  }\n\n  //Override\n  destroy(module)\n  {\n    super.destroy(module);\n  }\n\n  //Override\n  update(module)\n  {\n    super.update(module);\n\n    this._graphChangeHandler.update(this._graph);\n  }\n\n  getGraphChangeHandler()\n  {\n    return this._graphChangeHandler;\n  }\n\n  applyAutoLayout()\n  {\n    GraphLayout.applyLayout(this.getGraph());\n\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  applyAutoRename()\n  {\n    const graphLabeler = this._labeler;\n    const graph = this._graph;\n\n    if (graph.isEmpty()) return;\n\n    //Reset all default labels...\n    for(const node of graph.getNodes())\n    {\n      if (!node.getNodeCustom()) node.setNodeLabel(\"\");\n    }\n\n    //Rename all default labels appropriately...\n    for(const node of graph.getNodes())\n    {\n      if (!node.getNodeCustom())\n      {\n        node.setNodeLabel(graphLabeler.getDefaultNodeLabel());\n      }\n    }\n  }\n\n  onGraphIntentImport()\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentCreateEdge(edge)\n  {\n  }\n\n  onGraphIntentFinishEdge(edge)\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentMoveEdge(edge, nextQuad, prevQuad)\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentChangeDestination(edge, destinationNode, prevDestination, prevQuad)\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentChangeInitial(nextInitial, prevInitial)\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentMoveNode(node, nextX, nextY, prevX, prevY)\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentMoveAllNodes(nodes, dx, dy)\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentDeleteNodes(node, targetNodes, prevX, prevY)\n  {\n    if (this.shouldAutoLabel)\n    {\n      this.applyAutoRename();\n    }\n  }\n\n  setAutoRenameNodes(enable)\n  {\n    const prev = this.shouldAutoLabel;\n    this.shouldAutoLabel = enable;\n    if (enable && !prev)\n    {\n      this.applyAutoRename();\n    }\n  }\n\n  shouldAutoRenameNodes()\n  {\n    return this.shouldAutoLabel;\n  }\n\n  renameNode(node, name)\n  {\n    const prev = node.getNodeLabel();\n    const isPrevCustom = node.getNodeCustom();\n\n    node.setNodeLabel(name);\n    node.setNodeCustom(true);\n\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  createNode(x, y)\n  {\n    if (typeof x === 'undefined') x = (Math.random() * NODE_SPAWN_RADIUS * 2) - NODE_SPAWN_RADIUS;\n    if (typeof y === 'undefined') y = (Math.random() * NODE_SPAWN_RADIUS * 2) - NODE_SPAWN_RADIUS;\n\n    const node = this.getGraph().createNode(x, y);\n\n    const newNodeLabel = this.getGraphLabeler().getDefaultNodeLabel();\n    node.setNodeLabel(newNodeLabel);\n\n    this.getModule().getApp().getUndoManager().captureEvent();\n    return node;\n  }\n\n  toggleNode(node)\n  {\n    const prev = node.getNodeAccept();\n    const result = !prev;\n    //Toggle accept for selected node\n    node.setNodeAccept(result);\n\n    //Emit event\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  deleteSelectedNodes(selectedNode)\n  {\n    const selectionBox = this.inputController.getSelectionBox();\n    const selection = selectionBox.getSelection(this.getGraph()).slice();\n\n    //Remove from graph\n    for(const node of selection)\n    {\n      this.getGraph().deleteNode(node);\n    }\n\n    //Remove from selection\n    selectionBox.clearSelection();\n\n    //Emit event\n    this.onGraphIntentDeleteNodes(selectedNode, selection, this.prevX, this.prevY);\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  deleteTargetNode(target)\n  {\n    this.getGraph().deleteNode(target);\n\n    //Emit event\n    this.onGraphIntentDeleteNodes(target, [target], this.prevX, this.prevY);\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  deleteTargetNodes(targets)\n  {\n    if (!targets || targets.length <= 0) return;\n\n    const graph = this.getGraph();\n    for(const node of targets)\n    {\n      graph.deleteNode(node);\n    }\n\n    //Emit event\n    this.onGraphIntentDeleteNodes(targets[0], targets, this.prevX, this.prevY);\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  deleteTargetEdge(target)\n  {\n    this.getGraph().deleteEdge(target);\n\n    //Emit event\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  deleteTargetEdges(targets)\n  {\n    if (!targets || targets.length <= 0) return;\n\n    for(const target of targets)\n    {\n      this.deleteTargetEdge(target);\n    }\n  }\n\n  moveNodeTo(pointer, node, x, y)\n  {\n    const nodeSize = node.getNodeSize();\n    for(const other of this.getGraph().getNodes())\n    {\n      //Update node collision\n      if (node === other) continue;\n\n      const dx = x - other.x;\n      const dy = y - other.y;\n      const angle = Math.atan2(dy, dx);\n\n      const diameter = (nodeSize * 2);\n      const nextDX = other.x + (Math.cos(angle) * diameter) - x;\n      const nextDY = other.y + (Math.sin(angle) * diameter) - y;\n\n      if (dx * dx + dy * dy < nodeSize * nodeSize * 4)\n      {\n        x += nextDX;\n        y += nextDY;\n      }\n    }\n\n    node.x = x;\n    node.y = y;\n  }\n\n  moveMultipleNodesTo(pointer, nodes, x, y)\n  {\n    //Moves all nodes by difference between initial position with passed-in x and y\n    const pos = pointer.getInputEventPosition();\n    const dx = x - pos.x;\n    const dy = y - pos.y;\n    for(const node of nodes)\n    {\n      node.x += dx;\n      node.y += dy;\n    }\n\n    //Updates initial position to passed-in x and y to maintain relative position\n    pointer.changeInputEventPosition(x, y);\n  }\n\n  moveEdgeTo(pointer, edge, x, y)\n  {\n    edge.setQuadraticByCoords(x, y);\n  }\n\n  moveEndpointTo(pointer, edge, x, y)\n  {\n    //Get ONLY node at x and y (cannot use hover target, since it is not ONLY nodes)\n    const picker = this.inputController.getPicker();\n    const dst = picker.getPickHandler(\"node\").getTargetAt(this.getGraph(), x, y) || pointer;\n\n    edge.changeDestinationNode(dst);\n\n    //If the cursor returns to the state after leaving it...\n    if (edge.isSelfLoop())\n    {\n      //Make it a self loop\n      const sourceNode = edge.getSourceNode();\n      const dx = sourceNode.x - x;\n      const dy = sourceNode.y - y;\n      const radians = Math.atan2(dy, dx) + Math.PI;\n      edge.setQuadratic(radians);\n    }\n    //Otherwise, maintain original curve\n    else\n    {\n      //TODO: This also causes self-loops to act weird when no longer a self loop\n      edge.setQuadratic(this.prevQuad.radians, this.prevQuad.length);\n    }\n  }\n\n  openLabelEditor(target, defaultValue=null, callback=null)\n  {\n    const labelEditor = this.getModule().getInputManager().getLabelEditorManager().getLabelEditorComponent();\n    const prevLabel = defaultValue;\n    labelEditor.openEditor(target, defaultValue, (target, value) => {\n      if (DELETE_ON_EMPTY && (!value || value.length <= 0) && target instanceof GraphEdge)\n      {\n        //Assumes target is GraphEdge\n        this._graph.deleteEdge(target);\n      }\n      else\n      {\n        if (target instanceof GraphEdge)\n        {\n          target.setEdgeLabel(value);\n        }\n        else\n        {\n          target.setNodeLabel(value);\n        }\n\n        if (!prevLabel || (prevLabel.length > 0 && value !== prevLabel))\n        {\n          this.getModule().getApp().getUndoManager().captureEvent();\n        }\n        if (callback) callback(target, value);\n      }\n    }, (target) => {\n      if (DELETE_ON_EMPTY && (!prevLabel || prevLabel.length <= 0) && target instanceof GraphEdge)\n      {\n        //Assumes target is GraphEdge\n        this._graph.deleteEdge(target);\n      }\n    });\n  }\n\n  focusOnNode(node)\n  {\n    //Center workspace at focused node; inverted due to graph-to-screen space\n    this.inputController.getInputAdapter().getViewport().setOffset(-node.x, -node.y);\n  }\n\n  focusOnEdge(edge)\n  {\n    //Center workspace at focused edge; inverted due to graph-to-screen space\n    const center = edge.getCenterPoint();\n    this.inputController.getInputAdapter().getViewport().setOffset(-center.x, -center.y);\n  }\n\n  focusOnNodes(nodes)\n  {\n    //Center workspace at the average of focused nodes; inverted due to graph-to-screen space\n    const length = nodes.length;\n    let ax = 0;\n    let ay = 0;\n    for(const node of nodes)\n    {\n      ax += node.x;\n      ay += node.y;\n    }\n    this.inputController.getInputAdapter().getViewport().setOffset(-ax / length, -ay / length);\n  }\n}\n//Mixin Eventable\nEventable.mixin(GraphController);\n\nexport default GraphController;\n","import AbstractInputHandler from 'util/input/AbstractInputHandler.js';\n\nclass SelectionBoxInputHandler extends AbstractInputHandler\n{\n  constructor(inputController, graphController, selectionBox)\n  {\n    super();\n\n    this._inputController = inputController;\n    this._graphController = graphController;\n    this._selectionBox = selectionBox;\n  }\n\n  //Override\n  onDragStart(pointer)\n  {\n    if (!this._inputController.isMoveMode())\n    {\n      //Begin selection box...\n      this._selectionBox.beginSelection(this._graphController.getGraph(), pointer.x, pointer.y);\n      return true;\n    }\n\n    return false;\n  }\n\n  //Override\n  onDragMove(pointer)\n  {\n    //If the selection box is active...\n    if (this._selectionBox.isSelecting())\n    {\n      //Update the selection box\n      this._selectionBox.updateSelection(this._graphController.getGraph(), pointer.x, pointer.y);\n      return true;\n    }\n\n    return false;\n  }\n\n  //Override\n  onDragStop(pointer)\n  {\n    //If was trying to select...\n    if (this._selectionBox.isSelecting())\n    {\n      //Stop selecting stuff, fool.\n      this._selectionBox.endSelection(this._graphController.getGraph(), pointer.x, pointer.y);\n      return true;\n    }\n\n    return false;\n  }\n}\n\nexport default SelectionBoxInputHandler;\n","import AbstractInputHandler from 'util/input/AbstractInputHandler.js';\n\nclass ViewportInputHandler extends AbstractInputHandler\n{\n  constructor()\n  {\n    super();\n\n    this._prevX = 0;\n    this._prevY = 0;\n  }\n\n  //Override\n  onDragStart(pointer)\n  {\n    this._prevX = pointer.x;\n    this._prevY = pointer.y;\n    return true;\n  }\n\n  //Override\n  onDragMove(pointer)\n  {\n    const dx = pointer.x - this._prevX;\n    const dy = pointer.y - this._prevY;\n    const adapter = pointer.getAdapter();\n    const viewport = adapter.getViewport();\n    viewport.addOffset(dx, dy, true);\n    return true;\n  }\n\n  //Override\n  onDragStop(pointer)\n  {\n    //Do nothing. It should already be moved.\n    return true;\n  }\n}\n\nexport default ViewportInputHandler;\n","import React from 'react';\n\nexport const SUBMIT_DELAY = 30;\nexport const SUBMIT_KEY = \"Enter\";\nexport const CANCEL_KEY = \"Escape\";\n\nclass PatternInput extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.inputElement = null;\n\n    this.placeholder = \"\";\n    this.maxLength = 524288;/*This is the default value*/\n    this.multiLine = true;\n    this.formatter = null;\n\n    this._submitTimeout = null;\n    this._submit = props.submitOnBlur;\n    this._skipBlur = false;\n    this._skipSelect = false;\n\n    this.state = {\n      prevValue: \"\",\n      value: \"\"\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n  }\n\n  setFormatter(formatter)\n  {\n    this.formatter = formatter;\n    return this;\n  }\n\n  setPlaceholder(placeholder)\n  {\n    this.placeholder = placeholder;\n    return this;\n  }\n\n  onFocus(e)\n  {\n    if (this._skipSelect)\n    {\n      this.inputElement.select();\n      this._skipSelect = false;\n    }\n  }\n\n  onBlur(e)\n  {\n    if (!this._submitTimeout)\n    {\n      this._submitTimeout = setTimeout(() => {\n        this._submitTimeout = null;\n        if (this._skipBlur) return;\n\n        const submit = this._submit;\n        this._submit = this.props.submitOnBlur;\n        if (document.activeElement !== this.inputElement && submit)\n        {\n          const value = this.state.value;\n          if (this.props.onSubmit) this.props.onSubmit(value);\n\n          this.setState({prevValue: value});\n        }\n        else\n        {\n          this.setState((prev, props) => {\n            return {value: prev.prevValue};\n          });\n        }\n\n        if (this.props.onBlur) this.props.onBlur(e);\n      }, SUBMIT_DELAY);\n    }\n  }\n\n  onKeyDown(e)\n  {\n    if (e.key === SUBMIT_KEY)\n    {\n      if (e.shiftKey && this.multiLine) return;\n\n      this._submit = true;\n      this.inputElement.blur();\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    else if (e.key === CANCEL_KEY)\n    {\n      this.setState((prev, props) => {\n        return {value: prev.prevValue};\n      }, () => {\n        this._submit = false;\n        this.inputElement.blur();\n      });\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  onChange(e)\n  {\n    const target = e.target;\n    const caretPosition = target.selectionStart;\n    let value = target.value;\n    if (this.formatter)\n    {\n      value = this.formatter(value);\n    }\n\n    this.setState({value: value}, () => {\n      target.selectionEnd = caretPosition;\n    });\n  }\n\n  focus(select=true)\n  {\n    this._skipSelect = select;\n    this.inputElement.focus();\n  }\n\n  ignoreBlur(ignore)\n  {\n    const prev = this._skipBlur;\n    this._skipBlur = ignore;\n    return prev !== ignore;\n  }\n\n  appendValue(string, separator=\"\", format=true)\n  {\n    const value = this.state.value;\n    if (value && value.length + string.length > this.maxLength) return;\n\n    let result;\n    if (value && value.length > 0)\n    {\n      result = value + separator + string;\n    }\n    else\n    {\n      result = string;\n    }\n\n    if (format && this.formatter)\n    {\n      result = this.formatter(result);\n    }\n\n    this.setState((prev, props) => {\n      return {value: result};\n    });\n  }\n\n  resetValue(string)\n  {\n    this.setState({prevValue: string, value: string});\n  }\n\n  setValue(string, format=true)\n  {\n    let value = string;\n    if (format && this.formatter)\n    {\n      value = this.formatter(value);\n    }\n    this.setState({value: value});\n  }\n\n  getValue()\n  {\n    return this.state.value;\n  }\n\n  //Override\n  render()\n  {\n    const placeholder = this.placeholder;\n    const maxlength = this.maxLength;\n    const multiline = this.multiLine;\n    const disabled = this.props.disabled;\n\n    const value = this.state.value;\n\n    return (\n      <div id={this.props.id}\n        className={this.props.className}\n        style={this.props.style}>\n        {\n          multiline ?\n          <textarea ref={ref=>this.inputElement=ref}\n            type=\"text\" rows=\"1\" spellCheck=\"false\"\n            disabled={disabled}\n            placeholder={placeholder}\n            maxLength={maxlength}\n            value={value}\n            onChange={this.onChange}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            onKeyDown={this.onKeyDown}/>\n          :\n          <input ref={ref=>this.inputElement=ref}\n            type=\"text\" spellCheck=\"false\"\n            disabled={disabled}\n            placeholder={placeholder}\n            maxLength={maxlength}\n            value={value}\n            onChange={this.onChange}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            onKeyDown={this.onKeyDown}/>\n        }\n      </div>\n    );\n  }\n}\n\nexport default PatternInput;\n","import React from 'react';\nimport Style from './LabelEditorView.css';\n\nimport GraphElement from 'graph/GraphElement.js';\n\nimport PatternInput from 'deprecated/system/patterninput/PatternInput.js';\n\nclass LabelEditorView extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.ref = null;\n    this.inputComponent = null;\n\n    this.state = {\n      open: false\n    };\n\n    this._target = null;\n    this._targetCallback = null;\n\n    this.onInputSubmit = this.onInputSubmit.bind(this);\n    this.onInputBlur = this.onInputBlur.bind(this);\n  }\n\n  openEditor(graphElement, defaultValue=null, onSubmit=null, onCancel=null)\n  {\n    if (!(graphElement instanceof GraphElement)) throw new Error(\"Can only open editor for GraphElements\");\n\n    this._target = graphElement;\n    this._targetOnSubmit = onSubmit;\n    this._targetOnCancel = onCancel;\n\n    const formatter = this.props.labeler.getLabelFormatter(this._target);\n    this.inputComponent.setFormatter(formatter);\n\n    this.setState({open: true}, () => {\n      if (defaultValue !== null)\n      {\n        this.inputComponent.resetValue(defaultValue);\n      }\n      this.inputComponent.focus();\n    });\n  }\n\n  closeEditor()\n  {\n    this._target = null;\n    this._targetOnSubmit = null;\n    this._targetOnCancel = null;\n\n    this.inputComponent.setFormatter(null);\n\n    this.setState({open: false});\n  }\n\n  isEditorOpen()\n  {\n    return this.state.open;\n  }\n\n  getTarget()\n  {\n    return this._target;\n  }\n\n  onInputSubmit(value)\n  {\n    if (this._targetOnSubmit)\n    {\n      this._targetOnSubmit(this._target, value);\n      //Don't handle cancel callbacks...\n      this._targetOnCancel = null;\n    }\n  }\n\n  onInputBlur(e)\n  {\n    if (this._targetOnCancel)\n    {\n      this._targetOnCancel(this._target);\n      //Don't handle submit callbacks...\n      this._targetOnSubmit = null;\n    }\n    this.closeEditor();\n  }\n\n  //Override\n  render()\n  {\n    const isEditorOpen = this.state.open;\n\n    const target = this._target;\n    const targetStyle = this.props.style || {};\n    const viewport = this.props.viewport;\n    const labeler = this.props.labeler;\n\n    if (target)\n    {\n      const center = target.getCenterPoint();\n      const element = viewport.getElement();\n      const parentClientRect = element.getBoundingClientRect();\n      const screenPos = transformViewToScreen(\n        element,\n        center.x + viewport.getOffsetX(),\n        center.y + viewport.getOffsetY()\n      );\n      const x = screenPos.x;\n      const y = screenPos.y;\n      const offsetX = -(this.ref.offsetWidth / 2) - parentClientRect.left;\n      const offsetY = -(this.ref.offsetHeight / 2) - parentClientRect.top;\n\n      targetStyle['top'] = (y + offsetY) + \"px\";\n      targetStyle['left'] = (x + offsetX) + \"px\";\n    }\n\n    return (\n      <div ref={ref=>this.ref=ref}\n        id={this.props.id}\n        className={Style.editor_container +\n          (isEditorOpen ? \" open \" : \"\") +\n          \" \" + this.props.className}\n        style={targetStyle}>\n        <PatternInput ref={ref=>this.inputComponent=ref}\n          submitOnBlur={this.props.saveOnExit}\n          onSubmit={this.onInputSubmit}\n          onBlur={this.onInputBlur}/>\n        <div className={Style.tray_container}>\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction transformViewToScreen(svg, x, y)\n{\n  const ctm = svg.getScreenCTM();\n  return {\n    x: (x * ctm.a) + ctm.e,\n    y: (y * ctm.d) + ctm.f\n  };\n}\n\nexport default LabelEditorView;\n","import React from 'react';\n\nimport LabelEditorView from './LabelEditorView.js';\nimport {RENDER_LAYER_WORKSPACE_OVERLAY} from 'session/manager/RenderManager.js';\n\nclass LabelEditorManager\n{\n  constructor(app)\n  {\n    this._app = app;\n\n    this._labelEditorComponent = React.createRef();\n    this._labelEditorRenderer = null;\n    this._labeler = null;\n  }\n\n  setLabelEditorRenderer(renderer)\n  {\n    this._labelEditorRenderer = renderer;\n    return this;\n  }\n\n  setLabeler(labeler)\n  {\n    this._labeler = labeler;\n    return this;\n  }\n\n  //DuckType(SessionListener)\n  onSessionStart(session)\n  {\n    const currentModule = session.getCurrentModule();\n    const viewport = session.getApp().getInputAdapter().getViewport();\n\n    const LabelEditorRenderer = this._labelEditorRenderer;\n    const labeler = this._labeler;\n\n    session.getApp().getRenderManager().addRenderer(RENDER_LAYER_WORKSPACE_OVERLAY, props => (\n      <LabelEditorView ref={this._labelEditorComponent}\n        labeler={labeler}\n        viewport={viewport}\n        saveOnExit={true}>\n        {/* LabelEditor objects */\n          LabelEditorRenderer &&\n          <LabelEditorRenderer currentModule={currentModule} parent={this._labelEditorComponent.current}/>}\n      </LabelEditorView>\n    ));\n  }\n\n  //DuckType(SessionListener)\n  onSessionStop(session)\n  {\n    this._labeler = null;\n    this._labelEditorRenderer = null;\n  }\n\n  getLabelEditorComponent()\n  {\n    return this._labelEditorComponent.current;\n  }\n}\n\nexport default LabelEditorManager;\n","import InputController from 'modules/nodalgraph/controller/InputController.js';\nimport GraphController from 'modules/nodalgraph/controller/GraphController.js';\n\nimport SelectionBoxInputHandler from 'modules/nodalgraph/controller/SelectionBoxInputHandler.js';\nimport ViewportInputHandler from 'modules/nodalgraph/controller/ViewportInputHandler.js';\n\nimport LabelEditorManager from 'session/manager/labeleditor/LabelEditorManager.js';\n\nimport {WARNING_LAYOUT_ID} from 'session/manager/notification/NotificationManager.js';\n\nexport const TRASH_EDITING_NOTIFICATION_TAG = \"tryCreateWhileTrash\";\n\nclass NodalGraphInputManager\n{\n  constructor(currentModule, nodalGraph, graphLabeler, graphParser, labelEditorRenderer)\n  {\n    this._inputController = new InputController(currentModule, currentModule.getApp().getInputAdapter());\n    this._graphController = new GraphController(currentModule, nodalGraph, graphLabeler, graphParser);\n\n    this._labelEditorManager = new LabelEditorManager(currentModule.getApp())\n      .setLabelEditorRenderer(labelEditorRenderer)\n      .setLabeler(graphLabeler);\n\n    this._selectionBoxInputHandler = new SelectionBoxInputHandler(this._inputController, this._graphController, this._inputController.getSelectionBox());\n    this._viewportInputHandler = new ViewportInputHandler();\n  }\n\n  //Not yet implemented\n  setGraphLabeler(labeler)\n  {\n    this._graphLabeler = labeler;\n    return this;\n  }\n\n  //Not yet implemented\n  setGraphParser(parser)\n  {\n    this._graphParser = parser;\n    return this;\n  }\n\n  update(currentModule)\n  {\n    const inputController = this.getInputController();\n    const graphController = this.getGraphController();\n    inputController.update(currentModule);\n    graphController.update(currentModule);\n  }\n\n  //DuckType(SessionListener)\n  onSessionStart(session)\n  {\n    const app = session.getApp();\n    const currentModule = session.getCurrentModule();\n\n    currentModule.getApp().getInputAdapter()\n      .addInputHandler(this._inputController)\n      .addInputHandler(this._selectionBoxInputHandler)\n      .addInputHandler(this._viewportInputHandler);\n\n    const inputController = this.getInputController();\n    const graphController = this.getGraphController();\n    inputController.initialize(currentModule);\n    graphController.initialize(currentModule);\n\n    this._labelEditorManager.onSessionStart(session);\n\n    //Notify on create in delete mode\n    const tryCreateWhileTrash = () => {\n      if (this._inputController.isTrashMode())\n      {\n        app.getNotificationManager().pushNotification(\n          I18N.toString(\"message.warning.cannotmodify\"),\n          WARNING_LAYOUT_ID, TRASH_EDITING_NOTIFICATION_TAG, null, true);\n      }\n    };\n    this._graphController.on(\"tryCreateWhileTrash\", tryCreateWhileTrash);\n  }\n\n  //DuckType(SessionListener)\n  onSessionStop(session)\n  {\n    session.getApp().getInputAdapter()\n      .removeInputHandler(this._inputController)\n      .removeInputHandler(this._selectionBoxInputHandler)\n      .removeInputHandler(this._viewportInputHandler);\n\n    this._labelEditorManager.onSessionStop(session);\n\n    const currentModule = session.getCurrentModule();\n    const inputController = this.getInputController();\n    const graphController = this.getGraphController();\n    graphController.destroy(currentModule);\n    inputController.destroy(currentModule);\n  }\n\n  getLabelEditorManager() { return this._labelEditorManager; }\n  getGraphParser() { return this._graphController.getGraphParser(); }\n  getGraphLabeler() { return this._graphController.getGraphLabeler(); }\n  getGraphController() { return this._graphController; }\n  getInputController() { return this._inputController; }\n}\n\nexport default NodalGraphInputManager;\n","import React from 'react';\n\nclass BoxRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const visible = this.props.visible;\n    const fromX = this.props.fromX || 0;\n    const fromY = this.props.fromY || 0;\n    const toX = this.props.toX || fromX + 1;\n    const toY = this.props.toY || fromY + 1;\n\n    const dx = toX - fromX;\n    const dy = toY - fromY;\n\n    return (\n      <g className=\"graph-selection-container\">\n      { visible &&\n        <rect className=\"graph-selection\"\n          x={dx < 0 ? toX : fromX}\n          y={dy < 0 ? toY : fromY}\n          width={dx < 0 ? -dx : dx}\n          height={dy < 0 ? -dy : dy}/> }\n      </g>\n    );\n  }\n}\n\nexport default BoxRenderer;\n","import React from 'react';\n\nconst CURSOR_RADIUS = 4;\nconst NODE_RADIUS = 16;\nconst EDGE_RADIUS = 12;\nconst ENDPOINT_RADIUS = 6;\nconst INITIAL_MARKER_OFFSET_X = -(NODE_RADIUS + (NODE_RADIUS / 2));\n\nconst HIGHLIGHT_RADIUS_OFFSET = 4;\nconst HIGHLIGHT_LINE_WIDTH = 3;\nconst HIGHLIGHT_LINE_ARRAY = [8, 6];\n\nclass HighlightRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const target = this.props.target;\n    const type = this.props.type;\n\n    let x = 0;\n    let y = 0;\n    let r = CURSOR_RADIUS;\n    switch(type)\n    {\n      case \"node\":\n        x = target.x || 0;\n        y = target.y || 0;\n        r = NODE_RADIUS;\n        break;\n      case \"edge\":\n        const center = target.getCenterPoint();\n        x = center.x || 0;\n        y = center.y || 0;\n        r = EDGE_RADIUS;\n        break;\n      case \"endpoint\":\n        const endpoint = target.getEndPoint();\n        x = endpoint.x || 0;\n        y = endpoint.y || 0;\n        r = ENDPOINT_RADIUS;\n        break;\n      case \"initial\":\n        x = target.x + INITIAL_MARKER_OFFSET_X;\n        y = target.y || 0;\n        r = EDGE_RADIUS;\n        break;\n    }\n\n    return (\n      <g className=\"graph-highlight-container\">\n        <circle className={\"graph-highlight \" + this.props.className}\n          cx={x} cy={y}\n          r={r + HIGHLIGHT_RADIUS_OFFSET}\n          strokeDashoffset={this.props.offset || 0}\n          strokeDasharray={HIGHLIGHT_LINE_ARRAY}\n          strokeWidth={HIGHLIGHT_LINE_WIDTH}\n          fill=\"none\"/>\n      </g>\n    );\n  }\n}\n\nexport default HighlightRenderer;\n","import React from 'react';\n\nimport BoxRenderer from './BoxRenderer.js';\nimport HighlightRenderer from './HighlightRenderer.js';\n\nclass SelectionBoxRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const currentModule = this.props.currentModule;\n\n    const graphController = currentModule.getGraphController();\n    const inputController = currentModule.getInputController();\n\n    const graph = graphController.getGraph();\n    const selectionBox = inputController.getSelectionBox();\n    const selectionBoundingBox = selectionBox.getSelectionBox();\n\n    return (\n      <g>\n        {/* Selected elements */}\n        { selectionBox &&\n          selectionBox.hasSelection() &&\n          selectionBox.getSelection(graph).map((e, i) =>\n            <HighlightRenderer key={e.getGraphElementID()}\n              className={inputController.isTrashMode() ?\n                \"highlight-error\" :\n                \"highlight-select\"}\n              target={e} type=\"node\"/>) }\n\n        {/* Selection box */}\n        { selectionBoundingBox &&\n          <BoxRenderer visible={selectionBoundingBox.visible}\n            fromX={selectionBoundingBox.fromX} fromY={selectionBoundingBox.fromY}\n            toX={selectionBoundingBox.toX} toY={selectionBoundingBox.toY}/> }\n      </g>\n    );\n  }\n}\n\nexport default SelectionBoxRenderer;\n","import React from 'react';\n\nimport SelectionBoxRenderer from './SelectionBoxRenderer.js';\nimport HighlightRenderer from './HighlightRenderer.js';\n\nclass GraphInputRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    //Inherits props from parent\n    const currentModule = this.props.currentModule;\n\n    const inputController = currentModule.getInputController();\n\n    const viewport = inputController.getInputAdapter().getViewport();\n    const picker = inputController.getPicker();\n    const selectionBox = inputController.getSelectionBox();\n\n    return (\n      <g>\n        <SelectionBoxRenderer currentModule={currentModule}/>\n\n        {/* Node test targets */}\n        { currentModule._tester &&\n          currentModule._tester.targets &&\n          currentModule._tester.targets.map((e, i) => {\n            return <HighlightRenderer key={e.getGraphElementID()}\n              className=\"highlight-test graph-gui\"\n              target={e} type=\"node\" offset=\"6\"/>;\n          })}\n\n        {/* Hover markers */}\n        { picker &&\n          picker.hasTarget() &&\n          !selectionBox.isTargetInSelection(picker.target) &&\n          <HighlightRenderer className={inputController.isTrashMode() ?\n            \"highlight-error\" :\n            \"highlight-select\"}\n            target={picker.target}\n            type={picker.targetType}/> }\n      </g>\n    );\n  }\n}\n\nexport default GraphInputRenderer;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 26 26\">\n        <path d=\"M 11.5 -0.03125 C 9.542969 -0.03125 7.96875 1.59375 7.96875 3.5625 L 7.96875 4 L 4 4 C 3.449219 4 3 4.449219 3 5 L 3 6 L 2 6 L 2 8 L 4 8 L 4 23 C 4 24.644531 5.355469 26 7 26 L 19 26 C 20.644531 26 22 24.644531 22 23 L 22 8 L 24 8 L 24 6 L 23 6 L 23 5 C 23 4.449219 22.550781 4 22 4 L 18.03125 4 L 18.03125 3.5625 C 18.03125 1.59375 16.457031 -0.03125 14.5 -0.03125 Z M 11.5 2.03125 L 14.5 2.03125 C 15.304688 2.03125 15.96875 2.6875 15.96875 3.5625 L 15.96875 4 L 10.03125 4 L 10.03125 3.5625 C 10.03125 2.6875 10.695313 2.03125 11.5 2.03125 Z M 6 8 L 11.125 8 C 11.25 8.011719 11.371094 8.03125 11.5 8.03125 L 14.5 8.03125 C 14.628906 8.03125 14.75 8.011719 14.875 8 L 20 8 L 20 23 C 20 23.5625 19.5625 24 19 24 L 7 24 C 6.4375 24 6 23.5625 6 23 Z M 8 10 L 8 22 L 10 22 L 10 10 Z M 12 10 L 12 22 L 14 22 L 14 10 Z M 16 10 L 16 22 L 18 22 L 18 10 Z \"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './TrashCanWidget.css';\n\nimport TrashCanDetailedIcon from 'experimental/iconset/TrashCanDetailedIcon.js';\n\nconst DOUBLE_TAP_TIME = 250;\n\nclass TrashCanWidget extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.ref = null;\n\n    this.state = {\n      forceActive: false\n    };\n\n    this._doubleTapTimeout = null;\n\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseLeave = this.onMouseLeave.bind(this);\n    this.onClick = this.onClick.bind(this);\n\n    //HACK: This is kinda a hack to lose trash mode focus...\n    this.onAnyMouseDownNotConsumed = this.onAnyMouseDownNotConsumed.bind(this);\n  }\n\n  onMouseEnter(e)\n  {\n    if (this.state.forceActive) return;\n\n    this.props.inputController.setTrashMode(true);\n  }\n\n  onMouseLeave(e)\n  {\n    if (this.state.forceActive) return;\n\n    this.props.inputController.setTrashMode(false);\n  }\n\n  onClick(e)\n  {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (this._doubleTapTimeout)\n    {\n      //This is a double tap!\n      clearTimeout(this._doubleTapTimeout);\n      this._doubleTapTimeout = null;\n      this.setState({forceActive: false});\n\n      this.props.app.getSession().getCurrentModule().clear(this.props.app, true);\n      this.props.inputController.setTrashMode(false);\n    }\n    else\n    {\n      //This is a single tap!\n      this.setState((prev, props) => {\n        const result = !prev.forceActive;\n        props.inputController.setTrashMode(result);\n        this._doubleTapTimeout = setTimeout(() => {\n          this._doubleTapTimeout = null;\n        }, DOUBLE_TAP_TIME);\n\n        if (result)\n        {\n          document.documentElement.addEventListener('mousedown', this.onAnyMouseDownNotConsumed);\n        }\n\n        return {\n          forceActive: result\n        };\n      });\n    }\n  }\n\n  onAnyMouseDownNotConsumed(e)\n  {\n    if (this.state.forceActive && this.ref !== e.target)\n    {\n      e.stopPropagation();\n      e.preventDefault();\n\n      document.documentElement.removeEventListener('mousedown', this.onAnyMouseDownNotConsumed);\n\n      this.props.inputController.setTrashMode(false);\n      this.setState({forceActive: false});\n    }\n  }\n\n  //Override\n  render()\n  {\n    const inputController = this.props.inputController;\n    const graphController = this.props.graphController;\n    const inputAdapter = inputController.getInputAdapter();\n\n    const active = inputController.isTrashMode();\n    const hide = !active && (graphController.getGraph().isEmpty() || (inputAdapter.isUsingTouch() && inputAdapter.isDragging()));\n\n    return (\n      <div ref={ref=>this.ref=ref} id={this.props.id}\n        className={Style.trash_container +\n          (active ? \" active \" : \"\") +\n          (hide ? \" hide \" : \"\") +\n          \" \" + this.props.className}\n        style={this.props.style}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n        onClick={this.onClick}>\n        <TrashCanDetailedIcon/>\n      </div>\n    );\n  }\n}\n\nexport default TrashCanWidget;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M13,6V11H18V7.75L22.25,12L18,16.25V13H13V18H16.25L12,22.25L7.75,18H11V13H6V16.25L1.75,12L6,7.75V11H11V6H7.75L12,1.75L16.25,6H13Z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './ModeSelectTray.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport EditPencilIcon from 'experimental/iconset/EditPencilIcon.js';\nimport MoveIcon from 'experimental/iconset/MoveIcon.js';\n\nclass ModeSelectTray extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(newValue)\n  {\n    if (this.props.onChange)\n    {\n      this.props.onChange(newValue);\n    }\n  }\n\n  //Override\n  render()\n  {\n    const mode = this.props.mode || 0;\n    const onChange = this.props.onChange;\n\n    return (\n      <div id={this.props.id}\n        className={Style.tray_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <IconButton className={Style.tray_button +\n          (mode === 0 ? \" active \" : \"\")}\n          onClick={() => this.onChange(0)}\n          title={I18N.toString(\"cursor.actionmode\")}>\n          <EditPencilIcon/>\n        </IconButton>\n        <IconButton className={Style.tray_button +\n          (mode === 1 ? \" active \" : \"\")}\n          onClick={() => this.onChange(1)}\n          title={I18N.toString(\"cursor.movemode\")}>\n          <MoveIcon/>\n        </IconButton>\n      </div>\n    );\n  }\n}\nexport default ModeSelectTray;\n"],"sourceRoot":""}