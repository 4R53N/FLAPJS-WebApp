{"version":3,"sources":["webpack:///./src/app/graph2/element/GraphNode.js","webpack:///./src/app/graph2/element/GraphEdge.js","webpack:///./src/app/util/input/AbstractInputHandler.js","webpack:///./src/app/graph2/renderer/NodeRenderer.js","webpack:///./src/app/graph2/element/GraphElement.js","webpack:///./src/app/graph2/renderer/EdgeRenderer.js","webpack:///./src/app/graph2/NodeGraph.js","webpack:///./src/app/graph2/element/QuadraticEdge.js","webpack:///./src/app/graph2/inputhandler/GraphNodeInputHandler.js","webpack:///./src/app/graph2/inputhandler/GraphEdgeInputHandler.js","webpack:///./src/app/graph2/renderer/StartMarkerRenderer.js","webpack:///./src/app/graph2/inputhandler/IndexedGraphStartMarkerInputHandler.js","webpack:///./src/app/session/manager/undo/AbstractEventHandler.js","webpack:///./src/app/components/iconset/ZoomInIcon.js","webpack:///./src/app/components/iconset/ZoomOutIcon.js","webpack:///./src/app/graph2/components/widgets/ZoomWidget.js","webpack:///./src/app/components/iconset/PinpointIcon.js","webpack:///./src/app/graph2/components/widgets/FocusCenterWidget.js","webpack:///./src/app/graph2/components/layers/ViewportNavigationLayer.js","webpack:///./src/app/experimental/UserUtil.js","webpack:///./src/app/util/input/ViewportAdapter.js","webpack:///./src/app/util/input/InputContext.js","webpack:///./src/app/util/input/InputPointer.js","webpack:///./src/app/util/input/InputAdapter.js","webpack:///./src/app/util/input/components/ViewportComponent.js","webpack:///./src/app/graph2/controller/InputController.js","webpack:///./src/app/graph2/inputhandler/ViewportInputHandler.js","webpack:///./src/app/graph2/components/GraphView.js","webpack:///./src/app/graph2/renderer/BoxRenderer.js","webpack:///./src/app/graph2/renderer/GraphHighlightRenderer.js","webpack:///./src/app/graph2/components/layers/GraphHighlightLayer.js","webpack:///./src/app/graph2/controller/SelectionBox.js","webpack:///./src/app/graph2/inputhandler/SelectionBoxInputHandler.js","webpack:///./src/app/graph2/components/layers/SelectionBoxLayer.js","webpack:///./src/app/deprecated/icons/flat/PNGIcon.js","webpack:///./src/app/deprecated/icons/flat/JPGIcon.js","webpack:///./src/app/deprecated/icons/flat/SVGIcon.js","webpack:///./src/app/components/iconset/flat/PNGFileIcon.js","webpack:///./src/app/modules/nodegraph/filehandlers/NodalGraphImageExporter.js","webpack:///./src/app/components/iconset/TrashCanDetailedIcon.js","webpack:///./src/app/graph2/components/widgets/TrashCanWidget.js","webpack:///./src/app/components/iconset/MoveIcon.js","webpack:///./src/app/graph2/components/widgets/ModeTrayWidget.js","webpack:///./src/app/graph2/components/layers/ViewportEditLayer.js","webpack:///./src/app/graph2/controller/LabelFormatter.js","webpack:///./src/app/graph2/controller/GraphChangeHandler.js","webpack:///./src/app/graph2/controller/GraphController.js","webpack:///./src/app/graph2/renderer/GraphEdgeRenderer.js","webpack:///./src/app/graph2/components/layers/GraphEdgeLayer.js","webpack:///./src/app/graph2/renderer/GraphNodeRenderer.js","webpack:///./src/app/graph2/components/layers/GraphNodeLayer.js","webpack:///./src/app/graph2/renderer/StartNodeMarkerRenderer.js","webpack:///./src/app/graph2/components/layers/IndexedGraphStartMarkerLayer.js","webpack:///./src/app/graph2/components/widgets/pattern/PatternInput.js","webpack:///./src/app/graph2/components/widgets/LabelEditorWidget.js","webpack:///./src/app/util/file/Parser.js","webpack:///./src/app/util/version/SemanticVersion.js","webpack:///./src/app/graph2/NodeGraphParser.js","webpack:///./src/app/modules/nodegraph/graph/NodeGraphController.js","webpack:///./src/app/graph2/SafeUndoNodeGraphEventHandler.js","webpack:///./src/app/modules/nodegraph/components/layers/NodeGraphLayer.js","webpack:///./src/app/modules/nodegraph/components/layers/NodeGraphOverlayLayer.js","webpack:///./src/app/modules/nodegraph/NodeGraphModule.js"],"names":["GraphNode","id","_this","x","arguments","length","undefined","y","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","_label","GraphElement","dst","label","usePosition","_get","prototype","Math","floor","GraphEdge","from","to","_from","_to","node","Error","HALFPI","PI","result","isPlaceholder","dy","dx","atan2","halfPlaceholderLength","getPlaceholderLength","placeholderLength","getNodeSize","src","getHashString","AbstractInputHandler","pointer","zoomValue","prevValue","EVENT_SOURCE_NODE","DefaultNodeShapeRenderer","props","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","Fragment","cx","position","cy","r","radius","fill","color","stroke","outline","onMouseOver","onMouseOut","cursor","pointerEvents","DefaultLabelRenderer","style","userSelect","fontSize","concat","min","max","textAnchor","NodeRenderer","React","Component","NodeShapeRenderer","NodeLabelRenderer","e","target","type","elementID","_id","SIXTH_PI","HALF_PI","DIRECTED_FORWARD","EVENT_SOURCE_FORWARD_ENDPOINT","EVENT_SOURCE_EDGE","EVENT_SOURCE_LABEL","DefaultEndpointRenderer","d","sin","angle","cos","transform","direction","labels","map","str","i","key","reverse","alignmentBaseline","index","EdgeRenderer","fromAngle","toAngle","directed","ForwardEndpointRenderer","forwardEndpointRenderer","endpointRenderer","BackwardEndpointRenderer","backwardEndpointRenderer","EdgeLabelRenderer","labelRenderer","fromPoint","toPoint","centerPoint","center","reverseLabel","quadLine","dftx","dfty","dfcx","dfcy","ftrad","fcrad","abs","pathData","strokeWidth","split","NodeGraph","nodeClass","edgeClass","_nodeClass","_edgeClass","_nodeMapping","Map","_edgeMapping","clearEdges","clearNodes","size","minX","minY","maxX","maxY","width","height","minNX","Number","MAX_VALUE","minNY","maxNX","MIN_VALUE","maxNY","maxNodeSize","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","values","Symbol","iterator","next","done","value","err","return","minEX","minEY","maxEX","maxEY","startPoint","endPoint","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","edge","getStartPoint","getEndPoint","getCenterPoint","sx","sy","ex","ey","string","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","stringHash","addNode","guid","getGraphElementID","setGraphElementID","set","has","delete","nullSourceEdges","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","getEdges","getEdgeFrom","push","getEdgeTo","setEdgeTo","_i","deleteEdge","clear","get","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","getNodes","getNodeLabel","Array","addEdge","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","getEdgeLabel","QuadraticEdge","_quad","radians","coords","prevNode","setQuadraticByCoords","fromx","fromy","midpointx","midpointy","angleOffset","sqrt","outrad","inrad","maxdr","getDirectionalVector","isQuadratic","getQuadraticAsCoords","px","py","nodeSize","getMidPoint","qcoords","qx","qy","isSelfLoop","GRAPH_EVENT_NODE_DELETE","GRAPH_EVENT_NODE_DELETE_ALL","GRAPH_EVENT_NODE_EDIT_WHILE_DELETE","GraphNodeInputHandler","inputController","graphController","_inputController","_graphController","_cachedPosition","currentTargetType","getCurrentTargetType","isTrashMode","currentTargetSource","getCurrentTargetSource","getGraph","deleteNode","emitGraphEvent","isMoveMode","getInputAdapter","openLabelEditor","hasChanged","onInputEvent","hasActiveTarget","labelFormatter","getLabelFormatter","createNode","setNodeLabel","getDefaultNodeLabel","selectionBox","getSelectionBox","hasSelection","isTargetInSelection","clearSelection","bindActiveTarget","targetSource","getActiveTargetSource","getSelection","moveNodeTo","unbindActiveTarget","graph","lerp","other","diameter","nextDX","nextDY","GRAPH_EVENT_EDGE_DELETE","GRAPH_EVENT_EDGE_EDIT_WHILE_DELETE","GraphEdgeInputHandler","_cachedEdgeQuads","_cachedEdgeTo","_cachedPointer","_newEdge","_shouldDeleteEdgePlaceholder","_shouldDeleteEdgeWithEmptyLabel","flag","_this2","targetEdge","createEdge","setNodeEventsOnly","getQuadraticRadians","getQuadraticLength","setQuadraticRadians","setQuadraticLength","targetType","getActiveTargetType","handleDragMoveForEndpoint","getImmediateTargetType","immediateTargetSource","getImmediateTargetSource","_this3","isNewEdge","edgeTo","setEdgeLabel","getDefaultEdgeLabel","EVENT_SOURCE_START_MARKER","StartMarkerRenderer","offset","diameterX","GRAPH_EVENT_START_MARKER_CHANGE","GraphStartMarkerInputHandler","_ghostMarker","_cachedMarkerTarget","setStartNode","AbstractEventHandler","undoManager","ZoomInIcon","PureComponent","react_default","className","xmlns","viewBox","ZoomOutIcon","ZoomOutIcon_classCallCheck","ZoomOutIcon_possibleConstructorReturn","ZoomOutIcon_getPrototypeOf","ZoomWidget","ZoomWidget_classCallCheck","ZoomWidget_getPrototypeOf","onZoomIn","bind","ZoomWidget_assertThisInitialized","onZoomOut","viewportAdapter","viewScale","getScale","addScale","toFixed","Style","zoom_container","IconButton","zoom_button","title","onClick","iconset_ZoomInIcon","iconset_ZoomOutIcon","zoom_label","PinpointIcon","PinpointIcon_classCallCheck","PinpointIcon_possibleConstructorReturn","PinpointIcon_getPrototypeOf","FocusCenterWidget","FocusCenterWidget_classCallCheck","FocusCenterWidget_getPrototypeOf","FocusCenterWidget_assertThisInitialized","setOffset","center_focus_button","disabled","getOffsetX","getOffsetY","iconset_PinpointIcon","ViewportNavigationLayer","ViewportNavigationLayer_classCallCheck","ViewportNavigationLayer_possibleConstructorReturn","ViewportNavigationLayer_getPrototypeOf","navbar_container","components_widgets_ZoomWidget","navbar_widget_container","components_widgets_FocusCenterWidget","navbar_widget","children","userClearGraph","app","graphOnly","callback","window","confirm","I18N","toString","getCurrentModule","getGraphController","getUndoManager","captureEvent","getSession","setProjectName","__webpack_require__","__webpack_exports__","ViewportAdapter","_element","_offsetX","_offsetY","_nextOffsetX","_nextOffsetY","_offsetDamping","_scaleFactor","_minScale","_maxScale","element","scale","damping","clientX","clientY","ctm","getScreenCTM","f","dscale","InputContext","InputContext_classCallCheck","_inputHandlers","inputHandler","priority","splice","indexOf","eventName","_len","eventArgs","_key","handlerEventCallback","apply","InputPointer","inputAdapter","InputPointer_classCallCheck","_inputAdapter","_viewportAdapter","_active","_x","_y","_inputpos","pos","LONG_TAP_TICKS","DOUBLE_TAP_TICKS","SCROLL_SENSITIVITY","CURSOR_RADIUS_SQU","CURSOR_RADIUS","DRAGGING_BUFFER_SQU","DRAGGING_BUFFER","InputAdapter","InputAdapter_classCallCheck","_contexts","_activeDragHandler","_cursor","_mousemove","_mouseup","_touchmove","_touchend","_timer","_pointer","_dragging","_altinput","_holdInputDelay","_dblInputDelay","_scrollSensitivity","_minTapRadius","_draggingRadiusSqu","_prevEmptyInput","_prevEmptyTime","_prevEmptyX","_prevEmptyY","onContextMenu","_assertThisInitialized","onMouseDown","onMouseMove","onTouchStart","onWheel","onMouseDownThenMove","onMouseDownThenUp","onTouchStartThenMove","onTouchStartThenEnd","onDelayedInputDown","context","unshift","shift","SVGElement","setElement","addEventListener","onTouchMove","removeEventListener","update","_get2","handleEvent","stopPropagation","preventDefault","document","activeElement","blur","focus","button","ctrlKey","onInputDown","mouse","transformScreenToView","setPosition","cancelInputEvent","onInputMove","onInputUp","changedTouches","touch","deltaY","prev","setScale","beginInput","setTimeout","onDragMove","getDistanceSquToInitial","inputEventPosition","getInputEventPosition","timer","clearTimeout","onDragStop","dist","dt","Date","now","endInput","isActive","SMOOTH_OFFSET_DAMPING","MIN_SCALE","MAX_SCALE","ViewportComponent","ViewportComponent_classCallCheck","ViewportComponent_possibleConstructorReturn","ViewportComponent_getPrototypeOf","_ref","createRef","setMinScale","setMaxScale","setOffsetDamping","addInputHandler","initialize","current","destroy","viewport","baseViewSize","viewSize","halfViewSize","getViewportAdapter","getSVGViewBoxString","getSVGTransformString","ref","viewport_component","DEFAULT_MOVE_MODE_FIRST","InputController","InputController_classCallCheck","_trashMode","_nodeOnly","_moveModeFirst","_handlingInput","_target","source","_activeTarget","input","_immediateTarget","_selectionBox","updateCurrentTarget","data","pointerEvent","isAltInput","ViewportInputHandler","ViewportInputHandler_classCallCheck","ViewportInputHandler_possibleConstructorReturn","ViewportInputHandler_getPrototypeOf","hasCurrentTarget","addOffset","GraphView","GraphView_classCallCheck","GraphView_possibleConstructorReturn","GraphView_getPrototypeOf","_inputContext","_viewportComponent","_viewportInputHandler","inputContext","bindContext","clearInputHandlers","unbindContext","renderGraph","renderOverlay","input_components_ViewportComponent","BoxRenderer","visible","fromX","fromY","toX","toY","fillOpacity","HIGHLIGHT_LINE_ARRAY","GraphHighlightRenderer","GraphHighlightRenderer_classCallCheck","GraphHighlightRenderer_possibleConstructorReturn","GraphHighlightRenderer_getPrototypeOf","strokeDashoffset","strokeDasharray","GraphHighlightLayer","GraphHighlightLayer_classCallCheck","GraphHighlightLayer_possibleConstructorReturn","GraphHighlightLayer_getPrototypeOf","highlights","nodes","renderer_GraphHighlightRenderer","edges","SelectionBox","SelectionBox_classCallCheck","_boundingBox","targets","box","mx","my","lx","ly","x1","y1","x2","y2","getNodesWithin","includes","SelectionBoxInputHandler","SelectionBoxInputHandler_classCallCheck","SelectionBoxInputHandler_possibleConstructorReturn","SelectionBoxInputHandler_getPrototypeOf","beginSelection","isVisible","updateSelection","endSelection","SelectionBoxLayer","SelectionBoxLayer_classCallCheck","SelectionBoxLayer_possibleConstructorReturn","SelectionBoxLayer_getPrototypeOf","_selectionBoxInputHandler","setSelectionBox","inputPriority","removeInputHandler","selectionBoundingBox","getBoundingBox","layers_GraphHighlightLayer","renderer_BoxRenderer","PNGIcon","points","JPGIcon","JPGIcon_classCallCheck","JPGIcon_possibleConstructorReturn","JPGIcon_getPrototypeOf","SVGIcon","SVGIcon_classCallCheck","SVGIcon_possibleConstructorReturn","SVGIcon_getPrototypeOf","PNGFileIcon","PNGFileIcon_classCallCheck","PNGFileIcon_possibleConstructorReturn","PNGFileIcon_getPrototypeOf","IMAGE_TYPE_PNG","NodalGraphImageExporter","imageType","NodalGraphImageExporter_classCallCheck","NodalGraphImageExporter_possibleConstructorReturn","NodalGraphImageExporter_getPrototypeOf","_imageType","SessionExporter","exportType","session","currentModule","fileName","getProjectName","svgElement","getGraphView","getViewportComponent","getSVGElement","workspaceDim","baseVal","svg","processSVGForExport","fileExt","Promise","resolve","name","image-type","themeManager","attributeValue","startIndex","stopIndex","substring","getStyleByName","getValue","rgb","ColorHelper","offsetX","offsetY","bounds","getBoundingRect","w","EXPORT_PADDING_X","h","EXPORT_PADDING_Y","clone","cloneNode","setAttribute","getApp","getThemeManager","getElementsByTagName","strokeValue","getAttribute","strokeResult","processColorAttribute","fillValue","fillResult","uiElements","getElementsByClassName","remove","BWIcon","IMAGE_EXPORTERS","registerImageExporters","exportManager","exporter","registerExporter","getImageType","TrashCanDetailedIcon","TrashCanWidget","TrashCanWidget_classCallCheck","TrashCanWidget_getPrototypeOf","_buttonElement","state","active","forceActive","_doubleTapTimeout","onMouseEnter","TrashCanWidget_assertThisInitialized","onMouseLeave","onAnyMouseDownNotConsumed","setState","onChange","_this4","onClear","documentElement","_this5","hide","refButton","trash_container","iconset_TrashCanDetailedIcon","MoveIcon","MoveIcon_classCallCheck","MoveIcon_possibleConstructorReturn","MoveIcon_getPrototypeOf","ModeTrayWidget","ModeTrayWidget_classCallCheck","ModeTrayWidget_possibleConstructorReturn","ModeTrayWidget_getPrototypeOf","mode","tray_container","tray_button","EditPencilIcon","iconset_MoveIcon","ViewportEditLayer","ViewportEditLayer_classCallCheck","ViewportEditLayer_getPrototypeOf","onTrashChange","ViewportEditLayer_assertThisInitialized","onTrashClear","onModeChange","setTrashMode","getDrawerComponent","setViewportColor","clearGraph","setMoveModeFirst","moveMode","isHandlingInput","isMoveModeFirst","view_container","components_widgets_TrashCanWidget","view_widget","bottom","right","isEmpty","isUsingTouch","isDragging","components_widgets_ModeTrayWidget","left","LabelFormatter","nextLabel","nextNodeLabel","nextEdgeLabel","DEFAULT_LABEL_FORMATTER","DEFAULT_REFRESH_TICKS","GraphChangeHandler","refreshTicks","GraphChangeHandler_classCallCheck","_cachedGraphHash","_refreshTicks","_elapsedTicks","Infinity","_listeners","listener","graphHash","getHashCode","GraphController","GraphController_classCallCheck","_graph","_graphChangeHandler","_labelEditor","_labelFormatter","labelEditor","eventData","onGraphEvent","defaultLabel","prevLabel","openEditor","GraphEdgeRenderer","start","end","edgeDir","getEdgeDirection","GraphEdgeLayer","GraphEdgeLayer_classCallCheck","GraphEdgeLayer_possibleConstructorReturn","GraphEdgeLayer_getPrototypeOf","_graphEdgeInputHandler","Renderer","edgeRenderer","editable","hasPointerEvents","GraphNodeRenderer","GraphNodeLayer","GraphNodeLayer_classCallCheck","GraphNodeLayer_possibleConstructorReturn","GraphNodeLayer_getPrototypeOf","_graphNodeInputHandler","nodeRenderer","StartNodeMarkerRenderer","_prevSize","IndexedGraphStartMarkerLayer","IndexedGraphStartMarkerLayer_classCallCheck","IndexedGraphStartMarkerLayer_possibleConstructorReturn","IndexedGraphStartMarkerLayer_getPrototypeOf","_startMarkerInputHandler","IndexedGraphStartMarkerInputHandler","startMarkerRenderer","getGhostMarker","getStartNode","PatternInput","inputElement","placeholder","maxLength","multiLine","formatter","_submitTimeout","_submit","submitOnBlur","_skipBlur","_skipSelect","onFocus","onBlur","onKeyDown","select","submit","onSubmit","shiftKey","caretPosition","selectionStart","selectionEnd","ignore","separator","format","maxlength","multiline","rows","spellCheck","LabelEditorWidget","LabelEditorWidget_classCallCheck","LabelEditorWidget_getPrototypeOf","inputComponent","open","_targetCallback","onInputSubmit","LabelEditorWidget_assertThisInitialized","onInputBlur","graphElement","defaultValue","onCancel","_targetOnSubmit","_targetOnCancel","getNodeLabelFormatter","setFormatter","getEdgeLabelFormatter","resetValue","closeEditor","isEditorOpen","targetStyle","getElement","parentClientRect","getBoundingClientRect","screenPos","transformViewToScreen","offsetWidth","offsetHeight","top","editor_container","pattern_PatternInput","saveOnExit","Parser","SemanticVersion","major","minor","patch","SemanticVersion_classCallCheck","components","parseInt","otherVersion","VERSION","parse","NodeGraphParser","NodeGraphParser_classCallCheck","_nodeIndices","_typeof","dataVersion","canSupportVersion","nodeDatas","nodeCount","edgeDatas","edgeCount","onParseGraphCreate","nodeIndices","nodeData","onParseNode","edgeData","sourceNode","destinationNode","onParseEdge","onParseGraphResult","onComposeGraphCreate","graphNodes","graphEdges","onComposeNode","edgeSource","edgeDestination","onComposeEdge","onComposeGraphResult","graphData","targetGraph","hasQuad","targetNode","quadData","quad","getQuadratic","NodeGraphController","NodeGraphController_classCallCheck","NodeGraphController_possibleConstructorReturn","NodeGraphController_getPrototypeOf","_app","getNotificationManager","pushNotification","WARNING_LAYOUT_ID","SafeUndoNodeGraphEventHandler","graphParser","SafeUndoNodeGraphEventHandler_classCallCheck","SafeUndoNodeGraphEventHandler_possibleConstructorReturn","SafeUndoNodeGraphEventHandler_getPrototypeOf","_graphParser","_graphData","compose","prevEvent","getPreviousEvent","applyRedo","NodeGraphLayer","NodeGraphLayer_classCallCheck","NodeGraphLayer_possibleConstructorReturn","NodeGraphLayer_getPrototypeOf","graphView","getInputContext","_fsaNodeInputHandler","getInputController","NodeGraphOverlayLayer","NodeGraphOverlayLayer_classCallCheck","NodeGraphOverlayLayer_possibleConstructorReturn","NodeGraphOverlayLayer_getPrototypeOf","setLabelEditor","NodalGraphModule","NodeGraphModule_classCallCheck","_graphViewComponent","getRenderManager","addRenderer","RENDER_LAYER_WORKSPACE","layers_NodeGraphLayer","layers_NodeGraphOverlayLayer","getExportManager","setEventHandlerFactory","getDrawerManager","addPanelClass","PanelContainer","getHotKeyManager","registerHotKey","CTRL_KEY","tryExportFile","getToolbarComponent","closeBar"],"mappings":"yrCAQMA,cASF,SAAAA,EAAYC,GACZ,IAAAC,EADgBC,EAChBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADoB,EAAGG,EACvBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD2B,EAC3B,mGAAAI,CAAAC,KAAAT,IACIE,EAAAQ,EAAAD,KAAAE,EAAAX,GAAAY,KAAAH,KAAMR,KAEDE,EAAIA,EACTD,EAAKK,EAAIA,EAETL,EAAKW,OAAS,GANlBX,wPAVoBY,uDAqBpB,IADeC,EACfX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADmB,CAACD,EAAG,EAAGI,EAAG,GAIzB,OAFAQ,EAAIZ,EAAIM,KAAKN,EACbY,EAAIR,EAAIE,KAAKF,EACNQ,uCAUEC,GAGT,OADAP,KAAKI,OAASG,EACPP,4CAQM,OAAOA,KAAKI,6CAMb,OAAO,2CAIvB,IADcI,IACdb,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACI,OAAIa,EAEOC,EAAAP,EAAAX,EAAAmB,WAAA,gBAAAV,MAAAG,KAAAH,KAAoBQ,GAAe,IAC9CG,KAAKC,MAAMZ,KAAKN,GAAK,IAAMiB,KAAKC,MAAMZ,KAAKF,GAAK,IAAME,KAAKI,OAIhDK,EAAAP,EAAAX,EAAAmB,WAAA,gBAAAV,MAAAG,KAAAH,KAAoBQ,GAAe,IAAMR,KAAKI,4CAKlDb,uoCCpETsB,cASF,SAAAA,EAAYrB,EAAIsB,GAChB,IAAArB,EADsBsB,EACtBpB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADyB,KACzB,mGAAAI,CAAAC,KAAAa,IACIpB,EAAAQ,EAAAD,KAAAE,EAAAW,GAAAV,KAAAH,KAAMR,KAEDwB,MAAQF,EACbrB,EAAKwB,IAAMF,EAEXtB,EAAKW,OAAS,GANlBX,wPAVoBY,kDAmBRa,GAER,IAAKA,EAAM,MAAM,IAAIC,MAAM,iCAG3B,OADAnB,KAAKgB,MAAQE,EACNlB,uCAGDkB,GAGN,OADAlB,KAAKiB,IAAMC,EACJlB,0CAUEO,GAGT,OADAP,KAAKI,OAASG,EACPP,gDAKP,IAAMc,EAAOd,KAAKgB,MACZD,EAAKf,KAAKiB,IACVG,EAAST,KAAKU,GAAK,EACrBC,EAAS,EAEb,GAAItB,KAAKuB,gBAELD,EAASX,KAAKU,GAAK,MAGvB,CACI,IAAMG,EAAKT,EAAGjB,EAAIgB,EAAKhB,EACjB2B,EAAKV,EAAGrB,EAAIoB,EAAKpB,EACvB4B,EAASX,KAAKe,MAAMF,EAAIC,GAQ5B,OALIH,EAASF,GAAUE,GAAUF,KAE7BE,GAAUX,KAAKU,IAGZC,0CAIX,IADchB,EACdX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADoB,CAAED,EAAG,EAAGI,EAAG,GAErBgB,EAAOd,KAAKgB,MAGlB,OAFAV,EAAIZ,EAAIoB,EAAKpB,EACbY,EAAIR,EAAIgB,EAAKhB,EACNQ,2CAKX,IADeA,EACfX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADqB,CAAED,EAAG,EAAGI,EAAG,GAEtBgB,EAAOd,KAAKgB,MACZD,EAAKf,KAAKiB,IAChB,GAAIjB,KAAKuB,gBACT,CACI,IAAMI,EAAwB3B,KAAK4B,uBAAyB,EAC5DtB,EAAIZ,EAAIoB,EAAKpB,EAAIiC,EACjBrB,EAAIR,EAAIgB,EAAKhB,EAAI6B,OAIjBrB,EAAIZ,EAAIoB,EAAKpB,GAAKqB,EAAGrB,EAAIoB,EAAKpB,GAAK,EACnCY,EAAIR,EAAIgB,EAAKhB,GAAKiB,EAAGjB,EAAIgB,EAAKhB,GAAK,EAEvC,OAAOQ,wCAIX,IADYA,EACZX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADkB,CAAED,EAAG,EAAGI,EAAG,GAEzB,GAAIE,KAAKuB,gBACT,CACI,IAAMT,EAAOd,KAAKgB,MACZa,EAAoB7B,KAAK4B,uBAC/BtB,EAAIZ,EAAIoB,EAAKpB,EAAImC,EACjBvB,EAAIR,EAAIgB,EAAKhB,EAAI+B,MAGrB,CACI,IAAMd,EAAKf,KAAKiB,IAChBX,EAAIZ,EAAIqB,EAAGrB,EACXY,EAAIR,EAAIiB,EAAGjB,EAEf,OAAOQ,iDAGc,OAAON,KAAKgB,MAAMc,sDACzB,OAAoB,OAAb9B,KAAKiB,yCACf,OAAOjB,KAAKgB,QAAUhB,KAAKiB,2CAOzB,OAAOjB,KAAKI,6CAEb,OAAOJ,KAAKgB,0CACd,OAAOhB,KAAKiB,4CAI1B,IADcT,IACdb,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACUoC,EAAM/B,KAAKgB,MAAQhB,KAAKgB,MAAMgB,cAAcxB,GAAe,GAE3DF,EAAMN,KAAKiB,IAAMjB,KAAKiB,IAAIe,cAAgBhC,KAAKiB,IAAIe,cAAcxB,GAAe,IAAM,GAC5F,OAAOC,EAAAP,EAAAW,EAAAH,WAAA,gBAAAV,MAAAG,KAAAH,KAAoBQ,GAAe,IAAMuB,EAAM,IAAMzB,EAAM,IAAMN,KAAKI,4CAItES,kNClJToB,aAEF,SAAAA,iGAAclC,CAAAC,KAAAiC,kEAOEC,GAAW,OAAO,uCAQrBA,GAAW,OAAO,0CAQfA,GAAW,OAAO,0CASlBA,GAAW,OAAO,2CAQjBA,GAAW,OAAO,sCAcvBA,GAAW,OAAO,qCAQnBA,uCAQAA,6CAKMA,yCAMJA,EAASC,EAAWC,GAE7B,OAAO,uCAIAH,m4BC1Ff,IAEaI,EAAoB,OAEpBC,EAA2B,SAAAC,GAAK,OACzCC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,UAAQE,GAAIL,EAAMM,SAASnD,EAAGoD,GAAIP,EAAMM,SAAS/C,EAC7CiD,EAAGR,EAAMS,OACTC,KAAMV,EAAMW,MACZC,OAAQZ,EAAMa,WAChBb,EAAMc,aAAed,EAAMe,aACzBd,EAAAC,EAAAC,cAAA,UAAQE,GAAIL,EAAMM,SAASnD,EAAGoD,GAAIP,EAAMM,SAAS/C,EAC7CiD,EAAGR,EAAMS,OAZa,EAatBC,KAAK,cACLM,OAAO,UACPF,YAAad,EAAMc,YACnBC,WAAYf,EAAMe,WAClBE,cAAejB,EAAMiB,kBAIxBC,EAAuB,SAAAlB,GAAK,OACrCC,EAAAC,EAAAC,cAAA,QAAMhD,EAAG6C,EAAMM,SAASnD,EAAGI,EAAGyC,EAAMM,SAAS/C,EAAI,EAC7C0D,cAAc,OACdE,MAAO,CACHC,WAAY,OACZC,SAAQ,GAAAC,OAAM,EAAIlD,KAAKmD,IAAInD,KAAKoD,IAAIxB,EAAMhC,MAAMX,OAAS,EAAG,GAAK,EAAG,IAA5D,OAEZoE,WAAW,SACXf,KAAMV,EAAMW,OACXX,EAAMhC,QAIT0D,cAEF,SAAAA,EAAY1B,GAAO,mGAAAxC,CAAAC,KAAAiE,GAAAhE,EAAAD,KAAAE,EAAA+D,GAAA9D,KAAAH,KAAQuC,0PAFJ2B,IAAMC,kDAOzB,IAAMtB,EAAW7C,KAAKuC,MAAMM,SACtBG,EAAShD,KAAKuC,MAAMS,QAAU,GAC9BzC,EAAQP,KAAKuC,MAAMhC,OAAS,GAC5B2C,EAAQlD,KAAKuC,MAAMW,OAAS,UAC5BE,EAAUpD,KAAKuC,MAAMa,SAAW,UAChCC,EAAcrD,KAAKuC,MAAMc,YACzBC,EAAatD,KAAKuC,MAAMe,WACxBE,EAAgBxD,KAAKuC,MAAMiB,eAAiB,iBAE5CY,EAAoB9B,EACpB+B,EAAoBZ,EAE1B,OACIjB,EAAAC,EAAAC,cAAA,SACK0B,GACG5B,EAAAC,EAAAC,cAAC0B,EAAD,CACIvB,SAAUA,EACVG,OAAQA,EACRE,MAAOA,EACPE,QAASA,EACTC,YAAaA,EAAc,SAAAiB,IAETA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDC,KAAOnC,EACbgB,EAAYiB,IACZ,KACJhB,WAAYA,EAAa,SAAAgB,IAEPA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDC,KAAOnC,EACbiB,EAAWgB,IACX,KACJd,cAAeA,IACtBa,GACG7B,EAAAC,EAAAC,cAAC2B,EAAD,CACIxB,SAAUA,EACVtC,MAAOA,EACP2C,MAAOE,0CAMhBa,kNCjFT5D,aAOF,SAAAA,EAAYoE,gGACZ1E,CAAAC,KAAAK,GACIL,KAAK0E,IAAMD,mEAQGA,GAGd,OADAzE,KAAK0E,IAAMD,EACJzE,8CAUX,IADeM,EACfX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADqB,CAAED,EAAG,EAAGI,EAAG,GAG5B,OADAQ,EAAIZ,EAAIY,EAAIR,EAAI,EACTQ,8CAOW,OAAON,KAAK0E,8CAcA/E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAAE,OAAOK,KAAK0E,yCAGrCrE,m+BC3Df,IAGMsE,EAAWhE,KAAKU,GAAK,EACrBuD,EAAUjE,KAAKU,GAAK,EAGbwD,EAAmB,UAKnBC,EAAgC,mBAEhCC,EAAoB,OACpBC,EAAqB,QAErBC,EAA0B,SAAA1C,GAAK,OACxCC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,QAAMwC,EACF,MACC3C,EAAMM,SAASnD,EAAK6C,EAAM3C,OAASe,KAAKwE,IAAI5C,EAAM6C,MAAQT,IAC3D,KACCpC,EAAMM,SAAS/C,EAAKyC,EAAM3C,OAASe,KAAK0E,IAAI9C,EAAM6C,MAAQT,IAC3D,MACOpC,EAAMM,SAASnD,EAAI,IAAM6C,EAAMM,SAAS/C,EAC/C,OAECyC,EAAMM,SAASnD,EAAK6C,EAAM3C,OAASe,KAAKwE,IAAI5C,EAAM6C,MAAQT,IAC3D,KACCpC,EAAMM,SAAS/C,EAAKyC,EAAM3C,OAASe,KAAK0E,IAAI9C,EAAM6C,MAAQT,IAC/DxB,OAAQZ,EAAMW,MACdD,KAAK,SACLT,EAAAC,EAAAC,cAAA,UAAQE,GAAIL,EAAMM,SAASnD,EAAK6C,EAAM3C,OAASe,KAAK0E,KAAK9C,EAAM6C,MAAQR,GAAW9B,GAAIP,EAAMM,SAAS/C,EAAKyC,EAAM3C,OAASe,KAAKwE,KAAK5C,EAAM6C,MAAQR,GAC7I7B,EAAGR,EAAM3C,OACTqD,KAAK,cACLM,OAAO,UACPF,YAAad,EAAMc,YACnBC,WAAYf,EAAMe,WAClBE,cAAejB,EAAMiB,kBAIpBC,EAAuB,SAAAlB,GAAK,OACrCC,EAAAC,EAAAC,cAAA,KAAG4C,UAAW,aAAe/C,EAAMM,SAASnD,EAAI,IAAM6C,EAAMM,SAAS/C,EAAI,YAEtC,IAAlByC,EAAMgD,UAAkB5E,KAAKU,GAAM,KAE5CkB,EAAMiD,QAAUjD,EAAMiD,OAAO5F,OAAS,GACtC2C,EAAMiD,OAAOC,IAAI,SAACC,EAAKC,GAEnB,IAAMtC,EAAcd,EAAMc,YACpBC,EAAaf,EAAMe,WACzB,OACId,EAAAC,EAAAC,cAAA,QAAMkD,IAAKF,EAAM,IAAMC,EACnBL,UAAW,gBAA6B,IAAVK,EAAI,GAAY,KACzCpD,EAAMsD,QAAU,gBAAkB,IACvCC,kBAAkB,UAClBpC,MAAO,CAAEC,WAAY,QACrBK,WAAW,SACXf,KAAMV,EAAMW,MACZK,OAAO,UACPF,YAAaA,EAAc,SAAAiB,IAETA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDwB,MAAQJ,EACdtC,EAAYiB,IACZ,KACJhB,WAAYA,EAAa,SAAAgB,IAEPA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDwB,MAAQJ,EACdrC,EAAWgB,IACX,KACJd,cAAejB,EAAMiB,eACpBkC,OAQnBM,cAEF,SAAAA,EAAYzD,GACZ,mGAAAxC,CAAAC,KAAAgG,GAAA/F,EAAAD,KAAAE,EAAA8F,GAAA7F,KAAAH,KACUuC,0PAJa2B,IAAMC,kDAUzB,IAyBI8B,EACAC,EA1BEC,EAAWnG,KAAKuC,MAAM4D,UAnFP,aAqFfC,EACDD,IAAatB,GAvFG,SAuFiBsB,EAC7BnG,KAAKuC,MAAM8D,yBACRrG,KAAKuC,MAAM+D,kBACXrB,EAA2B,KACjCsB,EA5FmB,aA6FpBJ,GA5FgB,SA4FkBA,EAC9BnG,KAAKuC,MAAMiE,0BACRxG,KAAKuC,MAAM+D,kBACXrB,EAA2B,KACjCwB,EAAoBzG,KAAKuC,MAAMmE,eAAiBjD,EAEhDkD,EAAY3G,KAAKuC,MAAMzB,KACvB8F,EAAU5G,KAAKuC,MAAMxB,GACrB8F,EAAc7G,KAAKuC,MAAMuE,OACzBvG,EAAQP,KAAKuC,MAAMhC,OAAS,GAC5BgF,EAAYvF,KAAKuC,MAAMgD,WAAa,EACpCrC,EAAQlD,KAAKuC,MAAMW,OAAS,UAC5BG,EAAcrD,KAAKuC,MAAMc,YACzBC,EAAatD,KAAKuC,MAAMe,WACxBE,EAAgBxD,KAAKuC,MAAMiB,eAAiB,iBAE9CuD,GAAe,EAGfC,EAAW,KAETC,EAAON,EAAUjH,EAAIkH,EAAQlH,EAC7BwH,EAAOP,EAAU7G,EAAI8G,EAAQ9G,EAC7BqH,EAAOR,EAAUjH,EAAImH,EAAYnH,EACjC0H,EAAOT,EAAU7G,EAAI+G,EAAY/G,EACjCuH,EAAQ1G,KAAKe,MAAMwF,EAAMD,GACzBK,EAAQ3G,KAAKe,MAAM0F,EAAMD,GAC/B,GAAIxG,KAAK4G,IAAIF,EAAQC,IAhIC,IAkIlBpB,EAAUvF,KAAKe,MAAMmF,EAAYnH,EAAIkH,EAAQlH,EAAGmH,EAAY/G,EAAI8G,EAAQ9G,GAAKa,KAAKU,GAClF4E,EAAYtF,KAAKe,MAAMmF,EAAYnH,EAAIiH,EAAUjH,EAAGmH,EAAY/G,EAAI6G,EAAU7G,GAAKa,KAAKU,GACxF2F,EAAW,KAAOJ,EAAQlH,EAAI,IAAMkH,EAAQ9G,EAC5CiH,GAAe,MAGnB,CACI,IAAMnE,GAAuB,EAAhBiE,EAAYnH,EAASiH,EAAUjH,EAAIkH,EAAQlH,GAAK,EACvDoD,GAAuB,EAAhB+D,EAAY/G,EAAS6G,EAAU7G,EAAI8G,EAAQ9G,GAAK,EAC7DoG,EAAUvF,KAAKe,MAAMkB,EAAKgE,EAAQlH,EAAGoD,EAAK8D,EAAQ9G,GAAKa,KAAKU,GAC5D4E,EAAYtF,KAAKe,MAAMkB,EAAK+D,EAAUjH,EAAGoD,EAAK6D,EAAU7G,GAAKa,KAAKU,GAClE2F,EAAW,KAAOpE,EAAK,IAAME,EAAK,IAAM8D,EAAQlH,EAAI,IAAMkH,EAAQ9G,EAClEiH,EAAejE,EAAK+D,EAAY/G,EA7IN,EAgJ9B,IAAM0H,EAAQ,KAAA3D,OAAQ8C,EAAUjH,EAAlB,KAAAmE,OAAuB8C,EAAU7G,EAAjC,KAAA+D,OAAsCmD,GACpD,OACIxE,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,QAAMwC,EAAGsC,EACLrE,OAAQD,EACRD,KAAK,SACTT,EAAAC,EAAAC,cAAA,QAAMwC,EAAGsC,EACLrE,OAAO,cACPsE,YAAW,GAAA5D,OApJD,EAoJC,MACXZ,KAAK,OACLM,OAAO,UACPF,YAAaA,EAAc,SAAAiB,IAETA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDC,KAAOO,EACb1B,EAAYiB,IACZ,KACJhB,WAAYA,EAAa,SAAAgB,IAEPA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDC,KAAOO,EACbzB,EAAWgB,IACX,KACJd,cAAeA,IAClB4C,GACG5D,EAAAC,EAAAC,cAAC0D,EAAD,CACIvD,SAAU+D,EACVxB,MAAOc,EACPtG,OA3KJ,GA4KIsD,MAAOA,EACPG,YAAaA,EAAc,SAAAiB,IAETA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDC,KAAOM,EACbzB,EAAYiB,IACZ,KACJhB,WAAYA,EAAa,SAAAgB,IAEPA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDC,KAAOM,EACbxB,EAAWgB,IACX,KACJd,cAAeA,IACtB+C,GACG/D,EAAAC,EAAAC,cAAC6D,EAAD,CACI1D,SAAU8D,EACVvB,MAAOa,EACPrG,OA9LJ,GA+LIsD,MAAOA,EACPG,YAAaA,EAAc,SAAAiB,IAETA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDC,KAxLY,oBAyLlBnB,EAAYiB,IACZ,KACJhB,WAAYA,EAAa,SAAAgB,IAEPA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDC,KA9LY,oBA+LlBlB,EAAWgB,IACX,KACJd,cAAeA,IACtBiD,GACGjE,EAAAC,EAAAC,cAAC+D,EAAD,CACI5D,SAAUgE,EACVrB,OAAQjF,EAAMmH,MAAM,MACpBnC,UAAWA,EACXM,QAASkB,EACT7D,MAAOA,EACPG,YAAaA,EAAc,SAAAiB,IAETA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDC,KAAOQ,EACb3B,EAAYiB,IACZ,KACJhB,WAAYA,EAAa,SAAAgB,IAEPA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDC,KAAOQ,EACb1B,EAAWgB,IACX,KACJd,cAAeA,0CAMxBwC,+OCnOT2B,aAOF,SAAAA,IACA,IADYC,EACZjI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADwBJ,IAAWsI,EACnClI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD+CkB,iGAC/Cd,CAAAC,KAAA2H,GACI3H,KAAK8H,WAAaF,EAClB5H,KAAK+H,WAAaF,EAElB7H,KAAKgI,aAAe,IAAIC,IACxBjI,KAAKkI,aAAe,IAAID,2DAQxBjI,KAAKmI,aACLnI,KAAKoI,+CASL,OAAOpI,KAAKgI,aAAaK,MAAQ,GAAKrI,KAAKkI,aAAaG,MAAQ,4CAWhE,GAAIrI,KAAKgI,aAAaK,MAAQ,EAAG,MAAO,CACpCC,KAAM,EACNC,KAAM,EACNC,KAAM,EACNC,KAAM,EACNC,MAAO,EACPC,OAAQ,GAGZ,IAAIC,EAAQC,OAAOC,UACfC,EAAQF,OAAOC,UACfE,EAAQH,OAAOI,UACfC,EAAQL,OAAOI,UAEfE,EAAc,EAftBC,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IAgBI,QAAA0J,EAAAC,EAAmBxJ,KAAKgI,aAAayB,SAArCC,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADWlI,EACXqI,EAAAO,MACUpK,EAAIwB,EAAKxB,EACTI,EAAIoB,EAAKpB,EACTuI,EAAOnH,EAAKY,cACduG,EAAOc,IAAaA,EAAcd,GAEtCO,EAAQjI,KAAKmD,IAAI8E,EAAOlJ,GACxBsJ,EAAQrI,KAAKoD,IAAIiF,EAAOtJ,GAExBqJ,EAAQpI,KAAKmD,IAAIiF,EAAOjJ,GACxBoJ,EAAQvI,KAAKoD,IAAImF,EAAOpJ,IA3BhC,MAAAiK,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GA8BIV,GAASO,EACTJ,GAASI,EACTH,GAASG,EACTD,GAASC,EAET,IAAIc,EAAQpB,OAAOC,UACfoB,EAAQrB,OAAOC,UACfqB,EAAQtB,OAAOI,UACfmB,EAAQvB,OAAOI,UAEboB,EAAa,CAAE3K,EAAG,EAAGI,EAAG,GACxBwK,EAAW,CAAE5K,EAAG,EAAGI,EAAG,GACtB+G,EAAc,CAAEnH,EAAG,EAAGI,EAAG,GA1CnCyK,GAAA,EAAAC,GAAA,EAAAC,OAAA5K,EAAA,IA2CI,QAAA6K,EAAAC,EAAmB3K,KAAKkI,aAAauB,SAArCC,OAAAC,cAAAY,GAAAG,EAAAC,EAAAf,QAAAC,MAAAU,GAAA,EACA,KADWK,EACXF,EAAAZ,MAEIc,EAAKC,cAAcR,GACnBO,EAAKE,YAAYR,GACjBM,EAAKG,eAAelE,GAEpB,IAAMmE,EAAKX,EAAW3K,EAChBuL,EAAKZ,EAAWvK,EAChBoL,EAAKZ,EAAS5K,EACdyL,EAAKb,EAASxK,EACd8C,EAAKiE,EAAYnH,EACjBoD,EAAK+D,EAAY/G,EAEvBmK,EAAQtJ,KAAKmD,IAAImG,EAAOe,EAAIE,EAAItI,GAChCuH,EAAQxJ,KAAKoD,IAAIoG,EAAOa,EAAIE,EAAItI,GAEhCsH,EAAQvJ,KAAKmD,IAAIoG,EAAOe,EAAIE,EAAIrI,GAChCsH,EAAQzJ,KAAKoD,IAAIqG,EAAOa,EAAIE,EAAIrI,IA7DxC,MAAAiH,GAAAS,GAAA,EAAAC,EAAAV,EAAA,YAAAQ,GAAA,MAAAI,EAAAX,QAAAW,EAAAX,SAAA,WAAAQ,EAAA,MAAAC,GAgEI,IAAMnJ,EAAS,CACXgH,KAAM3H,KAAKmD,IAAI8E,EAAOqB,GACtB1B,KAAM5H,KAAKmD,IAAIiF,EAAOmB,GACtB1B,KAAM7H,KAAKoD,IAAIiF,EAAOmB,GACtB1B,KAAM9H,KAAKoD,IAAImF,EAAOkB,GACtB1B,MAAO,EACPC,OAAQ,GAIZ,OAFArH,EAAOoH,MAAQpH,EAAOkH,KAAOlH,EAAOgH,KACpChH,EAAOqH,OAASrH,EAAOmH,KAAOnH,EAAOiH,KAC9BjH,wCAWX,IADYd,IACZb,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACQyL,EAAS,GADjBC,GAAA,EAAAC,GAAA,EAAAC,OAAA1L,EAAA,IAEI,QAAA2L,EAAAC,EAAmBzL,KAAKgI,aAAayB,SAArCC,OAAAC,cAAA0B,GAAAG,EAAAC,EAAA7B,QAAAC,MAAAwB,GAAA,EACA,CACID,GADJI,EAAA1B,MACmB9H,cAAcxB,GAAe,KAJpD,MAAAuJ,GAAAuB,GAAA,EAAAC,EAAAxB,EAAA,YAAAsB,GAAA,MAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,MAAAC,GAMIH,GAAU,IANd,IAAAM,GAAA,EAAAC,GAAA,EAAAC,OAAA/L,EAAA,IAOI,QAAAgM,EAAAC,EAAmB9L,KAAKkI,aAAauB,SAArCC,OAAAC,cAAA+B,GAAAG,EAAAC,EAAAlC,QAAAC,MAAA6B,GAAA,EACA,CACIN,GADJS,EAAA/B,MACmB9H,cAAcxB,GAAe,KATpD,MAAAuJ,GAAA4B,GAAA,EAAAC,EAAA7B,EAAA,YAAA2B,GAAA,MAAAI,EAAA9B,QAAA8B,EAAA9B,SAAA,WAAA2B,EAAA,MAAAC,GAWI,OAAOG,YAAWX,wCAatB,IADW1L,EACXC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADe,EAAGG,EAClBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADsB,EAAGH,EACzBG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD8B,KAE1B,OAAOK,KAAKgM,QAAQ,IAAKhM,KAAK8H,WAAYtI,GAAMyM,cAAQvM,EAAGI,oCASvDoB,GAIJ,OAFKA,EAAKgL,qBAAqBhL,EAAKiL,kBAAkBF,eACtDjM,KAAKgI,aAAaoE,IAAIlL,EAAKgL,oBAAqBhL,GACzCA,qCAQAA,GAEP,IAAMuD,EAAYvD,EAAKgL,oBACvB,GAAIlM,KAAKgI,aAAaqE,IAAI5H,GAC1B,CACIzE,KAAKgI,aAAasE,OAAO7H,GAEzB,IAAM8H,EAAkB,GAH5BC,GAAA,EAAAC,GAAA,EAAAC,OAAA7M,EAAA,IAKI,QAAA8M,EAAAC,EAAmB5M,KAAK6M,WAAxBnD,OAAAC,cAAA6C,GAAAG,EAAAC,EAAAhD,QAAAC,MAAA2C,GAAA,EACA,KADW5B,EACX+B,EAAA7C,MACQc,EAAKkC,gBAAkB5L,EAEvBqL,EAAgBQ,KAAKnC,GAEhBA,EAAKoC,cAAgB9L,GAE1B0J,EAAKqC,UAAU,OAb3B,MAAAlD,GAAA0C,GAAA,EAAAC,EAAA3C,EAAA,YAAAyC,GAAA,MAAAI,EAAA5C,QAAA4C,EAAA5C,SAAA,WAAAyC,EAAA,MAAAC,GAiBI,QAAAQ,EAAA,EAAAA,EAAmBX,EAAnB3M,OAAAsN,IACA,CADK,IAAMtC,EAAQ2B,EAAJW,GAEXlN,KAAKmN,WAAWvC,0CAKb5K,KAAKgI,aAAaoF,mDAEd3I,GAEf,OAAIzE,KAAKgI,aAAaqE,IAAI5H,GAEfzE,KAAKgI,aAAaqF,IAAI5I,GAItB,6CAIClE,GAChB,IADuBD,EACvBX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD6B,GAC7B2N,GAAA,EAAAC,GAAA,EAAAC,OAAA3N,EAAA,IACI,QAAA4N,EAAAC,EAAmB1N,KAAK2N,WAAxBjE,OAAAC,cAAA2D,GAAAG,EAAAC,EAAA9D,QAAAC,MAAAyD,GAAA,EACA,KADWpM,EACXuM,EAAA3D,MACQ5I,EAAK0M,iBAAmBrN,GAExBD,EAAIyM,KAAK7L,IALrB,MAAA6I,GAAAwD,GAAA,EAAAC,EAAAzD,EAAA,YAAAuD,GAAA,MAAAI,EAAA1D,QAAA0D,EAAA1D,SAAA,WAAAuD,EAAA,MAAAC,GAQI,OAAOlN,qCAGE,OAAOuN,MAAM/M,KAAKd,KAAKgI,aAAayB,iDAChC,OAAOzJ,KAAKgI,aAAaK,4CACzB,OAAOrI,KAAK8H,8CASlB8C,GAEP,OAAOA,qCAWA9J,GACX,IADiBC,EACjBpB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADsB,KAAMH,EAC5BG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADiC,KAE7B,OAAOK,KAAK8N,QAAQ,IAAK9N,KAAK+H,WAAYvI,GAAMyM,cAAQnL,EAAMC,oCAU1D6J,GAIJ,OAFKA,EAAKsB,qBAAqBtB,EAAKuB,kBAAkBF,eACtDjM,KAAKkI,aAAakE,IAAIxB,EAAKsB,oBAAqBtB,GACzCA,qCAQAA,GAEP,IAAMnG,EAAYmG,EAAKsB,oBACnBlM,KAAKkI,aAAamE,IAAI5H,IAEtBzE,KAAKkI,aAAaoE,OAAO7H,wCAIlBzE,KAAKkI,aAAakF,mDAEd3I,GAEf,OAAIzE,KAAKkI,aAAamE,IAAI5H,GAEfzE,KAAKkI,aAAamF,IAAI5I,GAItB,6CAIClE,GAChB,IADuBD,EACvBX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD6B,GAC7BoO,GAAA,EAAAC,GAAA,EAAAC,OAAApO,EAAA,IACI,QAAAqO,EAAAC,EAAmBnO,KAAK6M,WAAxBnD,OAAAC,cAAAoE,GAAAG,EAAAC,EAAAvE,QAAAC,MAAAkE,GAAA,EACA,KADWnD,EACXsD,EAAApE,MACQc,EAAKwD,iBAAmB7N,GAExBD,EAAIyM,KAAKnC,IALrB,MAAAb,GAAAiE,GAAA,EAAAC,EAAAlE,EAAA,YAAAgE,GAAA,MAAAI,EAAAnE,QAAAmE,EAAAnE,SAAA,WAAAgE,EAAA,MAAAC,GAQI,OAAO3N,qCAGE,OAAOuN,MAAM/M,KAAKd,KAAKkI,aAAauB,iDAChC,OAAOzJ,KAAKkI,aAAaG,4CACzB,OAAOrI,KAAK+H,gDAGlBJ,8oCCxTT0G,cASF,SAAAA,EAAY7O,EAAIsB,GAChB,IAAArB,EADsBsB,EACtBpB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD2B,KAC3B,mGAAAI,CAAAC,KAAAqO,IACI5O,EAAAQ,EAAAD,KAAAE,EAAAmO,GAAAlO,KAAAH,KAAMR,EAAIsB,EAAMC,KAIXuN,MAAQ,CACTC,QAAS,EACT3O,OAAQmB,EAAK,EAAItB,EAAKmC,uBACtB4M,OAAQ,CAAE9O,EAAG,EAAGI,EAAG,IAR3BL,wPAVwBoB,gDAuBdK,GAEN,IAAMuN,EAAWzO,KAAKiB,IACtB,GAAIC,IAASuN,EACb,CACI,IAAMnN,EAAMb,EAAAP,EAAAmO,EAAA3N,WAAA,YAAAV,MAAAG,KAAAH,KAAmBkB,GAS/B,OARKA,EAIIA,IAASlB,KAAKgB,QAEnBhB,KAAKsO,MAAM1O,OAASI,KAAKgB,MAAMc,cAAgB9B,KAAK4B,wBAJpD5B,KAAK0O,qBAAqBD,EAAS/O,EAAG+O,EAAS3O,GAM5CwB,EAEX,OAAAb,EAAAP,EAAAmO,EAAA3N,WAAA,YAAAV,MAAAG,KAAAH,KAAuBkB,+CAQPqN,GAGhB,OADAvO,KAAKsO,MAAMC,QAAUA,EACdvO,gDAQQJ,GAGf,OADAI,KAAKsO,MAAM1O,OAASA,EACbI,kDAUUN,EAAGI,GAEpB,IAAMgB,EAAOd,KAAKgB,MACZD,EAAKf,KAAKiB,IAEhB,IAAKF,EACL,CASI,IAAMU,EAAKzB,KAAKgB,MAAMtB,EAAIA,EACpB8B,EAAKxB,KAAKgB,MAAMlB,EAAIA,EACpByO,GAAW5N,KAAKe,MAAMD,EAAID,GAAOb,KAAKU,GAAK,EAEjD,OADArB,KAAKsO,MAAMC,QAAUA,EACdvO,KAGX,IAAM2O,EAAQ7N,EAAKpB,EACbkP,EAAQ9N,EAAKhB,EAIf2B,EAHQV,EAAGrB,EAGAiP,EACXnN,EAHQT,EAAGjB,EAGA8O,EACTC,EAAYF,EAAQlN,EAAK,EACzBqN,EAAYF,EAAQpN,EAAK,EAIzBuN,EAAcpO,KAAKe,OAAOF,EAAIC,GACpCA,EAAK/B,EAAImP,EACTrN,EAAK1B,EAAIgP,EAET,IAAMzN,EAAKV,KAAKU,GACVD,EAASC,EAAK,EAKhBkN,EAAU5N,KAAKe,MAAMF,EAAIC,GAAMsN,EAC/BnP,EAASe,KAAKqO,KAAKvN,EAAKA,EAAKD,EAAKA,GAClC5B,EAAS,IAAGA,EAAS,GAGzB,IAAMqP,EAASV,IAAYnN,EAErB8N,EAAQX,EAAWnN,EAEnB+N,EAAQ9N,EAAK,GAoBnB,OAlBIV,KAAK4G,IAAI3H,GAAU,GAEnB2O,EAAU,EACV3O,EAAS,GAEJqP,EAASE,GAASF,GAAUE,EAGjCZ,GAAWnN,GAEL8N,EAAQC,IAAUD,GAASC,IAGjCZ,EAAUnN,GAGdpB,KAAKsO,MAAMC,QAAUA,EACrBvO,KAAKsO,MAAM1O,OAASA,EACbI,kDAGY,OAAOA,KAAKsO,MAAM1O,qDACjB,OAAOI,KAAKsO,MAAMC,+CACzB,OAAOvO,KAAKsO,4CACb,OAAQtO,KAAKuB,iBAAyC,IAAtBvB,KAAKsO,MAAM1O,sDAIvD,IAAMkB,EAAOd,KAAKgB,MACZD,EAAKf,KAAKiB,IACVX,EAAMN,KAAKsO,MAAME,OAkBvB,OAjBY,MAAR1N,GAAsB,MAANC,GAEhBT,EAAIZ,EAAI,EACRY,EAAIR,EAAI,GAYRsP,YAAqBtO,EAAKpB,EAAGoB,EAAKhB,EAAGiB,EAAGrB,EAAGqB,EAAGjB,EAAGE,KAAKsO,MAAM1O,OAAQI,KAAKsO,MAAMC,QAASjO,GAErFA,6CAMP,IAAIgB,EAAS,EACb,GAAItB,KAAKqP,cACT,CACI,IAAMb,EAASxO,KAAKsP,uBACpBhO,EAASX,KAAKe,MAAM8M,EAAO1O,EAAG0O,EAAO9O,GAAKiB,KAAKU,GAAK,OAIpDC,EAAMb,EAAAP,EAAAmO,EAAA3N,WAAA,mBAAAV,MAAAG,KAAAH,MAGV,OAAOsB,0CAKX,IADchB,EACdX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADoB,CAAED,EAAG,EAAGI,EAAG,GAErBgB,EAAOd,KAAKgB,MACZD,EAAKf,KAAKiB,IAEhB,IAAKH,EAAM,MAAM,IAAIK,MAAM,kCAC3B,IAAKJ,EACL,CAEI,IAAMwN,EAAUvO,KAAKsO,MAAMC,QACrBgB,EAAK5O,KAAK0E,IAAIkJ,GACdiB,EAAK7O,KAAKwE,IAAIoJ,GACdkB,EAAW3O,EAAKgB,cAGtB,OAFAxB,EAAIZ,EAAIoB,EAAKpB,EAAI6P,EAAKE,EACtBnP,EAAIR,EAAIgB,EAAKhB,EAAI0P,EAAKC,EACfnP,EAIX,GAAiC,mBAAtBS,EAAE,aAAmCf,KAAKqP,cAQrD,CACIK,YAAY5O,EAAKpB,EAAGoB,EAAKhB,EAAGiB,EAAGrB,EAAGqB,EAAGjB,EAAGQ,GACxC,IAAMqP,EAAU3P,KAAKsP,uBACfM,EAAKtP,EAAIZ,EAAIiQ,EAAQjQ,EACrBmQ,EAAKvP,EAAIR,EAAI6P,EAAQ7P,EAI3B,OAHAsP,YAAqBtO,EAAKpB,EAAGoB,EAAKhB,EAAG8P,EAAIC,EAAI/O,EAAKgB,cAAe9B,KAAK8P,aAAgBnP,KAAKU,GAAK,EAAK,EAAGf,GACxGA,EAAIZ,GAAKoB,EAAKpB,EACdY,EAAIR,GAAKgB,EAAKhB,EACPQ,EAXP,OAHA8O,YAAqBtO,EAAKpB,EAAGoB,EAAKhB,EAAGiB,EAAGrB,EAAGqB,EAAGjB,EAAGgB,EAAKgB,cAAe,EAAGxB,GACxEA,EAAIZ,GAAKoB,EAAKpB,EACdY,EAAIR,GAAKgB,EAAKhB,EACPQ,2CAiBf,IADeA,EACfX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADqB,CAAED,EAAG,EAAGI,EAAG,GAEtBgB,EAAOd,KAAKgB,MACZD,EAAKf,KAAKiB,IAEhB,IAAKH,EAAM,MAAM,IAAIK,MAAM,kCAC3B,IAAKJ,EACL,CAEI,IAAMwO,EAAK5O,KAAK0E,IAAIrF,KAAKsO,MAAMC,SACzBiB,EAAK7O,KAAKwE,IAAInF,KAAKsO,MAAMC,SACzB1M,EAAoBf,EAAKgB,cAAgB9B,KAAK4B,uBAAyB,EAG7E,OAFAtB,EAAIZ,EAAIoB,EAAKpB,EAAI6P,EAAK1N,EACtBvB,EAAIR,EAAIgB,EAAKhB,EAAI0P,EAAK3N,EACfvB,EAKX,GAFAoP,YAAY5O,EAAKpB,EAAGoB,EAAKhB,EAAGiB,EAAGrB,EAAGqB,EAAGjB,EAAGQ,GAEpCN,KAAKqP,cACT,CACI,IAAMM,EAAU3P,KAAKsP,uBACrBhP,EAAIZ,GAAKiQ,EAAQjQ,EACjBY,EAAIR,GAAK6P,EAAQ7P,EAGrB,OAAOQ,wCAKX,IADYA,EACZX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADkB,CAAED,EAAG,EAAGI,EAAG,GAEnBgB,EAAOd,KAAKgB,MACZD,EAAKf,KAAKiB,IAEhB,IAAKH,EAAM,MAAM,IAAIK,MAAM,kCAC3B,IAAKJ,EACL,CAEI,IAAMwN,EAAUvO,KAAKsO,MAAMC,QACrBgB,EAAK5O,KAAK0E,IAAIkJ,GACdiB,EAAK7O,KAAKwE,IAAIoJ,GACd1M,EAAoBf,EAAKgB,cAAgB9B,KAAK4B,uBAGpD,OAFAtB,EAAIZ,EAAIoB,EAAKpB,EAAI6P,EAAK1N,EACtBvB,EAAIR,EAAIgB,EAAKhB,EAAI0P,EAAK3N,EACfvB,EAIX,GAAiC,mBAAtBS,EAAE,YAET,OAAOA,EAGN,GAAKf,KAAKqP,cASf,CACIK,YAAY5O,EAAKpB,EAAGoB,EAAKhB,EAAGiB,EAAGrB,EAAGqB,EAAGjB,EAAGQ,GACxC,IAAMqP,EAAU3P,KAAKsP,uBACfM,EAAKtP,EAAIZ,EAAIiQ,EAAQjQ,EACrBmQ,EAAKvP,EAAIR,EAAI6P,EAAQ7P,EAI3B,OAHAsP,YAAqBrO,EAAGrB,EAAGqB,EAAGjB,EAAG8P,EAAIC,EAAI9O,EAAGe,cAAe9B,KAAK8P,cAAiBnP,KAAKU,GAAK,EAAO,EAAGf,GACrGA,EAAIZ,GAAKqB,EAAGrB,EACZY,EAAIR,GAAKiB,EAAGjB,EACLQ,EAZP,OAHA8O,YAAqBrO,EAAGrB,EAAGqB,EAAGjB,EAAGgB,EAAKpB,EAAGoB,EAAKhB,EAAGiB,EAAGe,cAAe,EAAGxB,GACtEA,EAAIZ,GAAKqB,EAAGrB,EACZY,EAAIR,GAAKiB,EAAGjB,EACLQ,0CAkBf,IADcE,IACdb,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACI,OAAIa,EAEOC,EAAAP,EAAAmO,EAAA3N,WAAA,gBAAAV,MAAAG,KAAAH,KAAoBQ,GAAe,IAAMR,KAAKsO,MAAMC,QAAU,IAAMvO,KAAKsO,MAAM1O,OAItFa,EAAAP,EAAAmO,EAAA3N,WAAA,gBAAAV,MAAAG,KAAAH,KAA2BQ,wCAKxB6N,48BCzUR,IACM0B,EAA0B,cAC1BC,EAA8B,kBAI9BC,EAAqC,+BAK5CC,cAEF,SAAAA,EAAYC,EAAiBC,GAC7B,IAAA3Q,EAAA,mGAAAM,CAAAC,KAAAkQ,IACIzQ,EAAAQ,EAAAD,KAAAE,EAAAgQ,GAAA/P,KAAAH,QACKqQ,iBAAmBF,EACxB1Q,EAAK6Q,iBAAmBF,EAExB3Q,EAAK8Q,gBAAkB,CAAE7Q,EAAG,EAAGI,EAAG,GALtCL,wPAHgCwC,mDAYnBC,GAET,IAAMiO,EAAkBnQ,KAAKqQ,iBACvBG,EAAoBL,EAAgBM,uBAE1C,GAAIN,EAAgBO,eAEZF,IAAsBnO,IAC1B,CACI,IAAMsO,EAAsBR,EAAgBS,yBACtCR,EAAkBpQ,KAAKsQ,iBAG7B,OAFAF,EAAgBS,WAAWC,WAAWH,GACtCP,EAAgBW,eAAehB,EAAyB,CAAExL,OAAQoM,KAC3D,EAIf,IAAKR,EAAgBa,WAAW9O,EAAQ+O,oBAAsBT,IAAsBnO,IACpF,CACI,IAAMsO,EAAsBR,EAAgBS,yBACtCR,EAAkBpQ,KAAKsQ,iBAc7B,OAbAF,EAAgBc,gBAAgBP,EAAqBA,EAAoB/C,eACrE,SAACrJ,EAAQuF,EAAOqH,GAOHA,GAELf,EAAgBW,eAnDK,oBAmDyC,CAAExM,OAAQoM,OAG7E,EAGX,OAAO,0CAIKzO,GAEZ,OAAOlC,KAAKoR,aAAalP,2CAIbA,GAEZ,IAAMiO,EAAkBnQ,KAAKqQ,iBAC7B,GAAIF,EAAgBkB,kBAAmB,OAAO,EAC9C,GAAIlB,EAAgBO,cAAe,OAAO,EAG1C,IAD0BP,EAAgBM,uBAE1C,CACI,IAAML,EAAkBpQ,KAAKsQ,iBACvBgB,EAAiBlB,EAAgBmB,oBAEjCrQ,EADQkP,EAAgBS,WACXW,WAAWtP,EAAQxC,EAAGwC,EAAQpC,GAC7CwR,GAEApQ,EAAKuQ,aAAaH,EAAeI,uBAErCtB,EAAgBW,eAvFW,cAuF6B,CAAExM,OAAQrD,yCAK9DgB,GAER,IAAMiO,EAAkBnQ,KAAKqQ,iBAC7B,GAAIF,EAAgBkB,kBAAmB,OAAO,EAC9C,GAAIlB,EAAgBO,cAIhB,OADA1Q,KAAKsQ,iBAAiBS,eAAed,IAC9B,EAGX,IAAMO,EAAoBL,EAAgBM,uBAC1C,GAAIN,EAAgBa,WAAW9O,EAAQ+O,oBAAsBT,IAAsBnO,IACnF,CACI,IAAMsP,EAAexB,EAAgByB,kBAC/BjB,EAAsBR,EAAgBS,yBAc5C,OAbIe,GAAgBA,EAAaE,iBAExBF,EAAaG,oBAAoBnB,IAMlC3Q,KAAKuQ,gBAAgB7Q,EAAIwC,EAAQxC,EACjCM,KAAKuQ,gBAAgBzQ,EAAIoC,EAAQpC,GALjC6R,EAAaI,kBAQrB5B,EAAgB6B,iBAAiBrB,EAAqBH,GAAmB,IAClE,EAGX,OAAO,qCAIAtO,GAEP,IAAMiO,EAAkBnQ,KAAKqQ,iBACvBsB,EAAexB,EAAgByB,kBAC/BK,EAAe9B,EAAgB+B,wBACrC,GAAIP,GAAgBA,EAAaE,eACjC,CACI,IAAMpQ,EAAKS,EAAQxC,EAAIM,KAAKuQ,gBAAgB7Q,EACtC8B,EAAKU,EAAQpC,EAAIE,KAAKuQ,gBAAgBzQ,EAFhDsJ,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IAGI,QAAA0J,EAAAC,EAAmBmI,EAAaQ,eAAhCzI,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADWlI,EACXqI,EAAAO,MACI5I,EAAKxB,GAAK+B,EACVP,EAAKpB,GAAK0B,GANlB,MAAAuI,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAQItJ,KAAKuQ,gBAAgB7Q,EAAIwC,EAAQxC,EACjCM,KAAKuQ,gBAAgBzQ,EAAIoC,EAAQpC,OAIjCE,KAAKoS,WAAWpS,KAAKsQ,iBAAiBO,WAAYoB,EAAc/P,EAAQxC,EAAGwC,EAAQpC,sCAKhFoC,GAEP,IAAMiO,EAAkBnQ,KAAKqQ,iBACvBD,EAAkBpQ,KAAKsQ,iBACvBqB,EAAexB,EAAgByB,kBAE/BK,EAAe9B,EAAgB+B,wBAGrC,GAFA/B,EAAgBkC,qBAEZlC,EAAgBO,cAEhB,GAAIiB,EAAaE,eACjB,CACI,IAAMS,EAAQlC,EAAgBS,WACxBvQ,EAAM,GAFhBiK,GAAA,EAAAC,GAAA,EAAAC,OAAA5K,EAAA,IAGI,QAAA6K,EAAAC,EAAmBgH,EAAaQ,eAAhCzI,OAAAC,cAAAY,GAAAG,EAAAC,EAAAf,QAAAC,MAAAU,GAAA,EACA,KADWrJ,EACXwJ,EAAAZ,MACIwI,EAAMxB,WAAW5P,GACjBZ,EAAIyM,KAAK7L,IANjB,MAAA6I,GAAAS,GAAA,EAAAC,EAAAV,EAAA,YAAAQ,GAAA,MAAAI,EAAAX,QAAAW,EAAAX,SAAA,WAAAQ,EAAA,MAAAC,GAQIkH,EAAaI,iBACb3B,EAAgBW,eAAef,EAA6B,CAAEzL,OAAQjE,SAItE8P,EAAgBS,WAAWC,WAAWmB,GACtC7B,EAAgBW,eAAehB,EAAyB,CAAExL,OAAQ0N,SAKtEN,EAAaE,eAEbzB,EAAgBW,eApLa,gBAoL6B,CAAExM,OAAQoN,EAAaQ,iBAIjF/B,EAAgBW,eAzLS,YAyL6B,CAAExM,OAAQ0N,uCAI7DK,EAAOpR,EAAMxB,EAAGI,GAEvBJ,EAAI6S,YAAKrR,EAAKxB,EAAGA,EA3LiB,IA4LlCI,EAAIyS,YAAKrR,EAAKpB,EAAGA,EA5LiB,IA8LlC,IAAM2P,EAAWvO,EAAKY,cAJ1BuJ,GAAA,EAAAC,GAAA,EAAAC,OAAA1L,EAAA,IAKI,QAAA2L,EAAAC,EAAoB6G,EAAM3E,WAA1BjE,OAAAC,cAAA0B,GAAAG,EAAAC,EAAA7B,QAAAC,MAAAwB,GAAA,EACA,KADWmH,EACXhH,EAAA1B,MAEI,GAAI5I,IAASsR,EAAb,CAEA,IAAM/Q,EAAK/B,EAAI8S,EAAM9S,EACf8B,EAAK1B,EAAI0S,EAAM1S,EACfsF,EAAQzE,KAAKe,MAAMF,EAAIC,GAEvBgR,EAAuB,EAAXhD,EACZiD,EAASF,EAAM9S,EAAKiB,KAAK0E,IAAID,GAASqN,EAAY/S,EAClDiT,EAASH,EAAM1S,EAAKa,KAAKwE,IAAIC,GAASqN,EAAY3S,EAEpD2B,EAAKA,EAAKD,EAAKA,EAAKiO,EAAWA,EAAW,IAE1C/P,GAAKgT,EACL5S,GAAK6S,KArBjB,MAAA5I,GAAAuB,GAAA,EAAAC,EAAAxB,EAAA,YAAAsB,GAAA,MAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,MAAAC,GAyBIrK,EAAKxB,EAAIA,EACTwB,EAAKpB,EAAIA,uCAIFoQ,q7BC9NR,IACM0C,EAA0B,cAI1BC,EAAqC,+BAI5CC,cAEF,SAAAA,EAAY3C,EAAiBC,GAC7B,IAAA3Q,EAAA,mGAAAM,CAAAC,KAAA8S,IACIrT,EAAAQ,EAAAD,KAAAE,EAAA4S,GAAA3S,KAAAH,QAEKqQ,iBAAmBF,EACxB1Q,EAAK6Q,iBAAmBF,EAExB3Q,EAAKsT,iBAAmB,CACpBxE,QAAS,EACT3O,OAAQ,GAEZH,EAAKuT,cAAgB,KACrBvT,EAAKwT,eAAiB,CAAEvT,EAAG,EAAGI,EAAG,GACjCL,EAAKyT,UAAW,EAEhBzT,EAAK0T,8BAA+B,EACpC1T,EAAK2T,iCAAkC,EAf3C3T,wPAHgCwC,qEAqBDoR,GAG3B,OADArT,KAAKmT,6BAA+BE,EAC7BrT,+DAGuBqT,GAG9B,OADArT,KAAKoT,gCAAkCC,EAChCrT,0CAIEkC,GACb,IAAAoR,EAAAtT,KACUmQ,EAAkBnQ,KAAKqQ,iBACvBG,EAAoBL,EAAgBM,uBAE1C,GAAIN,EAAgBO,gBAEZF,IAAsBzL,KACtByL,IAAsB1L,KACtB0L,IAAsBxL,KAC1B,CACI,IAAM2L,EAAsBR,EAAgBS,yBACtCR,EAAkBpQ,KAAKsQ,iBAG7B,OAFAF,EAAgBS,WAAW1D,WAAWwD,GACtCP,EAAgBW,eAAe6B,EAAyB,CAACrO,OAAQoM,KAC1D,EAIf,GAAIH,IAAsBxL,KAAsBwL,IAAsBzL,IACtE,CACI,IAAM4L,EAAsBR,EAAgBS,yBACtCR,EAAkBpQ,KAAKsQ,iBAc7B,OAbAF,EAAgBc,gBAAgBP,EAAqBA,EAAoBvC,eACrE,SAAC7J,EAAQuF,EAAOqH,GAERmC,EAAKF,kCAAoCtJ,GAEzCsG,EAAgBS,WAAW1D,WAAWwD,GACtCP,EAAgBW,eAAe6B,EAAyB,CAACrO,OAAQoM,KAE5DQ,GAELf,EAAgBW,eA1EK,oBA0EyC,CAACxM,OAAQoM,OAG5E,EAGX,OAAO,0CAIKzO,GAEZ,OAAOlC,KAAKoR,aAAalP,uCAIjBA,GAER,IAAMiO,EAAkBnQ,KAAKqQ,iBAC7B,GAAIF,EAAgBkB,kBAAmB,OAAO,EAC9C,GAAIlB,EAAgBO,cAIhB,OADA1Q,KAAKsQ,iBAAiBS,eAAe8B,IAC9B,EAGX,IAAMrC,EAAoBL,EAAgBM,uBAC1C,IAAKN,EAAgBa,WAAW9O,EAAQ+O,oBAAsBT,IAAsBnO,IACpF,CACI,IACMiQ,EADkBtS,KAAKsQ,iBACCO,WAExBF,EAAsBR,EAAgBS,yBAE5C5Q,KAAK+S,iBAAiBxE,QAAU,EAChCvO,KAAK+S,iBAAiBnT,OAAS,EAC/BI,KAAKgT,cAAgB,KACrBhT,KAAKkT,UAAW,EAChBlT,KAAKiT,eAAevT,EAAIwC,EAAQxC,EAChCM,KAAKiT,eAAenT,EAAIoC,EAAQpC,EAEhC,IAAMyT,EAAajB,EAAMkB,WAAW7C,EAAqB3Q,KAAKiT,gBAI9D,OAFA9C,EAAgB6B,iBAAiBuB,EAAYzO,KAA+B,GAC5EqL,EAAgBsD,mBAAkB,IAC3B,EAEN,GAAIjD,IAAsB1L,IAC/B,CACI,IAAM6L,EAAsBR,EAAgBS,yBAe5C,OAbA5Q,KAAK+S,iBAAiBxE,QAAUoC,EAAoB+C,sBACpD1T,KAAK+S,iBAAiBnT,OAAS+Q,EAAoBgD,qBACnD3T,KAAKgT,cAAgBrC,EAAoB3D,YACzChN,KAAKkT,UAAW,EAChBlT,KAAKiT,eAAevT,EAAIwC,EAAQxC,EAChCM,KAAKiT,eAAenT,EAAIoC,EAAQpC,EAEhC6Q,EAAoBiD,oBAAoB,GACxCjD,EAAoBkD,mBAAmB,GACvClD,EAAoB1D,UAAUjN,KAAKiT,gBAEnC9C,EAAgB6B,iBAAiBrB,EAAqBH,GAAmB,GACzEL,EAAgBsD,mBAAkB,IAC3B,EAEN,GAAIjD,IAAsBzL,IAC/B,CACI,IAAM4L,EAAsBR,EAAgBS,yBAU5C,OARA5Q,KAAK+S,iBAAiBxE,QAAUoC,EAAoB+C,sBACpD1T,KAAK+S,iBAAiBnT,OAAS+Q,EAAoBgD,qBACnD3T,KAAKgT,cAAgBrC,EAAoB3D,YACzChN,KAAKkT,UAAW,EAChBlT,KAAKiT,eAAevT,EAAIwC,EAAQxC,EAChCM,KAAKiT,eAAenT,EAAIoC,EAAQpC,EAEhCqQ,EAAgB6B,iBAAiBrB,EAAqBH,GAAmB,IAClE,EAGX,OAAO,qCAIAtO,GAEP,IAAMiO,EAAkBnQ,KAAKqQ,iBACvB4B,EAAe9B,EAAgB+B,wBAC/B4B,EAAa3D,EAAgB4D,sBAE/BD,IAAe/O,IAEfkN,EAAavD,qBAAqBxM,EAAQxC,EAAGwC,EAAQpC,GAEhDgU,IAAehP,KAEpB9E,KAAKgU,0BAA0B/B,EAAc6B,EAAY5R,EAASiO,qDAIhD8B,EAAc6B,EAAY5R,EAASiO,GAGzD,GAD4BA,EAAgB8D,2BAChB5R,IAC5B,CACI,IAAM6R,EAAwB/D,EAAgBgE,2BAG9C,GAAIlC,EAAajF,cAAgBhN,KAAKgT,cAElCf,EAAa2B,oBAAoB5T,KAAK+S,iBAAiBxE,SACvD0D,EAAa4B,mBAAmB7T,KAAK+S,iBAAiBnT,aAGrD,GAAIqS,EAAanF,gBAAkBoH,EACxC,CACI,IAAMpT,EAAOmR,EAAanF,cACpBrL,EAAKX,EAAKpB,EAAIwC,EAAQxC,EACtB8B,EAAKV,EAAKhB,EAAIoC,EAAQpC,EACtByO,EAAU5N,KAAKU,GAAKV,KAAKe,MAAMF,EAAIC,GACzCwQ,EAAa2B,oBAAoBrF,GACjC0D,EAAahF,UAAUiH,QAIvBjC,EAAa2B,oBAAoB,GACjC3B,EAAa4B,mBAAmB,GAChC5B,EAAahF,UAAUiH,QAK3BlU,KAAKiT,eAAevT,EAAI6S,YAAKvS,KAAKiT,eAAevT,EAAGwC,EAAQxC,EA3M9B,IA4M9BM,KAAKiT,eAAenT,EAAIyS,YAAKvS,KAAKiT,eAAenT,EAAGoC,EAAQpC,EA5M9B,IA8M1BmS,EAAajF,cAAgBhN,KAAKiT,iBAElChB,EAAa2B,oBAAoB,GACjC3B,EAAa4B,mBAAmB,GAEhC5B,EAAahF,UAAUjN,KAAKiT,oDAM7B/Q,GACX,IAAAkS,EAAApU,KACUmQ,EAAkBnQ,KAAKqQ,iBACvB4B,EAAe9B,EAAgB+B,wBAC/B4B,EAAa3D,EAAgB4D,sBAC7BM,EAAYrU,KAAKkT,SAEvB/C,EAAgBkC,qBACZyB,IAAehP,KAEfqL,EAAgBsD,mBAAkB,GAGtC,IAAMrD,EAAkBpQ,KAAKsQ,iBAC7B,GAAIH,EAAgBO,cAIhB,OAFAN,EAAgBS,WAAW1D,WAAW8E,QACtC7B,EAAgBW,eAAe6B,EAAyB,CAACrO,OAAQ0N,IAIrE,GAAI6B,IAAe/O,IAEfqL,EAAgBW,eAnPgB,mBAmP6B,CAACxM,OAAQ0N,QAG1E,CACI,IAAMqC,EAASrC,EAAajF,YAC5B,GAAKsH,GAAUA,IAAWtU,KAAKiT,gBA2B1B,GAAIqB,IAAWtU,KAAKgT,cACzB,CACI,IAAM1B,EAAiBlB,EAAgBmB,oBACnC8C,GAAa/C,GAEbW,EAAasC,aAAajD,EAAekD,uBAE7CpE,EAAgBc,gBAAgBe,EAAcoC,EAAY,KAAOpC,EAAa7D,eAC1E,SAAC7J,EAAQuF,EAAOqH,GAERiD,EAAKhB,kCAAoCtJ,GAEzCsG,EAAgBS,WAAW1D,WAAW8E,GACtC7B,EAAgBW,eAAe6B,EAAyB,CAACrO,OAAQ0N,KAE5DoC,EAELjE,EAAgBW,eAxSL,cAwS6C,CAACxM,OAAQ0N,IAE5Dd,GAELf,EAAgBW,eAzSF,iBAyS6C,CAACxM,OAAQ0N,WA/CpF,CACI,GAAIjS,KAAKmT,6BAIL,OAFA/C,EAAgBS,WAAW1D,WAAW8E,QACtC7B,EAAgBW,eAAe6B,EAAyB,CAACrO,OAAQ0N,IAOjE,GAFAA,EAAahF,UAAU,MAEnBoH,EACJ,CACI,IAAM/C,EAAiBlB,EAAgBmB,oBACnCD,GAEAW,EAAasC,aAAajD,EAAekD,uBAE7CpE,EAAgBW,eA/QD,cA+QyC,CAACxM,OAAQ0N,SAIjE7B,EAAgBW,eAhRE,iBAgRyC,CAACxM,OAAQ0N,2CAiC7Ea,m4BCxTR,IAAM2B,EAA4B,eAEnCC,cAEF,SAAAA,EAAYnS,GACZ,mGAAAxC,CAAAC,KAAA0U,GAAAzU,EAAAD,KAAAE,EAAAwU,GAAAvU,KAAAH,KACUuC,0PAJoB2B,IAAMC,kDAUhC,IAAMtB,EAAW7C,KAAKuC,MAAMM,SACtB0L,EAAUvO,KAAKuC,MAAMgM,SAAW5N,KAAKU,GACrCsT,EAAS3U,KAAKuC,MAAMoS,QAAU,EAC9BtM,EAAOrI,KAAKuC,MAAM8F,MAAQ,GAC1BnF,EAAQlD,KAAKuC,MAAMW,OAAS,UAE5BzB,EAAKd,KAAK0E,IAAIkJ,GACd/M,EAAKb,KAAKwE,IAAIoJ,GACd7O,EAAImD,EAASnD,EAAI+B,EAAKkT,EACtB7U,EAAI+C,EAAS/C,EAAI0B,EAAKmT,EAItBC,EAAsB,GADZnT,EAAK4G,GAIfhF,EAAcrD,KAAKuC,MAAMc,YACzBC,EAAatD,KAAKuC,MAAMe,WACxBE,EAAgBxD,KAAKuC,MAAMiB,cAEjC,OACIhB,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,QACIwC,EAAG,IAAMxF,EAAI,IAAMI,EACf,MAAQJ,EAAIkV,GAAa,KAAO9U,EAAIa,KAAKwE,IAAIoJ,EAAU5N,KAAKU,GAAK,GAAKgH,EAAO,GAC7E,MAAQ3I,EAAIkV,GAAa,KAAO9U,EAAIa,KAAKwE,IAAIoJ,EAAU5N,KAAKU,GAAK,GAAKgH,EAAO,GAC7E,KACJpF,KAAK,cACLE,OAAQD,EACRK,OAAO,UACPF,YAAaA,EAAc,SAAAiB,IAETA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDC,KAAOiQ,EACbpR,EAAYiB,IACZ,KACJhB,WAAYA,EAAa,SAAAgB,IAEPA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDC,KAAOiQ,EACbnR,EAAWgB,IACX,KACJd,cAAeA,0CAMpBkR,q5BCxDR,IAAMG,EAAkC,sBAIzCC,cAEF,SAAAA,EAAY3E,EAAiBC,GAC7B,IAAA3Q,EAAA,mGAAAM,CAAAC,KAAA8U,IACIrV,EAAAQ,EAAAD,KAAAE,EAAA4U,GAAA3U,KAAAH,QAEKqQ,iBAAmBF,EACxB1Q,EAAK6Q,iBAAmBF,EAExB3Q,EAAKsV,aAAe,KACpBtV,EAAKuV,oBAAsB,KAC3BvV,EAAKwT,eAAiB,CAAEvT,EAAG,EAAGI,EAAG,GARrCL,wPAHuCwC,kDAe3BC,GAER,IAAMiO,EAAkBnQ,KAAKqQ,iBAG7B,GAF0BF,EAAgBM,yBAEhBgE,IAC1B,CACI,IAAM9D,EAAsBR,EAAgBS,yBAQ5C,OAPA5Q,KAAKgV,oBAAsBrE,EAC3B3Q,KAAKiT,eAAevT,EAAIwC,EAAQxC,EAChCM,KAAKiT,eAAenT,EAAIoC,EAAQpC,EAChCE,KAAK+U,aAAe/U,KAAKiT,eAEzB9C,EAAgB6B,iBAAiBrB,EAAqB8D,KAA2B,GACjFtE,EAAgBsD,mBAAkB,IAC3B,EAGX,OAAO,qCAIAvR,GAEP,IAAMiO,EAAkBnQ,KAAKqQ,iBAG7B,GAFmBF,EAAgB4D,wBAEhBU,IAGf,GAD4BtE,EAAgB8D,2BAChB5R,IAC5B,CACI,IAAM6R,EAAwB/D,EAAgBgE,2BAE9CnU,KAAK+U,aAAeb,OAIpBlU,KAAKiT,eAAevT,EAAI6S,YAAKvS,KAAKiT,eAAevT,EAAGwC,EAAQxC,EAvD1B,IAwDlCM,KAAKiT,eAAenT,EAAIyS,YAAKvS,KAAKiT,eAAenT,EAAGoC,EAAQpC,EAxD1B,IA0D9BE,KAAK+U,eAAiB/U,KAAKiT,iBAE3BjT,KAAK+U,aAAe/U,KAAKiT,mDAO9B/Q,GAEP,IAAMiO,EAAkBnQ,KAAKqQ,iBACvByD,EAAa3D,EAAgB4D,sBACnC5D,EAAgBkC,qBAEZyB,IAAeW,MAEVzU,KAAK+U,cAAgB/U,KAAK+U,eAAiB/U,KAAKiT,iBAMjDjT,KAAKsQ,iBAAiBO,WAAWoE,aAAajV,KAAK+U,cACnD/U,KAAKsQ,iBAAiBS,eAAe8D,EAAiC,CAAEtQ,OAAQvE,KAAK+U,gBAGzF/U,KAAK+U,aAAe,+CAIT,OAAO/U,KAAK+U,kDAGpBD,kNCpGTI,aAEF,SAAAA,iGAAcnV,CAAAC,KAAAkV,4DAEJC,GAEN,MAAM,IAAIhU,MAAM,8EAGVgU,GAEN,MAAM,IAAIhU,MAAM,iFAIT+T,k5BCIAE,cAfX,SAAAA,EAAY7S,GAAO,mGAAAxC,CAAAC,KAAAoV,GAAAnV,EAAAD,KAAAE,EAAAkV,GAAAjV,KAAAH,KAAQuC,0PAFN2B,IAAMmR,sDAOvB,OACIC,EAAA7S,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAAI+V,UAAWvV,KAAKuC,MAAMgT,UAAW7R,MAAO1D,KAAKuC,MAAMmB,MACvE8R,MAAM,6BACN9M,MAAM,KAAKC,OAAO,KAAK8M,QAAQ,aAC/BH,EAAA7S,EAAAC,cAAA,QAAMwC,EAAE,+OACRoQ,EAAA7S,EAAAC,cAAA,QAAMwC,EAAE,u3BCITwQ,cAdX,SAAAA,EAAYnT,GAAO,mGAAAoT,CAAA3V,KAAA0V,GAAAE,EAAA5V,KAAA6V,EAAAH,GAAAvV,KAAAH,KAAQuC,0PAFL2B,IAAMmR,sDAOxB,OACIC,EAAA7S,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAAI+V,UAAWvV,KAAKuC,MAAMgT,UAAW7R,MAAO1D,KAAKuC,MAAMmB,MACvE8R,MAAM,6BACN9M,MAAM,KAAKC,OAAO,KAAK8M,QAAQ,aAC/BH,EAAA7S,EAAAC,cAAA,QAAMwC,EAAE,ugCCyCT4Q,cA7CX,SAAAA,EAAYvT,GACZ,IAAA9C,MAAA,mGAAAsW,CAAA/V,KAAA8V,KACI9V,MAAAP,MAAAuW,EAAAF,GAAA3V,KAAAH,KAAMuC,mDAED0T,SAAWxW,EAAKwW,SAASC,KAAdC,IAAA1W,KAChBA,EAAK2W,UAAY3W,EAAK2W,UAAUF,KAAfC,IAAA1W,KAJrBA,wPAHqByE,IAAMC,kDAUlBG,GAEL,IAAM+R,EAAkBrW,KAAKuC,MAAM8T,gBAC7BC,EAA0C,IAA7BD,EAAgBE,WACnCF,EAAgBG,SAASF,qCAGnBhS,GAEN,IAAM+R,EAAkBrW,KAAKuC,MAAM8T,gBAC7BC,EAAyC,IAA7BD,EAAgBE,WAClCF,EAAgBG,SAASF,oCAMzB,IACMA,EAAY,KAAO,GADDtW,KAAKuC,MAAM8T,gBACWE,YAAc,IAAIE,QAAQ,GAExE,OACInB,EAAA7S,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAChB+V,UAAWmB,IAAMC,eACvB,IAAM3W,KAAKuC,MAAMgT,UACX7R,MAAO1D,KAAKuC,MAAMmB,OAClB4R,EAAA7S,EAAAC,cAACkU,EAAA,EAAD,CAAYrB,UAAWmB,IAAMG,YAAaC,MAAM,UAAUC,QAAS/W,KAAKiW,UACpEX,EAAA7S,EAAAC,cAACsU,EAAD,OAEJ1B,EAAA7S,EAAAC,cAACkU,EAAA,EAAD,CAAYrB,UAAWmB,IAAMG,YAAaC,MAAM,WAAWC,QAAS/W,KAAKoW,WACrEd,EAAA7S,EAAAC,cAACuU,EAAD,OAEJ3B,EAAA7S,EAAAC,cAAA,SAAO6S,UAAWmB,IAAMQ,YAAaZ,s2BC9BtCa,cAdX,SAAAA,EAAY5U,GAAO,mGAAA6U,CAAApX,KAAAmX,GAAAE,EAAArX,KAAAsX,EAAAH,GAAAhX,KAAAH,KAAQuC,0PAFJ2B,IAAMmR,sDAOzB,OACIC,EAAA7S,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAAI+V,UAAWvV,KAAKuC,MAAMgT,UAAW7R,MAAO1D,KAAKuC,MAAMmB,MACvE8R,MAAM,6BACN9M,MAAM,KAAKC,OAAO,KAAK8M,QAAQ,aAC/BH,EAAA7S,EAAAC,cAAA,QAAMwC,EAAE,yiCCPxB,IAqCeqS,cAjCX,SAAAA,EAAYhV,GACZ,IAAA9C,MAAA,mGAAA+X,CAAAxX,KAAAuX,KACIvX,MAAAP,MAAAgY,EAAAF,GAAApX,KAAAH,KAAMuC,mDAEDwU,QAAUtX,EAAKsX,QAAQb,KAAbwB,IAAAjY,KAHnBA,wPAH4ByE,IAAMC,iDAS1BG,GAEoBtE,KAAKuC,MAAM8T,gBACnBsB,UAAU,EAAG,oCAM7B,IAAMtB,EAAkBrW,KAAKuC,MAAM8T,gBAEnC,OACIf,EAAA7S,EAAAC,cAACkU,EAAA,EAAD,CAAYpX,GAAIQ,KAAKuC,MAAM/C,GACvB+V,UAAWmB,IAAMkB,oBACb,IAAM5X,KAAKuC,MAAMgT,UACrB7R,MAAO1D,KAAKuC,MAAMmB,MAClBoT,MAAO,mBACPe,SAAUlX,KAAK4G,IAAI8O,EAAgByB,cA5B5B,IA6BHnX,KAAK4G,IAAI8O,EAAgB0B,cA7BtB,GA8BPhB,QAAS/W,KAAK+W,SACdzB,EAAA7S,EAAAC,cAACsV,EAAD,u1BC/BVC,cAEF,SAAAA,EAAY1V,GACZ,mGAAA2V,CAAAlY,KAAAiY,GAAAE,EAAAnY,KAAAoY,EAAAH,GAAA9X,KAAAH,KACUuC,0PAJwB2B,IAAMC,kDAUpC,IAAMkS,EAAkBrW,KAAKuC,MAAM8T,gBAEnC,OACIf,EAAA7S,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAChB+V,UAAWmB,IAAM2B,iBAC5B,IAAMrY,KAAKuC,MAAMgT,UACN7R,MAAO1D,KAAKuC,MAAMmB,OAClB4R,EAAA7S,EAAAC,cAAC4V,EAAD,CAAY/C,UAAWmB,IAAM6B,wBACzBlC,gBAAiBA,IACrBf,EAAA7S,EAAAC,cAAC8V,EAAD,CAAmBjD,UAAWmB,IAAM+B,cAChCpC,gBAAiBA,IACpBrW,KAAKuC,MAAMmW,+CAMbT,wCCtBR,SAASU,EAAeC,GAC/B,IADoCC,EACpClZ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GADqDmZ,EACrDnZ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD8D,KAEtDoZ,OAAOC,QAAQC,KAAKC,SAAS,wBAEdN,EAAIO,mBACZC,qBAAqBvI,WAAWzD,QAClCyL,EAODD,EAAIS,iBAAiBC,gBALrBV,EAAIS,iBAAiBjM,QACrBwL,EAAIW,aAAaC,eAAe,OAMhCV,GAAUA,KA1BtBW,EAAAvU,EAAAwU,EAAA,sBAAAf,sPC0GegB,aApGX,SAAAA,iGACA5Z,CAAAC,KAAA2Z,GACI3Z,KAAK4Z,SAAW,KAChB5Z,KAAK6Z,SAAW,EAChB7Z,KAAK8Z,SAAW,EAChB9Z,KAAK+Z,aAAe,EACpB/Z,KAAKga,aAAe,EACpBha,KAAKia,eAAiB,GAEtBja,KAAKka,aAAe,EACpBla,KAAKma,UAAY,EACjBna,KAAKoa,UAAY,4DAGVC,GAGP,OADAra,KAAK4Z,SAAWS,EACTra,yCAGCsa,GAIR,OAFAta,KAAKma,UAAYG,EACbta,KAAKka,aAAela,KAAKma,YAAWna,KAAKka,aAAela,KAAKma,WAC1Dna,yCAGCsa,GAIR,OAFAta,KAAKoa,UAAYE,EACbta,KAAKka,aAAela,KAAKoa,YAAWpa,KAAKka,aAAela,KAAKoa,WAC1Dpa,8CAGMua,GAGb,OADAva,KAAKia,eAAiBM,EACfva,sCAKP,IAAMyB,EAAKzB,KAAK+Z,aAAe/Z,KAAK6Z,SACpC7Z,KAAK6Z,UAAYpY,EAAKzB,KAAKia,eAC3B,IAAMzY,EAAKxB,KAAKga,aAAeha,KAAK8Z,SACpC9Z,KAAK8Z,UAAYtY,EAAKxB,KAAKia,6DAGTO,EAASC,GAE3B,IAAKza,KAAK4Z,SAAU,MAAO,CAACla,EAAG8a,EAAUxa,KAAK6Z,SAAU/Z,EAAG2a,EAAUza,KAAK8Z,UAE1E,IAAMY,EAAM1a,KAAK4Z,SAASe,eAC1B,MAAO,CACHjb,GAAI8a,EAAUE,EAAIpW,GAAKoW,EAAIjY,EAAIzC,KAAK6Z,SACpC/Z,GAAI2a,EAAUC,EAAIE,GAAKF,EAAIxV,EAAIlF,KAAK8Z,4CAIlCpa,EAAGI,GACbH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,IAGQK,KAAK+Z,aAAe/Z,KAAK6Z,SAAWna,EACpCM,KAAKga,aAAeha,KAAK8Z,SAAWha,IAIpCE,KAAK+Z,aAAera,EACpBM,KAAKga,aAAela,qCAIlB2B,EAAID,GACd7B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,IAGQK,KAAK6Z,UAAYpY,EACjBzB,KAAK8Z,UAAYtY,EACjBxB,KAAK+Z,aAAe/Z,KAAK6Z,SACzB7Z,KAAKga,aAAeha,KAAK8Z,WAIzB9Z,KAAK+Z,cAAgBtY,EACrBzB,KAAKga,cAAgBxY,oCAIpB8Y,GAASta,KAAKka,aAAevZ,KAAKmD,IAAI9D,KAAKoa,UAAWzZ,KAAKoD,IAAI/D,KAAKma,UAAWG,qCAC/EO,GAAU7a,KAAKka,aAAevZ,KAAKmD,IAAI9D,KAAKoa,UAAWzZ,KAAKoD,IAAI/D,KAAKma,UAAWna,KAAKka,aAAeW,yCAC9F,OAAO7a,KAAK6Z,8CACZ,OAAO7Z,KAAK8Z,oDACN,OAAO9Z,KAAKia,kDACpB,OAAOja,KAAKka,mDACT,OAAOla,KAAKma,gDACZ,OAAOna,KAAKoa,+CACb,OAAOpa,KAAK4Z,wNCpChBkB,aAjEX,SAAAA,iGACAC,CAAA/a,KAAA8a,GACI9a,KAAKgb,eAAiB,kEAGVC,GAChB,IAD8BC,EAC9Bvb,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,IAD0C,EAuBtC,OArBIub,EAAW,EAEXlb,KAAKgb,eAAejO,KAAKkO,IAIrBjb,KAAKgb,eAAepb,QAAUsb,IAE9Blb,KAAKgb,eAAepb,OAASsb,EAAW,GAGxClb,KAAKgb,eAAeE,GAEpBlb,KAAKgb,eAAeG,OAAO,EAAG,EAAGF,GAIjCjb,KAAKgb,eAAeE,GAAYD,GAIjCjb,gDAGQib,GAEf,IAAMlV,EAAQ/F,KAAKgb,eAAeI,QAAQH,GAK1C,OAJIlV,GAAS,IAET/F,KAAKgb,eAAejV,GAAS,MAE1B/F,kDAGYA,KAAKgb,eAAepb,OAAS,sCAExCyb,GACZ,QAAAC,EAAA3b,UAAAC,OAD0B2b,EAC1B,IAAA1N,MAAAyN,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAD0BD,EAC1BC,EAAA,GAAA7b,UAAA6b,GAAA,IAAApS,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IAEI,QAAA0J,EAAAC,EAA2BxJ,KAAKgb,eAAhCtR,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADW6R,EACX1R,EAAAO,MACI,GAAKmR,EAAL,CACA,IAAMQ,EAAuBR,EAAaI,GAC1C,GAAoC,mBAAzBI,GAEHA,EAAqBC,MAAMT,EAAcM,GAEzC,OAAON,IAVvB,MAAAlR,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAeI,OAAO,gDAGU,OAAOtJ,KAAKgb,8NCWtBW,aAtEX,SAAAA,EAAYC,EAAcvF,EAAiBgE,gGAC3CwB,CAAA7b,KAAA2b,GACI3b,KAAK8b,cAAgBF,EACrB5b,KAAK+b,iBAAmB1F,EACxBrW,KAAK4Z,SAAWS,EAEhBra,KAAKgc,SAAU,EACfhc,KAAKic,GAAK,EACVjc,KAAKkc,GAAK,EAEVlc,KAAKmc,UAAY,CAAEzc,EAAG,EAAGI,EAAG,8DAMpBJ,EAAGI,GAIX,OAFAE,KAAKic,GAAKvc,EACVM,KAAKkc,GAAKpc,EACHE,0CAKPA,KAAKgc,SAAU,EACfhc,KAAKmc,UAAUzc,EAAIM,KAAKic,GACxBjc,KAAKmc,UAAUrc,EAAIE,KAAKkc,mDAMF,OAAOlc,KAAKmc,2DAEbzc,EAAGI,GAExBE,KAAKmc,UAAUzc,EAAIA,EACnBM,KAAKmc,UAAUrc,EAAIA,qCAGVE,KAAKgc,SAAU,qCACf,OAAOhc,KAAKgc,0DAIrB,IAAMI,EAAMpc,KAAKmc,UACX1a,EAAK2a,EAAI1c,EAAIM,KAAKic,GAClBza,EAAK4a,EAAItc,EAAIE,KAAKkc,GACxB,OAAOza,EAAKA,EAAKD,EAAKA,uCAOX,OAAOxB,KAAK4Z,sDAMJ,OAAO5Z,KAAK+b,2DAKf,OAAO/b,KAAK8b,wCAtDtB,OAAO9b,KAAKic,6BACZ,OAAOjc,KAAKkc,kjCChB1B,IAAMG,EAAiB,IACjBC,EAAmB,IACnBC,EAAqB,EAAM,IAE3BC,EAAoBC,GAEpBC,EAAsBC,IAqiBbC,cA7hBX,SAAAA,EAAYvG,GACZ,IAAA5W,MAAA,mGAAAod,CAAA7c,KAAA4c,KACI5c,MAAAP,MAAAS,EAAA0c,GAAAzc,KAAAH,sDAEK+b,iBAAmB1F,EAExB5W,EAAKqd,UAAY,GACjBrd,EAAKsd,mBAAqB,KAE1Btd,EAAKma,SAAW,KAChBna,EAAKud,QAAU,CACXC,WAAY,KACZC,SAAU,KACVC,WAAY,KACZC,UAAW,KACXC,OAAQ,MAEZ5d,EAAK6d,SAAW,KAIhB7d,EAAK8d,WAAY,EACjB9d,EAAK+d,WAAY,EAEjB/d,EAAKge,gBAAkBpB,EACvB5c,EAAKie,eAAiBpB,EACtB7c,EAAKke,mBAAqBpB,EAC1B9c,EAAKme,cAAoC,GAApBpB,EACrB/c,EAAKoe,mBAAqBrB,EAAoBE,EAE9Cjd,EAAKqe,iBAAkB,EACvBre,EAAKse,eAAiB,EACtBte,EAAKue,YAAc,EACnBve,EAAKwe,YAAc,EAEnBxe,EAAKye,cAAgBze,EAAKye,cAAchI,KAAnBiI,IAAA1e,KACrBA,EAAK2e,YAAc3e,EAAK2e,YAAYlI,KAAjBiI,IAAA1e,KACnBA,EAAK4e,YAAc5e,EAAK4e,YAAYnI,KAAjBiI,IAAA1e,KACnBA,EAAK6e,aAAe7e,EAAK6e,aAAapI,KAAlBiI,IAAA1e,KACpBA,EAAK8e,QAAU9e,EAAK8e,QAAQrI,KAAbiI,IAAA1e,KAEfA,EAAK+e,oBAAsB/e,EAAK+e,oBAAoBtI,KAAzBiI,IAAA1e,KAC3BA,EAAKgf,kBAAoBhf,EAAKgf,kBAAkBvI,KAAvBiI,IAAA1e,KACzBA,EAAKif,qBAAuBjf,EAAKif,qBAAqBxI,KAA1BiI,IAAA1e,KAC5BA,EAAKkf,oBAAsBlf,EAAKkf,oBAAoBzI,KAAzBiI,IAAA1e,KAE3BA,EAAKmf,mBAAqBnf,EAAKmf,mBAAmB1I,KAAxBiI,IAAA1e,KA7C9BA,wPAHuBqb,6CAmDX+D,GAER,KAAMA,aAAmB/D,GACrB,MAAM,IAAI3Z,MAAM,qEAGpB,OADAnB,KAAK8c,UAAUgC,QAAQD,GAChB7e,+CAGO6e,GAEd,KAAMA,aAAmB/D,GACrB,MAAM,IAAI3Z,MAAM,qEAGpB,OADAnB,KAAK8c,UAAU/P,KAAK8R,GACb7e,6CAIX,IADc6e,EACdlf,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADwB,KAEpB,GAAIkf,EACJ,CACI,IAAM9Y,EAAQ/F,KAAK8c,UAAU1B,QAAQyD,GACrC,OAAI9Y,GAAS,GAET/F,KAAK8c,UAAU3B,OAAOpV,EAAO,GACtB8Y,GAIA,KAKX,OAAO7e,KAAK8c,UAAUiC,gDAM1B/e,KAAK8c,UAAUld,OAAS,wCAKxB,OAAOI,KAAK8c,UAAUld,OAAS,8CAK/B,OAAII,KAAK8c,UAAUld,OAAS,EAEjBI,KAAK8c,UAAU9c,KAAK8c,UAAUld,OAAS,GAIvCI,wCAIJqa,GAEP,KAAMA,aAAmB2E,YAAa,MAAM,IAAI7d,MAAM,oDACtD,GAAInB,KAAK4Z,SAAU,MAAM,IAAIzY,MAAM,4DAEnCnB,KAAK+b,iBAAiBkD,WAAWjf,KAAK4Z,SAAWS,GACjDra,KAAKsd,SAAW,IAAI3B,EAAa3b,KAAMA,KAAK+b,iBAAkB/b,KAAK4Z,UAEnE5Z,KAAK4Z,SAASsF,iBAAiB,YAAalf,KAAKoe,aACjDpe,KAAK4Z,SAASsF,iBAAiB,YAAalf,KAAKqe,aACjDre,KAAK4Z,SAASsF,iBAAiB,aAAclf,KAAKse,cAClDte,KAAK4Z,SAASsF,iBAAiB,YAAalf,KAAKmf,aACjDnf,KAAK4Z,SAASsF,iBAAiB,cAAelf,KAAKke,eACnDle,KAAK4Z,SAASsF,iBAAiB,QAASlf,KAAKue,2CAK7C,IAAKve,KAAK4Z,SAAU,MAAM,IAAIzY,MAAM,iEAEpCnB,KAAK4Z,SAASwF,oBAAoB,YAAapf,KAAKoe,aACpDpe,KAAK4Z,SAASwF,oBAAoB,YAAapf,KAAKqe,aACpDre,KAAK4Z,SAASwF,oBAAoB,aAAcpf,KAAKse,cACrDte,KAAK4Z,SAASwF,oBAAoB,cAAepf,KAAKke,eACtDle,KAAK4Z,SAASwF,oBAAoB,QAASpf,KAAKue,SAEhDve,KAAK4Z,SAAW,sCAKZ5Z,KAAK4Z,UAGL5Z,KAAK+b,iBAAiBsD,6CAKlBhE,GACZ,QAAAiE,EAAAhE,EAAA3b,UAAAC,OAD0B2b,EAC1B,IAAA1N,MAAAyN,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAD0BD,EAC1BC,EAAA,GAAA7b,UAAA6b,GAAA,IAAApS,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IACI,QAAA0J,EAAAC,EAAsBxJ,KAAK8c,UAA3BpT,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADWyV,EACXtV,EAAAO,MACUxI,EAASud,EAAQU,YAAR7D,MAAAmD,EAAO,CAAaxD,GAAbxX,OAA2B0X,IACjD,GAAIja,EAEA,OAAOA,GANnB,MAAAyI,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAUI,OAAAgW,EAAA7e,EAAAP,EAAA0c,EAAAlc,WAAA,cAAAV,OAAAG,KAAAub,MAAA4D,EAAA,CAAAtf,KAAyBqb,GAAzBxX,OAAuC0X,wCAG/BjX,GAERA,EAAEkb,kBACFlb,EAAEmb,iBAEF,IAAMlc,EAASvD,KAAKgd,QAGpB0C,SAASC,cAAcC,OACvB5f,KAAK4Z,SAASiG,QAGVtc,EAAO0Z,aAEPyC,SAASN,oBAAoB,YAAa7b,EAAO0Z,YACjD1Z,EAAO0Z,WAAa,MAGpB1Z,EAAO2Z,WAEPwC,SAASN,oBAAoB,UAAW7b,EAAO2Z,UAC/C3Z,EAAO2Z,SAAW,MAItB,IAAM4C,EAASxb,EAAEyb,QAAU,EAAIzb,EAAEwb,OAajC,OAVI9f,KAAKggB,YAAY1b,EAAEkW,QAASlW,EAAEmW,QAASqF,KAGvCvc,EAAO0Z,WAAajd,KAAKwe,oBACzBjb,EAAO2Z,SAAWld,KAAKye,kBAEvBiB,SAASR,iBAAiB,YAAa3b,EAAO0Z,YAC9CyC,SAASR,iBAAiB,UAAW3b,EAAO2Z,YAGzC,sCAGC5Y,GAER,IAAM2b,EAAQjgB,KAAK+b,iBAAiBmE,sBAAsB5b,EAAEkW,QAASlW,EAAEmW,SACjEvY,EAAUlC,KAAKsd,SACrBpb,EAAQie,YAAYF,EAAMvgB,EAAGugB,EAAMngB,GAE/BE,KAAKuf,YAAY,mBAAoBrd,KAErCoC,EAAEkb,kBACFlb,EAAEmb,iBAEFzf,KAAKogB,gEAIO9b,GAOhB,OALAA,EAAEkb,kBACFlb,EAAEmb,iBAEFzf,KAAKqgB,YAAY/b,EAAEkW,QAASlW,EAAEmW,UAEvB,4CAGOnW,GAEdA,EAAEkb,kBACFlb,EAAEmb,iBAEF,IAAMlc,EAASvD,KAAKgd,QAiBpB,OAdIzZ,EAAO0Z,aAEPyC,SAASN,oBAAoB,YAAa7b,EAAO0Z,YACjD1Z,EAAO0Z,WAAa,MAGpB1Z,EAAO2Z,WAEPwC,SAASN,oBAAoB,UAAW7b,EAAO2Z,UAC/C3Z,EAAO2Z,SAAW,MAGtBld,KAAKsgB,UAAUhc,EAAEkW,QAASlW,EAAEmW,UAErB,uCAGEnW,GAET,GAA+B,GAA3BA,EAAEic,eAAe3gB,OACrB,CACI0E,EAAEkb,kBACFlb,EAAEmb,iBAEF,IAAMlc,EAASvD,KAAKgd,QAGpB0C,SAASC,cAAcC,OACvB5f,KAAK4Z,SAASiG,QAGVtc,EAAO4Z,aAEPuC,SAASN,oBAAoB,YAAa7b,EAAO4Z,YACjD5Z,EAAO4Z,WAAa,MAGpB5Z,EAAO6Z,YAEPsC,SAASN,oBAAoB,WAAY7b,EAAO6Z,WAChD7Z,EAAO6Z,UAAY,MAGvB,IAAMoD,EAAQlc,EAAEic,eAAe,GAY/B,OAVIvgB,KAAKggB,YAAYQ,EAAMhG,QAASgG,EAAM/F,QAAS,KAG/ClX,EAAO4Z,WAAand,KAAK0e,qBACzBnb,EAAO6Z,UAAYpd,KAAK2e,oBAExBe,SAASR,iBAAiB,YAAa3b,EAAO4Z,YAC9CuC,SAASR,iBAAiB,WAAY3b,EAAO6Z,aAG1C,+CAIK9Y,GAEhBA,EAAEkb,kBACFlb,EAAEmb,iBAEF,IAAMlc,EAASvD,KAAKgd,QAGhBzZ,EAAO4Z,aAEPuC,SAASN,oBAAoB,YAAa7b,EAAO4Z,YACjD5Z,EAAO4Z,WAAa,MAGpB5Z,EAAO6Z,YAEPsC,SAASN,oBAAoB,WAAY7b,EAAO6Z,WAChD7Z,EAAO6Z,UAAY,MAGvB,IAAMoD,EAAQlc,EAAEic,eAAe,GAG/B,OAFAvgB,KAAKsgB,UAAUE,EAAMhG,QAASgG,EAAM/F,UAE7B,+CAGUnW,GAEjBA,EAAEkb,kBACFlb,EAAEmb,iBAEF,IAAMe,EAAQlc,EAAEic,eAAe,GAG/B,OAFAvgB,KAAKqgB,YAAYG,EAAMhG,QAASgG,EAAM/F,UAE/B,wCAGGnW,GAKV,OAHAA,EAAEkb,kBACFlb,EAAEmb,kBAEK,kCAGHnb,GAEJA,EAAEkb,kBACFlb,EAAEmb,iBAEF,IAAMvd,EAAUlC,KAAKsd,SACf9b,EAAK8C,EAAEmc,OAASzgB,KAAK2d,mBACrB+C,EAAO1gB,KAAK+b,iBAAiBxF,WAC7B3M,EAAO8W,EAAOlf,EAQpB,OALKxB,KAAKuf,YAAY,eAAgBrd,EAAS0H,EAAM8W,IAEjD1gB,KAAK+b,iBAAiB4E,SAAS/W,IAG5B,sCAGClK,EAAGI,EAAGggB,GAGd,IAAMvc,EAASvD,KAAKgd,QACd9a,EAAUlC,KAAKsd,SACf2C,EAAQjgB,KAAK+b,iBAAiBmE,sBAAsBxgB,EAAGI,GAO7D,OANAoC,EAAQie,YAAYF,EAAMvgB,EAAGugB,EAAMngB,GAEnCE,KAAKud,WAAY,EACjBvd,KAAKwd,UAAsB,GAAVsC,GAGZ9f,KAAKuf,YAAY,kBAAmBrd,KAErCA,EAAQ0e,aACRrd,EAAO8Z,OAASwD,WAAW7gB,KAAK4e,mBAAoB5e,KAAKyd,kBAClD,gDASNzd,KAAKud,YAENvd,KAAKwd,WAAY,uCAIb9d,EAAGI,GAEX,IAAMoC,EAAUlC,KAAKsd,SACf2C,EAAQjgB,KAAK+b,iBAAiBmE,sBAAsBxgB,EAAGI,GAG7D,GAFAoC,EAAQie,YAAYF,EAAMvgB,EAAGugB,EAAMngB,GAE9BE,KAAKud,UAgCFvd,KAAK+c,oBAEL/c,KAAK+c,mBAAmB+D,WAAW5e,QAhCvC,GAAIA,EAAQ6e,0BAA4B/gB,KAAK6d,mBAC7C,CACI7d,KAAKud,WAAY,EAGjB,IAAMyD,EAAqB9e,EAAQ+e,wBAC7B3f,EAAStB,KAAKuf,YAAY,cAAerd,EAAS8e,EAAmBthB,EAAGshB,EAAmBlhB,GAC5FwB,EAYDtB,KAAK+c,mBAAqBzb,GAV1BtB,KAAKud,WAAY,EAMjBvd,KAAKogB,uDAsBX1gB,EAAGI,GAET,IAAMyD,EAASvD,KAAKgd,QACdkE,EAAQ3d,EAAO8Z,OACjB6D,IAEAC,aAAaD,GACb3d,EAAO8Z,OAAS,MAIpB,IAAMnb,EAAUlC,KAAKsd,SACf2C,EAAQjgB,KAAK+b,iBAAiBmE,sBAAsBxgB,EAAGI,GAG7D,GAFAoC,EAAQie,YAAYF,EAAMvgB,EAAGugB,EAAMngB,GAE/BE,KAAKud,UAGDvd,KAAK+c,qBAEL/c,KAAK+c,mBAAmBqE,WAAWlf,GACnClC,KAAK+c,mBAAqB,WAK9B,GAAI/c,KAAKwd,UAGLxd,KAAKuf,YAAY,kBAAmBrd,QAKpC,IAAKlC,KAAKuf,YAAY,eAAgBrd,GACtC,CAEI,IAAMT,EAAK/B,EAAIM,KAAKge,YACdxc,EAAK1B,EAAIE,KAAKie,YACdoD,EAAO5f,EAAKA,EAAKD,EAAKA,EACtB8f,EAAKC,KAAKC,MAAQxhB,KAAK+d,eACzB/d,KAAK8d,iBACLuD,EAAOrhB,KAAK4d,eACZ0D,EAAKthB,KAAK0d,gBAGV1d,KAAKuf,YAAY,kBAAmBrd,GAEpClC,KAAK8d,iBAAkB,IAIvB9d,KAAK8d,iBAAkB,EACvB9d,KAAK+d,eAAiBwD,KAAKC,MAC3BxhB,KAAKge,YAActe,EACnBM,KAAKie,YAAcne,GAMnCoC,EAAQuf,WACRzhB,KAAKuf,YAAY,mBAAoBrd,8CAKrC,IAAMA,EAAUlC,KAAKsd,SACf/Z,EAASvD,KAAKgd,QAGhBzZ,EAAO0Z,aAEPyC,SAASN,oBAAoB,YAAa7b,EAAO0Z,YACjD1Z,EAAO0Z,WAAa,MAGpB1Z,EAAO2Z,WAEPwC,SAASN,oBAAoB,UAAW7b,EAAO2Z,UAC/C3Z,EAAO2Z,SAAW,MAGtB,IAAMgE,EAAQ3d,EAAO8Z,OACjB6D,IAEAC,aAAaD,GACb3d,EAAO8Z,OAAS,MAGpBnb,EAAQuf,WACRzhB,KAAKuf,YAAY,mBAAoBrd,yCAGzB,OAAOlC,KAAK8c,qDACP,OAAO9c,KAAK4Z,sDACV,OAAO5Z,KAAK+b,uDACnB,OAAO/b,KAAKsd,SAAWtd,KAAKsd,SAAS5d,EAAI,wCACzC,OAAOM,KAAKsd,SAAWtd,KAAKsd,SAASxd,EAAI,4CACrC,QAAOE,KAAKsd,UAAWtd,KAAKsd,SAASoE,kDACxC,OAAO1hB,KAAKgd,QAAQG,YAAcnd,KAAKgd,QAAQI,+CACjD,OAAOpd,KAAKwd,+CACZ,OAAOxd,KAAKud,+1BCpiB/B,IACMoE,EAAwB,GACxBC,EAAY,GACZC,EAAY,GA2FHC,cAvFX,SAAAA,EAAYvf,GACZ,IAAA9C,EAAA,mGAAAsiB,CAAA/hB,KAAA8hB,IACIriB,EAAAuiB,EAAAhiB,KAAAiiB,EAAAH,GAAA3hB,KAAAH,KAAMuC,KAED2f,KAAOhe,IAAMie,YAElB1iB,EAAKsc,kBAAmB,IAAIpC,GACvByI,YAAYR,GACZS,YAAYR,GACZS,iBAAiBX,GACtBliB,EAAKqc,cAAgB,IAAIc,EAAand,EAAKsc,kBAT/Ctc,wPAH4ByE,IAAMC,yDAelB8W,GAEZ,KAAMA,aAAwBhZ,KAAuB,MAAM,IAAId,MAAM,4DAErE,OADAnB,KAAK8b,cAAcyG,gBAAgBtH,GAC5Bjb,iDAMPA,KAAK8b,cAAc0G,WAAWxiB,KAAKkiB,KAAKO,wDAMxCziB,KAAK8b,cAAc4G,uDAMnB1iB,KAAK8b,cAAcuD,yDAKnB,IAAMsD,EAAW3iB,KAAK+b,iBACtB,MAAO,aAAe4G,EAAS7K,aAAe,IAAM6K,EAAS5K,aAAe,gDAG5D6K,GAEhB,IAAMD,EAAW3iB,KAAK+b,iBAChB8G,EAAWD,EAAejiB,KAAKoD,IAAI8E,OAAOI,UAAW0Z,EAASpM,YAC9DuM,EAAeD,EAAW,EAChC,OAASC,EAAgB,KAAQA,EAAgB,IAAMD,EAAW,IAAMA,0CAKxE,OAAO7iB,KAAKkiB,KAAKO,kDAKjB,OAAOziB,KAAK8b,2DAKZ,OAAO9b,KAAK8b,cAAciH,sDAM1B,IAAMtN,EAAUzV,KAAKgjB,oBAAoBhjB,KAAKuC,MAAMsgB,UA7ElC,KA8EZvd,EAAYtF,KAAKijB,wBAEvB,OACI3N,EAAA7S,EAAAC,cAAA,OAAKwgB,IAAKljB,KAAKkiB,KACX1iB,GAAIQ,KAAKuC,MAAM/C,GACf+V,UAAWmB,IAAMyM,mBAAqB,IAAMnjB,KAAKuC,MAAMgT,UACvD7R,MAAO1D,KAAKuC,MAAMmB,MAClB+R,QAASA,GACTH,EAAA7S,EAAAC,cAAA,KAAG4C,UAAWA,GACTtF,KAAKuC,MAAMmW,+NC5FhC,IAAM0K,GAA0B,EAkKjBC,aA9JX,SAAAA,iGACAC,CAAAtjB,KAAAqjB,GACIrjB,KAAKujB,YAAa,EAClBvjB,KAAKwjB,WAAY,EACjBxjB,KAAKyjB,eAAiBL,EACtBpjB,KAAK0jB,gBAAiB,EAOtB1jB,KAAK2jB,QAAU,CACXC,OAAQ,KACRpf,KAAM,MAUVxE,KAAK6jB,cAAgB,CACjBD,OAAQ,KACRpf,KAAM,KACNsf,OAAO,GAQX9jB,KAAK+jB,iBAAmB,CACpBH,OAAQ,KACRpf,KAAM,MAIVxE,KAAKgkB,cAAgB,KAGrBhkB,KAAKqD,YAAcrD,KAAKqD,YAAY6S,KAAKlW,MACzCA,KAAKsD,WAAatD,KAAKsD,WAAW4S,KAAKlW,qEAG3B2R,GAGZ,OADA3R,KAAKgkB,cAAgBrS,EACd3R,0CAGEqT,GAGT,OADArT,KAAKujB,WAAalQ,EACXrT,+CAGOqT,GAGd,OADArT,KAAKwjB,UAAYnQ,EACVrT,8CAGMqT,GAGb,OADArT,KAAKyjB,eAAiBpQ,EACfrT,6CAIKkC,GAKZ,OAHAlC,KAAK0jB,gBAAiB,EAEtB1jB,KAAKikB,oBAAoBjkB,KAAK+jB,iBAAiBH,OAAQ5jB,KAAK+jB,iBAAiBvf,OACtE,2CAIMtC,GAEblC,KAAKikB,oBAAoB,KAAM,MAC/BjkB,KAAK0jB,gBAAiB,sCAGdpf,GAER,IACMwF,EADSxF,EAAEC,OACG,MACpBvE,KAAK+jB,iBAAiBH,OAAS9Z,EAAM8Z,OACrC5jB,KAAK+jB,iBAAiBvf,KAAOsF,EAAMtF,KAKnCxE,KAAK+jB,iBAAiBG,KAAOpa,qCAGtBxF,GAEPtE,KAAK+jB,iBAAiBH,OAAS,KAC/B5jB,KAAK+jB,iBAAiBvf,KAAO,KAE7BxE,KAAK+jB,iBAAiBG,KAAO,8CAGhBjS,EAAc6B,GAC/B,IAD2CqQ,IAC3CxkB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACIK,KAAK6jB,cAAcD,OAAS3R,EAC5BjS,KAAK6jB,cAAcrf,KAAOsP,EAC1B9T,KAAK6jB,cAAcC,MAAQK,+CAK3BnkB,KAAK6jB,cAAcD,OAAS,KAC5B5jB,KAAK6jB,cAAcrf,KAAO,KAC1BxE,KAAK6jB,cAAcC,OAAQ,8CAGX7R,EAAc6B,GAE9B9T,KAAK2jB,QAAQC,OAAS3R,EACtBjS,KAAK2jB,QAAQnf,KAAOsP,kDAGE,OAAO9T,KAAK6jB,cAAcD,qDAC5B,OAAO5jB,KAAK6jB,cAAcrf,+CAC9B,OAAmC,OAA5BxE,KAAK6jB,cAAcrf,8CAE7ByN,GAEb,OAAIjS,KAAK6jB,cAAcD,SAAW3R,EAAqBjS,KAAK6jB,cAAcC,OACtE9jB,KAAKwjB,WAAkBvR,aAAwB1S,qDAI5B,OAAOS,KAAK2jB,QAAQC,sDACtB,OAAO5jB,KAAK2jB,QAAQnf,gDACxB,OAA6B,OAAtBxE,KAAK2jB,QAAQnf,wDAEZ,OAAOxE,KAAK+jB,iBAAiBH,wDAC/B,OAAO5jB,KAAK+jB,iBAAiBvf,kDACjC,OAAsC,OAA/BxE,KAAK+jB,iBAAiBvf,2CAEpC,OAAOxE,KAAKujB,8CACjB3H,GAAgB,QAAS5b,KAAKyjB,gBAAkB7H,EAAawI,yDACnD,OAAOpkB,KAAKwjB,oDACb,OAAOxjB,KAAKyjB,yDAEZ,OAAOzjB,KAAK0jB,yDAEZ,OAAO1jB,KAAKgkB,81BC/GrBK,cA9CX,SAAAA,EAAYlU,GACZ,IAAA1Q,EAAA,mGAAA6kB,CAAAtkB,KAAAqkB,IACI5kB,EAAA8kB,EAAAvkB,KAAAwkB,EAAAH,GAAAlkB,KAAAH,QAEKqQ,iBAAmBF,EAExB1Q,EAAK8Q,gBAAkB,CAAC7Q,EAAG,EAAGI,EAAG,GALrCL,wPAH+BwC,kDAYnBC,GAER,IAAMiO,EAAkBnQ,KAAKqQ,iBAC7B,GAAIF,EAAgBkB,kBAAmB,OAAO,EAC9C,GAAIlB,EAAgBsU,mBAAoB,OAAO,EAC/C,IAAKtU,EAAgBa,WAAW9O,EAAQ+O,mBAAoB,OAAO,EAEnE,IAAM+P,EAAqB9e,EAAQ+e,wBAGnC,OAFAjhB,KAAKuQ,gBAAgB7Q,EAAIshB,EAAmBthB,EAC5CM,KAAKuQ,gBAAgBzQ,EAAIkhB,EAAmBlhB,GACrC,qCAIAoC,GAEP,IAAMT,EAAKS,EAAQxC,EAAIM,KAAKuQ,gBAAgB7Q,EACtC8B,EAAKU,EAAQpC,EAAIE,KAAKuQ,gBAAgBzQ,EAE3BoC,EAAQ6gB,qBAChB2B,UAAUjjB,EAAID,GAAI,sCAUpBU,o1BCnCTyiB,cAEF,SAAAA,EAAYpiB,GACZ,IAAA9C,EAAA,mGAAAmlB,CAAA5kB,KAAA2kB,IACIllB,EAAAolB,EAAA7kB,KAAA8kB,EAAAH,GAAAxkB,KAAAH,KAAMuC,KAED8N,iBAAmB,IAAIgT,EAC5B5jB,EAAKslB,cAAgB,IAAIjK,EAEzBrb,EAAKulB,mBAAqB9gB,IAAMie,YAEhC1iB,EAAKwlB,sBAAwB,IAAIZ,EAAqB5kB,EAAK4Q,kBAR/D5Q,wPAHoByE,IAAMC,6DAiBtB,IAAM+gB,EAAellB,KAAK+kB,cAEpBnJ,EADW5b,KAAKglB,mBAAmBvC,QACXxR,kBAC9BiU,EACK3C,gBAAgBviB,KAAKqQ,kBACrBkS,gBAAgBviB,KAAKilB,sBAAuB,IACjDrJ,EAAauJ,YAAYD,kDAMzB,IAAMA,EAAellB,KAAK+kB,cAEpBnJ,EADW5b,KAAKglB,mBAAmBvC,QACXxR,kBAC9BiU,EAAaE,qBACbxJ,EAAayJ,cAAcH,8CAGZxlB,EAAGI,GAGlBE,KAAK+iB,qBAAqBpL,WAAWjY,GAAII,gDAGtB,OAAOE,KAAKqQ,2DACf,OAAOrQ,KAAK+kB,6DAEP,OAAO/kB,KAAKglB,mBAAmBvC,kDACpC,OAAOziB,KAAKglB,mBAAmBvC,QAAQxR,+DACpC,OAAOjR,KAAKglB,mBAAmBvC,QAAQM,sDAK1D,IAAM5S,EAAkBnQ,KAAKqQ,iBACvBsS,EAAW3iB,KAAKglB,mBAAmBvC,QACnC6C,EAActlB,KAAKuC,MAAM+iB,YACzBC,EAAgBvlB,KAAKuC,MAAMgjB,cAEjC,OACIjQ,EAAA7S,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAChB+V,UAAWvV,KAAKuC,MAAMgT,UACtB7R,MAAO1D,KAAKuC,MAAMmB,OAClB4R,EAAA7S,EAAAC,cAAC8iB,EAAD,CAAmBtC,IAAKljB,KAAKglB,oBACxBM,GAAe3C,GAAY2C,EAAYtlB,KAAM2iB,EAAUxS,IAE3DoV,GAAiB5C,GAAY4C,EAAcvlB,KAAM2iB,EAAUxS,yCAM7DwU,m2BC7Ef,IAsCec,cAlCX,SAAAA,EAAYljB,GACZ,mGAAAxC,CAAAC,KAAAylB,GAAAxlB,EAAAD,KAAAE,EAAAulB,GAAAtlB,KAAAH,KACUuC,0PAJY2B,IAAMC,kDAUxB,IAAMuhB,EAAU1lB,KAAKuC,MAAMmjB,QACrBC,EAAQ3lB,KAAKuC,MAAMojB,OAAS,EAC5BC,EAAQ5lB,KAAKuC,MAAMqjB,OAAS,EAC5BC,EAAM7lB,KAAKuC,MAAMsjB,KAAOF,EAAQ,EAChCG,EAAM9lB,KAAKuC,MAAMujB,KAAOF,EAAQ,EAChC1iB,EAAQlD,KAAKuC,MAAMW,OAAS,UAE5BzB,EAAKokB,EAAMF,EACXnkB,EAAKskB,EAAMF,EAEjB,OACItQ,EAAA7S,EAAAC,cAAA,SACKgjB,GACGpQ,EAAA7S,EAAAC,cAAA,QAAM6S,UAAU,WACZ7V,EAAGiB,KAAKmD,IAAI+hB,EAAKF,GACjB7lB,EAAGa,KAAKmD,IAAIgiB,EAAKF,GACjBld,MAAO/H,KAAK4G,IAAI9F,GAChBkH,OAAQhI,KAAK4G,IAAI/F,GACjB2B,OAAQD,EACRD,KAAMC,EACN6iB,YAhCH,k1BCArB,IACMC,EAAuB,CAAC,EAAG,GAgClBC,cA3BX,SAAAA,EAAY1jB,GACZ,mGAAA2jB,CAAAlmB,KAAAimB,GAAAE,EAAAnmB,KAAAomB,EAAAH,GAAA9lB,KAAAH,KACUuC,0PAJuB2B,IAAMC,kDAUnC,IAAM2C,EAAS9G,KAAKuC,MAAMuE,OACpB3D,EAASnD,KAAKuC,MAAMW,OAAS,UAC7BF,EAAShD,KAAKuC,MAAMS,QAAU,GAEpC,OACIsS,EAAA7S,EAAAC,cAAC4S,EAAA7S,EAAME,SAAP,KACI2S,EAAA7S,EAAAC,cAAA,UAAQ6S,UAAU,WACd3S,GAAIkE,EAAOpH,EAAGoD,GAAIgE,EAAOhH,EAAGiD,EAAGC,EAC/BG,OAAQA,EACRkjB,iBArBK,EAsBLC,gBAAiBN,EACjBve,YAzBS,EA0BTxE,KAAK,OACLO,cAAc,s1BCzBlC,IAiDe+iB,cA7CX,SAAAA,EAAYhkB,GACZ,mGAAAikB,CAAAxmB,KAAAumB,GAAAE,EAAAzmB,KAAA0mB,EAAAH,GAAApmB,KAAAH,KACUuC,0PAJoB2B,IAAMC,kDAUhC,IAAMwiB,EAAa,GAEbC,EAAQ5mB,KAAKuC,MAAMqkB,MACzB,GAAIA,EACJ,KAAAxd,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IACI,QAAA0J,EAAAC,EAAkBod,EAAlBld,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADUlI,EACVqI,EAAAO,MACI6c,EAAW5Z,KACPuI,EAAA7S,EAAAC,cAACmkB,EAAD,CACIjhB,IAAK1E,EAAKgL,oBACVpF,OAAQ5F,EACR8B,OAAQ9B,EAAKY,cAvBZ,MAgBjB,MAAAiI,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,IAYA,IAAMwd,EAAQ9mB,KAAKuC,MAAMukB,MACzB,GAAIA,EACJ,KAAAvc,GAAA,EAAAC,GAAA,EAAAC,OAAA5K,EAAA,IACI,QAAA6K,EAAAC,EAAkBmc,EAAlBpd,OAAAC,cAAAY,GAAAG,EAAAC,EAAAf,QAAAC,MAAAU,GAAA,EACA,KADUK,EACVF,EAAAZ,MACI6c,EAAW5Z,KACPuI,EAAA7S,EAAAC,cAACmkB,EAAD,CACIjhB,IAAKgF,EAAKsB,oBACVpF,OAAQ8D,EAAKG,qBAN7B,MAAAhB,GAAAS,GAAA,EAAAC,EAAAV,EAAA,YAAAQ,GAAA,MAAAI,EAAAX,QAAAW,EAAAX,SAAA,WAAAQ,EAAA,MAAAC,IAWA,OACI6K,EAAA7S,EAAAC,cAAA,SACKikB,8MCoCFI,iBAjFX,SAAAA,iGACAC,CAAAhnB,KAAA+mB,GACI/mB,KAAKinB,aAAe,CAChBtB,MAAO,EAAGC,MAAO,EACjBC,IAAK,EAAGC,IAAK,EACbJ,SAAS,GAGb1lB,KAAKknB,QAAU,mEAGA,OAAOlnB,KAAKinB,kDAElB3U,GAET,GADJ3S,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAEI,CACI,IAAMwnB,EAAMnnB,KAAKinB,aACXG,EAAKzmB,KAAKoD,IAAIojB,EAAItB,IAAKsB,EAAIxB,OAC3B0B,EAAK1mB,KAAKoD,IAAIojB,EAAIrB,IAAKqB,EAAIvB,OAC3B0B,EAAK3mB,KAAKmD,IAAIqjB,EAAItB,IAAKsB,EAAIxB,OAC3B4B,EAAK5mB,KAAKmD,IAAIqjB,EAAIrB,IAAKqB,EAAIvB,OACjC5lB,KAAK+R,iBAyCjB,SAAwBO,EAAOkV,EAAIC,EAAIC,EAAIC,EAAIrnB,GAE3C,IAAMqlB,EAAQhlB,KAAKmD,IAAI0jB,EAAIE,GACrB9B,EAAQjlB,KAAKmD,IAAI2jB,EAAIE,GACrB9B,EAAMllB,KAAKoD,IAAIyjB,EAAIE,GACnB5B,EAAMnlB,KAAKoD,IAAI0jB,EAAIE,GAJ7Bve,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IAMI,QAAA0J,EAAAC,EAAmB8I,EAAM3E,WAAzBjE,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADWlI,EACXqI,EAAAO,MACQ5I,EAAKxB,GAAKimB,GAASzkB,EAAKxB,EAAImmB,GACrC3kB,EAAKpB,GAAK8lB,GAAS1kB,EAAKpB,EAAIgmB,GAEnBxlB,EAAIyM,KAAK7L,IAXrB,MAAA6I,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,IAzCYse,CAAetV,EAAOgV,EAAIC,EAAIH,EAAIC,EAAIrnB,KAAKknB,SAG/C,OAAOlnB,KAAKknB,+CAGD5U,EAAO5S,EAAGI,GAErB,IAAMqnB,EAAMnnB,KAAKinB,aACjBE,EAAIxB,MAAQwB,EAAItB,IAAMnmB,EACtBynB,EAAIvB,MAAQuB,EAAIrB,IAAMhmB,EACtBE,KAAK+R,iBAELoV,EAAIzB,SAAU,0CAGFpT,EAAO5S,EAAGI,GAEtB,IAAMqnB,EAAMnnB,KAAKinB,aACjBE,EAAItB,IAAMnmB,EACVynB,EAAIrB,IAAMhmB,EACVE,KAAKmS,aAAaG,GAAO,wCAGhBA,EAAO5S,EAAGI,GAEnB,IAAMqnB,EAAMnnB,KAAKinB,aACjBE,EAAItB,IAAMnmB,EACVynB,EAAIrB,IAAMhmB,EACVE,KAAKmS,aAAaG,GAAO,GAEzB6U,EAAIzB,SAAU,8CAGEnhB,GAAU,OAAOvE,KAAKknB,QAAQW,SAAStjB,0CAC1C,OAAOvE,KAAKknB,QAAQtnB,OAAS,2CAC3BI,KAAKknB,QAAQtnB,OAAS,sCAC3B,OAAOI,KAAKinB,aAAavB,i2BCD5BoC,cAzDX,SAAAA,EAAY3X,EAAiBC,EAAiBuB,GAC9C,IAAAlS,EAAA,mGAAAsoB,CAAA/nB,KAAA8nB,IACIroB,EAAAuoB,EAAAhoB,KAAAioB,EAAAH,GAAA3nB,KAAAH,QAEKqQ,iBAAmBF,EACxB1Q,EAAK6Q,iBAAmBF,EACxB3Q,EAAKukB,cAAgBrS,EALzBlS,wPAHmCwC,sDAYnBC,GAEZ,IAAMiO,EAAkBnQ,KAAKqQ,iBACvBsB,EAAe3R,KAAKgkB,cAS1B,OARIrS,EAAaE,iBAER1B,EAAgBa,WAAW9O,EAAQ+O,oBAAuBU,EAAaG,oBAAoB3B,EAAgBgE,6BAE5GxC,EAAaI,mBAId,sCAIC7P,GAER,IAAMiO,EAAkBnQ,KAAKqQ,iBAC7B,GAAIF,EAAgBkB,kBAAmB,OAAO,EAC9C,GAAIlB,EAAgBa,WAAW9O,EAAQ+O,mBAAoB,OAAO,EAClE,GAAId,EAAgBsU,mBAAoB,OAAO,EAE/C,IAAMzD,EAAqB9e,EAAQ+e,wBAEnC,OADAjhB,KAAKgkB,cAAckE,eAAeloB,KAAKsQ,iBAAiBO,WAAYmQ,EAAmBthB,EAAGshB,EAAmBlhB,IACtG,qCAIAoC,GAEHlC,KAAKgkB,cAAcmE,aAEnBnoB,KAAKgkB,cAAcoE,gBAAgBpoB,KAAKsQ,iBAAiBO,WAAY3O,EAAQxC,EAAGwC,EAAQpC,sCAKrFoC,GAEHlC,KAAKgkB,cAAcmE,aAEnBnoB,KAAKgkB,cAAcqE,aAAaroB,KAAKsQ,iBAAiBO,WAAY3O,EAAQxC,EAAGwC,EAAQpC,m1BChD3FwoB,cAEF,SAAAA,EAAY/lB,GACZ,IAAA9C,+FAAA8oB,CAAAvoB,KAAAsoB,GACI7oB,EAAA+oB,EAAAxoB,KAAAyoB,EAAAH,GAAAnoB,KAAAH,KAAMuC,IAEN,IAAM4N,EAAkB5N,EAAM4N,gBACxBC,EAAkB7N,EAAM6N,gBAJlC,OAMI3Q,EAAKukB,cAAgB,IAAI+C,EACzBtnB,EAAKipB,0BAA4B,IAAIZ,EAAyB3X,EAAiBC,EAAiB3Q,EAAKukB,eAPzGvkB,wPAH4ByE,IAAMC,6DAgB9B,IAAMgM,EAAkBnQ,KAAKuC,MAAM4N,gBAC/BA,GAEAA,EAAgBwY,gBAAgB3oB,KAAKgkB,eAGzC,IAAMkB,EAAellB,KAAKuC,MAAM2iB,aAChC,GAAIA,EACJ,CACI,IAAM0D,EAAgB5oB,KAAKuC,MAAMqmB,gBAAkB,EACnD1D,EAAa3C,gBAAgBviB,KAAK0oB,0BAA2BE,mDAOjE5oB,KAAKgkB,cAAcjS,iBAEnB,IAAMmT,EAAellB,KAAKuC,MAAM2iB,aAC5BA,GAEAA,EAAa2D,mBAAmB7oB,KAAK0oB,qEAIzB,OAAO1oB,KAAKgkB,oEACA,OAAOhkB,KAAK0oB,2DAKxC,IAAM/W,EAAe3R,KAAKgkB,cACpB8E,EAAuBnX,EAAaoX,iBAE1C,OACIzT,EAAA7S,EAAAC,cAAC4S,EAAA7S,EAAME,SAAP,KACI2S,EAAA7S,EAAAC,cAACsmB,EAAD,CACIpC,MAAOjV,EAAaQ,iBACxBmD,EAAA7S,EAAAC,cAACumB,EAAD,CAAavD,QAAS/T,EAAawW,YAC/BxC,MAAOmD,EAAqBnD,MAC5BC,MAAOkD,EAAqBlD,MAC5BC,IAAKiD,EAAqBjD,IAC1BC,IAAKgD,EAAqBhD,4CAM/BwC,s3BCpCAY,cAhCb,SAAAA,EAAY3mB,GACZ,mGAAAxC,CAAAC,KAAAkpB,GAAAjpB,EAAAD,KAAAE,EAAAgpB,GAAA/oB,KAAAH,KACQuC,0PAJY2B,IAAMC,kDASxB,OAAOmR,EAAA7S,EAAAC,cAAA,OAAK6S,UAAU,WAAWC,MAAM,6BAA6BC,QAAQ,aAC1EH,EAAA7S,EAAAC,cAAA,SACE4S,EAAA7S,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,kMACvBoQ,EAAA7S,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,kGACvBoQ,EAAA7S,EAAAC,cAAA,WAASO,KAAK,UAAUkmB,OAAO,oCAC/B7T,EAAA7S,EAAAC,cAAA,SACE4S,EAAA7S,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,wmBACvBoQ,EAAA7S,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,4FACvBoQ,EAAA7S,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAG,i+BAU1BoQ,EAAA7S,EAAAC,cAAA,UAAQO,KAAK,UAAUL,GAAG,SAASE,GAAG,SAASC,EAAE,UACjDuS,EAAA7S,EAAAC,cAAA,WAASO,KAAK,UAAUkmB,OAAO,s5BCgBxBC,cA1Cb,SAAAA,EAAY7mB,GACZ,mGAAA8mB,CAAArpB,KAAAopB,GAAAE,EAAAtpB,KAAAupB,EAAAH,GAAAjpB,KAAAH,KACQuC,0PAJY2B,IAAMC,kDASxB,OAAOmR,EAAA7S,EAAAC,cAAA,OAAK6S,UAAU,WAAWC,MAAM,6BAA6BC,QAAQ,aAC1EH,EAAA7S,EAAAC,cAAA,SACE4S,EAAA7S,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,kMACvBoQ,EAAA7S,EAAAC,cAAA,WAASO,KAAK,UAAUkmB,OAAO,oCAC/B7T,EAAA7S,EAAAC,cAAA,UAAQO,KAAK,UAAUL,GAAG,SAASE,GAAG,SAASC,EAAE,UACjDuS,EAAA7S,EAAAC,cAAA,WAASO,KAAK,UAAUkmB,OAAO,oEAC/B7T,EAAA7S,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,kGACvBoQ,EAAA7S,EAAAC,cAAA,SACE4S,EAAA7S,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAG,ufAKxBoQ,EAAA7S,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAG,gmBAMxBoQ,EAAA7S,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAG,+yDCqBnBskB,cAhDb,SAAAA,EAAYjnB,GACZ,mGAAAknB,CAAAzpB,KAAAwpB,GAAAE,EAAA1pB,KAAA2pB,EAAAH,GAAArpB,KAAAH,KACQuC,0PAJY2B,IAAMC,kDAUxB,OAAOmR,EAAA7S,EAAAC,cAAA,OAAK6S,UAAU,WAAWC,MAAM,6BAA6BC,QAAQ,aAC3EH,EAAA7S,EAAAC,cAAA,SACC4S,EAAA7S,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,kMAEvBoQ,EAAA7S,EAAAC,cAAA,WAASO,KAAK,UAAUkmB,OAAO,oCAC/B7T,EAAA7S,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,kGACvBoQ,EAAA7S,EAAAC,cAAA,SACC4S,EAAA7S,EAAAC,cAAA,QAAMO,KAAK,UACViC,EAAE,2sCAWHoQ,EAAA7S,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,0FACvBoQ,EAAA7S,EAAAC,cAAA,QAAMO,KAAK,UACViC,EAAE,izBASJoQ,EAAA7S,EAAAC,cAAA,QAAMO,KAAK,UACViC,EAAE,0qCClBM0kB,cArBX,SAAAA,EAAYrnB,GAAO,mGAAAsnB,CAAA7pB,KAAA4pB,GAAAE,EAAA9pB,KAAA+pB,EAAAH,GAAAzpB,KAAAH,KAAQuC,0PAFL2B,IAAMmR,sDAOxB,OACIC,EAAA7S,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAAI+V,UAAWvV,KAAKuC,MAAMgT,UAAW7R,MAAO1D,KAAKuC,MAAMmB,MACvE8R,MAAM,6BACN9M,MAAM,KAAKC,OAAO,KAAK8M,QAAQ,aAC/BH,EAAA7S,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,kMACvBoQ,EAAA7S,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,kGACvBoQ,EAAA7S,EAAAC,cAAA,WAASO,KAAK,UAAUkmB,OAAO,oCAC/B7T,EAAA7S,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,wmBACvBoQ,EAAA7S,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAE,4FACvBoQ,EAAA7S,EAAAC,cAAA,QAAMO,KAAK,UAAUiC,EAAG,g+BACxBoQ,EAAA7S,EAAAC,cAAA,UAAQO,KAAK,UAAUL,GAAG,SAASE,GAAG,SAASC,EAAE,UACjDuS,EAAA7S,EAAAC,cAAA,WAASO,KAAK,UAAUkmB,OAAO,wtCCXxC,IAAMa,EAAiB,MAQxBC,cAEF,SAAAA,IACA,IAAAxqB,EADYyqB,EACZvqB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADwBqqB,EACxB,mGAAAG,CAAAnqB,KAAAiqB,IACIxqB,EAAA2qB,EAAApqB,KAAAqqB,EAAAJ,GAAA9pB,KAAAH,QACKsqB,WAAaJ,EAFtBzqB,wPAHkC8qB,mDASrBC,EAAYjmB,GAErB,IAAMkmB,EAAUlmB,EACVmmB,EAAgBD,EAAQtR,mBACxBwR,EAAWF,EAAQG,iBAEnBC,EADYJ,EAAQtR,mBAAmB2R,eAAeC,uBAC/BC,gBACvBC,EAAeJ,EAAWpV,QAAQyV,QAClCxiB,EAAQuiB,EAAaviB,MACrBC,EAASsiB,EAAatiB,OACtBwiB,EAAMnrB,KAAKorB,oBAAoBP,EAAYniB,EAAOC,EAAQ+hB,GAE1DW,EA1Be,OA0BLrrB,KAAKsqB,WAA+BN,EAAiBhqB,KAAKsqB,WAC1E,OAAOgB,QAAQC,QAAQ,CACnBC,KAAMb,EAAW,IAAMU,EACvB7mB,KAAM,QACN0f,KAAMiH,EACNziB,MAAOA,EACPC,OAAQA,EACR8iB,aAAcJ,kDAIAK,EAAcC,GAEhC,IAAKA,EAAgB,OAAOA,EAE5B,IAAMC,EAAaD,EAAevQ,QAAQ,UAC1C,GAAIwQ,EAAa,EAAG,OAAOD,EAE3B,IAAME,EAAYF,EAAevQ,QAAQ,IAAKwQ,GACxC9hB,EAAQ6hB,EAAeG,UAAUF,EAAa,EAAGC,GACjDnoB,EAAQgoB,EAAaK,eAAejiB,GACtCxI,EAASoC,EAAQA,EAAMsoB,WAAa,UAExC,GAjDqB,OAiDjBhsB,KAAKsqB,WACT,CACI,IAAM2B,EAAMC,IAAqB5qB,GACjC4qB,IAAyBD,EAAKA,GAC9B3qB,EAAS4qB,IAAqBD,GAGlC,OAAO3qB,8CAGS+Y,EAAS3R,EAAOC,EAAQ+hB,GAExC,IAAMta,EAAkBsa,EAActR,qBAEhCuJ,EAAW+H,EAAcI,eAAe/H,qBACxCoJ,EAAUxJ,EAAS7K,aACnBsU,EAAUzJ,EAAS5K,aACnBsU,EAASjc,EAAgBS,WAAWyb,kBACpC7qB,EAAK4qB,EAAO/jB,KAAO6jB,EAjER,GAkEX3qB,EAAK6qB,EAAO9jB,KAAO6jB,EAjER,EAkEXG,EAAIF,EAAO3jB,MAAQ8jB,GACnBC,EAAIJ,EAAO1jB,OAAS+jB,EACpBC,EAAQtS,EAAQuS,WAAU,GAChCD,EAAME,aAAa,UAAWprB,EAAK,IAAMD,EAAK,IAAM+qB,EAAI,IAAME,GAC9DE,EAAME,aAAa,QAASnkB,GAC5BikB,EAAME,aAAa,SAAUlkB,GAG7BgkB,EAAME,aAAa,YAAa,QAChCF,EAAME,aAAa,cAAe,aAClCF,EAAME,aAAa,QAAS,8BAG5B,IAAMnB,EAAehB,EAAcoC,SAASC,kBAtBhD3jB,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IAuBI,QAAA0J,EAAAC,EAAsBmjB,EAAMK,qBAAqB,KAAjDtjB,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADWiR,EACX9Q,EAAAO,MACUmjB,EAAc5S,EAAQ6S,aAAa,UACnCC,EAAentB,KAAKotB,sBAAsB1B,EAAcuB,GAC1DA,IAAgBE,GAAc9S,EAAQwS,aAAa,SAAUM,GAEjE,IAAME,EAAYhT,EAAQ6S,aAAa,QACjCI,EAAattB,KAAKotB,sBAAsB1B,EAAc2B,GACxDA,IAAcC,GAAYjT,EAAQwS,aAAa,OAAQS,IA/BnE,MAAAvjB,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAoCI,IADA,IAAMikB,EAAaZ,EAAMa,uBAAuB,YACzCD,EAAW3tB,OAAS,GAC3B,CAEc2tB,EAAW,GACnBE,SAGN,OAAOd,yCAMP,OAAQ3sB,KAAKsqB,YAEb,KAAKN,EAAgB,OAAOd,EAC5B,IAlHsB,MAkHD,OAAOE,EAC5B,IAlHsB,MAkHD,OAAOI,EAC5B,IAlHqB,KAkHD,OAAOkE,EAC3B,QAAS,OAAO,yCAOhB,OAAQ1tB,KAAKsqB,YAEb,KAAKN,EAAgB,OAAO/Q,KAAKC,SAAS,mBAC1C,IA/HsB,MA+HD,OAAOD,KAAKC,SAAS,mBAC1C,IA/HsB,MA+HD,OAAOD,KAAKC,SAAS,mBAC1C,IA/HqB,KA+HD,OAAOD,KAAKC,SAAS,kBACzC,QAAS,OAAAzY,EAAA4pB,EAAAJ,EAAAvpB,WAAA,WAAAV,MAAAG,KAAAH,0CAOT,OAAQA,KAAKsqB,YAEb,KAAKN,EAAgB,OAAO/Q,KAAKC,SAAS,wBAC1C,IA5IsB,MA4ID,OAAOD,KAAKC,SAAS,wBAC1C,IA5IsB,MA4ID,OAAOD,KAAKC,SAAS,wBAC1C,IA5IqB,KA4ID,OAAOD,KAAKC,SAAS,uBACzC,QAAS,OAAAzY,EAAA4pB,EAAAJ,EAAAvpB,WAAA,WAAAV,MAAAG,KAAAH,8CAMT,OAAOA,KAAKsqB,gDAIPqD,EAAkB,CAC3B,IAAI1D,EAAwBD,GAC5B,IAAIC,EA3JsB,OA4J1B,IAAIA,EA3JsB,OA4J1B,IAAIA,EA3JqB,OA8JtB,SAAS2D,EAAuBC,GAEnC,QAAA3gB,EAAA,EAAAA,EAAuBygB,EAAvB/tB,OAAAsN,IACA,CADK,IAAM4gB,EAAYH,EAAJzgB,GAEf2gB,EAAcE,iBAAiBD,EAAU,SAAWA,EAASE,85BC5JtDC,cAdX,SAAAA,EAAY1rB,GAAO,mGAAAxC,CAAAC,KAAAiuB,GAAAhuB,EAAAD,KAAAE,EAAA+tB,GAAA9tB,KAAAH,KAAQuC,0PAFI2B,IAAMmR,sDAOjC,OACIC,EAAA7S,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAAI+V,UAAWvV,KAAKuC,MAAMgT,UAAW7R,MAAO1D,KAAKuC,MAAMmB,MACvE8R,MAAM,6BACN9M,MAAM,KAAKC,OAAO,KAAK8M,QAAQ,aAC/BH,EAAA7S,EAAAC,cAAA,QAAMwC,EAAE,gmDCPxB,IA2IegpB,cAvIX,SAAAA,EAAY3rB,GACZ,IAAA9C,MAAA,mGAAA0uB,CAAAnuB,KAAAkuB,KACIluB,MAAAP,MAAA2uB,EAAAF,GAAA/tB,KAAAH,KAAMuC,mDAED2f,KAAOhe,IAAMie,YAClB1iB,EAAK4uB,eAAiBnqB,IAAMie,YAE5B1iB,EAAK6uB,MAAQ,CACTC,QAAQ,EACRC,aAAa,GAGjB/uB,EAAKgvB,kBAAoB,KAEzBhvB,EAAKivB,aAAejvB,EAAKivB,aAAaxY,KAAlByY,IAAAlvB,KACpBA,EAAKmvB,aAAenvB,EAAKmvB,aAAa1Y,KAAlByY,IAAAlvB,KACpBA,EAAKsX,QAAUtX,EAAKsX,QAAQb,KAAbyY,IAAAlvB,KAGfA,EAAKovB,0BAA4BpvB,EAAKovB,0BAA0B3Y,KAA/ByY,IAAAlvB,KAlBrCA,wPAHyByE,IAAMC,sDAwBlBG,GACb,IAAAgP,EAAAtT,KACQA,KAAKsuB,MAAME,aAEfxuB,KAAK8uB,SAAS,CAAEP,QAAQ,GAAQ,WAE5B,IAAMQ,EAAWzb,EAAK/Q,MAAMwsB,SACxBA,GAAUA,GAAS,0CAIlBzqB,GACb,IAAA8P,EAAApU,KACQA,KAAKsuB,MAAME,aAEfxuB,KAAK8uB,SAAS,CAAEP,QAAQ,GAAS,WAE7B,IAAMQ,EAAW3a,EAAK7R,MAAMwsB,SACxBA,GAAUA,GAAS,qCAIvBzqB,GACR,IAAA0qB,EAAAhvB,KACIsE,EAAEkb,kBACFlb,EAAEmb,iBAEEzf,KAAKyuB,mBAGLtN,aAAanhB,KAAKyuB,mBAClBzuB,KAAKyuB,kBAAoB,KAEzBzuB,KAAK8uB,SAAS,CAAEP,QAAQ,EAAOC,aAAa,GAAS,WAEjD,IAAMS,EAAUD,EAAKzsB,MAAM0sB,QACvBA,GAASA,IACb,IAAMF,EAAWC,EAAKzsB,MAAMwsB,SACxBA,GAAUA,GAAS,MAM3B/uB,KAAK8uB,SAAS,SAACpO,EAAMne,GAEjB,IAAMjB,GAAUof,EAAK8N,YAYrB,OAVAQ,EAAKP,kBAAoB5N,WAAW,WAEhCmO,EAAKP,kBAAoB,MA5ErB,KA+EJntB,GAEAoe,SAASwP,gBAAgBhQ,iBAAiB,YAAa8P,EAAKH,2BAGzD,CACHN,OAAQjtB,EACRktB,YAAaltB,IAElB,WAEC,IAAMytB,EAAWC,EAAKzsB,MAAMwsB,SACxBA,GAAUA,EAASC,EAAKV,MAAMC,4DAKpBjqB,GAC1B,IAAA6qB,EAAAnvB,KACQA,KAAKsuB,MAAME,aAAexuB,KAAKquB,eAAe5L,UAAYne,EAAEC,SAE5DD,EAAEkb,kBACFlb,EAAEmb,iBAEFC,SAASwP,gBAAgB9P,oBAAoB,YAAapf,KAAK6uB,2BAE/D7uB,KAAK8uB,SAAS,CAAEP,QAAQ,EAAOC,aAAa,GAAS,WAEjD,IAAMO,EAAWI,EAAK5sB,MAAMwsB,SACxBA,GAAUA,GAAS,uCAQ/B,IAAMrJ,EAAU1lB,KAAKuC,MAAMmjB,QACrB6I,EAASvuB,KAAKsuB,MAAMC,OACpBa,GAAQb,IAAW7I,EAEzB,OACIpQ,EAAA7S,EAAAC,cAACkU,EAAA,EAAD,CAAYsM,IAAKljB,KAAKkiB,KAClBmN,UAAWrvB,KAAKquB,eAChB7uB,GAAIQ,KAAKuC,MAAM/C,GACf+V,UAAWmB,IAAM4Y,iBACZf,EAAS,WAAa,KACtBa,EAAO,SAAW,IACnB,IAAMpvB,KAAKuC,MAAMgT,UACrB7R,MAAO1D,KAAKuC,MAAMmB,MAClBoT,MAAO,SACP4X,aAAc1uB,KAAK0uB,aACnBE,aAAc5uB,KAAK4uB,aACnB7X,QAAS/W,KAAK+W,SACdzB,EAAA7S,EAAAC,cAAC6sB,EAAD,i3BCzHDC,cAdX,SAAAA,EAAYjtB,GAAO,mGAAAktB,CAAAzvB,KAAAwvB,GAAAE,EAAA1vB,KAAA2vB,EAAAH,GAAArvB,KAAAH,KAAQuC,0PAFR2B,IAAMmR,sDAOrB,OACIC,EAAA7S,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAAI+V,UAAWvV,KAAKuC,MAAMgT,UAAW7R,MAAO1D,KAAKuC,MAAMmB,MACvE8R,MAAM,6BACN9M,MAAM,KAAKC,OAAO,KAAK8M,QAAQ,aAC/BH,EAAA7S,EAAAC,cAAA,QAAMwC,EAAE,k9BCNjB,IA2CQ0qB,cAtCX,SAAAA,EAAYrtB,GAAO,mGAAAstB,CAAA7vB,KAAA4vB,GAAAE,EAAA9vB,KAAA+vB,EAAAH,GAAAzvB,KAAAH,KAAQuC,0PAFF2B,IAAMC,kDAO3B,IAAMuhB,EAAU1lB,KAAKuC,MAAMmjB,QACrBsK,EAAOhwB,KAAKuC,MAAMytB,KAClBjB,EAAW/uB,KAAKuC,MAAMwsB,SACtBK,GAAQ1J,EAEd,OACIpQ,EAAA7S,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAChB+V,UAAWmB,IAAMuZ,gBACZb,EAAO,SAAW,IACnB,IAAMpvB,KAAKuC,MAAMgT,UACrB7R,MAAO1D,KAAKuC,MAAMmB,OAClB4R,EAAA7S,EAAAC,cAACkU,EAAA,EAAD,CAAYrB,UAAWmB,IAAMwZ,aArBlB,IAsBNF,EAAuB,WAAa,IACzCjZ,QAAS,WAEDgY,GAAUA,EAzBP,IA2BXjY,MAAOmC,KAAKC,SAAS,sBACjB5D,EAAA7S,EAAAC,cAACytB,EAAA,EAAD,OAEJ7a,EAAA7S,EAAAC,cAACkU,EAAA,EAAD,CAAYrB,UAAWmB,IAAMwZ,aA7BpB,IA8BJF,EAAqB,WAAa,IACvCjZ,QAAS,WAEDgY,GAAUA,EAjCT,IAmCTjY,MAAOmC,KAAKC,SAAS,oBACjB5D,EAAA7S,EAAAC,cAAC0tB,EAAD,oxBCtCdC,cAEF,SAAAA,EAAY9tB,GACZ,IAAA9C,MAAA,mGAAA6wB,CAAAtwB,KAAAqwB,KACIrwB,MAAAP,MAAA8wB,EAAAF,GAAAlwB,KAAAH,KAAMuC,mDAEDiuB,cAAgB/wB,EAAK+wB,cAActa,KAAnBua,IAAAhxB,KACrBA,EAAKixB,aAAejxB,EAAKixB,aAAaxa,KAAlBua,IAAAhxB,KACpBA,EAAKkxB,aAAelxB,EAAKkxB,aAAaza,KAAlBua,IAAAhxB,KALxBA,wPAH4ByE,IAAMC,uDAWpBkP,GAEVrT,KAAKuC,MAAM4N,gBAAgBygB,aAAavd,GACpCA,EAEArT,KAAKuC,MAAMkoB,QAAQqC,SAAS+D,qBAAqBC,iBAAiB,+BAIlE9wB,KAAKuC,MAAMkoB,QAAQqC,SAAS+D,qBAAqBC,iBAAiB,6CAMtE9wB,KAAKuC,MAAM6N,gBAAgB2gB,kDAGlBjnB,GAET9J,KAAKuC,MAAM4N,gBAAgB6gB,iBD7BV,IC6B2BlnB,oCAM5C,IAAMqG,EAAkBnQ,KAAKuC,MAAM4N,gBAC7BC,EAAkBpQ,KAAKuC,MAAM6N,gBAC7BuS,EAAW3iB,KAAKuC,MAAMogB,SACtBrQ,EAAQlC,EAAgBS,WAE1BogB,EAAW,KAaf,OAZI9gB,IAII8gB,EAFA9gB,EAAgB+gB,kBAEL/gB,EAAgBa,WAAW2R,EAAS1R,mBD7CtC,EADE,ECkDAd,EAAgBghB,kBDjDlB,EADE,GCuDf7b,EAAA7S,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAChB+V,UAAWmB,IAAM0a,eAC5B,IAAMpxB,KAAKuC,MAAMgT,UACN7R,MAAO1D,KAAKuC,MAAMmB,OAClB4R,EAAA7S,EAAAC,cAAC2uB,EAAD,CAAgB9b,UAAWmB,IAAM4a,YAC7B5tB,MAAO,CAAE6tB,OAAQ,EAAGC,MAAO,GAC3B9L,SAAUpT,EAAMmf,WAAa9O,KACzCA,EAAS1R,kBAAkBygB,iBAAmB/O,EAAS1R,kBAAkB0gB,cAC7D5C,SAAU/uB,KAAKwwB,cACfvB,QAASjvB,KAAK0wB,eAClBpb,EAAA7S,EAAAC,cAACkvB,EAAD,CAAgBrc,UAAWmB,IAAM4a,YAC7B5tB,MAAO,CAAE6tB,OAAQ,EAAGM,KAAM,GAC1BnM,QAASvV,EACT6f,KAAMiB,EACNlC,SAAU/uB,KAAK2wB,eAClB3wB,KAAKuC,MAAMmW,+CAMb2X,kNCnFTyB,2LAEUvtB,EAAQwtB,GAA6BpyB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAE,OAAOoyB,0CAC1CxtB,GAAU,MAAO,2CAEjBytB,GAChBryB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACI,OAAOqyB,0CAGKC,GAChBtyB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACI,OAAOsyB,gDAGa,MAAO,iDACP,MAAO,wCAItBC,EAA0B,IAAIJ,wKCpB3C,IAAMK,EAAwB,GA4DfC,aAxDX,SAAAA,IACA,IADYC,EACZ1yB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD2BwyB,+FAC3BG,CAAAtyB,KAAAoyB,GACIpyB,KAAKuyB,iBAAmB,EAExBvyB,KAAKwyB,cAAgBH,EACrBryB,KAAKyyB,cAAgBC,IAErB1yB,KAAK2yB,WAAa,8DAGVC,GAER,GAAwB,mBAAbA,EACP,MAAM,IAAIzxB,MAAM,kCACpBnB,KAAK2yB,WAAW5lB,KAAK6lB,0CAGVA,GAEX,IAAMjtB,EAAI3F,KAAK2yB,WAAWvX,QAAQwX,GAClC,OAAIjtB,GAAK,IAEL3F,KAAK2yB,WAAWxX,OAAOxV,EAAG,IACnB,4CAKI3F,KAAK2yB,WAAW/yB,OAAS,yCAC3B,OAAOI,KAAK2yB,2CAIzB3yB,KAAKyyB,cAAgB,EACrBzyB,KAAKuyB,iBAAmB,iCAGrBjgB,GAEH,KAAMtS,KAAKyyB,eAAiBzyB,KAAKwyB,cACjC,CACIxyB,KAAKyyB,cAAgB,EAErB,IAAMI,EAAYvgB,EAAMwgB,aAAY,GACpC,GAAID,IAAc7yB,KAAKuyB,iBACvB,CACIvyB,KAAKuyB,iBAAmBM,EAD5B,IAAAzpB,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IAEI,QAAA0J,EAAAC,EAAuBxJ,KAAK2yB,WAA5BjpB,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,EACIwpB,EADJrpB,EAAAO,OACawI,IAJjB,MAAAvI,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,mOC1CL,IAEDypB,aAEF,SAAAA,EAAYzgB,gGACZ0gB,CAAAhzB,KAAA+yB,GACI/yB,KAAKizB,OAAS3gB,EACdtS,KAAKkzB,oBAAsB,IAAId,EAE/BpyB,KAAKmzB,aAAe,KACpBnzB,KAAKozB,gBAAkB,KAEvBpzB,KAAK2yB,WAAa,iEAGPU,GAGX,OADArzB,KAAKmzB,aAAeE,EACbrzB,+CAGOsR,GAGd,OADAtR,KAAKozB,gBAAkB9hB,EAChBtR,yCAGC4yB,GAGR,OADA5yB,KAAK2yB,WAAW5lB,KAAK6lB,GACd5yB,4CAGI4yB,GAEX,IAAM7sB,EAAQ/F,KAAK2yB,WAAWvX,QAAQwX,GAClC7sB,GAAS,GAAG/F,KAAK2yB,WAAWxX,OAAOpV,EAAO,4CAG/B/F,KAAK2yB,WAAW/yB,OAAS,yEAQpCI,KAAKkzB,qBAELlzB,KAAKkzB,oBAAoB7T,OAAOrf,KAAKizB,gFAWrCla,OAAOC,QAAQC,KAAKC,SAAS,wBAE7BlZ,KAAKizB,OAAO7lB,QACZpN,KAAK+Q,eA/DgB,qDAmEhBsK,EAAWiY,2CAKTjY,GACf,IAD0BiY,EAC1B3zB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADsC,GAElCK,KAAKuzB,aAAalY,EAAWiY,GADjC,IAAAlqB,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IAGI,QAAA0J,EAAAC,EAAsBxJ,KAAK2yB,WAA3BjpB,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,CAAAG,EAAAO,MACaypB,aAAavzB,KAAMqb,EAAWiY,IAL/C,MAAAvpB,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,4CASgB/E,GAChB,IADwBivB,EACxB7zB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADuC,KAAMmZ,EAC7CnZ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADwD,KAEpD,GAAKK,KAAKmzB,aAAV,CAMA,IAAME,EAAcrzB,KAAKmzB,aACnBM,EAAYD,GAAgB,GAClCH,EAAYK,WAAWnvB,EAAQivB,EAAc,SAACjvB,EAAQuF,GAElD,IAAMqH,GAAcsiB,GAAcA,EAAU7zB,OAAS,GAAKkK,IAAU2pB,EAChElvB,aAAkB1D,IAElB0D,EAAOgQ,aAAazK,GAEfvF,aAAkBhF,KAEvBgF,EAAOkN,aAAa3H,GAGpBgP,GAAUA,EAASvU,EAAQuF,EAAOqH,IACvC,SAAC5M,GAEIuU,GAAUA,EAASvU,EAAQ,MAAM,UArBjCuU,GAAUA,EAASvU,EAAQivB,GAAc,+CAyB/B,OAAOxzB,KAAKozB,iBAAmBlB,2CAClC,OAAOlyB,KAAKmzB,6DAEL,OAAOnzB,KAAKkzB,uDACzB,OAAOlzB,KAAKizB,4CAGdF,g3BCvEAY,cAhDX,SAAAA,EAAYpxB,GACZ,mGAAAxC,CAAAC,KAAA2zB,GAAA1zB,EAAAD,KAAAE,EAAAyzB,GAAAxzB,KAAAH,KACUuC,0PAJkB2B,IAAMC,kDAU9B,IAAMyG,EAAO5K,KAAKuC,MAAMqI,KAClBzH,EAASnD,KAAKuC,MAAMY,OACpBE,EAAcrD,KAAKuC,MAAMc,YACzBC,EAAatD,KAAKuC,MAAMe,WACxBE,EAAgBxD,KAAKuC,MAAMiB,cAE3BowB,EAAQhpB,EAAKC,gBACbgpB,EAAMjpB,EAAKE,cACXhE,EAAS8D,EAAKG,iBACdxK,EAAQqK,EAAKwD,eACb0lB,EAAUlpB,EAAKmpB,mBAErB,OACIze,EAAA7S,EAAAC,cAAC4S,EAAA7S,EAAME,SAAP,KACI2S,EAAA7S,EAAAC,cAACsD,EAAA,EAAD,CACIG,SAAUtB,IACV/D,KAAM8yB,EACN7yB,GAAI8yB,EACJ/sB,OAAQA,EACRvG,MAAOA,EACPgF,UAAWuuB,EACX5wB,MAAOC,EACPE,YAAaA,EAAc,SAAAiB,IAETA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDqf,OAAShZ,EACfvH,EAAYiB,IACZ,KACJhB,WAAYA,EAAa,SAAAgB,IAEPA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDqf,OAAShZ,EACftH,EAAWgB,IACX,KACJd,cAAeA,81BC3C7BwwB,cAEF,SAAAA,EAAYzxB,GACZ,IAAA9C,+FAAAw0B,CAAAj0B,KAAAg0B,GACIv0B,EAAAy0B,EAAAl0B,KAAAm0B,EAAAH,GAAA7zB,KAAAH,KAAMuC,IAEN,IAAM4N,EAAkB5N,EAAM4N,gBACxBC,EAAkB7N,EAAM6N,gBAJlC,OAMI3Q,EAAK20B,uBAAyB,IAAIthB,IAAsB3C,EAAiBC,GAN7E3Q,wPAHyByE,IAAMC,6DAe3B,IAAM+gB,EAAellB,KAAKuC,MAAM2iB,aAChC,GAAIA,EACJ,CACI,IAAM0D,EAAgB5oB,KAAKuC,MAAMqmB,gBAAkB,EACnD1D,EAAa3C,gBAAgBviB,KAAKo0B,uBAAwBxL,mDAO9D,IAAM1D,EAAellB,KAAKuC,MAAM2iB,aAC5BA,GAEAA,EAAa2D,mBAAmB7oB,KAAKo0B,2EAIhB,OAAOp0B,KAAKo0B,wDAKrC,IAAMjkB,EAAkBnQ,KAAKuC,MAAM4N,gBAC7BkkB,EAAWr0B,KAAKuC,MAAM+xB,cAAgBX,EACtCY,EAAWv0B,KAAKuC,MAAMgyB,SAEtBlxB,EAAc8M,EAAkBA,EAAgB9M,YAAc,KAC9DC,EAAa6M,EAAkBA,EAAgB7M,WAAa,KAE5DwjB,EAAQ,GARlB1d,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IASI,QAAA0J,EAAAC,EAAkBxJ,KAAKuC,MAAMukB,MAA7Bpd,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADUwB,EACVrB,EAAAO,MACIgd,EAAM/Z,KACFuI,EAAA7S,EAAAC,cAAC2xB,EAAD,CACIzuB,IAAKgF,EAAKsB,oBACVtB,KAAMA,EACNzH,OAAQ,0BACRE,YAAaA,EACbC,WAAYA,EACZE,cAAe+wB,GAAYpkB,GAAmBA,EAAgBqkB,iBAAiB5pB,GAAQ,MAAQ,WAlB/G,MAAAb,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAsBI,OACIgM,EAAA7S,EAAAC,cAAA,SACKokB,wCAMFkN,g3BCtBAS,cA5CX,SAAAA,EAAYlyB,GACZ,mGAAAxC,CAAAC,KAAAy0B,GAAAx0B,EAAAD,KAAAE,EAAAu0B,GAAAt0B,KAAAH,KACUuC,0PAJkB2B,IAAMC,kDAU9B,IAAMjD,EAAOlB,KAAKuC,MAAMrB,KAClB+B,EAAOjD,KAAKuC,MAAMU,KAClBE,EAASnD,KAAKuC,MAAMY,OACpBE,EAAcrD,KAAKuC,MAAMc,YACzBC,EAAatD,KAAKuC,MAAMe,WACxBE,EAAgBxD,KAAKuC,MAAMiB,cAE3BjD,EAAQW,EAAK0M,eACb5K,EAAS9B,EAAKY,cAEpB,OACIwT,EAAA7S,EAAAC,cAAC4S,EAAA7S,EAAME,SAAP,KACI2S,EAAA7S,EAAAC,cAACuB,EAAA,EAAD,CACIpB,SAAU3B,EACV8B,OAAQA,EACRzC,MAAOA,EACP2C,MAAOD,EACPG,QAASD,EACTE,YAAaA,EAAc,SAAAiB,IAETA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDqf,OAAS1iB,EACfmC,EAAYiB,IACZ,KACJhB,WAAYA,EAAa,SAAAgB,IAEPA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDqf,OAAS1iB,EACfoC,EAAWgB,IACX,KACJd,cAAeA,81BCvC7BkxB,cAEF,SAAAA,EAAYnyB,GACZ,IAAA9C,+FAAAk1B,CAAA30B,KAAA00B,GACIj1B,EAAAm1B,EAAA50B,KAAA60B,EAAAH,GAAAv0B,KAAAH,KAAMuC,IAEN,IAAM4N,EAAkB5N,EAAM4N,gBACxBC,EAAkB7N,EAAM6N,gBAJlC,OAMI3Q,EAAKq1B,uBAAyB,IAAI5kB,IAAsBC,EAAiBC,GAN7E3Q,wPAHyByE,IAAMC,6DAe3B,IAAM+gB,EAAellB,KAAKuC,MAAM2iB,aAChC,GAAIA,EACJ,CACI,IAAM0D,EAAgB5oB,KAAKuC,MAAMqmB,gBAAkB,EACnD1D,EAAa3C,gBAAgBviB,KAAK80B,uBAAwBlM,mDAO9D,IAAM1D,EAAellB,KAAKuC,MAAM2iB,aAC5BA,GAEAA,EAAa2D,mBAAmB7oB,KAAK80B,2EAIhB,OAAO90B,KAAK80B,wDAKrC,IAAM3kB,EAAkBnQ,KAAKuC,MAAM4N,gBAC7BkkB,EAAWr0B,KAAKuC,MAAMwyB,cAAgBN,EACtCF,EAAWv0B,KAAKuC,MAAMgyB,SAEtBlxB,EAAc8M,EAAkBA,EAAgB9M,YAAc,KAC9DC,EAAa6M,EAAkBA,EAAgB7M,WAAa,KAE5DsjB,EAAQ,GARlBxd,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IASI,QAAA0J,EAAAC,EAAmBxJ,KAAKuC,MAAMqkB,MAA9Bld,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,KADWlI,EACXqI,EAAAO,MACI8c,EAAM7Z,KACFuI,EAAA7S,EAAAC,cAAC2xB,EAAD,CACIzuB,IAAK1E,EAAKgL,oBACVhL,KAAMA,EACN+B,KAAM,0BACNE,OAAQ,0BACRE,YAAaA,EACbC,WAAYA,EACZE,cAAe+wB,GAAYpkB,GAAmBA,EAAgBqkB,iBAAiBtzB,GAAQ,MAAQ,WAnB/G,MAAA6I,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAuBI,OACIgM,EAAA7S,EAAAC,cAAA,SACKkkB,wCAMF8N,g3BCZAM,cAvDX,SAAAA,EAAYzyB,GACZ,IAAA9C,EAAA,mGAAAM,CAAAC,KAAAg1B,IACIv1B,EAAAQ,EAAAD,KAAAE,EAAA80B,GAAA70B,KAAAH,KAAMuC,KAED0yB,UAAY,EAHrBx1B,wPAHkCyE,IAAMC,kDAYpC,IAMIwQ,EAAQtM,EANNnH,EAAOlB,KAAKuC,MAAMrB,KAClBgC,EAAQlD,KAAKuC,MAAMW,MACnBG,EAAcrD,KAAKuC,MAAMc,YACzBC,EAAatD,KAAKuC,MAAMe,WACxBE,EAAgBxD,KAAKuC,MAAMiB,cAgBjC,MAbI,gBAAiBtC,GAEjByT,EAASzT,EAAKY,cACduG,EAAOnH,EAAKY,cAAgB,EAE5B9B,KAAKi1B,UAAY5sB,IAIjBsM,EAAS,EACTtM,EAAOrI,KAAKi1B,WAIZ3f,EAAA7S,EAAAC,cAAC4S,EAAA7S,EAAME,SAAP,KACI2S,EAAA7S,EAAAC,cAACgS,EAAA,EAAD,CACI7R,SAAU3B,EACVyT,OAAQA,EACRtM,KAAMA,EACNnF,MAAOA,EACPG,YAAaA,EAAc,SAAAiB,IAETA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDqf,OAAS1iB,EACfmC,EAAYiB,IACZ,KACJhB,WAAYA,EAAa,SAAAgB,IAEPA,EAAEC,OAAF,QAAsBD,EAAEC,OAAF,MAAoB,KAClDqf,OAAS1iB,EACfoC,EAAWgB,IACX,KACJd,cAAeA,81BClD7B0xB,cAEF,SAAAA,EAAY3yB,GACZ,IAAA9C,+FAAA01B,CAAAn1B,KAAAk1B,GACIz1B,EAAA21B,EAAAp1B,KAAAq1B,EAAAH,GAAA/0B,KAAAH,KAAMuC,IAEN,IAAM4N,EAAkB5N,EAAM4N,gBACxBC,EAAkB7N,EAAM6N,gBAJlC,OAMI3Q,EAAK61B,yBAA2B,IAAIC,IAAoCplB,EAAiBC,GAN7F3Q,wPAHuCyE,IAAMC,6DAezC,IAAM+gB,EAAellB,KAAKuC,MAAM2iB,aAChC,GAAIA,EACJ,CACI,IAAM0D,EAAgB5oB,KAAKuC,MAAMqmB,gBAAkB,EACnD1D,EAAa3C,gBAAgBviB,KAAKs1B,yBAA0B1M,mDAOhE,IAAM1D,EAAellB,KAAKuC,MAAM2iB,aAC5BA,GAEAA,EAAa2D,mBAAmB7oB,KAAKs1B,2DAOzC,IAAMnlB,EAAkBnQ,KAAKuC,MAAM4N,gBAC7BkkB,EAAWr0B,KAAKuC,MAAMizB,qBAAuBR,EAC7CT,EAAWv0B,KAAKuC,MAAMgyB,SAGtBjiB,EADkBtS,KAAKuC,MAAM6N,gBACLS,WAC1BtM,EAASvE,KAAKs1B,yBAAyBG,iBAEvC,iBAAkBnjB,IAAU/N,IAE5BA,EAAS+N,EAAMojB,gBAGnB,IAAMryB,EAAc8M,EAAkBA,EAAgB9M,YAAc,KAC9DC,EAAa6M,EAAkBA,EAAgB7M,WAAa,KAElE,OACIgS,EAAA7S,EAAAC,cAAA,SACK6B,GACG+Q,EAAA7S,EAAAC,cAAC2xB,EAAD,CACInzB,KAAMqD,EACNrB,MAAO,0BACPG,YAAaA,EACbC,WAAYA,EACZE,cAAe+wB,GAAYpkB,GAAmBA,EAAgBqkB,iBAAiBjwB,GAAU,MAAQ,+CAM1G2wB,40BCrER,IAuOQS,cAjOX,SAAAA,EAAYpzB,GACZ,IAAA9C,MAAA,mGAAAM,CAAAC,KAAA21B,KACI31B,MAAAP,MAAAS,EAAAy1B,GAAAx1B,KAAAH,KAAMuC,mDAEDqzB,aAAe,KAEpBn2B,EAAKo2B,YAAc,GACnBp2B,EAAKq2B,UAAY,OACjBr2B,EAAKs2B,WAAY,EACjBt2B,EAAKu2B,UAAY,KAEjBv2B,EAAKw2B,eAAiB,KACtBx2B,EAAKy2B,QAAU3zB,EAAM4zB,aACrB12B,EAAK22B,WAAY,EACjB32B,EAAK42B,aAAc,EAEnB52B,EAAK6uB,MAAQ,CACTlsB,UAAW,GACX0H,MAAO,IAGXrK,EAAKsvB,SAAWtvB,EAAKsvB,SAAS7Y,KAAdiI,IAAA1e,KAChBA,EAAK62B,QAAU72B,EAAK62B,QAAQpgB,KAAbiI,IAAA1e,KACfA,EAAK82B,OAAS92B,EAAK82B,OAAOrgB,KAAZiI,IAAA1e,KACdA,EAAK+2B,UAAY/2B,EAAK+2B,UAAUtgB,KAAfiI,IAAA1e,KAvBrBA,wPAHuByE,IAAMC,sDA6BhB6xB,GAGT,OADAh2B,KAAKg2B,UAAYA,EACVh2B,4CAGI61B,GAGX,OADA71B,KAAK61B,YAAcA,EACZ71B,qCAGHsE,GAEAtE,KAAKq2B,cAELr2B,KAAK41B,aAAaa,SAClBz2B,KAAKq2B,aAAc,kCAIpB/xB,GACP,IAAAgP,EAAAtT,KACSA,KAAKi2B,iBAENj2B,KAAKi2B,eAAiBpV,WAAW,WAG7B,GADAvN,EAAK2iB,eAAiB,MAClB3iB,EAAK8iB,UAAT,CAEA,IAAMM,EAASpjB,EAAK4iB,QAEpB,GADA5iB,EAAK4iB,QAAU5iB,EAAK/Q,MAAM4zB,aACtBzW,SAASC,gBAAkBrM,EAAKsiB,cAAgBc,EACpD,CACI,IAAM5sB,EAAQwJ,EAAKgb,MAAMxkB,MACrBwJ,EAAK/Q,MAAMo0B,UAAUrjB,EAAK/Q,MAAMo0B,SAAS7sB,GAE7CwJ,EAAKwb,SAAS,CAAC1sB,UAAW0H,SAI1BwJ,EAAKwb,SAAS,SAACpO,EAAMne,GAEjB,MAAO,CAACuH,MAAO4W,EAAKte,aAIxBkR,EAAK/Q,MAAMg0B,QAAQjjB,EAAK/Q,MAAMg0B,OAAOjyB,KAhF7B,uCAqFdA,GACV,IAAA8P,EAAApU,KACI,GAtFkB,UAsFdsE,EAAEsB,IACN,CACI,GAAItB,EAAEsyB,UAAY52B,KAAK+1B,UAAW,OAElC/1B,KAAKk2B,SAAU,EACfl2B,KAAK41B,aAAahW,OAElBtb,EAAEmb,iBACFnb,EAAEkb,sBA7FY,WA+FTlb,EAAEsB,MAEP5F,KAAK8uB,SAAS,SAACpO,EAAMne,GAEjB,MAAO,CAACuH,MAAO4W,EAAKte,YACrB,WAECgS,EAAK8hB,SAAU,EACf9hB,EAAKwhB,aAAahW,SAGtBtb,EAAEmb,iBACFnb,EAAEkb,oDAIDlb,GAEL,IAAMC,EAASD,EAAEC,OACXsyB,EAAgBtyB,EAAOuyB,eACzBhtB,EAAQvF,EAAOuF,MACf9J,KAAKg2B,YAELlsB,EAAQ9J,KAAKg2B,UAAUlsB,EAAO9J,KAAKsuB,MAAMxkB,QAG7C9J,KAAK8uB,SAAS,CAAChlB,MAAOA,GAAQ,WAE1BvF,EAAOwyB,aAAeF,oCAK9B,IADMJ,IACN92B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACIK,KAAKq2B,YAAcI,EACnBz2B,KAAK41B,aAAa/V,2CAGXmX,GAEP,IAAMtW,EAAO1gB,KAAKo2B,UAElB,OADAp2B,KAAKo2B,UAAYY,EACVtW,IAASsW,sCAGR5rB,GACZ,IAIQ9J,EALY21B,EACpBt3B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD8B,GAAIu3B,IAClCv3B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACUmK,EAAQ9J,KAAKsuB,MAAMxkB,MACrBA,GAASA,EAAMlK,OAASwL,EAAOxL,OAASI,KAAK81B,YAK7Cx0B,EAFAwI,GAASA,EAAMlK,OAAS,EAEfkK,EAAQmtB,EAAY7rB,EAIpBA,EAGT8rB,GAAUl3B,KAAKg2B,YAEf10B,EAAStB,KAAKg2B,UAAU10B,EAAQtB,KAAKsuB,MAAMxkB,QAG/C9J,KAAK8uB,SAAS,SAACpO,EAAMne,GAEjB,MAAO,CAACuH,MAAOxI,yCAIZ8J,GAEPpL,KAAK8uB,SAAS,CAAC1sB,UAAWgJ,EAAQtB,MAAOsB,qCAGpCA,GACT,IACQtB,EAAQsB,KADhBzL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,KAEkBK,KAAKg2B,YAEflsB,EAAQ9J,KAAKg2B,UAAUlsB,EAAO9J,KAAKsuB,MAAMxkB,QAE7C9J,KAAK8uB,SAAS,CAAChlB,MAAOA,uCAKtB,OAAO9J,KAAKsuB,MAAMxkB,uCAKtB,IAAAklB,EAAAhvB,KACU61B,EAAc71B,KAAK61B,YACnBsB,EAAYn3B,KAAK81B,UACjBsB,EAAYp3B,KAAK+1B,UACjBle,EAAW7X,KAAKuC,MAAMsV,SAEtB/N,EAAQ9J,KAAKsuB,MAAMxkB,MAEzB,OACIwL,EAAA7S,EAAAC,cAAA,OAAKlD,GAAIQ,KAAKuC,MAAM/C,GAChB+V,UAAWvV,KAAKuC,MAAMgT,UACtB7R,MAAO1D,KAAKuC,MAAMmB,OAEd0zB,EACI9hB,EAAA7S,EAAAC,cAAA,YAAUwgB,IAAK,SAAAA,GAAG,OAAE8L,EAAK4G,aAAa1S,GAClC1e,KAAK,OAAO6yB,KAAK,IAAIC,WAAW,QAChCzf,SAAUA,EACVge,YAAaA,EACbC,UAAWqB,EACXrtB,MAAOA,GAAS,GAChBilB,SAAU/uB,KAAK+uB,SACfuH,QAASt2B,KAAKs2B,QACdC,OAAQv2B,KAAKu2B,OACbC,UAAWx2B,KAAKw2B,YAEpBlhB,EAAA7S,EAAAC,cAAA,SAAOwgB,IAAK,SAAAA,GAAG,OAAE8L,EAAK4G,aAAa1S,GAC/B1e,KAAK,OAAO8yB,WAAW,QACvBzf,SAAUA,EACVge,YAAaA,EACbC,UAAWqB,EACXrtB,MAAOA,GAAS,GAChBilB,SAAU/uB,KAAK+uB,SACfuH,QAASt2B,KAAKs2B,QACdC,OAAQv2B,KAAKu2B,OACbC,UAAWx2B,KAAKw2B,yxBCzNtCe,cAEF,SAAAA,EAAYh1B,GACZ,IAAA9C,MAAA,mGAAA+3B,CAAAx3B,KAAAu3B,KACIv3B,MAAAP,MAAAg4B,EAAAF,GAAAp3B,KAAAH,KAAMuC,mDAED2f,KAAOhe,IAAMie,YAClB1iB,EAAKi4B,eAAiB,KAEtBj4B,EAAK6uB,MAAQ,CACTqJ,MAAM,GAGVl4B,EAAKkkB,QAAU,KACflkB,EAAKm4B,gBAAkB,KAEvBn4B,EAAKo4B,cAAgBp4B,EAAKo4B,cAAc3hB,KAAnB4hB,IAAAr4B,KACrBA,EAAKs4B,YAAct4B,EAAKs4B,YAAY7hB,KAAjB4hB,IAAAr4B,KAdvBA,wPAH4ByE,IAAMC,oDAoBvB6zB,GACX,IAAA1kB,EAAAtT,KADyBi4B,EACzBt4B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADwC,KAAMg3B,EAC9Ch3B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADyD,KAAMu4B,EAC/Dv4B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD0E,KAEtE,KAAMq4B,aAAwB33B,KAC1B,MAAM,IAAIc,MAAM,0CAMpB,GAJAnB,KAAK2jB,QAAUqU,EACfh4B,KAAKm4B,gBAAkBxB,EACvB32B,KAAKo4B,gBAAkBF,EAEnBF,aAAwBz4B,IAC5B,CACI,IAAMy2B,EAAYh2B,KAAKuC,MAAM+O,eAAe+mB,wBAC5Cr4B,KAAK03B,eAAeY,aAAatC,QAEhC,GAAIgC,aAAwBn3B,IACjC,CACI,IAAMm1B,EAAYh2B,KAAKuC,MAAM+O,eAAeinB,wBAC5Cv4B,KAAK03B,eAAeY,aAAatC,GAGrCh2B,KAAK8uB,SAAS,CAAE6I,MAAM,GAAQ,WAE1BrkB,EAAKokB,eAAec,WAAWP,GAAgB,IAC/C3kB,EAAKokB,eAAe7X,gDAMxB7f,KAAK2jB,QAAU,KACf3jB,KAAKm4B,gBAAkB,KACvBn4B,KAAKo4B,gBAAkB,KAEvBp4B,KAAK03B,eAAeY,aAAa,MAEjCt4B,KAAK8uB,SAAS,CAAE6I,MAAM,2CAKtB,OAAO33B,KAAKsuB,MAAMqJ,yCAKlB,OAAO33B,KAAK2jB,8CAGF7Z,GAEN9J,KAAKm4B,kBAELn4B,KAAKm4B,gBAAgBn4B,KAAK2jB,QAAS7Z,GAEnC9J,KAAKo4B,gBAAkB,0CAInB9zB,GAEJtE,KAAKo4B,kBAELp4B,KAAKo4B,gBAAgBp4B,KAAK2jB,SAE1B3jB,KAAKm4B,gBAAkB,MAE3Bn4B,KAAKy4B,+CAKT,IAAArkB,EAAApU,KACU04B,EAAe14B,KAAKsuB,MAAMqJ,KAE1BpzB,EAASvE,KAAK2jB,QACdgV,EAAc34B,KAAKuC,MAAMmB,OAAS,GAGxC,GAFiB1D,KAAKuC,MAAMogB,SAG5B,CACI,IAAMtM,EAAkBrW,KAAKuC,MAAMogB,SAASI,qBAE5C,GAAIxe,EACJ,CACI,IAAMuC,EAASvC,EAAOwG,iBAChBsP,EAAUhE,EAAgBuiB,aAC1BC,EAAmBxe,EAAQye,wBAC3BC,EAkCtB,SAA+B5N,EAAKzrB,EAAGI,GAEnC,IAAM4a,EAAMyQ,EAAIxQ,eAChB,MAAO,CACHjb,EAAIA,EAAIgb,EAAIjY,EAAKiY,EAAIpW,EACrBxE,EAAIA,EAAI4a,EAAIxV,EAAKwV,EAAIE,GAvCKoe,CACd3e,EACAvT,EAAOpH,EAAI2W,EAAgByB,aAC3BhR,EAAOhH,EAAIuW,EAAgB0B,cAEzBrY,EAAIq5B,EAAUr5B,EACdI,EAAIi5B,EAAUj5B,EACdqsB,GAAYnsB,KAAKkiB,KAAKO,QAAQwW,YAAc,EAAKJ,EAAiBhH,KAClEzF,GAAYpsB,KAAKkiB,KAAKO,QAAQyW,aAAe,EAAKL,EAAiBM,IAEzER,EAAW,IAAW74B,EAAIssB,EAAW,KACrCuM,EAAW,KAAYj5B,EAAIysB,EAAW,MAI9C,OACI7W,EAAA7S,EAAAC,cAAA,OAAKwgB,IAAKljB,KAAKkiB,KACX1iB,GAAIQ,KAAKuC,MAAM/C,GACf+V,UAAWmB,IAAM0iB,kBACZV,EAAe,SAAW,IAC3B,IAAM14B,KAAKuC,MAAMgT,UACrB7R,MAAOi1B,GACPrjB,EAAA7S,EAAAC,cAAC22B,EAAD,CAAcnW,IAAK,SAAAA,GAAG,OAAI9O,EAAKsjB,eAAiBxU,GAC5CiT,aAAcn2B,KAAKuC,MAAM+2B,WACzB3C,SAAU32B,KAAK63B,cACftB,OAAQv2B,KAAK+3B,cACjBziB,EAAA7S,EAAAC,cAAA,OAAK6S,UAAWmB,IAAMuZ,gBACjBjwB,KAAKuC,MAAMmW,gDAgBjB6e,iSC1HAgC,aA9BX,SAAAA,iGAAcx5B,CAAAC,KAAAu5B,wDAURrV,GAEF,OADJvkB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADkB,qCAcV4E,GAEJ,OADJ5E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADsB,gNC/B1B,IA+De65B,aApDX,SAAAA,IACA,IADYC,EACZ95B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADoB,EAAG+5B,EACvB/5B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD+B,EAAGg6B,EAClCh6B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD0C,+FAC1Ci6B,CAAA55B,KAAAw5B,GACIx5B,KAAKy5B,MAAQA,EACbz5B,KAAK05B,MAAQA,EACb15B,KAAK25B,MAAQA,sDAyBJvuB,GAET,GAAqB,iBAAVA,EAAoB,MAAM,IAAIjK,MAAM,qDAE/C,IAGIs4B,EAAOC,EAAOC,EAHZE,EAAazuB,EAAO1D,MAAM,KAChC,GAAyB,GAArBmyB,EAAWj6B,OAAa,MAAM,IAAIuB,MAAM,sCAG5C,IAEIs4B,EAAQ5wB,OAAOixB,SAASD,EAlDhB,IAmDRH,EAAQ7wB,OAAOixB,SAASD,EAlDhB,IAmDRF,EAAQ9wB,OAAOixB,SAASD,EAlDhB,IAoDZ,MAAOv1B,GAEH,MAAMA,EAGV,OAAO,IAAIk1B,EAAgBC,EAAOC,EAAOC,kDAjC3BI,GAEd,OAAO/5B,KAAKy5B,OAASM,EAAaN,QAC7Bz5B,KAAK05B,MAAQK,EAAaL,OACtB15B,KAAK05B,OAASK,EAAaL,OAAS15B,KAAK25B,OAASI,EAAaJ,0CAKxE,OAAO35B,KAAKy5B,MAAQ,IAChBz5B,KAAK05B,MAAQ,IACb15B,KAAK25B,21BC7BV,IACMK,EAAUR,EAAgBS,MADT,SA8OfC,cAtOX,SAAAA,IACA,IAAAz6B,EAAA,mGAAA06B,CAAAn6B,KAAAk6B,IACIz6B,EAAAQ,EAAAD,KAAAE,EAAAg6B,GAAA/5B,KAAAH,QAEKo6B,aAAe,IAAInyB,IAH5BxI,wPAH0B85B,uCAepBrV,GACN,IADY5jB,EACZX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADkB,KAEd,GAAoB,WAAhB06B,EAAOnW,GAEP,MAAM,IAAI/iB,MAAM,2CAGpB,IAAMm5B,EAAcd,EAAgBS,MAAM/V,EAAI,UAAgB,SAC9D,IAAKoW,EAAYC,kBAAkBP,GAE/B,MAAM,IAAI74B,MAAM,kDAAqDm5B,EAAc,KAGvF,IAAME,EAAYtW,EAAI,OAAa,GAC7BuW,EAAY95B,KAAKmD,IAAI02B,EAAU56B,QAAU,EAAGskB,EAAI,WAAiB,GACjEwW,EAAYxW,EAAI,OAAa,GAC7ByW,EAAYh6B,KAAKmD,IAAI42B,EAAU96B,QAAU,EAAGskB,EAAI,WAAiB,GAEvE5jB,EAAMN,KAAK46B,mBAAmB1W,EAAM5jB,GAGpC,IADA,IAAMu6B,EAAc76B,KAAKo6B,aAChBz0B,EAAI,EAAGA,EAAI80B,IAAa90B,EACjC,CACI,IAAMm1B,EAAWN,EAAU70B,GAC3B,GAAKm1B,EAAL,CAGA,IAAM55B,EAAOZ,EAAIkR,WAAWspB,EAAQ,GAAS,EAAGA,EAAQ,GAAS,EAAGA,EAAQ,IAC5E55B,EAAKuQ,aAAaqpB,EAAQ,OAAa,IAEvC96B,KAAK+6B,YAAYD,EAAU55B,GAE3B25B,EAAYzuB,IAAIzG,EAAGzE,IAGvB,IAAK,IAAIyE,EAAI,EAAGA,EAAIg1B,IAAah1B,EACjC,CACI,IAAMq1B,EAAWN,EAAU/0B,GAC3B,GAAKq1B,EAAL,CACA,IAAMC,EAAaJ,EAAYxtB,IAAI2tB,EAAQ,OAAa,KAExD,GAAKC,EAAL,CACA,IAAMC,EAAkBL,EAAYxtB,IAAI2tB,EAAQ,KAAW,KAGrDpwB,EAAOtK,EAAIkT,WAAWynB,EAAYC,EAAiBF,EAAQ,IACjEpwB,EAAK2J,aAAaymB,EAAQ,OAAa,IAEvCh7B,KAAKm7B,YAAYH,EAAUpwB,KAQ/B,OALA5K,KAAKo7B,mBAAmBlX,EAAM5jB,GAG9Bu6B,EAAYztB,QAEL9M,kCASHiE,GACR,IADgBjE,EAChBX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADsB,KAElB,KAAM4E,aAAkBoD,KAEpB,MAAM,IAAIxG,MAAM,8CAGpBb,EAAMN,KAAKq7B,qBAAqB92B,EAAQjE,GAUxC,IARA,IAOIY,EAPEo6B,EAAa/2B,EAAOoJ,YAAc,GAClC8sB,EAAYa,EAAW17B,QAAU,EACjC27B,EAAah3B,EAAOsI,YAAc,GAClC8tB,EAAYY,EAAW37B,QAAU,EAEjC46B,EAAY,IAAI3sB,MAAM4sB,GACtBI,EAAc76B,KAAKo6B,aAEhBz0B,EAAI,EAAGA,EAAI80B,IAAa90B,EAG7B,GADAzE,EAAOo6B,EAAW31B,GAElB,CAEI,IAAMlB,EAAYvD,EAAKgL,oBAEvB2uB,EAAYzuB,IAAIlL,EAAMyE,GAEtB,IAAMm1B,EAAW,CACbt7B,GAAIiF,EACJ/E,EAAGwB,EAAKxB,GAAK,EAAGI,EAAGoB,EAAKpB,GAAK,EAC7BS,MAAOW,EAAK0M,gBAAkB,IAGlC5N,KAAKw7B,cAAct6B,EAAM45B,GAEzBN,EAAU70B,GAAKm1B,EAMvB,IAFA,IACIlwB,EADE8vB,EAAY,IAAI7sB,MAAM8sB,GAEnBh1B,EAAI,EAAGA,EAAIg1B,IAAah1B,EAG7B,GADAiF,EAAO2wB,EAAW51B,GAElB,CAEI,IAAMlB,EAAYmG,EAAKsB,oBAEjBuvB,EAAa7wB,EAAKkC,cAClB4uB,EAAkB9wB,EAAKoC,YAGvBguB,EAAW,CACbx7B,GAAIiF,EACJ3D,KAJgB+5B,EAAYxuB,IAAIovB,GAAcZ,EAAYxtB,IAAIouB,IAAe,EAK7E16B,GAJqB85B,EAAYxuB,IAAIqvB,GAAmBb,EAAYxtB,IAAIquB,IAAoB,EAK5Fn7B,MAAOqK,EAAKwD,gBAAkB,IAGlCpO,KAAK27B,cAAc/wB,EAAMowB,GAEzBN,EAAU/0B,GAAKq1B,EAevB,OAXA16B,EAAG,SAxJmB,QAyJtBA,EAAG,UAAgBm6B,EACnBn6B,EAAG,MAAYk6B,EACfl6B,EAAG,UAAgBq6B,EACnBr6B,EAAG,MAAYo6B,EAEf16B,KAAK47B,qBAAqBr3B,EAAQjE,GAGlCu6B,EAAYztB,QAEL9M,6CAGQu7B,EAAWC,GAE1B,IAAMC,EAAUF,EAAS,OAAY,EASrC,OARKC,EAMDA,EAAY1uB,QAJZ0uB,EAAc,IAAIn0B,IAAUpI,IAAWw8B,EAAU1tB,IAAgBxN,KAM9Di7B,sCAGChB,EAAUkB,wCAKVhB,EAAUznB,GAElB,GAAIA,aAAsBlF,IAC1B,CACI,IAAM4tB,EAAWjB,EAAQ,MAAY,GACrCznB,EAAWK,oBAAoBqoB,EAAQ,SAAe,GACtD1oB,EAAWM,mBAAmBooB,EAAQ,QAAc,+CAIzCJ,EAAWC,iDAKTxpB,EAAOupB,GAExB,OAAOA,GAAa,yCAGV36B,EAAM45B,0CAKNlwB,EAAMowB,GAEhB,GAAIpwB,aAAgByD,IACpB,CACI,IAAM6tB,EAAOtxB,EAAKuxB,gBAAkB,GACpCnB,EAAQ,KAAW,CACfzsB,QAAS2tB,EAAI,SAAe,EAC5Bt8B,OAAQs8B,EAAI,QAAc,iDAKjB5pB,EAAOupB,GAExB,IAAIE,GAAU,EACRjV,EAAQxU,EAAMzF,WAFxBzD,GAAA,EAAAC,GAAA,EAAAC,OAAAzJ,EAAA,IAGI,QAAA0J,EAAAC,EAAkBsd,EAAlBpd,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,GAAA,EACA,CACI,GADJG,EAAAO,iBACwBuE,IACpB,CACI0tB,GAAU,EACV,QARZ,MAAAhyB,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAWIuyB,EAAS,QAAcE,wpCC3OxB,IAgCQK,cA5BX,SAAAA,EAAYxjB,EAAKtG,GACjB,IAAA7S,EAAA,mGAAA48B,CAAAr8B,KAAAo8B,IACI38B,EAAA68B,EAAAt8B,KAAAu8B,EAAAH,GAAAj8B,KAAAH,KAAMsS,KAEDkqB,KAAO5jB,EAHhBnZ,wPAH8BszB,mDAUjB1X,EAAWiY,GAIpB,OAFA7yB,EAAA87B,EAAAH,EAAA17B,WAAA,eAAAV,MAAAG,KAAAH,KAAmBqb,EAAWiY,GAEtBjY,GAER,KAAKpL,IACL,KAAK4C,IACD7S,KAAKw8B,KAAKC,yBAAyBC,iBAC/BzjB,KAAKC,SAAS,gCACdyjB,IAtB8B,sBAsBqB,MAAM,GAC7D,MACJ,QACI38B,KAAKw8B,KAAKnjB,iBAAiBC,iDAIxB,OAAOtZ,KAAKw8B,u2BCAZI,cAhCX,SAAAA,EAAYxsB,EAAiBysB,GAC7B,IAAAp9B,EAAA,mGAAAq9B,CAAA98B,KAAA48B,IACIn9B,EAAAs9B,EAAA/8B,KAAAg9B,EAAAJ,GAAAz8B,KAAAH,QAEKsQ,iBAAmBF,EACxB3Q,EAAKw9B,aAAeJ,EAEpBp9B,EAAKy9B,WAAaz9B,EAAKw9B,aAAaE,QAAQ/sB,EAAgBS,YANhEpR,wPAHwCyV,gDAa9BC,GAEN,IAAMioB,EAAYjoB,EAAYkoB,mBAC1BD,aAAqBR,EAErBQ,EAAUE,UAAUnoB,GAINnV,KAAKsQ,iBAAiBO,WAC9BzD,0CAKJ+H,GAEN,IAAM7C,EAAQtS,KAAKsQ,iBAAiBO,WACpC7Q,KAAKi9B,aAAahD,MAAMj6B,KAAKk9B,WAAY5qB,+3BCqClCirB,cA7DX,SAAAA,EAAYh7B,GAAO,mGAAAi7B,CAAAx9B,KAAAu9B,GAAAE,EAAAz9B,KAAA09B,EAAAH,GAAAp9B,KAAAH,KAAQuC,0PAFF2B,IAAMC,6DAOTnE,KAAKuC,MAAMo7B,UACEC,kBAClBrb,gBAAgBviB,KAAK69B,qEAMhB79B,KAAKuC,MAAMo7B,UACEC,kBAClB/U,mBAAmB7oB,KAAK69B,uDAMrC,IAAMF,EAAY39B,KAAKuC,MAAMo7B,UACvBvtB,EAAkBpQ,KAAKuC,MAAM6N,gBAC7BmkB,EAAWv0B,KAAKuC,MAAMgyB,SAEtBjiB,EAAQlC,EAAgBS,WACxBV,EAAkBwtB,EAAUG,qBAC5B5Y,EAAeyY,EAAUC,kBAE/B,OACItoB,EAAA7S,EAAAC,cAAC4S,EAAA7S,EAAME,SAAP,KACI2S,EAAA7S,EAAAC,cAACwyB,EAAA,EAAD,CACI/kB,gBAAiBA,EACjBC,gBAAiBA,EACjB8U,aAAcA,EACd0D,eAAgB,EAChB2L,SAAUA,IACdjf,EAAA7S,EAAAC,cAACgyB,EAAA,EAAD,CACI9N,MAAOtU,EAAM3E,WACbwC,gBAAiBA,EACjBC,gBAAiBA,EACjB8U,aAAcA,EACd0D,eAAgB,EAChB2L,SAAUA,IACdjf,EAAA7S,EAAAC,cAACsxB,EAAA,EAAD,CACIlN,MAAOxU,EAAMzF,WACbsD,gBAAiBA,EACjBC,gBAAiBA,EACjB8U,aAAcA,EACd0D,eAAgB,EAChB2L,SAAUA,IACdjf,EAAA7S,EAAAC,cAAC4lB,EAAA,EAAD,CACInY,gBAAiBA,EACjBC,gBAAiBA,EACjB8U,aAAcA,EACd0D,eAAgB,23BCxBrBmV,eA/BX,SAAAA,EAAYx7B,GAAO,mGAAAy7B,CAAAh+B,KAAA+9B,GAAAE,GAAAj+B,KAAAk+B,GAAAH,GAAA59B,KAAAH,KAAQuC,2PAFK2B,IAAMC,kDAOlC,IAAMsmB,EAAUzqB,KAAKuC,MAAMkoB,QACrBkT,EAAY39B,KAAKuC,MAAMo7B,UACvBvtB,EAAkBpQ,KAAKuC,MAAM6N,gBAC7BkB,EAAiBlB,EAAgBmB,oBACjCpB,EAAkBwtB,EAAUG,qBAElC,OACIxoB,EAAA7S,EAAAC,cAAC4S,EAAA7S,EAAME,SAAP,KACI2S,EAAA7S,EAAAC,cAAC2tB,EAAA,EAAD,CACIjgB,gBAAiBA,EACjBD,gBAAiBA,EACjBwS,SAAUgb,EAAU5S,uBACpBN,QAASA,IACbnV,EAAA7S,EAAAC,cAACuV,GAAA,EAAD,CACIvU,MAAO,CAAE8tB,MAAO,GAChBnb,gBAAiBsnB,EAAU5a,uBAC/BzN,EAAA7S,EAAAC,cAAC60B,GAAA,EAAD,CAAmBrU,IAAK,SAAAA,GAAG,OAAI9S,EAAgB+tB,eAAejb,IAC1D5R,eAAgBA,EAChBqR,SAAUgb,EAAU5S,uBACpBuO,YAAY,6NCPhC,IAIM8E,cAEF,SAAAA,EAAYxlB,GACZ,IAAAnZ,EAAAO,kGAAAq+B,CAAAr+B,KAAAo+B,GACIp+B,KAAKw8B,KAAO5jB,EAEZ5Y,KAAKizB,OAAS,IAAItrB,IAAUpI,IAAW8O,KACvCrO,KAAKi9B,aAAe,IAAI/C,EACxBl6B,KAAKsQ,iBAAmB,IAAI8rB,EAAoBxjB,EAAK5Y,KAAKizB,QAC1DjzB,KAAKs+B,oBAAsBp6B,IAAMie,YAEjC,IAAM/R,EAAkBpQ,KAAKsQ,iBAE7BsI,EAAI2lB,mBACCC,YAAYC,IAAwB,SAAAl8B,GAAK,OACtC+S,EAAA7S,EAAAC,cAACiiB,GAAA,EAAD,CACIzB,IAAKzjB,EAAK6+B,oBACVhZ,YAAa,SAAAqY,GAAS,OAClBroB,EAAA7S,EAAAC,cAACg8B,EAAD,CAAgBf,UAAWA,EAAWvtB,gBAAiBA,EAAiBmkB,UAAU,KACtFhP,cAAe,SAAAoY,GAAS,OACpBroB,EAAA7S,EAAAC,cAACi8B,GAAD,CAAuBhB,UAAWA,EAAWvtB,gBAAiBA,EAAiBqa,QAAShrB,EAAK+8B,KAAKjjB,8EAM3GX,GACX,IAAAtF,EAAAtT,KACI4tB,YAAuBhV,EAAIgmB,oBAE3BhmB,EAAIS,iBACCwlB,uBAAuB,kBACpB,IAAIjC,EAA8BtpB,EAAKhD,iBAAkBgD,EAAK2pB,gBAEtErkB,EAAIkmB,mBACCC,cAAc,SAAAx8B,GAAK,OAChB+S,EAAA7S,EAAAC,cAACs8B,EAAA,EAAD,CAAgBx/B,GAAI+C,EAAM/C,GACtB+V,UAAWhT,EAAMgT,UACjB7R,MAAOnB,EAAMmB,MACboT,MAAO,6BACPxB,EAAA7S,EAAAC,cAAA,SAAI,8CACJ4S,EAAA7S,EAAAC,cAAA,SAAI,gCAIhBkW,EAAIqmB,mBACCC,eAAe,gBAAiB,CAACC,IAAU,QAAS,WAAQvmB,EAAIgmB,mBAAmBQ,cAAc,YAAaxmB,EAAIW,gBAEvHvZ,KAAKsQ,iBAAiBkS,4CAInB5J,GAEH5Y,KAAKsQ,iBAAiB+O,yCAIlBzG,GAEJ5Y,KAAKsQ,iBAAiBoS,wCAIpB9J,GACN,IADWC,EACXlZ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACIgZ,YAAeC,EAAKC,EAAW,kBAAMD,EAAIymB,sBAAsBC,0DAG5C,OAAOt/B,KAAKsQ,wDAClB,OAAOtQ,KAAKs+B,oBAAoB7b,mDAG5B,MA5EF,gDA8ED,MA/EF,6DAiFW,MA/ED,8CAiFf,OAAOziB,KAAKw8B,4CAGZ4B","file":"module_nodegraph.bundle.82290508de07d322cdba.js","sourcesContent":["import GraphElement from './GraphElement.js';\n\n/**\n * A class that represents the node elements of a graph.\n *\n * @see {@link NodeGraph}\n * @extends GraphElement\n */\nclass GraphNode extends GraphElement\n{\n    /**\n   * Creates a node with the unique id.\n   * \n   * @param {String} id         the element id for this node.\n   * @param {Number} [x=0]      the initial x position\n   * @param {Number} [y=0]      the initial y position\n   */\n    constructor(id, x = 0, y = 0)\n    {\n        super(id);\n\n        this.x = x;\n        this.y = y;\n    \n        this._label = '';\n    }\n\n    /** @override */\n    getCenterPoint(dst={x: 0, y: 0})\n    {\n        dst.x = this.x;\n        dst.y = this.y;\n        return dst;\n    }\n\n    /**\n   * Sets the node label to the passed-in string.\n   *\n   * Assumes the label is NOT null.\n   * @param {String} label  The new node label.\n   * @returns {this}\n   */\n    setNodeLabel(label)\n    {\n        this._label = label;\n        return this;\n    }\n\n    /**\n   * Gets the label of the node. If the node has no label, it will return an\n   * empty string.\n   * @returns {String} The node's label.\n   */\n    getNodeLabel() { return this._label; }\n\n    /**\n   * Gets the size of the node. Can be overriden to specify a different size.\n   * @returns {Number} The radius of the node.\n   */\n    getNodeSize() { return 16; }\n\n    /** @override */\n    getHashString(usePosition=true)\n    {\n        if (usePosition)\n        {\n            return super.getHashString(usePosition) + ':' +\n        Math.floor(this.x) + ',' + Math.floor(this.y) + '.' + this._label;\n        }\n        else\n        {\n            return super.getHashString(usePosition) + ':' + this._label;\n        }\n    }\n}\n\nexport default GraphNode;\n","import GraphElement from './GraphElement.js';\n\n/**\n * A class that represents the edge elements of a graph.\n * \n * @see {@link NodeGraph}\n * @extends GraphElement\n */\nclass GraphEdge extends GraphElement\n{\n    /**\n     * Creates a edge with the unique id.\n     * \n     * @param {String} id           The element id for this node.\n     * @param {GraphNode} from      The from node of the edge.\n     * @param {GraphNode} [to=null] The to node of the edge.\n     */\n    constructor(id, from, to=null)\n    {\n        super(id);\n\n        this._from = from;\n        this._to = to;\n\n        this._label = '';\n    }\n\n    setEdgeFrom(node)\n    {\n        if (!node) throw new Error('Source of edge cannot be null');\n\n        this._from = node;\n        return this;\n    }\n\n    setEdgeTo(node)\n    {\n        this._to = node;\n        return this;\n    }\n\n    /**\n     * Sets the edge label to the passed-in string.\n     *\n     * Assumes the label is NOT null.\n     * @param {String} label  The new edge label.\n     * @returns {this}\n     */\n    setEdgeLabel(label)\n    {\n        this._label = label;\n        return this;\n    }\n\n    getEdgeDirection()\n    {\n        const from = this._from;\n        const to = this._to;\n        const HALFPI = Math.PI / 2;\n        let result = 0;\n\n        if (this.isPlaceholder())\n        {\n            result = Math.PI / 4;\n        }\n        else\n        {\n            const dy = to.y - from.y;\n            const dx = to.x - from.x;\n            result = Math.atan2(dy, dx);\n        }\n\n        if (result > HALFPI || result < -HALFPI)\n        {\n            result += Math.PI;\n        }\n\n        return result;\n    }\n\n    getStartPoint(dst = { x: 0, y: 0 })\n    {\n        const from = this._from;\n        dst.x = from.x;\n        dst.y = from.y;\n        return dst;\n    }\n\n    /** @override */\n    getCenterPoint(dst = { x: 0, y: 0 })\n    {\n        const from = this._from;\n        const to = this._to;\n        if (this.isPlaceholder())\n        {\n            const halfPlaceholderLength = this.getPlaceholderLength() / 2;\n            dst.x = from.x + halfPlaceholderLength;\n            dst.y = from.y + halfPlaceholderLength;\n        }\n        else\n        {\n            dst.x = from.x + (to.x - from.x) / 2;\n            dst.y = from.y + (to.y - from.y) / 2;\n        }\n        return dst;\n    }\n\n    getEndPoint(dst = { x: 0, y: 0 })\n    {\n        if (this.isPlaceholder())\n        {\n            const from = this._from;\n            const placeholderLength = this.getPlaceholderLength();\n            dst.x = from.x + placeholderLength;\n            dst.y = from.y + placeholderLength;\n        }\n        else\n        {\n            const to = this._to;\n            dst.x = to.x;\n            dst.y = to.y;\n        }\n        return dst;\n    }\n\n    getPlaceholderLength() { return this._from.getNodeSize(); }\n    isPlaceholder() { return this._to === null; }\n    isSelfLoop() { return this._from === this._to; }\n\n    /**\n     * Gets the label of the edge. If the edge has no label, it will return an\n     * empty string.\n     * @returns {String} The edge's label.\n     */\n    getEdgeLabel() { return this._label; }\n\n    getEdgeFrom() { return this._from; }\n    getEdgeTo() { return this._to; }\n\n    /** @override */\n    getHashString(usePosition = true)\n    {\n        const src = this._from ? this._from.getHashString(usePosition) : '';\n        // HACK: to may be a pointer, which is not a node, so getHashString does not exist.\n        const dst = this._to ? this._to.getHashString ? this._to.getHashString(usePosition) : '0' : '';\n        return super.getHashString(usePosition) + ':' + src + ',' + dst + '.' + this._label;\n    }\n}\n\nexport default GraphEdge;","/**\n * Used by InputAdapter to handle input event logic.\n */\nclass AbstractInputHandler\n{\n    constructor() {}\n\n    /**\n   * Called by InputAdapter before an InputEvent begins.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not begin.\n   */\n    onPreInputEvent(pointer) { return false; }\n\n    /**\n   * Called by InputAdapter when an InputEvent resolves and is not an Alt input.\n   * To handle events for Alt inputs, refer to onAltInputEvent().\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to trigger other events.\n   */\n    onInputEvent(pointer) { return false; }\n\n    /**\n   * Called by InputAdapter when an InputEvent resolves and is an Alt input.\n   * To handle events for non-Alt inputs, refer to onInputEvent().\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to trigger other events.\n   */\n    onAltInputEvent(pointer) { return false; }\n\n    /**\n   * Called by InputAdapter when a DblInputEvent resolves. The input is\n   * assumed by a non-Alt input, since only non-Alt inputs can trigger this\n   * event.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to trigger other events.\n   */\n    onDblInputEvent(pointer) { return false; }\n\n    /**\n   * Called by InputAdapter when input moves. The input is called before drag\n   * logic.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to trigger other events (i.e. dragging events).\n   */\n    onMoveInputEvent(pointer) { return false; }\n\n    /**\n   * Called by InputAdapter before a drag begins. The input could be either\n   * an Alt or non-Alt input.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to trigger other events, and then it will continue the drag\n   * input events for the current handler only.\n   * \n   * NOTE: A drag does not start immediately on move. There is a radius to\n   * compensate for mobile users. Therefore pointer.x and pointer.y refer to\n   * the offset position. To get the starting pointer position, use\n   * pointer.getInputEventPosition().\n   */\n    onDragStart(pointer) { return false; }\n\n    /**\n   * Called by InputAdapter while dragging moves. The input could be either\n   * an Alt or non-Alt input.\n   * Will always be called after onDragStart() and will be followed by\n   * onDragStop() when complete.\n   */\n    onDragMove(pointer) {}\n\n    /**\n   * Called by InputAdapter after a drag ends. The input could be either an\n   * Alt or non-Alt input.\n   * Will always be called after onDragStart(). Although onDragMove may be\n   * called in-between, it is not guaranteed.\n   */\n    onDragStop(pointer) {}\n\n    /**\n   * Called by InputAdapter after an InputEvent ends.\n   */\n    onPostInputEvent(pointer) {}\n\n    /**\n   * Called by InputAdapter when zoom changes.\n   * Returns true if event is consumed (zoom will not be applied)\n   */\n    onZoomChange(pointer, zoomValue, prevValue)\n    {\n        return false;\n    }\n}\n\nexport default AbstractInputHandler;","import React from 'react';\n\nconst INPUT_MASK_NODE_RADIUS_OFFSET = 4;\n\nexport const EVENT_SOURCE_NODE = 'node';\n\nexport const DefaultNodeShapeRenderer = props => (\n    <React.Fragment>\n        <circle cx={props.position.x} cy={props.position.y}\n            r={props.radius}\n            fill={props.color}\n            stroke={props.outline} />\n        {(props.onMouseOver || props.onMouseOut) &&\n            <circle cx={props.position.x} cy={props.position.y}\n                r={props.radius + INPUT_MASK_NODE_RADIUS_OFFSET}\n                fill=\"transparent\"\n                cursor=\"pointer\"\n                onMouseOver={props.onMouseOver}\n                onMouseOut={props.onMouseOut}\n                pointerEvents={props.pointerEvents} />}\n    </React.Fragment>\n);\n\nexport const DefaultLabelRenderer = props => (\n    <text x={props.position.x} y={props.position.y + 4}\n        pointerEvents=\"none\"\n        style={{\n            userSelect: 'none',\n            fontSize: `${(1 - Math.min(Math.max(props.label.length - 2, 0) / 6, 0.5))}em`\n        }}\n        textAnchor=\"middle\"\n        fill={props.color}>\n        {props.label}\n    </text>\n);\n\nclass NodeRenderer extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        const position = this.props.position;\n        const radius = this.props.radius || 16;\n        const label = this.props.label || '';\n        const color = this.props.color || '#FFFFFF';\n        const outline = this.props.outline || '#000000';\n        const onMouseOver = this.props.onMouseOver;\n        const onMouseOut = this.props.onMouseOut;\n        const pointerEvents = this.props.pointerEvents || 'visiblePainted';\n\n        const NodeShapeRenderer = DefaultNodeShapeRenderer;\n        const NodeLabelRenderer = DefaultLabelRenderer;\n\n        return (\n            <g>\n                {NodeShapeRenderer &&\n                    <NodeShapeRenderer\n                        position={position}\n                        radius={radius}\n                        color={color}\n                        outline={outline}\n                        onMouseOver={onMouseOver ? e =>\n                        {\n                            const value = e.target['value'] || (e.target['value'] = {});\n                            value.type = EVENT_SOURCE_NODE;\n                            onMouseOver(e);\n                        } : null}\n                        onMouseOut={onMouseOut ? e =>\n                        {\n                            const value = e.target['value'] || (e.target['value'] = {});\n                            value.type = EVENT_SOURCE_NODE;\n                            onMouseOut(e);\n                        } : null}\n                        pointerEvents={pointerEvents} />}\n                {NodeLabelRenderer &&\n                    <NodeLabelRenderer\n                        position={position}\n                        label={label}\n                        color={outline} />}\n            </g>\n        );\n    }\n}\n\nexport default NodeRenderer;\n","/**\n * A class that represents any positioned, unique object in a graph. Usually\n * this is not instantiated, but rather extended. Look at {@link NodeElement}\n * and {@link EdgeElement} as examples.\n */\nclass GraphElement\n{\n    /**\n   * Creates an element with the unique id.\n   * \n   * @param {Number} elementID The unique id that represents the element.\n   */\n    constructor(elementID)\n    {\n        this._id = elementID;\n    }\n\n    /**\n   * Sets the element's id to the passed-in id.\n   * @param {String} elementID  The new id.\n   * @returns {this}\n   */\n    setGraphElementID(elementID)\n    {\n        this._id = elementID;\n        return this;\n    }\n\n    /**\n   * Compute the center point of the element and store the result in dst. The\n   * properties changed in dst are: x, y.\n   * @param  {Object} [dst={x: 0, y: 0}]    The object to store the result.\n   * @returns {Object}                       The passed-in dst.\n   */\n    getCenterPoint(dst = { x: 0, y: 0 })\n    {\n        dst.x = dst.y = 0;\n        return dst;\n    }\n\n    /**\n   * A unique identifier for this graph element\n   * @returns {String} The unique identifier for this element.\n   */\n    getGraphElementID() { return this._id; }\n\n    /**\n   * Computes the hash string that represents this element and its current state\n   * uniquely and deterministically. {@link NodeGraph} uses this to compute its\n   * hash code that distinguishes it from other graphs. The generated string\n   * should only be used to differentiate between other objects of the same hash\n   * function. In other words, every instance should only be compared to other\n   * instances of the same class (or extended class without override).\n   * @param  {Boolean} [usePosition=true] Whether to consider positioning as\n   *                                      part of the unique state.\n   * @returns {String}                     The hash string that represents this\n   *                                      current state.\n   */\n    getHashString(usePosition = true) { return this._id; }\n}\n\nexport default GraphElement;\n","import React from 'react';\n\nconst QUAD_RADIAN_THRESHOLD = 0.01;\nconst QUAD_REVERSE_OFFSET_THRESHOLD = 4;\nconst ARROW_WIDTH = 10;\nconst SIXTH_PI = Math.PI / 6;\nconst HALF_PI = Math.PI / 4;\nconst INPUT_MASK_EDGE_WIDTH = 8;\n\nexport const DIRECTED_FORWARD = 'forward';\nexport const DIRECTED_BACKWARD = 'backward';\nexport const DIRECTED_BOTH = 'both';\nexport const DIRECTED_NONE = 'undirected';\n\nexport const EVENT_SOURCE_FORWARD_ENDPOINT = 'forward-endpoint';\nexport const EVENT_SOURCE_BACKWARD_ENDPOINT = 'backward-endpoint';\nexport const EVENT_SOURCE_EDGE = 'edge';\nexport const EVENT_SOURCE_LABEL = 'label';\n\nexport const DefaultEndpointRenderer = props => (\n    <React.Fragment>\n        <path d={\n            'M ' +\n            (props.position.x - (props.length * Math.sin(props.angle - SIXTH_PI))) +\n            ' ' +\n            (props.position.y - (props.length * Math.cos(props.angle - SIXTH_PI))) +\n            ' ' +\n            'L ' + props.position.x + ' ' + props.position.y +\n            ' ' +\n            'L ' +\n            (props.position.x - (props.length * Math.sin(props.angle + SIXTH_PI))) +\n            ' ' +\n            (props.position.y - (props.length * Math.cos(props.angle + SIXTH_PI)))}\n        stroke={props.color}\n        fill=\"none\" />\n        <circle cx={props.position.x - (props.length * Math.cos(-props.angle + HALF_PI))} cy={props.position.y - (props.length * Math.sin(-props.angle + HALF_PI))}\n            r={props.length}\n            fill=\"transparent\"\n            cursor=\"pointer\"\n            onMouseOver={props.onMouseOver}\n            onMouseOut={props.onMouseOut}\n            pointerEvents={props.pointerEvents} />\n    </React.Fragment>\n);\n\nexport const DefaultLabelRenderer = props => (\n    <g transform={'translate(' + props.position.x + ',' + props.position.y + ')' +\n        ' ' +\n        'rotate(' + (props.direction * 180 / Math.PI) + ')'}>\n        {\n            props.labels && props.labels.length > 0 &&\n            props.labels.map((str, i) =>\n            {\n                const onMouseOver = props.onMouseOver;\n                const onMouseOut = props.onMouseOut;\n                return (\n                    <text key={str + '.' + i}\n                        transform={'translate(0,' + ((i + 1) * -15) + ')' +\n                            (props.reverse ? ' scale(-1,-1)' : '')}\n                        alignmentBaseline=\"central\"\n                        style={{ userSelect: 'none' }}\n                        textAnchor=\"middle\"\n                        fill={props.color}\n                        cursor=\"pointer\"\n                        onMouseOver={onMouseOver ? e => \n                        {\n                            const value = e.target['value'] || (e.target['value'] = {});\n                            value.index = i;\n                            onMouseOver(e);\n                        } : null}\n                        onMouseOut={onMouseOut ? e =>\n                        {\n                            const value = e.target['value'] || (e.target['value'] = {});\n                            value.index = i;\n                            onMouseOut(e);\n                        } : null}\n                        pointerEvents={props.pointerEvents}>\n                        {str}\n                    </text>\n                );\n            })\n        }\n    </g>\n);\n\nclass EdgeRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const directed = this.props.directed || DIRECTED_NONE;\n\n        const ForwardEndpointRenderer =\n            (directed === DIRECTED_FORWARD || directed === DIRECTED_BOTH) ?\n                (this.props.forwardEndpointRenderer ||\n                    this.props.endpointRenderer ||\n                    DefaultEndpointRenderer) : null;\n        const BackwardEndpointRenderer =\n            (directed === DIRECTED_BACKWARD || directed === DIRECTED_BOTH) ?\n                (this.props.backwardEndpointRenderer ||\n                    this.props.endpointRenderer ||\n                    DefaultEndpointRenderer) : null;\n        const EdgeLabelRenderer = this.props.labelRenderer || DefaultLabelRenderer;\n\n        const fromPoint = this.props.from;\n        const toPoint = this.props.to;\n        const centerPoint = this.props.center;\n        const label = this.props.label || '';\n        const direction = this.props.direction || 0;\n        const color = this.props.color || '#000000';\n        const onMouseOver = this.props.onMouseOver;\n        const onMouseOut = this.props.onMouseOut;\n        const pointerEvents = this.props.pointerEvents || 'visiblePainted';\n\n        let reverseLabel = false;\n        let fromAngle;\n        let toAngle;\n        let quadLine = null;\n\n        const dftx = fromPoint.x - toPoint.x;\n        const dfty = fromPoint.y - toPoint.y;\n        const dfcx = fromPoint.x - centerPoint.x;\n        const dfcy = fromPoint.y - centerPoint.y;\n        const ftrad = Math.atan2(dfty, dftx);\n        const fcrad = Math.atan2(dfcy, dfcx);\n        if (Math.abs(ftrad - fcrad) <= QUAD_RADIAN_THRESHOLD)\n        {\n            toAngle = Math.atan2(centerPoint.x - toPoint.x, centerPoint.y - toPoint.y) + Math.PI;\n            fromAngle = Math.atan2(centerPoint.x - fromPoint.x, centerPoint.y - fromPoint.y) + Math.PI;\n            quadLine = 'L ' + toPoint.x + ' ' + toPoint.y;\n            reverseLabel = false;\n        }\n        else\n        {\n            const cx = ((centerPoint.x * 4) - fromPoint.x - toPoint.x) / 2;\n            const cy = ((centerPoint.y * 4) - fromPoint.y - toPoint.y) / 2;\n            toAngle = Math.atan2(cx - toPoint.x, cy - toPoint.y) + Math.PI;\n            fromAngle = Math.atan2(cx - fromPoint.x, cy - fromPoint.y) + Math.PI;\n            quadLine = 'Q ' + cx + ' ' + cy + ' ' + toPoint.x + ' ' + toPoint.y;\n            reverseLabel = cy > centerPoint.y + QUAD_REVERSE_OFFSET_THRESHOLD;\n        }\n\n        const pathData = `M ${fromPoint.x} ${fromPoint.y} ${quadLine}`;\n        return (\n            <g>\n                <path d={pathData}\n                    stroke={color}\n                    fill=\"none\" />\n                <path d={pathData}\n                    stroke=\"transparent\"\n                    strokeWidth={`${INPUT_MASK_EDGE_WIDTH}px`}\n                    fill=\"none\"\n                    cursor=\"pointer\"\n                    onMouseOver={onMouseOver ? e =>\n                    {\n                        const value = e.target['value'] || (e.target['value'] = {});\n                        value.type = EVENT_SOURCE_EDGE;\n                        onMouseOver(e);\n                    } : null}\n                    onMouseOut={onMouseOut ? e =>\n                    {\n                        const value = e.target['value'] || (e.target['value'] = {});\n                        value.type = EVENT_SOURCE_EDGE;\n                        onMouseOut(e);\n                    } : null}\n                    pointerEvents={pointerEvents} />\n                {ForwardEndpointRenderer &&\n                    <ForwardEndpointRenderer\n                        position={toPoint}\n                        angle={toAngle}\n                        length={ARROW_WIDTH}\n                        color={color}\n                        onMouseOver={onMouseOver ? e =>\n                        {\n                            const value = e.target['value'] || (e.target['value'] = {});\n                            value.type = EVENT_SOURCE_FORWARD_ENDPOINT;\n                            onMouseOver(e);\n                        } : null}\n                        onMouseOut={onMouseOut ? e =>\n                        {\n                            const value = e.target['value'] || (e.target['value'] = {});\n                            value.type = EVENT_SOURCE_FORWARD_ENDPOINT;\n                            onMouseOut(e);\n                        } : null}\n                        pointerEvents={pointerEvents} />}\n                {BackwardEndpointRenderer &&\n                    <BackwardEndpointRenderer\n                        position={fromPoint}\n                        angle={fromAngle}\n                        length={ARROW_WIDTH}\n                        color={color}\n                        onMouseOver={onMouseOver ? e => \n                        {\n                            const value = e.target['value'] || (e.target['value'] = {});\n                            value.type = EVENT_SOURCE_BACKWARD_ENDPOINT;\n                            onMouseOver(e);\n                        } : null}\n                        onMouseOut={onMouseOut ? e =>\n                        {\n                            const value = e.target['value'] || (e.target['value'] = {});\n                            value.type = EVENT_SOURCE_BACKWARD_ENDPOINT;\n                            onMouseOut(e);\n                        } : null}\n                        pointerEvents={pointerEvents} />}\n                {EdgeLabelRenderer &&\n                    <EdgeLabelRenderer\n                        position={centerPoint}\n                        labels={label.split('\\n')}\n                        direction={direction}\n                        reverse={reverseLabel}\n                        color={color}\n                        onMouseOver={onMouseOver ? e => \n                        {\n                            const value = e.target['value'] || (e.target['value'] = {});\n                            value.type = EVENT_SOURCE_LABEL;\n                            onMouseOver(e);\n                        } : null}\n                        onMouseOut={onMouseOut ? e =>\n                        {\n                            const value = e.target['value'] || (e.target['value'] = {});\n                            value.type = EVENT_SOURCE_LABEL;\n                            onMouseOut(e);\n                        } : null}\n                        pointerEvents={pointerEvents} />}\n            </g>\n        );\n    }\n}\n\nexport default EdgeRenderer;\n","import GraphNode from './element/GraphNode.js';\nimport GraphEdge from './element/GraphEdge.js';\nimport { guid, stringHash } from 'util/MathHelper.js';\n\n/**\n * A class that represents a graph that coordinates nodes and edges.\n */\nclass NodeGraph\n{\n    /**\n     * Create a NodeGraph with the respective node and edge classes.\n     * @param {Class} [nodeClass=GraphNode] The class that represents a node.\n     * @param {Class} [edgeClass=GraphEdge] The class that represents an edge.\n     */\n    constructor(nodeClass = GraphNode, edgeClass = GraphEdge)\n    {\n        this._nodeClass = nodeClass;\n        this._edgeClass = edgeClass;\n\n        this._nodeMapping = new Map();\n        this._edgeMapping = new Map();\n    }\n\n    /**\n     * Removes all nodes and edges from the graph.\n     */\n    clear()\n    {\n        this.clearEdges();\n        this.clearNodes();\n    }\n\n    /**\n     * Checks whether there exists any number of nodes or edges.\n     * @returns {Boolean} Whether the graph is empty.\n     */\n    isEmpty()\n    {\n        return this._nodeMapping.size <= 0 && this._edgeMapping.size <= 0;\n    }\n\n    /**\n     * Computes the boundaries of the graph that surrounds all nodes and edges. If\n     * the graph is empty, a rectangle at the origin of size 1 is returned.\n     * @returns {Object}    The object which represents the bounding rectangle. It has\n     *                      the properties: minX, minY, maxX, maxY, width, height.\n     */\n    getBoundingRect()\n    {\n        if (this._nodeMapping.size <= 0) return {\n            minX: 0,\n            minY: 0,\n            maxX: 1,\n            maxY: 1,\n            width: 1,\n            height: 1\n        };\n\n        var minNX = Number.MAX_VALUE;\n        var minNY = Number.MAX_VALUE;\n        var maxNX = Number.MIN_VALUE;\n        var maxNY = Number.MIN_VALUE;\n\n        var maxNodeSize = 0;\n        for (const node of this._nodeMapping.values())\n        {\n            const x = node.x;\n            const y = node.y;\n            const size = node.getNodeSize();\n            if (size > maxNodeSize) maxNodeSize = size;\n\n            minNX = Math.min(minNX, x);\n            maxNX = Math.max(maxNX, x);\n\n            minNY = Math.min(minNY, y);\n            maxNY = Math.max(maxNY, y);\n        }\n\n        minNX -= maxNodeSize;\n        minNY -= maxNodeSize;\n        maxNX += maxNodeSize;\n        maxNY += maxNodeSize;\n\n        var minEX = Number.MAX_VALUE;\n        var minEY = Number.MAX_VALUE;\n        var maxEX = Number.MIN_VALUE;\n        var maxEY = Number.MIN_VALUE;\n\n        const startPoint = { x: 0, y: 0 };\n        const endPoint = { x: 0, y: 0 };\n        const centerPoint = { x: 0, y: 0 };\n        for (const edge of this._edgeMapping.values())\n        {\n            //Will store into point objects...\n            edge.getStartPoint(startPoint);\n            edge.getEndPoint(endPoint);\n            edge.getCenterPoint(centerPoint);\n\n            const sx = startPoint.x;\n            const sy = startPoint.y;\n            const ex = endPoint.x;\n            const ey = endPoint.y;\n            const cx = centerPoint.x;\n            const cy = centerPoint.y;\n\n            minEX = Math.min(minEX, sx, ex, cx);\n            maxEX = Math.max(maxEX, sx, ex, cx);\n\n            minEY = Math.min(minEY, sy, ey, cy);\n            maxEY = Math.max(maxEY, sy, ey, cy);\n        }\n\n        const result = {\n            minX: Math.min(minNX, minEX),\n            minY: Math.min(minNY, minEY),\n            maxX: Math.max(maxNX, maxEX),\n            maxY: Math.max(maxNY, maxEY),\n            width: 0,\n            height: 0\n        };\n        result.width = result.maxX - result.minX;\n        result.height = result.maxY - result.minY;\n        return result;\n    }\n\n    /**\n     * Computes a unique and persistent hash code that describes the current\n     * state.\n     * @param  {Boolean} [usePosition=true] Whether to consider the positioning as\n     *                                      part of the graph's state.\n     * @returns {Number}                    the hash code.\n     */\n    getHashCode(usePosition = true)\n    {\n        let string = '';\n        for (const node of this._nodeMapping.values())\n        {\n            string += node.getHashString(usePosition) + ',';\n        }\n        string += '|';\n        for (const edge of this._edgeMapping.values())\n        {\n            string += edge.getHashString(usePosition) + ',';\n        }\n        return stringHash(string);\n    }\n\n    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= NODES\n\n    /**\n     * Create node for graph.\n     * @param  {Number} [x=0]       the initial x position\n     * @param  {Number} [y=0]       the initial y position\n     * @param  {String} [id=null]   the new node id (will be generated if null)\n     * @returns {GraphNdoe}         the new node\n     */\n    createNode(x = 0, y = 0, id = null)\n    {\n        return this.addNode(new (this._nodeClass)(id || guid(), x, y));\n    }\n\n    /**\n     * Add existing node to the graph. Any edges connected to the node are NOT\n     * deleted in the process. (so pls delete them first.)\n     * @param {GraphNode} node The node to be added.\n     * @returns {GraphNode} The node that was added to the graph.\n     */\n    addNode(node)\n    {\n        if (!node.getGraphElementID()) node.setGraphElementID(guid());\n        this._nodeMapping.set(node.getGraphElementID(), node);\n        return node;\n    }\n\n    /**\n     * Delete node from graph. Any edges whose source is the target node are also\n     * deleted.\n     * @param  {GraphNode} node        Target node to be deleted.\n     */\n    deleteNode(node)\n    {\n        const elementID = node.getGraphElementID();\n        if (this._nodeMapping.has(elementID))\n        {\n            this._nodeMapping.delete(elementID);\n\n            const nullSourceEdges = [];\n            //Find connected edges without sources...\n            for (const edge of this.getEdges())\n            {\n                if (edge.getEdgeFrom() === node)\n                {\n                    nullSourceEdges.push(edge);\n                }\n                else if (edge.getEdgeTo() === node)\n                {\n                    edge.setEdgeTo(null);\n                }\n            }\n            //Delete sourceless edges...\n            for (const edge of nullSourceEdges)\n            {\n                this.deleteEdge(edge);\n            }\n        }\n    }\n\n    clearNodes() { this._nodeMapping.clear(); }\n\n    getNodeByElementID(elementID)\n    {\n        if (this._nodeMapping.has(elementID))\n        {\n            return this._nodeMapping.get(elementID);\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    getNodesByLabel(label, dst = [])\n    {\n        for (const node of this.getNodes())\n        {\n            if (node.getNodeLabel() === label)\n            {\n                dst.push(node);\n            }\n        }\n        return dst;\n    }\n\n    getNodes() { return Array.from(this._nodeMapping.values()); }\n    getNodeCount() { return this._nodeMapping.size; }\n    getNodeClass() { return this._nodeClass; }\n\n    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= EDGES\n\n    /**\n     * This is more like addEdge() without adding it to the graph and just returns the result.\n     * This should only be called once when completing an edge.\n     * @deprecated\n     */\n    formatEdge(edge)\n    {\n        return edge;\n    }\n\n    /**\n     * Create edge for graph. The id argument can be used to set the id to a\n     * pre-defined value instead of generating a new one.\n     * @param  {GraphNode} from                     the source graph node for the edge\n     * @param  {GraphNode|InputPointer} [to=null]   the destination graph node for the edge\n     * @param  {String} [id=null]                   the new edge id (will be generated if null)\n     * @returns {GraphEdge}                         the new edge\n     */\n    createEdge(from, to = null, id = null)\n    {\n        return this.addEdge(new (this._edgeClass)(id || guid(), from, to));\n    }\n\n    /**\n     * Add existing edge to the graph.\n     * \n     * Assumes that the passed-in edge does not have conflicting id's within this graph.\n     * @param {GraphEdge} edge    the edge to be added.\n     * @returns {GraphEdge}       the edge that was added to the graph.\n     */\n    addEdge(edge)\n    {\n        if (!edge.getGraphElementID()) edge.setGraphElementID(guid());\n        this._edgeMapping.set(edge.getGraphElementID(), edge);\n        return edge;\n    }\n\n    /**\n     * Delete edge from graph. The from and to nodes of the target edge are not\n     * modified.\n     * @param  {GraphEdge} edge      target edge to be deleted.\n     */\n    deleteEdge(edge)\n    {\n        const elementID = edge.getGraphElementID();\n        if (this._edgeMapping.has(elementID))\n        {\n            this._edgeMapping.delete(elementID);\n        }\n    }\n\n    clearEdges() { this._edgeMapping.clear(); }\n\n    getEdgeByElementID(elementID)\n    {\n        if (this._edgeMapping.has(elementID))\n        {\n            return this._edgeMapping.get(elementID);\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    getEdgesByLabel(label, dst = [])\n    {\n        for (const edge of this.getEdges())\n        {\n            if (edge.getEdgeLabel() === label)\n            {\n                dst.push(edge);\n            }\n        }\n        return dst;\n    }\n\n    getEdges() { return Array.from(this._edgeMapping.values()); }\n    getEdgeCount() { return this._edgeMapping.size; }\n    getEdgeClass() { return this._edgeClass; }\n}\n\nexport default NodeGraph;\n","import GraphEdge from './GraphEdge.js';\nimport { getDirectionalVector, getMidPoint } from 'util/MathHelper.js';\n\n/**\n * A class that represents the curved edge elements of a graph.\n * \n * @see {@link NodeGraph}\n * @extends GraphEdge\n */\nclass QuadraticEdge extends GraphEdge\n{\n    /**\n     * Creates a quadratic edge with the unique id.\n     * @constructor\n     * @param {String} id           The element id for this node.\n     * @param {GraphNode} from      The from node of the edge.\n     * @param {GraphNode} [to=null] The to node of the edge.\n     */\n    constructor(id, from, to = null)\n    {\n        super(id, from, to);\n\n        //radians = the angle in radians, where 0 is the normal of midpoint\n        //length = the distance from midpoint\n        this._quad = {\n            radians: 0,\n            length: to ? 0 : this.getPlaceholderLength(),\n            coords: { x: 0, y: 0 }\n        };\n    }\n\n    /** @override */\n    setEdgeTo(node)\n    {\n        const prevNode = this._to;\n        if (node !== prevNode)\n        {\n            const result = super.setEdgeTo(node);\n            if (!node)\n            {\n                this.setQuadraticByCoords(prevNode.x, prevNode.y);\n            }\n            else if (node === this._from)\n            {\n                this._quad.length = this._from.getNodeSize() + this.getPlaceholderLength();\n            }\n            return result;\n        }\n        return super.setEdgeTo(node);\n    }\n\n    /**\n     * Set the angle of the curve in radians\n     * @param {Number} radians the radians the quadratic should be curved\n     * @returns {this}\n     */\n    setQuadraticRadians(radians)\n    {\n        this._quad.radians = radians;\n        return this;\n    }\n\n    /**\n     * Set the distance of the curve from the midpoint\n     * @param {Number} length the \"height\" of the curve\n     * @returns {this}\n     */\n    setQuadraticLength(length)\n    {\n        this._quad.length = length;\n        return this;\n    }\n\n    /**\n     * Calculates and sets the quadratic vertex to pass through the position.\n     * This will update the radians and length of the curve.\n     * @param {Number} x the x coordinate\n     * @param {Number} y the y coordinate\n     * @returns {this}\n     */\n    setQuadraticByCoords(x, y)\n    {\n        const from = this._from;\n        const to = this._to;\n\n        if (!to)\n        {\n            /*\n            Quad is re-used to determine edge angle for placeholder.\n            This can be used specifically for quad since regular quad is\n            dependent on edge to to NOT be null, which placeholder assumes\n            to BE null. Also, quad.length is ignored, because the\n            length should always be getPlaceholderLength(). This is\n            resolved by getStartPoint(), getEndPoint(), etc.\n            */\n            const dx = this._from.x - x;\n            const dy = this._from.y - y;\n            const radians = -Math.atan2(dx, dy) - (Math.PI / 2);\n            this._quad.radians = radians;\n            return this;\n        }\n\n        const fromx = from.x;\n        const fromy = from.y;\n        const tox = to.x;\n        const toy = to.y;\n\n        let dx = tox - fromx;\n        let dy = toy - fromy;\n        const midpointx = fromx + dx / 2;\n        const midpointy = fromy + dy / 2;\n\n        // Remember: y-axis is flipped because canvas coord-space is -y => +y\n        // Therefore, dy needs to be flipped\n        const angleOffset = Math.atan2(-dy, dx);\n        dx = x - midpointx;\n        dy = y - midpointy;\n\n        const PI = Math.PI;\n        const HALFPI = PI / 2;\n        // 0 rad = to the right\n        // Also: angleOffset is the offset from midpoint angle, the orthogonal base vector\n        // This is because the from and to could be flipped, and\n        // therefore give a negative, or at least a reversed angle.\n        let radians = Math.atan2(dy, dx) + angleOffset;\n        let length = Math.sqrt(dx * dx + dy * dy);\n        if (length < 0) length = 0;\n\n        // -PI / 2 is outward\n        const outrad = radians - (-HALFPI);\n        // PI / 2 is inward\n        const inrad = radians - (HALFPI);\n        // TODO: Should be dependent on length, instead of a constant.\n        const maxdr = PI / 20;\n\n        if (Math.abs(length) < 8)\n        {\n            radians = 0;\n            length = 0;\n        }\n        else if (outrad < maxdr && outrad > -maxdr)\n        {\n            // -PI / 2 is outward\n            radians = -HALFPI;\n        }\n        else if (-inrad < maxdr && -inrad > -maxdr)\n        {\n            // PI / 2 is inward\n            radians = HALFPI;\n        }\n\n        this._quad.radians = radians;\n        this._quad.length = length;\n        return this;\n    }\n\n    getQuadraticLength() { return this._quad.length; }\n    getQuadraticRadians() { return this._quad.radians; }\n    getQuadratic() { return this._quad; }\n    isQuadratic() { return !this.isPlaceholder() && this._quad.length !== 0; }\n\n    getQuadraticAsCoords()\n    {\n        const from = this._from;\n        const to = this._to;\n        const dst = this._quad.coords;\n        if (from == null || to == null)\n        {\n            dst.x = 0;\n            dst.y = 0;\n        }\n        else\n        {\n            /*\n            //To mark dirty...\n            _capture: {\n                fx: 0, fy: 0,\n                tx: 0, ty: 0,\n                ql: 0, qr: 0\n            }\n            */\n            getDirectionalVector(from.x, from.y, to.x, to.y, this._quad.length, this._quad.radians, dst);\n        }\n        return dst;\n    }\n\n    /** @override */\n    getEdgeDirection()\n    {\n        let result = 0;\n        if (this.isQuadratic())\n        {\n            const coords = this.getQuadraticAsCoords();\n            result = Math.atan2(coords.y, coords.x) + Math.PI / 2;\n        }\n        else\n        {\n            result = super.getEdgeDirection();\n        }\n\n        return result;\n    }\n\n    /** @override */\n    getStartPoint(dst = { x: 0, y: 0 })\n    {\n        const from = this._from;\n        const to = this._to;\n\n        if (!from) throw new Error('Source of edge cannot be null.');\n        if (!to)\n        {\n            //Make sure to use quad for placeholder direction\n            const radians = this._quad.radians;\n            const px = Math.cos(radians);\n            const py = Math.sin(radians);\n            const nodeSize = from.getNodeSize();\n            dst.x = from.x + px * nodeSize;\n            dst.y = from.y + py * nodeSize;\n            return dst;\n        }\n\n        //Check if edge is following something other than a node...then remain flat\n        if (typeof to['getNodeSize'] !== 'function' || !this.isQuadratic())\n        {\n            getDirectionalVector(from.x, from.y, to.x, to.y, from.getNodeSize(), 0, dst);\n            dst.x += from.x;\n            dst.y += from.y;\n            return dst;\n        }\n        else\n        {\n            getMidPoint(from.x, from.y, to.x, to.y, dst);\n            const qcoords = this.getQuadraticAsCoords();\n            const qx = dst.x + qcoords.x;\n            const qy = dst.y + qcoords.y;\n            getDirectionalVector(from.x, from.y, qx, qy, from.getNodeSize(), this.isSelfLoop() ? (Math.PI / 4) : 0, dst);\n            dst.x += from.x;\n            dst.y += from.y;\n            return dst;\n        }\n    }\n\n    /** @override */\n    getCenterPoint(dst = { x: 0, y: 0 })\n    {\n        const from = this._from;\n        const to = this._to;\n\n        if (!from) throw new Error('Source of edge cannot be null.');\n        if (!to)\n        {\n            //Make sure to use quad for placeholder direction (not magnitude)\n            const px = Math.cos(this._quad.radians);\n            const py = Math.sin(this._quad.radians);\n            const placeholderLength = from.getNodeSize() + this.getPlaceholderLength() / 2;\n            dst.x = from.x + px * placeholderLength;\n            dst.y = from.y + py * placeholderLength;\n            return dst;\n        }\n\n        getMidPoint(from.x, from.y, to.x, to.y, dst);\n\n        if (this.isQuadratic())\n        {\n            const qcoords = this.getQuadraticAsCoords();\n            dst.x += qcoords.x;\n            dst.y += qcoords.y;\n        }\n\n        return dst;\n    }\n\n    /** @override */\n    getEndPoint(dst = { x: 0, y: 0 })\n    {\n        const from = this._from;\n        const to = this._to;\n\n        if (!from) throw new Error('Source of edge cannot be null.');\n        if (!to)\n        {\n            //Make sure to use quadCoords for placeholder direction (not magnitude)\n            const radians = this._quad.radians;\n            const px = Math.cos(radians);\n            const py = Math.sin(radians);\n            const placeholderLength = from.getNodeSize() + this.getPlaceholderLength();\n            dst.x = from.x + px * placeholderLength;\n            dst.y = from.y + py * placeholderLength;\n            return dst;\n        }\n\n        //Get end point for non-nodes...\n        if (typeof to['getNodeSize'] !== 'function')\n        {\n            return to;\n        }\n        //Get end point for straight edges...\n        else if (!this.isQuadratic())\n        {\n            getDirectionalVector(to.x, to.y, from.x, from.y, to.getNodeSize(), 0, dst);\n            dst.x += to.x;\n            dst.y += to.y;\n            return dst;\n        }\n        //Get end point for quadratics...\n        else\n        {\n            getMidPoint(from.x, from.y, to.x, to.y, dst);\n            const qcoords = this.getQuadraticAsCoords();\n            const qx = dst.x + qcoords.x;\n            const qy = dst.y + qcoords.y;\n            getDirectionalVector(to.x, to.y, qx, qy, to.getNodeSize(), this.isSelfLoop() ? -(Math.PI / 4.0) : 0, dst);\n            dst.x += to.x;\n            dst.y += to.y;\n            return dst;\n        }\n    }\n\n    /** @override */\n    getHashString(usePosition = true)\n    {\n        if (usePosition)\n        {\n            return super.getHashString(usePosition) + ':' + this._quad.radians + ',' + this._quad.length;\n        }\n        else\n        {\n            return super.getHashString(usePosition);\n        }\n    }\n}\n\nexport default QuadraticEdge;\n","import AbstractInputHandler from 'util/input/AbstractInputHandler.js';\nimport { lerp } from 'util/MathHelper.js';\nimport { EVENT_SOURCE_NODE } from 'graph2/renderer/NodeRenderer.js';\n\nexport const GRAPH_EVENT_NODE_CREATE = 'node-create';\nexport const GRAPH_EVENT_NODE_DELETE = 'node-delete';\nexport const GRAPH_EVENT_NODE_DELETE_ALL = 'node-delete-all';\nexport const GRAPH_EVENT_NODE_LABEL_CHANGE = 'edge-label-change';\nexport const GRAPH_EVENT_NODE_MOVE = 'node-move';\nexport const GRAPH_EVENT_NODE_MOVE_ALL = 'node-move-all';\nexport const GRAPH_EVENT_NODE_EDIT_WHILE_DELETE = 'error-node-edit-while-delete';\n\nconst NODE_POSITION_INTERPOLATION_DELTA = 0.6;\nconst SHOULD_DELETE_NODE_WITH_EMPTY_LABEL = false;\n\nclass GraphNodeInputHandler extends AbstractInputHandler\n{\n    constructor(inputController, graphController)\n    {\n        super();\n        this._inputController = inputController;\n        this._graphController = graphController;\n\n        this._cachedPosition = { x: 0, y: 0 };\n    }\n\n    /** @override */\n    onInputEvent(pointer)\n    {\n        const inputController = this._inputController;\n        const currentTargetType = inputController.getCurrentTargetType();\n\n        if (inputController.isTrashMode())\n        {\n            if (currentTargetType === EVENT_SOURCE_NODE)\n            {\n                const currentTargetSource = inputController.getCurrentTargetSource();\n                const graphController = this._graphController;\n                graphController.getGraph().deleteNode(currentTargetSource);\n                graphController.emitGraphEvent(GRAPH_EVENT_NODE_DELETE, { target: currentTargetSource });\n                return true;\n            }\n        }\n\n        if (!inputController.isMoveMode(pointer.getInputAdapter()) && currentTargetType === EVENT_SOURCE_NODE)\n        {\n            const currentTargetSource = inputController.getCurrentTargetSource();\n            const graphController = this._graphController;\n            graphController.openLabelEditor(currentTargetSource, currentTargetSource.getNodeLabel(),\n                (target, value, hasChanged) => \n                {\n                    if (SHOULD_DELETE_NODE_WITH_EMPTY_LABEL && !value)\n                    {\n                        graphController.getGraph().deleteNode(currentTargetSource);\n                        graphController.emitGraphEvent(GRAPH_EVENT_NODE_DELETE, { target: currentTargetSource });\n                    }\n                    else if (hasChanged)\n                    {\n                        graphController.emitGraphEvent(GRAPH_EVENT_NODE_LABEL_CHANGE, { target: currentTargetSource });\n                    }\n                });\n            return true;\n        }\n\n        return false;\n    }\n\n    /** @override */\n    onAltInputEvent(pointer)\n    {\n        return this.onInputEvent(pointer);\n    }\n\n    /** @override */\n    onDblInputEvent(pointer)\n    {\n        const inputController = this._inputController;\n        if (inputController.hasActiveTarget()) return false;\n        if (inputController.isTrashMode()) return false;\n\n        const currentTargetType = inputController.getCurrentTargetType();\n        if (!currentTargetType)\n        {\n            const graphController = this._graphController;\n            const labelFormatter = graphController.getLabelFormatter();\n            const graph = graphController.getGraph();\n            const node = graph.createNode(pointer.x, pointer.y);\n            if (labelFormatter)\n            {\n                node.setNodeLabel(labelFormatter.getDefaultNodeLabel());\n            }\n            graphController.emitGraphEvent(GRAPH_EVENT_NODE_CREATE, { target: node });\n        }\n    }\n\n    /** @override */\n    onDragStart(pointer)\n    {\n        const inputController = this._inputController;\n        if (inputController.hasActiveTarget()) return false;\n        if (inputController.isTrashMode())\n        {\n            // Don't delete stuff if moving...\n            this._graphController.emitGraphEvent(GRAPH_EVENT_NODE_EDIT_WHILE_DELETE);\n            return false;\n        }\n        \n        const currentTargetType = inputController.getCurrentTargetType();\n        if (inputController.isMoveMode(pointer.getInputAdapter()) && currentTargetType === EVENT_SOURCE_NODE)\n        {\n            const selectionBox = inputController.getSelectionBox();\n            const currentTargetSource = inputController.getCurrentTargetSource();\n            if (selectionBox && selectionBox.hasSelection())\n            {\n                if (!selectionBox.isTargetInSelection(currentTargetSource))\n                {\n                    selectionBox.clearSelection();\n                }\n                else\n                {\n                    this._cachedPosition.x = pointer.x;\n                    this._cachedPosition.y = pointer.y;\n                }\n            }\n            inputController.bindActiveTarget(currentTargetSource, currentTargetType, false);\n            return true;\n        }\n\n        return false;\n    }\n\n    /** @override */\n    onDragMove(pointer)\n    {\n        const inputController = this._inputController;\n        const selectionBox = inputController.getSelectionBox();\n        const targetSource = inputController.getActiveTargetSource();\n        if (selectionBox && selectionBox.hasSelection())\n        {\n            const dx = pointer.x - this._cachedPosition.x;\n            const dy = pointer.y - this._cachedPosition.y;\n            for (const node of selectionBox.getSelection())\n            {\n                node.x += dx;\n                node.y += dy;\n            }\n            this._cachedPosition.x = pointer.x;\n            this._cachedPosition.y = pointer.y;\n        }\n        else\n        {\n            this.moveNodeTo(this._graphController.getGraph(), targetSource, pointer.x, pointer.y);\n        }\n    }\n\n    /** @override */\n    onDragStop(pointer)\n    {\n        const inputController = this._inputController;\n        const graphController = this._graphController;\n        const selectionBox = inputController.getSelectionBox();\n\n        const targetSource = inputController.getActiveTargetSource();\n        inputController.unbindActiveTarget();\n\n        if (inputController.isTrashMode())\n        {\n            if (selectionBox.hasSelection())\n            {\n                const graph = graphController.getGraph();\n                const dst = [];\n                for (const node of selectionBox.getSelection())\n                {\n                    graph.deleteNode(node);\n                    dst.push(node);\n                }\n                selectionBox.clearSelection();\n                graphController.emitGraphEvent(GRAPH_EVENT_NODE_DELETE_ALL, { target: dst });\n            }\n            else\n            {\n                graphController.getGraph().deleteNode(targetSource);\n                graphController.emitGraphEvent(GRAPH_EVENT_NODE_DELETE, { target: targetSource });\n            }\n            return;\n        }\n\n        if (selectionBox.hasSelection())\n        {\n            graphController.emitGraphEvent(GRAPH_EVENT_NODE_MOVE_ALL, { target: selectionBox.getSelection() });\n        }\n        else\n        {\n            graphController.emitGraphEvent(GRAPH_EVENT_NODE_MOVE, { target: targetSource });\n        }\n    }\n\n    moveNodeTo(graph, node, x, y)\n    {\n        x = lerp(node.x, x, NODE_POSITION_INTERPOLATION_DELTA);\n        y = lerp(node.y, y, NODE_POSITION_INTERPOLATION_DELTA);\n\n        const nodeSize = node.getNodeSize();\n        for (const other of graph.getNodes())\n        {\n            //Update node collision\n            if (node === other) continue;\n\n            const dx = x - other.x;\n            const dy = y - other.y;\n            const angle = Math.atan2(dy, dx);\n\n            const diameter = (nodeSize * 2);\n            const nextDX = other.x + (Math.cos(angle) * diameter) - x;\n            const nextDY = other.y + (Math.sin(angle) * diameter) - y;\n\n            if (dx * dx + dy * dy < nodeSize * nodeSize * 4)\n            {\n                x += nextDX;\n                y += nextDY;\n            }\n        }\n\n        node.x = x;\n        node.y = y;\n    }\n}\n\nexport default GraphNodeInputHandler;","import AbstractInputHandler from 'util/input/AbstractInputHandler.js';\nimport { lerp } from 'util/MathHelper.js';\n\nimport { EVENT_SOURCE_FORWARD_ENDPOINT, EVENT_SOURCE_EDGE, EVENT_SOURCE_LABEL } from 'graph2/renderer/EdgeRenderer.js';\nimport { EVENT_SOURCE_NODE } from 'graph2/renderer/NodeRenderer.js';\n\nexport const GRAPH_EVENT_EDGE_CREATE = 'edge-create';\nexport const GRAPH_EVENT_EDGE_DELETE = 'edge-delete';\nexport const GRAPH_EVENT_EDGE_LABEL_CHANGE = 'edge-label-change';\nexport const GRAPH_EVENT_EDGE_TO_CHANGE = 'edge-to-change';\nexport const GRAPH_EVENT_EDGE_QUAD_CHANGE = 'edge-quad-change';\nexport const GRAPH_EVENT_EDGE_EDIT_WHILE_DELETE = 'error-edge-edit-while-delete';\n\nconst EDGE_POSITION_INTERPOLATION_DELTA = 0.6;\n\nclass GraphEdgeInputHandler extends AbstractInputHandler\n{\n    constructor(inputController, graphController)\n    {\n        super();\n\n        this._inputController = inputController;\n        this._graphController = graphController;\n\n        this._cachedEdgeQuads = {\n            radians: 0,\n            length: 0\n        };\n        this._cachedEdgeTo = null;\n        this._cachedPointer = { x: 0, y: 0 };\n        this._newEdge = false;\n\n        this._shouldDeleteEdgePlaceholder = false;\n        this._shouldDeleteEdgeWithEmptyLabel = false;\n    }\n\n    setShouldDeleteEdgePlaceholder(flag)\n    {\n        this._shouldDeleteEdgePlaceholder = flag;\n        return this;\n    }\n\n    setShouldDeleteEdgeWithEmptyLabel(flag)\n    {\n        this._shouldDeleteEdgeWithEmptyLabel = flag;\n        return this;\n    }\n\n    /** @override */\n    onInputEvent(pointer)\n    {\n        const inputController = this._inputController;\n        const currentTargetType = inputController.getCurrentTargetType();\n\n        if (inputController.isTrashMode())\n        {\n            if (currentTargetType === EVENT_SOURCE_EDGE ||\n                currentTargetType === EVENT_SOURCE_FORWARD_ENDPOINT ||\n                currentTargetType === EVENT_SOURCE_LABEL)\n            {\n                const currentTargetSource = inputController.getCurrentTargetSource();\n                const graphController = this._graphController;\n                graphController.getGraph().deleteEdge(currentTargetSource);\n                graphController.emitGraphEvent(GRAPH_EVENT_EDGE_DELETE, {target: currentTargetSource});\n                return true;\n            }\n        }\n\n        if (currentTargetType === EVENT_SOURCE_LABEL || currentTargetType === EVENT_SOURCE_EDGE)\n        {\n            const currentTargetSource = inputController.getCurrentTargetSource();\n            const graphController = this._graphController;\n            graphController.openLabelEditor(currentTargetSource, currentTargetSource.getEdgeLabel(),\n                (target, value, hasChanged) => \n                {\n                    if (this._shouldDeleteEdgeWithEmptyLabel && !value)\n                    {\n                        graphController.getGraph().deleteEdge(currentTargetSource);\n                        graphController.emitGraphEvent(GRAPH_EVENT_EDGE_DELETE, {target: currentTargetSource});\n                    }\n                    else if (hasChanged)\n                    {\n                        graphController.emitGraphEvent(GRAPH_EVENT_EDGE_LABEL_CHANGE, {target: currentTargetSource});\n                    }\n                });\n            return true;\n        }\n\n        return false;\n    }\n\n    /** @override */\n    onAltInputEvent(pointer)\n    {\n        return this.onInputEvent(pointer);\n    }\n\n    /** @override */\n    onDragStart(pointer)\n    {\n        const inputController = this._inputController;\n        if (inputController.hasActiveTarget()) return false;\n        if (inputController.isTrashMode())\n        {\n            //Don't delete stuff if moving...\n            this._graphController.emitGraphEvent(GRAPH_EVENT_EDGE_EDIT_WHILE_DELETE);\n            return false;\n        }\n\n        const currentTargetType = inputController.getCurrentTargetType();\n        if (!inputController.isMoveMode(pointer.getInputAdapter()) && currentTargetType === EVENT_SOURCE_NODE)\n        {\n            const graphController = this._graphController;\n            const graph = graphController.getGraph();\n\n            const currentTargetSource = inputController.getCurrentTargetSource();\n\n            this._cachedEdgeQuads.radians = 0;\n            this._cachedEdgeQuads.length = 0;\n            this._cachedEdgeTo = null;\n            this._newEdge = true;\n            this._cachedPointer.x = pointer.x;\n            this._cachedPointer.y = pointer.y;\n\n            const targetEdge = graph.createEdge(currentTargetSource, this._cachedPointer);\n\n            inputController.bindActiveTarget(targetEdge, EVENT_SOURCE_FORWARD_ENDPOINT, false);\n            inputController.setNodeEventsOnly(true);\n            return true;\n        }\n        else if (currentTargetType === EVENT_SOURCE_FORWARD_ENDPOINT)\n        {\n            const currentTargetSource = inputController.getCurrentTargetSource();\n\n            this._cachedEdgeQuads.radians = currentTargetSource.getQuadraticRadians();\n            this._cachedEdgeQuads.length = currentTargetSource.getQuadraticLength();\n            this._cachedEdgeTo = currentTargetSource.getEdgeTo();\n            this._newEdge = false;\n            this._cachedPointer.x = pointer.x;\n            this._cachedPointer.y = pointer.y;\n\n            currentTargetSource.setQuadraticRadians(0);\n            currentTargetSource.setQuadraticLength(0);\n            currentTargetSource.setEdgeTo(this._cachedPointer);\n\n            inputController.bindActiveTarget(currentTargetSource, currentTargetType, false);\n            inputController.setNodeEventsOnly(true);\n            return true;\n        }\n        else if (currentTargetType === EVENT_SOURCE_EDGE)\n        {\n            const currentTargetSource = inputController.getCurrentTargetSource();\n\n            this._cachedEdgeQuads.radians = currentTargetSource.getQuadraticRadians();\n            this._cachedEdgeQuads.length = currentTargetSource.getQuadraticLength();\n            this._cachedEdgeTo = currentTargetSource.getEdgeTo();\n            this._newEdge = false;\n            this._cachedPointer.x = pointer.x;\n            this._cachedPointer.y = pointer.y;\n\n            inputController.bindActiveTarget(currentTargetSource, currentTargetType, false);\n            return true;\n        }\n\n        return false;\n    }\n\n    /** @override */\n    onDragMove(pointer)\n    {\n        const inputController = this._inputController;\n        const targetSource = inputController.getActiveTargetSource();\n        const targetType = inputController.getActiveTargetType();\n\n        if (targetType === EVENT_SOURCE_EDGE)\n        {\n            targetSource.setQuadraticByCoords(pointer.x, pointer.y);\n        }\n        else if (targetType === EVENT_SOURCE_FORWARD_ENDPOINT)\n        {\n            this.handleDragMoveForEndpoint(targetSource, targetType, pointer, inputController);\n        }\n    }\n\n    handleDragMoveForEndpoint(targetSource, targetType, pointer, inputController)\n    {\n        const immediateTargetType = inputController.getImmediateTargetType();\n        if (immediateTargetType === EVENT_SOURCE_NODE)\n        {\n            const immediateTargetSource = inputController.getImmediateTargetSource();\n            \n            // Restore the previously cached edge quadratics\n            if (targetSource.getEdgeTo() === this._cachedEdgeTo)\n            {\n                targetSource.setQuadraticRadians(this._cachedEdgeQuads.radians);\n                targetSource.setQuadraticLength(this._cachedEdgeQuads.length);\n            }\n            // Angle the self-loop edge towards the pointer\n            else if (targetSource.getEdgeFrom() === immediateTargetSource)\n            {\n                const from = targetSource.getEdgeFrom();\n                const dx = from.x - pointer.x;\n                const dy = from.y - pointer.y;\n                const radians = Math.PI + Math.atan2(dy, dx);\n                targetSource.setQuadraticRadians(radians);\n                targetSource.setEdgeTo(immediateTargetSource);\n            }\n            else\n            {\n                targetSource.setQuadraticRadians(0);\n                targetSource.setQuadraticLength(0);\n                targetSource.setEdgeTo(immediateTargetSource);\n            }\n        }\n        else\n        {\n            this._cachedPointer.x = lerp(this._cachedPointer.x, pointer.x, EDGE_POSITION_INTERPOLATION_DELTA);\n            this._cachedPointer.y = lerp(this._cachedPointer.y, pointer.y, EDGE_POSITION_INTERPOLATION_DELTA);\n\n            if (targetSource.getEdgeTo() !== this._cachedPointer)\n            {\n                targetSource.setQuadraticRadians(0);\n                targetSource.setQuadraticLength(0);\n\n                targetSource.setEdgeTo(this._cachedPointer);\n            }\n        }\n    }\n\n    /** @override */\n    onDragStop(pointer)\n    {\n        const inputController = this._inputController;\n        const targetSource = inputController.getActiveTargetSource();\n        const targetType = inputController.getActiveTargetType();\n        const isNewEdge = this._newEdge;\n\n        inputController.unbindActiveTarget();\n        if (targetType === EVENT_SOURCE_FORWARD_ENDPOINT)\n        {\n            inputController.setNodeEventsOnly(false);\n        }\n\n        const graphController = this._graphController;\n        if (inputController.isTrashMode())\n        {\n            graphController.getGraph().deleteEdge(targetSource);\n            graphController.emitGraphEvent(GRAPH_EVENT_EDGE_DELETE, {target: targetSource});\n            return;\n        }\n\n        if (targetType === EVENT_SOURCE_EDGE)\n        {\n            graphController.emitGraphEvent(GRAPH_EVENT_EDGE_QUAD_CHANGE, {target: targetSource});\n        }\n        else\n        {\n            const edgeTo = targetSource.getEdgeTo();\n            if (!edgeTo || edgeTo === this._cachedPointer)\n            {\n                if (this._shouldDeleteEdgePlaceholder)\n                {\n                    graphController.getGraph().deleteEdge(targetSource);\n                    graphController.emitGraphEvent(GRAPH_EVENT_EDGE_DELETE, {target: targetSource});\n                    return;\n                }\n                else\n                {\n                    targetSource.setEdgeTo(null);\n\n                    if (isNewEdge)\n                    {\n                        const labelFormatter = graphController.getLabelFormatter();\n                        if (labelFormatter)\n                        {\n                            targetSource.setEdgeLabel(labelFormatter.getDefaultEdgeLabel());\n                        }\n                        graphController.emitGraphEvent(GRAPH_EVENT_EDGE_CREATE, {target: targetSource});\n                    }\n                    else\n                    {\n                        graphController.emitGraphEvent(GRAPH_EVENT_EDGE_TO_CHANGE, {target: targetSource});\n                    }\n                }\n            }\n            else if (edgeTo !== this._cachedEdgeTo)\n            {\n                const labelFormatter = graphController.getLabelFormatter();\n                if (isNewEdge && labelFormatter)\n                {\n                    targetSource.setEdgeLabel(labelFormatter.getDefaultEdgeLabel());\n                }\n                graphController.openLabelEditor(targetSource, isNewEdge ? null : targetSource.getEdgeLabel(),\n                    (target, value, hasChanged) => \n                    {\n                        if (this._shouldDeleteEdgeWithEmptyLabel && !value)\n                        {\n                            graphController.getGraph().deleteEdge(targetSource);\n                            graphController.emitGraphEvent(GRAPH_EVENT_EDGE_DELETE, {target: targetSource});\n                        }\n                        else if (isNewEdge)\n                        {\n                            graphController.emitGraphEvent(GRAPH_EVENT_EDGE_CREATE, {target: targetSource});\n                        }\n                        else if (hasChanged)\n                        {\n                            graphController.emitGraphEvent(GRAPH_EVENT_EDGE_TO_CHANGE, {target: targetSource});\n                        }\n                    });\n            }\n        }\n    }\n}\n\nexport default GraphEdgeInputHandler;","import React from 'react';\n\nexport const EVENT_SOURCE_START_MARKER = 'start-marker';\n\nclass StartMarkerRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const position = this.props.position;\n        const radians = this.props.radians || Math.PI;\n        const offset = this.props.offset || 0;\n        const size = this.props.size || 24;\n        const color = this.props.color || '#000000';\n\n        const dx = Math.cos(radians);\n        const dy = Math.sin(radians);\n        const x = position.x + dx * offset;\n        const y = position.y + dy * offset;\n\n        // FIXME: this does not work for ALL arbitrary angles...\n        const radiusX = dx * size;\n        const diameterX = radiusX * 2;\n        // const radiusY = dy * size;\n\n        const onMouseOver = this.props.onMouseOver;\n        const onMouseOut = this.props.onMouseOut;\n        const pointerEvents = this.props.pointerEvents;\n\n        return (\n            <g>\n                <path\n                    d={'M' + x + ' ' + y +\n                        ' L' + (x + diameterX) + ' ' + (y + Math.sin(radians + Math.PI / 2) * size * 2) +\n                        ' L' + (x + diameterX) + ' ' + (y - Math.sin(radians + Math.PI / 2) * size * 2) +\n                        ' Z'}\n                    fill=\"transparent\"\n                    stroke={color}\n                    cursor=\"pointer\"\n                    onMouseOver={onMouseOver ? e =>\n                    {\n                        const value = e.target['value'] || (e.target['value'] = {});\n                        value.type = EVENT_SOURCE_START_MARKER;\n                        onMouseOver(e);\n                    } : null}\n                    onMouseOut={onMouseOut ? e =>\n                    {\n                        const value = e.target['value'] || (e.target['value'] = {});\n                        value.type = EVENT_SOURCE_START_MARKER;\n                        onMouseOut(e);\n                    } : null}\n                    pointerEvents={pointerEvents} />\n            </g>\n        );\n    }\n}\n\nexport default StartMarkerRenderer;\n","import AbstractInputHandler from 'util/input/AbstractInputHandler.js';\nimport { lerp } from 'util/MathHelper.js';\n\nimport { EVENT_SOURCE_START_MARKER } from '../renderer/StartMarkerRenderer.js';\nimport { EVENT_SOURCE_NODE } from '../renderer/NodeRenderer.js';\n\nexport const GRAPH_EVENT_START_MARKER_CHANGE = 'start-marker-change';\n\nconst START_MARKER_POSITION_INTERPOLATION_DELTA = 0.6;\n\nclass GraphStartMarkerInputHandler extends AbstractInputHandler\n{\n    constructor(inputController, graphController)\n    {\n        super();\n\n        this._inputController = inputController;\n        this._graphController = graphController;\n\n        this._ghostMarker = null;\n        this._cachedMarkerTarget = null;\n        this._cachedPointer = { x: 0, y: 0 };\n    }\n\n    /** @override */\n    onDragStart(pointer)\n    {\n        const inputController = this._inputController;\n        const currentTargetType = inputController.getCurrentTargetType();\n\n        if (currentTargetType === EVENT_SOURCE_START_MARKER)\n        {\n            const currentTargetSource = inputController.getCurrentTargetSource();\n            this._cachedMarkerTarget = currentTargetSource;\n            this._cachedPointer.x = pointer.x;\n            this._cachedPointer.y = pointer.y;\n            this._ghostMarker = this._cachedPointer;\n\n            inputController.bindActiveTarget(currentTargetSource, EVENT_SOURCE_START_MARKER, true);\n            inputController.setNodeEventsOnly(true);\n            return true;\n        }\n\n        return false;\n    }\n\n    /** @override */\n    onDragMove(pointer)\n    {\n        const inputController = this._inputController;\n        const targetType = inputController.getActiveTargetType();\n\n        if (targetType === EVENT_SOURCE_START_MARKER)\n        {\n            const immediateTargetType = inputController.getImmediateTargetType();\n            if (immediateTargetType === EVENT_SOURCE_NODE)\n            {\n                const immediateTargetSource = inputController.getImmediateTargetSource();\n\n                this._ghostMarker = immediateTargetSource;\n            }\n            else\n            {\n                this._cachedPointer.x = lerp(this._cachedPointer.x, pointer.x, START_MARKER_POSITION_INTERPOLATION_DELTA);\n                this._cachedPointer.y = lerp(this._cachedPointer.y, pointer.y, START_MARKER_POSITION_INTERPOLATION_DELTA);\n\n                if (this._ghostMarker !== this._cachedPointer)\n                {\n                    this._ghostMarker = this._cachedPointer;\n                }\n            }\n        }\n    }\n\n    /** @override */\n    onDragStop(pointer)\n    {\n        const inputController = this._inputController;\n        const targetType = inputController.getActiveTargetType();\n        inputController.unbindActiveTarget();\n\n        if (targetType === EVENT_SOURCE_START_MARKER)\n        {\n            if (!this._ghostMarker || this._ghostMarker === this._cachedPointer)\n            {\n                // Don't do anything, cause it should already be correct...\n            }\n            else\n            {\n                this._graphController.getGraph().setStartNode(this._ghostMarker);\n                this._graphController.emitGraphEvent(GRAPH_EVENT_START_MARKER_CHANGE, { target: this._ghostMarker });\n            }\n\n            this._ghostMarker = null;\n        }\n    }\n\n    getGhostMarker() { return this._ghostMarker; }\n}\n\nexport default GraphStartMarkerInputHandler;","class AbstractEventHandler\n{\n    constructor() {}\n\n    applyUndo(undoManager)\n    {\n        throw new Error('Undo operation for handler not supported');\n    }\n\n    applyRedo(undoManager)\n    {\n        throw new Error('Redo operation for handler not supported');\n    }\n}\n\nexport default AbstractEventHandler;\n","import React from 'react';\n\nclass ZoomInIcon extends React.PureComponent\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n                <path d=\"M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z\"/>\n            </svg>\n        );\n    }\n}\nexport default ZoomInIcon;\n","import React from 'react';\n\nclass ZoomOutIcon extends React.PureComponent\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14zM7 9h5v1H7z\"/>\n            </svg>\n        );\n    }\n}\nexport default ZoomOutIcon;\n","import React from 'react';\nimport Style from './ZoomWidget.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport ZoomInIcon from 'components/iconset/ZoomInIcon.js';\nimport ZoomOutIcon from 'components/iconset/ZoomOutIcon.js';\n\nclass ZoomWidget extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.onZoomIn = this.onZoomIn.bind(this);\n        this.onZoomOut = this.onZoomOut.bind(this);\n    }\n\n    onZoomIn(e)\n    {\n        const viewportAdapter = this.props.viewportAdapter;\n        const viewScale = -viewportAdapter.getScale() * 0.4;\n        viewportAdapter.addScale(viewScale);\n    }\n\n    onZoomOut(e)\n    {\n        const viewportAdapter = this.props.viewportAdapter;\n        const viewScale = viewportAdapter.getScale() * 0.75;\n        viewportAdapter.addScale(viewScale);\n    }\n\n    /** @override */\n    render()\n    {\n        const viewportAdapter = this.props.viewportAdapter;\n        const viewScale = 'x' + (1 / (viewportAdapter.getScale() || 1)).toFixed(2);\n\n        return (\n            <div id={this.props.id}\n                className={Style.zoom_container +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <IconButton className={Style.zoom_button} title=\"Zoom In\" onClick={this.onZoomIn}>\n                    <ZoomInIcon/>\n                </IconButton>\n                <IconButton className={Style.zoom_button} title=\"Zoom Out\" onClick={this.onZoomOut}>\n                    <ZoomOutIcon/>\n                </IconButton>\n                <label className={Style.zoom_label}>{viewScale}</label>\n            </div>\n        );\n    }\n}\n\nexport default ZoomWidget;\n","import React from 'react';\n\nclass PinpointIcon extends React.PureComponent\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm8.94 3c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06C6.83 3.52 3.52 6.83 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c4.17-.46 7.48-3.77 7.94-7.94H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"/>\n            </svg>\n        );\n    }\n}\nexport default PinpointIcon;\n","import React from 'react';\nimport Style from './FocusCenterWidget.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport PinpointIcon from 'components/iconset/PinpointIcon.js';\n\nconst OFFSET_EPSILON = 0.1;\n\nclass FocusCenterWidget extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick(e)\n    {\n        const viewportAdapter = this.props.viewportAdapter;\n        viewportAdapter.setOffset(0, 0);\n    }\n\n    /** @override */\n    render()\n    {\n        const viewportAdapter = this.props.viewportAdapter;\n\n        return (\n            <IconButton id={this.props.id}\n                className={Style.center_focus_button +\n                    ' ' + this.props.className}\n                style={this.props.style}\n                title={'Center Workspace'}\n                disabled={Math.abs(viewportAdapter.getOffsetX()) < OFFSET_EPSILON &&\n                    Math.abs(viewportAdapter.getOffsetY()) < OFFSET_EPSILON}\n                onClick={this.onClick}>\n                <PinpointIcon />\n            </IconButton>\n        );\n    }\n}\n\nexport default FocusCenterWidget;\n","import React from 'react';\nimport Style from './ViewportNavigationLayer.css';\n\nimport ZoomWidget from '../widgets/ZoomWidget.js';\nimport FocusCenterWidget from '../widgets/FocusCenterWidget.js';\n\nclass ViewportNavigationLayer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const viewportAdapter = this.props.viewportAdapter;\n\n        return (\n            <div id={this.props.id}\n                className={Style.navbar_container +\n\t\t\t\t\t' ' + this.props.className}\n                style={this.props.style}>\n                <ZoomWidget className={Style.navbar_widget_container}\n                    viewportAdapter={viewportAdapter} />\n                <FocusCenterWidget className={Style.navbar_widget}\n                    viewportAdapter={viewportAdapter} />\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default ViewportNavigationLayer;","/**\n * @module UserUtil\n * @desc Contains utility functions for user-related actions.\n */\n\n/**\n * Clears the graph with user-prompts.\n * @param {*} app the current app.\n * @param {*} graphOnly whether to only clear the graph only.\n * @param {*} callback a callback for when it is done.\n */\nexport function userClearGraph(app, graphOnly=false, callback=null)\n{\n    if (window.confirm(I18N.toString('alert.graph.clear')))\n    {\n        const module = app.getCurrentModule();\n        module.getGraphController().getGraph().clear();\n        if (!graphOnly)\n        {\n            app.getUndoManager().clear();\n            app.getSession().setProjectName(null);\n        }\n        else\n        {\n            app.getUndoManager().captureEvent();\n        }\n        if (callback) callback();\n    }\n}\n","/**\n * Represents and handles the transformations to the interactible viewport of\n * the SVG element.\n */\nclass ViewportAdapter\n{\n    constructor()\n    {\n        this._element = null;\n        this._offsetX = 0;\n        this._offsetY = 0;\n        this._nextOffsetX = 0;\n        this._nextOffsetY = 0;\n        this._offsetDamping = 0.1;\n\n        this._scaleFactor = 1;\n        this._minScale = 1;\n        this._maxScale = 1;\n    }\n\n    setElement(element)\n    {\n        this._element = element;\n        return this;\n    }\n\n    setMinScale(scale)\n    {\n        this._minScale = scale;\n        if (this._scaleFactor < this._minScale) this._scaleFactor = this._minScale;\n        return this;\n    }\n\n    setMaxScale(scale)\n    {\n        this._maxScale = scale;\n        if (this._scaleFactor > this._maxScale) this._scaleFactor = this._maxScale;\n        return this;\n    }\n\n    setOffsetDamping(damping)\n    {\n        this._offsetDamping = damping;\n        return this;\n    }\n\n    update()\n    {\n        const dx = this._nextOffsetX - this._offsetX;\n        this._offsetX += dx * this._offsetDamping;\n        const dy = this._nextOffsetY - this._offsetY;\n        this._offsetY += dy * this._offsetDamping;\n    }\n\n    transformScreenToView(clientX, clientY)\n    {\n        if (!this._element) return {x: clientX - this._offsetX, y: clientY - this._offsetY};\n\n        const ctm = this._element.getScreenCTM();\n        return {\n            x: (clientX - ctm.e) / ctm.a - this._offsetX,\n            y: (clientY - ctm.f) / ctm.d - this._offsetY\n        };\n    }\n\n    setOffset(x, y, immediate=false)\n    {\n        if (immediate)\n        {\n            this._nextOffsetX = this._offsetX = x;\n            this._nextOffsetY = this._offsetY = y;\n        }\n        else\n        {\n            this._nextOffsetX = x;\n            this._nextOffsetY = y;\n        }\n    }\n\n    addOffset(dx, dy, immediate=false)\n    {\n        if (immediate)\n        {\n            this._offsetX += dx;\n            this._offsetY += dy;\n            this._nextOffsetX = this._offsetX;\n            this._nextOffsetY = this._offsetY;\n        }\n        else\n        {\n            this._nextOffsetX += dx;\n            this._nextOffsetY += dy;\n        }\n    }\n\n    setScale(scale) { this._scaleFactor = Math.min(this._maxScale, Math.max(this._minScale, scale)); }\n    addScale(dscale) { this._scaleFactor = Math.min(this._maxScale, Math.max(this._minScale, this._scaleFactor + dscale)); }\n    getOffsetX() { return this._offsetX; }\n    getOffsetY() { return this._offsetY; }\n    getOffsetDamping() { return this._offsetDamping; }\n    getScale() { return this._scaleFactor; }\n    getMinScale() { return this._minScale; }\n    getMaxScale() { return this._maxScale; }\n    getElement() { return this._element; }\n}\n\nexport default ViewportAdapter;\n","class InputContext\n{\n    constructor()\n    {\n        this._inputHandlers = [];\n    }\n\n    addInputHandler(inputHandler, priority = -1)\n    {\n        if (priority < 0)\n        {\n            this._inputHandlers.push(inputHandler);\n        }\n        else\n        {\n            if (this._inputHandlers.length <= priority)\n            {\n                this._inputHandlers.length = priority + 1;\n            }\n\n            if (this._inputHandlers[priority])\n            {\n                this._inputHandlers.splice(1, 0, inputHandler);\n            }\n            else\n            {\n                this._inputHandlers[priority] = inputHandler;\n            }\n        }\n\n        return this;\n    }\n\n    removeInputHandler(inputHandler)\n    {\n        const index = this._inputHandlers.indexOf(inputHandler);\n        if (index >= 0)\n        {\n            this._inputHandlers[index] = null;\n        }\n        return this;\n    }\n\n    clearInputHandlers() { this._inputHandlers.length = 0; }\n\n    handleEvent(eventName, ...eventArgs)\n    {\n        //Let others handle this event...\n        for (const inputHandler of this._inputHandlers)\n        {\n            if (!inputHandler) continue;\n            const handlerEventCallback = inputHandler[eventName];\n            if (typeof handlerEventCallback === 'function')\n            {\n                if (handlerEventCallback.apply(inputHandler, eventArgs))\n                {\n                    return inputHandler;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    getInputHandlers() { return this._inputHandlers; }\n}\n\nexport default InputContext;","/**\n * Used by InputAdapter to hold input event data.\n */\nclass InputPointer\n{\n    constructor(inputAdapter, viewportAdapter, element)\n    {\n        this._inputAdapter = inputAdapter;\n        this._viewportAdapter = viewportAdapter;\n        this._element = element;\n\n        this._active = false;\n        this._x = 0;\n        this._y = 0;\n\n        this._inputpos = { x: 0, y: 0 };\n    }\n\n    get x() { return this._x; }\n    get y() { return this._y; }\n\n    setPosition(x, y)\n    {\n        this._x = x;\n        this._y = y;\n        return this;\n    }\n\n    beginInput()\n    {\n        this._active = true;\n        this._inputpos.x = this._x;\n        this._inputpos.y = this._y;\n    }\n\n    /**\n     * Returns the position which the input began at. This is mutable.\n     */\n    getInputEventPosition() { return this._inputpos; }\n\n    changeInputEventPosition(x, y)\n    {\n        this._inputpos.x = x;\n        this._inputpos.y = y;\n    }\n\n    endInput() { this._active = false; }\n    isActive() { return this._active; }\n\n    getDistanceSquToInitial()\n    {\n        const pos = this._inputpos;\n        const dx = pos.x - this._x;\n        const dy = pos.y - this._y;\n        return dx * dx + dy * dy;\n    }\n\n    /**\n     * The DOM element for which this pointer provides context for; this should be\n     * the same element as in the input adapter.\n     */\n    getElement() { return this._element; }\n\n    /**\n     * The viewport for this pointer operates within; this should be the same\n     * viewport as in the input adapter.\n     */\n    getViewportAdapter() { return this._viewportAdapter; }\n\n    /**\n     * The input adapter that controls this pointer's properties\n     */\n    getInputAdapter() { return this._inputAdapter; }\n}\n\nexport default InputPointer;\n","import InputContext from './InputContext.js';\nimport InputPointer from './InputPointer.js';\n\nconst LONG_TAP_TICKS = 600;\nconst DOUBLE_TAP_TICKS = 600;\nconst SCROLL_SENSITIVITY = 1.0 / 300.0;\nconst CURSOR_RADIUS = 4;\nconst CURSOR_RADIUS_SQU = CURSOR_RADIUS * CURSOR_RADIUS;\nconst DRAGGING_BUFFER = 18;\nconst DRAGGING_BUFFER_SQU = DRAGGING_BUFFER * DRAGGING_BUFFER;\n\n/**\n * Provides an interface for input handlers to interact with a HTMLElement.\n * Each listenable element should correspond to only a single InputAdapter.\n */\nclass InputAdapter extends InputContext\n{\n    constructor(viewportAdapter)\n    {\n        super();\n        \n        this._viewportAdapter = viewportAdapter;\n\n        this._contexts = [];\n        this._activeDragHandler = null;\n\n        this._element = null;\n        this._cursor = {\n            _mousemove: null,\n            _mouseup: null,\n            _touchmove: null,\n            _touchend: null,\n            _timer: null\n        };\n        this._pointer = null;\n\n        //Although dragging could be in pointer, it should be here to allow\n        //the adapter to be independent of pointer.\n        this._dragging = false;\n        this._altinput = false;\n\n        this._holdInputDelay = LONG_TAP_TICKS;\n        this._dblInputDelay = DOUBLE_TAP_TICKS;\n        this._scrollSensitivity = SCROLL_SENSITIVITY;\n        this._minTapRadius = CURSOR_RADIUS_SQU * 16;\n        this._draggingRadiusSqu = CURSOR_RADIUS_SQU + DRAGGING_BUFFER_SQU;\n\n        this._prevEmptyInput = false;\n        this._prevEmptyTime = 0;\n        this._prevEmptyX = 0;\n        this._prevEmptyY = 0;\n\n        this.onContextMenu = this.onContextMenu.bind(this);\n        this.onMouseDown = this.onMouseDown.bind(this);\n        this.onMouseMove = this.onMouseMove.bind(this);\n        this.onTouchStart = this.onTouchStart.bind(this);\n        this.onWheel = this.onWheel.bind(this);\n\n        this.onMouseDownThenMove = this.onMouseDownThenMove.bind(this);\n        this.onMouseDownThenUp = this.onMouseDownThenUp.bind(this);\n        this.onTouchStartThenMove = this.onTouchStartThenMove.bind(this);\n        this.onTouchStartThenEnd = this.onTouchStartThenEnd.bind(this);\n\n        this.onDelayedInputDown = this.onDelayedInputDown.bind(this);\n    }\n\n    bindContext(context)\n    {\n        if (!(context instanceof InputContext))\n            throw new Error('Cannot bind invalid context - must be an instance of InputContext');\n\n        this._contexts.unshift(context);\n        return this;\n    }\n\n    bindContextAsLast(context)\n    {\n        if (!(context instanceof InputContext))\n            throw new Error('Cannot bind invalid context - must be an instance of InputContext');\n\n        this._contexts.push(context);\n        return this;\n    }\n\n    unbindContext(context = null)\n    {\n        if (context)\n        {\n            const index = this._contexts.indexOf(context);\n            if (index >= 0)\n            {\n                this._contexts.splice(index, 1);\n                return context;\n            }\n            else\n            {\n                return null;\n            }\n        }\n        else\n        {\n            return this._contexts.shift();\n        }\n    }\n\n    clearContexts()\n    {\n        this._contexts.length = 0;\n    }\n\n    hasContexts()\n    {\n        return this._contexts.length > 0;\n    }\n\n    getCurrentContext()\n    {\n        if (this._contexts.length > 0)\n        {\n            return this._contexts[this._contexts.length - 1];\n        }\n        else\n        {\n            return this;\n        }\n    }\n\n    initialize(element)\n    {\n        if (!(element instanceof SVGElement)) throw new Error('Missing SVG element for input adapter\\'s viewport');\n        if (this._element) throw new Error('Trying to initialize an InputAdapter already initialized');\n\n        this._viewportAdapter.setElement(this._element = element);\n        this._pointer = new InputPointer(this, this._viewportAdapter, this._element);\n\n        this._element.addEventListener('mousedown', this.onMouseDown);\n        this._element.addEventListener('mousemove', this.onMouseMove);\n        this._element.addEventListener('touchstart', this.onTouchStart);\n        this._element.addEventListener('touchmove', this.onTouchMove);\n        this._element.addEventListener('contextmenu', this.onContextMenu);\n        this._element.addEventListener('wheel', this.onWheel);\n    }\n\n    destroy()\n    {\n        if (!this._element) throw new Error('Trying to destroy an InputAdapter that is not yet initialized');\n\n        this._element.removeEventListener('mousedown', this.onMouseDown);\n        this._element.removeEventListener('mousemove', this.onMouseMove);\n        this._element.removeEventListener('touchstart', this.onTouchStart);\n        this._element.removeEventListener('contextmenu', this.onContextMenu);\n        this._element.removeEventListener('wheel', this.onWheel);\n\n        this._element = null;\n    }\n\n    update()\n    {\n        if (this._element)\n        {\n            //Smooth transition offset\n            this._viewportAdapter.update();\n        }\n    }\n\n    /** @override */\n    handleEvent(eventName, ...eventArgs)\n    {\n        for (const context of this._contexts)\n        {\n            const result = context.handleEvent(eventName, ...eventArgs);\n            if (result)\n            {\n                return result;\n            }\n        }\n\n        return super.handleEvent(eventName, ...eventArgs);\n    }\n\n    onMouseDown(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const cursor = this._cursor;\n\n        //Blur any element in focus\n        document.activeElement.blur();\n        this._element.focus();\n\n        //Make sure mouse move is deleted, just in case\n        if (cursor._mousemove)\n        {\n            document.removeEventListener('mousemove', cursor._mousemove);\n            cursor._mousemove = null;\n        }\n        //Make sure mouse up is deleted, just in case\n        if (cursor._mouseup)\n        {\n            document.removeEventListener('mouseup', cursor._mouseup);\n            cursor._mouseup = null;\n        }\n\n        //HACK: To allow Mac's to use ctrl+click as right clicks\n        const button = e.ctrlKey ? 2 : e.button;\n\n        //Is this a valid mouse down?\n        if (this.onInputDown(e.clientX, e.clientY, button))\n        {\n            //Start mouse down logic...\n            cursor._mousemove = this.onMouseDownThenMove;\n            cursor._mouseup = this.onMouseDownThenUp;\n\n            document.addEventListener('mousemove', cursor._mousemove);\n            document.addEventListener('mouseup', cursor._mouseup);\n        }\n\n        return false;\n    }\n\n    onMouseMove(e)\n    {\n        const mouse = this._viewportAdapter.transformScreenToView(e.clientX, e.clientY);\n        const pointer = this._pointer;\n        pointer.setPosition(mouse.x, mouse.y);\n\n        if (this.handleEvent('onMoveInputEvent', pointer))\n        {\n            e.stopPropagation();\n            e.preventDefault();\n\n            this.cancelInputEvent();\n        }\n    }\n\n    onMouseDownThenMove(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        this.onInputMove(e.clientX, e.clientY);\n\n        return false;\n    }\n\n    onMouseDownThenUp(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const cursor = this._cursor;\n\n        //Make sure mouse move is deleted, just in case\n        if (cursor._mousemove)\n        {\n            document.removeEventListener('mousemove', cursor._mousemove);\n            cursor._mousemove = null;\n        }\n        //Make sure mouse up is deleted, just in case\n        if (cursor._mouseup)\n        {\n            document.removeEventListener('mouseup', cursor._mouseup);\n            cursor._mouseup = null;\n        }\n\n        this.onInputUp(e.clientX, e.clientY);\n\n        return false;\n    }\n\n    onTouchStart(e)\n    {\n        if (e.changedTouches.length == 1)\n        {\n            e.stopPropagation();\n            e.preventDefault();\n\n            const cursor = this._cursor;\n\n            //Blur any element in focus\n            document.activeElement.blur();\n            this._element.focus();\n\n            //Make sure touch move is deleted, just in case\n            if (cursor._touchmove)\n            {\n                document.removeEventListener('touchmove', cursor._touchmove);\n                cursor._touchmove = null;\n            }\n            //Make sure touch end is deleted, just in case\n            if (cursor._touchend)\n            {\n                document.removeEventListener('touchend', cursor._touchend);\n                cursor._touchend = null;\n            }\n\n            const touch = e.changedTouches[0];\n            //Is this a valid touch start?\n            if (this.onInputDown(touch.clientX, touch.clientY, 0))\n            {\n                //Start touch start logic...\n                cursor._touchmove = this.onTouchStartThenMove;\n                cursor._touchend = this.onTouchStartThenEnd;\n\n                document.addEventListener('touchmove', cursor._touchmove);\n                document.addEventListener('touchend', cursor._touchend);\n            }\n\n            return false;\n        }\n    }\n\n    onTouchStartThenEnd(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const cursor = this._cursor;\n\n        //Make sure mouse move is deleted, just in case\n        if (cursor._touchmove)\n        {\n            document.removeEventListener('touchmove', cursor._touchmove);\n            cursor._touchmove = null;\n        }\n        //Make sure mouse up is deleted, just in case\n        if (cursor._touchend)\n        {\n            document.removeEventListener('touchend', cursor._touchend);\n            cursor._touchend = null;\n        }\n\n        const touch = e.changedTouches[0];\n        this.onInputUp(touch.clientX, touch.clientY);\n\n        return false;\n    }\n\n    onTouchStartThenMove(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const touch = e.changedTouches[0];\n        this.onInputMove(touch.clientX, touch.clientY);\n\n        return false;\n    }\n\n    onContextMenu(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        return false;\n    }\n\n    onWheel(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const pointer = this._pointer;\n        const dy = e.deltaY * this._scrollSensitivity;\n        const prev = this._viewportAdapter.getScale();\n        const next = prev + dy;\n\n        //Let others handle this event...\n        if (!this.handleEvent('onZoomChange', pointer, next, prev))\n        {\n            this._viewportAdapter.setScale(next);\n        }\n\n        return false;\n    }\n\n    onInputDown(x, y, button)\n    {\n        //Setup for hold timer...\n        const cursor = this._cursor;\n        const pointer = this._pointer;\n        const mouse = this._viewportAdapter.transformScreenToView(x, y);\n        pointer.setPosition(mouse.x, mouse.y);\n\n        this._dragging = false;\n        this._altinput = button == 2;\n\n        //Let others handle this event...\n        if (!this.handleEvent('onPreInputEvent', pointer))\n        {\n            pointer.beginInput();\n            cursor._timer = setTimeout(this.onDelayedInputDown, this._holdInputDelay);\n            return true;\n        }\n\n        return false;\n    }\n\n    onDelayedInputDown()\n    {\n        //That means the input is remaining still (like a hold)...\n        if (!this._dragging)\n        {\n            this._altinput = true;\n        }\n    }\n\n    onInputMove(x, y)\n    {\n        const pointer = this._pointer;\n        const mouse = this._viewportAdapter.transformScreenToView(x, y);\n        pointer.setPosition(mouse.x, mouse.y);\n\n        if (!this._dragging)\n        {\n            if (pointer.getDistanceSquToInitial() > this._draggingRadiusSqu)\n            {\n                this._dragging = true;\n\n                //Let others handle this event...\n                const inputEventPosition = pointer.getInputEventPosition();\n                const result = this.handleEvent('onDragStart', pointer, inputEventPosition.x, inputEventPosition.y);\n                if (!result)\n                {\n                    this._dragging = false;\n\n                    //TODO: you could NOT cancel the event and just update the target?\n                    //If so, who is the initial target then?\n\n                    //Stop the input event early...\n                    this.cancelInputEvent();\n                }\n                else\n                {\n                    this._activeDragHandler = result;\n                }\n            }\n            else\n            {\n                //Still a click or hold...\n            }\n        }\n        else\n        {\n            //Continue to drag...\n            if (this._activeDragHandler)\n            {\n                this._activeDragHandler.onDragMove(pointer);\n            }\n        }\n    }\n\n    onInputUp(x, y)\n    {\n        const cursor = this._cursor;\n        const timer = cursor._timer;\n        if (timer)\n        {\n            clearTimeout(timer);\n            cursor._timer = null;\n        }\n\n        //Update pointer target to final position\n        const pointer = this._pointer;\n        const mouse = this._viewportAdapter.transformScreenToView(x, y);\n        pointer.setPosition(mouse.x, mouse.y);\n\n        if (this._dragging)\n        {\n            //Stop dragging!\n            if (this._activeDragHandler)\n            {\n                this._activeDragHandler.onDragStop(pointer);\n                this._activeDragHandler = null;\n            }\n        }\n        else\n        {\n            if (this._altinput)\n            {\n                //Alt Tap!\n                this.handleEvent('onAltInputEvent', pointer);\n            }\n            else\n            {\n                //If the input was not consumed...\n                if (!this.handleEvent('onInputEvent', pointer))\n                {\n                    //Try for double tap...\n                    const dx = x - this._prevEmptyX;\n                    const dy = y - this._prevEmptyY;\n                    const dist = dx * dx + dy * dy;\n                    const dt = Date.now() - this._prevEmptyTime;\n                    if (this._prevEmptyInput &&\n                        dist < this._minTapRadius &&\n                        dt < this._dblInputDelay)\n                    {\n                        //Double tap!\n                        this.handleEvent('onDblInputEvent', pointer);\n\n                        this._prevEmptyInput = false;\n                    }\n                    else\n                    {\n                        this._prevEmptyInput = true;\n                        this._prevEmptyTime = Date.now();\n                        this._prevEmptyX = x;\n                        this._prevEmptyY = y;\n                    }\n                }\n            }\n        }\n\n        pointer.endInput();\n        this.handleEvent('onPostInputEvent', pointer);\n    }\n\n    cancelInputEvent()\n    {\n        const pointer = this._pointer;\n        const cursor = this._cursor;\n\n        //Make sure mouse move is deleted, just in case\n        if (cursor._mousemove)\n        {\n            document.removeEventListener('mousemove', cursor._mousemove);\n            cursor._mousemove = null;\n        }\n        //Make sure mouse up is deleted, just in case\n        if (cursor._mouseup)\n        {\n            document.removeEventListener('mouseup', cursor._mouseup);\n            cursor._mouseup = null;\n        }\n\n        const timer = cursor._timer;\n        if (timer)\n        {\n            clearTimeout(timer);\n            cursor._timer = null;\n        }\n\n        pointer.endInput();\n        this.handleEvent('onPostInputEvent', pointer);\n    }\n\n    getContexts() { return this._contexts; }\n    getActiveElement() { return this._element; }\n    getViewportAdapter() { return this._viewportAdapter; }\n    getPointerX() { return this._pointer ? this._pointer.x : 0; }\n    getPointerY() { return this._pointer ? this._pointer.y : 0; }\n    isPointerActive() { return this._pointer ? this._pointer.isActive() : false; }\n    isUsingTouch() { return this._cursor._touchmove || this._cursor._touchend; }\n    isAltInput() { return this._altinput; }\n    isDragging() { return this._dragging; }\n}\n\nexport default InputAdapter;","import React from 'react';\nimport Style from './ViewportComponent.css';\n\nimport ViewportAdapter from '../ViewportAdapter.js';\nimport InputAdapter from '../InputAdapter.js';\nimport AbstractInputHandler from '../AbstractInputHandler.js';\n\nconst DEFAULT_VIEW_SIZE = 300;\nconst SMOOTH_OFFSET_DAMPING = 0.4;\nconst MIN_SCALE = 0.1;\nconst MAX_SCALE = 10;\n\nclass ViewportComponent extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this._ref = React.createRef();\n\n        this._viewportAdapter = new ViewportAdapter()\n            .setMinScale(MIN_SCALE)\n            .setMaxScale(MAX_SCALE)\n            .setOffsetDamping(SMOOTH_OFFSET_DAMPING);\n        this._inputAdapter = new InputAdapter(this._viewportAdapter);\n    }\n\n    addInputHandler(inputHandler)\n    {\n        if (!(inputHandler instanceof AbstractInputHandler)) throw new Error('input handler must be an instanceof AbstractInputHandler');\n        this._inputAdapter.addInputHandler(inputHandler);\n        return this;\n    }\n\n    /** @override */\n    componentDidMount()\n    {\n        this._inputAdapter.initialize(this._ref.current);\n    }\n\n    /** @override */\n    componentWillUnmount()\n    {\n        this._inputAdapter.destroy();\n    }\n\n    /** @override */\n    componentDidUpdate()\n    {\n        this._inputAdapter.update();\n    }\n\n    getSVGTransformString()\n    {\n        const viewport = this._viewportAdapter;\n        return 'translate(' + viewport.getOffsetX() + ' ' + viewport.getOffsetY() + ')';\n    }\n\n    getSVGViewBoxString(baseViewSize)\n    {\n        const viewport = this._viewportAdapter;\n        const viewSize = baseViewSize * Math.max(Number.MIN_VALUE, viewport.getScale());\n        const halfViewSize = viewSize / 2;\n        return (-halfViewSize) + ' ' + (-halfViewSize) + ' ' + viewSize + ' ' + viewSize;\n    }\n\n    getSVGElement()\n    {\n        return this._ref.current;\n    }\n\n    getInputAdapter()\n    {\n        return this._inputAdapter;\n    }\n\n    getViewportAdapter()\n    {\n        return this._inputAdapter.getViewportAdapter();\n    }\n\n    /** @override */\n    render()\n    {\n        const viewBox = this.getSVGViewBoxString(this.props.viewSize || DEFAULT_VIEW_SIZE);\n        const transform = this.getSVGTransformString();\n\n        return (\n            <svg ref={this._ref}\n                id={this.props.id}\n                className={Style.viewport_component + ' ' + this.props.className}\n                style={this.props.style}\n                viewBox={viewBox}>\n                <g transform={transform}>\n                    {this.props.children}\n                </g>\n            </svg>\n        );\n    }\n}\n\nexport default ViewportComponent;","import GraphNode from 'graph2/element/GraphNode.js';\n\nconst DEFAULT_MOVE_MODE_FIRST = true;\n\nclass InputController\n{\n    constructor()\n    {\n        this._trashMode = false;\n        this._nodeOnly = false;\n        this._moveModeFirst = DEFAULT_MOVE_MODE_FIRST;\n        this._handlingInput = false;\n\n        /*\n            This is the current target for the event. If this is a multi-stage event,\n            such as dragging, then this will only refer to the first target, the source\n            of the event.\n        */\n        this._target = {\n            source: null,\n            type: null\n        };\n\n        /*\n            This is the active target. It can only be manually set by binding source and\n            type through bindActiveTarget(). This allows future input handling to ignore\n            this target for intersection tests, etc.\n\n            NOTE: You must bind AND unbind the active target.\n        */\n        this._activeTarget = {\n            source: null,\n            type: null,\n            input: true\n        };\n\n        /*\n            This is the immediate target under the cursor. Regardless of input event, this\n            will always refer to the element directly intersecting the cursor. The active target\n            with the proper options may be ignored as possible candidates.\n        */\n        this._immediateTarget = {\n            source: null,\n            type: null\n        };\n\n        // This is only used if set.\n        this._selectionBox = null;\n\n        // Although not used here, it is used to connect to components.\n        this.onMouseOver = this.onMouseOver.bind(this);\n        this.onMouseOut = this.onMouseOut.bind(this);\n    }\n\n    setSelectionBox(selectionBox)\n    {\n        this._selectionBox = selectionBox;\n        return this;\n    }\n\n    setTrashMode(flag)\n    {\n        this._trashMode = flag;\n        return this;\n    }\n\n    setNodeEventsOnly(flag)\n    {\n        this._nodeOnly = flag;\n        return this;\n    }\n\n    setMoveModeFirst(flag)\n    {\n        this._moveModeFirst = flag;\n        return this;\n    }\n\n    /** @override */\n    onPreInputEvent(pointer)\n    {\n        this._handlingInput = true;\n\n        this.updateCurrentTarget(this._immediateTarget.source, this._immediateTarget.type);\n        return false;\n    }\n\n    /** @override */\n    onPostInputEvent(pointer)\n    {\n        this.updateCurrentTarget(null, null);\n        this._handlingInput = false;\n    }\n\n    onMouseOver(e)\n    {\n        const target = e.target;\n        const value = target['value'];\n        this._immediateTarget.source = value.source;\n        this._immediateTarget.type = value.type;\n\t\t\n        // Although you can access this, it cannot be a property for \"active\" targets.\n        // This is because those properties are used for comparison and equality. The\n        // extra data could be used for that, but it's up to you to manage that.\n        this._immediateTarget.data = value;\n    }\n\n    onMouseOut(e)\n    {\n        this._immediateTarget.source = null;\n        this._immediateTarget.type = null;\n\n        this._immediateTarget.data = null;\n    }\n\n    bindActiveTarget(targetSource, targetType, pointerEvent = true)\n    {\n        this._activeTarget.source = targetSource;\n        this._activeTarget.type = targetType;\n        this._activeTarget.input = pointerEvent;\n    }\n\n    unbindActiveTarget()\n    {\n        this._activeTarget.source = null;\n        this._activeTarget.type = null;\n        this._activeTarget.input = false;\n    }\n\n    updateCurrentTarget(targetSource, targetType)\n    {\n        this._target.source = targetSource;\n        this._target.type = targetType;\n    }\n\n    getActiveTargetSource() { return this._activeTarget.source; }\n    getActiveTargetType() { return this._activeTarget.type; }\n    hasActiveTarget() { return this._activeTarget.type !== null; }\n\n    hasPointerEvents(targetSource)\n    {\n        if (this._activeTarget.source === targetSource) return this._activeTarget.input;\n        if (this._nodeOnly) return targetSource instanceof GraphNode;\n        return true;\n    }\n\n    getCurrentTargetSource() { return this._target.source; }\n    getCurrentTargetType() { return this._target.type; }\n    hasCurrentTarget() { return this._target.type !== null; }\n\n    getImmediateTargetSource() { return this._immediateTarget.source; }\n    getImmediateTargetType() { return this._immediateTarget.type; }\n    hasImmediateTarget() { return this._immediateTarget.type !== null; }\n\n    isTrashMode() { return this._trashMode; }\n    isMoveMode(inputAdapter) { return !(this._moveModeFirst ^ !inputAdapter.isAltInput()); }\n    isNodeEventsOnly() { return this._nodeOnly; }\n    isMoveModeFirst() { return this._moveModeFirst; }\n\n    isHandlingInput() { return this._handlingInput; }\n\n    getSelectionBox() { return this._selectionBox; }\n}\n\nexport default InputController;","import AbstractInputHandler from 'util/input/AbstractInputHandler.js';\n\nclass ViewportInputHandler extends AbstractInputHandler\n{\n    constructor(inputController)\n    {\n        super();\n\n        this._inputController = inputController;\n\n        this._cachedPosition = {x: 0, y: 0};\n    }\n\n    /** @override */\n    onDragStart(pointer)\n    {\n        const inputController = this._inputController;\n        if (inputController.hasActiveTarget()) return false;\n        if (inputController.hasCurrentTarget()) return false;\n        if (!inputController.isMoveMode(pointer.getInputAdapter())) return false;\n\n        const inputEventPosition = pointer.getInputEventPosition();\n        this._cachedPosition.x = inputEventPosition.x;\n        this._cachedPosition.y = inputEventPosition.y;\n        return true;\n    }\n  \n    /** @override */\n    onDragMove(pointer)\n    {\n        const dx = pointer.x - this._cachedPosition.x;\n        const dy = pointer.y - this._cachedPosition.y;\n\n        const viewport = pointer.getViewportAdapter();\n        viewport.addOffset(dx, dy, true);\n\n        /*\n\t\t// We don't want to update it due to how viewports are positioned.\n\t\tthis._cachedPosition.x = pointer.x;\n\t\tthis._cachedPosition.y = pointer.y;\n\t\t*/\n    }\n  \n    /** @override */\n    onDragStop(pointer)\n    {\n        // Do nothing.\n    }\n}\n\nexport default ViewportInputHandler;","import React from 'react';\n\nimport ViewportComponent from 'util/input/components/ViewportComponent.js';\n\nimport InputController from 'graph2/controller/InputController.js';\nimport InputContext from 'util/input/InputContext.js';\n\nimport ViewportInputHandler from 'graph2/inputhandler/ViewportInputHandler.js';\n\nclass GraphView extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this._inputController = new InputController();\n        this._inputContext = new InputContext();\n\n        this._viewportComponent = React.createRef();\n\n        this._viewportInputHandler = new ViewportInputHandler(this._inputController);\n    }\n\n    /** @override */\n    componentDidMount()\n    {\n        const inputContext = this._inputContext;\n        const viewport = this._viewportComponent.current;\n        const inputAdapter = viewport.getInputAdapter();\n        inputContext\n            .addInputHandler(this._inputController)\n            .addInputHandler(this._viewportInputHandler, 10);\n        inputAdapter.bindContext(inputContext);\n    }\n\n    /** @override */\n    componentWillUnmount()\n    {\n        const inputContext = this._inputContext;\n        const viewport = this._viewportComponent.current;\n        const inputAdapter = viewport.getInputAdapter();\n        inputContext.clearInputHandlers();\n        inputAdapter.unbindContext(inputContext);\n    }\n\n    moveViewToPosition(x, y)\n    {\n        // Center view at position; inverted due to graph-to-screen space\n        this.getViewportAdapter().setOffset(-x, -y);\n    }\n\n    getInputController() { return this._inputController; }\n    getInputContext() { return this._inputContext; }\n\n    getViewportComponent() { return this._viewportComponent.current; }\n    getInputAdapter() { return this._viewportComponent.current.getInputAdapter(); }\n    getViewportAdapter() { return this._viewportComponent.current.getViewportAdapter(); }\n\n    /** @override */\n    render()\n    {\n        const inputController = this._inputController;\n        const viewport = this._viewportComponent.current;\n        const renderGraph = this.props.renderGraph;\n        const renderOverlay = this.props.renderOverlay;\n\n        return (\n            <div id={this.props.id}\n                className={this.props.className}\n                style={this.props.style}>\n                <ViewportComponent ref={this._viewportComponent}>\n                    {renderGraph && viewport && renderGraph(this, viewport, inputController)}\n                </ViewportComponent>\n                {renderOverlay && viewport && renderOverlay(this, viewport, inputController)}\n            </div>\n        );\n    }\n}\n\nexport default GraphView;\n","import React from 'react';\n\nconst FILL_OPACITY = 0.1;\n\nclass BoxRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const visible = this.props.visible;\n        const fromX = this.props.fromX || 0;\n        const fromY = this.props.fromY || 0;\n        const toX = this.props.toX || fromX + 1;\n        const toY = this.props.toY || fromY + 1;\n        const color = this.props.color || '#000000';\n\n        const dx = toX - fromX;\n        const dy = toY - fromY;\n\n        return (\n            <g>\n                {visible &&\n                    <rect className=\"graph-ui\"\n                        x={Math.min(toX, fromX)}\n                        y={Math.min(toY, fromY)}\n                        width={Math.abs(dx)}\n                        height={Math.abs(dy)}\n                        stroke={color}\n                        fill={color}\n                        fillOpacity={FILL_OPACITY} />}\n            </g>\n        );\n    }\n}\n\nexport default BoxRenderer;\n","import React from 'react';\n\nconst HIGHLIGHT_LINE_WIDTH = 3;\nconst HIGHLIGHT_LINE_ARRAY = [8, 6];\nconst HIGHLIGHT_OFFSET = 0;\n\nclass GraphHighlightRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const center = this.props.center;\n        const stroke = this.props.color || '#CCCCCC';\n        const radius = this.props.radius || 24;\n        \n        return (\n            <React.Fragment>\n                <circle className=\"graph-ui\"\n                    cx={center.x} cy={center.y} r={radius}\n                    stroke={stroke}\n                    strokeDashoffset={HIGHLIGHT_OFFSET}\n                    strokeDasharray={HIGHLIGHT_LINE_ARRAY}\n                    strokeWidth={HIGHLIGHT_LINE_WIDTH}\n                    fill=\"none\"\n                    pointerEvents=\"none\" />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default GraphHighlightRenderer;\n","import React from 'react';\n\nimport GraphHighlightRenderer from '../../renderer/GraphHighlightRenderer.js';\n\nconst HIGHLIGHT_OFFSET = 4;\n\nclass GraphHighlightLayer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const highlights = [];\n\n        const nodes = this.props.nodes;\n        if (nodes)\n        {\n            for(const node of nodes)\n            {\n                highlights.push(\n                    <GraphHighlightRenderer\n                        key={node.getGraphElementID()}\n                        center={node}\n                        radius={node.getNodeSize() + HIGHLIGHT_OFFSET}/>\n                );\n            }\n        }\n\n        const edges = this.props.edges;\n        if (edges)\n        {\n            for(const edge of edges)\n            {\n                highlights.push(\n                    <GraphHighlightRenderer\n                        key={edge.getGraphElementID()}\n                        center={edge.getCenterPoint()}/>\n                );\n            }\n        }\n\n        return (\n            <g>\n                {highlights}\n            </g>\n        );\n    }\n}\n\nexport default GraphHighlightLayer;","class SelectionBox\n{\n    constructor()\n    {\n        this._boundingBox = {\n            fromX: 0, fromY: 0,\n            toX: 0, toY: 0,\n            visible: false\n        };\n\n        this.targets = [];\n    }\n\n    getBoundingBox() { return this._boundingBox; }\n\n    getSelection(graph, forceUpdate = false)\n    {\n        if (forceUpdate)\n        {\n            const box = this._boundingBox;\n            const mx = Math.max(box.toX, box.fromX);\n            const my = Math.max(box.toY, box.fromY);\n            const lx = Math.min(box.toX, box.fromX);\n            const ly = Math.min(box.toY, box.fromY);\n            this.clearSelection();\n            getNodesWithin(graph, lx, ly, mx, my, this.targets);\n        }\n\n        return this.targets;\n    }\n\n    beginSelection(graph, x, y)\n    {\n        const box = this._boundingBox;\n        box.fromX = box.toX = x;\n        box.fromY = box.toY = y;\n        this.clearSelection();\n\n        box.visible = true;\n    }\n\n    updateSelection(graph, x, y)\n    {\n        const box = this._boundingBox;\n        box.toX = x;\n        box.toY = y;\n        this.getSelection(graph, true);\n    }\n\n    endSelection(graph, x, y)\n    {\n        const box = this._boundingBox;\n        box.toX = x;\n        box.toY = y;\n        this.getSelection(graph, true);\n\n        box.visible = false;\n    }\n\t\n    isTargetInSelection(target) { return this.targets.includes(target); }\n    hasSelection() { return this.targets.length > 0; }\n    clearSelection() { this.targets.length = 0; }\n    isVisible() { return this._boundingBox.visible; }\n}\n\nfunction getNodesWithin(graph, x1, y1, x2, y2, dst)\n{\n    const fromX = Math.min(x1, x2);\n    const fromY = Math.min(y1, y2);\n    const toX = Math.max(x1, x2);\n    const toY = Math.max(y1, y2);\n\n    for (const node of graph.getNodes())\n    {\n        if (node.x >= fromX && node.x < toX &&\n\t\t\tnode.y >= fromY && node.y < toY)\n        {\n            dst.push(node);\n        }\n    }\n    return dst;\n}\n\nexport default SelectionBox;\n","import AbstractInputHandler from 'util/input/AbstractInputHandler.js';\n\nclass SelectionBoxInputHandler extends AbstractInputHandler\n{\n    constructor(inputController, graphController, selectionBox)\n    {\n        super();\n\n        this._inputController = inputController;\n        this._graphController = graphController;\n        this._selectionBox = selectionBox;\n    }\n\n    /** @override */\n    onPreInputEvent(pointer)\n    {\n        const inputController = this._inputController;\n        const selectionBox = this._selectionBox;\n        if (selectionBox.hasSelection())\n        {\n            if (!inputController.isMoveMode(pointer.getInputAdapter()) || !selectionBox.isTargetInSelection(inputController.getImmediateTargetSource()))\n            {\n                selectionBox.clearSelection();\n            }\n        }\n\n        return false;\n    }\n\n    /** @override */\n    onDragStart(pointer)\n    {\n        const inputController = this._inputController;\n        if (inputController.hasActiveTarget()) return false;\n        if (inputController.isMoveMode(pointer.getInputAdapter())) return false;\n        if (inputController.hasCurrentTarget()) return false;\n\n        const inputEventPosition = pointer.getInputEventPosition();\n        this._selectionBox.beginSelection(this._graphController.getGraph(), inputEventPosition.x, inputEventPosition.y);\n        return true;\n    }\n  \n    /** @override */\n    onDragMove(pointer)\n    {\n        if (this._selectionBox.isVisible())\n        {\n            this._selectionBox.updateSelection(this._graphController.getGraph(), pointer.x, pointer.y);\n        }\n    }\n  \n    /** @override */\n    onDragStop(pointer)\n    {\n        if (this._selectionBox.isVisible())\n        {\n            this._selectionBox.endSelection(this._graphController.getGraph(), pointer.x, pointer.y);\n        }\n    }\n}\n\nexport default SelectionBoxInputHandler;","import React from 'react';\n\nimport BoxRenderer from 'graph2/renderer/BoxRenderer.js';\nimport GraphHighlightLayer from './GraphHighlightLayer.js';\n\nimport SelectionBox from 'graph2/controller/SelectionBox.js';\nimport SelectionBoxInputHandler from 'graph2/inputhandler/SelectionBoxInputHandler.js';\n\nclass SelectionBoxLayer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        const inputController = props.inputController;\n        const graphController = props.graphController;\n\n        this._selectionBox = new SelectionBox();\n        this._selectionBoxInputHandler = new SelectionBoxInputHandler(inputController, graphController, this._selectionBox);\n    }\n\n    /** @override */\n    componentDidMount()\n    {\n        const inputController = this.props.inputController;\n        if (inputController)\n        {\n            inputController.setSelectionBox(this._selectionBox);\n        }\n\n        const inputContext = this.props.inputContext;\n        if (inputContext)\n        {\n            const inputPriority = this.props.inputPriority || -1;\n            inputContext.addInputHandler(this._selectionBoxInputHandler, inputPriority);\n        }\n    }\n\n    /** @override */\n    componentWillUnmount()\n    {\n        this._selectionBox.clearSelection();\n\n        const inputContext = this.props.inputContext;\n        if (inputContext)\n        {\n            inputContext.removeInputHandler(this._selectionBoxInputHandler);\n        }\n    }\n\n    getSelectionBox() { return this._selectionBox; }\n    getSelectionBoxInputHandler() { return this._selectionBoxInputHandler; }\n\n    /** @override */\n    render()\n    {\n        const selectionBox = this._selectionBox;\n        const selectionBoundingBox = selectionBox.getBoundingBox();\n\n        return (\n            <React.Fragment>\n                <GraphHighlightLayer\n                    nodes={selectionBox.getSelection()} />\n                <BoxRenderer visible={selectionBox.isVisible()}\n                    fromX={selectionBoundingBox.fromX}\n                    fromY={selectionBoundingBox.fromY}\n                    toX={selectionBoundingBox.toX}\n                    toY={selectionBoundingBox.toY} />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default SelectionBoxLayer;","//https://www.flaticon.com/free-icon/png_136523\nimport React from 'react';\n\nclass PNGIcon extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    return <svg className=\"png-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 56 56\">\n      <g>\n        <path fill=\"#E9E9E0\" d=\"M36.985,0H7.963C7.155,0,6.5,0.655,6.5,1.926V55c0,0.345,0.655,1,1.463,1h40.074 c0.808,0,1.463-0.655,1.463-1V12.978c0-0.696-0.093-0.92-0.257-1.085L37.607,0.257C37.442,0.093,37.218,0,36.985,0z\"/>\n        <path fill=\"#659C35\" d=\"M48.037,56H7.963C7.155,56,6.5,55.345,6.5,54.537V39h43v15.537C49.5,55.345,48.845,56,48.037,56z\"/>\n        <polygon fill=\"#D9D7CA\" points=\"37.5,0.151 37.5,12 49.349,12 \t\"/>\n        <g>\n          <path fill=\"#FFFFFF\" d=\"M17.385,53h-1.641V42.924h2.898c0.428,0,0.852,0.068,1.271,0.205 c0.419,0.137,0.795,0.342,1.128,0.615c0.333,0.273,0.602,0.604,0.807,0.991s0.308,0.822,0.308,1.306 c0,0.511-0.087,0.973-0.26,1.388c-0.173,0.415-0.415,0.764-0.725,1.046c-0.31,0.282-0.684,0.501-1.121,0.656 s-0.921,0.232-1.449,0.232h-1.217V53z M17.385,44.168v3.992h1.504c0.2,0,0.398-0.034,0.595-0.103 c0.196-0.068,0.376-0.18,0.54-0.335c0.164-0.155,0.296-0.371,0.396-0.649c0.1-0.278,0.15-0.622,0.15-1.032 c0-0.164-0.023-0.354-0.068-0.567c-0.046-0.214-0.139-0.419-0.28-0.615c-0.142-0.196-0.34-0.36-0.595-0.492 c-0.255-0.132-0.593-0.198-1.012-0.198H17.385z\"/>\n          <path fill=\"#FFFFFF\" d=\"M31.316,42.924V53h-1.668l-3.951-6.945V53h-1.668V42.924h1.668l3.951,6.945v-6.945H31.316z\"/>\n          <path fill=\"#FFFFFF\" d={\"M41.16,47.805v3.896c-0.21,0.265-0.444,0.48-0.704,0.649s-0.533,0.308-0.82,0.417 \" +\n            \"S39.052,52.954,38.747,53c-0.306,0.046-0.608,0.068-0.909,0.068c-0.602,0-1.155-0.109-1.661-0.328s-0.948-0.542-1.326-0.971 \" +\n            \"c-0.378-0.429-0.675-0.966-0.889-1.613c-0.214-0.647-0.321-1.395-0.321-2.242s0.107-1.593,0.321-2.235 \" +\n            \"c0.214-0.643,0.51-1.178,0.889-1.606c0.378-0.429,0.822-0.754,1.333-0.978c0.51-0.224,1.062-0.335,1.654-0.335 \" +\n            \"c0.547,0,1.057,0.091,1.531,0.273c0.474,0.183,0.897,0.456,1.271,0.82l-1.135,1.012c-0.219-0.265-0.47-0.456-0.752-0.574 \" +\n            \"c-0.283-0.118-0.574-0.178-0.875-0.178c-0.337,0-0.659,0.063-0.964,0.191c-0.306,0.128-0.579,0.344-0.82,0.649 \" +\n            \"c-0.242,0.306-0.431,0.699-0.567,1.183s-0.21,1.075-0.219,1.777c0.009,0.684,0.08,1.276,0.212,1.777 \" +\n            \"c0.132,0.501,0.314,0.911,0.547,1.23s0.497,0.556,0.793,0.711c0.296,0.155,0.608,0.232,0.937,0.232c0.1,0,0.234-0.007,0.403-0.021 \" +\n            \"c0.168-0.014,0.337-0.036,0.506-0.068c0.168-0.032,0.33-0.075,0.485-0.13c0.155-0.055,0.269-0.132,0.342-0.232v-2.488h-1.709 v-1.121H41.16z\"}/>\n        </g>\n        <circle fill=\"#F3D55B\" cx=\"18.931\" cy=\"14.431\" r=\"4.569\"/>\n        <polygon fill=\"#88C057\" points=\"6.5,39 17.5,39 49.5,39 49.5,28 39.5,18.5 29,30 23.517,24.517 \t\"/>\n      </g>\n    </svg>;\n  }\n}\n\nexport default PNGIcon;\n","//https://www.flaticon.com/free-icon/jpg_136524\nimport React from 'react';\n\nclass JPGIcon extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    return <svg className=\"jpg-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 56 56\">\n      <g>\n        <path fill=\"#E9E9E0\" d=\"M36.985,0H7.963C7.155,0,6.5,0.655,6.5,1.926V55c0,0.345,0.655,1,1.463,1h40.074 c0.808,0,1.463-0.655,1.463-1V12.978c0-0.696-0.093-0.92-0.257-1.085L37.607,0.257C37.442,0.093,37.218,0,36.985,0z\"/>\n        <polygon fill=\"#D9D7CA\" points=\"37.5,0.151 37.5,12 49.349,12 \t\"/>\n        <circle fill=\"#F3D55B\" cx=\"18.931\" cy=\"14.431\" r=\"4.569\"/>\n        <polygon fill=\"#26B99A\" points=\"6.5,39 17.5,39 49.5,39 49.5,28 39.5,18.5 29,30 23.517,24.517 \t\"/>\n        <path fill=\"#14A085\" d=\"M48.037,56H7.963C7.155,56,6.5,55.345,6.5,54.537V39h43v15.537C49.5,55.345,48.845,56,48.037,56z\"/>\n        <g>\n          <path fill=\"#FFFFFF\" d={\"M21.426,42.65v7.848c0,0.474-0.087,0.873-0.26,1.196c-0.173,0.323-0.406,0.583-0.697,0.779 \" +\n            \"c-0.292,0.196-0.627,0.333-1.005,0.41C19.085,52.961,18.696,53,18.295,53c-0.201,0-0.436-0.021-0.704-0.062 \" +\n            \"c-0.269-0.041-0.547-0.104-0.834-0.191s-0.563-0.185-0.827-0.294c-0.265-0.109-0.488-0.232-0.67-0.369l0.697-1.107 \" +\n            \"c0.091,0.063,0.221,0.13,0.39,0.198c0.168,0.068,0.353,0.132,0.554,0.191c0.2,0.06,0.41,0.111,0.629,0.157 \" +\n            \"s0.424,0.068,0.615,0.068c0.483,0,0.868-0.094,1.155-0.28s0.439-0.504,0.458-0.95V42.65H21.426z\"}/>\n          <path fill=\"#FFFFFF\" d={\"M25.514,52.932h-1.641V42.855h2.898c0.428,0,0.852,0.068,1.271,0.205 \" +\n            \"c0.419,0.137,0.795,0.342,1.128,0.615c0.333,0.273,0.602,0.604,0.807,0.991s0.308,0.822,0.308,1.306 \" +\n            \"c0,0.511-0.087,0.973-0.26,1.388c-0.173,0.415-0.415,0.764-0.725,1.046c-0.31,0.282-0.684,0.501-1.121,0.656 \" +\n            \"s-0.921,0.232-1.449,0.232h-1.217V52.932z M25.514,44.1v3.992h1.504c0.2,0,0.398-0.034,0.595-0.103 \" +\n            \"c0.196-0.068,0.376-0.18,0.54-0.335s0.296-0.371,0.396-0.649c0.1-0.278,0.15-0.622,0.15-1.032c0-0.164-0.023-0.354-0.068-0.567 \" +\n            \"c-0.046-0.214-0.139-0.419-0.28-0.615c-0.142-0.196-0.34-0.36-0.595-0.492C27.5,44.166,27.163,44.1,26.744,44.1H25.514z\"}/>\n          <path fill=\"#FFFFFF\" d={\"M39.5,47.736v3.896c-0.21,0.265-0.444,0.48-0.704,0.649s-0.533,0.308-0.82,0.417 \" +\n            \"s-0.583,0.187-0.889,0.232C36.781,52.978,36.479,53,36.178,53c-0.602,0-1.155-0.109-1.661-0.328s-0.948-0.542-1.326-0.971 \" +\n            \"c-0.378-0.429-0.675-0.966-0.889-1.613c-0.214-0.647-0.321-1.395-0.321-2.242s0.107-1.593,0.321-2.235 \" +\n            \"c0.214-0.643,0.51-1.178,0.889-1.606c0.378-0.429,0.822-0.754,1.333-0.978c0.51-0.224,1.062-0.335,1.654-0.335 \" +\n            \"c0.547,0,1.057,0.091,1.531,0.273c0.474,0.183,0.897,0.456,1.271,0.82l-1.135,1.012c-0.219-0.265-0.47-0.456-0.752-0.574 \" +\n            \"c-0.283-0.118-0.574-0.178-0.875-0.178c-0.337,0-0.659,0.063-0.964,0.191c-0.306,0.128-0.579,0.344-0.82,0.649 \" +\n            \"c-0.242,0.306-0.431,0.699-0.567,1.183s-0.21,1.075-0.219,1.777c0.009,0.684,0.08,1.276,0.212,1.777 \" +\n            \"c0.132,0.501,0.314,0.911,0.547,1.23s0.497,0.556,0.793,0.711c0.296,0.155,0.608,0.232,0.937,0.232c0.1,0,0.234-0.007,0.403-0.021 \" +\n            \"c0.168-0.014,0.337-0.036,0.506-0.068c0.168-0.032,0.33-0.075,0.485-0.13c0.155-0.055,0.269-0.132,0.342-0.232v-2.488h-1.709 \" +\n            \"v-1.121H39.5z\"}/>\n        </g>\n      </g>\n    </svg>;\n  }\n}\n\nexport default JPGIcon;\n","import React from 'react';\n\nclass SVGIcon extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  /** @override */\n  render()\n  {\n    return <svg className=\"svg-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 56 56\">\n    \t<g>\n    \t\t<path fill=\"#E9E9E0\" d=\"M36.985,0H7.963C7.155,0,6.5,0.655,6.5,1.926V55c0,0.345,0.655,1,1.463,1h40.074\n    \t\tc0.808,0,1.463-0.655,1.463-1V12.978c0-0.696-0.093-0.92-0.257-1.085L37.607,0.257C37.442,0.093,37.218,0,36.985,0z\"/>\n    \t\t<polygon fill=\"#D9D7CA\" points=\"37.5,0.151 37.5,12 49.349,12 \t\"/>\n    \t\t<path fill=\"#E57E25\" d=\"M48.037,56H7.963C7.155,56,6.5,55.345,6.5,54.537V39h43v15.537C49.5,55.345,48.845,56,48.037,56z\"/>\n    \t\t<g>\n    \t\t\t<path fill=\"#FFFFFF\"\n    \t\t\t\td=\"M21.459,50.238c0,0.364-0.075,0.718-0.226,1.06s-0.362,0.643-0.636,0.902s-0.61,0.467-1.012,0.622\n    \t\t\ts-0.856,0.232-1.367,0.232c-0.219,0-0.444-0.012-0.677-0.034s-0.467-0.062-0.704-0.116s-0.463-0.13-0.677-0.226\n    \t\t\ts-0.398-0.212-0.554-0.349l0.287-1.176c0.128,0.073,0.289,0.144,0.485,0.212s0.398,0.132,0.608,0.191s0.419,0.107,0.629,0.144\n    \t\t\ts0.405,0.055,0.588,0.055c0.556,0,0.982-0.13,1.278-0.39c0.296-0.26,0.444-0.645,0.444-1.155c0-0.31-0.104-0.574-0.314-0.793\n    \t\t\ts-0.472-0.417-0.786-0.595s-0.654-0.355-1.019-0.533s-0.706-0.388-1.025-0.629s-0.583-0.526-0.793-0.854s-0.314-0.738-0.314-1.23\n    \t\t\tc0-0.446,0.082-0.843,0.246-1.189s0.385-0.641,0.663-0.882s0.602-0.426,0.971-0.554s0.759-0.191,1.169-0.191\n    \t\t\tc0.419,0,0.843,0.039,1.271,0.116s0.774,0.203,1.039,0.376c-0.055,0.118-0.118,0.248-0.191,0.39s-0.142,0.273-0.205,0.396\n    \t\t\ts-0.118,0.226-0.164,0.308s-0.073,0.128-0.082,0.137c-0.055-0.027-0.116-0.063-0.185-0.109s-0.166-0.091-0.294-0.137\n    \t\t\ts-0.296-0.077-0.506-0.096s-0.479-0.014-0.807,0.014c-0.183,0.019-0.355,0.07-0.52,0.157s-0.31,0.193-0.438,0.321\n    \t\t\ts-0.228,0.271-0.301,0.431s-0.109,0.313-0.109,0.458c0,0.364,0.104,0.658,0.314,0.882s0.47,0.419,0.779,0.588\n    \t\t\ts0.647,0.333,1.012,0.492s0.704,0.354,1.019,0.581s0.576,0.513,0.786,0.854S21.459,49.7,21.459,50.238z\"/>\n    \t\t\t<path fill=\"#FFFFFF\" d=\"M25.861,53.055L22.73,42.924h1.873l2.338,8.695l2.475-8.695h1.859l-3.281,10.131H25.861z\"/>\n    \t\t\t<path fill=\"#FFFFFF\"\n    \t\t\t\td=\"M40.668,47.805v3.896c-0.21,0.265-0.444,0.48-0.704,0.649s-0.533,0.308-0.82,0.417\n    \t\t\tS38.561,52.954,38.255,53s-0.608,0.068-0.909,0.068c-0.602,0-1.155-0.109-1.661-0.328s-0.948-0.542-1.326-0.971\n    \t\t\ts-0.675-0.966-0.889-1.613s-0.321-1.395-0.321-2.242s0.107-1.593,0.321-2.235s0.511-1.178,0.889-1.606s0.822-0.754,1.333-0.978\n    \t\t\ts1.062-0.335,1.654-0.335c0.547,0,1.058,0.091,1.531,0.273s0.897,0.456,1.271,0.82l-1.135,1.012\n    \t\t\tc-0.219-0.265-0.47-0.456-0.752-0.574s-0.574-0.178-0.875-0.178c-0.337,0-0.658,0.063-0.964,0.191s-0.579,0.344-0.82,0.649\n    \t\t\ts-0.431,0.699-0.567,1.183s-0.21,1.075-0.219,1.777c0.009,0.684,0.08,1.276,0.212,1.777s0.314,0.911,0.547,1.23\n    \t\t\ts0.497,0.556,0.793,0.711s0.608,0.232,0.937,0.232c0.101,0,0.234-0.007,0.403-0.021s0.337-0.036,0.506-0.068\n    \t\t\ts0.33-0.075,0.485-0.13s0.269-0.132,0.342-0.232v-2.488h-1.709v-1.121H40.668z\"/>\n    \t\t</g>\n    \t\t<path fill=\"#C8BDB8\"\n    \t\t\td=\"M45.5,22v-6h-6v2h-6v-4h-10v4h-6v-2h-6v6h6v-2h3.548c-4.566,2.636-7.548,7.588-7.548,13\n    \t\tc0,0.552,0.447,1,1,1s1-0.448,1-1c0-5.246,3.229-9.999,8-11.995V24h10v-2.995c4.771,1.997,8,6.75,8,11.995c0,0.552,0.447,1,1,1\n    \t\ts1-0.448,1-1c0-5.412-2.982-10.364-7.548-13H39.5v2H45.5z M15.5,20h-2v-2h2V20z M31.5,22h-6v-3.754V16h6v2.246V22z M41.5,18h2v2h-2\n    \t\tV18z\"/>\n    \t</g>\n    </svg>;\n  }\n}\n\nexport default SVGIcon;\n","import React from 'react';\n\nclass PNGFileIcon extends React.PureComponent\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 56 56\">\n                <path fill=\"#E9E9E0\" d=\"M36.985,0H7.963C7.155,0,6.5,0.655,6.5,1.926V55c0,0.345,0.655,1,1.463,1h40.074 c0.808,0,1.463-0.655,1.463-1V12.978c0-0.696-0.093-0.92-0.257-1.085L37.607,0.257C37.442,0.093,37.218,0,36.985,0z\"/>\n                <path fill=\"#659C35\" d=\"M48.037,56H7.963C7.155,56,6.5,55.345,6.5,54.537V39h43v15.537C49.5,55.345,48.845,56,48.037,56z\"/>\n                <polygon fill=\"#D9D7CA\" points=\"37.5,0.151 37.5,12 49.349,12 \t\"/>\n                <path fill=\"#FFFFFF\" d=\"M17.385,53h-1.641V42.924h2.898c0.428,0,0.852,0.068,1.271,0.205 c0.419,0.137,0.795,0.342,1.128,0.615c0.333,0.273,0.602,0.604,0.807,0.991s0.308,0.822,0.308,1.306 c0,0.511-0.087,0.973-0.26,1.388c-0.173,0.415-0.415,0.764-0.725,1.046c-0.31,0.282-0.684,0.501-1.121,0.656 s-0.921,0.232-1.449,0.232h-1.217V53z M17.385,44.168v3.992h1.504c0.2,0,0.398-0.034,0.595-0.103 c0.196-0.068,0.376-0.18,0.54-0.335c0.164-0.155,0.296-0.371,0.396-0.649c0.1-0.278,0.15-0.622,0.15-1.032 c0-0.164-0.023-0.354-0.068-0.567c-0.046-0.214-0.139-0.419-0.28-0.615c-0.142-0.196-0.34-0.36-0.595-0.492 c-0.255-0.132-0.593-0.198-1.012-0.198H17.385z\"/>\n                <path fill=\"#FFFFFF\" d=\"M31.316,42.924V53h-1.668l-3.951-6.945V53h-1.668V42.924h1.668l3.951,6.945v-6.945H31.316z\"/>\n                <path fill=\"#FFFFFF\" d={'M41.16,47.805v3.896c-0.21,0.265-0.444,0.48-0.704,0.649s-0.533,0.308-0.82,0.417 S39.052,52.954,38.747,53c-0.306,0.046-0.608,0.068-0.909,0.068c-0.602,0-1.155-0.109-1.661-0.328s-0.948-0.542-1.326-0.971 c-0.378-0.429-0.675-0.966-0.889-1.613c-0.214-0.647-0.321-1.395-0.321-2.242s0.107-1.593,0.321-2.235 c0.214-0.643,0.51-1.178,0.889-1.606c0.378-0.429,0.822-0.754,1.333-0.978c0.51-0.224,1.062-0.335,1.654-0.335 c0.547,0,1.057,0.091,1.531,0.273c0.474,0.183,0.897,0.456,1.271,0.82l-1.135,1.012c-0.219-0.265-0.47-0.456-0.752-0.574 c-0.283-0.118-0.574-0.178-0.875-0.178c-0.337,0-0.659,0.063-0.964,0.191c-0.306,0.128-0.579,0.344-0.82,0.649 c-0.242,0.306-0.431,0.699-0.567,1.183s-0.21,1.075-0.219,1.777c0.009,0.684,0.08,1.276,0.212,1.777 c0.132,0.501,0.314,0.911,0.547,1.23s0.497,0.556,0.793,0.711c0.296,0.155,0.608,0.232,0.937,0.232c0.1,0,0.234-0.007,0.403-0.021 c0.168-0.014,0.337-0.036,0.506-0.068c0.168-0.032,0.33-0.075,0.485-0.13c0.155-0.055,0.269-0.132,0.342-0.232v-2.488h-1.709 v-1.121H41.16z'}/>\n                <circle fill=\"#F3D55B\" cx=\"18.931\" cy=\"14.431\" r=\"4.569\"/>\n                <polygon fill=\"#88C057\" points=\"6.5,39 17.5,39 49.5,39 49.5,28 39.5,18.5 29,30 23.517,24.517 \t\"/>\n            </svg>\n        );\n    }\n}\nexport default PNGFileIcon;\n","import SessionExporter from 'session/SessionExporter.js';\n\nimport * as ColorHelper from 'util/ColorHelper.js';\n\nimport PNGIcon from 'deprecated/icons/flat/PNGIcon.js';\nimport JPGIcon from 'deprecated/icons/flat/JPGIcon.js';\nimport SVGIcon from 'deprecated/icons/flat/SVGIcon.js';\nimport BWIcon from 'components/iconset/flat/PNGFileIcon.js';\n\nexport const IMAGE_TYPE_PNG = 'png';\nexport const IMAGE_TYPE_JPG = 'jpg';\nexport const IMAGE_TYPE_SVG = 'svg';\nexport const IMAGE_TYPE_BW = 'bw';\n\nconst EXPORT_PADDING_X = 30;\nconst EXPORT_PADDING_Y = 0;\n\nclass NodalGraphImageExporter extends SessionExporter\n{\n    constructor(imageType = IMAGE_TYPE_PNG)\n    {\n        super();\n        this._imageType = imageType;\n    }\n\n    /** @override */\n    exportTarget(exportType, target)\n    {\n        const session = target;\n        const currentModule = session.getCurrentModule();\n        const fileName = session.getProjectName();\n        const workspace = session.getCurrentModule().getGraphView().getViewportComponent();\n        const svgElement = workspace.getSVGElement();\n        const workspaceDim = svgElement.viewBox.baseVal;\n        const width = workspaceDim.width;\n        const height = workspaceDim.height;\n        const svg = this.processSVGForExport(svgElement, width, height, currentModule);\n\n        const fileExt = this._imageType === IMAGE_TYPE_BW ? IMAGE_TYPE_PNG : this._imageType;\n        return Promise.resolve({\n            name: fileName + '.' + fileExt,\n            type: 'image',\n            data: svg,\n            width: width,\n            height: height,\n            'image-type': fileExt\n        });\n    }\n\n    processColorAttribute(themeManager, attributeValue)\n    {\n        if (!attributeValue) return attributeValue;\n\n        const startIndex = attributeValue.indexOf('var(--');\n        if (startIndex < 0) return attributeValue;\n\n        const stopIndex = attributeValue.indexOf(')', startIndex);\n        const value = attributeValue.substring(startIndex + 4, stopIndex);\n        const style = themeManager.getStyleByName(value);\n        let result = style ? style.getValue() : '#000000';\n\n        if (this._imageType === IMAGE_TYPE_BW)\n        {\n            const rgb = ColorHelper.HEXtoRGB(result);\n            ColorHelper.grayscaleRGB(rgb, rgb);\n            result = ColorHelper.RGBtoHEX(rgb);\n        }\n\n        return result;\n    }\n\n    processSVGForExport(element, width, height, currentModule)\n    {\n        const graphController = currentModule.getGraphController();\n\n        const viewport = currentModule.getGraphView().getViewportAdapter();\n        const offsetX = viewport.getOffsetX();\n        const offsetY = viewport.getOffsetY();\n        const bounds = graphController.getGraph().getBoundingRect();\n        const dx = bounds.minX + offsetX - EXPORT_PADDING_X;\n        const dy = bounds.minY + offsetY - EXPORT_PADDING_Y;\n        const w = bounds.width + EXPORT_PADDING_X * 2;\n        const h = bounds.height + EXPORT_PADDING_Y * 2;\n        const clone = element.cloneNode(true);\n        clone.setAttribute('viewBox', dx + ' ' + dy + ' ' + w + ' ' + h);\n        clone.setAttribute('width', width);\n        clone.setAttribute('height', height);\n\n        // Apply the workspace font (refer to Workspace.css)\n        clone.setAttribute('font-size', '16px');\n        clone.setAttribute('font-family', 'monospace');\n        clone.setAttribute('style', '.graph-ui {display: none;}');\n\n        // Go through and replace all colors...\n        const themeManager = currentModule.getApp().getThemeManager();\n        for (const element of clone.getElementsByTagName('*'))\n        {\n            const strokeValue = element.getAttribute('stroke');\n            const strokeResult = this.processColorAttribute(themeManager, strokeValue);\n            if (strokeValue !== strokeResult) element.setAttribute('stroke', strokeResult);\n\n            const fillValue = element.getAttribute('fill');\n            const fillResult = this.processColorAttribute(themeManager, fillValue);\n            if (fillValue !== fillResult) element.setAttribute('fill', fillResult);\n        }\n\n        //Remove unwanted ui elements from image\n        const uiElements = clone.getElementsByClassName('graph-ui');\n        while (uiElements.length > 0)\n        {\n            // This will propagate changes to uiElements, so be careful\n            const e = uiElements[0];\n            e.remove();\n        }\n\n        return clone;\n    }\n\n    /** @override */\n    getIconClass()\n    {\n        switch (this._imageType)\n        {\n        case IMAGE_TYPE_PNG: return PNGIcon;\n        case IMAGE_TYPE_JPG: return JPGIcon;\n        case IMAGE_TYPE_SVG: return SVGIcon;\n        case IMAGE_TYPE_BW: return BWIcon;\n        default: return null;\n        }\n    }\n\n    /** @override */\n    getLabel()\n    {\n        switch (this._imageType)\n        {\n        case IMAGE_TYPE_PNG: return I18N.toString('file.export.png');\n        case IMAGE_TYPE_JPG: return I18N.toString('file.export.jpg');\n        case IMAGE_TYPE_SVG: return I18N.toString('file.export.svg');\n        case IMAGE_TYPE_BW: return I18N.toString('file.export.bw');\n        default: return super.getLabel();\n        }\n    }\n\n    /** @override */\n    getTitle()\n    {\n        switch (this._imageType)\n        {\n        case IMAGE_TYPE_PNG: return I18N.toString('file.export.png.hint');\n        case IMAGE_TYPE_JPG: return I18N.toString('file.export.jpg.hint');\n        case IMAGE_TYPE_SVG: return I18N.toString('file.export.svg.hint');\n        case IMAGE_TYPE_BW: return I18N.toString('file.export.bw.hint');\n        default: return super.getTitle();\n        }\n    }\n\n    getImageType()\n    {\n        return this._imageType;\n    }\n}\n\nexport const IMAGE_EXPORTERS = [\n    new NodalGraphImageExporter(IMAGE_TYPE_PNG),\n    new NodalGraphImageExporter(IMAGE_TYPE_JPG),\n    new NodalGraphImageExporter(IMAGE_TYPE_SVG),\n    new NodalGraphImageExporter(IMAGE_TYPE_BW)\n];\n\nexport function registerImageExporters(exportManager)\n{\n    for (const exporter of IMAGE_EXPORTERS)\n    {\n        exportManager.registerExporter(exporter, 'image-' + exporter.getImageType());\n    }\n}\n\nexport default NodalGraphImageExporter;\n","import React from 'react';\n\nclass TrashCanDetailedIcon extends React.PureComponent\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 26 26\">\n                <path d=\"M 11.5 -0.03125 C 9.542969 -0.03125 7.96875 1.59375 7.96875 3.5625 L 7.96875 4 L 4 4 C 3.449219 4 3 4.449219 3 5 L 3 6 L 2 6 L 2 8 L 4 8 L 4 23 C 4 24.644531 5.355469 26 7 26 L 19 26 C 20.644531 26 22 24.644531 22 23 L 22 8 L 24 8 L 24 6 L 23 6 L 23 5 C 23 4.449219 22.550781 4 22 4 L 18.03125 4 L 18.03125 3.5625 C 18.03125 1.59375 16.457031 -0.03125 14.5 -0.03125 Z M 11.5 2.03125 L 14.5 2.03125 C 15.304688 2.03125 15.96875 2.6875 15.96875 3.5625 L 15.96875 4 L 10.03125 4 L 10.03125 3.5625 C 10.03125 2.6875 10.695313 2.03125 11.5 2.03125 Z M 6 8 L 11.125 8 C 11.25 8.011719 11.371094 8.03125 11.5 8.03125 L 14.5 8.03125 C 14.628906 8.03125 14.75 8.011719 14.875 8 L 20 8 L 20 23 C 20 23.5625 19.5625 24 19 24 L 7 24 C 6.4375 24 6 23.5625 6 23 Z M 8 10 L 8 22 L 10 22 L 10 10 Z M 12 10 L 12 22 L 14 22 L 14 10 Z M 16 10 L 16 22 L 18 22 L 18 10 Z \"/>\n            </svg>\n        );\n    }\n}\nexport default TrashCanDetailedIcon;\n","import React from 'react';\nimport Style from './TrashCanWidget.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport TrashCanDetailedIcon from 'components/iconset/TrashCanDetailedIcon.js';\n\nconst DOUBLE_TAP_TIME = 250;\n\nclass TrashCanWidget extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this._ref = React.createRef();\n        this._buttonElement = React.createRef();\n\n        this.state = {\n            active: false,\n            forceActive: false\n        };\n\n        this._doubleTapTimeout = null;\n\n        this.onMouseEnter = this.onMouseEnter.bind(this);\n        this.onMouseLeave = this.onMouseLeave.bind(this);\n        this.onClick = this.onClick.bind(this);\n\n        // This is kinda a hack to lose trash mode focus...\n        this.onAnyMouseDownNotConsumed = this.onAnyMouseDownNotConsumed.bind(this);\n    }\n\n    onMouseEnter(e)\n    {\n        if (this.state.forceActive) return;\n\n        this.setState({ active: true }, () =>\n        {\n            const onChange = this.props.onChange;\n            if (onChange) onChange(true);\n        });\n    }\n\n    onMouseLeave(e)\n    {\n        if (this.state.forceActive) return;\n\n        this.setState({ active: false }, () =>\n        {\n            const onChange = this.props.onChange;\n            if (onChange) onChange(false);\n        });\n    }\n\n    onClick(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (this._doubleTapTimeout)\n        {\n            // This is a double tap!\n            clearTimeout(this._doubleTapTimeout);\n            this._doubleTapTimeout = null;\n\n            this.setState({ active: false, forceActive: false }, () =>\n            {\n                const onClear = this.props.onClear;\n                if (onClear) onClear();\n                const onChange = this.props.onChange;\n                if (onChange) onChange(false);\n            });\n        }\n        else\n        {\n            // This is a single tap!\n            this.setState((prev, props) =>\n            {\n                const result = !prev.forceActive;\n\n                this._doubleTapTimeout = setTimeout(() =>\n                {\n                    this._doubleTapTimeout = null;\n                }, DOUBLE_TAP_TIME);\n\n                if (result)\n                {\n                    document.documentElement.addEventListener('mousedown', this.onAnyMouseDownNotConsumed);\n                }\n\n                return {\n                    active: result,\n                    forceActive: result\n                };\n            }, () =>\n            {\n                const onChange = this.props.onChange;\n                if (onChange) onChange(this.state.active);\n            });\n        }\n    }\n\n    onAnyMouseDownNotConsumed(e)\n    {\n        if (this.state.forceActive && this._buttonElement.current !== e.target)\n        {\n            e.stopPropagation();\n            e.preventDefault();\n\n            document.documentElement.removeEventListener('mousedown', this.onAnyMouseDownNotConsumed);\n            \n            this.setState({ active: false, forceActive: false }, () =>\n            {\n                const onChange = this.props.onChange;\n                if (onChange) onChange(false);\n            });\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        const visible = this.props.visible;\n        const active = this.state.active;\n        const hide = !active && !visible;\n\n        return (\n            <IconButton ref={this._ref}\n                refButton={this._buttonElement}\n                id={this.props.id}\n                className={Style.trash_container +\n                    (active ? ' active ' : '') +\n                    (hide ? ' hide ' : '') +\n                    ' ' + this.props.className}\n                style={this.props.style}\n                title={'Delete'}\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n                onClick={this.onClick}>\n                <TrashCanDetailedIcon />\n            </IconButton>\n        );\n    }\n}\n\nexport default TrashCanWidget;\n","import React from 'react';\n\nclass MoveIcon extends React.PureComponent\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M13,6V11H18V7.75L22.25,12L18,16.25V13H13V18H16.25L12,22.25L7.75,18H11V13H6V16.25L1.75,12L6,7.75V11H11V6H7.75L12,1.75L16.25,6H13Z\"/>\n            </svg>\n        );\n    }\n}\nexport default MoveIcon;\n","import React from 'react';\nimport Style from './ModeTrayWidget.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport EditPencilIcon from 'components/iconset/EditPencilIcon.js';\nimport MoveIcon from 'components/iconset/MoveIcon.js';\n\nexport const MODE_ACTION = 0;\nexport const MODE_MOVE = 1;\n\nclass ModeTrayWidget extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        const visible = this.props.visible;\n        const mode = this.props.mode;\n        const onChange = this.props.onChange;\n        const hide = !visible;\n\n        return (\n            <div id={this.props.id}\n                className={Style.tray_container +\n                    (hide ? ' hide ' : '') +\n                    ' ' + this.props.className}\n                style={this.props.style}>\n                <IconButton className={Style.tray_button +\n                    (mode === MODE_ACTION ? ' active ' : '')}\n                onClick={() => \n                {\n                    if (onChange) onChange(MODE_ACTION);\n                }}\n                title={I18N.toString('cursor.actionmode')}>\n                    <EditPencilIcon />\n                </IconButton>\n                <IconButton className={Style.tray_button +\n                    (mode === MODE_MOVE ? ' active ' : '')}\n                onClick={() => \n                {\n                    if (onChange) onChange(MODE_MOVE);\n                }}\n                title={I18N.toString('cursor.movemode')}>\n                    <MoveIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\nexport default ModeTrayWidget;\n","import React from 'react';\nimport Style from './ViewportEditLayer.css';\n\nimport TrashCanWidget from '../widgets/TrashCanWidget.js';\nimport ModeTrayWidget, { MODE_ACTION, MODE_MOVE } from '../widgets/ModeTrayWidget.js';\n\nclass ViewportEditLayer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.onTrashChange = this.onTrashChange.bind(this);\n        this.onTrashClear = this.onTrashClear.bind(this);\n        this.onModeChange = this.onModeChange.bind(this);\n    }\n\n    onTrashChange(flag)\n    {\n        this.props.inputController.setTrashMode(flag);\n        if (flag)\n        {\n            this.props.session.getApp().getDrawerComponent().setViewportColor('var(--color-viewport-error)');\n        }\n        else\n        {\n            this.props.session.getApp().getDrawerComponent().setViewportColor(null);\n        }\n    }\n\n    onTrashClear()\n    {\n        this.props.graphController.clearGraph();\n    }\n\n    onModeChange(value)\n    {\n        this.props.inputController.setMoveModeFirst(value === MODE_MOVE);\n    }\n\n    /** @override */\n    render()\n    {\n        const inputController = this.props.inputController;\n        const graphController = this.props.graphController;\n        const viewport = this.props.viewport;\n        const graph = graphController.getGraph();\n\n        let moveMode = null;\n        if (inputController)\n        {\n            if (inputController.isHandlingInput())\n            {\n                moveMode = inputController.isMoveMode(viewport.getInputAdapter()) ? MODE_MOVE : MODE_ACTION;\n            }\n            else\n            {\n                moveMode = inputController.isMoveModeFirst() ? MODE_MOVE : MODE_ACTION;\n            }\n        }\n\n        return (\n            <div id={this.props.id}\n                className={Style.view_container +\n\t\t\t\t\t' ' + this.props.className}\n                style={this.props.style}>\n                <TrashCanWidget className={Style.view_widget}\n                    style={{ bottom: 0, right: 0 }}\n                    visible={!graph.isEmpty() && viewport &&\n\t\t\t\t\t\t(!viewport.getInputAdapter().isUsingTouch() || !viewport.getInputAdapter().isDragging())}\n                    onChange={this.onTrashChange}\n                    onClear={this.onTrashClear} />\n                <ModeTrayWidget className={Style.view_widget}\n                    style={{ bottom: 0, left: 0 }}\n                    visible={inputController}\n                    mode={moveMode}\n                    onChange={this.onModeChange} />\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default ViewportEditLayer;","class LabelFormatter\n{\n    formatLabel(target, nextLabel, prevLabel = null) { return nextLabel; }\n    getDefaultLabel(target) { return ''; }\n\n    formatNodeLabel(nextNodeLabel, prevNodeLabel = null)\n    {\n        return nextNodeLabel;\n    }\n\n    formatEdgeLabel(nextEdgeLabel, prevEdgeLabel = null)\n    {\n        return nextEdgeLabel;\n    }\n\n    getDefaultNodeLabel() { return ''; }\n    getDefaultEdgeLabel() { return ''; }\n}\nexport default LabelFormatter;\n\nexport const DEFAULT_LABEL_FORMATTER = new LabelFormatter();","const DEFAULT_REFRESH_TICKS = 10;\n\nclass GraphChangeHandler\n{\n    constructor(refreshTicks = DEFAULT_REFRESH_TICKS)\n    {\n        this._cachedGraphHash = 0;\n\n        this._refreshTicks = refreshTicks;\n        this._elapsedTicks = Infinity;\n\n        this._listeners = [];\n    }\n\n    addListener(listener)\n    {\n        if (typeof listener !== 'function')\n            throw new Error('Cannot add uncallable listener');\n        this._listeners.push(listener);\n    }\n\n    removeListener(listener)\n    {\n        const i = this._listeners.indexOf(listener);\n        if (i >= 0)\n        {\n            this._listeners.splice(i, 1);\n            return true;\n        }\n        return false;\n    }\n\n    clearListeners() { this._listeners.length = 0; }\n    getListeners() { return this._listeners; }\n\n    reset()\n    {\n        this._elapsedTicks = 0;\n        this._cachedGraphHash = 0;\n    }\n\n    update(graph)\n    {\n        if (++this._elapsedTicks >= this._refreshTicks)\n        {\n            this._elapsedTicks = 0;\n\n            const graphHash = graph.getHashCode(false);\n            if (graphHash !== this._cachedGraphHash)\n            {\n                this._cachedGraphHash = graphHash;\n                for (const listener of this._listeners)\n                {\n                    listener(graph);\n                }\n            }\n        }\n    }\n}\n\nexport default GraphChangeHandler;\n","import {DEFAULT_LABEL_FORMATTER} from './LabelFormatter.js';\n\nimport GraphChangeHandler from './GraphChangeHandler.js';\n\nimport GraphNode from 'graph2/element/GraphNode.js';\nimport GraphEdge from 'graph2/element/GraphEdge.js';\n\nexport const GRAPH_EVENT_CLEAR = 'graph-clear';\n\nclass GraphController\n{\n    constructor(graph)\n    {\n        this._graph = graph;\n        this._graphChangeHandler = new GraphChangeHandler();\n\n        this._labelEditor = null;\n        this._labelFormatter = null;\n\n        this._listeners = [];\n    }\n\n    setLabelEditor(labelEditor)\n    {\n        this._labelEditor = labelEditor;\n        return this;\n    }\n\n    setLabelFormatter(labelFormatter)\n    {\n        this._labelFormatter = labelFormatter;\n        return this;\n    }\n\t\n    addListener(listener)\n    {\n        this._listeners.push(listener);\n        return this;\n    }\n\n    removeListener(listener)\n    {\n        const index = this._listeners.indexOf(listener);\n        if (index >= 0) this._listeners.splice(index, 1);\n    }\n\n    clearListeners() { this._listeners.length = 0; }\n\n    initialize()\n    {\n    }\n\n    update()\n    {\n        if (this._graphChangeHandler)\n        {\n            this._graphChangeHandler.update(this._graph);\n        }\n    }\n\n    destroy()\n    {\n\t\t\n    }\n\t\n    clearGraph()\n    {\n        if (window.confirm(I18N.toString('alert.graph.clear')))\n        {\n            this._graph.clear();\n            this.emitGraphEvent(GRAPH_EVENT_CLEAR);\n        }\n    }\n\n    onGraphEvent(eventName, eventData)\n    {\n        // Do nothing... for now...\n    }\n\n    emitGraphEvent(eventName, eventData = {})\n    {\n        this.onGraphEvent(eventName, eventData);\n\n        for(const listener of this._listeners)\n        {\n            listener.onGraphEvent(this, eventName, eventData);\n        }\n    }\n\n    openLabelEditor(target, defaultLabel = null, callback = null)\n    {\n        if (!this._labelEditor)\n        {\n            if (callback) callback(target, defaultLabel, false);\n            return;\n        }\n\n        const labelEditor = this._labelEditor;\n        const prevLabel = defaultLabel || '';\n        labelEditor.openEditor(target, defaultLabel, (target, value) =>\n        {\n            const hasChanged = !prevLabel || (prevLabel.length > 0 && value !== prevLabel);\n            if (target instanceof GraphEdge)\n            {\n                target.setEdgeLabel(value);\n            }\n            else if (target instanceof GraphNode)\n            {\n                target.setNodeLabel(value);\n            }\n\n            if (callback) callback(target, value, hasChanged);\n        }, (target) =>\n        {\n            if (callback) callback(target, null, false);\n        });\n    }\n\n    getLabelFormatter() { return this._labelFormatter || DEFAULT_LABEL_FORMATTER; }\n    getLabelEditor() { return this._labelEditor; }\n    \n    getGraphChangeHandler() { return this._graphChangeHandler; }\n    getGraph() { return this._graph; }\n}\n\nexport default GraphController;","import React from 'react';\n\nimport EdgeRenderer, {DIRECTED_FORWARD} from 'graph2/renderer/EdgeRenderer.js';\n\nclass GraphEdgeRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const edge = this.props.edge;\n        const stroke = this.props.stroke;\n        const onMouseOver = this.props.onMouseOver;\n        const onMouseOut = this.props.onMouseOut;\n        const pointerEvents = this.props.pointerEvents;\n\n        const start = edge.getStartPoint();\n        const end = edge.getEndPoint();\n        const center = edge.getCenterPoint();\n        const label = edge.getEdgeLabel();\n        const edgeDir = edge.getEdgeDirection();\n\n        return (\n            <React.Fragment>\n                <EdgeRenderer\n                    directed={DIRECTED_FORWARD}\n                    from={start}\n                    to={end}\n                    center={center}\n                    label={label}\n                    direction={edgeDir}\n                    color={stroke}\n                    onMouseOver={onMouseOver ? e =>\n                    {\n                        const value = e.target['value'] || (e.target['value'] = {});\n                        value.source = edge;\n                        onMouseOver(e);\n                    } : null}\n                    onMouseOut={onMouseOut ? e =>\n                    {\n                        const value = e.target['value'] || (e.target['value'] = {});\n                        value.source = edge;\n                        onMouseOut(e);\n                    } : null}\n                    pointerEvents={pointerEvents} />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default GraphEdgeRenderer;\n","import React from 'react';\n\nimport GraphEdgeRenderer from '../../renderer/GraphEdgeRenderer.js';\nimport GraphEdgeInputHandler from '../../inputhandler/GraphEdgeInputHandler.js';\n\nclass GraphEdgeLayer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        const inputController = props.inputController;\n        const graphController = props.graphController;\n        \n        this._graphEdgeInputHandler = new GraphEdgeInputHandler(inputController, graphController);\n    }\n\n    /** @override */\n    componentDidMount()\n    {\n        const inputContext = this.props.inputContext;\n        if (inputContext)\n        {\n            const inputPriority = this.props.inputPriority || -1;\n            inputContext.addInputHandler(this._graphEdgeInputHandler, inputPriority);\n        }\n    }\n\n    /** @override */\n    componentWillUnmount()\n    {\n        const inputContext = this.props.inputContext;\n        if (inputContext)\n        {\n            inputContext.removeInputHandler(this._graphEdgeInputHandler);\n        }\n    }\n\n    getGraphEdgeInputHandler() { return this._graphEdgeInputHandler; }\n\n    /** @override */\n    render()\n    {\n        const inputController = this.props.inputController;\n        const Renderer = this.props.edgeRenderer || GraphEdgeRenderer;\n        const editable = this.props.editable;\n\n        const onMouseOver = inputController ? inputController.onMouseOver : null;\n        const onMouseOut = inputController ? inputController.onMouseOut : null;\n\t\t\n        const edges = [];\n        for(const edge of this.props.edges)\n        {\n            edges.push(\n                <Renderer\n                    key={edge.getGraphElementID()}\n                    edge={edge}\n                    stroke={'var(--color-graph-text)'}\n                    onMouseOver={onMouseOver}\n                    onMouseOut={onMouseOut}\n                    pointerEvents={editable && inputController && inputController.hasPointerEvents(edge) ? 'all' : 'none'} />\n            );\n        }\n\n        return (\n            <g>\n                {edges}\n            </g>\n        );\n    }\n}\n\nexport default GraphEdgeLayer;","import React from 'react';\n\nimport NodeRenderer from 'graph2/renderer/NodeRenderer.js';\n\nclass GraphNodeRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const node = this.props.node;\n        const fill = this.props.fill;\n        const stroke = this.props.stroke;\n        const onMouseOver = this.props.onMouseOver;\n        const onMouseOut = this.props.onMouseOut;\n        const pointerEvents = this.props.pointerEvents;\n\n        const label = node.getNodeLabel();\n        const radius = node.getNodeSize();\n\n        return (\n            <React.Fragment>\n                <NodeRenderer\n                    position={node} \n                    radius={radius}\n                    label={label}\n                    color={fill}\n                    outline={stroke}\n                    onMouseOver={onMouseOver ? e =>\n                    {\n                        const value = e.target['value'] || (e.target['value'] = {});\n                        value.source = node;\n                        onMouseOver(e);\n                    } : null}\n                    onMouseOut={onMouseOut ? e =>\n                    {\n                        const value = e.target['value'] || (e.target['value'] = {});\n                        value.source = node;\n                        onMouseOut(e);\n                    } : null}\n                    pointerEvents={pointerEvents} />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default GraphNodeRenderer;\n","import React from 'react';\n\nimport GraphNodeRenderer from 'graph2/renderer/GraphNodeRenderer.js';\nimport GraphNodeInputHandler from 'graph2/inputhandler/GraphNodeInputHandler.js';\n\nclass GraphNodeLayer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        const inputController = props.inputController;\n        const graphController = props.graphController;\n\n        this._graphNodeInputHandler = new GraphNodeInputHandler(inputController, graphController);\n    }\n\n    /** @override */\n    componentDidMount()\n    {\n        const inputContext = this.props.inputContext;\n        if (inputContext)\n        {\n            const inputPriority = this.props.inputPriority || -1;\n            inputContext.addInputHandler(this._graphNodeInputHandler, inputPriority);\n        }\n    }\n\n    /** @override */\n    componentWillUnmount()\n    {\n        const inputContext = this.props.inputContext;\n        if (inputContext)\n        {\n            inputContext.removeInputHandler(this._graphNodeInputHandler);\n        }\n    }\n\n    getGraphNodeInputHandler() { return this._graphNodeInputHandler; }\n\n    /** @override */\n    render()\n    {\n        const inputController = this.props.inputController;\n        const Renderer = this.props.nodeRenderer || GraphNodeRenderer;\n        const editable = this.props.editable;\n\n        const onMouseOver = inputController ? inputController.onMouseOver : null;\n        const onMouseOut = inputController ? inputController.onMouseOut : null;\n\n        const nodes = [];\n        for (const node of this.props.nodes)\n        {\n            nodes.push(\n                <Renderer\n                    key={node.getGraphElementID()}\n                    node={node}\n                    fill={'var(--color-graph-node)'}\n                    stroke={'var(--color-graph-text)'}\n                    onMouseOver={onMouseOver}\n                    onMouseOut={onMouseOut}\n                    pointerEvents={editable && inputController && inputController.hasPointerEvents(node) ? 'all' : 'none'} />\n            );\n        }\n\n        return (\n            <g>\n                {nodes}\n            </g>\n        );\n    }\n}\n\nexport default GraphNodeLayer;","import React from 'react';\n\nimport StartMarkerRenderer from './StartMarkerRenderer.js';\n\nclass StartNodeMarkerRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this._prevSize = 1;\n    }\n\n    /** @override */\n    render()\n    {\n        const node = this.props.node;\n        const color = this.props.color;\n        const onMouseOver = this.props.onMouseOver;\n        const onMouseOut = this.props.onMouseOut;\n        const pointerEvents = this.props.pointerEvents;\n\n        let offset, size;\n        if ('getNodeSize' in node)\n        {\n            offset = node.getNodeSize();\n            size = node.getNodeSize() / 2;\n\n            this._prevSize = size;\n        }\n        else\n        {\n            offset = 0;\n            size = this._prevSize;\n        }\n\n        return (\n            <React.Fragment>\n                <StartMarkerRenderer\n                    position={node}\n                    offset={offset}\n                    size={size}\n                    color={color}\n                    onMouseOver={onMouseOver ? e =>\n                    {\n                        const value = e.target['value'] || (e.target['value'] = {});\n                        value.source = node;\n                        onMouseOver(e);\n                    } : null}\n                    onMouseOut={onMouseOut ? e =>\n                    {\n                        const value = e.target['value'] || (e.target['value'] = {});\n                        value.source = node;\n                        onMouseOut(e);\n                    } : null}\n                    pointerEvents={pointerEvents} />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default StartNodeMarkerRenderer;\n","import React from 'react';\n\nimport StartNodeMarkerRenderer from '../../renderer/StartNodeMarkerRenderer.js';\nimport IndexedGraphStartMarkerInputHandler from '../../inputhandler/IndexedGraphStartMarkerInputHandler.js';\n\nclass IndexedGraphStartMarkerLayer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        const inputController = props.inputController;\n        const graphController = props.graphController;\n\n        this._startMarkerInputHandler = new IndexedGraphStartMarkerInputHandler(inputController, graphController);\n    }\n\n    /** @override */\n    componentDidMount()\n    {\n        const inputContext = this.props.inputContext;\n        if (inputContext)\n        {\n            const inputPriority = this.props.inputPriority || -1;\n            inputContext.addInputHandler(this._startMarkerInputHandler, inputPriority);\n        }\n    }\n\n    /** @override */\n    componentWillUnmount()\n    {\n        const inputContext = this.props.inputContext;\n        if (inputContext)\n        {\n            inputContext.removeInputHandler(this._startMarkerInputHandler);\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        const inputController = this.props.inputController;\n        const Renderer = this.props.startMarkerRenderer || StartNodeMarkerRenderer;\n        const editable = this.props.editable;\n\n        const graphController = this.props.graphController;\n        const graph = graphController.getGraph();\n        let target = this._startMarkerInputHandler.getGhostMarker();\n        \n        if ('getStartNode' in graph && !target)\n        {\n            target = graph.getStartNode();\n        }\n\n        const onMouseOver = inputController ? inputController.onMouseOver : null;\n        const onMouseOut = inputController ? inputController.onMouseOut : null;\n        \n        return (\n            <g>\n                {target &&\n                    <Renderer\n                        node={target}\n                        color={'var(--color-graph-text)'}\n                        onMouseOver={onMouseOver}\n                        onMouseOut={onMouseOut}\n                        pointerEvents={editable && inputController && inputController.hasPointerEvents(target) ? 'all' : 'none'} />}\n            </g>\n        );\n    }\n}\n\nexport default IndexedGraphStartMarkerLayer;","import React from 'react';\n\nexport const SUBMIT_DELAY = 30;\nexport const SUBMIT_KEY = 'Enter';\nexport const CANCEL_KEY = 'Escape';\n\nclass PatternInput extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.inputElement = null;\n\n        this.placeholder = '';\n        this.maxLength = 524288;/*This is the default value*/\n        this.multiLine = true;\n        this.formatter = null;\n\n        this._submitTimeout = null;\n        this._submit = props.submitOnBlur;\n        this._skipBlur = false;\n        this._skipSelect = false;\n\n        this.state = {\n            prevValue: '',\n            value: ''\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onFocus = this.onFocus.bind(this);\n        this.onBlur = this.onBlur.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n    }\n\n    setFormatter(formatter)\n    {\n        this.formatter = formatter;\n        return this;\n    }\n\n    setPlaceholder(placeholder)\n    {\n        this.placeholder = placeholder;\n        return this;\n    }\n\n    onFocus(e)\n    {\n        if (this._skipSelect)\n        {\n            this.inputElement.select();\n            this._skipSelect = false;\n        }\n    }\n\n    onBlur(e)\n    {\n        if (!this._submitTimeout)\n        {\n            this._submitTimeout = setTimeout(() => \n            {\n                this._submitTimeout = null;\n                if (this._skipBlur) return;\n\n                const submit = this._submit;\n                this._submit = this.props.submitOnBlur;\n                if (document.activeElement !== this.inputElement && submit)\n                {\n                    const value = this.state.value;\n                    if (this.props.onSubmit) this.props.onSubmit(value);\n\n                    this.setState({prevValue: value});\n                }\n                else\n                {\n                    this.setState((prev, props) => \n                    {\n                        return {value: prev.prevValue};\n                    });\n                }\n\n                if (this.props.onBlur) this.props.onBlur(e);\n            }, SUBMIT_DELAY);\n        }\n    }\n\n    onKeyDown(e)\n    {\n        if (e.key === SUBMIT_KEY)\n        {\n            if (e.shiftKey && this.multiLine) return;\n\n            this._submit = true;\n            this.inputElement.blur();\n\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        else if (e.key === CANCEL_KEY)\n        {\n            this.setState((prev, props) => \n            {\n                return {value: prev.prevValue};\n            }, () => \n            {\n                this._submit = false;\n                this.inputElement.blur();\n            });\n\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n\n    onChange(e)\n    {\n        const target = e.target;\n        const caretPosition = target.selectionStart;\n        let value = target.value;\n        if (this.formatter)\n        {\n            value = this.formatter(value, this.state.value);\n        }\n\n        this.setState({value: value}, () => \n        {\n            target.selectionEnd = caretPosition;\n        });\n    }\n\n    focus(select=true)\n    {\n        this._skipSelect = select;\n        this.inputElement.focus();\n    }\n\n    ignoreBlur(ignore)\n    {\n        const prev = this._skipBlur;\n        this._skipBlur = ignore;\n        return prev !== ignore;\n    }\n\n    appendValue(string, separator='', format=true)\n    {\n        const value = this.state.value;\n        if (value && value.length + string.length > this.maxLength) return;\n\n        let result;\n        if (value && value.length > 0)\n        {\n            result = value + separator + string;\n        }\n        else\n        {\n            result = string;\n        }\n\n        if (format && this.formatter)\n        {\n            result = this.formatter(result, this.state.value);\n        }\n\n        this.setState((prev, props) => \n        {\n            return {value: result};\n        });\n    }\n\n    resetValue(string)\n    {\n        this.setState({prevValue: string, value: string});\n    }\n\n    setValue(string, format=true)\n    {\n        let value = string;\n        if (format && this.formatter)\n        {\n            value = this.formatter(value, this.state.value);\n        }\n        this.setState({value: value});\n    }\n\n    getValue()\n    {\n        return this.state.value;\n    }\n\n    /** @override */\n    render()\n    {\n        const placeholder = this.placeholder;\n        const maxlength = this.maxLength;\n        const multiline = this.multiLine;\n        const disabled = this.props.disabled;\n\n        const value = this.state.value;\n\n        return (\n            <div id={this.props.id}\n                className={this.props.className}\n                style={this.props.style}>\n                {\n                    multiline ?\n                        <textarea ref={ref=>this.inputElement=ref}\n                            type=\"text\" rows=\"1\" spellCheck=\"false\"\n                            disabled={disabled}\n                            placeholder={placeholder}\n                            maxLength={maxlength}\n                            value={value || ''}\n                            onChange={this.onChange}\n                            onFocus={this.onFocus}\n                            onBlur={this.onBlur}\n                            onKeyDown={this.onKeyDown}/>\n                        :\n                        <input ref={ref=>this.inputElement=ref}\n                            type=\"text\" spellCheck=\"false\"\n                            disabled={disabled}\n                            placeholder={placeholder}\n                            maxLength={maxlength}\n                            value={value || ''}\n                            onChange={this.onChange}\n                            onFocus={this.onFocus}\n                            onBlur={this.onBlur}\n                            onKeyDown={this.onKeyDown}/>\n                }\n            </div>\n        );\n    }\n}\n\nexport default PatternInput;\n","import React from 'react';\nimport Style from './LabelEditorWidget.css';\n\nimport GraphElement from 'graph2/element/GraphElement.js';\nimport GraphNode from 'graph2/element/GraphNode.js';\nimport GraphEdge from 'graph2/element/GraphEdge.js';\n\nimport PatternInput from 'graph2/components/widgets/pattern/PatternInput.js';\n\nclass LabelEditorWidget extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this._ref = React.createRef();\n        this.inputComponent = null;\n\n        this.state = {\n            open: false\n        };\n\n        this._target = null;\n        this._targetCallback = null;\n\n        this.onInputSubmit = this.onInputSubmit.bind(this);\n        this.onInputBlur = this.onInputBlur.bind(this);\n    }\n\n    openEditor(graphElement, defaultValue = null, onSubmit = null, onCancel = null)\n    {\n        if (!(graphElement instanceof GraphElement))\n            throw new Error('Can only open editor for GraphElements');\n\n        this._target = graphElement;\n        this._targetOnSubmit = onSubmit;\n        this._targetOnCancel = onCancel;\n\n        if (graphElement instanceof GraphNode)\n        {\n            const formatter = this.props.labelFormatter.getNodeLabelFormatter();\n            this.inputComponent.setFormatter(formatter);\n        }\n        else if (graphElement instanceof GraphEdge)\n        {\n            const formatter = this.props.labelFormatter.getEdgeLabelFormatter();\n            this.inputComponent.setFormatter(formatter);\n        }\n\n        this.setState({ open: true }, () =>\n        {\n            this.inputComponent.resetValue(defaultValue || '');\n            this.inputComponent.focus();\n        });\n    }\n\n    closeEditor()\n    {\n        this._target = null;\n        this._targetOnSubmit = null;\n        this._targetOnCancel = null;\n\n        this.inputComponent.setFormatter(null);\n\n        this.setState({ open: false });\n    }\n\n    isEditorOpen()\n    {\n        return this.state.open;\n    }\n\n    getTarget()\n    {\n        return this._target;\n    }\n\n    onInputSubmit(value)\n    {\n        if (this._targetOnSubmit)\n        {\n            this._targetOnSubmit(this._target, value);\n            //Don't handle cancel callbacks...\n            this._targetOnCancel = null;\n        }\n    }\n\n    onInputBlur(e)\n    {\n        if (this._targetOnCancel)\n        {\n            this._targetOnCancel(this._target);\n            //Don't handle submit callbacks...\n            this._targetOnSubmit = null;\n        }\n        this.closeEditor();\n    }\n\n    /** @override */\n    render()\n    {\n        const isEditorOpen = this.state.open;\n\n        const target = this._target;\n        const targetStyle = this.props.style || {};\n        const viewport = this.props.viewport;\n\n        if (viewport)\n        {\n            const viewportAdapter = this.props.viewport.getViewportAdapter();\n\n            if (target)\n            {\n                const center = target.getCenterPoint();\n                const element = viewportAdapter.getElement();\n                const parentClientRect = element.getBoundingClientRect();\n                const screenPos = transformViewToScreen(\n                    element,\n                    center.x + viewportAdapter.getOffsetX(),\n                    center.y + viewportAdapter.getOffsetY()\n                );\n                const x = screenPos.x;\n                const y = screenPos.y;\n                const offsetX = -(this._ref.current.offsetWidth / 2) - parentClientRect.left;\n                const offsetY = -(this._ref.current.offsetHeight / 2) - parentClientRect.top;\n\n                targetStyle['top'] = (y + offsetY) + 'px';\n                targetStyle['left'] = (x + offsetX) + 'px';\n            }\n        }\n\n        return (\n            <div ref={this._ref}\n                id={this.props.id}\n                className={Style.editor_container +\n                    (isEditorOpen ? ' open ' : '') +\n                    ' ' + this.props.className}\n                style={targetStyle}>\n                <PatternInput ref={ref => this.inputComponent = ref}\n                    submitOnBlur={this.props.saveOnExit}\n                    onSubmit={this.onInputSubmit}\n                    onBlur={this.onInputBlur} />\n                <div className={Style.tray_container}>\n                    {this.props.children}\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction transformViewToScreen(svg, x, y)\n{\n    const ctm = svg.getScreenCTM();\n    return {\n        x: (x * ctm.a) + ctm.e,\n        y: (y * ctm.d) + ctm.f\n    };\n}\n\nexport default LabelEditorWidget;\n","\n/**\n * A class that represents a parser that can encode (compose)\n * and decode (parse) to and from a target object and data.\n */\nclass Parser\n{\n    constructor() {}\n\n    /**\n     * Parses the data object to another object.\n     * \n     * @param  {Object} data    the data to parse.\n     * @param  {*} [dst=null]   the target to set parsed data. If this is null, the\n     *                          data will be set on a new target and returned.\n     * @return {*}              the result in the passed-in dst.\n     */\n    parse(data, dst = null)\n    {\n        return dst;\n    }\n\n    /**\n     * Composes an object from the target.\n     * \n     * @param  {*} target               the target to compose into data.\n     * @param  {Object} [dst=null]      the object to append the composed data. If this\n     *                                  is null, the data will be set on a new empty\n     *                                  object and returned.\n     * @return {Object}                 the result in the passed-in dst.\n     */\n    compose(target, dst = null)\n    {\n        return dst;\n    }\n}\n\nexport default Parser;\n","const MAJOR_INDEX = 0;\nconst MINOR_INDEX = 1;\nconst PATCH_INDEX = 2;\n\nclass SemanticVersion\n{\n    /**\n     * @param {Number} major the major version value\n     * @param {Number} minor the minor version value\n     * @param {Number} patch the patch version value\n     */\n    constructor(major = 0, minor = 0, patch = 0)\n    {\n        this.major = major;\n        this.minor = minor;\n        this.patch = patch;\n    }\n\n    /**\n     * Checks whether this version can support the other version. More specfically,\n     * it returns true if the other version is newer but within the same major\n     * version. Because of how versioning works, order matters!\n     * \n     * @param {SemanticVersion} otherVersion  the version to compare to\n     * @returns {Boolean}                     whether this version can support the other\n     */\n    canSupportVersion(otherVersion)\n    {\n        return this.major == otherVersion.major &&\n            (this.minor < otherVersion.minor ||\n                (this.minor == otherVersion.minor && this.patch <= otherVersion.patch));\n    }\n\n    toString()\n    {\n        return this.major + '.' +\n            this.minor + '.' +\n            this.patch;\n    }\n\n    static parse(string)\n    {\n        if (typeof string != 'string') throw new Error('Invalid argument type to parse as SemanticVersion');\n\n        const components = string.split('.');\n        if (components.length != 3) throw new Error('Invalid format for SemanticVersion');\n\n        let major, minor, patch;\n        try\n        {\n            major = Number.parseInt(components[MAJOR_INDEX]);\n            minor = Number.parseInt(components[MINOR_INDEX]);\n            patch = Number.parseInt(components[PATCH_INDEX]);\n        }\n        catch (e)\n        {\n            throw e;\n        }\n\n        return new SemanticVersion(major, minor, patch);\n    }\n}\n\nexport default SemanticVersion;","import Parser from 'util/file/Parser.js';\nimport SemanticVersion from 'util/version/SemanticVersion.js';\nimport NodeGraph from './NodeGraph.js';\n\nimport GraphNode from 'graph2/element/GraphNode';\nimport GraphEdge from 'graph2/element/GraphEdge.js';\nimport QuadraticEdge from 'graph2/element/QuadraticEdge.js';\n\nexport const VERSION_STRING = '1.0.0';\nexport const VERSION = SemanticVersion.parse(VERSION_STRING);\n\n/**\n * A class that parses and composes NodeGraph's to and from JSON data.\n */\nclass NodeGraphParser extends Parser\n{\n    constructor()\n    {\n        super();\n\n        this._nodeIndices = new Map();\n    }\n\n    /**\n\t * @override\n\t * @param  {Object} data         \t\tthe graph data to parse\n\t * @param  {NodeGraph} [dst=null]\t\tthe target to set parsed graph data\n\t * @return {NodeGraph}            \tthe result in the passed-in dst\n\t */\n    parse(data, dst = null)\n    {\n        if (typeof data !== 'object')\n        {\n            throw new Error('Unable to parse data of non-object type');\n        }\n\n        const dataVersion = SemanticVersion.parse(data['_version'] || '0.0.0');\n        if (!dataVersion.canSupportVersion(VERSION))\n        {\n            throw new Error('Unable to parse data for incompatible version \\'' + dataVersion + '\\'');\n        }\n\n        const nodeDatas = data['nodes'] || [];\n        const nodeCount = Math.min(nodeDatas.length || 0, data['nodeCount'] || 0);\n        const edgeDatas = data['edges'] || [];\n        const edgeCount = Math.min(edgeDatas.length || 0, data['edgeCount'] || 0);\n\n        dst = this.onParseGraphCreate(data, dst);\n\n        const nodeIndices = this._nodeIndices;\n        for (let i = 0; i < nodeCount; ++i)\n        {\n            const nodeData = nodeDatas[i];\n            if (!nodeData) continue;\n\n            // NOTE: Assumes createNode will maintain order\n            const node = dst.createNode(nodeData['x'] || 0, nodeData['y'] || 0, nodeData['id']);\n            node.setNodeLabel(nodeData['label'] || '');\n\n            this.onParseNode(nodeData, node);\n\n            nodeIndices.set(i, node);\n        }\n\n        for (let i = 0; i < edgeCount; ++i)\n        {\n            const edgeData = edgeDatas[i];\n            if (!edgeData) continue;\n            const sourceNode = nodeIndices.get(edgeData['from']) || null;\n            // Cannot create source-less edges\n            if (!sourceNode) continue;\n            const destinationNode = nodeIndices.get(edgeData['to']) || null;\n\n            // NOTE: Assumes createEdge will maintain order\n            const edge = dst.createEdge(sourceNode, destinationNode, edgeData['id']);\n            edge.setEdgeLabel(edgeData['label'] || '');\n\n            this.onParseEdge(edgeData, edge);\n        }\n\n        this.onParseGraphResult(data, dst);\n\n        // Clean-up\n        nodeIndices.clear();\n\n        return dst;\n    }\n\n    /**\n\t * @override\n\t * @param  {NodeGraph} target     the graph to compose into data\n\t * @param  {Object} [dst=null]    the object to append graph data\n\t * @return {Object}               the result in the passed-in dst\n\t */\n    compose(target, dst = null)\n    {\n        if (!(target instanceof NodeGraph))\n        {\n            throw new Error('Unable to compose target of non-graph type');\n        }\n\n        dst = this.onComposeGraphCreate(target, dst);\n\n        const graphNodes = target.getNodes() || [];\n        const nodeCount = graphNodes.length || 0;\n        const graphEdges = target.getEdges() || [];\n        const edgeCount = graphEdges.length || 0;\n\n        const nodeDatas = new Array(nodeCount);\n        const nodeIndices = this._nodeIndices;\n        let node;\n        for (let i = 0; i < nodeCount; ++i)\n        {\n            node = graphNodes[i];\n            if (node)\n            {\n                //NOTE: Assumes node must have an id\n                const elementID = node.getGraphElementID();\n\n                nodeIndices.set(node, i);\n\n                const nodeData = {\n                    id: elementID,\n                    x: node.x || 0, y: node.y || 0,\n                    label: node.getNodeLabel() || ''\n                };\n\n                this.onComposeNode(node, nodeData);\n                \n                nodeDatas[i] = nodeData;\n            }\n        }\n\n        const edgeDatas = new Array(edgeCount);\n        let edge;\n        for (let i = 0; i < edgeCount; ++i)\n        {\n            edge = graphEdges[i];\n            if (edge)\n            {\n                //NOTE: Assumes edge must have an id\n                const elementID = edge.getGraphElementID();\n\n                const edgeSource = edge.getEdgeFrom();\n                const edgeDestination = edge.getEdgeTo();\n                const sourceIndex = nodeIndices.has(edgeSource) ? nodeIndices.get(edgeSource) : -1;\n                const destinationIndex = nodeIndices.has(edgeDestination) ? nodeIndices.get(edgeDestination) : -1;\n                const edgeData = {\n                    id: elementID,\n                    from: sourceIndex,\n                    to: destinationIndex,\n                    label: edge.getEdgeLabel() || ''\n                };\n\n                this.onComposeEdge(edge, edgeData);\n\n                edgeDatas[i] = edgeData;\n            }\n        }\n\n        dst['_version'] = VERSION_STRING;\n        dst['nodeCount'] = nodeCount;\n        dst['nodes'] = nodeDatas;\n        dst['edgeCount'] = edgeCount;\n        dst['edges'] = edgeDatas;\n\n        this.onComposeGraphResult(target, dst);\n\n        // Clean-up\n        nodeIndices.clear();\n\n        return dst;\n    }\n\n    onParseGraphCreate(graphData, targetGraph)\n    {\n        const hasQuad = graphData['quad'] || false;\n        if (!targetGraph)\n        {\n            targetGraph = new NodeGraph(GraphNode, hasQuad ? QuadraticEdge : GraphEdge);\n        }\n        else\n        {\n            targetGraph.clear();\n        }\n        return targetGraph;\n    }\n\n    onParseNode(nodeData, targetNode)\n    {\n        // Nothing else needs to be done :3\n    }\n\n    onParseEdge(edgeData, targetEdge)\n    {\n        if (targetEdge instanceof QuadraticEdge)\n        {\n            const quadData = edgeData['quad'] || {};\n            targetEdge.setQuadraticRadians(quadData['radians'] || 0);\n            targetEdge.setQuadraticLength(quadData['length'] || 0);\n        }\n    }\n\n    onParseGraphResult(graphData, targetGraph)\n    {\n        // Everything is handled so far...\n    }\n\n    onComposeGraphCreate(graph, graphData)\n    {\n        return graphData || {};\n    }\n\n    onComposeNode(node, nodeData)\n    {\n        // Yep. It's all good.\n    }\n\n    onComposeEdge(edge, edgeData)\n    {\n        if (edge instanceof QuadraticEdge)\n        {\n            const quad = edge.getQuadratic() || {};\n            edgeData['quad'] = {\n                radians: quad['radians'] || 0,\n                length: quad['length'] || 0\n            };\n        }\n    }\n\n    onComposeGraphResult(graph, graphData)\n    {\n        let hasQuad = false;\n        const edges = graph.getEdges();\n        for(const edge of edges)\n        {\n            if (edge instanceof QuadraticEdge)\n            {\n                hasQuad = true;\n                break;\n            }\n        }\n        graphData['hasQuad'] = hasQuad;\n    }\n}\n\nexport default NodeGraphParser;\n","import GraphController from 'graph2/controller/GraphController.js';\n\nimport { GRAPH_EVENT_NODE_EDIT_WHILE_DELETE } from 'graph2/inputhandler/GraphNodeInputHandler.js';\nimport { GRAPH_EVENT_EDGE_EDIT_WHILE_DELETE } from 'graph2/inputhandler/GraphEdgeInputHandler.js';\n\nimport { WARNING_LAYOUT_ID } from 'session/manager/notification/NotificationManager.js';\n\nexport const TRASH_EDITING_NOTIFICATION_TAG = 'tryCreateWhileTrash';\n\nclass NodeGraphController extends GraphController\n{\n    constructor(app, graph)\n    {\n        super(graph);\n\n        this._app = app;\n    }\n\n    /** @override */\n    onGraphEvent(eventName, eventData)\n    {\n        super.onGraphEvent(eventName, eventData);\n\n        switch (eventName)\n        {\n        case GRAPH_EVENT_NODE_EDIT_WHILE_DELETE:\n        case GRAPH_EVENT_EDGE_EDIT_WHILE_DELETE:\n            this._app.getNotificationManager().pushNotification(\n                I18N.toString('message.warning.cannotmodify'),\n                WARNING_LAYOUT_ID, TRASH_EDITING_NOTIFICATION_TAG, null, true);\n            break;\n        default:\n            this._app.getUndoManager().captureEvent();\n        }\n    }\n\t\n    getApp() { return this._app; }\n}\n\nexport default NodeGraphController;","import AbstractEventHandler from 'session/manager/undo/AbstractEventHandler.js';\n\nclass SafeUndoNodeGraphEventHandler extends AbstractEventHandler\n{\n    constructor(graphController, graphParser)\n    {\n        super();\n\n        this._graphController = graphController;\n        this._graphParser = graphParser;\n\n        this._graphData = this._graphParser.compose(graphController.getGraph());\n    }\n\n    /** @override */\n    applyUndo(undoManager)\n    {\n        const prevEvent = undoManager.getPreviousEvent();\n        if (prevEvent instanceof SafeUndoNodeGraphEventHandler)\n        {\n            prevEvent.applyRedo(undoManager);\n        }\n        else\n        {\n            const graph = this._graphController.getGraph();\n            graph.clear();\n        }\n    }\n\n    /** @override */\n    applyRedo(undoManager)\n    {\n        const graph = this._graphController.getGraph();\n        this._graphParser.parse(this._graphData, graph);\n    }\n}\nexport default SafeUndoNodeGraphEventHandler;\n","import React from 'react';\n\nimport GraphNodeLayer from 'graph2/components/layers/GraphNodeLayer.js';\nimport GraphEdgeLayer from 'graph2/components/layers/GraphEdgeLayer.js';\nimport SelectionBoxLayer from 'graph2/components/layers/SelectionBoxLayer.js';\nimport IndexedGraphStartMarkerLayer from 'graph2/components/layers/IndexedGraphStartMarkerLayer.js';\n\nclass NodeGraphLayer extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    componentDidMount()\n    {\n        const graphView = this.props.graphView;\n        const inputContext = graphView.getInputContext();\n        inputContext.addInputHandler(this._fsaNodeInputHandler);\n    }\n\n    /** @override */\n    componentWillUnmount()\n    {\n        const graphView = this.props.graphView;\n        const inputContext = graphView.getInputContext();\n        inputContext.removeInputHandler(this._fsaNodeInputHandler);\n    }\n\n    /** @override */\n    render()\n    {\n        const graphView = this.props.graphView;\n        const graphController = this.props.graphController;\n        const editable = this.props.editable;\n\n        const graph = graphController.getGraph();\n        const inputController = graphView.getInputController();\n        const inputContext = graphView.getInputContext();\n\n        return (\n            <React.Fragment>\n                <IndexedGraphStartMarkerLayer\n                    inputController={inputController}\n                    graphController={graphController}\n                    inputContext={inputContext}\n                    inputPriority={-1}\n                    editable={editable} />\n                <GraphNodeLayer\n                    nodes={graph.getNodes()}\n                    inputController={inputController}\n                    graphController={graphController}\n                    inputContext={inputContext}\n                    inputPriority={-1}\n                    editable={editable} />\n                <GraphEdgeLayer\n                    edges={graph.getEdges()}\n                    inputController={inputController}\n                    graphController={graphController}\n                    inputContext={inputContext}\n                    inputPriority={-1}\n                    editable={editable} />\n                <SelectionBoxLayer\n                    inputController={inputController}\n                    graphController={graphController}\n                    inputContext={inputContext}\n                    inputPriority={-1} />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default NodeGraphLayer;\n","import React from 'react';\n\nimport ViewportEditLayer from 'graph2/components/layers/ViewportEditLayer.js';\nimport ViewportNavigationLayer from 'graph2/components/layers/ViewportNavigationLayer.js';\n\nimport LabelEditorWidget from 'graph2/components/widgets/LabelEditorWidget.js';\n\nclass NodeGraphOverlayLayer extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        const session = this.props.session;\n        const graphView = this.props.graphView;\n        const graphController = this.props.graphController;\n        const labelFormatter = graphController.getLabelFormatter();\n        const inputController = graphView.getInputController();\n\n        return (\n            <React.Fragment>\n                <ViewportEditLayer\n                    graphController={graphController}\n                    inputController={inputController}\n                    viewport={graphView.getViewportComponent()}\n                    session={session}/>\n                <ViewportNavigationLayer\n                    style={{ right: 0 }}\n                    viewportAdapter={graphView.getViewportAdapter()} />\n                <LabelEditorWidget ref={ref => graphController.setLabelEditor(ref)}\n                    labelFormatter={labelFormatter}\n                    viewport={graphView.getViewportComponent()}\n                    saveOnExit={true}>\n                </LabelEditorWidget>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default NodeGraphOverlayLayer;","import React from 'react';\n\nimport { userClearGraph } from 'experimental/UserUtil.js';\nimport { CTRL_KEY } from 'session/manager/hotkey/HotKeyManager.js';\nimport { RENDER_LAYER_WORKSPACE } from 'session/manager/RenderManager.js';\n\nimport NodeGraph from 'graph2/NodeGraph.js';\nimport GraphNode from 'graph2/element/GraphNode.js';\nimport QuadraticEdge from 'graph2/element/QuadraticEdge.js';\n\nimport NodeGraphParser from 'graph2/NodeGraphParser.js';\nimport NodeGraphController from './graph/NodeGraphController.js';\n\nimport { registerImageExporters } from './filehandlers/NodalGraphImageExporter.js';\n\nimport SafeUndoNodeGraphEventHandler from 'graph2/SafeUndoNodeGraphEventHandler.js';\n\n/* COMPONENTS */\n\nimport PanelContainer from 'experimental/panels/PanelContainer.js';\n\nimport NodeGraphLayer from './components/layers/NodeGraphLayer.js';\nimport NodeGraphOverlayLayer from './components/layers/NodeGraphOverlayLayer.js';\n\nimport GraphView from 'graph2/components/GraphView.js';\n\nconst MODULE_NAME = 'nodegraph';\nconst MODULE_VERSION = '0.0.1';\nconst MODULE_LOCALIZED_NAME = 'Node Graph';\n\nclass NodalGraphModule\n{\n    constructor(app)\n    {\n        this._app = app;\n\n        this._graph = new NodeGraph(GraphNode, QuadraticEdge);\n        this._graphParser = new NodeGraphParser();\n        this._graphController = new NodeGraphController(app, this._graph);\n        this._graphViewComponent = React.createRef();\n\n        const graphController = this._graphController;\n\n        app.getRenderManager()\n            .addRenderer(RENDER_LAYER_WORKSPACE, props => (\n                <GraphView\n                    ref={this._graphViewComponent}\n                    renderGraph={graphView =>\n                        <NodeGraphLayer graphView={graphView} graphController={graphController} editable={true} />}\n                    renderOverlay={graphView =>\n                        <NodeGraphOverlayLayer graphView={graphView} graphController={graphController} session={this._app.getSession()} />}>\n                </GraphView>\n            ));\n    }\n\n    /** @override */\n    initialize(app)\n    {\n        registerImageExporters(app.getExportManager());\n\n        app.getUndoManager()\n            .setEventHandlerFactory((...args) =>\n                new SafeUndoNodeGraphEventHandler(this._graphController, this._graphParser));\n\n        app.getDrawerManager()\n            .addPanelClass(props => (\n                <PanelContainer id={props.id}\n                    className={props.className}\n                    style={props.style}\n                    title={'Your Average Graph Editor'}>\n                    <p>{'Brought to you with \\u2764 by the Flap.js team.'}</p>\n                    <p>{'<- Tap on a tab to begin!'}</p>\n                </PanelContainer>\n            ));\n\n        app.getHotKeyManager()\n            .registerHotKey('Export to PNG', [CTRL_KEY, 'KeyP'], () => { app.getExportManager().tryExportFile('image-png', app.getSession()); });\n\n        this._graphController.initialize();\n    }\n\n    /** @override */\n    update(app)\n    {\n        this._graphController.update();\n    }\n\n    /** @override */\n    destroy(app)\n    {\n        this._graphController.destroy();\n    }\n\n    /** @override */\n    clear(app, graphOnly = false)\n    {\n        userClearGraph(app, graphOnly, () => app.getToolbarComponent().closeBar());\n    }\n\n    getGraphController() { return this._graphController; }\n    getGraphView() { return this._graphViewComponent.current; }\n\n    /** @override */\n    getModuleVersion() { return MODULE_VERSION; }\n    /** @override */\n    getModuleName() { return MODULE_NAME; }\n    /** @override */\n    getLocalizedModuleName() { return MODULE_LOCALIZED_NAME; }\n\n    getApp() { return this._app; }\n}\n\nexport default NodalGraphModule;\n"],"sourceRoot":""}