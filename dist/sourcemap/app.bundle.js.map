{"version":3,"sources":["webpack:///./src/app/config.js","webpack:///./src/app/router.js","webpack:///./src/app/index.js"],"names":["__webpack_require__","d","__webpack_exports__","loadConfig","saveConfig","LOCAL_STORAGE_ID","cfg","jsonString","localStorage","getItem","console","log","jsonData","JSON","parse","clearConfig","Object","assign","e","arguments","length","undefined","_userDefined","_dirty","stringify","setItem","removeItem","_resetOnLoad","setValue","key","value","this","hasOwnProperty","Error","bind","MACHINE_ERRORS_MESSAGE_TAG","MACHINE_CONVERSION_MESSAGE_TAG","ERROR_CHECK_INTERVAL","GRAPH_IMMEDIATE_INTERVAL","SMOOTH_OFFSET_DAMPING","SCROLL_SENSITIVITY","MIN_SCALE","MAX_SCALE","INIT_WAITTIME","STR_TRANSITION_DEFAULT_LABEL","EDGE_SYMBOL_SEPARATOR","STR_STATE_LABEL","PARALLEL_EDGE_HEIGHT","SELF_LOOP_HEIGHT","SUBMIT_KEY","CLEAR_KEY","TAB_KEY","UP_KEY","DOWN_KEY","DELETE_KEY","DELETE_FORWARD_KEY","DEFAULT_GRAPH_SIZE","NODE_RADIUS","NODE_RADIUS_SQU","NODE_DIAMETER","NODE_RADIUS_INNER","INITIAL_MARKER_OFFSET_X","EDGE_RADIUS","EDGE_RADIUS_SQU","ARROW_WIDTH","PLACEHOLDER_LENGTH","ENDPOINT_RADIUS","ENDPOINT_RADIUS_SQU","HOVER_RADIUS_OFFSET","CURSOR_RADIUS","CURSOR_RADIUS_SQU","DOUBLE_TAP_TICKS","LONG_TAP_TICKS","SPAWN_RADIUS","DEFAULT_SHOULD_DESTROY_POINTLESS_EDGE","DRAGGING_BUFFER","DRAGGING_BUFFER_SQU","PADDING_RADIUS_SQU","ROUTER","_current","routeTo","component","getCurrentPage","r","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","router_js__WEBPACK_IMPORTED_MODULE_2__","config_js__WEBPACK_IMPORTED_MODULE_3__","window","addEventListener","event","root","document","getElementById","Promise","all","then","_ref","_","default","Router","requestAnimationFrame","updateApplication","message","I18N","toString","returnValue","isUpdateAvailable","hasUpdate","alert","FRAMES_PER_SECOND","prevtime","time","page","ReactDOM","render","React","createElement"],"mappings":"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","file":"app.bundle.af6361202b96ad03f4a5.js","sourcesContent":["const LOCAL_STORAGE_ID = \"config\";\n\nconst cfg = {};\ncfg._resetOnLoad = false;\ncfg._userDefined = false;\ncfg._dirty = false;\ncfg.setValue = function(key, value) {\n  if (this.hasOwnProperty(key))\n  {\n    this._userDefined = true;\n    this._dirty = true;\n    this[key] = value;\n  }\n  else\n  {\n    throw new Error(\"Trying to assign value to non-existant key in config\");\n  }\n}.bind(cfg);\nexport default cfg;\n\n//Preferences\n\n//General\ncfg.MACHINE_ERRORS_MESSAGE_TAG = \"machineError\";\ncfg.MACHINE_CONVERSION_MESSAGE_TAG = \"machineConversion\";\n\ncfg.ERROR_CHECK_INTERVAL = 2000;\ncfg.GRAPH_IMMEDIATE_INTERVAL = 50;\n\n//Controller\ncfg.SMOOTH_OFFSET_DAMPING = 0.4;\ncfg.SCROLL_SENSITIVITY = 1.0 / 300.0;\ncfg.MIN_SCALE = 0.1;\ncfg.MAX_SCALE = 10;\n\n//Workspace\ncfg.INIT_WAITTIME = 1500;\n\n//NodalGraph\ncfg.STR_TRANSITION_DEFAULT_LABEL = \"\";\ncfg.EDGE_SYMBOL_SEPARATOR = \" \";\ncfg.STR_STATE_LABEL = \"q\";\ncfg.PARALLEL_EDGE_HEIGHT = 10;\ncfg.SELF_LOOP_HEIGHT = 40;\n\n//Input Fields\ncfg.SUBMIT_KEY = 13; //ENTER\ncfg.CLEAR_KEY = 27; //ESCAPE\ncfg.TAB_KEY = 9; //TAB\ncfg.UP_KEY = 38; //UP\ncfg.DOWN_KEY = 40; //DOWN\ncfg.DELETE_KEY = 8; //DELETE\n\n/** LEGACY CONFIG **/\n\n//Input\ncfg.DELETE_FORWARD_KEY = 46; //DELETE FORWARD\n\n//Geometry\ncfg.DEFAULT_GRAPH_SIZE = 300;\n\ncfg.NODE_RADIUS = 16;\ncfg.NODE_RADIUS_SQU = cfg.NODE_RADIUS * cfg.NODE_RADIUS;\ncfg.NODE_DIAMETER = cfg.NODE_RADIUS * 2;\ncfg.NODE_RADIUS_INNER = 12;\n\ncfg.INITIAL_MARKER_OFFSET_X = -(cfg.NODE_RADIUS + (cfg.NODE_RADIUS / 2));\n\ncfg.EDGE_RADIUS = 12;\ncfg.EDGE_RADIUS_SQU = cfg.EDGE_RADIUS * cfg.EDGE_RADIUS;\ncfg.ARROW_WIDTH = 10;\ncfg.PLACEHOLDER_LENGTH = cfg.NODE_RADIUS * 3;\ncfg.ENDPOINT_RADIUS = 6;\ncfg.ENDPOINT_RADIUS_SQU = cfg.ENDPOINT_RADIUS * cfg.ENDPOINT_RADIUS;\n\ncfg.HOVER_RADIUS_OFFSET = 4;\ncfg.CURSOR_RADIUS = 4;\ncfg.CURSOR_RADIUS_SQU = cfg.CURSOR_RADIUS * cfg.CURSOR_RADIUS;\n\n//Interface\ncfg.DOUBLE_TAP_TICKS = 600;\ncfg.LONG_TAP_TICKS = 600;\ncfg.SPAWN_RADIUS = 64;\ncfg.DEFAULT_SHOULD_DESTROY_POINTLESS_EDGE = true;\ncfg.DRAGGING_BUFFER = 18;\ncfg.DRAGGING_BUFFER_SQU = cfg.DRAGGING_BUFFER * cfg.DRAGGING_BUFFER;\n\n//Graph sorting\ncfg.PADDING_RADIUS_SQU = 2304;\n\n\n/** LOCAL STORAGE FUNCTIONS **/\n\n//check if browser support local storage\nexport function doesSupportLocalStorage()\n{\n  return typeof(Storage) !== 'undefined';\n}\n\nexport function loadConfig()\n{\n  const jsonString = localStorage.getItem(LOCAL_STORAGE_ID);\n  //If cannot find a config...\n  if (!jsonString)\n  {\n    //Just use the default one and don't save anything...\n    console.log(\"Using default config...\");\n    return;\n  }\n\n  try\n  {\n    console.log(\"Loading config...\");\n    const jsonData = JSON.parse(jsonString);\n    if (jsonData['_resetOnLoad'] == true)\n    {\n      //Reset the config\n      clearConfig();\n\n      //Save a new config\n      saveConfig();\n    }\n    else\n    {\n      Object.assign(cfg, jsonData);\n    }\n  }\n  catch (e)\n  {\n    //Reset the config\n    clearConfig();\n  }\n};\n\nexport function saveConfig(forceSave=false)\n{\n  if (forceSave || (cfg._userDefined && cfg._dirty))\n  {\n    try\n    {\n      console.log(\"Saving config...\");\n      const jsonString = JSON.stringify(cfg);\n      localStorage.setItem(LOCAL_STORAGE_ID, jsonString);\n\n      cfg._dirty = false;\n    }\n    catch (e)\n    {\n      //Reset the config\n      clearConfig();\n    }\n  }\n};\n\nexport function clearConfig()\n{\n  localStorage.removeItem(LOCAL_STORAGE_ID);\n\n  cfg._dirty = true;\n};\n","const ROUTER = {\n  _current: null,\n  routeTo(component)\n  {\n    this._current = component;\n  },\n  getCurrentPage()\n  {\n    return this._current;\n  }\n};\n\nexport default ROUTER;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n//Router: imports\nimport Router from 'router.js';\n//Config: imports\nimport Config from 'config.js';\nimport { loadConfig, saveConfig } from 'config.js';\nconst AUTOSAVE_CONFIG = true;\n\nconst SHOULD_WARN_USERS_ON_EXIT = true;\n\n//Setup viewport\nwindow.addEventListener('load', (event) => {\n  console.log(\"Preparing for \\'\" + process.env.NODE_ENV + \"\\' environment...\");\n  loadApplication();\n  window.requestAnimationFrame(updateApplication);\n});\n\n//Warn user before exit\nwindow.addEventListener('beforeunload', (event) => {\n  //Config: Only save if changes were made\n  if (AUTOSAVE_CONFIG) saveConfig();\n\n  if (SHOULD_WARN_USERS_ON_EXIT)\n  {\n    const message = I18N.toString(\"alert.window.exit\");\n    event = event || window.event;\n    // For IE and Firefox\n    if (event) event.returnValue = message;\n\n    //For Safari\n    return message;\n  }\n});\n\n//Tell the client that an update is available\nwindow.isUpdateAvailable.then(hasUpdate => {\n  if (hasUpdate)\n  {\n    window.alert(\"*** Update \" + process.env.VERSION + \" is here! *** \\n Please restart the browser.\");\n  }\n});\n\n//Setup application\nconst FRAMES_PER_SECOND = 60;\nvar prevtime = 0;\nvar root;\nvar dt;\n\n//Load application\nfunction loadApplication()\n{\n  loadConfig();\n  root = document.getElementById(\"root\");\n  import(/* webpackChunkName: \"landing\" */ 'landing/components/LandingPage.js').then(({ default: _ }) => {\n    Router.routeTo( _ );\n  });\n}\n\n//Update application\nfunction updateApplication(time)\n{\n  dt = (time - prevtime) / FRAMES_PER_SECOND;\n  {\n    const page = Router.getCurrentPage();\n    if (page)\n    {\n      ReactDOM.render(React.createElement(page), root);\n    }\n  }\n  prevtime = time;\n  window.requestAnimationFrame(updateApplication);\n}\n"],"sourceRoot":""}