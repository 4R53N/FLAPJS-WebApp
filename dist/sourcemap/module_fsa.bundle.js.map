{"version":3,"sources":["webpack:///./src/app/system/formattedinput/FormattedInput.js","webpack:///./src/app/modules/fsa/panels/overview/infoblock/InfoBlock.js","webpack:///./src/app/icons/BoxAddIcon.js","webpack:///./src/app/icons/TriangleIcon.js","webpack:///./src/app/modules/fsa/panels/overview/stateslist/StateTag.js","webpack:///./src/app/modules/fsa/panels/overview/stateslist/StatesList.js","webpack:///./src/app/modules/fsa/panels/overview/alphabetlist/AlphabetTag.js","webpack:///./src/app/modules/fsa/panels/overview/alphabetlist/AlphabetList.js","webpack:///./src/app/machine/FSA.js","webpack:///./src/app/machine/Symbols.js","webpack:///./src/app/machine/NFA.js","webpack:///./src/app/modules/fsa/panels/overview/transitiontable/TransitionTable.js","webpack:///./src/app/modules/fsa/panels/overview/transitionfunction/TransitionFunction.js","webpack:///./src/app/modules/fsa/panels/overview/formaldefinition/FormalDefinition.js","webpack:///./src/app/modules/fsa/panels/overview/OverviewPanel.js","webpack:///./src/app/machine/util/solveNFA.js","webpack:///./src/app/machine/DFA.js","webpack:///./src/app/modules/fsa/testing/TestMode.js","webpack:///./src/app/modules/fsa/testing/TestingInputList.js","webpack:///./src/app/modules/fsa/testing/TestingManager.js","webpack:///./src/app/icons/AddIcon.js","webpack:///./src/app/icons/RemoveIcon.js","webpack:///./src/app/icons/SuccessIcon.js","webpack:///./src/app/icons/FailureIcon.js","webpack:///./src/app/icons/RunningManIcon.js","webpack:///./src/app/modules/fsa/panels/testing/StatusButton.js","webpack:///./src/app/modules/fsa/panels/testing/TestingInput.js","webpack:///./src/app/modules/fsa/panels/testing/components/UploadTestButton.js","webpack:///./src/app/icons/PageNewContentIcon.js","webpack:///./src/app/icons/CloseIcon.js","webpack:///./src/app/modules/fsa/panels/testing/TestingPanel.js","webpack:///./src/app/modules/fsa/notifications/NFAToDFAConversionWarningMessage.js","webpack:///./src/app/modules/fsa/panels/analysis/AnalysisPanel.js","webpack:///./src/app/modules/fsa/panels/about/AboutPanel.js","webpack:///./src/app/modules/fsa/controller/GraphPicker.js","webpack:///./src/app/modules/fsa/graph/FSANode.js","webpack:///./src/app/graph/QuadraticEdge.js","webpack:///./src/app/modules/fsa/graph/FSAEdge.js","webpack:///./src/app/modules/fsa/controller/InputController.js","webpack:///./src/app/util/Eventable.js","webpack:///./src/app/modules/fsa/graph/GraphLayout.js","webpack:///./src/app/modules/fsa/graph/FSAGraph.js","webpack:///./src/app/modules/fsa/controller/GraphController.js","webpack:///./src/app/machine/util/convertNFA.js","webpack:///./src/app/modules/fsa/controller/MachineController.js","webpack:///./src/app/modules/fsa/graph/renderer/NodeRenderer.js","webpack:///./src/app/modules/fsa/graph/renderer/EdgeRenderer.js","webpack:///./src/app/modules/fsa/graph/renderer/InitialMarkerRenderer.js","webpack:///./src/app/modules/fsa/graph/renderer/FSAGraphRenderer.js","webpack:///./src/app/content/workspace/renderer/SelectionBoxRenderer.js","webpack:///./src/app/content/workspace/renderer/HighlightRenderer.js","webpack:///./src/app/modules/fsa/graph/renderer/FSAGraphOverlayRenderer.js","webpack:///./src/app/content/viewport/TrashCan.js","webpack:///./src/app/icons/PlayIcon.js","webpack:///./src/app/icons/PauseIcon.js","webpack:///./src/app/icons/StopIcon.js","webpack:///./src/app/content/viewport/TestTray.js","webpack:///./src/app/icons/CreateIcon.js","webpack:///./src/app/icons/MoveIcon.js","webpack:///./src/app/content/viewport/CursorMode.js","webpack:///./src/app/modules/fsa/renderer/ViewportRenderer.js","webpack:///./src/app/modules/fsa/builder/MachineLabeler.js","webpack:///./src/app/modules/fsa/builder/MachineBuilder.js","webpack:///./src/app/modules/fsa/notifications/StateUnreachableWarningMessage.js","webpack:///./src/app/modules/fsa/notifications/StateMissingTransitionErrorMessage.js","webpack:///./src/app/modules/fsa/notifications/TransitionErrorMessage.js","webpack:///./src/app/modules/fsa/builder/DFAErrorChecker.js","webpack:///./src/app/modules/fsa/builder/NFAErrorChecker.js","webpack:///./src/app/modules/fsa/builder/FSABuilder.js","webpack:///./src/app/modules/fsa/controller/events/EventHandler.js","webpack:///./src/app/modules/fsa/controller/events/GraphNodeInitialEventHandler.js","webpack:///./src/app/modules/fsa/controller/events/GraphNodeMoveEventHandler.js","webpack:///./src/app/modules/fsa/controller/events/GraphNodeMoveAllEventHandler.js","webpack:///./src/app/modules/fsa/controller/events/GraphEdgeMoveEventHandler.js","webpack:///./src/app/modules/fsa/controller/events/GraphEdgeDestinationEventHandler.js","webpack:///./src/app/modules/fsa/controller/events/GraphEdgeLabelEventHandler.js","webpack:///./src/app/modules/fsa/controller/events/UserCreateNodeEventHandler.js","webpack:///./src/app/modules/fsa/controller/events/UserToggleNodeEventHandler.js","webpack:///./src/app/modules/fsa/graph/FSAGraphParser.js","webpack:///./src/app/modules/fsa/controller/events/UserDeleteNodesEventHandler.js","webpack:///./src/app/modules/fsa/controller/events/UserRenameNodeEventHandler.js","webpack:///./src/app/modules/fsa/controller/events/UserCreateEdgeEventHandler.js","webpack:///./src/app/modules/fsa/controller/events/UserDeleteEdgeEventHandler.js","webpack:///./src/app/modules/fsa/controller/events/UserImportGraphEventHandler.js","webpack:///./src/app/modules/fsa/controller/events/SafeGraphEventHandler.js","webpack:///./src/app/modules/fsa/controller/events/UserChangeMachineEventHandler.js","webpack:///./src/app/modules/fsa/controller/events/UserConvertMachineEventHandler.js","webpack:///./src/app/modules/fsa/controller/events/UserRenameMachineEventHandler.js","webpack:///./src/app/modules/fsa/controller/events/UserRenameSymbolEventHandler.js","webpack:///./src/app/modules/fsa/controller/events/UserDeleteSymbolEventHandler.js","webpack:///./src/app/modules/fsa/EventManager.js","webpack:///./src/app/modules/fsa/editor/LabelEditor.js","webpack:///./src/app/modules/fsa/exporter/FSAGraphExporter.js","webpack:///./src/app/icons/flat/XMLIcon.js","webpack:///./src/app/modules/fsa/exporter/JFLAPGraphExporter.js","webpack:///./src/app/modules/fsa/FSAModule.js"],"names":["FormattedInput","props","_this","_classCallCheck","this","_getPrototypeOf","call","element","ignoreSaveOnExit","defaultValue","state","value","prevValue","onChange","bind","_assertThisInitialized","onBlur","onKeyUp","React","Component","nextProps","hasFocus","length","setState","arguments","undefined","select","focus","blur","document","activeElement","e","filter","result","target","replace","_this2","captureOnExit","formatValue","prev","next","resetValue","onSubmit","_this3","key","_this4","newValue","callback","separator","selectionStart","selectionEnd","formatter","_this5","react_default","a","createElement","id","className","style","ref","type","InfoBlock","InfoBlock_classCallCheck","InfoBlock_possibleConstructorReturn","InfoBlock_getPrototypeOf","dropdown","createRef","open","onClick","title","IconToggle","pointerEvents","DropDownIcon","display","isOpen","children","BoxAddIcon","BoxAddIcon_classCallCheck","BoxAddIcon_possibleConstructorReturn","BoxAddIcon_getPrototypeOf","xmlns","width","height","viewBox","d","fill","TriangleIcon","TriangleIcon_classCallCheck","TriangleIcon_possibleConstructorReturn","TriangleIcon_getPrototypeOf","StateTag","StateTag_classCallCheck","StateTag_getPrototypeOf","error","onValueChange","StateTag_assertThisInitialized","onFocus","onKeyDown","label","graphController","newLabel","node","src","graph","getGraph","getNodesByLabel","renameNode","deleteTargetNode","keyCode","Config","SUBMIT_KEY","CLEAR_KEY","preventDefault","trim","nodes","isCustom","getNodeCustom","accept","spellCheck","StatesList","StatesList_classCallCheck","StatesList_getPrototypeOf","onStateCreate","StatesList_assertThisInitialized","x","Math","random","y","createNode","overview_infoblock_InfoBlock","I18N","toString","icons_TriangleIcon","getNodes","map","i","overview_stateslist_StateTag","getGraphElementID","getNodeLabel","getNodeAccept","ev","focusOnNode","IconButton","icons_BoxAddIcon","AlphabetTag","AlphabetTag_classCallCheck","AlphabetTag_getPrototypeOf","symbol","AlphabetTag_assertThisInitialized","machineController","newSymbol","oldSymbol","getAlphabet","includes","renameSymbol","createSymbol","deleteSymbol","maxLength","AlphabetList","AlphabetList_classCallCheck","AlphabetList_getPrototypeOf","editingTag","editing","onSymbolCreate","AlphabetList_assertThisInitialized","onStopEditing","alphabet","overview_alphabetlist_AlphabetTag","FSA","FSA_classCallCheck","_states","_transitions","_finalStates","_customAlphabet","fsa","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","push","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","transition","slice","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","final","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","Error","splice","indexOf","oldState","newState","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","index","fromState","toState","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","getStartState","unshift","isFinal","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","isUsedAlphabet","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","s","getUsedAlphabet","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","foundSymbols","Array","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","transitions","getOutgoingTransitions","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","DFA","NFA","states","usedAlphabet","startState","finalStates","ARROW","NFA_classCallCheck","NFA_possibleConstructorReturn","NFA_getPrototypeOf","dst","doClosureTransition","ps","nfaStates","getStates","j","len","concat","SRC","SYMBOL","DST","SYMBOL_AXIS","getDestinationFromSourceAndSymbol","machine","isSet","doTransition","isArray","join","TransitionTable","TransitionTable_classCallCheck","TransitionTable_possibleConstructorReturn","TransitionTable_getPrototypeOf","rowAxis","machineBuilder","getMachine","rowAxisType","getTransitions","isNFAMachine","getMachineType","hasEmptyColumn","scope","startsWith","getSymbolFromSourceAndDestination","TransitionFunction","TransitionFunction_classCallCheck","TransitionFunction_possibleConstructorReturn","TransitionFunction_getPrototypeOf","sort","isNFA","emptrans","empclassName","trans","FormalDefinition","FormalDefinition_classCallCheck","FormalDefinition_possibleConstructorReturn","FormalDefinition_getPrototypeOf","getFinalStates","DELTA","OverviewPanel","OverviewPanel_classCallCheck","OverviewPanel_getPrototypeOf","container","viewFormal","onChangeMachineType","OverviewPanel_assertThisInitialized","onAutoLayout","onChangeAutoRename","onSubmitAutoStatePrefix","onAutoStateFormat","switchDefinition","applyAutoLayout","changeMachineTo","getMachineBuilder","setAutoRenameNodes","checked","labeler","getLabeler","prefix","sortDefaultNodeLabels","STR_STATE_LABEL","overview_formaldefinition_FormalDefinition","overview_stateslist_StatesList","overview_alphabetlist_AlphabetList","overview_transitionfunction_TransitionFunction","overview_transitiontable_TransitionTable","paddingBottom","marginBottom","flexDirection","formattedinput_FormattedInput","background","outline","border","padding","margin","appearance","color","disabled","shouldAutoRenameNodes","htmlFor","isEmpty","UNLOCALIZED_NAME","solveNFAbyStep","nfa","cachedStates","cachedSymbols","checkedStates","nextStates","nextIndex","cstate","doTerminalTransition","nextState","isFinalState","apply","DFA_classCallCheck","DFA_possibleConstructorReturn","DFA_getPrototypeOf","console","isValidDFA","TestMode","testingManager","TestMode_classCallCheck","targets","history","indexofString","running","started","skipToEnd","timer","onNodeDestroy","app","getGraphController","getMachineController","prepareForNewTest","hasNextStep","inputList","resetTests","setTimeout","step","onNextStep","onPause","hasPrevInput","previous","pop","prevInput","getCurrentInput","hasNextInput","testInput","setResult","nextInput","currentStep","getCurrentCache","nextChar","getFirstGraphNodeByLabel","skipFunc","curr_state","TestingInputList","TestingInputList_classCallCheck","addInput","inputIndex","input","currState","counter","solveNFA","file","reader","FileReader","onload","event","testInputs","split","abort","readAsText","first","dirty","markDirty","guid","TestingManager","TestingManager_classCallCheck","viewport","shouldCheckError","isImmediateErrorCheck","errorCheckMode","NO_ERROR_CHECK","stepByStepMode","testMode","initialize","mode","setMachineType","DELAYED_ERROR_CHECK","IMMEDIATE_ERROR_CHECK","isStarted","onStop","onStart","Viewport","TESTING","prevMode","AddIcon","AddIcon_classCallCheck","AddIcon_possibleConstructorReturn","AddIcon_getPrototypeOf","RemoveIcon","RemoveIcon_classCallCheck","RemoveIcon_possibleConstructorReturn","RemoveIcon_getPrototypeOf","SuccessIcon","SuccessIcon_classCallCheck","SuccessIcon_possibleConstructorReturn","SuccessIcon_getPrototypeOf","FailureIcon","FailureIcon_classCallCheck","FailureIcon_possibleConstructorReturn","FailureIcon_getPrototypeOf","RunningManIcon","RunningManIcon_classCallCheck","RunningManIcon_possibleConstructorReturn","RunningManIcon_getPrototypeOf","StatusButton","StatusButton_classCallCheck","StatusButton_possibleConstructorReturn","StatusButton_getPrototypeOf","active","icons_SuccessIcon","icons_FailureIcon","icons_RunningManIcon","TestingInput","TestingInput_classCallCheck","TestingInput_getPrototypeOf","onStatusClick","TestingInput_assertThisInitialized","onSubmitClick","testList","getInputByIndex","testByIndex","isInputFirst","getInput","newTest","removeInputByIndex","DELETE_KEY","getTests","shouldTestOnly","shiftKey","getCurrentInputIndex","panels_testing_StatusButton","placeholder","icons_AddIcon","icons_RemoveIcon","UploadTestButton","UploadTestButton_classCallCheck","UploadTestButton_possibleConstructorReturn","UploadTestButton_getPrototypeOf","uploadInput","name","PageNewContentIcon","PageNewContentIcon_classCallCheck","PageNewContentIcon_possibleConstructorReturn","PageNewContentIcon_getPrototypeOf","CloseIcon","CloseIcon_classCallCheck","CloseIcon_possibleConstructorReturn","CloseIcon_getPrototypeOf","TestingPanel","TestingPanel_classCallCheck","TestingPanel_getPrototypeOf","getCurrentModule","getTestingManager","getErrorCheckMode","noTestMode","_savedGraphHash","_ticksSinceHash","stepByStepModeChecked","onChangeErrorCheckMode","TestingPanel_assertThisInitialized","onUploadFileChange","onGraphChange","onTestsRunAll","onTestsClear","onTestsSave","onTestsNew","onTestsUpload","getHashCode","g","files","importTests","getElementById","innerHTML","tester","setErrorCheckMode","machineErrorChecker","clear","setStepByStepMode","clearTests","clearTestName","hideTestInputList","Downloader","downloadText","getTestsAsStrings","showTestInputList","isTestInvalid","isValidMachine","graphHash","icons_PageNewContentIcon","components_UploadTestButton","UploadIcon","SaveIcon","icons_CloseIcon","panels_testing_TestingInput","NFAToDFAConversionWarningMessage","NFAToDFAConversionWarningMessage_classCallCheck","NFAToDFAConversionWarningMessage_getPrototypeOf","NFAToDFAConversionWarningMessage_assertThisInitialized","message","convertMachineTo","close","stateCount","pow","AnalysisPanel","AnalysisPanel_classCallCheck","AnalysisPanel_getPrototypeOf","optimizeUnreachOption","optimizeRedundOption","onConvertToDFA","AnalysisPanel_assertThisInitialized","onConvertToNFA","onOptimizeMachine","unreachableArray","getUnreachableNodes","deleteTargetNodes","messageTag","MACHINE_CONVERSION_MESSAGE_TAG","Notifications","addMessage","onDeleteAllUnreachable","canOptimize","AboutPanel","AboutPanel_classCallCheck","AboutPanel_possibleConstructorReturn","AboutPanel_getPrototypeOf","GraphPicker","GraphPicker_classCallCheck","selectionBox","fromX","fromY","toX","toY","visible","targetType","initialTarget","initialTargetType","getNodeByInitialMarkerAt","getEdgeByEndPointAt","getNodeAt","getEdgeAt","dx","dy","NODE_RADIUS_SQU","startNode","getStartNode","INITIAL_MARKER_OFFSET_X","EDGE_RADIUS_SQU","center","getEdges","edge","getCenterPoint","end","getEndPoint","ENDPOINT_RADIUS_SQU","box","mx","max","my","lx","min","ly","clearSelection","x1","y1","x2","y2","getNodesWithin","getSelection","FSANode","FSANode_classCallCheck","FSANode_possibleConstructorReturn","FSANode_getPrototypeOf","_accept","_custom","GraphNode","NODE_RADIUS","usePosition","_get","prototype","getDirectionalVector","dist","angleOffset","angle","atan2","cos","sin","getMidPoint","GraphCurvedEdge","from","to","QuadraticEdge_classCallCheck","QuadraticEdge_possibleConstructorReturn","QuadraticEdge_getPrototypeOf","_quad","radians","_coords","changeDestinationNode","GraphEdge","isPlaceholder","_from","_to","fromx","fromy","midpointx","midpointy","PI","HALFPI","sqrt","outrad","inrad","maxdr","abs","getNodeSize","setQuadratic","getSelfLoopHeight","prevDest","QuadraticEdge_get","formatAsPlaceholder","isSelfLoop","formatAsSelfLoop","isQuadratic","coords","getQuadraticAsCoords","px","py","nodeSize","qcoords","qx","qy","placeholderLength","getPlaceholderLength","FSAEdge","FSAEdge_classCallCheck","FSAEdge_possibleConstructorReturn","FSAEdge_getPrototypeOf","QuadraticEdge","FSAEdge_get","getEdgeLabel","InputController","module","inputAdapter","InputController_classCallCheck","InputController_possibleConstructorReturn","InputController_getPrototypeOf","_picker","_graphController","prevPointerX","prevPointerY","isNewEdge","ghostInitialMarker","shouldDestroyPointlessEdges","DEFAULT_SHOULD_DESTROY_POINTLESS_EDGE","_swapMouseScheme","_trashMode","AbstractInputController","InputController_get","picker","_inputAdapter","getPointerX","getPointerY","updateTarget","hasTarget","body","cursor","pointer","getPicker","setInitialTarget","hasSelection","isTargetInSelection","getStepByStepMode","isTrashMode","prevX","prevY","deleteSelectedNodes","deleteTargetEdge","toggleNode","openLabelEditor","onInputEvent","emit","getInputAdapter","getViewport","isMoveMode","Node","Edge","targetQuad","getQuadratic","prevQuad","createEdge","setEdgeLabel","STR_TRANSITION_DEFAULT_LABEL","edgeQuad","beginSelection","prevEdgeTo","getDestinationNode","moveMultipleNodesTo","moveNodeTo","moveEdgeTo","moveEndpointTo","addOffset","isSelecting","updateSelection","formatEdge","deleteEdge","prevInitial","setStartNode","endSelection","clearTarget","zoomValue","enabled","shouldInputFirst","isAltInput","isDragging","isPointerActive","Eventable","__eventListeners","mixin","targetClass","targetPrototype","Object","assign","registerEvent","eventName","Map","has","set","unregisterEvent","delete","addEventListener","listener","get","removeEventListener","listeners","flag","clearEventListeners","countEventListeners","getEventListeners","on","once","f","_len","args","_key","_len2","_key2","onEventProcessed","GraphLayout","reachableNode","reachable","getReachableState","unreachableNode","numOfReachable","numOfUnreachable","numOfNode","maxNum","radius","degree_re","degree_un","FSAGraph","FSAGraph_classCallCheck","FSAGraph_possibleConstructorReturn","FSAGraph_getPrototypeOf","NodalGraph","addNode","addEdge","_nodes","edgeSource","getSourceNode","edgeDestination","edgeLabel","getEdgeSymbolsFromLabel","_edges","otherEdge","otherSymbols","parallelEdgeHeight","maxNodeSize","dist12sq","vertical","m","b","x0","y0","GraphController","GraphController_classCallCheck","GraphController_possibleConstructorReturn","GraphController_getPrototypeOf","inputController","labelEditor","AbstractGraphController","getInputController","applyLayout","isPrevCustom","setNodeLabel","setNodeCustom","newNodeLabel","getNextDefaultNodeLabel","SPAWN_RADIUS","setNodeAccept","selectedNode","selection","deleteNode","other","diameter","nextDX","nextDY","pos","getInputEventPosition","changeInputEventPosition","setQuadraticByCoords","sourceNode","prevLabel","openEditor","setOffset","ax","ay","expandPowersetStateToDFA","powerSetState","dfa","getStateFromSet","hasState","newDFAStateFromNFA","terminals","dfaState","newTransition","setFinalState","MachineController","MachineController_classCallCheck","_module","machineName","getLabelFormatter","machineType","getMachineName","string","substring","setMachineName","read","currentMachineType","powerSetStates","getPowerSet","log","trapState","newAlphabet","convertToDFA","setGraphToMachine","addCustomSymbol","removeCustomSymbol","prevSymbol","nextSymbol","renameCustomSymbol","_symbols","isCustomSymbol","NodeRenderer","NodeRenderer_classCallCheck","NodeRenderer_possibleConstructorReturn","NodeRenderer_getPrototypeOf","cx","cy","r","stroke","NODE_RADIUS_INNER","userSelect","fontSize","textAnchor","EdgeRenderer","EdgeRenderer_classCallCheck","EdgeRenderer_possibleConstructorReturn","EdgeRenderer_getPrototypeOf","SIXTH_PI","arrowAngle","start","getStartPoint","quadCoords","edgeDir","getEdgeDirection","flipLabel","quadLine","labels","ARROW_WIDTH","transform","str","yy","alignmentBaseline","InitialMarkerRenderer","InitialMarkerRenderer_classCallCheck","InitialMarkerRenderer_possibleConstructorReturn","InitialMarkerRenderer_getPrototypeOf","FSAGraphRenderer","FSAGraphRenderer_classCallCheck","FSAGraphRenderer_possibleConstructorReturn","FSAGraphRenderer_getPrototypeOf","renderer_NodeRenderer","renderer_EdgeRenderer","renderer_InitialMarkerRenderer","SelectionBoxRenderer","SelectionBoxRenderer_classCallCheck","SelectionBoxRenderer_possibleConstructorReturn","SelectionBoxRenderer_getPrototypeOf","HIGHLIGHT_LINE_ARRAY","HighlightRenderer","HighlightRenderer_classCallCheck","HighlightRenderer_possibleConstructorReturn","HighlightRenderer_getPrototypeOf","CURSOR_RADIUS","EDGE_RADIUS","endpoint","ENDPOINT_RADIUS","strokeDashoffset","offset","strokeDasharray","strokeWidth","FSAGraphOverlayRenderer","FSAGraphOverlayRenderer_classCallCheck","FSAGraphOverlayRenderer_possibleConstructorReturn","FSAGraphOverlayRenderer_getPrototypeOf","currentModule","getSelectionBox","renderer_HighlightRenderer","renderer_SelectionBoxRenderer","warningNodes","warningEdges","errorNodes","errorEdges","TrashCan","TrashCan_classCallCheck","TrashCan_possibleConstructorReturn","TrashCan_getPrototypeOf","staticTrash","setTrashMode","DANGEROUS","NORMAL","stopPropagation","isUsingTouch","onMouseEnter","onTrashEnter","onMouseLeave","onTrashLeave","onTrashClick","PlayIcon","PlayIcon_classCallCheck","PlayIcon_possibleConstructorReturn","PlayIcon_getPrototypeOf","PauseIcon","PauseIcon_classCallCheck","PauseIcon_possibleConstructorReturn","PauseIcon_getPrototypeOf","StopIcon","StopIcon_classCallCheck","StopIcon_possibleConstructorReturn","StopIcon_getPrototypeOf","TestTray","TestTray_classCallCheck","TestTray_possibleConstructorReturn","TestTray_getPrototypeOf","testIndex","getCurrentTestStringIndex","testOffset","MAX_ELLIPSIS_COUNT","onResume","isRunning","icons_PlayIcon","icons_PauseIcon","onPreviousStep","hasPrevStep","isSkipping","UndoIcon","RedoIcon","icons_StopIcon","CreateIcon","CreateIcon_classCallCheck","CreateIcon_possibleConstructorReturn","CreateIcon_getPrototypeOf","MoveIcon","MoveIcon_classCallCheck","MoveIcon_possibleConstructorReturn","MoveIcon_getPrototypeOf","CursorMode","CursorMode_classCallCheck","CursorMode_possibleConstructorReturn","CursorMode_getPrototypeOf","actionMode","isActionMode","setInputScheme","icons_CreateIcon","icons_MoveIcon","ViewportRenderer","ViewportRenderer_classCallCheck","ViewportRenderer_possibleConstructorReturn","ViewportRenderer_getPrototypeOf","content_viewport_TestTray","content_viewport_CursorMode","content_viewport_TrashCan","MachineLabeler","MachineLabeler_classCallCheck","shouldAutoLabel","isDefaultInitial","defaultNodes","customLabels","_i","defaultName","getDefaultNodeLabelByIndex","nodeIndex","isUniqueNodeLabel","MachineBuilder","MachineBuilder_classCallCheck","onGraphNodeLabelChange","targetNodes","enable","StateUnreachableWarningMessage","StateUnreachableWarningMessage_classCallCheck","StateUnreachableWarningMessage_getPrototypeOf","targetIndex","targetLabel","StateUnreachableWarningMessage_assertThisInitialized","buttonValue","StateMissingTransitionErrorMessage","StateMissingTransitionErrorMessage_classCallCheck","StateMissingTransitionErrorMessage_getPrototypeOf","StateMissingTransitionErrorMessage_assertThisInitialized","targetLength","TransitionErrorMessage","TransitionErrorMessage_classCallCheck","TransitionErrorMessage_getPrototypeOf","TransitionErrorMessage_assertThisInitialized","focusOnEdge","deleteTargetEdges","text","DFAErrorChecker","DFAErrorChecker_classCallCheck","shouldNotifyErrors","warnNodes","warnEdges","nodeTransitionMap","placeholderEdges","emptyEdges","dupeEdges","currentAlphabet","missingNodes","nodeTransitions","MACHINE_ERRORS_MESSAGE_TAG","clearMessages","unReachedNodes","NFAErrorChecker","NFAErrorChecker_classCallCheck","unReachedNode","fillFSA","setStartState","FSABuilder","FSABuilder_classCallCheck","FSABuilder_getPrototypeOf","_machine","_machineType","_machineValidDFA","_alphabet","_timer","_errorTimer","FSABuilder_assertThisInitialized","onDelayedGraphChange","onDelayedErrorCheck","FSABuilder_get","clearTimeout","GRAPH_IMMEDIATE_INTERVAL","ERROR_CHECK_INTERVAL","toNFA","checkErrors","allowNull","symbols","Set","symbolLength","subsymbol","add","size","EventHandler","eventLogger","controller","postEventName","EventHandler_classCallCheck","onEvent","applyUndo","applyRedo","eventData","captureEvent","postData","capturePostEvent","GraphEdgeDestinationEventHandler","GraphNodeInitialEventHandler_classCallCheck","GraphNodeInitialEventHandler_possibleConstructorReturn","GraphNodeInitialEventHandler_getPrototypeOf","nextInitial","nodeID","prevID","getNodeByElementID","GraphNodeMoveEventHandler","GraphNodeMoveEventHandler_classCallCheck","GraphNodeMoveEventHandler_possibleConstructorReturn","GraphNodeMoveEventHandler_getPrototypeOf","targetNode","nextX","nextY","GraphNodeMoveAllEventHandler","GraphNodeMoveAllEventHandler_classCallCheck","GraphNodeMoveAllEventHandler_possibleConstructorReturn","GraphNodeMoveAllEventHandler_getPrototypeOf","nodeIDs","GraphEdgeMoveEventHandler","GraphEdgeMoveEventHandler_classCallCheck","GraphEdgeMoveEventHandler_possibleConstructorReturn","GraphEdgeMoveEventHandler_getPrototypeOf","targetEdge","nextQuad","edgeID","getEdgeByElementID","GraphEdgeDestinationEventHandler_classCallCheck","GraphEdgeDestinationEventHandler_possibleConstructorReturn","GraphEdgeDestinationEventHandler_getPrototypeOf","nextDestination","prevDestination","GraphEdgeLabelEventHandler","GraphEdgeLabelEventHandler_classCallCheck","GraphEdgeLabelEventHandler_possibleConstructorReturn","GraphEdgeLabelEventHandler_getPrototypeOf","nextLabel","UserCreateNodeEventHandler","UserCreateNodeEventHandler_classCallCheck","UserCreateNodeEventHandler_possibleConstructorReturn","UserCreateNodeEventHandler_getPrototypeOf","custom","UserToggleNodeEventHandler","UserToggleNodeEventHandler_classCallCheck","UserToggleNodeEventHandler_possibleConstructorReturn","UserToggleNodeEventHandler_getPrototypeOf","prevAccept","JSON","data","nodeDatas","nodeCount","edgeDatas","edgeCount","initialIndex","nodeIndices","nodeData","initialNode","edgeData","destinationNode","quadData","graphNodes","graphEdges","graphInitial","elementID","quad","sourceIndex","destinationIndex","edges","initial","_version","XML","NULL","nodeElements","getElementsByTagName","edgeElements","nodeElementIDs","nodeElement","nodeElementID","getAttribute","xElements","xElement","hasChildNodes","xValue","childNodes","parseFloat","nodeValue","yElements","yElement","yValue","boundingRect","getBoundingRect","minX","minY","transitionMapping","edgeElement","sourceID","fromElements","fromElement","fromValue","destinationID","toElements","toElement","toValue","readElements","readElement","readValue","transitionID","keys","transitionKey","doc","DOMParser","parseFromString","structure","appendChild","automaton","setAttribute","UserDeleteNodesEventHandler","UserDeleteNodesEventHandler_classCallCheck","UserDeleteNodesEventHandler_possibleConstructorReturn","UserDeleteNodesEventHandler_getPrototypeOf","graphData","FSAGraphParser","targetID","UserRenameNodeEventHandler","UserRenameNodeEventHandler_classCallCheck","UserRenameNodeEventHandler_possibleConstructorReturn","UserRenameNodeEventHandler_getPrototypeOf","prevCustom","UserCreateEdgeEventHandler","UserCreateEdgeEventHandler_classCallCheck","UserCreateEdgeEventHandler_possibleConstructorReturn","UserCreateEdgeEventHandler_getPrototypeOf","fromID","toID","setSourceNode","UserDeleteEdgeEventHandler","UserDeleteEdgeEventHandler_classCallCheck","UserDeleteEdgeEventHandler_possibleConstructorReturn","UserDeleteEdgeEventHandler_getPrototypeOf","prevTo","UserImportGraphEventHandler","UserImportGraphEventHandler_classCallCheck","UserImportGraphEventHandler_possibleConstructorReturn","UserImportGraphEventHandler_getPrototypeOf","graphName","SafeGraphEventHandler","SafeGraphEventHandler_classCallCheck","SafeGraphEventHandler_possibleConstructorReturn","SafeGraphEventHandler_getPrototypeOf","UserChangeMachineEventHandler","UserChangeMachineEventHandler_classCallCheck","UserChangeMachineEventHandler_possibleConstructorReturn","UserChangeMachineEventHandler_getPrototypeOf","nextMachineType","prevMachineType","prevType","nextType","UserConvertMachineEventHandler","UserConvertMachineEventHandler_classCallCheck","UserConvertMachineEventHandler_possibleConstructorReturn","UserConvertMachineEventHandler_getPrototypeOf","UserRenameMachineEventHandler","UserRenameMachineEventHandler_classCallCheck","UserRenameMachineEventHandler_possibleConstructorReturn","UserRenameMachineEventHandler_getPrototypeOf","nextMachineName","prevMachineName","prevName","nextName","UserRenameSymbolEventHandler","UserRenameSymbolEventHandler_classCallCheck","UserRenameSymbolEventHandler_possibleConstructorReturn","UserRenameSymbolEventHandler_getPrototypeOf","targetIDs","UserDeleteSymbolEventHandler","UserDeleteSymbolEventHandler_classCallCheck","UserDeleteSymbolEventHandler_possibleConstructorReturn","UserDeleteSymbolEventHandler_getPrototypeOf","EventManager","undoManager","EventManager_classCallCheck","eventHandlers","events","GraphNodeInitialEventHandler","destroy","RECOMMENDED_SYMBOLS","DEFAULT_SYMBOLS","LabelEditor","LabelEditor_classCallCheck","LabelEditor_getPrototypeOf","parentElement","inputElement","_prevValue","onContextMenu","LabelEditor_assertThisInitialized","onFormat","defaultText","setValue","saveOnExit","appendValue","closeEditor","screen","targetStyle","visibility","screenPos","svg","ctm","getScreenCTM","transformViewToScreen","getOffsetX","getOffsetY","offsetX","offsetWidth","offsetY","offsetHeight","top","left","tabIndex","appendSymbol","FSAGraphExporter","FSAGraphExporter_classCallCheck","FSAGraphExporter_possibleConstructorReturn","FSAGraphExporter_getPrototypeOf","AbstractGraphExporter","newGraph","JSONGraphParser","machineData","customSymbols","statePrefix","getModuleName","version","process","getModuleVersion","timestamp","Date","getCustomSymbols","fromJSON","toJSON","fileBlob","Promise","resolve","reject","filename","endsWith","getFileType","jsonData","parse","onerror","code","jsonString","stringify","JSONIcon","XMLIcon","XMLIcon_classCallCheck","XMLIcon_possibleConstructorReturn","XMLIcon_getPrototypeOf","points","JFLAPGraphExporter","JFLAPGraphExporter_classCallCheck","JFLAPGraphExporter_possibleConstructorReturn","JFLAPGraphExporter_getPrototypeOf","xmlData","XMLGraphParser","xmlString","XMLSerializer","serializeToString","PANELS","EXPORTERS","FSAModule","FSAModule_classCallCheck","FSAModule_getPrototypeOf","_refreshRate","_ticks","_inputController","FSAModule_assertThisInitialized","_machineController","_machineBuilder","_eventManager","getUndoManager","_testingManager","AbstractModule","FSAModule_get","update","formatAlphabetString","renderLayer"],"mappings":"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","file":"module_fsa.bundle.a43a045727e9cfc37476.js","sourcesContent":["import React from 'react';\n\nclass FormattedInput extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.element = null;\n    this.ignoreSaveOnExit = false;\n\n    const defaultValue = props.defaultValue || \"\";\n    this.state = {\n      value: defaultValue,\n      prevValue: defaultValue\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onKeyUp = this.onKeyUp.bind(this);\n\n    //props:\n    //  filter - a filter function\n    //  formatter - a format function\n    //  captureOnExit - what to capture on blur (none, save, reset)\n    //  defaultValue - the default value for input\n  }\n\n  //Override\n  componentWillReceiveProps(nextProps)\n  {\n    //Don't overwrite user input...\n    if (this.hasFocus()) return;\n\n    //TODO: This is a way to update the value if it is suppose to be the default value...\n    if (!this.state.value || this.state.value.length <= 0 || this.state.value === this.props.defaultValue)\n    {\n      this.setState({value: nextProps.defaultValue});\n    }\n  }\n\n  get value()\n  {\n    return this.state.value;\n  }\n\n  focus(replace=false)\n  {\n    if (replace)\n    {\n      this.element.select();\n    }\n    else\n    {\n      this.element.focus();\n    }\n  }\n\n  blur()\n  {\n    this.element.blur();\n  }\n\n  hasFocus()\n  {\n    return this.element === document.activeElement;\n  }\n\n  onChange(e)\n  {\n    if (this.props.filter)\n    {\n      const result = e.target.value.replace(this.props.filter, '');\n      this.setState({value: result});\n    }\n    else\n    {\n      this.setState({value: e.target.value});\n    }\n  }\n\n  onBlur(e)\n  {\n    if (this.ignoreSaveOnExit || this.props.captureOnExit == \"none\")\n    {\n      //For those you choose to handle exit, it's value should remain correct.\n      const result = this.formatValue(e.target.value);\n      this.setState({value: result});\n\n      //Don't ignore it for the future.\n      this.ignoreSaveOnExit = false;\n      return;\n    }\n\n    if (this.props.captureOnExit == \"save\")\n    {\n      const prev = this.state.prevValue;\n      const next = e.target.value || this.props.defaultValue || \"\";\n      this.resetValue(next, () => {\n        if (this.props.onSubmit)\n        {\n          this.props.onSubmit(next, prev);\n        }\n      });\n    }\n    else if (this.props.captureOnExit == \"reset\")\n    {\n      this.resetValue(null);\n    }\n  }\n\n  onKeyUp(e)\n  {\n    if (e.key == \"Enter\")\n    {\n      const prev = this.state.prevValue;\n      const next = e.target.value || this.props.defaultValue || \"\";\n      this.resetValue(next, () => {\n        this.ignoreSaveOnExit = true;\n\n        if (this.props.onSubmit)\n        {\n          this.props.onSubmit(next, prev);\n        }\n        this.element.blur();\n      });\n      return false;\n    }\n    else if (e.key == \"Escape\")\n    {\n      const prev = this.state.prevValue;\n      this.resetValue(prev, () => {\n        this.ignoreSaveOnExit = true;\n\n        if (this.props.onSubmit)\n        {\n          this.props.onSubmit(prev || \"\", prev);\n        }\n        this.element.blur();\n      });\n      return false;\n    }\n  }\n\n  resetValue(newValue=null, callback)\n  {\n    if (newValue != null)\n    {\n      const result = this.formatValue(newValue);\n      this.setState({value: result, prevValue: result}, callback);\n    }\n    else\n    {\n      this.setState((prev, props) => {\n        //NOTE: Although you CAN assume prev is valid, but what about when prev does not exist?\n        const result = this.formatValue(prev.prevValue);\n        return {value: result};\n      }, callback);\n    }\n  }\n\n  setValue(value, callback)\n  {\n    if (!value || value.length == 0)\n    {\n      value = this.props.defaultValue || \"\";\n    }\n    else\n    {\n      value = this.formatValue(value);\n    }\n\n    this.setState({value: value}, callback);\n  }\n\n  appendValue(value, separator=\",\")\n  {\n    let result = this.state.value;\n    //If the entire input is selected...\n    if (this.element.selectionStart == 0 &&\n      this.element.selectionEnd == value.length)\n    {\n      //Replace it!\n      result = value;\n    }\n    //Or just append to the end...\n    else\n    {\n      if (!result || result.length == 0)\n      {\n        result = value;\n      }\n      else\n      {\n        result = result + separator + value;\n      }\n    }\n\n    //If can filter input...\n    if (this.props.filter)\n    {\n      result = result.replace(this.props.filter, '');\n    }\n\n    this.setState({value: this.formatValue(result)});\n  }\n\n  formatValue(value)\n  {\n    const formatter = this.props.formatter;\n    const result = formatter(value);\n    return result || \"\";\n  }\n\n  //Override\n  render()\n  {\n    return <input\n      id={this.props.id} className={this.props.className} style={this.props.style}\n      ref={ref=>this.element=ref}\n      type=\"text\" value={this.state.value}\n      onChange={this.onChange}\n      onBlur={this.onBlur}\n      onKeyUp={this.onKeyUp}/>;\n  }\n}\n\nexport default FormattedInput;\n","import React from 'react';\nimport './InfoBlock.css';\n\nimport IconToggle from 'icons/IconToggle.js';\nimport DropDownIcon from 'icons/DropDownIcon.js';\n\n//TODO: Should be deprecated to use OptionGroup (or something similar)\nclass InfoBlock extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.dropdown = React.createRef();\n  }\n\n  isOpen()\n  {\n    return this.dropdown.state ? this.dropdown.state.open : false;\n  }\n\n  render()\n  {\n    return <div className={\"infoblock-container \" + this.props.className}>\n      <div className=\"infoblock-header\" onClick={(e)=>this.dropdown.onClick(e)}>\n        <label>{this.props.title}</label>\n        <IconToggle id=\"collapse\" ref={ref=>this.dropdown=ref} defaultValue={this.props.defaultValue}\n          style={{pointerEvents: \"none\"}}>\n          <DropDownIcon/>\n        </IconToggle>\n      </div>\n      <div className=\"infoblock-content\"\n        style={{display: this.isOpen() ? \"block\" : \"none\"}}>\n        {this.props.children}\n      </div>\n    </div>;\n  }\n}\n\nexport default InfoBlock;\n","import React from 'react';\n\nclass BoxAddIcon extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    return <svg className=\"boxadd-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n      <path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"/>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n    </svg>;\n  }\n}\n\nexport default BoxAddIcon;\n","import React from 'react';\n\nclass TriangleIcon extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    return <svg className=\"triangle-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n      <path d=\"M12 7.77L18.39 18H5.61L12 7.77M12 4L2 20h20L12 4z\"/>\n      <path fill=\"none\" d=\"M0 0h24v24H0V0z\"/>\n    </svg>;\n  }\n}\n\nexport default TriangleIcon;\n","import React from 'react';\nimport './StateTag.css';\n\nimport Config from 'config.js';\n\nclass StateTag extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.state = {\n      value: null,\n      error: false\n    };\n\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyUp = this.onKeyUp.bind(this);\n  }\n\n  onFocus(e)\n  {\n    const target = e.target;\n    //This is a prop, refer to StateList for the actual node.getNodeLabel()\n    this.setState({ value: this.props.label, error: false }, () => {\n      target.select()\n    });\n\n    //Call any listening focus\n    if (this.props.onFocus) this.props.onFocus(e);\n  }\n\n  onBlur(e)\n  {\n    const graphController = this.props.graphController;\n    const newLabel = this.state.value;\n\n    //The value is already processed, abort\n    if (newLabel != null)\n    {\n      const node = this.props.src;\n      const graph = graphController.getGraph();\n      if (newLabel.length > 0)\n      {\n        const nodes = graph.getNodesByLabel(newLabel);\n        if (nodes.length <= 0)\n        {\n          //Valid! Rename it!\n          graphController.renameNode(node, newLabel);\n        }\n        else\n        {\n          //Found something already named that! Ignore!\n        }\n      }\n      else\n      {\n        //Delete!\n        graphController.deleteTargetNode(this.props.src);\n      }\n\n      this.setState({ value: null, error: false });\n\n      //Call any listening blurs\n      if (this.props.onBlur) this.props.onBlur(e);\n    }\n  }\n\n  onKeyDown(e)\n  {\n    if (e.keyCode === Config.SUBMIT_KEY || e.keyCode === Config.CLEAR_KEY)\n    {\n      e.preventDefault();\n    }\n  }\n\n  onKeyUp(e)\n  {\n    if (e.keyCode === Config.SUBMIT_KEY)\n    {\n      e.target.blur();\n    }\n    else if (e.keyCode === Config.CLEAR_KEY)\n    {\n      const target = e.target;\n      this.setState({ value: null, error: false}, () => {\n        target.blur();\n      });\n    }\n  }\n\n  onValueChange(e)\n  {\n    const graph = this.props.graphController.getGraph();\n    const value = e.target.value.trim();\n    let error = false;\n    if (value.length > 0)\n    {\n      const nodes = graph.getNodesByLabel(value);\n      if (nodes.length > 0)\n      {\n        //If there are more than 1 that have the same name\n        //OR if it is NOT the one we have...\n        if (nodes.length > 1 || nodes[0] !== this.props.src)\n        {\n          error = true;\n        }\n      }\n    }\n\n    this.setState({\n      value: value,\n      error: error\n    });\n  }\n\n  render()\n  {\n    const isCustom = this.props.src.getNodeCustom();\n    const value = this.state.value != null ? this.state.value : this.props.label;\n    return <div className={\"statetag-container\" +\n      (isCustom ? \" customtag\" : \"\") +\n      (value.length == 0 ? \" emptytag\" : \"\") +\n      (this.state.value && this.state.error ? \" errortag\" : \"\")}>\n      <input type=\"text\" className={(this.props.accept ? \" accept\" : \"\")}\n        spellCheck=\"false\"\n        style={{width: value.length + \"ch\"}}\n        value={value}\n        onChange={this.onValueChange}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        onKeyUp={this.onKeyUp}\n        onKeyDown={this.onKeyDown}/>\n    </div>;\n  }\n}\n\nexport default StateTag;\n","import React from 'react';\nimport './StatesList.css';\n\nimport InfoBlock from '../infoblock/InfoBlock.js';\nimport IconButton from 'icons/IconButton.js';\nimport BoxAddIcon from 'icons/BoxAddIcon.js';\nimport TriangleIcon from 'icons/TriangleIcon.js';\n\nimport StateTag from './StateTag.js';\n\nclass StatesList extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.onStateCreate = this.onStateCreate.bind(this);\n  }\n\n  onStateCreate(e)\n  {\n    const x = -100 + (Math.random() * 100 * 2);\n    const y = -100 + (Math.random() * 100 * 2);\n    this.props.graphController.createNode(x, y);\n  }\n\n  render()\n  {\n    const graphController = this.props.graphController;\n    const graph = graphController.getGraph();\n    return <InfoBlock title={I18N.toString(\"component.stateslist.title\")} defaultValue=\"true\">\n      <div className=\"statelist-container\">\n        <div className=\"statelist\">\n          <TriangleIcon/>\n          {\n            graph.getNodes().map((e, i) => {\n              return <StateTag key={e.getGraphElementID()} src={e} label={e.getNodeLabel()} accept={e.getNodeAccept()}\n                graphController={graphController}\n                onFocus={ev => graphController.focusOnNode(e)}/>\n            })\n          }\n        </div>\n        <IconButton onClick={this.onStateCreate}>\n          <BoxAddIcon/>\n        </IconButton>\n      </div>\n    </InfoBlock>;\n  }\n}\n\nexport default StatesList;\n","import React from 'react';\n\nimport './AlphabetTag.css';\nimport Config from 'config.js';\n\nclass AlphabetTag extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.ref = null;\n\n    this.state = {\n      symbol: null,\n      error: false\n    };\n\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyUp = this.onKeyUp.bind(this);\n  }\n\n  onFocus(e)\n  {\n    const target = e.target;\n    this.setState({\n      symbol: this.props.src,\n      error: false\n    }, () => target.select());\n\n    //Call any listening focus\n    if (this.props.onFocus) this.props.onFocus(e);\n  }\n\n  onBlur(e)\n  {\n    const machineController = this.props.machineController;\n    const newSymbol = this.state.symbol;\n\n    if (newSymbol != null)\n    {\n      const oldSymbol = this.props.src;\n      if (newSymbol.length > 0)\n      {\n        const alphabet = machineController.getAlphabet();\n        if (!alphabet.includes(newSymbol))\n        {\n          if (oldSymbol)\n          {\n            //Valid! Rename it!\n            machineController.renameSymbol(oldSymbol, newSymbol);\n          }\n          else\n          {\n            //Valid! Add it to the list!\n            machineController.createSymbol(newSymbol);\n          }\n        }\n        else\n        {\n          //Found something already named that! Ignore!\n        }\n      }\n      else if (oldSymbol)\n      {\n        //Delete!\n        machineController.deleteSymbol(oldSymbol);\n      }\n    }\n\n    this.setState({symbol: null, error: false});\n\n    //Call any listening blurs\n    if (this.props.onBlur) this.props.onBlur(e);\n  }\n\n  onKeyDown(e)\n  {\n    if (e.keyCode === Config.SUBMIT_KEY || e.keyCode === Config.CLEAR_KEY)\n    {\n      e.preventDefault();\n    }\n  }\n\n  onKeyUp(e)\n  {\n    if (e.keyCode === Config.SUBMIT_KEY)\n    {\n      e.target.blur();\n    }\n    else if (e.keyCode === Config.CLEAR_KEY)\n    {\n      const target = e.target;\n      this.setState({ symbol: null, error: false}, () => {\n        target.blur();\n      });\n    }\n  }\n\n  onValueChange(e)\n  {\n    const machineController = this.props.machineController;\n    const symbol = e.target.value.trim();\n    let error = false;\n    if (symbol.length > 0)\n    {\n      const alphabet = machineController.getAlphabet();\n      if (alphabet.includes(symbol) && symbol != this.props.src)\n      {\n        error = true;\n      }\n    }\n\n    this.setState({\n      symbol: symbol,\n      error: error\n    });\n  }\n\n  render()\n  {\n    const symbol = this.state.symbol != null ? this.state.symbol : this.props.src;\n    const isUsed = false;\n    //TODO: const isUsed = this.props.src && this.props.machineController.getMachineBuilder().getMachine().getUsedAlphabet().includes(symbol);\n    return <div className={\"alphatag-container\" +\n      (isUsed ? \" usedtag\" : \"\") +\n      (this.props.src && (!symbol || symbol.length == 0) ? \" emptytag\" : \"\") +\n      (this.state.symbol && this.state.error ? \" errortag\" : \"\")}>\n      <input type=\"text\" ref={ref=>this.ref=ref} className=\"alphatag-input\"\n        spellCheck=\"false\"\n        maxLength=\"1\"\n        value={symbol}\n        onChange={this.onValueChange}\n        onFocus = {this.onFocus}\n        onBlur={this.onBlur}\n        onKeyUp={this.onKeyUp}\n        onKeyDown={this.onKeyDown}/>\n    </div>;\n  }\n}\n\nexport default AlphabetTag;\n","import React from 'react';\nimport './AlphabetList.css';\n\nimport InfoBlock from '../infoblock/InfoBlock.js';\nimport IconButton from 'icons/IconButton.js';\nimport BoxAddIcon from 'icons/BoxAddIcon.js';\n\nimport AlphabetTag from './AlphabetTag.js';\n\nclass AlphabetList extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n    this.editingTag = null;\n\n    this.state = {\n      editing: false\n    };\n\n    this.onSymbolCreate = this.onSymbolCreate.bind(this);\n    this.onStopEditing = this.onStopEditing.bind(this);\n  }\n\n  onSymbolCreate(e)\n  {\n    this.setState({editing: true}, () => {\n      this.editingTag.ref.focus();\n    });\n  }\n\n  onStopEditing(e)\n  {\n    this.setState({editing: false});\n  }\n\n  render()\n  {\n    const machineController = this.props.machineController;\n    const alphabet = machineController.getAlphabet();\n\n    return <InfoBlock title={I18N.toString(\"component.alphabetlist.title\")}>\n      <div className=\"alphalist-container\">\n        <div className=\"alphalist\">\n          {\n            alphabet.map((e, i) => {\n              return <AlphabetTag key={e + \".\" + i} src={e} machineController={machineController}/>\n            })\n          }\n          {\n            this.state.editing &&\n            <AlphabetTag ref={ref=>this.editingTag=ref} src={\"\"} machineController={machineController}\n              onBlur={this.onStopEditing}/>\n          }\n        </div>\n\n        <IconButton onClick={this.onSymbolCreate}>\n          <BoxAddIcon/>\n        </IconButton>\n      </div>\n    </InfoBlock>;\n  }\n}\n\nexport default AlphabetList;\n","const SRC = 0;\nconst SYMBOL = 1;\nconst DST = 2;\n\nclass FSA\n{\n  constructor()\n  {\n    this._states = [];\n    this._transitions = [];\n    this._finalStates = [];\n\n    this._customAlphabet = [];\n  }\n\n  clear()\n  {\n    this._states.length = 0;\n    this._transitions.length = 0;\n    this._finalStates.length = 0;\n\n    this._customAlphabet.length = 0;\n  }\n\n  copy(fsa)\n  {\n    this._states.length = 0;\n    for(let state of fsa._states)\n    {\n      this._states.push(state);\n    }\n    this._transitions.length = 0;\n    for(let transition of fsa._transitions)\n    {\n      this._transitions.push(transition.slice());\n    }\n    this._finalStates.length = 0;\n    for(let final of fsa._finalStates)\n    {\n      this._finalStates.push(final);\n    }\n    this._customAlphabet.length = 0;\n    for(let symbol of fsa._customAlphabet)\n    {\n      this._customAlphabet.push(symbol);\n    }\n  }\n\n  newState(state)\n  {\n    if (this._states.includes(state))\n    {\n      throw new Error(\"State \\'\" + state + \"\\' already added to states.\");\n    }\n\n    this._states.push(state);\n    return state;\n  }\n\n  deleteState(state)\n  {\n    if (!this._states.includes(state))\n    {\n      throw new Error(\"State \\'\" + state + \"\\' does not exist.\");\n    }\n\n    this._states.splice(this._states.indexOf(state), 1);\n  }\n\n  renameState(oldState, newState)\n  {\n    if (!this._states.includes(oldState))\n    {\n      throw new Error(\"State \\'\" + oldState + \"\\' does not exist.\");\n    }\n    if (this._states.includes(newState))\n    {\n      throw new Error(\"State \\'\" + newState + \"\\' already exists.\");\n    }\n\n    for(let transition of this._transitions)\n    {\n      if (transition[SRC] == oldState)\n      {\n        transition[SRC] = newState;\n      }\n      if (transition[DST] == oldState)\n      {\n        transition[DST] = newState;\n      }\n    }\n\n    const index = this._states.indexOf(oldState);\n    this._states[index] = newState;\n  }\n\n  newTransition(fromState, toState, symbol)\n  {\n    if (!this._states.includes(fromState))\n    {\n      throw new Error(\"State \\'\" + fromState + \"\\' does not exist.\");\n    }\n\n    if (!this._states.includes(toState))\n    {\n      throw new Error(\"State \\'\" + toState + \"\\' does not exist.\");\n    }\n\n    //Check if already exists...\n    for(const transition of this._transitions)\n    {\n      if (transition[SRC] == fromState && transition[SYMBOL] == symbol && transition[DST] == toState)\n      {\n        return;\n      }\n    }\n\n    //Create new transition\n    this._transitions.push([fromState, symbol, toState]);\n  }\n\n  deleteTransition(fromState, toState, symbol=null)\n  {\n    for(let i = this._transitions.length - 1; i >= 0; --i)\n    {\n      const transition = this._transitions[i];\n      if (transition[SRC] == fromState && transition[DST] == toState)\n      {\n        //Delete if src, dst, and symbols match... or if deleting all symbols\n        if (symbol == null || transition[SYMBOL] == symbol)\n        {\n          this._transitions.splice(i, 1);\n        }\n      }\n    }\n  }\n\n  newSymbol(symbol)\n  {\n    if (this._customAlphabet.includes(symbol))\n    {\n      throw new Error(\"Symbol \\'\" + symbol + \"\\' already added to alphabet.\");\n    }\n\n    this._customAlphabet.push(symbol);\n  }\n\n  deleteSymbol(symbol)\n  {\n    if (!this._customAlphabet.includes(symbol))\n    {\n      throw new Error(\"Unable to remove symbol \\'\" + symbol + \"\\'.\");\n    }\n\n    this._customAlphabet.splice(this._customAlphabet.indexOf(symbol), 1);\n  }\n\n  setStartState(state)\n  {\n    if (this._states.length <= 0)\n    {\n      throw new Error(\"Not enough states.\");\n    }\n\n    if (!this._states.includes(state))\n    {\n      throw new Error(\"State \\'\" + state + \"\\' does not exist.\");\n    }\n\n    if (this.getStartState() == state) return;\n\n    this._states.splice(this._states.indexOf(state), 1);\n    this._states.unshift(state);\n  }\n\n  setFinalState(state, isFinal=true)\n  {\n    if (!this._states.includes(state))\n    {\n      throw new Error(\"State \\'\" + state + \"\\' does not exist.\");\n    }\n\n    if (isFinal)\n    {\n      if (this._finalStates.includes(state)) return;\n\n      this._finalStates.push(state);\n    }\n    else\n    {\n      if (!this._finalStates.includes(state)) return;\n      this._finalStates.splice(this._finalStates.indexOf(state), 1);\n    }\n  }\n\n  doTransition(state, symbol)\n  {\n    for(const transition of this._transitions)\n    {\n      if (transition[SRC] == state && transition[SYMBOL] == symbol)\n      {\n        return transition[DST];\n      }\n    }\n    return null;\n  }\n\n  isFinalState(state)\n  {\n    return this._finalStates.includes(state);\n  }\n\n  hasState(state)\n  {\n    return this._states.includes(state);\n  }\n\n  getStates()\n  {\n    return this._states;\n  }\n\n  //Is the same as isAlphabet if the user did not add custom symbols\n  isUsedAlphabet(symbol)\n  {\n    for(const transition of this._transitions)\n    {\n      if (transition[SYMBOL] == symbol)\n      {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  //Includes custom user-defined symbols (from newSymbol)\n  isAlphabet(symbol)\n  {\n    for(const s of this._customAlphabet)\n    {\n      if (s == symbol) return true;\n    }\n\n    return this.isUsedAlphabet(symbol);\n  }\n\n  getUsedAlphabet(dst=[])\n  {\n    const result = dst;\n    for(const transition of this._transitions)\n    {\n      const symbol = transition[SYMBOL];\n      if (symbol.length > 0 && !result.includes(symbol))\n      {\n        result.push(symbol);\n      }\n    }\n    return result;\n  }\n\n  getAlphabet(dst=[])\n  {\n    const result = dst;\n    for(const s of this._customAlphabet)\n    {\n      result.push(s);\n    }\n    return this.getUsedAlphabet(result);\n  }\n\n  getOutgoingTransitions(state=null, dst=[])\n  {\n    const result = dst;\n    for(const transition of this._transitions)\n    {\n      if (transition[SRC] == state)\n      result.push(transition);\n    }\n    return result;\n  }\n\n  getTransitions()\n  {\n    return this._transitions;\n  }\n\n  getStartState()\n  {\n    return this._states.length <= 0 ? null : this._states[0];\n  }\n\n  getFinalStates()\n  {\n    return this._finalStates;\n  }\n\n  isValidDFA()\n  {\n    const alphabet = this.getAlphabet();\n    const foundSymbols = new Array(alphabet.length);\n    foundSymbols.fill(false);\n\n    for(const state of this._states)\n    {\n      //Get all outgoing transitions\n      const transitions = this.getOutgoingTransitions(state);\n      for(const transition of transitions)\n      {\n        const index = alphabet.indexOf(transition[1]);\n        if (foundSymbols[index] == false)\n        {\n          foundSymbols[index] = true;\n        }\n        else\n        {\n          //Found duplicate\n          return false;\n        }\n      }\n\n      //Reset foundSymbols for next state\n      const length = foundSymbols.length;\n      for(let i = 0; i < length; ++i)\n      {\n        if (foundSymbols[i] == false)\n        {\n          //Found missing symbol for state\n          return false;\n        }\n        foundSymbols[i] = false;\n      }\n    }\n\n    return true;\n  }\n\n  toJSON()\n  {\n    const result = {};\n    if (this instanceof DFA) result.type = \"DFA\";\n    else if (this instanceof NFA) result.type = \"NFA\";\n    else result.type = \"FSA\";\n    result.states = this._states.slice();\n    result.alphabet = this._customAlphabet.slice();\n    result.usedAlphabet = this.getUsedAlphabet();\n    result.transitions = this._transitions.slice();\n    result.startState = this.getStartState();\n    result.finalStates = this._finalStates.slice();\n\n    return result;\n  }\n}\n\nexport default FSA;\n","export const EMPTY = '\\u03B5';\nexport const ARROW = '\\u2192';\nexport const EMPTY_SET = '\\u2205';\n\n//'\\u03BB' = LAMBDA\n","import FSA from './FSA.js';\nimport { EMPTY } from './Symbols.js';\n\nconst SRC = 0;\nconst SYMBOL = 1;\nconst DST = 2;\n\nclass NFA extends FSA\n{\n  constructor()\n  {\n    super();\n  }\n\n  //Override\n  getUsedAlphabet(dst=[])\n  {\n    const result = dst;\n    for(const transition of this._transitions)\n    {\n      const symbol = transition[SYMBOL];\n      if (!result.includes(symbol) && symbol != EMPTY)\n      {\n        result.push(symbol);\n      }\n    }\n    return result;\n  }\n\n  //Override\n  doTransition(state, symbol, dst=[])\n  {\n    const result = dst;\n    for(const transition of this._transitions)\n    {\n      if (transition[SRC] == state && transition[SYMBOL] == symbol)\n      {\n        result.push(transition[DST]);\n      }\n    }\n    return result;\n  }\n\n  doClosureTransition(state, dst=[])\n  {\n    const result = dst;\n    result.push(state);\n    for(let i = 0; i < result.length; ++i)\n    {\n      const transitions = this.getOutgoingTransitions(result[i]);\n      for(const transition of transitions)\n      {\n        if (transition[SYMBOL] == EMPTY)\n        {\n          const dst = transition[DST];\n          if (!result.includes(dst))\n          {\n            result.push(dst);\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  doTerminalTransition(state, symbol, dst=[])\n  {\n    const result = dst;\n    for(const transition of this._transitions)\n    {\n      if (transition[SRC] == state && transition[SYMBOL] == symbol)\n      {\n        //Get closure on destination states\n        const states = this.doClosureTransition(transition[DST]);\n        for(const s of states)\n        {\n          if (!result.includes(s))\n          {\n            result.push(s);\n          }\n        }\n      }\n    }\n\n    return result;\n  }\n\n    getPowerSet() {\n        var ps = [[]];\n        var nfaStates = this.getStates();\n        for(var i=0; i < nfaStates.length; i++) {\n            for(var j=0, len = ps.length; j < len; j++) {\n                ps.push(ps[j].concat(nfaStates[i]));\n            }\n        }\n        return ps;\n    }\n}\n\nexport default NFA;\n","import React from 'react';\nimport './TransitionTable.css';\n\nimport InfoBlock from '../infoblock/InfoBlock.js';\nimport NFA from 'machine/NFA.js';\nimport { EMPTY } from 'machine/Symbols.js';\n\nconst SRC = 0;\nconst SYMBOL = 1;\nconst DST = 2;\n\nconst SYMBOL_AXIS = \"symbols\";\nconst STATE_AXIS = \"states\";\n\nclass TransitionTable extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.state = {\n      rowAxis: SYMBOL_AXIS\n    }\n  }\n\n  render()\n  {\n    const machineBuilder = this.props.machineBuilder;\n    const machine = machineBuilder.getMachine();\n    const states = machine.getStates();\n    const alphabet = machine.getAlphabet();\n    const transitions = machine.getTransitions();\n    const rowAxisType = this.state.rowAxis;\n    const isNFAMachine = machineBuilder.getMachineType() == \"NFA\";\n    const hasEmptyColumn = rowAxisType === SYMBOL_AXIS && isNFAMachine;\n\n    return <InfoBlock title={I18N.toString(\"component.transitiontable.title\")}>\n      <div className=\"transitiontable-container\">\n        <table className=\"transitiontable\">\n          <tbody>\n            <tr>\n              <th className=\"emptycell\">\n                <button className=\"panel-button\" onClick={()=>\n                  this.setState((prev, props)=>{\n                    return {\n                      rowAxis: prev.rowAxis == SYMBOL_AXIS ? STATE_AXIS : SYMBOL_AXIS\n                    };\n                  })}>\n                  {this.state.rowAxis == SYMBOL_AXIS ? \"Q/\\u03A3\" : \"Q/Q\"}\n                </button>\n              </th>\n              {\n                rowAxisType === SYMBOL_AXIS ?\n                  alphabet.map((e, i)=><th key={e} scope=\"col\" className=\"col\">{e}</th>) :\n                rowAxisType === STATE_AXIS ?\n                  states.map((e, i)=><th key={e} scope=\"col\" className=\"col\">{e}</th>) :\n                null\n              }\n              {\n                hasEmptyColumn &&\n                  <th scope=\"col\">{EMPTY}</th>\n              }\n            </tr>\n            {\n              states.map((e, i)=><tr key={e}>\n                <th scope=\"row\" className=\"row\">{e}</th>\n                {\n                  rowAxisType === SYMBOL_AXIS ?\n                    alphabet.map((symbol, i) => {\n                      let className = \"\";//TODO: machine.isFinalState(e) ? \"accept\" : \"\";\n                      const result = getDestinationFromSourceAndSymbol(machine, e, symbol, isNFAMachine);\n                      if (!isNFAMachine && (result.startsWith(\"{\") || result == \"-\"))\n                      {\n                        className += \" error\";\n                      }\n                      return <td key={e + \",\" + symbol} className={className}>\n                        {result}\n                      </td>;\n                    }) :\n                  rowAxisType === STATE_AXIS ?\n                    states.map((dst, i) => {\n                      const result = getSymbolFromSourceAndDestination(machine, e, dst);\n                      return <td key={e + \",\" + dst}>\n                        {result}\n                      </td>;\n                    }) :\n                  null\n                }\n                {\n                  hasEmptyColumn &&\n                    <td>{getDestinationFromSourceAndSymbol(machine, e, EMPTY)}</td>\n                }\n              </tr>)\n            }\n          </tbody>\n        </table>\n      </div>\n    </InfoBlock>;\n  }\n}\n\nfunction getDestinationFromSourceAndSymbol(machine, src, symbol, isSet=true)\n{\n  const result = machine.doTransition(src, symbol);\n\n  //Assumes that the machine is always an NFA, therefore the result is an array\n  if (Array.isArray(result))\n  {\n    return !isSet && result.length == 1 ?\n      result[0] :\n      result.length > 0 ?\n      \"{\" + result.join(\", \") + \"}\" : \"-\";\n  }\n  else\n  {\n    return result || \"-\";\n  }\n}\n\nfunction getSymbolFromSourceAndDestination(machine, src, dst)\n{\n  const result = [];\n  const transitions = machine.getTransitions();\n  for(const transition of transitions)\n  {\n    if (transition[SRC] == src && transition[DST] == dst)\n    {\n      result.push(transition[SYMBOL]);\n    }\n  }\n\n  if (result.length === 1)\n  {\n    return result[0];\n  }\n  else if (result.length > 0)\n  {\n    return \"{\" + result.join(\", \") + \"}\";\n  }\n  else\n  {\n    return \"-\";\n  }\n}\n\nexport default TransitionTable;\n","import React from 'react';\nimport './TransitionFunction.css';\n\nimport InfoBlock from '../infoblock/InfoBlock';\nimport { EMPTY } from 'machine/Symbols.js';\n\nclass TransitionFunction extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const machineBuilder = this.props.machineBuilder;\n    const machine = machineBuilder.getMachine();\n    const states = machine.getStates();\n    const alphabet = machine.getAlphabet().sort();\n    let isNFA = machineBuilder.getMachineType() == \"NFA\";\n    return(\n        <InfoBlock title=\"Transition Chart\">\n          <div className=\"transitionfunction-container\">\n            <table className=\"transitionfunction-table\">\n              <tbody>\n                <tr>\n                  <th>Q{\"\\u00d7\"}&Sigma;</th>\n                  <th>{isNFA ? \"\\u2118(Q)\" : \"Q\"}</th>\n                </tr>\n                {\n                  states.map((state, i) => {\n                    let emptrans = machine.doTransition(state, EMPTY);\n                    let empclassName = \"\";\n\n                    let transitions = alphabet.map((symbol, j) => {\n                      let className = \"\";\n                      let trans = machine.doTransition(state, symbol);\n                      if(isNFA && !trans.length) return;\n                      if(!isNFA && !trans.length) {\n                        className = \"error\";\n                        trans = \"-\";\n                      }\n                      if(!isNFA && trans.length > 1) {\n                        className = \"error\";\n                        trans = \"{\" + trans + \"}\"\n                      }\n                      trans = isNFA ? \"{\" + trans + \"}\" : \"\" + trans;\n                      return <tr key={\"\"+state+symbol}>\n                          <td className=\"transitionfunction-key\">{\"(\" + state + \",\" + symbol + \")\"}</td>\n                          <td className={\"transitionfunction-value \" + className}>{trans}</td>\n                        </tr>\n                    });\n\n                    if(emptrans.length > 0) {\n                      if(!isNFA) {\n                        empclassName = \"error\";\n                      }\n                      const addBrac = isNFA || emptrans.length > 1;\n                      emptrans = addBrac ? \"{\" + emptrans + \"}\" : \"\" + emptrans;\n                      transitions.unshift(\n                          <tr key={\"\"+state+EMPTY}>\n                            <td className={\"transitionfunction-key \" + empclassName}>{\"(\" + state + \",\" + EMPTY + \")\"}</td>\n                            <td className=\"transitionfunction-value\">{emptrans}</td>\n                          </tr>\n                      );\n                    }\n                    return transitions;\n                  })\n                }\n              </tbody>\n            </table>\n          </div>\n        </InfoBlock>\n    );\n  }\n}\n\nexport default TransitionFunction;\n","import React from 'react';\nimport './FormalDefinition.css';\nimport { EMPTY } from 'machine/Symbols.js';\n\nimport { EMPTY_SET, ARROW } from 'machine/Symbols.js';\n\nconst EQUAL = \"=\";\nconst DELTA = \"\\u03b4\";\n\nclass FormalDefinition extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const machineBuilder = this.props.machineBuilder;\n    const machine = machineBuilder.getMachine();\n    const states = machine.getStates();\n    const finalStates = machine.getFinalStates();\n    const alphabet = machine.getAlphabet().sort();\n    let isNFA = machineBuilder.getMachineType() == \"NFA\";\n    return <div className=\"formaldef-container\">\n      <h2>{\"M = (Q, \\u03A3, \\u03b4, q0, F)\"}</h2>\n      <div>\n        <h3>Q =</h3>\n        <span className=\"formaldef-values\">\n          {states.length > 0 ? \"{ \" + states.join(\", \") + \" }\" : EMPTY_SET}\n        </span>\n      </div>\n      <div>\n        <h3>&Sigma; =</h3>\n        <span className=\"formaldef-values\">\n          {alphabet.length > 0 ? \"{ \" + alphabet.join(\", \") + \" }\" : EMPTY_SET}\n        </span>\n      </div>\n      <div>\n        <h3>{DELTA}</h3>\n        <div className=\"formaldef-values\">\n          {\n            states.map((state, i) => {\n              let emptrans = machine.doTransition(state, EMPTY);\n              let empclassName = \"\";\n\n              let transitions = alphabet.map((symbol, j) => {\n                let className = \"\";\n                let trans = machine.doTransition(state, symbol);\n                if(isNFA && !trans.length) return;\n                if(!isNFA && !trans.length) {\n                  className = \"error\";\n                  trans = \"-\";\n                }\n                if(!isNFA && trans.length > 1) {\n                  className = \"error\";\n                  trans = \"{ \" + trans + \" }\"\n                }\n                trans = isNFA ? \"{ \" + trans + \" }\" : \"\" + trans;\n                return <div key={\"\"+state+symbol} className={className}>\n                      {DELTA + \"( ( \" + state + \", \" + symbol + \" ) )\" + \" \" + EQUAL + \" \" + trans}\n                </div>\n              });\n\n              if(emptrans.length > 0) {\n                if(!isNFA) {\n                  empclassName = \"error\";\n                }\n                const addBrac = isNFA || emptrans.length > 1;\n                emptrans = addBrac ? \"{ \" + emptrans + \" }\" : \"\" + emptrans;\n                transitions.unshift(\n                    <div key={\"\" + state + EMPTY} className={empclassName}>\n                      {DELTA + \"( ( \" + state + \", \" + EMPTY + \" ) )\" + \" \" + EQUAL + \" \" + emptrans}\n                    </div>\n                );\n              }\n              return transitions;\n            })\n          }\n          {\n            isNFA && <div id=\"formaldef-otherinputs\">\n              <div>{\"For all other inputs (q, x),\"}</div>\n              <div>{DELTA + \"( (q, x) )\" + \" \" + EQUAL + \" \" + EMPTY_SET}</div>\n            </div>\n          }\n        </div>\n      </div>\n      <div>\n        <h3>q0 =</h3>\n        <span className=\"formaldef-values\">\n          {states[0]}\n        </span>\n      </div>\n      <div>\n        <h3>F =</h3>\n        <span className=\"formaldef-values\">\n          {finalStates.length > 0 ? \"{ \" + finalStates.join(\",\") + \" }\" : EMPTY_SET}\n        </span>\n      </div>\n    </div>;\n  }\n}\n\nexport default FormalDefinition;\n","import React from 'react';\nimport '../Panel.css';\nimport './OverviewPanel.css';\n\nimport Config from 'config.js';\n\nimport FormattedInput from 'system/formattedinput/FormattedInput.js';\n\nimport StatesList from './stateslist/StatesList.js';\nimport AlphabetList from './alphabetlist/AlphabetList.js';\nimport TransitionTable from './transitiontable/TransitionTable.js';\nimport TransitionFunction from './transitionfunction/TransitionFunction.js';\nimport FormalDefinition from \"./formaldefinition/FormalDefinition\";\n\nclass OverviewPanel extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.container = null;\n\n    this.state = {\n      viewFormal: false\n    };\n\n    this.onChangeMachineType = this.onChangeMachineType.bind(this);\n    this.onAutoLayout = this.onAutoLayout.bind(this);\n\n    this.onChangeAutoRename = this.onChangeAutoRename.bind(this);\n    this.onSubmitAutoStatePrefix = this.onSubmitAutoStatePrefix.bind(this);\n    this.onAutoStateFormat = this.onAutoStateFormat.bind(this);\n\n    this.switchDefinition = this.switchDefinition.bind(this);\n  }\n\n  onAutoLayout(e)\n  {\n    const graphController = this.props.graphController;\n    graphController.applyAutoLayout();\n  }\n\n  onChangeMachineType(e)\n  {\n    const value = e.target.value;\n    const machineController = this.props.machineController;\n    machineController.changeMachineTo(value);\n  }\n\n  onChangeAutoRename(e)\n  {\n    const machineBuilder = this.props.machineController.getMachineBuilder();\n    machineBuilder.setAutoRenameNodes(e.target.checked);\n  }\n\n  onSubmitAutoStatePrefix(next, prev)\n  {\n    const labeler = this.props.machineController.getMachineBuilder().getLabeler();\n    if (labeler.prefix != next)\n    {\n      labeler.prefix = next;\n      labeler.sortDefaultNodeLabels();\n    }\n  }\n\n  onAutoStateFormat(value)\n  {\n    return value && value.length > 0 ? value : Config.STR_STATE_LABEL;\n  }\n\n  switchDefinition()\n  {\n    this.setState((prev, props) => {\n      return { viewFormal: !prev.viewFormal };\n    });\n  }\n\n  render()\n  {\n    const graphController = this.props.graphController;\n    const machineController = this.props.machineController;\n\n    const graph = graphController.getGraph();\n    const machineBuilder = machineController.getMachineBuilder();\n\n    return <div className=\"panel-container\" id=\"overview\" ref={ref=>this.container=ref} style={this.props.style}>\n      <div className=\"panel-title\">\n        <h1>{I18N.toString(\"component.overview.title\")}</h1>\n      </div>\n        <div className=\"panel-content\">\n          <select className=\"machine-type panel-select\"\n            value={machineBuilder.getMachineType()}\n            onChange={this.onChangeMachineType}>\n            <option value=\"DFA\">DFA</option>\n            <option value=\"NFA\">NFA</option>\n          </select>\n\n          {this.state.viewFormal &&\n            <FormalDefinition machineBuilder={machineBuilder}/>}\n\n          {\n            !this.state.viewFormal &&\n            <div>\n              <div>\n                <div className=\"graphinfo-important\">\n                  <StatesList graphController={graphController}/>\n                  <AlphabetList machineController={machineController}/>\n                </div>\n                <div className=\"graphinfo\">\n                  <TransitionFunction machineBuilder={machineBuilder}/>\n                  <TransitionTable machineBuilder={machineBuilder}/>\n                </div>\n              </div>\n              <hr/>\n\n              {/*State Labeling*/}\n              <div style={{paddingBottom: \"0.5em\"}}>\n                <h3 style={{marginBottom: \"0\"}}>State Labels</h3>\n                <div style={{display: \"flex\", flexDirection: \"row\"}}>\n                  <div className=\"statetag-container\">\n                    <FormattedInput defaultValue={machineBuilder.getLabeler().prefix} style={{width: \"4em\"}} formatter={this.onAutoStateFormat} captureOnExit=\"save\" onSubmit={this.onSubmitAutoStatePrefix}/>\n                  </div>\n                  <select style={{\n                      background: \"none\",\n                      outline: \"none\",\n                      border: \"none\",\n                      padding: \"0\",\n                      margin: \"0\",\n                      appearance: \"none\",\n                      color: \"white\"\n                    }} disabled={true}>\n                    <option>{\"0-9\"}</option>\n                    <option>{\"a-z\"}</option>\n                    <option>{\"A-Z\"}</option>\n                  </select>\n                </div>\n                <div className=\"panel-checkbox\">\n\n                  <input type=\"checkbox\" id=\"auto-statename\"\n                    onChange={this.onChangeAutoRename}\n                    checked={machineBuilder.shouldAutoRenameNodes()}/>\n                  <label htmlFor=\"auto-statename\">{I18N.toString(\"options.autolabel\")}</label>\n                </div>\n              </div>\n\n              <hr/>\n\n              <button className=\"panel-button\" onClick={this.onAutoLayout} disabled={graph.isEmpty()}>\n                {I18N.toString(\"action.overview.autolayout\")}\n              </button>\n            </div>\n          }\n\n          <button className=\"panel-button\" onClick={this.switchDefinition}>\n            {this.state.viewFormal ? \"Back\" : \"View Definition\"}\n          </button>\n        </div>\n      <div className=\"panel-bottom\"></div>\n    </div>;\n  }\n}\nOverviewPanel.UNLOCALIZED_NAME = \"component.overview.title\";\n\nexport default OverviewPanel;\n","import { EMPTY } from 'machine/Symbols.js';\nimport NFA from 'machine/NFA.js'\n\n//This ASSUMES that the passed-in machine is an NFA! (and not a DFA)\nexport function solveNFA(nfa, input)\n{\n  if (typeof input === 'string') input = input[Symbol.iterator]();\n\n  let cachedStates = [];\n  let cachedSymbols = [];\n  cachedStates.push({state: nfa.getStartState(), index: 0});\n  for (let currState of nfa.doClosureTransition(nfa.getStartState()))\n  {\n    cachedStates.push({state: currState , index: 0});\n  }\n  let checkedStates = [];\n  let symbol = null;\n\n  let counter = 0;\n\n  while(cachedStates.length > 0)\n  {\n    symbol = input.next().value;\n    let res = solveNFAbyStep(nfa, symbol, cachedStates, cachedSymbols, checkedStates);\n    if (res) return true;\n\n    //HACK: This is to stop any infinite loops! This will be fixed in the future!\n    ++counter;\n    if (counter > 1000)\n    {\n      return false;\n    }\n  }\n\n  return false;\n}\n\n//TODO: When an empty transition occurs, it does a closure transition.\n//The closure chain will be stored as a group\n//Any future transitions must not re-enter the group\nexport function solveNFAbyStep(nfa, symbol, cachedStates, cachedSymbols, checkedStates)\n{\n  //initialize variables\n  let state = null;\n  let nextStates = [];\n  let nextIndex = 0;\n\n  if (symbol != null)\n  {\n    cachedSymbols.push(symbol);\n  }\n\n  for(let cstate of cachedStates)\n  {\n    state = cstate.state;\n    symbol = cstate.index < cachedSymbols.length ? cachedSymbols[cstate.index] : null;\n\n    if (symbol != null)\n    {\n      //Read to next state...\n      nextIndex = cstate.index + 1;\n      for(let nextState of nfa.doTerminalTransition(state, symbol))\n      {\n        nextStates.push({state: nextState, index: nextIndex});\n      }\n    }\n    else\n    {\n      if (nfa.isFinalState(state)) return true;\n      checkedStates.push(state);\n    }\n\n    //Read none to next state...\n    nextIndex = cstate.index;\n    /*for(let nextState of nfa.doTransition(state,EMPTY))\n    {\n      if (checkedStates.includes(nextState)) continue;\n      if (symbol == null && nfa.isFinalState(nextState)) return true;\n\n      nextStates.push({state: nextState, index: nextIndex});\n    }*/\n  }\n  cachedStates.length = 0\n  cachedStates.push(...nextStates);\n  return false;\n}\n","import FSA from './FSA.js';\n\nconst SRC = 0;\nconst SYMBOL = 1;\nconst DST = 2;\n\nclass DFA extends FSA\n{\n  constructor()\n  {\n    super();\n  }\n\n  validate()\n  {\n    //TODO: Deprecate this\n    console.error(\"This is deprecated, please use FSA.isValidDFA()\");\n    return this.isValidDFA();\n  }\n\n  //Override default behavior\n  newTransition(fromState, toState, symbol)\n  {\n    if (!this._states.includes(fromState))\n    {\n      throw new Error(\"State \\'\" + fromState + \"\\' does not exist.\");\n    }\n\n    if (!this._states.includes(toState))\n    {\n      throw new Error(\"State \\'\" + toState + \"\\' does not exist.\");\n    }\n\n    for(const transition of this._transitions)\n    {\n      //Check if already exists...\n      if (transition[SRC] == fromState && transition[SYMBOL] == symbol && transition[DST] == toState)\n      {\n        return;\n      }\n      //Check if valid deterministic transition...\n      else if (transition[SRC] == fromState && transition[SYMBOL] == symbol)\n      {\n        throw new Error(\"Unable to create illegal nondeterministic transition for DFA.\");\n      }\n    }\n\n    //Create new transition\n    this._transitions.push([fromState, symbol, toState]);\n  }\n}\n\nexport default DFA;\n","import { solveDFA } from 'machine/util/solveDFA.js';\nimport { solveNFA, solveNFAbyStep } from 'machine/util/solveNFA.js';\n\nimport { DFA } from 'machine/DFA.js';\n\nconst STEPTIME = 500;\nconst SKIPTIME = 50;\n\nclass TestMode\n{\n  constructor(testingManager)\n  {\n    this.graphController = null;\n    this.machineController = null;\n\n    this.testingManager = testingManager;\n\n    this.targets = [];\n\n    this.history = [];\n    this.indexofString = -1;\n    this.result = false;\n\n    //for nfa use\n    this.cachedStates = [];\n    this.cachedSymbols = [];\n    this.checkedStates = [];\n    this.running = false;\n    this.started = false;\n    this.skipToEnd = false;\n\n    this.timer = null;\n\n    this.onNodeDestroy = this.onNodeDestroy.bind(this);\n  }\n\n  initialize(app)\n  {\n    this.graphController = app.getGraphController();\n    this.machineController = app.getMachineController();\n\n    //NOTE: This is not necessary because you can edit once in stepbystep mode\n    //this.graphController.getGraph().on(\"nodeDestroy\", this.onNodeDestroy);\n  }\n\n  destroy()\n  {\n    //this.graphController.getGraph().removeEventListener(\"nodeDestroy\", this.onNodeDestroy);\n  }\n\n  onNodeDestroy(node)\n  {\n    //this.targets.splice(this.targets.indexOf(node), 1);\n  }\n\n  onStart()\n  {\n    //Check the machine, if DFA, then it must be a valid DFA\n    /*if (this.machineController.getMachineBuilder().getMachineType() == \"DFA\")\n    {\n      const dfa = this.machineController.getMachineBuilder().toDFA();\n      if (!dfa.validate()) return;\n    }*/\n    this.prepareForNewTest();\n    this.started = true;\n    this.skipToEnd = false;\n  }\n\n  onResume()\n  {\n    //If at the end, restart!\n    if (!this.hasNextStep())\n    {\n      this.testingManager.inputList.resetTests(false);\n    }\n\n    this.running = true;\n\n    const step = () => {\n      if (this.running)\n      {\n        if (this.hasNextStep())\n        {\n          this.onNextStep();\n          this.timer = setTimeout(step, STEPTIME);\n        }\n        else\n        {\n          this.onPause();\n        }\n      }\n    };\n    this.timer = setTimeout(step, STEPTIME);\n  }\n\n  onPause()\n  {\n    this.running = false;\n  }\n\n  onStop()\n  {\n    this.targets.length = 0;\n\n    this.running = false;\n    this.started = false;\n    this.skipToEnd = false;\n  }\n\n  isRunning()\n  {\n    return this.running;\n  }\n\n  isStarted()\n  {\n    return this.started;\n  }\n\n  isSkipping()\n  {\n    return this.skipToEnd;\n  }\n\n  hasPrevStep()\n  {\n    return this.history.length > 0 ||\n      this.testingManager.inputList.hasPrevInput();\n  }\n\n  onPreviousStep()\n  {\n    if (this.history.length > 0)\n    {\n      const previous = this.history.pop();\n      this.targets.length = 0;\n      this.cachedStates.length = 0;\n      this.cachedSymbols.length = 0;\n      this.checkedStates.length = 0;\n\n      //Copy the old step\n      for(const target of previous.targets)\n      {\n        if (!target) throw new Error(\"Found null target\");\n\n        this.targets.push(target);\n      }\n      for(const state of previous.cachedStates)\n      {\n        this.cachedStates.push(state);\n      }\n      for(const symbol of previous.cachedSymbols)\n      {\n        this.cachedSymbols.push(symbol);\n      }\n      for(const state of previous.checkedStates)\n      {\n        this.checkedStates.push(state);\n      }\n\n      this.indexofString--;\n    }\n    else\n    {\n      this.indexofString = -1;\n      this.testingManager.inputList.prevInput();\n    }\n  }\n\n  hasNextStep()\n  {\n    return this.indexofString < this.testingManager.inputList.getCurrentInput().value.length ||\n      this.testingManager.inputList.hasNextInput();\n  }\n\n  onNextStep()\n  {\n    const testInput = this.testingManager.inputList.getCurrentInput();\n    const fsa = this.machineController.getMachineBuilder().getMachine();\n\n    //Get next character of current test string\n    this.indexofString += 1;\n\n    //If no more characters to get...\n    if(this.indexofString >= testInput.value.length)\n    {\n      //End of test string\n      //Run it one more time...\n      this.result = solveNFAbyStep(fsa, null, this.cachedStates, this.cachedSymbols, this.checkedStates);\n      testInput.setResult(this.result);\n\n      //If this is the last test input...\n      if (!this.testingManager.inputList.hasNextInput())\n      {\n        //End of test!\n        this.onPause();\n        return false;\n      }\n      else\n      {\n        const result = this.testingManager.inputList.nextInput();\n\n        //Stop the resume at each string\n        //this.running = false;\n\n        this.prepareForNewTest();\n        return true;\n      }\n    }\n    else\n    {\n      //Update history\n      const currentStep = this.getCurrentCache();\n      this.history.push(currentStep);\n\n      //Run it\n      let nextChar = testInput.value[this.indexofString];\n\n      this.result = solveNFAbyStep(fsa, nextChar, this.cachedStates, this.cachedSymbols, this.checkedStates);\n      //Update targets\n      this.targets.length = 0;\n\n      for(const state of this.cachedStates)\n      {\n        let node = this.machineController.getFirstGraphNodeByLabel(this.graphController.getGraph(), state.state);\n        if (!node) throw new Error(\"Found null target\");\n\n        if (!this.targets.includes(node)) this.targets.push(node);\n      }\n\n      if (this.targets.length <= 0 && !this.running)\n      {\n        this.skipToEnd = true;\n        const skipFunc = () => {\n          if (this.skipToEnd)\n          {\n            this.indexofString += 1;\n            if (this.indexofString >= testInput.value.length)\n            {\n              this.skipToEnd = false;\n            }\n            else\n            {\n              setTimeout(skipFunc, SKIPTIME);\n            }\n          }\n        };\n        setTimeout(skipFunc, SKIPTIME);\n      }\n\n      return true;\n    }\n  }\n\n  getCurrentCache()\n  {\n    return {\n      targets: this.targets.slice(),\n      cachedStates: this.cachedStates.slice(),\n      cachedSymbols: this.cachedSymbols.slice(),\n      checkedStates: this.checkedStates.slice()\n    };\n  }\n\n  getCurrentTestStringIndex()\n  {\n    return this.indexofString + 1;\n  }\n\n  prepareForNewTest()\n  {\n    this.cachedStates.length = 0;\n\n    const graph = this.graphController.getGraph();\n    if (graph.isEmpty()) return;\n\n    const machine = this.machineController.getMachineBuilder().getMachine();\n\n    this.targets.length = 0;\n\n    let startState = machine.getStartState();\n    for (let curr_state of machine.doClosureTransition(startState))\n    {\n      this.cachedStates.push({state: curr_state, index: 0});\n      const node = this.machineController.getFirstGraphNodeByLabel(graph, curr_state);\n      if (!node) throw new Error(\"Found null target\");\n      this.targets.push(node);\n    }\n\n    this.cachedSymbols.length = 0;\n    this.checkedStates.length = 0;\n    this.indexofString = -1;\n    this.history.length = 0;\n\n    this.skipToEnd = false;\n  }\n}\n\nexport default TestMode;\n","import { guid } from 'util/MathHelper.js';\n\nimport { solveNFA } from 'machine/util/solveNFA.js';\n\nconst SUCCESS = true;\nconst FAILURE = false;\nconst PENDING = null;\n\n//Only refer to input by index, NEVER by reference!\nclass TestingInputList\n{\n  constructor()\n  {\n    this.inputList = [];\n    this.addInput(\"\");\n\n    this.inputIndex = 0;\n  }\n\n  isEmpty()\n  {\n    for(const input of this.inputList)\n    {\n      if (input.value.length > 0)\n      {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  testByIndex(index, machine)\n  {\n    if (index < 0 || index >= this.inputList.length)\n    {\n      throw new Error(\"Cannot find test input for index\");\n    }\n\n    const input = this.inputList[index];\n    input.setResult(null);\n    //TODO: make this a promise\n    const result = solveNFA(machine, input.value);\n    input.setResult(result);\n    return result;\n  }\n\n  importTests(file)\n  {\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      try\n      {\n        //The only time the first element is being removed (then replaced)\n        this.inputList.length = 0;\n        this.inputIndex = 0;\n\n        const testInputs = event.target.result.split(\"\\n\");\n        for(let testInput of testInputs)\n        {\n          testInput = testInput.trim();\n          if (testInput.length > 0)\n          {\n            this.addInput(testInput);\n          }\n        }\n\n        //Make sure a first element exists\n        if (this.inputList.length < 0)\n        {\n          this.addInput(\"\");\n        }\n      }\n      catch(e)\n      {\n        reader.abort();\n      }\n    };\n    reader.readAsText(file);\n  }\n\n  getTestsAsStrings()\n  {\n    return this.inputList.map((e, i) => e.value);\n  }\n\n  clearTests()\n  {\n    //Reset first element\n    const first = this.inputList[0];\n    first.value = \"\";\n    first.result = null;\n    first.dirty = true;\n\n    //Reset list\n    this.inputList.length = 1;\n    this.inputIndex = 0;\n  }\n\n  resetTests(markDirty=true)\n  {\n    this.inputIndex = 0;\n\n    if (markDirty)\n    {\n      for(const input of this.inputList)\n      {\n        input.dirty = true;\n      }\n    }\n  }\n\n  getTests()\n  {\n    return this.inputList;\n  }\n\n  addInput(value)\n  {\n    const input = {\n      value: value,\n      result: null,\n      dirty: true,\n      id: guid(),\n      setResult(result)\n      {\n        this.dirty = false;\n        this.result = result;\n      }\n    };\n\n    this.inputList.push(input);\n    return input;\n  }\n\n  getInputByIndex(index)\n  {\n    if (index < 0 || index >= this.inputList.length)\n    {\n      throw new Error(\"Cannot find test input for index\");\n    }\n\n    return this.inputList[index];\n  }\n\n  removeInputByIndex(index)\n  {\n    if (index < 0 || index >= this.inputList.length)\n    {\n      throw new Error(\"Cannot find test input for index\");\n    }\n\n    if (index === 0)\n    {\n      //Cannot delete the first input element\n      throw new Error(\"Cannot delete the first test input\");\n    }\n\n    if (index <= this.inputIndex)\n    {\n      --this.inputIndex;\n    }\n\n    this.inputList.splice(index, 1);\n  }\n\n  nextInput()\n  {\n    ++this.inputIndex;\n    if (this.inputIndex >= this.inputList.length)\n    {\n      this.inputIndex = 0;\n    }\n\n    return this.inputList[this.inputIndex];\n  }\n\n  prevInput()\n  {\n    --this.inputIndex;\n    if (this.inputIndex < 0)\n    {\n      this.inputIndex = this.inputList.length - 1;\n    }\n\n    return this.inputList[this.inputIndex];\n  }\n\n  resetInput()\n  {\n    this.inputIndex = 0;\n  }\n\n  hasNextInput()\n  {\n    return this.inputIndex < this.inputList.length;\n  }\n\n  hasPrevInput()\n  {\n    return this.inputIndex > 0;\n  }\n\n  getCurrentInput()\n  {\n    return this.inputList[this.inputIndex];\n  }\n\n  getCurrentInputIndex()\n  {\n    return this.inputIndex;\n  }\n}\n\nexport default TestingInputList;\n","import Viewport from 'content/viewport/Viewport.js';\nimport TestMode from './TestMode.js';\nimport TestingInputList from './TestingInputList.js';\n\nclass TestingManager\n{\n  constructor()\n  {\n    this.machineController = null;\n    this.viewport = null;\n\n    this.inputList = new TestingInputList();\n\n    this.shouldCheckError = false;\n    this.isImmediateErrorCheck = false;\n    this.errorCheckMode = TestingManager.NO_ERROR_CHECK;\n    this.stepByStepMode = false;\n\n    this.testMode = new TestMode(this);\n  }\n\n  initialize(app)\n  {\n    this.machineController = app.getMachineController();\n    this.viewport = app.viewport;\n\n    this.testMode.initialize(app);\n  }\n\n  destroy()\n  {\n\n  }\n\n  setErrorCheckMode(mode)\n  {\n    const machineBuilder = this.machineController.getMachineBuilder();\n\n    //Update machine builder error checker\n    machineBuilder.setMachineType(machineBuilder.getMachineType());\n\n    if (mode == TestingManager.NO_ERROR_CHECK)\n    {\n      this.shouldCheckError = false;\n      this.errorCheckMode = mode;\n    }\n    else if (mode == TestingManager.DELAYED_ERROR_CHECK)\n    {\n      this.shouldCheckError = true;\n      this.isImmediateErrorCheck = false;\n      this.errorCheckMode = mode;\n    }\n    else if (mode == TestingManager.IMMEDIATE_ERROR_CHECK)\n    {\n      this.shouldCheckError = true;\n      this.isImmediateErrorCheck = true;\n      this.errorCheckMode = mode;\n    }\n    else\n    {\n      throw new Error(\"Unknown error check mode \\'\" + mode + \"\\'\");\n    }\n  }\n\n  getErrorCheckMode()\n  {\n    return this.errorCheckMode;\n  }\n\n  setStepByStepMode(mode)\n  {\n    this.stepByStepMode = mode ? true : false;\n    if (mode)\n    {\n      if (this.testMode.isStarted()) this.testMode.onStop();\n      this.testMode.onStart();\n      this.viewport.setState((prev, props) => {\n        if (prev.mode != Viewport.TESTING)\n        {\n          return {\n            prevMode: prev.mode,\n            mode: Viewport.TESTING\n          };\n        }\n        else\n        {\n          //It's already the correct viewport mode\n        }\n      });\n    }\n    else\n    {\n      if (this.testMode.isStarted()) this.testMode.onStop();\n      this.viewport.setState((prev, props) => {\n        return {mode: prev.prevMode};\n      });\n    }\n  }\n\n  getStepByStepMode()\n  {\n    return this.stepByStepMode;\n  }\n}\nTestingManager.NO_ERROR_CHECK = \"none\";\nTestingManager.DELAYED_ERROR_CHECK = \"delayed\";\nTestingManager.IMMEDIATE_ERROR_CHECK = \"immediate\";\n\nexport default TestingManager;\n","import React from 'react';\n\nclass AddIcon extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    return <svg className=\"add-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n      <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"/>\n    </svg>;\n  }\n}\n\nexport default AddIcon;\n","import React from 'react';\n\nclass RemoveIcon extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    return <svg className=\"remove-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n      <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\"/>\n    </svg>;\n  }\n}\n\nexport default RemoveIcon;\n","import React from 'react';\n\nclass SuccessIcon extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    return <svg className=\"success-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n      <path fill=\"none\" d=\"M0 0h24v24H0V0zm0 0h24v24H0V0z\"/>\n      <path d=\"M16.59 7.58L10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/>\n    </svg>;\n  }\n}\n\nexport default SuccessIcon;\n","import React from 'react';\n\nclass FailureIcon extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    return <svg className=\"failure-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n      <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n      <path d=\"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"/>\n    </svg>;\n  }\n}\n\nexport default FailureIcon;\n","import React from 'react';\n\nclass RunningManIcon extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n    render() {\n        return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path fill=\"none\" d=\"M0 0h24v24H0z\"/>\n                <path d=\"M13.49 5.48c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm-3.6 13.9l1-4.4 2.1 2v6h2v-7.5l-2.1-2 .6-3c1.3 1.5 3.3 2.5 5.5 2.5v-2c-1.9 0-3.5-1-4.3-2.4l-1-1.6c-.4-.6-1-1-1.7-1-.3 0-.5.1-.8.1l-5.2 2.2v4.7h2v-3.4l1.8-.7-1.6 8.1-4.9-1-.4 2 7 1.4z\"/>\n            </svg>;\n    }\n}\n\nexport default RunningManIcon;\n","import React from 'react';\nimport './StatusButton.css';\n\nimport IconButton from 'icons/IconButton.js';\nimport SuccessIcon from 'icons/SuccessIcon.js';\nimport FailureIcon from 'icons/FailureIcon.js';\nimport WorkingIcon from 'icons/WorkingIcon.js';\nimport RunningManIcon from 'icons/RunningManIcon.js';\n\nclass StatusButton extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    const active = this.props.active;\n    if (this.props.mode === true)\n    {\n      //Success icon\n      return <IconButton className={\"status-icon success\" + (active ? \" active\" : \"\")}\n        onClick={this.props.onClick}>\n        <SuccessIcon/>\n      </IconButton>;\n    }\n    else if (this.props.mode === false)\n    {\n      //Failure icon\n      return <IconButton className={\"status-icon failure\" + (active ? \" active\" : \"\")}\n        onClick={this.props.onClick}>\n        <FailureIcon/>\n      </IconButton>;\n    }\n    else\n    {\n      //Pending icon\n      return <IconButton className={\"status-icon\" + (active ? \" active\" : \"\")}\n        onClick={this.props.onClick}>\n        <RunningManIcon/>\n      </IconButton>;\n    }\n  }\n}\n\nexport default StatusButton;\n","import React from 'react';\nimport './TestingInput.css';\n\nimport Config from 'config.js';\nimport { EMPTY } from 'machine/Symbols.js';\n\nimport IconButton from 'icons/IconButton.js';\nimport AddIcon from 'icons/AddIcon.js';\nimport RemoveIcon from 'icons/RemoveIcon.js';\n\nimport StatusButton from './StatusButton.js';\n\nclass TestingInput extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.ref = React.createRef();\n\n    this.onStatusClick = this.onStatusClick.bind(this);\n    this.onSubmitClick = this.onSubmitClick.bind(this);\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyUp = this.onKeyUp.bind(this);\n  }\n\n  getInput()\n  {\n    return this.props.testList.getInputByIndex(this.props.index);\n  }\n\n  isInputFirst()\n  {\n    return this.props.index === 0;\n  }\n\n  onStatusClick(e)\n  {\n    this.props.testList.testByIndex(this.props.index, this.props.machineBuilder.getMachine());\n  }\n\n  onSubmitClick(e)\n  {\n    if (this.isInputFirst())\n    {\n      const src = this.getInput();\n\n      //Add test input to list\n      const newTest = this.props.testList.addInput(src.value);\n      //Copy result to new test (should not be setResult)\n      newTest.result = src.result;\n      newTest.dirty = src.dirty;\n\n      //Delete already processed test\n      src.value = \"\";\n      src.result = null;\n      src.dirty = true;\n\n      //Reselect the target\n      this.ref.focus();\n    }\n    else\n    {\n      //Remove test input from list\n      this.props.testList.removeInputByIndex(this.props.index);\n    }\n  }\n\n  onValueChange(e)\n  {\n    const value = e.target.value.trim();\n    const src = this.getInput();\n    src.value = value;\n    src.dirty = true;\n  }\n\n  onKeyDown(e)\n  {\n    //If it is an 'enter', don't put in a new line...\n    if (e.keyCode === Config.SUBMIT_KEY)\n    {\n      e.preventDefault();\n    }\n    //Delete it if there is no value in it\n    else if (e.keyCode === Config.DELETE_KEY)\n    {\n      const src = this.getInput();\n      if (src.value.length <= 0)\n      {\n        const nextIndex = this.props.index + 1;\n        //Replace this input with the next one if there is one...\n        //Also, cannot delete first input, but this will never get there :)\n        if (this.props.testList.getTests().length > nextIndex)\n        {\n          const nextInput = this.props.testList.getInputByIndex(nextIndex);\n          src.value = nextInput.value;\n          src.result = nextInput.result;\n          src.dirty = nextInput.dirty;\n\n          this.props.testList.removeInputByIndex(nextIndex);\n        }\n      }\n    }\n  }\n\n  onKeyUp(e)\n  {\n    if (e.keyCode === Config.SUBMIT_KEY)\n    {\n      const shouldTestOnly = e.shiftKey;\n\n      //Should try to add and NOT run\n      if (this.isInputFirst() && !shouldTestOnly)\n      {\n        const src = this.getInput();\n\n        //Add test input to list\n        const newTest = this.props.testList.addInput(src.value);\n        //Copy result to new test (should not be setResult)\n        newTest.result = src.result;\n        newTest.dirty = src.dirty;\n\n        //Delete already processed test\n        src.value = \"\";\n        src.result = null;\n        src.dirty = true;\n\n        //Refocus the target\n        this.ref.focus();\n      }\n      //Should try to run ONLY\n      else\n      {\n        this.props.testList.testByIndex(this.props.index, this.props.machineBuilder.getMachine());\n\n        //Select everything again\n        this.ref.select();\n      }\n    }\n    else if (e.keyCode === Config.CLEAR_KEY)\n    {\n      e.target.blur();\n    }\n  }\n\n  render()\n  {\n    const src = this.getInput();\n    const first = this.isInputFirst();\n    return <div className={\"testinginput-container \" +\n      (this.props.testList.getCurrentInputIndex() === this.props.index ? \" active\" : \"\")}>\n\n      <StatusButton active={!src.dirty} mode={src.result} onClick={this.onStatusClick}/>\n\n      <input ref={ref=>this.ref=ref} className=\"testinginput-field\"\n        value={src.value}\n        placeholder={EMPTY}\n        onChange={this.onValueChange}\n        onKeyDown={this.onKeyDown}\n        onKeyUp={this.onKeyUp}\n        onFocus={(e)=>e.target.select()}/>\n\n      <IconButton className=\"testinginput-submit\" onClick={this.onSubmitClick}>\n        {first ? <AddIcon/> : <RemoveIcon/>}\n      </IconButton>\n    </div>;\n  }\n}\n\nexport default TestingInput;\n","import React from 'react';\n\nclass UploadTestButton extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    return <button\n      className={\"icon-button \" + this.props.className}\n      id={this.props.id}\n      title={this.props.title}\n      style={this.props.style}\n      disabled={this.props.disabled}\n      onClick={this.props.onClick}>\n      <input ref={ref=>this.uploadInput=ref}\n        id=\"test-upload-input\" type=\"file\" name=\"import\"\n        style={{display: \"none\"}}\n        onChange={this.props.onChange} accept=\".txt\"/>\n      <label htmlFor=\"test-upload-input\">\n        {this.props.children}\n      </label>\n    </button>;\n  }\n}\n\nexport default UploadTestButton;\n","import React from 'react';\n\nclass PageNewContentIcon extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    return <svg className=\"pagenewcontent-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n      <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\"/>\n    </svg>;\n  }\n}\n\nexport default PageNewContentIcon;\n","import React from 'react';\n\nclass CloseIcon extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    return <svg className=\"close-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n      <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n    </svg>;\n  }\n}\n\nexport default CloseIcon;\n","import React from 'react';\nimport '../Panel.css';\nimport './TestingPanel.css';\n\nimport Viewport from 'content/viewport/Viewport.js';\n\nimport Downloader from 'util/Downloader.js';\n\nimport TestingManager from 'modules/fsa/testing/TestingManager.js';\nimport TestingInput from './TestingInput.js';\n\nimport IconButton from 'icons/IconButton.js';\nimport UploadTestButton from './components/UploadTestButton.js';\n\nimport UploadIcon from 'icons/UploadIcon.js';\nimport CreateIcon from 'icons/PageNewContentIcon.js';\nimport SaveIcon from 'icons/SaveIcon.js';\nimport CloseIcon from 'icons/CloseIcon.js';\n\nconst TEST_FILENAME = \"test.txt\";\n\n//TODO: This is faster, since it's pretty easy to tell latency here. But really it shouldn't.\nconst REFRESH_TEST_TICKS = 30;\n\nclass TestingPanel extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.container = React.createRef();\n    this.uploadInput = React.createRef();\n\n    this.state = {\n      errorCheckMode: this.props.app.getCurrentModule().getTestingManager().getErrorCheckMode(),\n      noTestMode: true\n    };\n\n    this._savedGraphHash = 0;\n    this._ticksSinceHash = 0;\n    this.stepByStepModeChecked = false;\n\n    this.onChangeErrorCheckMode = this.onChangeErrorCheckMode.bind(this);\n    this.onUploadFileChange = this.onUploadFileChange.bind(this);\n    this.onGraphChange = this.onGraphChange.bind(this);\n    this.onTestsRunAll = this.onTestsRunAll.bind(this);\n    this.onTestsClear = this.onTestsClear.bind(this);\n    this.onTestsSave = this.onTestsSave.bind(this);\n    this.onTestsNew = this.onTestsNew.bind(this);\n    this.onTestsUpload = this.onTestsUpload.bind(this);\n  }\n\n  componentWillMount()\n  {\n    const graphController = this.props.graphController;\n    const graph = graphController.getGraph();\n\n    //HACK: this should be in FSABuilder and listen for machine changes instead\n    this._savedGraphHash = graph.getHashCode();\n    this._ticksSinceHash = 0;\n  }\n\n  componentWillUnmount()\n  {\n    const graphController = this.props.graphController;\n    const graph = graphController.getGraph();\n    this._savedGraphHash = 0;\n  }\n\n  onGraphChange(g)\n  {\n    const app = this.props.app;\n    const tester = app.getCurrentModule().getTestingManager();\n    tester.inputList.resetTests();\n  }\n\n  onUploadFileChange(e)\n  {\n    const files = e.target.files;\n    if (files.length > 0)\n    {\n      const app = this.props.app;\n      const tester = app.getCurrentModule().getTestingManager();\n      tester.inputList.importTests(files[0]);\n      document.getElementById(\"test-name\").innerHTML = files[0].name;\n\n      //Makes sure you can upload the same file again.\n      e.target.value = \"\";\n    }\n  }\n\n  onChangeErrorCheckMode(e)\n  {\n    const value = e.target.value;\n\n    const graphController = this.props.graphController;\n    const machineController = this.props.machineController;\n    const app = this.props.app;\n    const tester = app.getCurrentModule().getTestingManager();\n\n    const graph = graphController.getGraph();\n    const machineBuilder = machineController.getMachineBuilder();\n    tester.setErrorCheckMode(value);\n\n    //HACK: this should automatically be updated by testing manager on set error check mode\n    if (!tester.shouldCheckError)\n    {\n      machineBuilder.machineErrorChecker.clear();\n    }\n    else\n    {\n      machineBuilder.onGraphChange(graph);\n    }\n\n    this.setState({errorCheckMode: value});\n  }\n\n  onTestsRunAll(e)\n  {\n    const machine = this.props.machineController.getMachineBuilder().getMachine();\n    const app = this.props.app;\n    const tester = app.getCurrentModule().getTestingManager();\n    if (tester.testMode.isStarted())\n    {\n      tester.setStepByStepMode(false);\n    }\n    else\n    {\n      const testList = tester.inputList;\n      const length = testList.getTests().length;\n      tester.setStepByStepMode(this.stepByStepModeChecked);\n      for(let i = 0; i < length; ++i)\n      {\n        testList.testByIndex(i, machine);\n      }\n    }\n  }\n\n  onTestsClear(e)\n  {\n    const app = this.props.app;\n    const tester = app.getCurrentModule().getTestingManager();\n    tester.inputList.clearTests();\n    this.clearTestName();\n    this.hideTestInputList();\n    this.setState({noTestMode: true});\n  }\n\n  onTestsSave(e)\n  {\n    const app = this.props.app;\n    const tester = app.getCurrentModule().getTestingManager();\n    Downloader.downloadText(TEST_FILENAME, tester.inputList.getTestsAsStrings().join(\"\\n\"));\n  }\n\n  onTestsNew(e)\n  {\n      this.onTestsClear();\n      this.showTestInputList();\n      this.clearTestName();\n      this.setState({noTestMode: false});\n  }\n\n  onTestsUpload(e)\n  {\n      this.onTestsNew();\n      this.showTestInputList();\n  }\n\n  showTestInputList() {\n      document.getElementById(\"test-inputlist-container\").style.display = \"block\";\n  }\n\n  hideTestInputList() {\n      document.getElementById(\"test-inputlist-container\").style.display = \"none\";\n  }\n\n  clearTestName() {\n      document.getElementById(\"test-name\").innerHTML = \"\";\n  }\n\n  render()\n  {\n    const app = this.props.app;\n    const viewport = app.viewport;\n    const tester = app.getCurrentModule().getTestingManager();\n    const testList = tester.inputList;\n    const machineBuilder = this.props.machineController.getMachineBuilder();\n\n    const isTestInvalid = !machineBuilder.isValidMachine();\n\n    if (--this._ticksSinceHash <= 0)\n    {\n      this._ticksSinceHash = REFRESH_TEST_TICKS;\n      const graph = this.props.graphController.getGraph();\n      const graphHash = graph.getHashCode();\n      if (this._savedGraphHash !== graphHash)\n      {\n        this.onGraphChange(graph);\n        this._savedGraphHash = graphHash;\n      }\n    }\n\n    return <div className=\"panel-container\" id=\"testing\" ref={ref=>this.container=ref} style={this.props.style}>\n      <div className=\"panel-title\">\n        <h1>{I18N.toString(\"component.testing.title\")}</h1>\n      </div>\n\n      <div className=\"test-icon-row\">\n\n          <IconButton className=\"testicon\" id=\"testing-new\" title={I18N.toString(\"action.testing.new\")}\n            onClick={this.onTestsNew}>\n            <CreateIcon/>\n          </IconButton>\n\n          {/*Import Test Button*/}\n          <UploadTestButton className=\"testicon\" id=\"testing-upload\" title={I18N.toString(\"action.testing.import\")}\n            onClick={this.onTestsUpload} onChange={this.onUploadFileChange}>\n            <UploadIcon/>\n          </UploadTestButton>\n\n          {/*Save Test Button*/}\n          <IconButton className=\"testicon\" id=\"testing-save\" title={I18N.toString(\"action.testing.save\")}\n            onClick={this.onTestsSave} disabled={tester.inputList.isEmpty()}>\n            <SaveIcon/>\n          </IconButton>\n\n          <IconButton className=\"testicon\" id=\"testing-clear\" title={I18N.toString(\"action.testing.clear\")}\n            onClick={this.onTestsClear}\n            disabled={this.state.noTestMode}>\n            <CloseIcon/>\n          </IconButton>\n\n      </div>\n\n      <div className=\"panel-content\">\n\n        <div className=\"test-inputlist-container\" id=\"test-inputlist-container\" style={{\"display\": \"none\"}}>\n\n\n          <div className=\"scrollbar-container\">\n            <h3 id=\"test-name\">Test Name</h3>\n            <div className=\"test-inputlist-content\">\n              {\n                isTestInvalid &&\n                <label className=\"test-inputlist-content-warning\">Not a valid machine!</label>\n              }\n              {\n                testList.getTests().map((e, i) =>\n                  <TestingInput key={e.id} index={i}\n                    testList={testList}\n                    machineBuilder={machineBuilder}/>)\n              }\n              {\n                /*\n                <button className=\"panel-button\" onClick={() => testList.addInput(\"\")}>\n                  {I18N.toString(\"action.testing.add\")}\n                </button>\n                */\n              }\n            </div>\n          </div>\n\n          <button className=\"panel-button\" onClick={this.onTestsRunAll}>\n            {tester.testMode.isStarted() ? I18N.toString(\"action.testing.stoprun\") : I18N.toString(\"action.testing.runall\")}\n          </button>\n\n          <div className=\"panel-checkbox\">\n            <input id=\"test-step\" type=\"checkbox\"\n              checked={this.stepByStepModeChecked}\n              onChange={(e) => {\n                this.stepByStepModeChecked = e.target.checked;\n                if(!this.stepByStepModeChecked) tester.setStepByStepMode(false);\n              }}\n              disabled={tester.testMode.isStarted()}/>\n            <label htmlFor=\"test-step\">{I18N.toString(\"options.testing.stepmode\")}</label>\n          </div>\n\n        </div>\n\n        <hr />\n\n        <div id=\"test-errorcheck\">\n          <label>{I18N.toString(\"options.checkerrors\")}</label>\n          <select className=\"panel-select\"\n            value={this.state.errorCheckMode}\n            onChange={this.onChangeErrorCheckMode}>\n            <option value={TestingManager.NO_ERROR_CHECK}>{I18N.toString(\"options.checkerrors.mode.none\")}</option>\n            <option value={TestingManager.DELAYED_ERROR_CHECK}>{I18N.toString(\"options.checkerrors.mode.delayed\")}</option>\n            <option value={TestingManager.IMMEDIATE_ERROR_CHECK}>{I18N.toString(\"options.checkerrors.mode.immediate\")}</option>\n          </select>\n        </div>\n\n      </div>\n\n      <div className=\"panel-bottom\"></div>\n    </div>;\n  }\n}\nTestingPanel.UNLOCALIZED_NAME = \"component.testing.title\";\n\nexport default TestingPanel;\n","import React from 'react';\n\nclass NFAToDFAConversionWarningMessage extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick(e)\n    {\n        const message = this.props.message;\n        const buttonValue = e.target.value;\n\n        switch(buttonValue)\n        {\n            case \"convert\":\n                {\n                    const machineController = this.props.machineController;\n                    machineController.convertMachineTo(\"DFA\");\n                    message.close();\n                }\n            break;\n            default:\n              throw new Error(\"Unknown button value for message\");\n        }\n    }\n\n    render()\n    {\n        const machineController = this.props.machineController;\n        const machine = machineController.getMachineBuilder().getMachine();\n        const stateCount = machine.getStates().length;\n\n        return <div>\n          <p>{I18N.toString(\"message.warning.convertNFAToDFA\")}</p>\n          <p>{`${stateCount} states -> ${Math.pow(2, stateCount)} states`}</p>\n          <button value=\"convert\" onClick={this.onClick}>{I18N.toString(\"message.action.convert\")}</button>\n        </div>;\n\n    }\n}\n\nexport default NFAToDFAConversionWarningMessage;\n","import React from 'react';\nimport Config from 'config.js';\n\nimport Notifications from 'system/notification/Notifications.js';\nimport NFAToDFAConversionWarningMessage from 'modules/fsa/notifications/NFAToDFAConversionWarningMessage.js';\n\nclass AnalysisPanel extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.container = null;\n    this.optimizeUnreachOption = null;\n    this.optimizeRedundOption = null;\n\n    this.onConvertToDFA = this.onConvertToDFA.bind(this);\n    this.onConvertToNFA = this.onConvertToNFA.bind(this);\n\n    this.onOptimizeMachine = this.onOptimizeMachine.bind(this);\n  }\n\n  onDeleteAllUnreachable(e)\n  {\n    const machineController = this.props.machineController;\n    const unreachableArray = machineController.getMachineBuilder().machineErrorChecker.getUnreachableNodes();\n    const graphController = machineController.graphController;\n    graphController.deleteTargetNodes(unreachableArray);\n  }\n\n  onConvertToDFA(e)\n  {\n    const machineController = this.props.machineController;\n    const graphController = this.props.graphController;\n    const props = {graphController: graphController, machineController: machineController};\n    const messageTag = Config.MACHINE_CONVERSION_MESSAGE_TAG;\n\n    //machineController.convertMachineTo(\"DFA\");\n    Notifications.addMessage(I18N.toString(\"message.warning.convertNFAToDFA\"),\n      \"warning\", messageTag, NFAToDFAConversionWarningMessage, props);\n  }\n\n  onConvertToNFA(e)\n  {\n    const machineController = this.props.machineController;\n    machineController.convertMachineTo(\"NFA\");\n  }\n\n  onOptimizeMachine(e)\n  {\n    if (this.optimizeUnreachOption.checked)\n    {\n      this.onDeleteAllUnreachable(e);\n    }\n  }\n\n  canOptimize()\n  {\n    return (this.optimizeRedundOption && this.optimizeRedundOption.checked) ||\n    (this.optimizeUnreachOption && this.optimizeUnreachOption.checked);\n  }\n\n  render()\n  {\n    const graphController = this.props.graphController;\n    const machineController = this.props.machineController;\n\n    const graph = graphController.getGraph();\n    const machineBuilder = machineController.getMachineBuilder();\n\n    return <div className=\"panel-container\" id=\"analysis\" ref={ref=>this.container=ref} style={this.props.style}>\n      <div className=\"panel-title\"><h1>{I18N.toString(\"component.analysis.title\")}</h1></div>\n      <div className=\"panel-content\">\n\n        {/*Optimize*/}\n        <div style={{paddingBottom: \"0.5em\"}}>\n          <h3 style={{marginBottom: \"0\"}}>Optimizations</h3>\n          <div style={{paddingBottom: \"0.5em\"}}>\n            <div>\n              <input ref={ref=>this.optimizeUnreachOption=ref} id=\"opt-unreach\" type=\"checkbox\"/>\n              <label htmlFor=\"opt-unreach\">Unreachables</label>\n            </div>\n            <div>\n              <input ref={ref=>this.optimizeRedundOption=ref} id=\"opt-redund\" type=\"checkbox\" disabled={true}/>\n              <label htmlFor=\"opt-redund\">Redundant States</label>\n            </div>\n          </div>\n          <button className=\"panel-button\" onClick={this.onOptimizeMachine} disabled={!this.canOptimize()}>Optimize</button>\n        </div>\n\n        <hr/>\n        {\n          machineBuilder.getMachineType() == \"DFA\" ?\n            <button className=\"panel-button\" onClick={this.onConvertToNFA}>\n              {I18N.toString(\"action.overview.convertnfa\")}\n            </button>\n          : machineBuilder.getMachineType() == \"NFA\" ?\n            <button className=\"panel-button\" onClick={this.onConvertToDFA}>\n              {I18N.toString(\"action.overview.convertdfa\")}\n            </button>\n          : null\n        }\n\n      </div>\n      <div className=\"panel-bottom\"></div>\n    </div>;\n  }\n}\nAnalysisPanel.UNLOCALIZED_NAME = \"component.analysis.title\";\n\nexport default AnalysisPanel;\n","import React from 'react';\n\nclass AboutPanel extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.container = null;\n  }\n\n  //Override\n  render()\n  {\n    return <div className=\"panel-container\" id=\"about\" ref={ref=>this.container=ref} style={this.props.style}>\n      <div className=\"panel-title\">\n        <h1>Finite State Automata</h1>\n      </div>\n      <div className=\"panel-content\">\n        <p>{\"Brought to you with \\u2764 by the Flap.js team.\"}</p>\n        <p>{\"<- Tap on a tab to begin!\"}</p>\n      </div>\n      <div className=\"panel-bottom\"></div>\n    </div>;\n  }\n}\n\nexport default AboutPanel;\n","import Config from 'config.js';\n\nclass GraphPicker\n{\n  constructor()\n  {\n    this.selectionBox = {\n      fromX: 0, fromY: 0,\n      toX: 0, toY: 0,\n      visible: false\n    };\n    this.targets = [];\n\n    this.target = null;\n    this.targetType = \"\";\n\n    this.initialTarget = null;\n    this.initialTargetType = \"\";\n  }\n\n  setInitialTarget(target, type)\n  {\n    this.initialTarget = target;\n    this.initialTargetType = type;\n  }\n\n  updateTarget(graph, x, y)\n  {\n    if (this.target = this.getNodeByInitialMarkerAt(graph, x, y))\n    {\n      //Clicked on initial marker\n      this.targetType = \"initial\";\n    }\n    else if (this.target = this.getEdgeByEndPointAt(graph, x, y))\n    {\n      //Clicked on endpoint\n      this.targetType = \"endpoint\";\n    }\n    else if (this.target = this.getNodeAt(graph, x, y))\n    {\n      //Clicked on node\n      this.targetType = \"node\";\n    }\n    else if (this.target = this.getEdgeAt(graph, x, y))\n    {\n      //Clicked on edge\n      this.targetType = \"edge\";\n    }\n    else\n    {\n      //Clicked on graph\n      this.target = null;\n      this.targetType = \"none\";\n    }\n\n    return this.target;\n  }\n\n  clearTarget()\n  {\n    this.target = null;\n    this.targetType = \"none\";\n  }\n\n  hasTarget()\n  {\n    return this.target != null;\n  }\n\n  getNodeAt(graph, x, y)\n  {\n    //Search graph\n    for(const node of graph.getNodes())\n    {\n      const dx = x - node.x;\n      const dy = y - node.y;\n      if (dx * dx + dy * dy < Config.NODE_RADIUS_SQU)\n      {\n        return node;\n      }\n    }\n    return null;\n  }\n\n  getNodeByInitialMarkerAt(graph, x, y)\n  {\n    const startNode = graph.getStartNode();\n    if (!startNode) return null;\n\n    const dx = x - (startNode.x + Config.INITIAL_MARKER_OFFSET_X);\n    const dy = y - startNode.y;\n    if (dx * dx + dy * dy < Config.EDGE_RADIUS_SQU)\n    {\n      return startNode;\n    }\n\n    return null;\n  }\n\n  getEdgeAt(graph, x, y)\n  {\n    const center = {x: 0, y: 0};\n\n    //Search graph\n    for(const edge of graph.getEdges())\n    {\n      edge.getCenterPoint(center);\n      const dx = x - center.x;\n      const dy = y - center.y;\n      if (dx * dx + dy * dy < Config.EDGE_RADIUS_SQU)\n      {\n        return edge;\n      }\n    }\n    return null;\n  }\n\n  getEdgeByEndPointAt(graph, x, y)\n  {\n    const end = {x: 0, y: 0};\n    //Search graph\n    for(const edge of graph.getEdges())\n    {\n      edge.getEndPoint(end);\n      const dx = x - end.x;\n      const dy = y - end.y;\n      if (dx * dx + dy * dy < Config.ENDPOINT_RADIUS_SQU)\n      {\n        return edge;\n      }\n    }\n    return null;\n  }\n\n  getSelectionBox()\n  {\n    return this.selectionBox;\n  }\n\n  getSelection(graph, forceUpdate=false)\n  {\n    if (forceUpdate)\n    {\n      const box = this.selectionBox;\n      const mx = Math.max(box.toX, box.fromX);\n      const my = Math.max(box.toY, box.fromY);\n      const lx = Math.min(box.toX, box.fromX);\n      const ly = Math.min(box.toY, box.fromY);\n      this.clearSelection();\n      getNodesWithin(graph, lx, ly, mx, my, this.targets);\n    }\n\n    return this.targets;\n  }\n\n  hasSelection()\n  {\n    return this.targets.length > 0;\n  }\n\n  clearSelection()\n  {\n    this.targets.length = 0;\n  }\n\n  isTargetInSelection(target)\n  {\n    return this.targets.includes(target || this.target);\n  }\n\n  isTarget(target)\n  {\n    return this.target == target;\n  }\n\n  beginSelection(graph, x, y)\n  {\n    const box = this.selectionBox;\n    box.fromX = box.toX = x;\n    box.fromY = box.toY = y;\n    this.clearSelection();\n\n    box.visible = true;\n  }\n\n  updateSelection(graph, x, y)\n  {\n    const box = this.selectionBox;\n    box.toX = x;\n    box.toY = y;\n    this.getSelection(graph, true);\n  }\n\n  endSelection(graph, x, y)\n  {\n    const box = this.selectionBox;\n    box.toX = x;\n    box.toY = y;\n    this.getSelection(graph, true);\n\n    box.visible = false;\n  }\n\n  isSelecting()\n  {\n    return this.selectionBox.visible;\n  }\n}\n\nfunction getNodesWithin(graph, x1, y1, x2, y2, dst)\n{\n  const fromX = Math.min(x1, x2);\n  const fromY = Math.min(y1, y2);\n  const toX = Math.max(x1, x2);\n  const toY = Math.max(y1, y2);\n\n  for(const node of graph.getNodes())\n  {\n    if (node.x >= fromX && node.x < toX &&\n        node.y >= fromY && node.y < toY)\n    {\n      dst.push(node);\n    }\n  }\n  return dst;\n}\n\nexport default GraphPicker;\n","import GraphNode from 'graph/GraphNode.js';\nimport Config from 'config.js';\n\nclass FSANode extends GraphNode\n{\n  constructor(id, x, y)\n  {\n    super(id, x, y);\n\n    this._accept = false;\n\n    //this is not saved to hash since it is an aesthetic option\n    this._custom = false;\n  }\n\n  setNodeAccept(value)\n  {\n    this._accept = value;\n  }\n\n  getNodeAccept()\n  {\n    return this._accept;\n  }\n\n  setNodeCustom(value)\n  {\n    this._custom = value;\n  }\n\n  getNodeCustom()\n  {\n    return this._custom;\n  }\n\n  //Override\n  getNodeSize()\n  {\n    return Config.NODE_RADIUS;\n  }\n\n  //Override\n  getHashString(usePosition=true)\n  {\n    return super.getHashString(usePosition) + \":\" + (this._accept ? \"1\" : \"0\");\n  }\n}\n\nexport default FSANode;\n","import GraphEdge from 'graph/GraphEdge.js';\n\nclass GraphCurvedEdge extends GraphEdge\n{\n  constructor(id, from, to=null)\n  {\n    super(id, from, null);\n\n    //radians = the angle in radians, where 0 is the normal of midpoint\n    //length = the distance from midpoint\n    this._quad = {\n      radians: 0,\n      length: 0,\n      _coords: {x: 0, y: 0}\n    };\n\n    //Make sure to format it correctly when creating...\n    this.changeDestinationNode(to);\n  }\n\n  setQuadratic(radians, length=undefined)\n  {\n    this._quad.radians = radians;\n    if (typeof length === 'number')\n    {\n      this._quad.length = length;\n    }\n    return this;\n  }\n\n  getQuadratic()\n  {\n    return this._quad;\n  }\n\n  isQuadratic()\n  {\n    return !this.isPlaceholder() && this._quad.length != 0;\n  }\n\n  setQuadraticByCoords(x, y)\n  {\n    const from = this._from;\n    const to = this._to;\n    const fromx = from.x;\n    const fromy = from.y;\n    const tox = to.x;\n    const toy = to.y;\n\n    let dx = tox - fromx;\n    let dy = toy - fromy;\n    const midpointx = fromx + dx / 2;\n    const midpointy = fromy + dy / 2;\n\n    //Remember: y-axis is flipped because canvas coord-space is -y => +y\n    //Therefore, dy needs to be flipped\n    const angleOffset = Math.atan2(-dy, dx);\n    dx = x - midpointx;\n    dy = y - midpointy;\n\n    const PI = Math.PI;\n    const PI2 = PI * 2;\n    const HALFPI = PI / 2;\n    //0 rad = to the right\n    //Also: angleOffset is the offset from midpoint angle, the orthogonal base vector\n    //This is because the from and to could be flipped, and\n    //therefore give a negative, or at least a reversed angle.\n    let radians = Math.atan2(dy, dx) + angleOffset;\n    let length = Math.sqrt(dx * dx + dy * dy);\n    if (length < 0) length = 0;\n\n    const outrad = radians - (-HALFPI);//-PI / 2 is outward\n    const inrad = radians - (HALFPI);//PI / 2 is inward\n    //TODO: Should be dependent on length\n    const maxdr = PI / 20;\n\n    if (Math.abs(length) < 8)\n    {\n      radians = 0;\n      length = 0;\n    }\n    else if (outrad < maxdr && outrad > -maxdr)\n    {\n      radians = -HALFPI;//-PI / 2 is outward\n    }\n    else if (-inrad < maxdr && -inrad > -maxdr)\n    {\n      radians = HALFPI;//PI / 2 is inward\n    }\n\n    this._quad.radians = radians;\n    this._quad.length = length;\n  }\n\n  getQuadraticAsCoords()\n  {\n    const from = this._from;\n    const to = this._to;\n    const dst = this._quad._coords;\n    if (from == null || to == null)\n    {\n      dst.x = 0;\n      dst.y = 0;\n    }\n    else\n    {\n      /*\n      //To mark dirty...\n      _capture: {\n        fx: 0, fy: 0,\n        tx: 0, ty: 0,\n        ql: 0, qr: 0\n      }\n      */\n      getDirectionalVector(from.x, from.y, to.x, to.y, this._quad.length, this._quad.radians, dst);\n    }\n    return dst;\n  }\n\n  getSelfLoopHeight()\n  {\n    return this._from.getNodeSize();\n  }\n\n  formatAsSelfLoop()\n  {\n    this.setQuadratic(-Math.PI / 2, this._from.getNodeSize() + this.getSelfLoopHeight());\n  }\n\n  formatAsPlaceholder(prevDest)\n  {\n    //Quad is re-used to determine edge angle for placeholder\n    //This can be used specifically for quad since regular quad is\n    //dependent on this._to != null, which placeholder assumes this._to == null.\n    //Also, quad.length is ignored, because the length should always be\n    //getPlaceholderLength(). This is resolved by getStartPoint(), etc.\n    if (prevDest)\n    {\n      const dx = this._from.x - prevDest.x;\n      const dy = this._from.y - prevDest.y;\n      const angle = -Math.atan2(dx, dy) - (Math.PI / 2);\n      this._quad.radians = angle;\n    }\n    else\n    {\n      this._quad.radians = 0;\n    }\n  }\n\n  //Override\n  changeDestinationNode(node)\n  {\n    const prevDest = this._to;\n\n    //Just to optimize this a little :)\n    if (prevDest === node) return;\n\n    super.changeDestinationNode(node);\n\n    if (this.isPlaceholder())\n    {\n      this.formatAsPlaceholder(prevDest);\n    }\n    else if (this.isSelfLoop())\n    {\n      this.formatAsSelfLoop();\n    }\n  }\n\n  //Override\n  getEdgeDirection()\n  {\n    let result = 0;\n    if (this.isQuadratic())\n    {\n      const coords = this.getQuadraticAsCoords();\n      result = Math.atan2(coords.y, coords.x) + Math.PI / 2;\n    }\n    else\n    {\n      result = super.getEdgeDirection();\n    }\n\n    return result;\n  }\n\n  //Override\n  getStartPoint(dst={x: 0, y: 0})\n  {\n    const from = this._from;\n    const to = this._to;\n\n    if (!from) throw new Error(\"Source of edge cannot be null.\");\n    if (!to)\n    {\n      //Make sure to use quad for placeholder direction (not magnitude)\n      const px = Math.cos(this._quad.radians);\n      const py = Math.sin(this._quad.radians);\n      const nodeSize = from.getNodeSize();\n      dst.x = from.x + px * nodeSize;\n      dst.y = from.y + py * nodeSize;\n      return dst;\n    }\n\n    //Check if edge is following something other than a node...then remain flat\n    if (!to.getNodeSize || !this.isQuadratic())\n    {\n      getDirectionalVector(from.x, from.y, to.x, to.y, from.getNodeSize(), 0, dst);\n      dst.x += from.x;\n      dst.y += from.y;\n      return dst;\n    }\n    else\n    {\n      getMidPoint(from.x, from.y, to.x, to.y, dst);\n      const qcoords = this.getQuadraticAsCoords();\n      const qx = dst.x + qcoords.x;\n      const qy = dst.y + qcoords.y;\n      getDirectionalVector(from.x, from.y, qx, qy, from.getNodeSize(), this.isSelfLoop() ? (Math.PI / 4) : 0, dst);\n      dst.x += from.x;\n      dst.y += from.y;\n      return dst;\n    }\n  }\n\n  //Override\n  getEndPoint(dst={x: 0, y: 0})\n  {\n    const from = this._from;\n    const to = this._to;\n\n    if (!from) throw new Error(\"Source of edge cannot be null.\");\n    if (!to)\n    {\n      //Make sure to use quadCoords for placeholder direction (not magnitude)\n      const px = Math.cos(this._quad.radians);\n      const py = Math.sin(this._quad.radians);\n      const placeholderLength = from.getNodeSize() + this.getPlaceholderLength();\n      dst.x = from.x + px * placeholderLength;\n      dst.y = from.y + py * placeholderLength;\n      return dst;\n    }\n\n    //Get end point for non-nodes...\n    if (!to.getNodeSize)\n    {\n      return to;\n    }\n    //Get end point for straight edges...\n    else if (!this.isQuadratic())\n    {\n      getDirectionalVector(to.x, to.y, from.x, from.y, to.getNodeSize(), 0, dst);\n      dst.x += to.x;\n      dst.y += to.y;\n      return dst;\n    }\n    //Get end point for quadratics...\n    else\n    {\n      getMidPoint(from.x, from.y, to.x, to.y, dst);\n      const qcoords = this.getQuadraticAsCoords();\n      const qx = dst.x + qcoords.x;\n      const qy = dst.y + qcoords.y;\n      getDirectionalVector(to.x, to.y, qx, qy, to.getNodeSize(), this.isSelfLoop() ? -(Math.PI / 4.0) : 0, dst);\n      dst.x += to.x;\n      dst.y += to.y;\n      return dst;\n    }\n  }\n\n  //Override\n  getCenterPoint(dst={x: 0, y: 0})\n  {\n    const from = this._from;\n    const to = this._to;\n\n    if (!from) throw new Error(\"Source of edge cannot be null.\");\n    if (!to)\n    {\n      //Make sure to use quad for placeholder direction (not magnitude)\n      const px = Math.cos(this._quad.radians);\n      const py = Math.sin(this._quad.radians);\n      const placeholderLength = from.getNodeSize() + this.getPlaceholderLength() / 2;\n      dst.x = from.x + px * placeholderLength;\n      dst.y = from.y + py * placeholderLength;\n      return dst;\n    }\n\n    getMidPoint(from.x, from.y, to.x, to.y, dst);\n\n    if (this.isQuadratic())\n    {\n      const qcoords = this.getQuadraticAsCoords();\n      dst.x += qcoords.x;\n      dst.y += qcoords.y;\n    }\n\n    return dst;\n  }\n\n  //Override\n  getHashString(usePosition=true)\n  {\n    if (usePosition)\n    {\n      return super.getHashString(usePosition) + \":\" + this._quad.radians + \",\" + this._quad.length;\n    }\n    else\n    {\n      return super.getHashString(usePosition);\n    }\n  }\n}\n\nfunction getDirectionalVector(x1, y1, x2, y2, dist, angleOffset=0, dst={x: 0, y: 0})\n{\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const angle = Math.atan2(dy, dx) + angleOffset;\n  dst.x = Math.cos(angle) * dist;\n  dst.y = Math.sin(angle) * dist;\n  return dst;\n}\n\nfunction getMidPoint(x1, y1, x2, y2, dst={x: 0, y: 0})\n{\n  dst.x = x1 + (x2 - x1) / 2;\n  dst.y = y1 + (y2 - y1) / 2;\n  return dst;\n}\n\nexport default GraphCurvedEdge;\n","import QuadraticEdge from 'graph/QuadraticEdge.js';\n\nexport const SYMBOL_SEPARATOR = ' ';\nexport const EMPTY_CHAR = '\\u03B5';\n\nclass FSAEdge extends QuadraticEdge\n{\n  constructor(id, from, to=null)\n  {\n    super(id, from, to);\n  }\n\n  //Override\n  setEdgeLabel(label)\n  {\n    if (typeof label === 'string')\n    {\n      super.setEdgeLabel(label);\n    }\n    else\n    {\n      super.setEdgeLabel(EMPTY_CHAR);\n    }\n  }\n\n  getEdgeSymbolsFromLabel()\n  {\n    return this.getEdgeLabel().split(SYMBOL_SEPARATOR);\n  }\n}\n\nexport default FSAEdge;\n","import AbstractInputController from 'modules/base/AbstractInputController.js';\nimport Config from 'config.js';\n\nimport GraphPicker from './GraphPicker.js';\nimport Node from 'modules/fsa/graph/FSANode.js';\nimport Edge from 'modules/fsa/graph/FSAEdge.js';\n\nclass InputController extends AbstractInputController\n{\n  constructor(module, inputAdapter)\n  {\n    super(module, inputAdapter);\n\n    this._picker = new GraphPicker();\n\n    this._graphController = null;\n\n    //Used to check if target needs to be updated for the hover effect\n    this.prevPointerX = 0;\n    this.prevPointerY = 0;\n\n    //Make sure this is always false when moving endpoints\n    this.isNewEdge = false;\n\n    //Used to change render to follow pointer when moving initial marker\n    this.ghostInitialMarker = null;\n\n    //Whether to destroy pointless edges\n    this.shouldDestroyPointlessEdges = Config.DEFAULT_SHOULD_DESTROY_POINTLESS_EDGE;\n\n    //Swap left to right clicks and vice versa on anything else but Macs\n    this._swapMouseScheme = true;//!navigator.platform.startsWith(\"Mac\");\n\n    //Used to determine whether the target should be destroyed because of trash mode\n    this._trashMode = false;\n  }\n\n  //Override\n  initialize(app)\n  {\n    super.initialize(app);\n\n    this._graphController = app.getGraphController();\n  }\n\n  //Override\n  destroy(app)\n  {\n    super.destroy(app);\n  }\n\n  //Override\n  update(app)\n  {\n    const graph = this._graphController.getGraph();\n    const picker = this._picker;\n    const x = this._inputAdapter.getPointerX();\n    const y = this._inputAdapter.getPointerY();\n\n    if (x != this.prevPointerX || y != this.prevPointerY)\n    {\n      this.prevPointerX = x;\n      this.prevPointerY = y;\n\n      //Update target\n      picker.updateTarget(graph, x, y);\n\n      //HACK: to make the cursor look like a pointer when targeting\n      if (picker.hasTarget())\n      {\n        document.body.style.cursor = \"pointer\";\n      }\n      else\n      {\n        document.body.style.cursor = \"auto\";\n      }\n    }\n  }\n\n  //Override\n  onPreInputEvent(pointer)\n  {\n    const inputController = this;\n    const graphController = this._graphController;\n\n    const graph = graphController.getGraph();\n    const picker = inputController.getPicker();\n    picker.updateTarget(graph, pointer.x, pointer.y);\n    picker.setInitialTarget(picker.target, picker.targetType);\n\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n    \n    if (picker.hasSelection())\n    {\n      //Unselect everything is clicked on something other than nodes...\n      if (targetType != \"node\" || !picker.isTargetInSelection(target))\n      {\n        picker.clearSelection();\n      }\n    }\n\n    //Disable all graph input when in step-by-step mode\n    if (graphController.tester.getStepByStepMode())\n    {\n      //Consume event!\n      return true;\n    }\n\n    return false;\n  }\n\n  //Override\n  onInputEvent(pointer)\n  {\n    const inputController = this;\n    const graphController = this._graphController;\n\n    const x = pointer.x;\n    const y = pointer.y;\n\n    const graph = graphController.getGraph();\n    const picker = inputController.getPicker();\n    picker.updateTarget(graph, x, y);\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    //If is in trash mode... capture all events!\n    if (inputController.isTrashMode())\n    {\n      //Click to delete node\n      if (targetType === 'node')\n      {\n        //So that the emitted 'delete' events can use this\n        graphController.prevX = target.x;\n        graphController.prevY = target.y;\n\n        //If there exists selected states, delete them all!\n        if (picker.hasSelection())\n        {\n          //Delete all selected nodes\n          graphController.deleteSelectedNodes(target);\n        }\n        else\n        {\n          //Delete a single node\n          graphController.deleteTargetNode(target);\n        }\n\n        return true;\n      }\n      else if (targetType === 'edge' || targetType === 'endpoint')\n      {\n        //Delete a single edge\n        graphController.deleteTargetEdge(target);\n        return true;\n      }\n\n      //Clicked on something you cannot delete\n      //return true;\n      return false;\n    }\n\n    //If not in Trash Mode, then events should pass through to here...\n    //Otherwise, ALL events are captured to prevent ALL default behavior.\n\n    //Makes sure that user cannot toggle state while in trash mode\n    if (targetType === 'node')\n    {\n      graphController.toggleNode(target);\n      return true;\n    }\n    //Edit label for selected edge\n    else if (targetType === 'edge')\n    {\n      graphController.openLabelEditor(target, x, y);\n      return true;\n    }\n\n    return false;\n  }\n\n  //Override\n  onAltInputEvent(pointer)\n  {\n    return this.onInputEvent(pointer);\n  }\n\n  //Override\n  onDblInputEvent(pointer)\n  {\n    const graphController = this._graphController;\n    const x = pointer.x;\n    const y = pointer.y;\n\n    if (!this.isTrashMode())\n    {\n      //Create state at position\n      graphController.createNode(x, y);\n      return true;\n    }\n    else\n    {\n      graphController.emit(\"tryCreateWhileTrash\");\n      return true;\n    }\n\n    return false;\n  }\n\n  //Override\n  onDragStart(pointer)\n  {\n    const inputController = this;\n    const graphController = this._graphController;\n\n    const graph = graphController.getGraph();\n    const picker = inputController.getPicker();\n    const x = pointer.x;\n    const y = pointer.y;\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    const viewport = inputController.getInputAdapter().getViewport();\n\n    //If is in move mode...\n    if (inputController.isMoveMode())\n    {\n      //Make sure it is not in trash mode\n      if (inputController.isTrashMode())\n      {\n        //inputController.setMoveMode(false, true);//Set to false\n\n        graphController.emit(\"tryCreateWhileTrash\");\n        return false;\n      }\n\n      //Make sure it is not in new edge mode\n      inputController.isNewEdge = false;\n\n      //Makes sure that placeholders are not quadratics!\n      if (targetType === 'edge' && target.isPlaceholder())\n      {\n        //inputController.setMoveMode(false, true);//Set to false\n\n        //Ignore drag event...\n        return false;\n      }\n      //Moving node (and selected nodes)\n      else if (targetType === 'node')\n      {\n        //target MUST be an instance of Node...\n        if (!(target instanceof Node))\n          throw new Error(\"Invalid target \" + target + \" for type \\'\" + targetType + \"\\'. Must be an instance of Node.\");\n\n        //Ready to move node(s)...\n        graphController.prevX = target.x;\n        graphController.prevY = target.y;\n        return true;\n      }\n      //Moving edge center point\n      else if (targetType === 'edge')\n      {\n        //target MUST be an instance of Edge...\n        if (!(target instanceof Edge))\n          throw new Error(\"Invalid target \" + target + \" for type \\'\" + targetType + \"\\'. Must be an instance of Edge.\");\n\n        //Makes sure that placeholders are not quadratics!\n        if (target.isPlaceholder())\n        {\n          //inputController.setMoveMode(false, true);//Set to false\n          return false;\n        }\n\n        //Save previous quadratics\n        const targetQuad = target.getQuadratic();\n        graphController.prevQuad.radians = targetQuad.radians;\n        graphController.prevQuad.length = targetQuad.length;\n\n        //Ready to move the edge vertex to pointer...\n        return true;\n      }\n      //Moving initial marker\n      else if (targetType === 'initial')\n      {\n        inputController.ghostInitialMarker = pointer;\n\n        //Ready to move the initial marker to another state...\n        return true;\n      }\n      //Moving nothing\n      else if (targetType === 'none')\n      {\n        //Reuse nodal prev pos for graph prev pos\n        graphController.prevX = x;\n        graphController.prevY = y;\n\n        //Ready to move the graph to pointer...\n        return true;\n      }\n    }\n    //If is NOT in move mode...\n    else\n    {\n      //If input dragged a node...\n      if (targetType === 'node')\n      {\n        if (!inputController.isTrashMode())\n        {\n          const edge = graph.createEdge(target, pointer);\n          edge.setEdgeLabel(Config.STR_TRANSITION_DEFAULT_LABEL);\n\n          //Redirect pointer to refer to the edge as the new target\n          picker.setInitialTarget(edge, \"endpoint\");\n          inputController.isNewEdge = true;\n\n          //Reset previous quad values for new proxy edge\n          const edgeQuad = edge.getQuadratic();\n          graphController.prevQuad.radians = edgeQuad.radians;\n          graphController.prevQuad.length = edgeQuad.length;\n\n          //Ready to move proxy edge to pointer...\n          //inputController.setMoveMode(true, true);\n          return true;\n        }\n        else\n        {\n          graphController.emit(\"tryCreateWhileTrash\");\n          return false;\n        }\n      }\n      else if (targetType == 'edge')\n      {\n        //Do nothing.\n        return false;\n      }\n      //If input dragged nothing...\n      else if (targetType === 'none')\n      {\n        //Begin selection box...\n        picker.beginSelection(graph, x, y);\n        return true;\n      }\n    }\n\n    //In either moving or not... moving endpoints\n    if (targetType === 'endpoint')\n    {\n      //target MUST be an instance of Edge...\n      if (!(target instanceof Edge))\n        throw new Error(\"Invalid target \" + target + \" for type \\'\" + targetType + \"\\'. Must be an instance of Edge.\");\n\n      const targetQuad = target.getQuadratic();\n      graphController.prevQuad.radians = targetQuad.radians;\n      graphController.prevQuad.length = targetQuad.length;\n\n      graphController.prevEdgeTo = target.getDestinationNode();\n      inputController.isNewEdge = inputController.isMoveMode() ? false : true;\n\n      //Ready to move the edge endpoint to pointer...\n      return true;\n    }\n\n    //All input should be handled\n    //throw new Error(\"Unknown target type \\'\" + targetType + \"\\'.\");\n\n    return false;\n  }\n\n  //Override\n  onDragMove(pointer)\n  {\n    const inputController = this;\n    const graphController = this._graphController;\n    const graph = graphController.getGraph();\n\n    const picker = inputController.getPicker();\n    const x = pointer.x;\n    const y = pointer.y;\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    //If is in move mode...\n    if (inputController.isMoveMode())\n    {\n      //Continue to move node(s)\n      if (targetType === 'node')\n      {\n        if (picker.hasSelection())\n        {\n          graphController.moveMultipleNodesTo(pointer, picker.getSelection(graph), x, y);\n        }\n        else\n        {\n          graphController.moveNodeTo(pointer, target, x, y);\n        }\n        return true;\n      }\n      //Continue to move edge vertex\n      else if (targetType === 'edge')\n      {\n        graphController.moveEdgeTo(pointer, target, x, y);\n        return true;\n      }\n      //Continue to move edge endpoint\n      else if (targetType === 'endpoint')\n      {\n        graphController.moveEndpointTo(pointer, target, x, y);\n        return true;\n      }\n      //Continue to move initial\n      else if (targetType === 'initial')\n      {\n        //Move initial marker to node or pointer\n        const dst = picker.getNodeAt(graph, x, y) || pointer;\n        inputController.ghostInitialMarker = dst;\n        return true;\n      }\n      //Continue to move graph\n      else if (targetType === 'none')\n      {\n        //Move graph\n        const dx = x - graphController.prevX;\n        const dy = y - graphController.prevY;\n        inputController.getInputAdapter().getViewport().addOffset(dx, dy, true);\n        return true;\n      }\n      else\n      {\n        //All move drag should be handled\n        throw new Error(\"Unknown target type \\'\" + targetType + \"\\'.\");\n      }\n    }\n    //If is NOT in move mode...\n    else\n    {\n      if (inputController.isNewEdge)\n      {\n        graphController.moveEndpointTo(pointer, target, x, y);\n        return true;\n      }\n\n      //If the selection box is active...\n      if (picker.isSelecting())\n      {\n        //Update the selection box\n        picker.updateSelection(graph, x, y);\n        return true;\n      }\n\n      //Otherwise, don't do anything. Cause even input drags will become move drags.\n    }\n  }\n\n  //Override\n  onDragStop(pointer)\n  {\n    const inputController = this;\n    const graphController = this._graphController;\n\n    const graph = graphController.getGraph();\n    const picker = inputController.getPicker();\n    const x = pointer.x;\n    const y = pointer.y;\n    picker.updateTarget(graph, x, y);\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    //If is in move mode...\n    if (inputController.isMoveMode() || inputController.isNewEdge)\n    {\n      //If stopped dragging a node...\n      if (targetType === 'node')\n      {\n        //Delete it if withing trash area...\n        if (inputController.isTrashMode())\n        {\n          //If there exists selected states, delete them all!\n          if (picker.hasSelection())\n          {\n            graphController.deleteSelectedNodes(target);\n          }\n          else\n          {\n            //Delete a single node\n            graphController.deleteTargetNode(target);\n          }\n\n          return true;\n        }\n        //If dragged to an empty space (not trash)\n        else\n        {\n          //Do nothing, since should have moved to position\n          if (picker.hasSelection())\n          {\n            const dx = x - graphController.prevX;\n            const dy = y - graphController.prevY;\n            graphController.emit(\"nodeMoveAll\", graph, picker.getSelection(graph), dx, dy);\n          }\n          else\n          {\n            graphController.emit(\"nodeMove\", graph, target, x, y, graphController.prevX, graphController.prevY);\n          }\n          return true;\n        }\n      }\n      //If stopped dragging a edge...\n      else if (targetType === 'edge')\n      {\n        //Delete it if withing trash area...\n        if (inputController.isTrashMode())\n        {\n          graphController.deleteTargetEdge(target);\n        }\n        else\n        {\n          //Do nothing, since should have moved to position\n          graphController.emit(\"edgeMove\", graph, target, target.getQuadratic(), graphController.prevQuad);\n        }\n        return true;\n      }\n      //If stopped dragging a endpoint...\n      else if (inputController.isNewEdge || targetType === 'endpoint')\n      {\n        //Delete it if withing trash area...\n        if (inputController.isTrashMode())\n        {\n          graphController.deleteTargetEdge(target);\n          return true;\n        }\n        //If hovering over a node...\n        else if (target.getDestinationNode() instanceof Node)\n        {\n          const result = graph.formatEdge(target);\n\n          //If a different edge is the result of the target...\n          if (result !== target)\n          {\n            //Allow the user to edit the merged labels\n            graphController.openLabelEditor(result, x, y, result.getEdgeLabel(), false);\n\n            //Delete the merged label\n            graph.deleteEdge(target);\n            return true;\n          }\n          //Open label editor if a new edge...\n          else\n          {\n            if (inputController.isNewEdge)\n            {\n              graphController.openLabelEditor(target, x, y, null, true, () => {\n                graphController.emit(\"userPostCreateEdge\", graph, target);\n              });\n            }\n            else\n            {\n              graphController.openLabelEditor(target, x, y);\n            }\n          }\n\n          if (inputController.isNewEdge)\n          {\n            //Must be after openLabelEditor() to allow the function to check it...\n            inputController.isNewEdge = false;\n\n            //Emit event\n            graphController.emit(\"userCreateEdge\", graph, target);\n          }\n          else if (graphController.prevEdgeTo !== null)\n          {\n            //Emit event\n            graphController.emit(\"edgeDestination\", graph, target, target.getDestinationNode(), graphController.prevEdgeTo, graphController.prevQuad);\n          }\n\n          return true;\n        }\n        //If hovering over anything else...\n        else\n        {\n          //Destroy any edge that no longer have a destination\n          if (inputController.shouldDestroyPointlessEdges)\n          {\n            if (!inputController.isNewEdge)\n            {\n              graphController.deleteTargetEdge(target);\n            }\n            else\n            {\n              graph.deleteEdge(target);\n            }\n            return true;\n          }\n          //Keep edges as placeholders (used in DFA's)\n          else\n          {\n            target.changeDestinationNode(null);\n\n            //Open label editor if default edge...\n            if (target.getEdgeLabel().length <= 0)\n            {\n              graphController.openLabelEditor(target, x, y);\n            }\n            return true;\n          }\n        }\n      }\n      else if (targetType === 'initial')\n      {\n        //If valid initial object to mark...\n        if (inputController.ghostInitialMarker instanceof Node)\n        {\n          const prevInitial = graph.getStartNode();\n\n          //Set the new object as the initial node\n          graph.setStartNode(inputController.ghostInitialMarker);\n\n          //Emit event\n          graphController.emit(\"nodeInitial\", graph, inputController.ghostInitialMarker, prevInitial);\n        }\n\n        //Reset ghost initial marker\n        inputController.ghostInitialMarker = null;\n        return true;\n      }\n      else if (targetType === 'none')\n      {\n        //Do nothing. It should already be moved.\n        return true;\n      }\n      else\n      {\n        //All move drag should be handled\n        throw new Error(\"Unknown target type \\'\" + targetType + \"\\'.\");\n      }\n    }\n    //If is NOT in move mode...\n    else\n    {\n      //If was trying to select...\n      if (picker.isSelecting())\n      {\n        //Stop selecting stuff, fool.\n        picker.endSelection(graph, x, y);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  //Override\n  onPostInputEvent(pointer)\n  {\n    const inputController = this;\n    const graphController = this._graphController;\n    const graph = graphController.getGraph();\n    const picker = inputController.getPicker();\n\n    picker.clearTarget();\n    picker.updateTarget(graph, pointer.x, pointer.y);\n  }\n\n  //Override\n  onZoomChange(pointer, zoomValue, prevValue)\n  {\n    return true;\n  }\n\n  setTrashMode(enabled)\n  {\n    this._trashMode = enabled;\n  }\n\n  isTrashMode()\n  {\n    return this._trashMode;\n  }\n\n  setInputScheme(shouldInputFirst)\n  {\n    this._swapMouseScheme = !shouldInputFirst;\n  }\n\n  getInputScheme()\n  {\n    return this._swapMouseScheme;\n  }\n\n  isMoveMode()\n  {\n    const result = this._inputAdapter.isAltInput();\n    return this._swapMouseScheme ? !result : result;\n  }\n\n  isDragging()\n  {\n    return this._inputAdapter.isDragging();\n  }\n\n  isActionMode(graphController)\n  {\n    return this._inputAdapter.isPointerActive() ?\n      //Is considered an input when NOT moving or when creating a new edge...\n      graphController.isNewEdge || !this.isMoveMode() :\n      //If not active, just show default input...\n      !this._swapMouseScheme;\n  }\n\n  getPicker()\n  {\n    return this._picker;\n  }\n}\n\nexport default InputController;\n","const ALLOW_AUTOMATIC_REGISTER = false;\n\nconst Eventable = {\n  __eventListeners: null,\n  mixin(targetClass)\n  {\n    const targetPrototype = targetClass.prototype;\n    Object.assign(targetPrototype, Eventable);\n    delete targetPrototype.mixin;\n  },\n\n  registerEvent(eventName)\n  {\n    if (!this.__eventListeners) this.__eventListeners = new Map();\n\n    if (!this.__eventListeners.has(eventName))\n    {\n      this.__eventListeners.set(eventName, []);\n    }\n    else\n    {\n      throw new Error(\"Already registered event \\'\" + eventName + \"\\'\");\n    }\n  },\n\n  unregisterEvent(eventName)\n  {\n    if (!this.__eventListeners) return;\n\n    if (this.__eventListeners.has(eventName))\n    {\n      this.__eventListeners.delete(eventName);\n    }\n    else\n    {\n      throw new Error(\"Unable to find event \\'\" + eventName + \"\\'\");\n    }\n  },\n\n  addEventListener(eventName, listener)\n  {\n    if (!this.__eventListeners) this.__eventListeners = new Map();\n\n    let listeners;\n    if (this.__eventListeners.has(eventName))\n    {\n      listeners = this.__eventListeners.get(eventName);\n    }\n    else if (ALLOW_AUTOMATIC_REGISTER)\n    {\n      listeners = [];\n      this.__eventListeners.set(eventName, listeners);\n    }\n    else\n    {\n      throw new Error(\"Unable to find event \\'\" + eventName + \"\\'\");\n    }\n\n    listeners.push(listener);\n  },\n\n  removeEventListener(eventName, listener)\n  {\n    if (!this.__eventListeners) return;\n\n    if (this.__eventListeners.has(eventName))\n    {\n      const listeners = this.__eventListeners.get(eventName);\n      let flag = false;\n      let i = listeners.length;\n      while(i--)\n      {\n        if (listeners[i] === listener)\n        {\n          listeners.splice(i, 1);\n          flag = true;\n        }\n      }\n\n      if (!flag)\n      {\n        throw new Error(\"Unable to find listener for event \\'\" + eventName + \"\\'\");\n      }\n    }\n    else\n    {\n      throw new Error(\"Unknown event \\'\" + eventName + \"\\'\");\n    }\n  },\n\n  clearEventListeners(eventName)\n  {\n    if (!this.__eventListeners) return;\n\n    if (this.__eventListeners.has(eventName))\n    {\n      const listeners = this.__eventListeners.get(eventName);\n      listeners.length = 0;\n    }\n    else if (ALLOW_AUTOMATIC_REGISTER)\n    {\n      listeners = [];\n      this.__eventListeners.set(eventName, listeners);\n    }\n    else\n    {\n      throw new Error(\"Unable to find event \\'\" + eventName + \"\\'\");\n    }\n  },\n\n  countEventListeners(eventName)\n  {\n    if (!this.__eventListeners) return 0;\n    return this.__eventListeners.has(eventName) ? this.__eventListeners.get(eventName).length : 0;\n  },\n\n  getEventListeners(eventName)\n  {\n    if (!this.__eventListeners) return null;\n    return this.__eventListeners.get(eventName);\n  },\n\n  on(eventName, listener)\n  {\n    this.addEventListener(eventName, listener);\n  },\n\n  once(eventName, listener)\n  {\n    const f = (...args) => {\n      try\n      {\n        listener.apply(null, args);\n      }\n      finally\n      {\n        this.removeEventListener(eventName, f);\n      }\n    };\n\n    this.addEventListener(eventName, f);\n  },\n\n  emit(eventName, ...args)\n  {\n    try\n    {\n      if (!this.__eventListeners) return;\n\n      let listeners;\n      if (!this.__eventListeners.has(eventName))\n      {\n        if (ALLOW_AUTOMATIC_REGISTER)\n        {\n          listeners = [];\n          this.__eventListeners.set(eventName, listeners);\n        }\n        else\n        {\n          throw new Error(\"Unable to find event \\'\" + eventName + \"\\'\");\n        }\n      }\n      else\n      {\n        listeners = this.__eventListeners.get(eventName);\n\n        let result = null;\n        let i = listeners.length;\n        while(i--)\n        {\n          try\n          {\n            result = listeners[i].apply(null, args);\n          }\n          catch(e)\n          {\n            console.error(e);\n          }\n\n          if (result === true) break;\n        }\n      }\n    }\n    finally\n    {\n      this.onEventProcessed(eventName, ...args);\n    }\n  },\n\n  onEventProcessed(eventName, ...args)\n  {\n    //Do nothing.\n  }\n};\n\nexport default Eventable;\n","\nfunction getReachableState(graph)\n{\n  let reachable = [];\n  let startNode = graph.getStartNode();\n  reachable.push(startNode);\n  for(let i = 0; i < reachable.length; i++)\n  {\n    for (const edge of graph.getEdges())\n    {\n      if(edge.from == reachable[i])\n      {\n        if(!reachable.includes(edge.to))\n        {\n          reachable.push(edge.to);\n        }\n      }\n    }\n  }\n  return reachable;\n}\n\nclass GraphLayout\n{\n  static applyLayout(graph, type=\"circle\")\n  {\n    if (type != \"circle\") throw new Error(\"Invalid layout type\");\n    //seperate node to reachable and unreachable\n    const reachableNode= getReachableState(graph);\n    function unreachable(node)\n    {\n      return !reachableNode.includes(node)\n    }\n    const unreachableNode = graph.getNodes().filter(unreachable)\n\n    //get num of nodes\n    const numOfReachable = reachableNode.length;\n    const numOfUnreachable = unreachableNode.length;\n    const numOfNode = graph.getNodes().length;\n    const maxNum = Math.max(numOfReachable, numOfUnreachable)\n    if(numOfNode == 0)\n    {\n      return;\n    }\n    //set radius\n    var radius;\n    if(numOfReachable < 10 && numOfUnreachable < 10){\n      radius = maxNum/4 * 50 + 10;\n    }\n    else{\n      radius = (maxNum/5) * 40 + 10;\n    }\n    /*var radius;\n    if(numOfNode < 10){\n      radius = numOfNode/4 * 50 + 10;\n    }\n    else{\n      radius = (numOfNode/5) * 40 + 10;\n    }*/\n\n    //set degree\n    const degree_re = 2* Math.PI/numOfReachable;\n    const degree_un = 2* Math.PI/numOfUnreachable;\n\n    let currentStep = 0\n    for(const node of reachableNode)\n    {\n      node.y = Math.sin(degree_re*currentStep + Math.PI)*radius;\n      node.x = Math.cos(degree_re*currentStep + Math.PI)*radius;\n      currentStep += 1\n    }\n    currentStep = 0\n    for(const node of unreachableNode)\n    {\n      node.y = Math.sin(degree_un*currentStep + Math.PI)*(radius + 100);\n      node.x = Math.cos(degree_un*currentStep + Math.PI)*(radius + 100);\n      currentStep += 1\n    }\n    /*for(const node of graph.getNodes())\n    {\n      node.y = Math.sin(degree*currentStep + Math.PI)*radius;\n      node.x = Math.cos(degree*currentStep + Math.PI)*radius;\n      currentStep += 1\n    }*/\n  }\n\n\n}\n\nexport default GraphLayout;\n","import NodalGraph from 'graph/NodalGraph.js';\nimport FSANode from './FSANode.js';\nimport FSAEdge, { SYMBOL_SEPARATOR } from './FSAEdge.js';\n\nconst PARALLEL_EDGE_HEIGHT = 10;\n\nclass FSAGraph extends NodalGraph\n{\n  constructor()\n  {\n    super();\n  }\n\n  //Override\n  createNode(x=0, y=0, id=null)\n  {\n    return this.addNode(new FSANode(id, x, y));\n  }\n\n  //Override\n  createEdge(from, to=null, id=null)\n  {\n    return this.addEdge(new FSAEdge(id, from, to));\n  }\n\n  setStartNode(node)\n  {\n    if (this._nodes.length <= 0) throw new Error(\"Cannot set start node to empty graph\");\n\n    //There is only one node, and that is already the start node\n    if (this._nodes.length === 1) return;\n\n    const i = this._nodes.indexOf(node);\n    if (i > 0)\n    {\n      //This does a swap; we could do a prepend but that's more costly...\n      const prev = this._nodes[0];\n      this._nodes[0] = node;\n      this._nodes[i] = prev;\n    }\n    else if (i < 0)\n    {\n      throw new Error(\"Cannot set start node for unknown node\");\n    }\n  }\n\n  getStartNode()\n  {\n    return this._nodes.length > 0 ? this._nodes[0] : null;\n  }\n\n  //This is more like addEdge() without adding it to the graph and just returns the result\n  //This should only be called once when completing an edge\n  formatEdge(edge)\n  {\n    const edgeSource = edge.getSourceNode();\n    const edgeDestination = edge.getDestinationNode();\n    const edgeLabel = edge.getEdgeSymbolsFromLabel();\n\n    //Look for an existing edge with similar from and to\n    for(const otherEdge of this._edges)\n    {\n      if (otherEdge === edge) continue;\n      if (otherEdge.getSourceNode() === edgeSource && otherEdge.getDestinationNode() === edgeDestination)\n      {\n        const otherSymbols = otherEdge.getEdgeSymbolsFromLabel();\n        if (edgeLabel.length > 0)\n        {\n          const result = otherSymbols.concat(edgeLabel);\n          otherEdge.setEdgeLabel(result.join(SYMBOL_SEPARATOR));\n        }\n\n        //Merged with newfound edge...\n        return otherEdge;\n      }\n    }\n\n    //Otherwise, format the current edge\n\n    if (!edge.isSelfLoop())\n    {\n      let flag = false;\n\n      //Bend away if there is another edge not bent with the same src/dst\n      const parallelEdgeHeight = PARALLEL_EDGE_HEIGHT;\n      const HALFPI = Math.PI / 2;\n      for(const otherEdge of this._edges)\n      {\n        if (otherEdge.isQuadratic() && Math.abs(otherEdge.getQuadratic().length) >= parallelEdgeHeight * 2) continue;\n        if ((otherEdge.getDestinationNode() === edgeSource && otherEdge.getSourceNode() === edgeDestination))\n        {\n          edge.setQuadratic(HALFPI, parallelEdgeHeight);\n          otherEdge.setQuadratic(HALFPI, parallelEdgeHeight);\n          flag = true;\n\n          //ASSUMES that there will only ever be 2 edges that are parallel...\n          break;\n        }\n      }\n\n      //Try to move the edge away from intersecting nodes...\n      if (!flag)\n      {\n        const maxNodeSize = Math.max(edgeSource.getNodeSize(), edgeDestination.getNodeSize());\n        const x1 = edgeSource.x;\n        const y1 = edgeSource.y;\n        const x2 = edgeDestination.x;\n        const y2 = edgeDestination.y;\n        const dist12sq = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\n        let vertical = false;\n        let m = 0;\n        let b = 0;\n\n        if(x1 > x2)\n        {\n          m = (y1-y2) / (x1-x2);\n          b = y2-m*x2;\n        }\n        else if (x1 < x2)\n        {\n          m = (y2-y1) / (x2-x1);\n          b = y1-m*x1;\n        }\n        else\n        {\n          vertical = true;\n        }\n\n        for(const node of this._nodes)\n        {\n          if(node === edgeSource || node === edgeDestination) continue;\n\n          const x0 = node.x;\n          const y0 = node.y;\n\n          const dist01sq = (x1-x0)*(x1-x0) + (y1-y0)*(y1-y0);\n          const dist02sq = (x2-x0)*(x2-x0) + (y2-y0)*(y2-y0);\n          if(dist01sq > dist12sq || dist02sq > dist12sq) continue;\n\n          let dist = 0;\n          if(vertical) {\n            dist = Math.abs(x1-x0);\n          } else {\n            dist = Math.abs(b+ m*x0 - y0) / Math.sqrt(1+m*m);\n          }\n\n          if(dist < node.getNodeSize())\n          {\n            flag = true;\n            break;\n          }\n        }\n\n        if (flag)\n        {\n          edge.setQuadratic(-Math.PI / 2, maxNodeSize + 10);\n        }\n      }\n    }\n\n    return edge;\n  }\n}\n\nexport default FSAGraph;\n","import AbstractGraphController from 'modules/base/AbstractGraphController.js';\n\nimport Config from 'config.js';\nimport Eventable from 'util/Eventable.js';\nimport GraphLayout from 'modules/fsa/graph/GraphLayout.js';\nimport FSAGraph from 'modules/fsa/graph/FSAGraph.js';\n\nclass GraphController extends AbstractGraphController\n{\n  constructor(module)\n  {\n    super(module, new FSAGraph());\n\n    this.inputController = null;\n    this.machineController = null;\n\n    this.labelEditor = null;\n    this.tester = null;\n\n    this.prevQuad = {\n      radians: 0, length: 0,\n      x: 0, y: 0\n    };\n    this.prevEdgeTo = null;\n    this.prevX = 0;\n    this.prevY = 0;\n\n    //The difference between controller events vs graph events is: controller has user-intent\n\n    //userCreateNode(graph, node) - When user creates a node\n    this.registerEvent(\"userCreateNode\");\n    this.registerEvent(\"userPreCreateNode\");//(graph, nextNodeID, x, y)\n    this.registerEvent(\"userPostCreateNode\");//(graph, node)\n\n    //userToggleNode(graph, node, prevAccept) - When user toggles the accept state\n    this.registerEvent(\"userToggleNode\");\n\n    //userDeleteNodes(graph, node, targetNodes, prevX, prevY) - When user deletes one or more nodes\n    this.registerEvent(\"userDeleteNodes\");\n    this.registerEvent(\"userPreDeleteNodes\");\n    this.registerEvent(\"userPostDeleteNodes\");\n\n    //userDeleteEdge(graph, edge, prevTo, prevQuad) - When user deletes an edge\n    this.registerEvent(\"userDeleteEdge\");\n    this.registerEvent(\"userPreDeleteEdge\");\n    this.registerEvent(\"userPostDeleteEdge\");\n\n    //userCreateEdge(graph, edge) - When user creates an edge, after naming it\n    this.registerEvent(\"userCreateEdge\");\n    //this.registerEvent(\"userPreCreateEdge\");\n    this.registerEvent(\"userPostCreateEdge\");\n\n    /*\n    //userMoveNodes(graph, nodes, dx, dy) - When user moves one or more nodes\n    this.registerEvent(\"userMoveNodes\");\n    //userMoveInitial(graph, node, prevNode) - When user moves the initial marker to another\n    this.registerEvent(\"userMoveInitial\");\n    //userPreCreateEdge(graph, edge) - When user is about to create an edge, before src\n    this.registerEvent(\"userPreCreateEdge\");\n    //userBeginEdge(graph, edge, src) - When user begins to create an edge, after src and before naming it\n    this.registerEvent(\"userBeginEdge\");\n    //userEndEdge(graph, edge, src, dst) - When user finishes creating an edge, after dst and before naming it (dst could be null for deletion)\n    this.registerEvent(\"userEndEdge\");\n    //userPostCreateEdge(graph, edge) - When user is finished creating an edge, after dst and after quad changes\n    this.registerEvent(\"userPostCreateEdge\");\n    //userMoveEdge(graph, edge, prevDest) - When user changes the dst of edge\n    this.registerEvent(\"userChangeEdge\");\n    //userBendEdge(graph, edge, prevQuad) - When user bends the edge\n    this.registerEvent(\"userBendEdge\");\n    //userLabelEdge(graph, edge, prevLabel) - When user re-labels the edge\n    this.registerEvent(\"userLabelEdge\");\n    */\n\n    //userRenameNode(graph, node, nextLabel, prevLabel, isPrevCustom) - When user sets the label of node\n    this.registerEvent(\"userRenameNode\");\n\n    //userChangeLayout(graph, prevLayout) - When user re-layouts the graph\n    this.registerEvent(\"userChangeLayout\");\n    this.registerEvent(\"userPreChangeLayout\");//before any changes\n    this.registerEvent(\"userPostChangeLayout\");//after all changes\n\n    //userImportGraph(graph) - When user imports a graph\n    this.registerEvent(\"userImportGraph\");\n    this.registerEvent(\"userPreImportGraph\");//before any changes\n    this.registerEvent(\"userPostImportGraph\");//after all changes\n\n    //nodeMove(targetNode, nextX, nextY, prevX, prevY)\n    this.registerEvent(\"nodeMove\");\n    //nodeMoveAll(targetNodes, dx, dy)\n    this.registerEvent(\"nodeMoveAll\");\n    //nodeInitial(nextInitial, prevInitial)\n    this.registerEvent(\"nodeInitial\");\n    //edgeDestination(targetEdge, nextDestination, prevDestination, prevQuad)\n    this.registerEvent(\"edgeDestination\");\n    //edgeMove(targetEdge, nextQuad, prevQuad)\n    this.registerEvent(\"edgeMove\");\n    //edgeLabel(targetEdge, nextLabel, prevLabel)\n    this.registerEvent(\"edgeLabel\");\n    //tryCreateWhileTrash()\n    this.registerEvent(\"tryCreateWhileTrash\");\n  }\n\n  initialize(app)\n  {\n    this.labelEditor = app.viewport.labelEditor;\n    this.tester = app.getCurrentModule().getTestingManager();\n\n    this.inputController = app.getInputController();\n    this.machineController = app.getMachineController();\n  }\n\n  destroy()\n  {\n  }\n\n  applyAutoLayout()\n  {\n    this.emit(\"userPreChangeLayout\", this.getGraph());\n    GraphLayout.applyLayout(this.getGraph());\n\n    this.emit(\"userChangeLayout\", this.getGraph());\n    this.emit(\"userPostChangeLayout\", this.getGraph());\n  }\n\n  renameNode(node, name)\n  {\n    const prev = node.getNodeLabel();\n    const isPrevCustom = node.getNodeCustom();\n\n    node.setNodeLabel(name);\n    node.setNodeCustom(true);\n\n    this.emit(\"userRenameNode\", this.getGraph(), node, name, prev, isPrevCustom);\n  }\n\n  createNode(x, y)\n  {\n    const newNodeLabel = this.machineController.getMachineBuilder().getLabeler().getNextDefaultNodeLabel();\n\n    if (typeof x === 'undefined') x = (Math.random() * Config.SPAWN_RADIUS * 2) - Config.SPAWN_RADIUS;\n    if (typeof y === 'undefined') y = (Math.random() * Config.SPAWN_RADIUS * 2) - Config.SPAWN_RADIUS;\n\n    this.emit(\"userPreCreateNode\", this.getGraph(), newNodeLabel, x, y);\n\n    const node = this.getGraph().createNode(x, y);\n    node.setNodeLabel(newNodeLabel);\n\n    this.emit(\"userCreateNode\", this.getGraph(), node);\n\n    this.emit(\"userPostCreateNode\", this.getGraph(), node);\n    return node;\n  }\n\n  toggleNode(node)\n  {\n    const prev = node.getNodeAccept();\n    const result = !prev;\n    //Toggle accept for selected node\n    node.setNodeAccept(result);\n\n    //Emit event\n    this.emit(\"userToggleNode\", this.getGraph(), node, prev);\n  }\n\n  deleteSelectedNodes(selectedNode)\n  {\n    const picker = this.inputController.getPicker();\n    const selection = picker.getSelection(this.getGraph()).slice();\n\n    this.emit(\"userPreDeleteNodes\", this.getGraph(), selectedNode, selection, this.prevX, this.prevY);\n\n    //Remove from graph\n    for(const node of selection)\n    {\n      this.getGraph().deleteNode(node);\n    }\n\n    //Remove from selection\n    picker.clearSelection();\n\n    //Emit event\n    this.emit(\"userDeleteNodes\", this.getGraph(), selectedNode, selection, this.prevX, this.prevY);\n    this.emit(\"userPostDeleteNodes\", this.getGraph(), selectedNode, selection, this.prevX, this.prevY);\n  }\n\n  deleteTargetNode(target)\n  {\n    this.emit(\"userPreDeleteNodes\", this.getGraph(), target, [target], this.prevX, this.prevY);\n\n    this.getGraph().deleteNode(target);\n\n    //Emit event\n    this.emit(\"userDeleteNodes\", this.getGraph(), target, [target], this.prevX, this.prevY);\n    this.emit(\"userPostDeleteNodes\", this.getGraph(), target, [target], this.prevX, this.prevY);\n  }\n\n  deleteTargetNodes(targets)\n  {\n    if (!targets || targets.length <= 0) return;\n\n    this.emit(\"userPreDeleteNodes\", this.getGraph(), targets[0], targets, this.prevX, this.prevY);\n\n    const graph = this.getGraph();\n    for(const node of targets)\n    {\n      graph.deleteNode(node);\n    }\n\n    //Emit event\n    this.emit(\"userDeleteNodes\", this.getGraph(), targets[0], targets, this.prevX, this.prevY);\n    this.emit(\"userPostDeleteNodes\", this.getGraph(), targets[0], targets, this.prevX, this.prevY);\n  }\n\n  deleteTargetEdge(target)\n  {\n    this.emit(\"userPreDeleteEdge\", this.getGraph(), target, this.prevEdgeTo, this.prevQuad);\n    this.getGraph().deleteEdge(target);\n\n    //Emit event\n    this.emit(\"userDeleteEdge\", this.getGraph(), target, this.prevEdgeTo, this.prevQuad);\n    this.emit(\"userPostDeleteEdge\", this.getGraph(), target, this.prevEdgeTo, this.prevQuad);\n  }\n\n  deleteTargetEdges(targets)\n  {\n    if (!targets || targets.length <= 0) return;\n\n    for(const target of targets)\n    {\n      this.deleteTargetEdge(target);\n    }\n  }\n\n  moveNodeTo(pointer, node, x, y)\n  {\n    for(const other of this.getGraph().getNodes())\n    {\n      //Update node collision\n      if (node === other) continue;\n\n      const dx = x - other.x;\n      const dy = y - other.y;\n      const angle = Math.atan2(dy, dx);\n\n      const diameter = (Config.NODE_RADIUS * 2);\n      const nextDX = other.x + (Math.cos(angle) * diameter) - x;\n      const nextDY = other.y + (Math.sin(angle) * diameter) - y;\n\n      if (dx * dx + dy * dy < Config.NODE_RADIUS_SQU * 4)\n      {\n        x += nextDX;\n        y += nextDY;\n      }\n    }\n\n    node.x = x;\n    node.y = y;\n  }\n\n  moveMultipleNodesTo(pointer, nodes, x, y)\n  {\n    //Moves all nodes by difference between initial position with passed-in x and y\n    const pos = pointer.getInputEventPosition();\n    const dx = x - pos.x;\n    const dy = y - pos.y;\n    for(const node of nodes)\n    {\n      node.x += dx;\n      node.y += dy;\n    }\n\n    //Updates initial position to passed-in x and y to maintain relative position\n    pointer.changeInputEventPosition(x, y);\n  }\n\n  moveEdgeTo(pointer, edge, x, y)\n  {\n    edge.setQuadraticByCoords(x, y);\n  }\n\n  moveEndpointTo(pointer, edge, x, y)\n  {\n    //Get ONLY node at x and y (cannot use hover target, since it is not ONLY nodes)\n    const picker = this.inputController.getPicker();\n    const dst = picker.getNodeAt(this.getGraph(), x, y) || pointer;\n\n    edge.changeDestinationNode(dst);\n\n    //If the cursor returns to the state after leaving it...\n    if (edge.isSelfLoop())\n    {\n      //Make it a self loop\n      const sourceNode = edge.getSourceNode();\n      const dx = sourceNode.x - x;\n      const dy = sourceNode.y - y;\n      const radians = Math.atan2(dy, dx) + Math.PI;\n      edge.setQuadratic(radians);\n    }\n    //Otherwise, maintain original curve\n    else\n    {\n      //TODO: This also causes self-loops to act weird when no longer a self loop\n      edge.setQuadratic(this.prevQuad.radians, this.prevQuad.length);\n    }\n  }\n\n  openLabelEditor(target, x, y, placeholder=null, replace=true, callback=null)\n  {\n    const prevLabel = placeholder || target.getEdgeLabel();\n    this.labelEditor.openEditor(target, placeholder, replace, () => {\n      const label = target.getEdgeLabel();\n      if (prevLabel.length > 0 && label != prevLabel)\n      {\n        this.emit(\"edgeLabel\", this.getGraph(), target, label, prevLabel);\n      }\n\n      if (callback)\n      {\n        callback();\n      }\n    });\n  }\n\n  focusOnNode(node)\n  {\n    //Center workspace at focused node; inverted due to graph-to-screen space\n    this.inputController.getInputAdapter().getViewport().setOffset(-node.x, -node.y);\n  }\n\n  focusOnEdge(edge)\n  {\n    //Center workspace at focused edge; inverted due to graph-to-screen space\n    const center = edge.getCenterPoint();\n    this.inputController.getInputAdapter().getViewport().setOffset(-center.x, -center.y);\n  }\n\n  focusOnNodes(nodes)\n  {\n    //Center workspace at the average of focused nodes; inverted due to graph-to-screen space\n    const length = nodes.length;\n    let ax = 0;\n    let ay = 0;\n    for(const node of nodes)\n    {\n      ax += node.x;\n      ay += node.y;\n    }\n    this.inputController.getInputAdapter().getViewport().setOffset(-ax / length, -ay / length);\n  }\n}\n//Mixin Eventable\nEventable.mixin(GraphController);\n\nfunction moveNodesOutOfEdges(target, graph)\n{\n\n  const x1 = target.getSourceNode().x;\n  const y1 = target.getSourceNode().y;\n  const x2 = target.getDestinationNode().x;\n  const y2 = target.getDestinationNode().y;\n  const dist12sq = (x2-x1)*(x2-x1) + (y2-y1)*(y2-y1);\n  let vertical = false;\n  let m = 0;\n  let b = 0;\n  if(x1 > x2) {\n    m = (y1-y2) / (x1-x2);\n    b = y2-m*x2;\n  } else if (x1 < x2) {\n    m = (y2-y1) / (x2-x1);\n    b = y1-m*x1;\n  } else {\n    vertical = true;\n  }\n\n  for(const node of graph.getNodes())\n  {\n    if(node === target.getSourceNode() || node === target.getDestinationNode()) continue;\n\n    const x0 = node.x;\n    const y0 = node.y;\n\n    const dist01sq = (x1-x0)*(x1-x0) + (y1-y0)*(y1-y0);\n    const dist02sq = (x2-x0)*(x2-x0) + (y2-y0)*(y2-y0);\n    if(dist01sq > dist12sq || dist02sq > dist12sq) continue;\n\n\n    let dist = 0;\n    let xint = 0;\n    let yint = 0;\n    let m0 = 0;\n    let horizontal = false;\n    if(vertical) {\n      dist = Math.abs(x1-x0);\n      xint = x1;\n      yint = y0;\n      m0 = 0;\n    } else {\n      dist = Math.abs(b+ m*x0 - y0) / Math.sqrt(1+m*m);\n      xint = (x0 + m*y0 - m*b) / (m*m + 1);\n      yint = m * xint + b;\n      if(m !== 0) {\n        m0 = 1 / m;\n      } else {\n        horizontal = true;\n      }\n    }\n\n    if(dist < Config.NODE_RADIUS) {\n      const toMove = Config.NODE_RADIUS - dist + 10;\n      const distx = x0 - xint;\n      const disty = y0 - yint;\n      let signx = -1;\n      let signy = -1;\n      if(distx > 0) signx = 1;\n      if(disty > 0) signy = 1;\n\n      if(horizontal) {\n        node.y = y0 + signy * toMove;\n      } else {\n        let toMovex = toMove / Math.sqrt(m0*m0 + 1);\n        let toMovey = Math.abs(m0) * toMovex;\n        node.x = x0 + signx * toMovex;\n        node.y = y0 + signy * toMovey;\n      }\n    }\n  }\n}\n\nexport default GraphController;\n","import DFA from 'machine/DFA.js';\nimport { EMPTY } from 'machine/Symbols.js';\n\nexport function convertToDFA(nfa, dst=null)\n{\n  const result = dst || new DFA();\n\n  const alphabet = nfa.getAlphabet();\n  const startState = nfa.getStartState();\n\n  //Make new DFA start state\n  let nextStates = nfa.doClosureTransition(startState);\n  const newStartState = newDFAStateFromNFA(result, nfa, nextStates);\n\n  //For every state from the NFA's powerset, add it to DFA with correct transitions\n  const powerSetStates = nfa.getPowerSet();\n  for(const powerSetState of powerSetStates) {\n      console.log(\"Adding to DFA: \" + getStateFromSet(powerSetState));\n      if(powerSetState.length != 0)\n        expandPowersetStateToDFA(powerSetState, nfa, result);\n  }\n\n  //Create trap state\n  const trapState = result.newState(\"{}\");\n  let flag = false;\n\n  //Check for the new alphabet...\n  const newAlphabet = result.getAlphabet();\n  for(const state of result.getStates())\n  {\n    for(const symbol of newAlphabet)\n    {\n      //If transition for this symbol does not exist...\n      if (!result.doTransition(state, symbol))\n      {\n        //Create it\n        result.newTransition(state, trapState, symbol);\n\n        if (state !== trapState) flag = true;\n      }\n    }\n  }\n\n  return result;\n}\n\n/* Inspired by expandNFAStateToDFA, it takes a powerSetState, which is a set\n * of NFA states from the powerset (e.g. [q1, q1]) and adds it to the DFA as a\n * single state (e.g. {q1, q2}) and adds its transitions\n */\nfunction expandPowersetStateToDFA(powerSetState, nfa, dfa) {\n    const result = [];\n    const alphabet = nfa.getAlphabet();\n    const state = getStateFromSet(powerSetState);\n\n    if(!dfa.hasState(state)) {\n        result.push(newDFAStateFromNFA(dfa, nfa, powerSetState));\n    }\n\n    let terminals = [];\n    let dfaState = null;\n\n    for(const symbol of alphabet)\n    {\n      //Get all closed reachable states...\n      for(const s of powerSetState)\n      {\n        nfa.doTerminalTransition(s, symbol, terminals);\n      }\n\n      //If has reachable states...\n      if (terminals.length > 0)\n      {\n        dfaState = getStateFromSet(terminals);\n\n        //Create state if it does not exist...\n        if (!dfa.hasState(dfaState))\n        {\n          dfaState = newDFAStateFromNFA(dfa, nfa, terminals);\n          result.push(dfaState);\n        }\n\n        //Create transition for reachable state\n        dfa.newTransition(state, dfaState, symbol);\n      }\n\n      //Reset list\n      terminals.length = 0;\n    }\n\n    return result;\n}\n\nfunction expandNFAStateToDFA(state, nfa, dfa)\n{\n  const result = [];\n  const alphabet = nfa.getAlphabet();\n\n  let terminals = [];\n  let nfaStates = null;\n  let dfaState = null;\n\n  for(const symbol of alphabet)\n  {\n    //Get all closed reachable states...\n    nfaStates = getSetFromState(state);\n    for(const s of nfaStates)\n    {\n      nfa.doTerminalTransition(s, symbol, terminals);\n    }\n\n    //If has reachable states...\n    if (terminals.length > 0)\n    {\n      dfaState = getStateFromSet(terminals);\n\n      //Create state if it does not exist...\n      if (!dfa.hasState(dfaState))\n      {\n        dfaState = newDFAStateFromNFA(dfa, nfa, terminals);\n        result.push(dfaState);\n      }\n\n      //Create transition for reachable state\n      dfa.newTransition(state, dfaState, symbol);\n    }\n\n    //Reset list\n    terminals.length = 0;\n  }\n\n  return result;\n}\n\nfunction newDFAStateFromNFA(dfa, nfa, nfaStates)\n{\n  const result = dfa.newState(getStateFromSet(nfaStates));\n\n  //If the NFA states contain a final, then DFA state should be final\n  for(const s of nfaStates)\n  {\n    if (nfa.isFinalState(s))\n    {\n      dfa.setFinalState(result);\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction getStateFromSet(nfaStates)\n{\n  nfaStates.sort();\n  return \"{\" + nfaStates.join(\",\") + \"}\";\n}\n\nfunction getSetFromState(dfaState)\n{\n  return dfaState.substring(1, dfaState.length - 1).split(\",\");\n}\n","import Eventable from 'util/Eventable.js';\n\nimport GraphLayout from 'modules/fsa/graph/GraphLayout.js';\nimport { convertToDFA } from 'machine/util/convertNFA.js';\nimport DFA from 'machine/DFA.js';\n\nclass MachineController\n{\n  constructor(module)\n  {\n    this._module = module;\n\n    this.machineName = null;\n\n    this.graphController = null;\n\n    //userChangeMachine(machineBuilder, nextMachineType, prevMachineType) - when user changes machine type\n    this.registerEvent(\"userChangeMachine\");\n    //userConvertMachine(machineBuilder, nextMachineType, prevMachineType) - when user converts machine type\n    this.registerEvent(\"userConvertMachine\");\n    this.registerEvent(\"userPreConvertMachine\");//Before changes\n    this.registerEvent(\"userPostConvertMachine\");//After all changes\n    //userRenameMachine(machineBuilder, nextMachineName, prevMachineName) - when machine name is changed\n    this.registerEvent(\"userRenameMachine\");\n    //userCreateSymbol(machineBuilder, symbol) - When user adds a custom symbol\n    this.registerEvent(\"userCreateSymbol\");\n    //userDeleteSymbol(machineBuilder, symbol, prevEdges) - When user delets a symbol (and affects the edges)\n    this.registerEvent(\"userDeleteSymbol\");\n    this.registerEvent(\"userPreDeleteSymbol\");//userPreDeleteSymbol(machineBuilder, symbol)\n    this.registerEvent(\"userPostDeleteSymbol\");\n    //userRenameSymbol(machineBuilder, symbol, prevSymbol, targetEdges) - When user renames a used symbol (and affects the edges)\n    this.registerEvent(\"userRenameSymbol\");\n    this.registerEvent(\"userPreRenameSymbol\");//userPreDeleteSymbol(machineBuilder, symbol, prevSymbol)\n    this.registerEvent(\"userPostRenameSymbol\");\n  }\n\n  setModule(module)\n  {\n    this._module = module;\n  }\n\n  getModule()\n  {\n    return this._module;\n  }\n\n  initialize(app)\n  {\n    this.graphController = app.getGraphController();\n  }\n\n  destroy()\n  {\n\n  }\n\n  getLabelFormatter()\n  {\n    return this._module.getLabelFormatter();\n  }\n\n  getMachineBuilder()\n  {\n    return this._module.getMachineBuilder();\n  }\n\n  getMachineType()\n  {\n    return this.getMachineBuilder().getMachineType();\n  }\n\n  setMachineType(machineType)\n  {\n    this.getMachineBuilder().setMachineType(machineType);\n  }\n\n  getMachineName()\n  {\n    return this.machineName || I18N.toString(\"file.untitled\");\n  }\n\n  setMachineName(machineName)\n  {\n    if (!machineName || machineName.length <= 0)\n    {\n      this.machineName = null;\n    }\n    else\n    {\n      this.machineName = machineName;\n    }\n\n    const value = this.getMachineName();\n    const element = document.getElementById('window-title');\n    const string = element.innerHTML;\n    const separator = string.indexOf('-');\n    if (separator !== -1)\n    {\n      element.innerHTML = value + \" - \" + string.substring(separator + 1).trim();\n    }\n    else\n    {\n      element.innerHTML = value + \" - \" + string;\n    }\n  }\n\n  renameMachine(machineName)\n  {\n    const prev = this.machineName;\n    this.setMachineName(machineName);\n\n    //Emit a user rename machine event\n    this.emit(\"userRenameMachine\", this.getMachineBuilder(), machineName, prev);\n  }\n\n  changeMachineTo(machineType)\n  {\n    const prev = this.getMachineBuilder().getMachineType();\n    if (prev != machineType)\n    {\n      this.setMachineType(machineType);\n\n      //Emit event\n      this.emit(\"userChangeMachine\", this.getMachineBuilder(), machineType, prev);\n    }\n  }\n\n  getFirstGraphNodeByLabel(graph, label)\n  {\n    for(const node of graph.getNodes())\n    {\n      if (node.getNodeLabel() == label)\n      {\n        return node;\n      }\n    }\n\n    return null;\n  }\n\n  setGraphToMachine(graph, machine)\n  {\n    graph.clear();\n\n    //Add all states\n    let node;\n    for(const state of machine.getStates())\n    {\n      node = graph.createNode(0, 0);\n      node.setNodeLabel(state);\n      if (machine.isFinalState(state))\n      {\n        node.setNodeAccept(true);\n      }\n    }\n\n    //Add all transitions\n    let edge, from, to, read, labels, flag;\n    for(let transition of machine.getTransitions())\n    {\n      from = this.getFirstGraphNodeByLabel(graph, transition[0]);\n      read = transition[1];\n      to = this.getFirstGraphNodeByLabel(graph, transition[2]);\n      edge = graph.createEdge(from, to);\n      edge.setEdgeLabel(read);\n      const formattedEdge = graph.formatEdge(edge);\n      if (edge != formattedEdge) graph.deleteEdge(edge);\n    }\n\n    //Set start state\n    const startState = machine.getStartState();\n    graph.setStartNode(this.getFirstGraphNodeByLabel(graph, startState));\n\n    //Auto layout graph\n    GraphLayout.applyLayout(graph);\n  }\n\n  convertMachineTo(machineType)\n  {\n    const currentMachineType = this.getMachineType();\n\n    //Already converted machine...\n    if (currentMachineType === machineType) return;\n\n    if (machineType == \"DFA\" && currentMachineType == \"NFA\")\n    {\n      this.emit(\"userPreConvertMachine\", this.getMachineBuilder(), machineType, currentMachineType);\n\n      const result = convertToDFA(this.getMachineBuilder().getMachine(), new DFA());\n      this.setGraphToMachine(this.graphController.getGraph(), result);\n      this.setMachineType(machineType);\n\n      this.emit(\"userConvertMachine\", this.getMachineBuilder(), machineType, currentMachineType);\n      this.emit(\"userPostConvertMachine\", this.getMachineBuilder(), machineType, currentMachineType);\n    }\n    else if (machineType == \"NFA\" && currentMachineType == \"DFA\")\n    {\n      this.changeMachineTo(machineType);\n    }\n    else\n    {\n      throw new Error(\"Conversion scheme between \\'\" + currentMachineType + \"\\' to \\'\" + machineType + \"\\' is not supported\");\n    }\n  }\n\n  getAlphabet()\n  {\n    return this.getMachineBuilder().getAlphabet();\n  }\n\n  createSymbol(symbol)\n  {\n    this.getMachineBuilder().addCustomSymbol(symbol);\n\n    this.emit(\"userCreateSymbol\", this.getMachineBuilder(), symbol);\n  }\n\n  deleteSymbol(symbol)\n  {\n    let edge = null;\n    let index = null;\n    let result = null;\n    const targets = [];\n\n    this.emit(\"userPreDeleteSymbol\", this.getMachineBuilder(), symbol);\n\n    const graph = this.graphController.getGraph();\n    for(let i = graph.getEdges().length - 1; i >= 0; --i)\n    {\n      edge = graph.getEdges()[i];\n      index = edge.getEdgeLabel().indexOf(symbol);\n      if (index >= 0)\n      {\n        result = edge.getEdgeLabel().substring(0, index) + edge.getEdgeLabel().substring(index + 1);\n        if (result.length > 0)\n        {\n          edge.setEdgeLabel(result);\n        }\n        else\n        {\n          edge.setEdgeLabel(\"\");\n          graph.deleteEdge(edge);\n        }\n        targets.push(edge);\n      }\n    }\n\n    if (targets.length <= 0)\n    {\n      this.getMachineBuilder().removeCustomSymbol(symbol);\n    }\n\n    this.emit(\"userDeleteSymbol\", this.getMachineBuilder(), symbol, targets);\n    this.emit(\"userPostDeleteSymbol\", this.getMachineBuilder(), symbol, targets);\n  }\n\n  renameSymbol(prevSymbol, nextSymbol)\n  {\n    let edge = null;\n    let result = null;\n    const targets = [];\n\n    this.emit(\"userPreRenameSymbol\", this.getMachineBuilder(), nextSymbol, prevSymbol);\n\n    const graph = this.graphController.getGraph();\n    const length = graph.getEdges().length;\n    for(let i = 0; i < length; ++i)\n    {\n      edge = graph.getEdges()[i];\n      let result = edge.getEdgeLabel().replace(prevSymbol, nextSymbol);\n      if (result != edge.getEdgeLabel())\n      {\n        targets.push(edge);\n      }\n      edge.setEdgeLabel(result);\n    }\n\n    if (targets.length <= 0)\n    {\n      this.getMachineBuilder().renameCustomSymbol(prevSymbol, nextSymbol);\n    }\n\n    this.emit(\"userRenameSymbol\", this.getMachineBuilder(), nextSymbol, prevSymbol, targets);\n    this.emit(\"userPostRenameSymbol\", this.getMachineBuilder(), nextSymbol, prevSymbol, targets);\n  }\n\n  getCustomSymbols()\n  {\n    return this.getMachineBuilder()._symbols;\n  }\n\n  isCustomSymbol(symbol)\n  {\n    return this.getMachineBuilder().isCustomSymbol(symbol);\n  }\n}\nEventable.mixin(MachineController);\n\nexport default MachineController;\n","import React from 'react';\n\nimport Config from 'config.js';\n\nclass NodeRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    //TODO: Refer to app.css for comparable colors\n    const node = this.props.node;\n    return <g className=\"graph-node-container\">\n      {/*Outer circle*/}\n      <circle className=\"graph-node\"\n        cx={node.x}\n        cy={node.y}\n        r={Config.NODE_RADIUS}\n\n        fill=\"#FEE781\"\n        stroke=\"#000000\"/>\n\n      {/*Inner circle*/}\n      {node.getNodeAccept() &&\n        <circle className=\"graph-node-inner\"\n          cx={node.x}\n          cy={node.y}\n          r={Config.NODE_RADIUS_INNER}\n          fill=\"none\"\n\n          stroke=\"#000000\"/>}\n\n      //Label\n      <text className=\"graph-node-label\"\n        x={node.x} y={node.y + 4}\n        pointerEvents=\"none\"\n        style={{\n          userSelect: \"none\",\n          fontSize: (1 - Math.min(Math.max(node.getNodeLabel().length - 2, 0) / 6, 0.5)) + \"em\"\n        }}\n        textAnchor=\"middle\">\n        {node.getNodeLabel()}\n      </text>\n    </g>;\n  }\n}\n\nexport default NodeRenderer;\n","import React from 'react';\n\nimport Config from 'config.js';\n\nclass EdgeRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    const SIXTH_PI = Math.PI / 6;\n\n    let arrowAngle = 0;\n    const edge = this.props.edge;\n    const start = edge.getStartPoint();\n    const end = edge.getEndPoint();\n    const center = edge.getCenterPoint();\n    const label = edge.getEdgeLabel();\n    const quad = edge.getQuadratic();\n    const quadCoords = edge.getQuadraticAsCoords();\n    const edgeDir = edge.getEdgeDirection();\n    const flipLabel = quadCoords.y > 0;\n\n    //Calculate curved lines...\n    let quadLine = null;\n    if (!edge.isQuadratic())\n    {\n      //Straight line\n      arrowAngle = Math.atan2(start.x - end.x, start.y - end.y) + Math.PI;\n      quadLine = \"L \" + end.x + \" \" + end.y;\n    }\n    else\n    {\n      //Quadratic curve\n      //center = (midpoint + the quadratic offset) + the quadratic offset\n      const cx = center.x + quadCoords.x;\n      const cy = center.y + quadCoords.y;\n      arrowAngle = Math.atan2(cx - end.x, cy - end.y) + Math.PI;\n      quadLine = \"Q \" + cx + \" \" + cy + \" \" + end.x + \" \" + end.y;\n    }\n\n    //Draw multiple labels\n    const labels = edge.getEdgeSymbolsFromLabel();\n    let dy = 0;\n\n    const cx = (center && center.x || 0);\n    const cy = (center && center.y || 0);\n\n    return <g className=\"graph-edge-container\">\n      //Draw lines\n      <path className=\"graph-edge\" id={\"edge:\" + edge.getGraphElementID()}\n        d={\n          \"M \" + start.x + \" \" + start.y + \" \" +\n          quadLine + \" \" +\n          \"M \" +\n            (end.x - (Config.ARROW_WIDTH * Math.sin(arrowAngle - SIXTH_PI))) + \" \" +\n            (end.y - (Config.ARROW_WIDTH * Math.cos(arrowAngle - SIXTH_PI))) + \" \" +\n          \"L \" + end.x + \" \" + end.y + \" \" +\n          \"L \" +\n            (end.x - (Config.ARROW_WIDTH * Math.sin(arrowAngle + SIXTH_PI))) + \" \" +\n            (end.y - (Config.ARROW_WIDTH * Math.cos(arrowAngle + SIXTH_PI)))}\n        fill=\"none\"\n\n        stroke=\"#000000\"/>\n\n      {/*Draw labels*/}\n      <g transform={\"translate(\" + (cx) + \",\" + (cy) + \") rotate(\" + (edgeDir * 180 / Math.PI) + \")\"}>\n      { labels.length > 0 && labels.map((str, i) => {\n          const yy = (i + 1) * -15;\n\n          //TODO: ctx.clearRect(xx - cx - 2, yy - 5, (cx * 2) + 4, 10);\n          return <text\n            key={str + \".\" + i}\n            className=\"graph-edge-label\"\n            transform={\"translate(0, \" + yy + \")\" + (flipLabel ? \" scale(-1, -1)\" : \"\")}\n            alignmentBaseline=\"central\"\n            pointerEvents=\"none\"\n            style={{userSelect: \"none\"}}\n            textAnchor=\"middle\">\n            {str}\n          </text>;\n      })}\n      </g>\n    </g>;\n  }\n}\n\nexport default EdgeRenderer;\n","import React from 'react';\n\nimport Node from 'modules/fsa/graph/FSANode.js';\n\nimport Config from 'config.js';\n\nclass InitialMarkerRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    const node = this.props.node;\n    //node.x + offset marker back to center if not a node (or is a pointer)\n    const x = node.x + (!(node instanceof Node) ? -Config.INITIAL_MARKER_OFFSET_X : 0);\n    const y = node.y;\n    const r = Config.NODE_RADIUS;\n    const d = r * 2;\n    return <g className=\"graph-initial-container\">\n      <path className=\"graph-initial\" d={\n        \"M\" + (x - r) + \" \" + (y) +\n        \" L\" + (x - d) + \" \" + (y - r) +\n        \" L\" + (x - d) + \" \" + (y + r) +\n        \" Z\"}\n        fill=\"none\"\n\n        stroke=\"#000000\"/>\n    </g>;\n  }\n}\n\nexport default InitialMarkerRenderer;\n","import React from 'react';\n\nimport NodeRenderer from './NodeRenderer.js';\nimport EdgeRenderer from './EdgeRenderer.js';\nimport InitialMarkerRenderer from './InitialMarkerRenderer.js';\n\nclass FSAGraphRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const graph = this.props.graph;\n    const inputController = this.props.inputController;\n    return <g>\n      {/* Nodes */}\n      {graph.getNodes().map((e, i) => <NodeRenderer key={e.getGraphElementID() || i} node={e}/>)}\n\n      {/* Edges */}\n      {graph.getEdges().map((e, i) => <EdgeRenderer key={e.getGraphElementID() || i} edge={e}/>)}\n\n      {/* Initial marker and ghost */}\n      { graph.getStartNode() && (inputController.ghostInitialMarker == null ?\n        <InitialMarkerRenderer node={graph.getStartNode()}/> :\n        <InitialMarkerRenderer node={inputController.ghostInitialMarker}/>) }\n    </g>;\n  }\n}\n\nexport default FSAGraphRenderer;\n","import React from 'react';\n\nimport Config from 'config.js';\n\nclass SelectionBoxRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const visible = this.props.visible;\n    const fromX = this.props.fromX || 0;\n    const fromY = this.props.fromY || 0;\n    const toX = this.props.toX || fromX + 1;\n    const toY = this.props.toY || fromY + 1;\n\n    const dx = toX - fromX;\n    const dy = toY - fromY;\n\n    return <g className=\"graph-selection-container\">\n    { visible &&\n      <rect className=\"graph-selection\"\n        x={dx < 0 ? toX : fromX}\n        y={dy < 0 ? toY : fromY}\n        width={dx < 0 ? -dx : dx}\n        height={dy < 0 ? -dy : dy}/> }\n    </g>;\n  }\n}\n\nexport default SelectionBoxRenderer;\n","import React from 'react';\nimport Config from 'config.js';\n\nconst HIGHLIGHT_RADIUS_OFFSET = 4;\nconst HIGHLIGHT_LINE_WIDTH = 3;\nconst HIGHLIGHT_LINE_ARRAY = [8, 6];\n\nclass HighlightRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    const target = this.props.target;\n    const type = this.props.type;\n\n    let x = 0;\n    let y = 0;\n    let r = Config.CURSOR_RADIUS;\n    switch(type)\n    {\n      case \"node\":\n        x = target.x || 0;\n        y = target.y || 0;\n        r = Config.NODE_RADIUS;\n        break;\n      case \"edge\":\n        const center = target.getCenterPoint();\n        x = center.x || 0;\n        y = center.y || 0;\n        r = Config.EDGE_RADIUS;\n        break;\n      case \"endpoint\":\n        const endpoint = target.getEndPoint();\n        x = endpoint.x || 0;\n        y = endpoint.y || 0;\n        r = Config.ENDPOINT_RADIUS;\n        break;\n      case \"initial\":\n        x = target.x + Config.INITIAL_MARKER_OFFSET_X || 0;\n        y = target.y || 0;\n        r = Config.EDGE_RADIUS;\n        break;\n    }\n\n    return <g className=\"graph-highlight-container\">\n      <circle className={\"graph-highlight \" + this.props.className}\n        cx={x} cy={y}\n        r={r + HIGHLIGHT_RADIUS_OFFSET}\n        strokeDashoffset={this.props.offset || 0}\n        strokeDasharray={HIGHLIGHT_LINE_ARRAY}\n        strokeWidth={HIGHLIGHT_LINE_WIDTH}\n        fill=\"none\"/>\n    </g>;\n  }\n}\n\nexport default HighlightRenderer;\n","import React from 'react';\n\nimport SelectionBoxRenderer from 'content/workspace/renderer/SelectionBoxRenderer.js';\nimport HighlightRenderer from 'content/workspace/renderer/HighlightRenderer.js';\n\nclass FSAGraphOverlayRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const app = this.props.app;\n\n    const currentModule = app.getCurrentModule();\n    const graphController = app.getGraphController();\n    const inputController = app.getInputController();\n    const machineController = app.getMachineController();\n    const tester = currentModule.getTestingManager();\n\n    const graph = graphController.getGraph();\n    const viewport = inputController.getInputAdapter().getViewport();\n    const machineBuilder = machineController.getMachineBuilder();\n    const picker = inputController.getPicker();\n    const selectionBox = picker.getSelectionBox();\n\n    return <g>\n      {/* Selected elements */}\n      { picker.hasSelection() &&\n        picker.getSelection(graph).map((e, i) =>\n          <HighlightRenderer key={e.getGraphElementID()} className={inputController.isTrashMode() ? \"highlight-error\" : \"highlight-select\"} target={e} type=\"node\"/>) }\n\n      {/* Selection box */}\n      <SelectionBoxRenderer visible={selectionBox.visible}\n        fromX={selectionBox.fromX} fromY={selectionBox.fromY}\n        toX={selectionBox.toX} toY={selectionBox.toY}/>\n\n      {/* Node warning targets */}\n      { machineController.getMachineBuilder().machineErrorChecker.warningNodes.map((e, i) =>\n        <HighlightRenderer key={e.getGraphElementID()} className=\"highlight-warning graph-gui\" target={e} type=\"node\" offset=\"6\"/>) }\n\n      {/* Edge warning targets */}\n      { machineController.getMachineBuilder().machineErrorChecker.warningEdges.map((e, i) =>\n        <HighlightRenderer key={e.getGraphElementID()} className=\"highlight-warning graph-gui\" target={e} type=\"edge\" offset=\"6\"/>) }\n\n      {/* Node error targets */}\n      { machineController.getMachineBuilder().machineErrorChecker.errorNodes.map((e, i) =>\n        <HighlightRenderer key={e.getGraphElementID()} className=\"highlight-error graph-gui\" target={e} type=\"node\" offset=\"6\"/>) }\n\n      {/* Edge error targets */}\n      { machineController.getMachineBuilder().machineErrorChecker.errorEdges.map((e, i) =>\n        <HighlightRenderer key={e.getGraphElementID()} className=\"highlight-error graph-gui\" target={e} type=\"edge\" offset=\"6\"/>) }\n\n      {/* Node test targets */}\n      { tester.testMode.targets.map((e, i) => {\n          return <HighlightRenderer key={e.getGraphElementID()} className=\"highlight-test graph-gui\" target={e} type=\"node\" offset=\"6\"/>;\n        }) }\n\n      {/* Hover markers */}\n      { picker.hasTarget() &&\n        !picker.isTargetInSelection() &&\n        <HighlightRenderer className={inputController.isTrashMode() ? \"highlight-error\" : \"highlight-select\"} target={picker.target} type={picker.targetType}/> }\n    </g>;\n  }\n}\n\nexport default FSAGraphOverlayRenderer;\n","import React from 'react';\nimport './TrashCan.css';\n\nimport Viewport from './Viewport.js';\n\nclass TrashCan extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.state = {\n      staticTrash: false\n    };\n  }\n\n  onTrashEnter(e)\n  {\n    if (this.state.staticTrash) return;\n    this.props.inputController.setTrashMode(true);\n\n    //Enable mode: dangerous\n    this.props.viewport.setState((prev, props) => {\n      return {mode: Viewport.DANGEROUS};\n    });\n  }\n\n  onTrashLeave(e)\n  {\n    if (this.state.staticTrash) return;\n    this.props.inputController.setTrashMode(false);\n\n    //Disable mode: dangerous\n    this.props.viewport.setState((prev, props) => {\n      return {mode: Viewport.NORMAL};\n    });\n  }\n\n  onTrashClick(e)\n  {\n    e.stopPropagation();\n    e.preventDefault();\n\n    this.setState((prev, props) => {\n      const result = !prev.staticTrash;\n      this.props.inputController.setTrashMode(result);\n\n      //Enable mode: dangerous\n      this.props.viewport.setState((prev, props) => {\n        return {mode: result ? Viewport.DANGEROUS : Viewport.NORMAL};\n      })\n\n      return {\n        staticTrash: result\n      };\n    });\n  }\n\n  render()\n  {\n    const inputController = this.props.inputController;\n    const inputAdapter = inputController.getInputAdapter();\n\n    return <svg id=\"trash-btn\"\n      className={(inputController.isTrashMode() ? \"danger \" : \"\") +\n        (inputAdapter.isUsingTouch() && inputAdapter.isDragging() ? \"hidden\" : \"\")}\n      width=\"24\" height=\"24\"\n      viewBox=\"0 0 24 24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      onMouseEnter={this.onTrashEnter.bind(this)}\n      onMouseLeave={this.onTrashLeave.bind(this)}\n      onClick={this.onTrashClick.bind(this)}>\n      <path d={\"M3 6v18h18v-18h-18zm5 14c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 \" +\n      \"1-1s1 .448 1 1v10zm5 0c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 \" +\n      \"1v10zm5 0c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 \" +\n      \"1v10zm4-18v2h-20v-2h5.711c.9 0 1.631-1.099 1.631-2h5.315c0 .901.73 2 1.631 2h5.712z\"}/>\n    </svg>;\n  }\n}\n\nexport default TrashCan;\n","import React from 'react';\n\nclass PlayIcon extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    return <svg className=\"play-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n      <path d=\"M8 5v14l11-7z\"/>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n    </svg>;\n  }\n}\n\nexport default PlayIcon;\n","import React from 'react';\n\nclass PauseIcon extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    return <svg className=\"pause-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n      <path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"/>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n    </svg>;\n  }\n}\n\nexport default PauseIcon;\n","import React from 'react';\n\nclass StopIcon extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    return <svg className=\"stop-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n      <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n      <path d=\"M6 6h12v12H6z\"/>\n    </svg>;\n  }\n}\n\nexport default StopIcon;\n","import React from 'react';\nimport './TestTray.css';\n\nimport IconButton from 'icons/IconButton.js';\nimport PlayIcon from 'icons/PlayIcon.js';\nimport PauseIcon from 'icons/PauseIcon.js';\nimport StopIcon from 'icons/StopIcon.js';\nimport UndoIcon from 'icons/UndoIcon.js';\nimport RedoIcon from 'icons/RedoIcon.js';\n\nconst MAX_STRING_PREV_LENGTH = 2;\nconst MAX_ELLIPSIS_COUNT = 3;\n\nclass TestTray extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    const graphController = this.props.graphController;\n    const tester = this.props.tester;\n    const testList = this.props.tester.inputList;\n    const testMode = this.props.tester.testMode;\n    const testInput = testList.getCurrentInput();\n    const testIndex = testMode.getCurrentTestStringIndex();\n\n    return <div className=\"test-tray-container\">\n      <div className=\"test-tray-input-string-container\">\n      {\n        testInput && testIndex >= 0 &&\n        testInput.value.split('').map((e, i) => {\n          const testOffset = testIndex - i;\n          if (testOffset > MAX_ELLIPSIS_COUNT + MAX_STRING_PREV_LENGTH) return;\n          if (testOffset > MAX_STRING_PREV_LENGTH)\n          {\n            return <span key={e + \".\" + i} className=\"test-tray-input-placeholder\">.</span>;\n          }\n          return <span key={e + \".\" + i}\n            className={\"test-tray-input-char\" +\n            (testIndex == i ? \" active\" : \"\")}>\n            {e}\n            </span>;\n        })\n      }\n      </div>\n      <div className=\"test-tray-control\">\n\n        <IconButton onClick={(e)=>{\n          testMode.onResume();\n        }} disabled={testMode.isRunning()}>\n          <PlayIcon/>\n        </IconButton>\n\n        <IconButton onClick = {(e)=>{\n          testMode.onPause();\n        }} disabled={!testMode.isRunning()}>\n          <PauseIcon/>\n        </IconButton>\n\n        <IconButton onClick = {(e)=>{\n          testMode.onPreviousStep();\n          /*if (testMode.targets.length > 0)\n          {\n            graphController.focusOnNodes(testMode.targets);\n          }*/\n        }} disabled={!testMode.hasPrevStep() || testMode.isSkipping()}>\n          <UndoIcon/>\n        </IconButton>\n\n        <IconButton onClick = {(e)=>{\n          testMode.onNextStep();\n          /*if (testMode.targets.length > 0)\n          {\n            graphController.focusOnNodes(testMode.targets);\n          }*/\n        }} disabled={!tester.testMode.hasNextStep() || testMode.isSkipping()}>\n          <RedoIcon/>\n        </IconButton>\n\n        <IconButton onClick={(e)=>{\n          tester.setStepByStepMode(false);\n        }}>\n          <StopIcon/>\n        </IconButton>\n\n        <div className=\"trash-placeholder\">{/*PLACEHOLDER for TRASH*/}</div>\n      </div>\n    </div>;\n  }\n}\n\nexport default TestTray;\n","import React from 'react';\n\nclass CreateIcon extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    return <svg className=\"create-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n      <path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"/>\n      <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n    </svg>;\n  }\n}\n\nexport default CreateIcon;\n","import React from 'react';\n\nclass MoveIcon extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    return <svg className=\"move-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n      <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n      <path d=\"M13,6V11H18V7.75L22.25,12L18,16.25V13H13V18H16.25L12,22.25L7.75,18H11V13H6V16.25L1.75,12L6,7.75V11H11V6H7.75L12,1.75L16.25,6H13Z\" />\n    </svg>;\n  }\n}\n\nexport default MoveIcon;\n","import React from 'react';\nimport './CursorMode.css';\n\nimport IconButton from 'icons/IconButton.js';\nimport CreateIcon from 'icons/CreateIcon.js';\nimport MoveIcon from 'icons/MoveIcon.js';\n\nclass CursorMode extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    const inputController = this.props.inputController;\n    const graphController = this.props.graphController;\n    const actionMode = inputController.isActionMode(graphController);\n\n    return <div id=\"cursor-btn\">\n      <IconButton id=\"action-mode\" className={actionMode ? \"active\" : \"\"}\n        onClick={() => inputController.setInputScheme(true)}\n        title={I18N.toString(\"cursor.actionmode\")}>\n        <CreateIcon/>\n      </IconButton>\n      <IconButton id=\"move-mode\" className={!actionMode ? \"active\" : \"\"}\n        onClick={() => inputController.setInputScheme(false)}\n        title={I18N.toString(\"cursor.movemode\")}>\n        <MoveIcon/>\n      </IconButton>\n    </div>;\n  }\n}\n\nexport default CursorMode;\n","import React from 'react';\n\nimport TrashCan from 'content/viewport/TrashCan.js';\nimport TestTray from 'content/viewport/TestTray.js';\nimport CursorMode from 'content/viewport/CursorMode.js';\n\nclass ViewportRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const viewport = this.props.viewport;\n    const app = this.props.app;\n    const inputController = app.getInputController();\n    const graphController = app.getGraphController();\n    const machineController = app.getMachineController();\n    const tester = app.getCurrentModule().getTestingManager();\n\n    return <span>\n    {\n      tester.getStepByStepMode() ?\n      <div className=\"anchor-bottom-left\" style={{width: \"100%\"}}>\n        <TestTray tester={tester} graphController={graphController}/>\n      </div>\n      :\n      <span>\n        <div className=\"anchor-bottom-left\" style={{width: \"100%\"}}>\n          <CursorMode inputController={inputController} graphController={graphController}/>\n        </div>\n        <div className=\"anchor-bottom-right\">\n          <TrashCan inputController={inputController} viewport={viewport}/>\n        </div>\n      </span>\n    }\n    </span>;\n  }\n}\nexport default ViewportRenderer;\n","import Config from 'config.js';\n\nclass MachineLabeler\n{\n  constructor(graph)\n  {\n    this.graph = graph;\n    this.prefix = Config.STR_STATE_LABEL;\n\n    //TODO: this is hooked into the controller in App.js\n    this.shouldAutoLabel = false;\n  }\n\n  sortDefaultNodeLabels()\n  {\n    const startNode = this.graph.getStartNode();\n    if (!startNode) return;\n    const isDefaultInitial = !startNode.getNodeCustom();\n\n    const defaultNodes = [];\n    const customLabels = [];\n    for(const node of this.graph.getNodes())\n    {\n      if (node.getNodeCustom())\n      {\n        customLabels.push(node.getNodeLabel());\n      }\n      else\n      {\n        defaultNodes.push(node);\n      }\n    }\n\n    let index = isDefaultInitial ? 0 : 1;\n    for(const node of defaultNodes)\n    {\n      let defaultName = null;\n      while(customLabels.includes(\n        defaultName = this.getDefaultNodeLabelByIndex(index++))) {}\n\n      node.setNodeLabel(defaultName);\n    }\n  }\n\n  getNextDefaultNodeLabel()\n  {\n    //if (!this.shouldAutoLabel) return this.prefix;\n\n    let nodeIndex = 0;\n    let result = this.getDefaultNodeLabelByIndex(nodeIndex);\n    while(!this.isUniqueNodeLabel(result))\n    {\n      ++nodeIndex;\n      result = this.getDefaultNodeLabelByIndex(nodeIndex);\n    }\n    return result;\n  }\n\n  getDefaultNodeLabelByIndex(index)\n  {\n    return this.prefix + (index);\n  }\n\n  isUniqueNodeLabel(newLabel)\n  {\n    for(const node of this.graph.getNodes())\n    {\n      if (node.getNodeLabel() == newLabel)\n      {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n\nexport default MachineLabeler;\n","import Config from 'config.js';\nimport MachineLabeler from './MachineLabeler.js';\n\nconst DEFAULT_AUTO_RENAME = true;\n\nclass MachineBuilder\n{\n  constructor(graph)\n  {\n    this.graph = graph;\n    this.graphController = null;\n\n    this.labeler = new MachineLabeler(graph);\n\n    this.onGraphNodeLabelChange = this.onGraphNodeLabelChange.bind(this);\n  }\n\n  initialize(app)\n  {\n    this.graphController = app.getGraphController();\n\n    this.setAutoRenameNodes(DEFAULT_AUTO_RENAME);\n  }\n\n  destroy()\n  {\n\n  }\n\n  onGraphNodeLabelChange(graph, node, targetNodes, prevX, prevY)\n  {\n    this.labeler.sortDefaultNodeLabels();\n  }\n\n  setAutoRenameNodes(enable)\n  {\n    const prev = this.labeler.shouldAutoLabel;\n    this.labeler.shouldAutoLabel = enable;\n    if (prev != enable && enable)\n    {\n      this.graphController.on(\"userDeleteNodes\", this.onGraphNodeLabelChange);\n    }\n    else\n    {\n      this.graphController.removeEventListener(\"userDeleteNodes\", this.onGraphNodeLabelChange);\n    }\n  }\n\n  shouldAutoRenameNodes()\n  {\n    return this.labeler.shouldAutoLabel;\n  }\n\n  getLabeler()\n  {\n    return this.labeler;\n  }\n}\n\nexport default MachineBuilder;\n","import React from 'react';\n\nclass StateUnreachableWarningMessage extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.targetIndex = 0;\n    this.targetLabel = \"\";\n    const targets = props.message.value;\n    for(const target of targets)\n    {\n      if (this.targetLabel.length > 0)\n      {\n        this.targetLabel += \", \";\n      }\n      this.targetLabel += target.getNodeLabel();\n    }\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e)\n  {\n    const graphController = this.props.graphController;\n    const machineController = this.props.machineController;\n    const buttonValue = e.target.value;\n    const message = this.props.message;\n    switch(buttonValue)\n    {\n      case \"locate\":\n      {\n        //Locate the target node\n        const target = message.value[this.targetIndex++];\n        if (this.targetIndex >= message.value.length)\n        {\n          this.targetIndex = 0;\n        }\n\n        //Move pointer to target\n        graphController.focusOnNode(target);\n      }\n      break;\n      case \"deleteall\":\n      {\n        const targets = message.value;\n        //Delete all target nodes\n        graphController.deleteTargetNodes(targets);\n\n        //Sort the nodes after deleting if enabled...\n        machineController.getMachineBuilder().labeler.sortDefaultNodeLabels();\n\n        //Exit the message\n        message.close();\n      }\n      break;\n      default:\n        throw new Error(\"Unknown button value for message\");\n    }\n  }\n\n  //Override\n  render()\n  {\n    return <div>\n      <p>{I18N.toString(\"message.warning.unreachable\") + \": \" + this.targetLabel}</p>\n      <button value=\"locate\" onClick={this.onClick}>{I18N.toString(\"message.action.locate\")}</button>\n      <button value=\"deleteall\" onClick={this.onClick}>{I18N.toString(\"message.action.deleteall\")}</button>\n    </div>;\n  }\n}\n\nexport default StateUnreachableWarningMessage;\n","import React from 'react';\n\nclass StateMissingTransitionErrorMessage extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.targetIndex = 0;\n    this.targetLabel = \"\";\n    const targets = props.message.value.targets;\n    for(const target of targets)\n    {\n      if (this.targetLabel.length > 0)\n      {\n        this.targetLabel += \", \";\n      }\n      this.targetLabel += target.getNodeLabel();\n    }\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e)\n  {\n    const graphController = this.props.graphController;\n    const machineController = this.props.machineController;\n    const buttonValue = e.target.value;\n    const message = this.props.message;\n    switch(buttonValue)\n    {\n      case \"locate\":\n      {\n        const targets = message.value.targets;\n        const targetLength = targets.length;\n        if (targetLength > 0 && this.targetIndex < targetLength)\n        {\n          //Locate the target edge\n          const target = targets[this.targetIndex++];\n          if (this.targetIndex >= targetLength) this.targetIndex = 0;\n\n          //Move pointer to target\n          graphController.focusOnNode(target);\n        }\n      }\n      break;\n      default:\n        throw new Error(\"Unknown button value for message\");\n    }\n  }\n\n  //Override\n  render()\n  {\n    return <div>\n      <p>{I18N.toString(\"message.error.missing\") + \": \" + this.targetLabel}</p>\n      <button value=\"locate\" onClick={this.onClick}>{I18N.toString(\"message.action.locate\")}</button>\n    </div>;\n  }\n}\n\nexport default StateMissingTransitionErrorMessage;\n","import React from 'react';\n\nimport { ARROW } from 'machine/Symbols.js';\n\nclass TransitionErrorMessage extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.targetIndex = 0;\n    this.targetLabel = \"\";\n    const targets = props.message.value.targets;\n    for(const target of targets)\n    {\n      if (this.targetLabel.length > 0)\n      {\n        this.targetLabel += \", \";\n      }\n      this.targetLabel += \"(\" + target.getSourceNode().getNodeLabel() + \", \" + (target.getDestinationNode() ? target.getDestinationNode().getNodeLabel() : \"null\") + \") \" + ARROW + \" \" + target.getEdgeLabel();\n    }\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e)\n  {\n    const graphController = this.props.graphController;\n    const machineController = this.props.machineController;\n    const buttonValue = e.target.value;\n    const message = this.props.message;\n    switch(buttonValue)\n    {\n      case \"locate\":\n      {\n        const targets = message.value.targets;\n        const targetLength = targets.length;\n        if (targetLength > 0 && this.targetIndex < targetLength)\n        {\n          //Locate the target edge\n          const target = targets[this.targetIndex++];\n          if (this.targetIndex >= targetLength) this.targetIndex = 0;\n\n          //Move pointer to target\n          graphController.focusOnEdge(target);\n        }\n      }\n      break;\n      case \"deleteall\":\n      {\n        const targets = message.value.targets;\n        //Delete all target edges\n        graphController.deleteTargetEdges(targets);\n\n        //Exit the message\n        message.close();\n      }\n      break;\n      default:\n        throw new Error(\"Unknown button value for message\");\n    }\n  }\n\n  //Override\n  render()\n  {\n    return <div>\n      <p>{this.props.message.value.text + \": \" + this.targetLabel}</p>\n      <button value=\"locate\" onClick={this.onClick}>{I18N.toString(\"message.action.locate\")}</button>\n      <button value=\"deleteall\" onClick={this.onClick}>{I18N.toString(\"message.action.deleteall\")}</button>\n    </div>;\n  }\n}\n\nexport default TransitionErrorMessage;\n","import Config from 'config.js';\nimport { EMPTY } from 'machine/Symbols.js';\n\nimport Notifications from 'system/notification/Notifications.js';\nimport StateUnreachableWarningMessage from 'modules/fsa/notifications/StateUnreachableWarningMessage.js';\nimport StateMissingTransitionErrorMessage from 'modules/fsa/notifications/StateMissingTransitionErrorMessage.js';\nimport TransitionErrorMessage from 'modules/fsa/notifications/TransitionErrorMessage.js';\nimport StateErrorMessage from 'modules/fsa/notifications/StateErrorMessage.js';\n\nclass DFAErrorChecker\n{\n  constructor(machineBuilder, graph)\n  {\n    this.machineBuilder = machineBuilder;\n    this.graph = graph;\n\n    this.errorNodes = [];\n    this.errorEdges = [];\n    this.warningNodes = [];\n    this.warningEdges = [];\n  }\n\n  clear()\n  {\n    this.errorNodes.length = 0;\n    this.errorEdges.length = 0;\n    this.warningNodes.length = 0;\n    this.warningEdges.length = 0;\n  }\n\n  checkErrors(shouldNotifyErrors=false, graphController=null, machineController=null)\n  {\n    //This should only run for \"DFA\" machine types...\n    if (this.machineBuilder.getMachineType() != \"DFA\")\n    {\n      throw new Error(\"Invalid machine type to check for DFA errors\");\n    }\n\n    const machine = this.machineBuilder.getMachine();\n    const graph = this.graph;\n    const alphabet = machine.getAlphabet();\n    const errorNodes = this.errorNodes;\n    const errorEdges = this.errorEdges;\n    const warnNodes = this.warningNodes;\n    const warnEdges = this.warningEdges;\n    this.clear();\n\n    let nodeTransitionMap = new Map();\n    let startNode = graph.getStartNode();\n\n    const placeholderEdges = [];\n    const emptyEdges = [];\n    const dupeEdges = [];\n    for(const edge of graph.getEdges())\n    {\n      //check incomplete edges\n      if (edge.isPlaceholder())\n      {\n        //Update cached error targets\n        placeholderEdges.push(edge);\n        if (errorEdges.indexOf(edge) == -1) errorEdges.push(edge);\n      }\n      else\n      {\n        const from = edge.getSourceNode();\n        const to = edge.getDestinationNode();\n        const labels = edge.getEdgeSymbolsFromLabel();\n\n        for(const label of labels)\n        {\n          //check for empty transitions\n          if(label == EMPTY)\n          {\n            //Update cached error targets\n            emptyEdges.push(edge);\n            if (errorEdges.indexOf(edge) == -1) errorEdges.push(edge);\n          }\n          else\n          {\n            if(!nodeTransitionMap.has(from))\n            {\n              nodeTransitionMap.set(from, [label]);\n            }\n            else\n            {\n              //check for duplicate transitions\n              const currentAlphabet = nodeTransitionMap.get(from);\n              if(currentAlphabet.includes(label))\n              {\n                //Update cached error targets\n                dupeEdges.push(edge);\n                if (errorEdges.indexOf(edge) == -1) errorEdges.push(edge);\n              }\n              else\n              {\n                currentAlphabet.push(label);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    const missingNodes = [];\n    //Check for missing transitions\n    for(const node of graph.getNodes())\n    {\n      const nodeTransitions = nodeTransitionMap.get(node);\n      if (!nodeTransitions && alphabet.length != 0 ||\n        nodeTransitions && nodeTransitions.length < alphabet.length)\n      {\n        //Get the required missing symbols\n        /*\n        let array;\n        if (nodeTransitions)\n        {\n          array = [];\n          for(const symbol of alphabet)\n          {\n            if (!nodeTransitions.includes(symbol))\n            {\n              array.push(symbol);\n            }\n          }\n        }\n        else\n        {\n          array = alphabet.slice();\n        }\n        */\n\n        //Update cached error targets\n        missingNodes.push(node);\n        if (errorNodes.indexOf(node) == -1) errorNodes.push(node);\n      }\n    }\n\n    const result = !(errorNodes.length == 0 && errorEdges.length == 0 &&\n      warnNodes.length == 0 && warnEdges.length == 0);\n\n    //Callbacks for all collected errors\n    if (shouldNotifyErrors)\n    {\n      const messageTag = Config.MACHINE_ERRORS_MESSAGE_TAG;\n      //Clear the existing messages\n      Notifications.clearMessages(messageTag);\n\n      //No errors!\n      if (!result)\n      {\n        Notifications.addMessage(I18N.toString(\"message.error.none\"), \"success\", messageTag, null, null, false);\n      }\n      //There are some errors/warnings...\n      else\n      {\n        const props = {graphController: graphController, machineController: machineController};\n        //Add new warning messages\n        const unReachedNodes = this.getUnreachableNodes();\n        if (unReachedNodes.length > 0)\n        {\n          Notifications.addMessage(unReachedNodes,\n            \"warning\", messageTag, StateUnreachableWarningMessage, props, false);\n        }\n\n        //Add new error messages\n        if (placeholderEdges.length > 0)\n        {\n          Notifications.addMessage({text: I18N.toString(\"message.error.incomplete\"), targets: placeholderEdges},\n            \"error\", messageTag, TransitionErrorMessage, props, false);\n        }\n        if (emptyEdges.length > 0)\n        {\n          Notifications.addMessage({text: I18N.toString(\"message.error.empty\"), targets: emptyEdges},\n            \"error\", messageTag, TransitionErrorMessage, props, false);\n        }\n        if (dupeEdges.length > 0)\n        {\n          Notifications.addMessage({text: I18N.toString(\"message.error.dupe\"), targets: dupeEdges},\n            \"error\", messageTag, TransitionErrorMessage, props, false);\n        }\n        if (missingNodes.length > 0)\n        {\n          Notifications.addMessage({targets: missingNodes},\n            \"error\", messageTag, StateMissingTransitionErrorMessage, props, false);\n        }\n      }\n    }\n\n    return result;\n  }\n\n  getUnreachableNodes() {\n    const graph = this.graph;\n    const machine = this.machineBuilder.getMachine();\n\n    const states = graph.getNodes().slice();\n    const nextStates = [];\n    nextStates.push(states[0]);\n    states.splice(0, 1);\n\n    while(nextStates.length > 0)\n    {\n      const state = nextStates.pop();\n      const i = states.indexOf(state);\n      if (i >= 0)\n      {\n        states.splice(i, 1);\n        const result = machine.getOutgoingTransitions(state);\n        for(const state of result)\n        {\n          nextStates.push(state);\n        }\n      }\n    }\n\n    return states;\n  }\n}\n\nexport default DFAErrorChecker;\n","import Config from 'config.js';\nimport { EMPTY } from 'machine/Symbols.js';\n\nimport Notifications from 'system/notification/Notifications.js';\nimport StateUnreachableWarningMessage from 'modules/fsa/notifications/StateUnreachableWarningMessage.js';\nimport TransitionErrorMessage from 'modules/fsa/notifications/TransitionErrorMessage.js';\n\nclass NFAErrorChecker\n{\n  constructor(machineBuilder, graph)\n  {\n    this.machineBuilder = machineBuilder;\n    this.graph = graph;\n\n    this.errorNodes = [];\n    this.errorEdges = [];\n    this.warningNodes = [];\n    this.warningEdges = [];\n  }\n\n  clear()\n  {\n    this.errorNodes.length = 0;\n    this.errorEdges.length = 0;\n    this.warningNodes.length = 0;\n    this.warningEdges.length = 0;\n  }\n\n  checkErrors(shouldNotifyErrors=false, graphController=null, machineController=null)\n  {\n    const machine = this.machineBuilder.getMachine();\n    const graph = this.graph;\n    const alphabet = machine.getAlphabet();\n    const errorNodes = this.errorNodes;\n    const errorEdges = this.errorEdges;\n    const warnNodes = this.warningNodes;\n    const warnEdges = this.warningEdges;\n    this.clear();\n\n    let nodeTransitionMap = new Map();\n    let unReachedNode = graph.getNodes().slice();\n    let startNode = graph.getStartNode();\n    unReachedNode.splice(unReachedNode.indexOf(startNode),1);\n\n    const placeholderEdges = [];\n    const emptyEdges = [];\n    const dupeEdges = [];\n    for(const edge of graph.getEdges())\n    {\n      //check incomplete edges\n      if (edge.isPlaceholder())\n      {\n        //Update cached error targets\n        placeholderEdges.push(edge);\n        if (errorEdges.indexOf(edge) == -1) errorEdges.push(edge);\n      }\n      else\n      {\n        const from = edge.getSourceNode();\n        const to = edge.getDestinationNode();\n        const labels = edge.getEdgeSymbolsFromLabel();\n\n        for(const label of labels)\n        {\n          //remove to from unReachedNode list\n          if (unReachedNode.includes(to)) unReachedNode.splice(unReachedNode.indexOf(to),1);\n        }\n      }\n    }\n\n    //check disconnect states\n    for (const node of unReachedNode)\n    {\n      if (warnNodes.indexOf(node) == -1) warnNodes.push(node);\n    }\n\n    const result = !(errorNodes.length == 0 && errorEdges.length == 0 &&\n      warnNodes.length == 0 && warnEdges.length == 0);\n\n    //Callbacks for all collected errors\n    const messageTag = Config.MACHINE_ERRORS_MESSAGE_TAG;\n    //Clear the existing messages\n    Notifications.clearMessages(messageTag);\n\n    //No errors!\n    if (!result)\n    {\n      Notifications.addMessage(I18N.toString(\"message.error.none\"), \"success\", messageTag, null, null, false);\n    }\n    //There are some errors/warnings...\n    else\n    {\n      const props = {graphController: graphController, machineController: machineController};\n\n      //Add new warning messages\n      if (unReachedNode.length > 0)\n      {\n        Notifications.addMessage(unReachedNode,\n          \"warning\", messageTag, StateUnreachableWarningMessage, props, false);\n      }\n\n      //Add new error messages\n      if (placeholderEdges.length > 0)\n      {\n        Notifications.addMessage({text: I18N.toString(\"message.error.incomplete\"), targets: placeholderEdges},\n          \"error\", messageTag, TransitionErrorMessage, props, false);\n      }\n    }\n\n    return result;\n  }\n\n  getUnreachableNodes() {\n\n    const graph = this.graph;\n\n    let unReachedNodes = graph.getNodes().slice();\n\n    //keep start state\n    //unReachedNodes.splice(unReachedNodes.indexOf(unReachedNode.getStartNode()), 1);\n    for(const edge of graph.getEdges()) {\n      const labels = edge.label.split(\",\");\n      for(const label of labels) {\n\n        const from = edge.from;\n        const to = edge.to;\n        //remove to from unReachedNode list\n        if(unReachedNodes.includes(to)) unReachedNodes.splice(unReachedNodes.indexOf(to),1);\n      }\n    }\n    return unReachedNodes;\n  }\n}\n\nexport default NFAErrorChecker;\n","import Config from 'config.js';\n\nimport MachineBuilder from './MachineBuilder.js';\nimport DFAErrorChecker from './DFAErrorChecker.js';\nimport NFAErrorChecker from './NFAErrorChecker.js';\nimport DFA from 'machine/DFA.js';\nimport NFA from 'machine/NFA.js';\nimport Node from 'modules/fsa/graph/FSANode.js';\nimport { SYMBOL_SEPARATOR } from 'modules/fsa/graph/FSAEdge.js';\nimport { EMPTY } from 'machine/Symbols.js';\n\nclass FSABuilder extends MachineBuilder\n{\n  constructor(graph)\n  {\n    super(graph);\n\n    this._machine = new NFA();\n    this._machineType = \"DFA\";\n    this._machineValidDFA = false;\n    this._alphabet = [];\n    this._symbols = [];\n\n    this._savedGraphHash = 0;\n\n    this._timer = null;\n    this._errorTimer = null;\n\n    this.machineErrorChecker = new DFAErrorChecker(this, graph);\n    this.tester = null;\n\n    this.graphController = null;\n    this.machineController = null;\n\n    this.onGraphChange = this.onGraphChange.bind(this);\n    this.onDelayedGraphChange = this.onDelayedGraphChange.bind(this);\n    this.onDelayedErrorCheck = this.onDelayedErrorCheck.bind(this);\n  }\n\n  initialize(app)\n  {\n    super.initialize(app);\n\n    this.tester = app.getCurrentModule().getTestingManager();\n    this.graphController = app.getGraphController();\n    this.machineController = app.getMachineController();\n\n    this._savedGraphHash = this.graph.getHashCode(false);\n    this.onGraphChange();\n  }\n\n  destroy()\n  {\n    this._savedGraphHash = this.graph.getHashCode(false);\n    this.onGraphChange();\n\n    super.destroy();\n  }\n\n  update()\n  {\n    const graphHash = this.graph.getHashCode(false);\n    if (graphHash !== this._savedGraphHash)\n    {\n      this._savedGraphHash = graphHash;\n      this.onGraphChange(this.graph);\n    }\n  }\n\n  onGraphChange(graph)\n  {\n    if (!this.tester) return;\n\n    if (this._timer)\n    {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n\n    if (this._errorTimer)\n    {\n      clearTimeout(this._errorTimer);\n      this._errorTimer = null;\n    }\n\n    this._timer = setTimeout(this.onDelayedGraphChange, Config.GRAPH_IMMEDIATE_INTERVAL);\n    this._errorTimer = setTimeout(this.onDelayedErrorCheck,\n      this.tester.isImmediateErrorCheck ? (Config.GRAPH_IMMEDIATE_INTERVAL * 2) : Config.ERROR_CHECK_INTERVAL);\n  }\n\n  onDelayedGraphChange()\n  {\n    this._machine.clear();\n    const result = this.toNFA(this._machine);\n    for(const s of this._symbols)\n    {\n      this._machine.newSymbol(s);\n    }\n    this._machineValidDFA = this._machine.isValidDFA();\n  }\n\n  onDelayedErrorCheck()\n  {\n    if (!this.tester.shouldCheckError) return;\n\n    this.machineErrorChecker.checkErrors(true, this.graphController, this.machineController);\n  }\n\n  formatAlphabetString(string, allowNull=false)\n  {\n    const symbols = string.split(SYMBOL_SEPARATOR);\n    const result = new Set();\n\n    let symbol = \"\";\n    let symbolLength = 0;\n    const length = symbols.length;\n    for(let i = 0; i < length; ++i)\n    {\n      symbol = symbols[i].trim();\n      symbolLength = symbol.length;\n      //If the symbol has none or more than 1 char\n      if (symbolLength !== 1)\n      {\n        //Remove symbol (by not adding to result)\n\n        //Divide multi-char symbol into smaller single char symbols\n        if (symbolLength > 1)\n        {\n          for(let subsymbol of symbol.split(\"\"))\n          {\n            subsymbol = subsymbol.trim();\n            if (!result.has(subsymbol))\n            {\n              result.add(subsymbol);\n            }\n          }\n        }\n      }\n      else\n      {\n        result.add(symbol);\n      }\n    }\n\n    //If it is an empty string...\n    if (result.size === 0) return allowNull ? null : EMPTY;\n    return Array.from(result).join(SYMBOL_SEPARATOR);\n  }\n\n  setMachineType(machineType)\n  {\n    if (this._machineType == machineType) return;\n\n    this._machineType = machineType;\n    if (machineType == \"DFA\")\n    {\n      this.machineErrorChecker = new DFAErrorChecker(this, this.graph);\n    }\n    else if (machineType == \"NFA\")\n    {\n      this.machineErrorChecker = new NFAErrorChecker(this, this.graph);\n    }\n    else\n    {\n      throw new Error(\"Cannot find error checker for machine type \\'\" + machineType + \"\\'\");\n    }\n\n    this.onGraphChange();\n  }\n\n  getMachineType()\n  {\n    return this._machineType;\n  }\n\n  addCustomSymbol(symbol)\n  {\n    this._symbols.push(symbol);\n\n    this.onGraphChange();\n  }\n\n  removeCustomSymbol(symbol)\n  {\n    this._symbols.splice(this._symbols.indexOf(symbol), 1);\n\n    this.onGraphChange();\n  }\n\n  renameCustomSymbol(prevSymbol, nextSymbol)\n  {\n    const i = this._symbols.indexOf(prevSymbol);\n    if (i <= 0) throw new Error(\"Trying to rename unknown symbol \\'\" + prevSymbol + \"\\'\");\n    this._symbols[i] = nextSymbol;\n\n    this.onGraphChange();\n  }\n\n  isCustomSymbol(symbol)\n  {\n    return this._symbols.includes(symbol);\n  }\n\n  getAlphabet()\n  {\n    const machine = this.getMachine();\n    this._alphabet.length = 0;\n    machine.getAlphabet(this._alphabet);\n    return this._alphabet;\n  }\n\n  isValidMachine()\n  {\n    if (this._machineType == \"DFA\")\n    {\n      return this._machineValidDFA;\n    }\n    else\n    {\n      return true;\n    }\n  }\n\n  toDFA(dst = null)\n  {\n    const result = dst || new DFA();\n    if (!(result instanceof DFA))\n      throw new Error(\"Trying to parse graph mismatched machine type.\");\n    fillFSA(this.graph, result);\n    return result;\n  }\n\n  toNFA(dst=null)\n  {\n    const result = dst || new NFA();\n    if (!(result instanceof NFA))\n      throw new Error(\"Trying to parse graph mismatched machine type.\");\n    fillFSA(this.graph, result);\n    return result;\n  }\n\n  getMachine()\n  {\n    return this._machine;\n  }\n}\n\nfunction fillFSA(graph, fsa)\n{\n  if (graph.getNodes().length <= 0) return fsa;\n  //Create all the nodes\n  for(const node of graph.getNodes())\n  {\n    try\n    {\n      let state = node.getNodeLabel();\n      fsa.newState(state);\n\n      //Set final state\n      if (node.getNodeAccept())\n      {\n        fsa.setFinalState(state, true);\n      }\n    }\n    catch(e)\n    {\n      throw e;\n    }\n  }\n\n  //Create all the edges\n  for(const edge of graph.getEdges())\n  {\n    //Ignore any incomplete edges\n    if (edge.isPlaceholder()) continue;\n    const from = edge.getSourceNode();\n    const to = edge.getDestinationNode();\n    if (from instanceof Node && to instanceof Node)\n    {\n      const labels = edge.getEdgeSymbolsFromLabel();\n      for(const label of labels)\n      {\n        try\n        {\n          fsa.newTransition(from.getNodeLabel(), to.getNodeLabel(), label);\n        }\n        catch(e)\n        {\n          throw e;\n        }\n      }\n    }\n  }\n\n  //Set start state\n  let startState = graph.getStartNode().getNodeLabel();\n  fsa.setStartState(startState);\n\n  return fsa;\n}\n\nexport default FSABuilder;\n","class EventHandler\n{\n  constructor(eventLogger, controller, eventName, postEventName)\n  {\n    this.eventLogger = eventLogger;\n    this.controller = controller;\n    this.eventName = eventName;\n    this.postEventName = postEventName || null;\n\n    this.onEvent = this.onEvent.bind(this);\n\n    this.controller.on(this.eventName, this.onEvent);\n  }\n\n  destroy()\n  {\n    this.controller.removeEventListener(this.eventName, this.onEvent);\n  }\n\n  onEvent(...args)\n  {\n    const result = {};\n    result.applyUndo = this.applyUndo.bind(this, result);\n    result.applyRedo = this.applyRedo.bind(this, result);\n\n    result.eventData = this.captureEvent(...args);\n\n    if (this.postEventName)\n    {\n      //Wait for post event to finalize event\n      this.controller.once(this.postEventName, (...args) => {\n        result.postData = this.capturePostEvent(...args);\n\n        this.eventLogger.captureEvent(result);\n      });\n    }\n    else\n    {\n      result.postData = result.eventData;\n\n      //Finalize event right now\n      this.eventLogger.captureEvent(result);\n    }\n  }\n\n  captureEvent(...args)\n  {\n    return {};\n  }\n\n  capturePostEvent(...args)\n  {\n    return {};\n  }\n\n  applyUndo(e)\n  {\n\n  }\n\n  applyRedo(e)\n  {\n\n  }\n}\n\nexport default EventHandler;\n","import EventHandler from './EventHandler.js';\n\nclass GraphEdgeDestinationEventHandler extends EventHandler\n{\n  constructor(eventLogger, graphController)\n  {\n    super(eventLogger, graphController, \"nodeInitial\");\n  }\n\n  //Override\n  captureEvent(graph, nextInitial, prevInitial)\n  {\n    return {\n      graph: graph,\n      nodeID: nextInitial.getGraphElementID(),\n      prevID: prevInitial.getGraphElementID()\n    };\n  }\n\n  //Override - this = event\n  applyUndo(e)\n  {\n    const graph = this.controller.getGraph();\n    const node = graph.getNodeByElementID(e.eventData.prevID);\n    if (!node) throw new Error(\"Unable to find target in graph\");\n\n    graph.setStartNode(node);\n  }\n\n  //Override - this = event\n  applyRedo(e)\n  {\n    const graph = this.controller.getGraph();\n    const node = graph.getNodeByElementID(e.eventData.nodeID);\n    if (!node) throw new Error(\"Unable to find target in graph\");\n\n    graph.setStartNode(node);\n  }\n}\nexport default GraphEdgeDestinationEventHandler;\n","import EventHandler from './EventHandler.js';\n\nclass GraphNodeMoveEventHandler extends EventHandler\n{\n  constructor(eventLogger, graphController)\n  {\n    super(eventLogger, graphController, \"nodeMove\");\n  }\n\n  //Override\n  captureEvent(graph, targetNode, nextX, nextY, prevX, prevY)\n  {\n    return {\n      graph: graph,\n      nodeID: targetNode.getGraphElementID(),\n      nextX: nextX,\n      nextY: nextY,\n      prevX: prevX,\n      prevY: prevY\n    };\n  }\n\n  //Override - this = event\n  applyUndo(e)\n  {\n    const graph = this.controller.getGraph();\n    const node = graph.getNodeByElementID(e.eventData.nodeID);\n    if (!node) throw new Error(\"Unable to find target in graph\");\n\n    node.x = e.eventData.prevX;\n    node.y = e.eventData.prevY;\n  }\n\n  //Override - this = event\n  applyRedo(e)\n  {\n    const graph = this.controller.getGraph();\n    const node = graph.getNodeByElementID(e.eventData.nodeID);\n    if (!node) throw new Error(\"Unable to find target in graph\");\n    \n    node.x = e.eventData.nextX;\n    node.y = e.eventData.nextY;\n  }\n}\nexport default GraphNodeMoveEventHandler;\n","import EventHandler from './EventHandler.js';\n\nclass GraphNodeMoveAllEventHandler extends EventHandler\n{\n  constructor(eventLogger, graphController)\n  {\n    super(eventLogger, graphController, \"nodeMoveAll\");\n  }\n\n  //Override\n  captureEvent(graph, nodes, dx, dy)\n  {\n    return {\n      graph: graph,\n      nodeIDs: nodes.map(e => e.getGraphElementID()),\n      dx: dx,\n      dy: dy\n    };\n  }\n\n  //Override - this = event\n  applyUndo(e)\n  {\n    const graph = this.controller.getGraph();\n    let node = null;\n    for(const nodeID of e.eventData.nodeIDs)\n    {\n      node = graph.getNodeByElementID(nodeID);\n      if (!node) throw new Error(\"Unable to find target in graph\");\n\n      node.x -= e.eventData.dx;\n      node.y -= e.eventData.dy;\n    }\n  }\n\n  //Override - this = event\n  applyRedo(e)\n  {\n    const graph = this.controller.getGraph();\n    let node = null;\n    for(const nodeID of e.eventData.nodeIDs)\n    {\n      node = graph.getNodeByElementID(nodeID);\n      if (!node) throw new Error(\"Unable to find target in graph\");\n\n      node.x += e.eventData.dx;\n      node.y += e.eventData.dy;\n    }\n  }\n}\nexport default GraphNodeMoveAllEventHandler;\n","import EventHandler from './EventHandler.js';\n\nclass GraphEdgeMoveEventHandler extends EventHandler\n{\n  constructor(eventLogger, graphController)\n  {\n    super(eventLogger, graphController, \"edgeMove\");\n  }\n\n  //Override\n  captureEvent(graph, targetEdge, nextQuad, prevQuad)\n  {\n    return {\n      graph: graph,\n      edgeID: targetEdge.getGraphElementID(),\n      nextQuad: Object.assign({}, nextQuad),\n      prevQuad: Object.assign({}, prevQuad)\n    };\n  }\n\n  //Override - this = event\n  applyUndo(e)\n  {\n    const graph = this.controller.getGraph();\n    const edge = graph.getEdgeByElementID(e.eventData.edgeID);\n    if (!edge) throw new Error(\"Unable to find target in graph\");\n\n    edge.setQuadratic(e.eventData.prevQuad.radians, e.eventData.prevQuad.length);\n  }\n\n  //Override - this = event\n  applyRedo(e)\n  {\n    const graph = this.controller.getGraph();\n    const edge = graph.getEdgeByElementID(e.eventData.edgeID);\n    if (!edge) throw new Error(\"Unable to find target in graph\");\n\n    edge.setQuadratic(e.eventData.nextQuad.radians, e.eventData.nextQuad.length);\n  }\n}\nexport default GraphEdgeMoveEventHandler;\n","import EventHandler from './EventHandler.js';\n\nclass GraphEdgeDestinationEventHandler extends EventHandler\n{\n  constructor(eventLogger, graphController)\n  {\n    super(eventLogger, graphController, \"edgeDestination\");\n  }\n\n  //Override\n  captureEvent(graph, targetEdge, nextDestination, prevDestination, prevQuad)\n  {\n    return {\n      graph: graph,\n      edgeID: targetEdge.getGraphElementID(),\n      nextDestination: nextDestination,\n      prevDestination: prevDestination,\n      nextQuad: Object.assign({}, targetEdge.getQuadratic()),\n      prevQuad: Object.assign({}, prevQuad),\n    };\n  }\n\n  //Override - this = event\n  applyUndo(e)\n  {\n    const graph = this.controller.getGraph();\n    const edge = graph.getEdgeByElementID(e.eventData.edgeID);\n    if (!edge) throw new Error(\"Unable to find target in graph\");\n\n    let radians = e.eventData.prevQuad.radians;\n    const length = e.eventData.prevQuad.length;\n\n    edge.changeDestinationNode(e.eventData.prevDestination);\n    //Flip them, since self loops are upside down\n    if (edge.isSelfLoop()) radians = -radians;\n    edge.setQuadratic(radians, length);\n  }\n\n  //Override - this = event\n  applyRedo(e)\n  {\n    const graph = this.controller.getGraph();\n    const edge = graph.getEdgeByElementID(e.eventData.edgeID);\n    if (!edge) throw new Error(\"Unable to find target in graph\");\n\n    let radians = e.eventData.nextQuad.radians;\n    const length = e.eventData.nextQuad.length;\n\n    edge.changeDestinationNode(e.eventData.nextDestination);\n    edge.setQuadratic(radians, length);\n  }\n}\nexport default GraphEdgeDestinationEventHandler;\n","import EventHandler from './EventHandler.js';\n\nclass GraphEdgeLabelEventHandler extends EventHandler\n{\n  constructor(eventLogger, graphController)\n  {\n    super(eventLogger, graphController, \"edgeLabel\");\n  }\n\n  //Override\n  captureEvent(graph, targetEdge, nextLabel, prevLabel)\n  {\n    return {\n      graph: graph,\n      edgeID: targetEdge.getGraphElementID(),\n      nextLabel: nextLabel,\n      prevLabel: prevLabel\n    };\n  }\n\n  //Override - this = event\n  applyUndo(e)\n  {\n    const graph = this.controller.getGraph();\n    const edge = graph.getEdgeByElementID(e.eventData.edgeID);\n    if (!edge) throw new Error(\"Unable to find target in graph\");\n\n    edge.setEdgeLabel(e.eventData.prevLabel);\n  }\n\n  //Override - this = event\n  applyRedo(e)\n  {\n    const graph = this.controller.getGraph();\n    const edge = graph.getEdgeByElementID(e.eventData.edgeID);\n    if (!edge) throw new Error(\"Unable to find target in graph\");\n\n    edge.setEdgeLabel(e.eventData.nextLabel);\n  }\n}\nexport default GraphEdgeLabelEventHandler;\n","import EventHandler from './EventHandler.js';\n\nclass UserCreateNodeEventHandler extends EventHandler\n{\n  constructor(eventLogger, graphController)\n  {\n    super(eventLogger, graphController, \"userPostCreateNode\");\n  }\n\n  //Override\n  captureEvent(graph, node)\n  {\n    return {\n      nodeID: node.getGraphElementID(),\n      x: node.x,\n      y: node.y,\n      accept: node.getNodeAccept(),\n      label: node.getNodeLabel(),\n      custom: node.getNodeCustom()\n    };\n  }\n\n  //Override - this = event\n  applyUndo(e)\n  {\n    const graph = this.controller.getGraph();\n    const node = graph.getNodeByElementID(e.eventData.nodeID);\n    if (!node) throw new Error(\"Unable to find target in graph\");\n\n    graph.deleteNode(node);\n  }\n\n  //Override - this = event\n  applyRedo(e)\n  {\n    const graph = this.controller.getGraph();\n    let node = graph.getNodeByElementID(e.eventData.nodeID);\n    if (!node)\n    {\n      node = graph.createNode(e.postData.x, e.postData.y, e.postData.nodeID);\n    }\n    else\n    {\n      node.x = e.postData.x;\n      node.y = e.postData.y;\n    }\n    node.setNodeLabel(e.postData.label);\n    node.setNodeAccept(e.postData.accept);\n    node.setNodeCustom(e.postData.custom);\n  }\n}\nexport default UserCreateNodeEventHandler;\n","import EventHandler from './EventHandler.js';\n\nclass UserToggleNodeEventHandler extends EventHandler\n{\n  constructor(eventLogger, graphController)\n  {\n    super(eventLogger, graphController, \"userToggleNode\");\n  }\n\n  //Override\n  captureEvent(graph, node, prevAccept)\n  {\n    return {\n      nodeID: node.getGraphElementID(),\n      prevAccept: prevAccept\n    };\n  }\n\n  //Override - this = event\n  applyUndo(e)\n  {\n    const graph = this.controller.getGraph();\n    const node = graph.getNodeByElementID(e.eventData.nodeID);\n    if (!node) throw new Error(\"Unable to find target in graph\");\n\n    node.setNodeAccept(e.eventData.prevAccept);\n  }\n\n  //Override - this = event\n  applyRedo(e)\n  {\n    const graph = this.controller.getGraph();\n    const node = graph.getNodeByElementID(e.eventData.nodeID);\n    if (!node) throw new Error(\"Unable to find target in graph\");\n\n    node.setNodeAccept(!e.eventData.prevAccept);\n  }\n}\nexport default UserToggleNodeEventHandler;\n","import FSAGraph from './FSAGraph.js';\nimport { SYMBOL_SEPARATOR } from './FSAEdge.js';\n\nconst GRAPH_PARSER_VERSION = \"1.0.0\";\n\nexport const JSON = {\n  parse(data, dst=null)\n  {\n    if (!dst) dst = new FSAGraph();\n    else dst.clear();\n\n    const nodeDatas = data['nodes'] || [];\n    const nodeCount = Math.min(nodeDatas.length || 0, data['nodeCount'] || 0);\n    const edgeDatas = data['edges'] || [];\n    const edgeCount = Math.min(edgeDatas.length || 0, data['edgeCount'] || 0);\n    const initialIndex = data['initial'] || 0;\n\n    const nodeIndices = new Map();\n    for(let i = 0; i < nodeCount; ++i)\n    {\n      const nodeData = nodeDatas[i];\n      if (!nodeData) continue;\n\n      //NOTE: Assumes createNode will maintain order\n      const node = dst.createNode(nodeData['x'] || 0, nodeData['y'] || 0, nodeData['id']);\n      node.setNodeLabel(nodeData['label'] || \"\");\n      node.setNodeAccept(nodeData['accept'] || false);\n      node.setNodeCustom(nodeData['custom'] || false);\n\n      nodeIndices.set(i, node);\n    }\n\n    const initialNode = nodeIndices.get(initialIndex);\n    if (initialNode)\n    {\n      dst.setStartNode(initialNode);\n    }\n\n    for(let i = 0; i < edgeCount; ++i)\n    {\n      const edgeData = edgeDatas[i];\n      if (!edgeData) continue;\n      const sourceNode = nodeIndices.get(edgeData['from']) || null;\n      //Cannot create source-less edges\n      if (!sourceNode) continue;\n      const destinationNode = nodeIndices.get(edgeData['to']) || null;\n      //NOTE: Assumes createEdge will maintain order\n      const edge = dst.createEdge(sourceNode, destinationNode, edgeData['id']);\n      const quadData = edgeData['quad'] || {};\n      edge.setEdgeLabel(edgeData['label'] || \"\");\n      edge.setQuadratic(quadData['radians'] || 0, quadData['length'] || 0);\n    }\n\n    return dst;\n  },\n  objectify(graph)\n  {\n    const graphNodes = graph.getNodes() || [];\n    const nodeCount = graphNodes.length || 0;\n    const graphEdges = graph.getEdges() || [];\n    const edgeCount = graphEdges.length || 0;\n    const graphInitial = graph.getStartNode();\n\n    const nodeDatas = new Array(nodeCount);\n    const nodeIndices = new Map();\n    for(let i = 0; i < nodeCount; ++i)\n    {\n      const node = graphNodes[i];\n      if (node)\n      {\n        //NOTE: Assumes node must have an id\n        const elementID = node.getGraphElementID();\n\n        nodeIndices.set(node, i);\n        nodeDatas[i] = {\n          id: elementID,\n          x: node.x || 0, y: node.y || 0,\n          label: node.getNodeLabel() || \"\",\n          accept: node.getNodeAccept() || false,\n          custom: node.getNodeCustom() || false\n        };\n      }\n    }\n\n    const edgeDatas = new Array(edgeCount);\n    for(let i = 0; i < edgeCount; ++i)\n    {\n      const edge = graphEdges[i];\n      if (edge)\n      {\n        //NOTE: Assumes edge must have an id\n        const elementID = edge.getGraphElementID();\n\n        const quad = edge.getQuadratic() || {};\n        const edgeSource = edge.getSourceNode();\n        const edgeDestination = edge.getDestinationNode();\n        const sourceIndex = nodeIndices.has(edgeSource) ? nodeIndices.get(edgeSource) : -1;\n        const destinationIndex = nodeIndices.has(edgeDestination) ? nodeIndices.get(edgeDestination) : -1;\n        edgeDatas[i] = {\n          id: elementID,\n          from: sourceIndex,\n          to: destinationIndex,\n          quad: { radians: quad['radians'] || 0, length: quad['length'] || 0 },\n          label: edge.getEdgeLabel() || \"\"\n        };\n      }\n    }\n\n    const initialIndex = nodeIndices.get(graphInitial) || 0;\n\n    return {\n      nodeCount: nodeCount,\n      nodes: nodeDatas,\n      edgeCount: edgeCount,\n      edges: edgeDatas,\n      initial: initialIndex,\n      _version: GRAPH_PARSER_VERSION\n    };\n  }\n};\n\nexport const XML = {\n  parse(data, dst=NULL)\n  {\n    if (!dst) dst = new FSAGraph();\n    else dst.clear();\n\n    const nodeElements = data.getElementsByTagName('state') || [];\n    const nodeCount = nodeElements.length;\n    const edgeElements = data.getElementsByTagName('transition') || [];\n    const edgeCount = edgeElements.length;\n    let initialIndex = \"0\";\n\n    //Get the nodes...\n    const nodeElementIDs = new Map();\n    for(let i = 0; i < nodeCount; ++i)\n    {\n      const nodeElement = nodeElements[i];\n      if (!nodeElement) continue;\n      const nodeElementID = nodeElement.getAttribute('id');\n      if (!nodeElementID) continue;\n\n      //Get x value\n      let x = 0;\n      const xElements = nodeElement.getElementsByTagName('x');\n      //If no elements exists, we are guaranteed an empty list...\n      if (xElements.length > 0)\n      {\n        const xElement = xElements[0];\n        if (xElement.hasChildNodes())\n        {\n          //hasChildNodes() guarantees at least 1 element\n          const xValue = xElement.childNodes[0];\n          if (xValue)\n          {\n            try\n            {\n              x = parseFloat(xValue.nodeValue) || 0;\n            }\n            catch (e)\n            {\n              x = 0;\n            }\n          }\n        }\n      }\n\n      //Get y value\n      let y = 0;\n      const yElements = nodeElement.getElementsByTagName('y');\n      //If no elements exists, we are guaranteed an empty list...\n      if (yElements.length > 0)\n      {\n        const yElement = yElements[0];\n        if (yElement.hasChildNodes())\n        {\n          //hasChildNodes() guarantees at least 1 element\n          const yValue = yElement.childNodes[0];\n          if (yValue)\n          {\n            try\n            {\n              y = parseFloat(yValue.nodeValue) || 0;\n            }\n            catch (e)\n            {\n              y = 0;\n            }\n          }\n        }\n      }\n\n      //Get initial flag\n      const initialElements = nodeElement.getElementsByTagName('initial');\n      //If no elements exists, we are guaranteed an empty list...\n      const initial = initialElements.length > 0;\n\n      //Get final flag\n      const finalElements = nodeElement.getElementsByTagName('final');\n      //If no elements exists, we are guaranteed an empty list...\n      const final = finalElements.length > 0;\n\n      //NOTE: Assumes createNode will maintain order\n      const node = dst.createNode(x, y);\n      node.setNodeLabel(nodeElement.getAttribute('name') || \"\");\n      node.setNodeAccept(final);\n\n      if (initial) initialIndex = nodeElementID;\n      nodeElementIDs.set(nodeElementID, node);\n    }\n\n    //Set the initial node...\n    const initialNode = nodeElementIDs.get(initialIndex);\n    if (initialNode)\n    {\n      dst.setStartNode(initialNode);\n    }\n\n    //Readjust the center of graph...\n    const boundingRect = dst.getBoundingRect();\n    const minX = boundingRect.minX;\n    const minY = boundingRect.minY;\n    const width = boundingRect.width;\n    const height = boundingRect.height;\n    const graphNodes = dst.getNodes();\n    for(let i = 0, len = graphNodes.length; i < len; ++i)\n    {\n      graphNodes[i].x -= minX + width / 2;\n      graphNodes[i].y -= minY + height / 2;\n    }\n\n    //Get the transitions...\n    const transitionMapping = new Map();\n    for(let i = 0; i < edgeCount; ++i)\n    {\n      const edgeElement = edgeElements[i];\n      if (!edgeElement) continue;\n\n      //Get from value\n      let sourceID = null;\n      const fromElements = edgeElement.getElementsByTagName('from');\n      //If no elements exists, we are guaranteed an empty list...\n      if (fromElements.length > 0)\n      {\n        const fromElement = fromElements[0];\n        if (fromElement.hasChildNodes())\n        {\n          //hasChildNodes() guarantees at least 1 element\n          const fromValue = fromElement.childNodes[0];\n          if (fromValue)\n          {\n            sourceID = fromValue.nodeValue;\n          }\n        }\n      }\n\n      //Cannot create source-less edges\n      if (!nodeElementIDs.has(sourceID)) continue;\n\n      //Get to value\n      let destinationID = \"\";\n      const toElements = edgeElement.getElementsByTagName('to');\n      //If no elements exists, we are guaranteed an empty list...\n      if (toElements.length > 0)\n      {\n        const toElement = toElements[0];\n        if (toElement.hasChildNodes())\n        {\n          //hasChildNodes() guarantees at least 1 element\n          const toValue = toElement.childNodes[0];\n          if (toValue)\n          {\n            destinationID = toValue.nodeValue || \"\";\n          }\n        }\n      }\n\n      //Get read value\n      let symbol = \"\";\n      const readElements = edgeElement.getElementsByTagName('read');\n      //If no elements exists, we are guaranteed an empty list...\n      if (readElements.length > 0)\n      {\n        const readElement = readElements[0];\n        if (readElement.hasChildNodes())\n        {\n          //hasChildNodes() guarantees at least 1 element\n          const readValue = readElement.childNodes[0];\n          if (readValue)\n          {\n            symbol = readValue.nodeValue || \"\";\n          }\n        }\n      }\n\n      const transitionID = sourceID + \"\\n\" + destinationID;\n      let symbols;\n      if (transitionMapping.has(transitionID))\n      {\n        symbols = transitionMapping.get(transitionID);\n      }\n      else\n      {\n        symbols = [];\n        transitionMapping.set(transitionID, symbols);\n      }\n      symbols.push(symbol);\n    }\n\n    for(const transitionKey of transitionMapping.keys())\n    {\n      const key = transitionKey.split(\"\\n\");\n      if (key.length !== 2) continue;\n\n      const symbols = transitionMapping.get(transitionKey);\n      const label = symbols.join(SYMBOL_SEPARATOR);\n      //Should never be null, since it was checked before...\n      const sourceNode = nodeElementIDs.get(key[0]);\n      const destinationNode = nodeElementIDs.get(key[1]);\n\n      //NOTE: Assumes createEdge will maintain order\n      const edge = dst.createEdge(sourceNode, destinationNode);\n      edge.setEdgeLabel(label);\n    }\n\n    return dst;\n  },\n  objectify(graph)\n  {\n    const graphNodes = graph.getNodes() || [];\n    const nodeCount = graphNodes.length || 0;\n    const graphEdges = graph.getEdges() || [];\n    const edgeCount = graphEdges.length || 0;\n    const graphInitial = graph.getStartNode();\n\n    const header = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\" +\n      \"<!--Created with flap.js \" + GRAPH_PARSER_VERSION + \"-->\" +\n      \"<structure></structure>\";\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(header, \"application/xml\");\n    const structure = doc.getElementsByTagName(\"structure\")[0];\n\n    const type = doc.createElement(\"type\");\n    type.innerHTML = \"fa\"; //finite automata\n    structure.appendChild(type);\n\n    const automaton = doc.createElement(\"automaton\");\n    structure.appendChild(automaton);\n\n    const nodeIndices = new Map();\n    for(let i = 0; i < nodeCount; ++i)\n    {\n      const node = graphNodes[i];\n      nodeIndices.set(node, i);\n\n      //state tag\n      const state = doc.createElement(\"state\");\n      state.id = \"\" + i;\n      state.setAttribute(\"name\", node.getNodeLabel());\n      automaton.appendChild(state);\n\n      //x tag\n      const x = doc.createElement(\"x\");\n      x.innerHTML = \"\" + (node.x || 0);\n      state.appendChild(x);\n\n      //y tag\n      const y = doc.createElement(\"y\");\n      y.innerHTML = \"\" + (node.y || 0);\n      state.appendChild(y);\n\n      //initial tag\n      if (graphInitial === node)\n      {\n        state.appendChild(doc.createElement(\"initial\"));\n      }\n\n      //final tag\n      if (node.getNodeAccept())\n      {\n        state.appendChild(doc.createElement(\"final\"));\n      }\n    }\n\n    for(let edge of graphEdges)\n    {\n      const symbols = edge.getEdgeSymbolsFromLabel();\n      for(let symbol of symbols)\n      {\n        //transition tag\n        const transition = doc.createElement(\"transition\");\n        automaton.appendChild(transition);\n\n        //from tag\n        const from = doc.createElement(\"from\");\n        from.innerHTML = \"\" + (nodeIndices.get(edge.getSourceNode()) || 0);\n        transition.appendChild(from);\n\n        //to tag\n        const to = doc.createElement(\"to\");\n        to.innerHTML = \"\" + (nodeIndices.get(edge.getDestinationNode()) || 0);\n        transition.appendChild(to);\n\n        //read tag\n        const read = doc.createElement(\"read\");\n        read.innerHTML = \"\" + (symbol || \"\");\n        transition.appendChild(read);\n      }\n    }\n\n    return doc;\n  }\n};\n","import EventHandler from './EventHandler.js';\n\nimport * as FSAGraphParser from 'modules/fsa/graph/FSAGraphParser.js';\n\nclass UserDeleteNodesEventHandler extends EventHandler\n{\n  constructor(eventLogger, graphController)\n  {\n    super(eventLogger, graphController, \"userPreDeleteNodes\", \"userPostDeleteNodes\");\n  }\n\n  //Override\n  captureEvent(graph, node, targetNodes, prevX, prevY)\n  {\n    const targets = [];\n    for(const target of targetNodes)\n    {\n      targets.push(target.getGraphElementID());\n    }\n    const dx = node.x - prevX;\n    const dy = node.y - prevY;\n\n    return {\n      graphData: FSAGraphParser.JSON.objectify(graph),\n      targets: targets,\n      dx: dx,\n      dy: dy\n    };\n  }\n\n  //Override\n  capturePostEvent(graph, node, targetNodes, prevX, prevY)\n  {\n    return {\n      graphData: FSAGraphParser.JSON.objectify(graph)\n    };\n  }\n\n  //Override - this = event\n  applyUndo(e)\n  {\n    const graph = this.controller.getGraph();\n    FSAGraphParser.JSON.parse(e.eventData.graphData, this.controller.getGraph());\n    for(const targetID of e.eventData.targets)\n    {\n      const node = graph.getNodeByElementID(targetID);\n      if (!node) throw new Error(\"Unable to find target in graph\");\n\n      node.x -= e.eventData.dx;\n      node.y -= e.eventData.dy;\n    }\n  }\n\n  //Override - this = event\n  applyRedo(e)\n  {\n    FSAGraphParser.JSON.parse(e.postData.graphData, this.controller.getGraph());\n  }\n}\nexport default UserDeleteNodesEventHandler;\n","import EventHandler from './EventHandler.js';\n\nclass UserRenameNodeEventHandler extends EventHandler\n{\n  constructor(eventLogger, graphController)\n  {\n    super(eventLogger, graphController, \"userRenameNode\");\n  }\n\n  //Override\n  captureEvent(graph, node, nextLabel, prevLabel, isPrevCustom)\n  {\n    return {\n      node: node,\n      nodeID: node.getGraphElementID(),\n      nextLabel: nextLabel,\n      prevLabel: prevLabel,\n      prevCustom: isPrevCustom\n    };\n  }\n\n  //Override - this = event\n  applyUndo(e)\n  {\n    const graph = this.controller.getGraph();\n    const node = graph.getNodeByElementID(e.eventData.nodeID);\n    if (!node) throw new Error(\"Unable to find target in graph\");\n\n    node.setNodeLabel(e.eventData.prevLabel);\n    node.setNodeCustom(e.eventData.prevCustom);\n  }\n\n  //Override - this = event\n  applyRedo(e)\n  {\n    const graph = this.controller.getGraph();\n    const node = graph.getNodeByElementID(e.eventData.nodeID);\n    if (!node) throw new Error(\"Unable to find target in graph\");\n\n    node.setNodeLabel(e.eventData.nextLabel);\n    node.setNodeCustom(true);\n  }\n}\nexport default UserRenameNodeEventHandler;\n","import EventHandler from './EventHandler.js';\n\nclass UserCreateEdgeEventHandler extends EventHandler\n{\n  constructor(eventLogger, graphController)\n  {\n    super(eventLogger, graphController, \"userPostCreateEdge\");\n  }\n\n  //Override\n  captureEvent(graph, edge)\n  {\n    const edgeQuad = edge.getQuadratic();\n    return {\n      edge: edge,\n      edgeID: edge.getGraphElementID(),\n      fromID: edge.getSourceNode().getGraphElementID(),\n      toID: edge.getDestinationNode() ? edge.getDestinationNode().getGraphElementID() : null,\n      label: edge.getEdgeLabel(),\n      quad: { radians: edgeQuad.radians, length: edgeQuad.length }\n    };\n  }\n\n  //Override - this = event\n  applyUndo(e)\n  {\n    //TODO: when formatting edges change an edge different than this one, it does not revert them.\n    const graph = this.controller.getGraph();\n    const edge = graph.getEdgeByElementID(e.eventData.edgeID);\n    if (!edge) throw new Error(\"Unable to find target in graph\");\n\n    graph.deleteEdge(edge);\n  }\n\n  //Override - this = event\n  applyRedo(e)\n  {\n    const graph = this.controller.getGraph();\n    let edge = graph.getEdgeByElementID(e.postData.edgeID);\n\n    const from = graph.getNodeByElementID(e.postData.fromID);\n    if (!from) throw new Error(\"Trying to create a sourceless edge\");\n    const to = graph.getNodeByElementID(e.postData.toID) || null;\n\n    if (!edge)\n    {\n      edge = graph.createEdge(from, to, e.postData.edgeID);\n    }\n    else\n    {\n      edge.setSourceNode(from);\n      edge.changeDestinationNode(to);\n    }\n\n    edge.setEdgeLabel(e.postData.label);\n    edge.setQuadratic(e.postData.quad.radians, e.postData.quad.length);\n  }\n}\nexport default UserCreateEdgeEventHandler;\n","import EventHandler from './EventHandler.js';\n\nclass UserDeleteEdgeEventHandler extends EventHandler\n{\n  constructor(eventLogger, graphController)\n  {\n    super(eventLogger, graphController, \"userPreDeleteEdge\");\n  }\n\n  //Override\n  captureEvent(graph, edge, prevTo, prevQuad)\n  {\n    return {\n      edge: edge,\n      edgeID: edge.getGraphElementID(),\n      fromID: edge.getSourceNode().getGraphElementID(),\n      toID: prevTo ? prevTo.getGraphElementID() : null,\n      label: edge.getEdgeLabel(),\n      quad: Object.assign({}, prevQuad)\n    };\n  }\n\n  //Override - this = event\n  applyUndo(e)\n  {\n    const graph = this.controller.getGraph();\n    let edge = graph.getEdgeByElementID(e.eventData.edgeID);\n\n    const from = graph.getNodeByElementID(e.eventData.fromID);\n    if (!from) throw new Error(\"Trying to create a sourceless edge\");\n    const to = graph.getNodeByElementID(e.eventData.toID) || null;\n\n    if (!edge)\n    {\n      edge = graph.createEdge(from, to, e.eventData.edgeID);\n    }\n    else\n    {\n      edge.setSourceNode(from);\n      edge.changeDestinationNode(to);\n    }\n\n    edge.setEdgeLabel(e.eventData.label);\n    edge.setQuadratic(e.eventData.quad.radians, e.eventData.quad.length);\n  }\n\n  //Override - this = event\n  applyRedo(e)\n  {\n    const graph = this.controller.getGraph();\n    const edge = graph.getEdgeByElementID(e.eventData.edgeID);\n    if (!edge) throw new Error(\"Unable to find target in graph\");\n\n    graph.deleteEdge(edge);\n  }\n}\nexport default UserDeleteEdgeEventHandler;\n","import EventHandler from './EventHandler.js';\n\nimport * as FSAGraphParser from 'modules/fsa/graph/FSAGraphParser.js';\n\nclass UserImportGraphEventHandler extends EventHandler\n{\n  constructor(eventLogger, graphController, machineController)\n  {\n    super(eventLogger, graphController, \"userPreImportGraph\", \"userPostImportGraph\");\n\n    this.machineController = machineController;\n  }\n\n  //Override\n  captureEvent(graph)\n  {\n    return {\n      graphName: this.machineController.getMachineName(),\n      graphData: FSAGraphParser.JSON.objectify(graph)\n    };\n  }\n\n  //Override\n  capturePostEvent(graph)\n  {\n    return {\n      graphName: this.machineController.getMachineName(),\n      graphData: FSAGraphParser.JSON.objectify(graph)\n    };\n  }\n\n  //Override - this = event\n  applyUndo(e)\n  {\n    FSAGraphParser.JSON.parse(e.eventData.graphData, this.controller.getGraph());\n\n    this.machineController.setMachineName(e.eventData.graphName);\n  }\n\n  //Override - this = event\n  applyRedo(e)\n  {\n    FSAGraphParser.JSON.parse(e.postData.graphData, this.controller.getGraph());\n\n    this.machineController.setMachineName(e.postData.graphName);\n  }\n}\nexport default UserImportGraphEventHandler;\n","import EventHandler from './EventHandler.js';\n\nimport * as FSAGraphParser from 'modules/fsa/graph/FSAGraphParser.js';\n\nclass SafeGraphEventHandler extends EventHandler\n{\n  constructor(eventLogger, graphController, eventName, postEventName)\n  {\n    super(eventLogger, graphController, eventName, postEventName);\n  }\n\n  //Override\n  captureEvent(graph)\n  {\n    return {\n      graphData: FSAGraphParser.JSON.objectify(graph)\n    };\n  }\n\n  //Override\n  capturePostEvent(graph)\n  {\n    return {\n      graphData: FSAGraphParser.JSON.objectify(graph)\n    };\n  }\n\n  //Override - this = event\n  applyUndo(e)\n  {\n    FSAGraphParser.JSON.parse(e.eventData.graphData, this.controller.getGraph());\n  }\n\n  //Override - this = event\n  applyRedo(e)\n  {\n    FSAGraphParser.JSON.parse(e.postData.graphData, this.controller.getGraph());\n  }\n}\nexport default SafeGraphEventHandler;\n","import EventHandler from './EventHandler.js';\n\nclass UserChangeMachineEventHandler extends EventHandler\n{\n  constructor(eventLogger, machineController)\n  {\n    super(eventLogger, machineController, \"userChangeMachine\");\n  }\n\n  //Override\n  captureEvent(machineBuilder, nextMachineType, prevMachineType)\n  {\n    return {\n      prevType: prevMachineType,\n      nextType: nextMachineType\n    };\n  }\n\n  //Override - this = event\n  applyUndo(e)\n  {\n    this.controller.setMachineType(e.eventData.prevType);\n  }\n\n  //Override - this = event\n  applyRedo(e)\n  {\n    this.controller.setMachineType(e.postData.nextType);\n  }\n}\nexport default UserChangeMachineEventHandler;\n","import EventHandler from './EventHandler.js';\n\nimport * as FSAGraphParser from 'modules/fsa/graph/FSAGraphParser.js';\n\nclass UserConvertMachineEventHandler extends EventHandler\n{\n  constructor(eventLogger, machineController, graphController)\n  {\n    super(eventLogger, machineController, \"userPreConvertMachine\", \"userPostConvertMachine\");\n\n    this.graphController = graphController;\n  }\n\n  //Override\n  captureEvent(machineBuilder, nextMachineType, prevMachineType)\n  {\n    const graph = this.graphController.getGraph();\n\n    return {\n      graphData: FSAGraphParser.JSON.objectify(graph),\n      prevType: prevMachineType\n    };\n  }\n\n  //Override\n  capturePostEvent(machineBuilder, nextMachineType, prevMachineType)\n  {\n    const graph = this.graphController.getGraph();\n\n    return {\n      graphData: FSAGraphParser.JSON.objectify(graph),\n      nextType: nextMachineType\n    };\n  }\n\n  //Override - this = event\n  applyUndo(e)\n  {\n    FSAGraphParser.JSON.parse(e.eventData.graphData, this.graphController.getGraph());\n    this.controller.setMachineType(e.eventData.prevType);\n  }\n\n  //Override - this = event\n  applyRedo(e)\n  {\n    FSAGraphParser.JSON.parse(e.postData.graphData, this.graphController.getGraph());\n    this.controller.setMachineType(e.postData.nextType);\n  }\n}\nexport default UserConvertMachineEventHandler;\n","import EventHandler from './EventHandler.js';\n\nclass UserRenameMachineEventHandler extends EventHandler\n{\n  constructor(eventLogger, machineController)\n  {\n    super(eventLogger, machineController, \"userRenameMachine\");\n  }\n\n  //Override\n  captureEvent(machineBuilder, nextMachineName, prevMachineName)\n  {\n    return {\n      prevName: prevMachineName,\n      nextName: nextMachineName\n    };\n  }\n\n  //Override - this = event\n  applyUndo(e)\n  {\n    this.controller.setMachineName(e.eventData.prevName);\n  }\n\n  //Override - this = event\n  applyRedo(e)\n  {\n    this.controller.setMachineName(e.postData.nextName);\n  }\n}\nexport default UserRenameMachineEventHandler;\n","import EventHandler from './EventHandler.js';\n\nimport * as FSAGraphParser from 'modules/fsa/graph/FSAGraphParser.js';\n\nclass UserRenameSymbolEventHandler extends EventHandler\n{\n  constructor(eventLogger, machineController, graphController)\n  {\n    super(eventLogger, machineController, \"userPreRenameSymbol\", \"userPostRenameSymbol\");\n\n    this.graphController = graphController;\n  }\n\n  //Override\n  captureEvent(machineBuilder, symbol, prevSymbol)\n  {\n    const graph = this.graphController.getGraph();\n    return {\n      graphData: FSAGraphParser.JSON.objectify(graph),\n      symbol: symbol,\n      prevSymbol: prevSymbol\n    };\n  }\n\n  //Override\n  capturePostEvent(machineBuilder, symbol, prevSymbol, targets)\n  {\n    const graph = this.graphController.getGraph();\n    const targetIDs = [];\n\n    for(const target of targets)\n    {\n      targetIDs.push(target.getGraphElementID());\n    }\n\n    return {\n      graphData: FSAGraphParser.JSON.objectify(graph),\n      symbol: symbol,\n      prevSymbol: prevSymbol,\n      targets: targetIDs\n    };\n  }\n\n  //Override - this = event\n  applyUndo(e)\n  {\n    //TODO: restore machine custom alphabet\n    FSAGraphParser.JSON.parse(e.eventData.graphData, this.graphController.getGraph());\n  }\n\n  //Override - this = event\n  applyRedo(e)\n  {\n    //TODO: restore machine custom alphabet\n    FSAGraphParser.JSON.parse(e.postData.graphData, this.graphController.getGraph());\n  }\n}\nexport default UserRenameSymbolEventHandler;\n","import EventHandler from './EventHandler.js';\n\nimport * as FSAGraphParser from 'modules/fsa/graph/FSAGraphParser.js';\n\nclass UserDeleteSymbolEventHandler extends EventHandler\n{\n  constructor(eventLogger, machineController, graphController)\n  {\n    super(eventLogger, machineController, \"userPreDeleteSymbol\", \"userPostDeleteSymbol\");\n\n    this.graphController = graphController;\n  }\n\n  //Override\n  captureEvent(machineBuilder, symbol)\n  {\n    const graph = this.graphController.getGraph();\n    return {\n      graphData: FSAGraphParser.JSON.objectify(graph),\n      symbol: symbol\n    };\n  }\n\n  //Override\n  capturePostEvent(machineBuilder, symbol, targets)\n  {\n    const graph = this.graphController.getGraph();\n    const targetIDs = [];\n\n    for(const target of targets)\n    {\n      targetIDs.push(target.getGraphElementID());\n    }\n\n    return {\n      graphData: FSAGraphParser.JSON.objectify(graph),\n      symbol: symbol,\n      targets: targetIDs\n    };\n  }\n\n  //Override - this = event\n  applyUndo(e)\n  {\n    //TODO: restore machine custom alphabet\n    FSAGraphParser.JSON.parse(e.eventData.graphData, this.graphController.getGraph());\n  }\n\n  //Override - this = event\n  applyRedo(e)\n  {\n    //TODO: restore machine custom alphabet\n    FSAGraphParser.JSON.parse(e.postData.graphData, this.graphController.getGraph());\n  }\n}\nexport default UserDeleteSymbolEventHandler;\n","import GraphNodeInitialEventHandler from './controller/events/GraphNodeInitialEventHandler.js';\nimport GraphNodeMoveEventHandler from './controller/events/GraphNodeMoveEventHandler.js';\nimport GraphNodeMoveAllEventHandler from './controller/events/GraphNodeMoveAllEventHandler.js';\nimport GraphEdgeMoveEventHandler from './controller/events/GraphEdgeMoveEventHandler.js';\nimport GraphEdgeDestinationEventHandler from './controller/events/GraphEdgeDestinationEventHandler.js';\nimport GraphEdgeLabelEventHandler from './controller/events/GraphEdgeLabelEventHandler.js';\n\nimport UserCreateNodeEventHandler from './controller/events/UserCreateNodeEventHandler.js';\nimport UserToggleNodeEventHandler from './controller/events/UserToggleNodeEventHandler.js';\nimport UserDeleteNodesEventHandler from './controller/events/UserDeleteNodesEventHandler.js';\nimport UserRenameNodeEventHandler from './controller/events/UserRenameNodeEventHandler.js';\n\nimport UserCreateEdgeEventHandler from './controller/events/UserCreateEdgeEventHandler.js';\nimport UserDeleteEdgeEventHandler from './controller/events/UserDeleteEdgeEventHandler.js';\nimport UserImportGraphEventHandler from './controller/events/UserImportGraphEventHandler.js';\nimport SafeGraphEventHandler from './controller/events/SafeGraphEventHandler.js';\n\nimport UserChangeMachineEventHandler from './controller/events/UserChangeMachineEventHandler.js';\nimport UserConvertMachineEventHandler from './controller/events/UserConvertMachineEventHandler.js';\nimport UserRenameMachineEventHandler from './controller/events/UserRenameMachineEventHandler.js';\nimport UserRenameSymbolEventHandler from './controller/events/UserRenameSymbolEventHandler.js';\nimport UserDeleteSymbolEventHandler from './controller/events/UserDeleteSymbolEventHandler.js';\n\nclass EventManager\n{\n  constructor(undoManager)\n  {\n    this.graphController = null;\n    this.machineController = null;\n\n    this.eventHandlers = [];\n\n    this.undoManager = undoManager;\n  }\n\n  initialize(app)\n  {\n    this.graphController = app.getGraphController();\n    this.machineController = app.getMachineController();\n\n    const graph = this.graphController.getGraph();\n    const events = this.undoManager;\n\n    this.eventHandlers.push(new GraphNodeMoveEventHandler(events, this.graphController));\n    this.eventHandlers.push(new GraphNodeMoveAllEventHandler(events, this.graphController));\n    this.eventHandlers.push(new GraphEdgeMoveEventHandler(events, this.graphController));\n    this.eventHandlers.push(new GraphEdgeDestinationEventHandler(events, this.graphController));\n    this.eventHandlers.push(new GraphNodeInitialEventHandler(events, this.graphController));\n    this.eventHandlers.push(new GraphEdgeLabelEventHandler(events, this.graphController));\n\n    this.eventHandlers.push(new UserCreateNodeEventHandler(events, this.graphController));\n    this.eventHandlers.push(new UserRenameNodeEventHandler(events, this.graphController));\n    this.eventHandlers.push(new UserToggleNodeEventHandler(events, this.graphController));\n    this.eventHandlers.push(new UserDeleteNodesEventHandler(events, this.graphController));\n\n    this.eventHandlers.push(new UserCreateEdgeEventHandler(events, this.graphController));\n    this.eventHandlers.push(new UserDeleteEdgeEventHandler(events, this.graphController));\n\n    this.eventHandlers.push(new UserImportGraphEventHandler(events, this.graphController, this.machineController));\n    this.eventHandlers.push(new SafeGraphEventHandler(events, this.graphController, \"userPreChangeLayout\", \"userPostChangeLayout\"));\n\n    this.eventHandlers.push(new UserChangeMachineEventHandler(events, this.machineController));\n    this.eventHandlers.push(new UserConvertMachineEventHandler(events, this.machineController, this.graphController));\n    this.eventHandlers.push(new UserRenameMachineEventHandler(events, this.machineController));\n    this.eventHandlers.push(new UserRenameSymbolEventHandler(events, this.machineController, this.graphController));\n    this.eventHandlers.push(new UserDeleteSymbolEventHandler(events, this.machineController, this.graphController));\n  }\n\n  destroy()\n  {\n    for(const handler of this.eventHandlers)\n    {\n      handler.destroy();\n    }\n\n    //TODO: Remove all event listeners...\n    this.graphController.clearEventListeners();\n  }\n}\n\nexport default EventManager;\n","import React from 'react';\nimport './LabelEditor.css';\n\nimport Config from 'config.js';\nimport { SYMBOL_SEPARATOR, EMPTY_CHAR } from 'modules/fsa/graph/FSAEdge.js';\n\nimport FormattedInput from 'system/formattedinput/FormattedInput.js';\n\n//TODO: This is equivalent to 4em for toolbar height\nconst LABEL_OFFSET_Y = -64;\nconst EDITOR_OFFSET_Y = -36;\nconst DELETE_KEY = 8;\nconst DELETE_FORWARD_KEY = 46;\n\nconst RECOMMENDED_SYMBOLS = [\"0\", \"1\"];\nconst DEFAULT_SYMBOLS = [EMPTY_CHAR];\nconst DELETE_ON_EMPTY = true;\n\nclass LabelEditor extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.parentElement = null;\n    this.inputElement = null;\n\n    //HACK: this is so if the click is focused back to the label editor, then it will NOT close\n    this._timer = null;\n    this._prevValue = \"\";\n\n    this.state = {\n      target: null,\n      callback: null\n    };\n\n    this.onContextMenu = this.onContextMenu.bind(this);\n    this.onFormat = this.onFormat.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  openEditor(targetEdge, defaultText=null, replace=true, callback=null)\n  {\n    //If not yet initilized, ignore any editor access\n    if (!this.inputElement || !this.parentElement)\n    {\n      throw new Error(\"Trying to open editor that has not yet mounted\");\n    }\n\n    this.setState((prev, props) => {\n      return {\n        target: targetEdge,\n        callback: callback\n      };\n    });\n\n    this.inputElement.resetValue(targetEdge.getEdgeLabel(), () => {\n      if (defaultText) this.inputElement.setValue(defaultText);\n\n      this._prevValue = targetEdge.getEdgeLabel();\n      this.parentElement.focus();\n      this.inputElement.focus(replace);\n    });\n  }\n\n  closeEditor(saveOnExit=false)\n  {\n    //If not yet initilized, ignore any editor access\n    if (!this.inputElement || !this.parentElement)\n    {\n      throw new Error(\"Trying to open editor that has not yet mounted\");\n    }\n\n    //Save data\n    if (this.state.target !== null)\n    {\n      if (saveOnExit)\n      {\n        let value = this.inputElement.value;\n        this.state.target.setEdgeLabel(value);\n      }\n      else\n      {\n        if (!this.state.target.getEdgeLabel())\n        {\n          //Make sure its empty (and let edge handle default labels)\n          this.state.target.setEdgeLabel(null);\n\n          //Delete it since it is not a valid edge\n          if (DELETE_ON_EMPTY)\n          {\n            this.props.graphController.getGraph().deleteEdge(this.state.target);\n          }\n        }\n      }\n\n      this.setState({target: null});\n\n      if (this.state.callback) this.state.callback();\n    }\n\n    //Reset label editor\n    this.inputElement.blur();\n  }\n\n  hasFocus()\n  {\n    return this.inputElement.hasFocus();\n  }\n\n  isEditorOpen()\n  {\n    return this.state.target !== null;\n  }\n\n  onContextMenu(e)\n  {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  appendSymbol(symbol)\n  {\n    this.inputElement.appendValue(symbol, SYMBOL_SEPARATOR);\n    this.inputElement.focus(false);\n  }\n\n  onSubmit(newValue, prevValue)\n  {\n    //this._prevValue = newValue;\n    //If the value has changed or the value remained empty...\n    if (newValue != prevValue)\n    {\n      //this.closeEditor(true);\n    }\n    else\n    {\n      //TODO: This was commented out for some reason...\n      //Will close due to timer...\n      this.closeEditor(false);\n    }\n  }\n\n  onFormat(value)\n  {\n    //return this.props.machineController.getMachineBuilder().formatAlphabetString(value, true);\n    return this.props.machineController.getLabelFormatter().call(null, value, true);\n  }\n\n  render()\n  {\n    const inputController = this.props.inputController;\n    const viewport = inputController.getInputAdapter().getViewport();\n    const graphController = this.props.graphController;//This is used in closeEditor()\n    const machineController = this.props.machineController;//This is also used in callbacks\n    const screen = this.props.screen;\n\n    const targetStyle = {\n      visibility: \"hidden\"\n    };\n\n    const target = this.state.target;\n\n    if (target)\n    {\n      targetStyle.visibility = \"visible\";\n\n      //Assumes target is an instance of Edge\n      const center = target.getCenterPoint();\n      const screenPos = transformViewToScreen(screen,\n        center.x + viewport.getOffsetX(),\n        center.y + viewport.getOffsetY());\n      const x = screenPos.x;\n      const y = screenPos.y + LABEL_OFFSET_Y + EDITOR_OFFSET_Y;\n      const offsetX = -(this.parentElement.offsetWidth / 2);\n      const offsetY = -(this.parentElement.offsetHeight / 2);\n\n      targetStyle.top = (y + offsetY) + \"px\";\n      targetStyle.left = (x + offsetX) + \"px\";\n    }\n\n    const usedAlphabet = machineController.getMachineBuilder().getMachine().getAlphabet();\n\n    return <div className=\"bubble\" id=\"label-editor\" ref={ref=>this.parentElement=ref}\n      tabIndex={\"0\"/*This is to allow div's to focus/blur*/}\n      style={targetStyle}\n      onContextMenu={this.onContextMenu}\n      onFocus={(e)=>{\n        //HACK: delete the timer that will exit labelEditor\n        clearTimeout(this._timer);\n      }}\n      onBlur={(e)=>{\n        //HACK: start the timer that will exit labelEditor if not return focus\n        this._timer = setTimeout(() => this.closeEditor(true), 10);\n      }}>\n      <FormattedInput className=\"label-editor-input\" ref={ref=>this.inputElement=ref}\n        formatter={this.onFormat}\n        onSubmit={this.onSubmit}\n        captureOnExit={\"none\"}/>\n      <div className=\"label-editor-tray\">\n        {\n          usedAlphabet &&\n          <span className=\"label-editor-tray-used\">\n            {\n              usedAlphabet.map((e, i) => {\n                if (e.length < 1) return null;\n                return <button key={i} onClick={ev=>this.appendSymbol(e)}>{e}</button>\n              })\n            }\n          </span>\n        }\n        <span className=\"label-editor-tray-default\">\n          {\n            usedAlphabet &&\n            usedAlphabet.length <= 1 &&\n            RECOMMENDED_SYMBOLS.map((e, i) => {\n              return <button key={i} onClick={ev=>this.appendSymbol(e)}>\n              {e}\n              </button>;\n            })\n          }\n          {\n            DEFAULT_SYMBOLS.map((e, i) => {\n              return <button key={i} onClick={ev=>this.appendSymbol(e)}>\n              {e}\n              </button>;\n            })\n          }\n        </span>\n      </div>\n    </div>;\n  }\n}\n\nfunction transformViewToScreen(svg, x, y)\n{\n  const ctm = svg.getScreenCTM();\n  return {\n    x: (x * ctm.a) + ctm.e,\n    y: (y * ctm.d) + ctm.f\n  };\n}\n\nexport default LabelEditor;\n","import AbstractGraphExporter from 'modules/base/exporter/AbstractGraphExporter.js';\n\nimport JSONIcon from 'icons/flat/JSONIcon.js';\nimport { JSON as JSONGraphParser } from 'modules/fsa/graph/FSAGraphParser.js';\nimport Downloader from 'util/Downloader.js';\n\nclass FSAGraphExporter extends AbstractGraphExporter\n{\n  constructor() { super(); }\n\n  fromJSON(data, app)\n  {\n    const graphController = app.getGraphController();\n    const machineController = app.getMachineController();\n    const machineBuilder = machineController.getMachineBuilder();\n    const graph = graphController.getGraph();\n\n    const metadata = '_metadata' in data ? data['_metadata'] : {};\n    const newGraph = JSONGraphParser.parse(data.graphData, graph);\n\n    //HACK: this should be calculated elsewhere\n    const machineData = data.machineData;\n    const machineName = machineData.name;\n    if (machineName) machineController.setMachineName(machineName);\n    const machineType = machineData.type;\n    if (machineType) machineController.setMachineType(machineType);\n    const customSymbols = machineData.symbols;\n    if (customSymbols)\n    {\n      machineBuilder._symbols.length = 0;\n      for(const symbol of customSymbols)\n      {\n        machineBuilder._symbols.push(symbol);\n      }\n    }\n    const statePrefix = machineData.statePrefix;\n    if (statePrefix) machineBuilder.getLabeler().prefix = statePrefix;\n\n    return newGraph;\n  }\n\n  toJSON(graphData, app)\n  {\n    const module = app.getCurrentModule();\n    const graphController = app.getGraphController();\n    const machineController = app.getMachineController();\n    const machineBuilder = machineController.getMachineBuilder();\n\n    const dst = {};\n    dst[\"_metadata\"] = {\n      module: module.getModuleName(),\n      version: process.env.VERSION + \":\" + module.getModuleVersion(),\n      timestamp: new Date().toString()\n    };\n    dst[\"graphData\"] = graphData;\n    dst[\"machineData\"] = {\n      name: machineController.getMachineName(),\n      type: machineController.getMachineType(),\n      symbols: machineController.getCustomSymbols(),\n      statePrefix: machineBuilder.getLabeler().prefix\n    };\n    return dst;\n  }\n\n  //Override\n  importFromData(data, app)\n  {\n    this.fromJSON(data, app);\n  }\n\n  //Override\n  exportToData(app)\n  {\n    const graph = app.getGraphController().getGraph();\n    const graphData = JSONGraphParser.objectify(graph);\n    const result = this.toJSON(graphData, app);\n    return result;\n  }\n\n  //Override\n  doesSupportData()\n  {\n    return true;\n  }\n\n  //Override\n  importFromFile(fileBlob, app)\n  {\n    return new Promise((resolve, reject) => {\n      const filename = fileBlob.name;\n      if (!filename.endsWith(this.getFileType()))\n      {\n        throw new Error(\"Trying to import invalid file type for \\'\" + this.getFileType() + \"\\': \" + filename);\n      }\n\n      const reader = new FileReader();\n      reader.onload = e => {\n        const graphController = app.getGraphController();\n        const machineController = app.getMachineController();\n        const data = e.target.result;\n        const name = filename.substring(0, filename.length - this.getFileType().length - 1);\n        const graph = graphController.getGraph();\n\n        //TODO: this should not be here, this should exist somewhere in graphController\n        graphController.emit(\"userPreImportGraph\", graph);\n\n        try\n        {\n          const jsonData = JSON.parse(data);\n\n          this.fromJSON(jsonData, app);\n\n          graphController.emit(\"userImportGraph\", graph);\n\n          if (machineController)\n          {\n            machineController.setMachineName(name);\n          }\n\n          resolve();\n        }\n        catch (e)\n        {\n          reader.abort();\n          reject(e);\n        }\n        finally\n        {\n          graphController.emit(\"userPostImportGraph\", graph);\n        }\n      };\n\n      reader.onerror = e => {\n        reject(new Error(\"Unable to import file: \" + e.target.error.code));\n      }\n\n      reader.readAsText(fileBlob);\n    });\n  }\n\n  //Override\n  exportToFile(filename, app)\n  {\n    const graph = app.getGraphController().getGraph();\n    const graphData = JSONGraphParser.objectify(graph);\n    const dst = this.toJSON(graphData, app);\n    const jsonString = JSON.stringify(dst);\n    Downloader.downloadText(filename + '.fsa.' + this.getFileType(), jsonString);\n  }\n\n  //Override\n  doesSupportFile()\n  {\n    return true;\n  }\n\n  //Override\n  canImport()\n  {\n    return true;\n  }\n\n  //Override\n  getTitle()\n  {\n    return I18N.toString(\"file.export.machine.hint\");\n  }\n\n  //Override\n  getLabel()\n  {\n    return I18N.toString(\"file.export.machine\");\n  }\n\n  //Override\n  getFileType()\n  {\n    return \"json\";\n  }\n\n  //Override\n  getIconComponentClass()\n  {\n    return JSONIcon;\n  }\n}\n\nexport default FSAGraphExporter;\n","//https://www.flaticon.com/free-icon/xml_136526\nimport React from 'react';\n\nclass XMLIcon extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    return <svg className=\"xml-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 56 56\">\n      <g>\n        <path fill=\"#E9E9E0\" d=\"M36.985,0H7.963C7.155,0,6.5,0.655,6.5,1.926V55c0,0.345,0.655,1,1.463,1h40.074 c0.808,0,1.463-0.655,1.463-1V12.978c0-0.696-0.093-0.92-0.257-1.085L37.607,0.257C37.442,0.093,37.218,0,36.985,0z\"/>\n        <polygon fill=\"#D9D7CA\" points=\"37.5,0.151 37.5,12 49.349,12 \t\"/>\n        <path fill=\"#F29C1F\" d=\"M48.037,56H7.963C7.155,56,6.5,55.345,6.5,54.537V39h43v15.537C49.5,55.345,48.845,56,48.037,56z\"/>\n        <g>\n          <path fill=\"#FFFFFF\" d=\"M19.379,48.105L21.936,53h-1.9l-1.6-3.801h-0.137L16.576,53h-1.9l2.557-4.895l-2.721-5.182h1.873 l1.777,4.102h0.137l1.928-4.102H22.1L19.379,48.105z\"/>\n          <path fill=\"#FFFFFF\" d=\"M31.998,42.924h1.668V53h-1.668v-6.932l-2.256,5.605h-1.449l-2.27-5.605V53h-1.668V42.924h1.668 l2.994,6.891L31.998,42.924z\"/>\n          <path fill=\"#FFFFFF\" d=\"M37.863,42.924v8.832h4.635V53h-6.303V42.924H37.863z\"/>\n        </g>\n        <path fill=\"#F29C1F\" d=\"M15.5,24c-0.256,0-0.512-0.098-0.707-0.293c-0.391-0.391-0.391-1.023,0-1.414l6-6 c0.391-0.391,1.023-0.391,1.414,0s0.391,1.023,0,1.414l-6,6C16.012,23.902,15.756,24,15.5,24z\"/>\n        <path fill=\"#F29C1F\" d=\"M21.5,30c-0.256,0-0.512-0.098-0.707-0.293l-6-6c-0.391-0.391-0.391-1.023,0-1.414 s1.023-0.391,1.414,0l6,6c0.391,0.391,0.391,1.023,0,1.414C22.012,29.902,21.756,30,21.5,30z\"/>\n        <path fill=\"#F29C1F\" d=\"M33.5,30c-0.256,0-0.512-0.098-0.707-0.293c-0.391-0.391-0.391-1.023,0-1.414l6-6 c0.391-0.391,1.023-0.391,1.414,0s0.391,1.023,0,1.414l-6,6C34.012,29.902,33.756,30,33.5,30z\"/>\n        <path fill=\"#F29C1F\" d=\"M39.5,24c-0.256,0-0.512-0.098-0.707-0.293l-6-6c-0.391-0.391-0.391-1.023,0-1.414 s1.023-0.391,1.414,0l6,6c0.391,0.391,0.391,1.023,0,1.414C40.012,23.902,39.756,24,39.5,24z\"/>\n        <path fill=\"#F29C1F\" d=\"M24.5,32c-0.11,0-0.223-0.019-0.333-0.058c-0.521-0.184-0.794-0.755-0.61-1.276l6-17 c0.185-0.521,0.753-0.795,1.276-0.61c0.521,0.184,0.794,0.755,0.61,1.276l-6,17C25.298,31.744,24.912,32,24.5,32z\"/>\n      </g>\n    </svg>;\n  }\n}\n\nexport default XMLIcon;\n","import AbstractGraphExporter from 'modules/base/exporter/AbstractGraphExporter.js';\n\nimport XMLIcon from 'icons/flat/XMLIcon.js';\nimport { XML as XMLGraphParser } from 'modules/fsa/graph/FSAGraphParser.js';\nimport Downloader from 'util/Downloader.js';\n\nclass JFLAPGraphExporter extends AbstractGraphExporter\n{\n  constructor() { super(); }\n\n  //Override\n  importFromFile(fileBlob, app)\n  {\n    return new Promise((resolve, reject) => {\n      const filename = fileBlob.name;\n      if (!filename.endsWith(this.getFileType()))\n      {\n        throw new Error(\"Trying to import invalid file type for \\'\" + this.getFileType() + \"\\': \" + filename);\n      }\n\n      const reader = new FileReader();\n      reader.onload = e => {\n        const graphController = app.getGraphController();\n        const machineController = app.getMachineController();\n        const data = e.target.result;\n        const name = filename.substring(0, filename.length - this.getFileType().length - 1);\n        const graph = graphController.getGraph();\n\n        //TODO: this should not be here, this should exist somewhere in graphController\n        graphController.emit(\"userPreImportGraph\", graph);\n\n        try\n        {\n          const xmlData = new DOMParser().parseFromString(data, \"text/xml\");\n          XMLGraphParser.parse(xmlData, graph);\n\n          graphController.emit(\"userImportGraph\", graph);\n\n          if (machineController)\n          {\n            machineController.setMachineName(name);\n          }\n\n          resolve();\n        }\n        catch (e)\n        {\n          reader.abort();\n          reject(e);\n        }\n        finally\n        {\n          graphController.emit(\"userPostImportGraph\", graph);\n        }\n      };\n\n      reader.onerror = e => {\n        reject(new Error(\"Unable to import file: \" + e.target.error.code));\n      }\n\n      reader.readAsText(fileBlob);\n    });\n  }\n\n  //Override\n  exportToFile(filename, app)\n  {\n    const graph = app.getGraphController().getGraph();\n    const graphData = XMLGraphParser.objectify(graph);\n    const xmlString = new XMLSerializer().serializeToString(graphData);\n    Downloader.downloadText(filename + '.' + this.getFileType(), xmlString);\n  }\n\n  //Override\n  doesSupportFile()\n  {\n    return true;\n  }\n\n  //Override\n  canImport()\n  {\n    return true;\n  }\n\n  //Override\n  getTitle()\n  {\n    return I18N.toString(\"file.export.jff.hint\");\n  }\n\n  //Override\n  getLabel()\n  {\n    return I18N.toString(\"file.export.jff\");\n  }\n\n  //Override\n  getFileType()\n  {\n    return \"jff\";\n  }\n\n  //Override\n  getIconComponentClass()\n  {\n    return XMLIcon;\n  }\n}\n\nexport default JFLAPGraphExporter;\n","import AbstractModule from 'modules/base/AbstractModule.js';\n\nimport Notifications from 'system/notification/Notifications.js';\n\nimport OverviewPanel from './panels/overview/OverviewPanel.js';\nimport TestingPanel from './panels/testing/TestingPanel.js';\nimport AnalysisPanel from './panels/analysis/AnalysisPanel.js';\nimport AboutPanel from './panels/about/AboutPanel.js';\n\nimport InputController from './controller/InputController.js';\nimport GraphController from './controller/GraphController.js';\nimport MachineController from './controller/MachineController.js';\n\nimport FSAGraphRenderer from './graph/renderer/FSAGraphRenderer.js';\nimport FSAGraphOverlayRenderer from './graph/renderer/FSAGraphOverlayRenderer.js';\nimport ViewportRenderer from './renderer/ViewportRenderer.js';\n\nimport FSABuilder from './builder/FSABuilder.js';\nimport GraphLayout from './graph/GraphLayout.js';\nimport EventManager from './EventManager.js';\nimport LabelEditor from './editor/LabelEditor.js';\nimport TestingManager from './testing/TestingManager.js';\n\nimport FSAGraphExporter from './exporter/FSAGraphExporter.js';\nimport JFLAPGraphExporter from './exporter/JFLAPGraphExporter.js';\n\nconst VERSION = \"0.0.1\";\nconst PANELS = [TestingPanel, OverviewPanel, AnalysisPanel];\nconst EXPORTERS = [\n  new FSAGraphExporter(),\n  new JFLAPGraphExporter()\n];\n\nclass FSAModule extends AbstractModule\n{\n  constructor(app)\n  {\n    super(app);\n\n    this._refreshRate = 60;\n    this._ticks = 0;\n\n    this._inputController = new InputController(this, app.getInputAdapter());\n    this._graphController = new GraphController(this);\n    this._machineController = new MachineController(this);\n\n    this._machineBuilder = new FSABuilder(this._graphController.getGraph());\n\n    this._eventManager = new EventManager(app.getUndoManager());\n    this._testingManager = new TestingManager();\n  }\n\n  //Override\n  initialize(app)\n  {\n    super.initialize(app);\n\n    this._inputController.initialize(app);\n    this._graphController.initialize(app);\n    this._machineController.initialize(app);\n\n    this._machineBuilder.initialize(app);\n\n    this._eventManager.initialize(app);\n\n    this._testingManager.initialize(app);\n\n    //Notify on create in delete mode\n    const tryCreateWhileTrash = () => {\n      if (this._inputController.isTrashMode())\n      {\n        Notifications.addMessage(I18N.toString(\"message.warning.cannotmodify\"), \"warning\", \"tryCreateWhileTrash\");\n      }\n    };\n    this._graphController.on(\"tryCreateWhileTrash\", tryCreateWhileTrash);\n  }\n\n  //Override\n  destroy(app)\n  {\n    this._testingManager.destroy();\n\n    this._eventManager.destroy();\n\n    this._machineBuilder.destroy();\n\n    this._machineController.destroy();\n    this._graphController.destroy();\n    this._inputController.destroy();\n\n    super.destroy(app);\n  }\n\n  //Override\n  update(app)\n  {\n    this._inputController.update();\n\n    if (--this._ticks <= 0)\n    {\n      this._machineBuilder.update();\n      this._ticks = this._refreshRate;\n    }\n  }\n\n  getGraph()\n  {\n    return this._graphController.getGraph();\n  }\n\n  getTestingManager()\n  {\n    return this._testingManager;\n  }\n\n  getDefaultGraphLayout()\n  {\n    return GraphLayout;\n  }\n\n  getMachineBuilder()\n  {\n    return this._machineBuilder;\n  }\n\n  getLabelFormatter()\n  {\n    return this._machineBuilder.formatAlphabetString.bind(this._machineBuilder);\n  }\n\n  getLabelEditor()\n  {\n    return LabelEditor;\n  }\n\n  //Override\n  getRenderer(renderLayer)\n  {\n    switch(renderLayer)\n    {\n      case \"graphoverlay\":\n        return FSAGraphOverlayRenderer;\n      case \"viewport\":\n        return ViewportRenderer;\n    }\n    return null;\n  }\n\n  //Override\n  getGraphRenderer() { return FSAGraphRenderer; }\n  //Override\n  getInputController() { return this._inputController; }\n  //Override\n  getGraphController() { return this._graphController; }\n  //Override\n  getMachineController() { return this._machineController; }\n  //Override\n  getDefaultGraphExporter() { return EXPORTERS[0]; }\n  //Override\n  getGraphExporters() { return EXPORTERS; }\n  //Override\n  getModuleVersion() { return VERSION; }\n  //Override\n  getDefaultModulePanel() { return AboutPanel; }\n  //Override\n  getModulePanels() { return PANELS; }\n  //Override\n  getModuleName() { return \"fsa\"; }\n  //Override\n  getLocalizedModuleName() { return this._machineBuilder.getMachineType(); }\n}\nexport default FSAModule;\n"],"sourceRoot":""}