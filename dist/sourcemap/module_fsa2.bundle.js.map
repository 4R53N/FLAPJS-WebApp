{"version":3,"sources":["webpack:///./src/app/modules/fsa2/renderer/FSANodeRenderer.js","webpack:///./src/app/modules/fsa2/renderer/FSAEdgeRenderer.js","webpack:///./src/app/modules/fsa2/renderer/InitialMarkerRenderer.js","webpack:///./src/app/modules/fsa2/renderer/FSAGraphRenderer.js","webpack:///./src/app/modules/fsa2/renderer/FSALabelEditorRenderer.js","webpack:///./src/app/modules/fsa2/components/panels/overview/states/StateListElement.js","webpack:///./src/app/modules/fsa2/components/panels/overview/states/StateListView.js","webpack:///./src/app/modules/fsa2/components/panels/overview/alphabet/AlphabetListElement.js","webpack:///./src/app/modules/fsa2/components/panels/overview/alphabet/AlphabetListView.js","webpack:///./src/app/modules/fsa2/components/panels/overview/transitions/TransitionChartView.js","webpack:///./src/app/modules/fsa2/components/panels/overview/transitions/TransitionTableView.js","webpack:///./src/app/modules/fsa2/components/panels/overview/AutoStateLabelView.js","webpack:///./src/app/modules/fsa2/components/panels/overview/OverviewPanel.js","webpack:///./src/app/modules/fsa2/components/panels/testing/TestItem.js","webpack:///./src/app/modules/fsa2/components/panels/testing/TestListView.js","webpack:///./src/app/modules/fsa2/components/notifications/NFAToDFAConversionNotificationLayout.js","webpack:///./src/app/modules/fsa2/components/notifications/StateNotificationLayout.js","webpack:///./src/app/modules/fsa2/components/notifications/TransitionNotificationLayout.js","webpack:///./src/app/modules/fsa2/components/notifications/StateMissingTransitionNotificationLayout.js","webpack:///./src/app/modules/fsa2/components/notifications/StateUnreachableNotificationLayout.js","webpack:///./src/app/modules/fsa2/components/notifications/FSANotifications.js","webpack:///./src/app/modules/fsa2/components/panels/testing/TestingPanel.js","webpack:///./src/app/modules/fsa2/components/panels/analysis/AnalysisPanel.js","webpack:///./src/app/modules/fsa2/tester/TapeContext.js","webpack:///./src/app/modules/fsa2/tester/StringTester.js","webpack:///./src/app/modules/fsa2/FSAErrorChecker.js","webpack:///./src/app/modules/fsa2/components/views/EditPane.js","webpack:///./src/app/modules/fsa2/components/views/TapePane.js","webpack:///./src/app/experimental/iconset/flat/XMLFileIcon.js","webpack:///./src/app/modules/fsa2/exporter/JFLAPGraphExporter.js","webpack:///./src/app/modules/fsa2/FSAModule.js","webpack:///./src/app/experimental/components/IconButton.js","webpack:///./src/app/experimental/panels/PanelContainer.js","webpack:///./src/app/session/manager/notification/components/DefaultNotificationLayout.js","webpack:///./src/app/modules/fsa2/machine/FSA.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphElementInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/pickhandler/PickHandler.js","webpack:///./src/app/session/manager/export/AbstractGraphExporter.js","webpack:///./src/app/experimental/iconset/TinyDownIcon.js","webpack:///./src/app/experimental/iconset/TinyUpIcon.js","webpack:///./src/app/experimental/panels/PanelSection.js","webpack:///./src/app/session/manager/notification/Notification.js","webpack:///./src/app/session/manager/notification/NotificationManager.js","webpack:///./src/app/util/input/AbstractInputHandler.js","webpack:///./src/app/session/manager/RenderManager.js","webpack:///./src/app/experimental/panels/PanelSwitch.js","webpack:///./src/app/experimental/iconset/UploadIcon.js","webpack:///./src/app/experimental/iconset/flat/JSONFileIcon.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/InputHandler.js","webpack:///./src/app/experimental/iconset/BoxAddIcon.js","webpack:///./src/app/experimental/iconset/RunningManIcon.js","webpack:///./src/app/experimental/components/IconUploadButton.js","webpack:///./src/app/experimental/iconset/DownloadIcon.js","webpack:///./src/app/experimental/iconset/EditPencilIcon.js","webpack:///./src/app/session/manager/hotkey/HotKeyManager.js","webpack:///./src/app/session/manager/undo/AbstractEventHandler.js","webpack:///./src/app/experimental/components/IconStateButton.js","webpack:///./src/app/experimental/iconset/FullscreenIcon.js","webpack:///./src/app/experimental/iconset/FullscreenExitIcon.js","webpack:///./src/app/experimental/widgets/FullscreenWidget.js","webpack:///./src/app/experimental/iconset/ZoomInIcon.js","webpack:///./src/app/experimental/iconset/ZoomOutIcon.js","webpack:///./src/app/experimental/widgets/ZoomWidget.js","webpack:///./src/app/experimental/iconset/PinpointIcon.js","webpack:///./src/app/experimental/widgets/FocusCenterWidget.js","webpack:///./src/app/experimental/widgets/NavbarWidget.js","webpack:///./src/app/experimental/panels/PanelDivider.js","webpack:///./src/app/renderer/EdgeRenderer.js","webpack:///./src/app/modules/nodalgraph/NodalGraphImageExporter.js","webpack:///./src/app/modules/nodalgraph/SafeGraphEventHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphNodeInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphEdgeInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphEndpointInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphNodeCreateInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/pickhandler/GraphNodePickHandler.js","webpack:///./src/app/modules/nodalgraph/controller/pickhandler/GraphEdgePickHandler.js","webpack:///./src/app/modules/nodalgraph/controller/pickhandler/GraphEndpointPickHandler.js","webpack:///./src/app/experimental/UserUtil.js","webpack:///./src/app/experimental/iconset/PageContentIcon.js","webpack:///./src/app/experimental/iconset/CrossIcon.js","webpack:///./src/app/experimental/iconset/AddIcon.js","webpack:///./src/app/experimental/iconset/SubtractIcon.js","webpack:///./src/app/experimental/iconset/CheckCircleIcon.js","webpack:///./src/app/experimental/iconset/CrossCircleIcon.js","webpack:///./src/app/experimental/iconset/PendingIcon.js","webpack:///./src/app/experimental/panels/PanelCheckbox.js","webpack:///./src/app/graph/GraphNodeSelectionBox.js","webpack:///./src/app/modules/nodalgraph/controller/GraphPicker.js","webpack:///./src/app/modules/nodalgraph/controller/InputController.js","webpack:///./src/app/modules/nodalgraph/controller/GraphController.js","webpack:///./src/app/modules/nodalgraph/controller/SelectionBoxInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/ViewportInputHandler.js","webpack:///./src/app/deprecated/system/patterninput/PatternInput.js","webpack:///./src/app/session/manager/labeleditor/LabelEditorView.js","webpack:///./src/app/session/manager/labeleditor/LabelEditorManager.js","webpack:///./src/app/modules/nodalgraph/manager/NodalGraphInputManager.js","webpack:///./src/app/modules/fsa2/machine/util/ConvertFSA.js","webpack:///./src/app/modules/fsa2/machine/util/SolveFSA.js","webpack:///./src/app/modules/fsa2/machine/util/InvertDFA.js","webpack:///./src/app/modules/fsa2/machine/FSAUtils.js","webpack:///./src/app/modules/nodalgraph/controller/renderer/BoxRenderer.js","webpack:///./src/app/modules/nodalgraph/controller/renderer/HighlightRenderer.js","webpack:///./src/app/modules/nodalgraph/controller/renderer/SelectionBoxRenderer.js","webpack:///./src/app/modules/nodalgraph/controller/renderer/GraphInputRenderer.js","webpack:///./src/app/experimental/iconset/TrashCanDetailedIcon.js","webpack:///./src/app/experimental/widgets/TrashCanWidget.js","webpack:///./src/app/experimental/iconset/MoveIcon.js","webpack:///./src/app/experimental/widgets/ModeSelectTray.js","webpack:///./src/app/modules/fsa2/machine/FSABuilder.js","webpack:///./src/app/modules/fsa2/controller/MachineController.js","webpack:///./src/app/deprecated/system/patterninput/PatternInputButton.js","webpack:///./src/app/experimental/iconset/TriangleIcon.js","webpack:///./src/app/modules/fsa2/exporter/FSAGraphExporter.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphInitialInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphNodeAcceptInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/pickhandler/GraphInitialPickHandler.js","webpack:///./src/app/experimental/iconset/DownArrowIcon.js","webpack:///./src/app/experimental/widgets/TapeWidget.js"],"names":["FSANodeRenderer","props","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","React","Component","node","nodeLabel","getNodeLabel","react_default","a","createElement","className","cx","x","cy","y","r","getNodeSize","fill","stroke","getNodeAccept","pointerEvents","style","userSelect","fontSize","Math","min","max","length","textAnchor","FSAEdgeRenderer","FSAEdgeRenderer_classCallCheck","FSAEdgeRenderer_possibleConstructorReturn","FSAEdgeRenderer_getPrototypeOf","edge","start","getStartPoint","end","getEndPoint","center","getCenterPoint","labels","getEdgeLabel","getEdgeSymbolsFromLabel","edgeDir","getEdgeDirection","EdgeRenderer","directed","DIRECTED_FORWARD","from","to","label","join","direction","color","InitialMarkerRenderer","InitialMarkerRenderer_classCallCheck","InitialMarkerRenderer_possibleConstructorReturn","InitialMarkerRenderer_getPrototypeOf","FSANode","d","FSAGraphRenderer","FSAGraphRenderer_classCallCheck","FSAGraphRenderer_possibleConstructorReturn","FSAGraphRenderer_getPrototypeOf","currentModule","inputController","getInputController","graph","getGraphController","getGraph","isEmpty","Fragment","x1","y1","x2","y2","getNodes","map","e","i","renderer_FSANodeRenderer","key","getGraphElementID","getEdges","renderer_FSAEdgeRenderer","getStartNode","getInputHandlers","ghostInitialMarker","renderer_InitialMarkerRenderer","RECOMMENDED_SYMBOLS","DEFAULT_SYMBOLS","EMPTY_CHAR","FSALabelEditorRenderer","FSALabelEditorRenderer_classCallCheck","FSALabelEditorRenderer_possibleConstructorReturn","FSALabelEditorRenderer_getPrototypeOf","symbol","labelEditor","parent","inputComponent","PatternInputButton","title","onClick","appendValue","SYMBOL_SEPARATOR","_this","alphabet","getMachineController","getAlphabet","showEdgeTray","getTarget","GraphEdge","showNodeTray","GraphNode","showRecommended","Style","tray_container","tray_used","renderSymbol","tray_default","getNodeCustom","setNodeCustom","setNodeAccept","StateListElement","StateListElement_classCallCheck","StateListElement_getPrototypeOf","state","value","error","onValueChange","bind","StateListElement_assertThisInitialized","onFocus","onBlur","onKeyDown","onKeyUp","target","setState","select","nextLabel","keyCode","preventDefault","stopPropagation","blur","trim","onChange","inputValue","nodeCustom","nodeAccept","displayValue","id","element_container","spellCheck","width","StateListView","StateListView_classCallCheck","StateListView_getPrototypeOf","_prevX","_prevY","onElementAdd","StateListView_assertThisInitialized","onElementFocus","onElementBlur","onElementChange","graphController","createNode","focusOnNode","element","getNodesByLabel","renameNode","applyAutoRename","deleteTargetNode","otherNodes","Error","_this2","nodes","list_container","element_list","TriangleIcon","first_marker","overview_states_StateListElement","IconButton","add_button","BoxAddIcon","AlphabetListElement","AlphabetListElement_classCallCheck","AlphabetListElement_getPrototypeOf","_inputElement","AlphabetListElement_assertThisInitialized","nextSymbol","focus","inputSymbol","displaySymbol","symbolUsed","used","ref","maxLength","AlphabetListView","AlphabetListView_classCallCheck","AlphabetListView_getPrototypeOf","newSymbolComponent","useNewSymbol","AlphabetListView_assertThisInitialized","machineController","machine","getMachineBuilder","getMachine","isSymbol","renameSymbol","createSymbol","deleteSymbol","result","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","push","overview_alphabet_AlphabetListElement","isUsedSymbol","err","return","_this3","renderAlphabetList","display","TransitionChartView","TransitionChartView_classCallCheck","TransitionChartView_possibleConstructorReturn","TransitionChartView_getPrototypeOf","_cachedMachineHash","_cachedMachineComponents","deterministic","isDeterministic","destinations","doTransition","transitionString","EMPTY_SYMBOL","getStateLabel","string","getStateID","chart_key","chart_value","machineHash","getHashCode","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","getStates","entry","renderTransitionEntry","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getMachineType","chart_container","fontFamily","renderTransitionTable","SYMBOL_AXIS","TransitionTableView","TransitionTableView_classCallCheck","TransitionTableView_getPrototypeOf","rowAxis","onRowAxisSwitch","TransitionTableView_assertThisInitialized","prev","other","disabled","table_entry","rowComponents","renderTableEntryForSymbolAxis","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","symbols","getTransitionSymbols","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","scope","table_axis_header","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","table_container","renderTableAxis","renderTableEntries","AutoStateLabelView","AutoStateLabelView_classCallCheck","AutoStateLabelView_getPrototypeOf","onAutoStatePrefixSubmit","AutoStateLabelView_assertThisInitialized","onAutoStatePrefixFormat","graphLabeler","getGraphLabeler","getDefaultNodeLabelPrefix","setDefaultNodeLabelPrefix","select_container","select_label","FormattedInput","prefix_editor","defaultValue","captureOnExit","formatter","onSubmit","postfix_selector","onMachineTypeChange","OverviewPanel","OverviewPanel_classCallCheck","OverviewPanel_getPrototypeOf","OverviewPanel_assertThisInitialized","onAutoLayoutApply","onAutoLayoutChange","onAutoLabelChange","onSnapToGridChange","newValue","session","getCurrentModule","setDeterministic","applyAutoLayout","setAutoRenameNodes","checked","drawer","machineType","autoRename","shouldAutoRenameNodes","drawerFull","isDrawerFullscreen","PanelContainer","TITLE","machine_type_select","PanelDivider","PanelSection","initial","full","overview_states_StateListView","overview_alphabet_AlphabetListView","getEdgeCount","overview_transitions_TransitionChartView","getNodeCount","overview_transitions_TransitionTableView","panels_overview_AutoStateLabelView","autolayout_button","I18N","toString","PanelSwitch","Object","defineProperty","get","DEFAULT_MODE","TestItem","TestItem_classCallCheck","TestItem_getPrototypeOf","inputElement","status","TestItem_assertThisInitialized","callback","arguments","nextValue","onDelete","onTest","active","placeholder","subtitle","test_item_container","test_button","CheckCircleIcon","CrossCircleIcon","PendingIcon","RunningManIcon","test_input","type","delete_button","SubtractIcon","ACCEPT_FILE_TYPES","TEST_FILENAME","TestListView","TestListView_classCallCheck","TestListView_getPrototypeOf","_testList","_testName","onTestNew","TestListView_assertThisInitialized","onTestUpload","onTestDownload","onTestClose","onTestAdd","onTestDelete","onTestTest","onTestRunAll","onGraphChange","getGraphChangeHandler","addListener","removeListener","resetStatus","fileBlob","reader","FileReader","onload","event","name","tests","split","test","guid","abort","readAsText","testStrings","getValue","downloadText","tester","isTesting","stopTest","nextTest","item","forceImmediate","immediate","itemValue","startTest","then","promise","runTest","_this4","empty","test_container","test_control_tray","test_control_button","PageContentIcon","IconUploadButton","accept","onUpload","UploadIcon","DownloadIcon","CrossIcon","test_list_container","test_list_add","AddIcon","test_list_count","test_list_scroll_container","test_list","testCallback","panels_testing_TestItem","splice","test_list_runall","NFAToDFAConversionNotificationLayout","NFAToDFAConversionNotificationLayout_classCallCheck","NFAToDFAConversionNotificationLayout_getPrototypeOf","NFAToDFAConversionNotificationLayout_assertThisInitialized","notification","convertMachineTo","close","stateCount","countStates","DefaultNotificationLayout","styleType","STYLE_TYPE_WARNING","concat","pow","StateNotificationLayout","StateNotificationLayout_classCallCheck","StateNotificationLayout_getPrototypeOf","targetIndex","targetLabel","targets","message","StateNotificationLayout_assertThisInitialized","targetLength","deleteTargetNodes","STYLE_TYPE_ERROR","text","ARROW","TransitionNotificationLayout","TransitionNotificationLayout_classCallCheck","TransitionNotificationLayout_getPrototypeOf","getSourceNode","getDestinationNode","TransitionNotificationLayout_assertThisInitialized","focusOnEdge","deleteTargetEdges","StateMissingTransitionNotificationLayout","StateMissingTransitionNotificationLayout_classCallCheck","StateMissingTransitionNotificationLayout_getPrototypeOf","StateMissingTransitionNotificationLayout_assertThisInitialized","StateUnreachableNotificationLayout","StateUnreachableNotificationLayout_classCallCheck","StateUnreachableNotificationLayout_getPrototypeOf","StateUnreachableNotificationLayout_assertThisInitialized","MACHINE_CONVERSION_LAYOUT_ID","STATE_LAYOUT_ID","TRANSITION_LAYOUT_ID","STATE_MISSING_LAYOUT_ID","STATE_UNREACHABLE_LAYOUT_ID","TestingPanel","TestingPanel_classCallCheck","TestingPanel_getPrototypeOf","stepMode","onStepTestChange","TestingPanel_assertThisInitialized","onAutoErrorCheckChange","app","getApp","_tester","on","_viewport","setCurrentView","_drawer","setDrawerSoloClass","closeDrawer","openDrawer","errorChecker","getErrorChecker","errorCheck","isErrorChecking","setErrorChecking","getNotificationManager","clearNotifications","getStringTester","panel_container","panels_testing_TestListView","AnalysisPanel","AnalysisPanel_classCallCheck","AnalysisPanel_getPrototypeOf","optimizeUnreachOption","optimizeRedundOption","onConvertToDFA","AnalysisPanel_assertThisInitialized","onConvertToNFA","onInvertDFA","onOptimizeMachine","unreachableArray","getUnreachableNodes","pushNotification","invertMachine","isChecked","onDeleteAllUnreachable","PanelCheckbox","analysis_button","canOptimize","TapeContext","inputString","infiniteLeft","infiniteRight","TapeContext_classCallCheck","_tapeInput","_left","_right","_index","finish","reset","index","TestTapeContext","StringTester_classCallCheck","StringTester_possibleConstructorReturn","StringTester_getPrototypeOf","getTestString","_graphController","_machineController","stepForward","stepBackward","resetPosition","getNodesAtPosition","changePosition","getPosition","StringTester","_testString","_testIndex","_tapeContext","_cachePath","_cachedResult","_resolve","_reject","registerEvent","testString","Promise","reject","emit","resolve","testResult","thenStop","cachedStates","cachedSymbols","isResult","startState","getStartState","doClosureTransition","currentState","prevCache","states","slice","solveFSAByStep","Set","cachedState","getSource","add","nextCache","Array","position","Eventable","mixin","FSAErrorChecker","FSAErrorChecker_classCallCheck","_app","_showErrorOnChange","onMachineChange","getMachineChangeHandler","machineBuilder","showErrors","enabled","errors","getMachineErrors","warnings","getMachineWarnings","notificationManager","console","log","SUCCESS_LAYOUT_ID","warning","ERROR_UNREACHABLE_STATE","ERROR_DUPLICATE_STATE","ERROR_INCOMPLETE_TRANSITION","edges","ERROR_DUPLICATE_TRANSITION","ERROR_MISSING_TRANSITION","ERROR_EMPTY_TRANSITION","EditPane","EditPane_classCallCheck","EditPane_possibleConstructorReturn","EditPane_getPrototypeOf","viewport","inputActionMode","isActionMode","view_pane","NavbarWidget","view_widget","right","bottom","left","ModeSelectTray","mode","modeIndex","setInputScheme","TrashCanWidget","TapePane","TapePane_classCallCheck","TapePane_possibleConstructorReturn","TapePane_getPrototypeOf","setDisabled","TapeWidget","getTapeContext","Icon","XMLFileIcon_classCallCheck","XMLFileIcon_possibleConstructorReturn","XMLFileIcon_getPrototypeOf","xmlns","height","viewBox","points","JFLAPGraphExporter","JFLAPGraphExporter_classCallCheck","JFLAPGraphExporter_possibleConstructorReturn","JFLAPGraphExporter_getPrototypeOf","AbstractGraphExporter","module","filename","endsWith","getFileType","data","substring","getUndoManager","captureEvent","xmlData","DOMParser","parseFromString","XMLGraphParser","parse","getSession","setProjectName","onerror","code","graphData","objectify","xmlString","XMLSerializer","serializeToString","XMLFileIcon","FSAModule","FSAModule_classCallCheck","_inputManager","NodalGraphInputManager","FSAGraph","FSAGraphLabeler","FSAGraphParser","getPicker","addPickHandler","_initialPickHandler","GraphInitialPickHandler","_endpointPickHandler","GraphEndpointPickHandler","_nodePickHandler","GraphNodePickHandler","_edgePickHandler","GraphEdgePickHandler","addInputHandler","_nodeInputHandler","GraphNodeInputHandler","_edgeInputHandler","GraphEdgeInputHandler","_endpointInputHandler","GraphEndpointInputHandler","_initialInputHandler","GraphInitialInputHandler","_createInputHandler","GraphNodeCreateInputHandler","_acceptInputHandler","GraphNodeAcceptInputHandler","MachineController","_errorChecker","registerNotificationLayout","getExportManager","addExporter","FSAGraphExporter","addExporters","DEFAULT_IMAGE_EXPORTERS","getViewportManager","addViewClass","getDrawerManager","addPanelClass","getHotKeyManager","registerHotKey","CTRL_KEY","tryExportToFile","getDefaultExporter","clear","undo","SHIFT_KEY","redo","getRenderManager","addRenderer","RENDER_LAYER_WORKSPACE","fsa2_renderer_FSAGraphRenderer","workspace","GraphInputRenderer","setEventHandlerFactory","SafeGraphEventHandler","getGraphParser","getTooltipManager","addTooltip","initialize","onSessionStart","update","onSessionStop","destroy","graphOnly","UserUtil","getToolbarComponent","closeBar","showButtonLabel","SHOW_LABEL","react__WEBPACK_IMPORTED_MODULE_0___default","icon_button","children","panel_title","panel_content","panel_bottom","STYLE_TYPE_DEFAULT","STYLE_TYPE_SUCCESS","notification_container","State","src","_label","_src","_id","GraphElement","_createClass","Transition","_from","_to","_symbols","includes","getHashString","FSA","_states","Map","_alphabet","_transitions","_finalStates","_customSymbols","_startState","_deterministic","_errors","fsa","entries","_step$value","_slicedToArray","copy","set","isStartState","isFinalState","_step2$value","_step3$value","getSourceState","getDestinationState","foundSymbols","keys","values","transitions","getOutgoingTransitions","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","addState","stateID","has","size","delete","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","dst","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","hasState","transitionKey","transition","hasSymbol","addSymbol","_incrSymbolCount","getSymbols","indexOf","_decrSymbolCount","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","symbolCount","isCustomSymbol","newSymbol","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","count","cache","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_step14$value","_i2","custom","forceNondeterminism","_typeof","fromTransitionKey","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","startsWith","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","toState","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","s","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21","_iteratorNormalCompletion22","_didIteratorError22","_iteratorError22","_step22","_iterator22","_iteratorNormalCompletion23","_didIteratorError23","_iteratorError23","_step23","_iterator23","stringHash","GraphElementInputHandler","targetType","_targetType","InputHandler","pointer","PickHandler","getLabel","toUpperCase","TinyUpIcon_classCallCheck","TinyUpIcon_possibleConstructorReturn","TinyUpIcon_getPrototypeOf","PanelSection_classCallCheck","PanelSection_getPrototypeOf","open","PanelSection_assertThisInitialized","isOpen","isDisabled","Children","isFull","section_container","section_header","TinyUpIcon","TinyDownIcon","section_content_container","section_content","Notification","layoutID","tags","_notificationManager","_message","_layoutID","_tags","_props","removeNotification","tag","WARNING_LAYOUT_ID","ERROR_LAYOUT_ID","NotificationManager","NotificationManager_classCallCheck","_layouts","_notifications","notificationLayout","isArray","flag","hasTag","pop","_extends","AbstractInputHandler","zoomValue","prevValue","RENDER_LAYER_WORKSPACE_OVERLAY","RENDER_LAYER_VIEWPORT","RENDER_LAYER_VIEWPORT_OVERLAY","RenderManager","_renderMapping","layerID","rendererClass","switch_container","panel_switch","switch_slider","switch_label","htmlFor","onFileUpload","_assertThisInitialized","files","_IconButton_js__WEBPACK_IMPORTED_MODULE_2__","upload_button","upload_input","HotKeyManager","_hotkeys","_cachedEvent","ctrlKey","metaKey","altKey","shiftKey","_prevHotKey","_repeatCount","_enabled","_altHotkey","ctrlIndex","metaIndex","altIndex","shiftIndex","charKey","ctrl","alt","shift","localizedKeys","unshift","window","addEventListener","removeEventListener","hotkey","matchesHotKeyEvent","eventCtrl","eventAlt","eventShift","eventKey","repeat","captureKeyEvent","findMatchingHotKey","isKeyUp","AbstractEventHandler","undoManager","IconStateButton","prevIndex","nextIndex","child","FullscreenIcon_classCallCheck","FullscreenIcon_possibleConstructorReturn","FullscreenIcon_getPrototypeOf","FullscreenExitIcon_classCallCheck","FullscreenExitIcon_possibleConstructorReturn","FullscreenExitIcon_getPrototypeOf","FullscreenWidget","FullscreenWidget_classCallCheck","FullscreenWidget_possibleConstructorReturn","FullscreenWidget_getPrototypeOf","components_IconStateButton","fullscreen_button","hide","FullscreenIcon","FullscreenExitIcon","ZoomInIcon_classCallCheck","ZoomInIcon_possibleConstructorReturn","ZoomInIcon_getPrototypeOf","ZoomOutIcon_classCallCheck","ZoomOutIcon_possibleConstructorReturn","ZoomOutIcon_getPrototypeOf","ZoomWidget","ZoomWidget_classCallCheck","ZoomWidget_getPrototypeOf","onZoomIn","ZoomWidget_assertThisInitialized","onZoomOut","viewScale","getScale","addScale","toFixed","zoom_container","zoom_button","ZoomInIcon","ZoomOutIcon","zoom_label","PinpointIcon_classCallCheck","PinpointIcon_possibleConstructorReturn","PinpointIcon_getPrototypeOf","FocusCenterWidget","FocusCenterWidget_classCallCheck","FocusCenterWidget_getPrototypeOf","FocusCenterWidget_assertThisInitialized","setOffset","center_focus_button","abs","getOffsetX","getOffsetY","PinpointIcon","NavbarWidget_classCallCheck","NavbarWidget_possibleConstructorReturn","NavbarWidget_getPrototypeOf","getInputAdapter","getViewport","navbar_container","experimental_widgets_FullscreenWidget","navbar_widget","experimental_widgets_ZoomWidget","navbar_widget_container","experimental_widgets_FocusCenterWidget","panel_divider","SIXTH_PI","PI","DIRECTED_NONE","DefaultEndpointRenderer","sin","angle","cos","DefaultLabelRenderer","transform","str","reverse","alignmentBaseline","fromAngle","toAngle","ForwardEndpointRenderer","forwardEndpointRenderer","endpointRenderer","BackwardEndpointRenderer","backwardEndpointRenderer","EdgeLabelRenderer","labelRenderer","fromPoint","toPoint","centerPoint","reverseLabel","quadLine","dftx","dfty","dfcx","dfcy","ftrad","atan2","fcrad","GraphImageExporter","imageType","FILE_TYPE_PNG","_imageType","offsetX","offsetY","bounds","getBoundingRect","dx","minX","dy","minY","w","EXPORT_PADDING_X","h","EXPORT_PADDING_Y","clone","cloneNode","setAttribute","uiElements","getElementsByClassName","remove","svgElement","getSVGElement","workspaceDim","baseVal","svg","processSVGForExport","downloadImageFromSVG","FILE_TYPE_JPG","FILE_TYPE_SVG","_get","prototype","PNGIcon","JPGIcon","SVGIcon","graphParser","_graphParser","_graphData","prevEvent","getPreviousEvent","applyRedo","selectionBox","getSelectionBox","isTrashMode","prevX","prevY","hasSelection","deleteSelectedNodes","isMoveMode","openLabelEditor","picker","createEdge","setEdgeLabel","getDefaultEdgeLabel","setInitialTarget","isNewEdge","edgeQuad","getQuadratic","prevQuad","radians","prevEdgeTo","_snapToGrid","snapSize","_snapSize","round","moveMultipleNodesTo","getSelection","moveNodeTo","onGraphIntentMoveAllNodes","onGraphIntentMoveNode","deleteTargetEdge","isPlaceholder","targetQuad","moveEdgeTo","onGraphIntentMoveEdge","moveEndpointTo","formatEdge","deleteEdge","onGraphIntentFinishEdge","onGraphIntentCreateEdge","onGraphIntentChangeDestination","shouldDestroyPointlessEdges","changeDestinationNode","nodeSize","EDGE_RADIUS","ENDPOINT_RADIUS","userClearGraph","confirm","__webpack_require__","__webpack_exports__","checkbox_container","GraphNodeSelectionBox","_boundingBox","fromX","fromY","toX","toY","visible","box","mx","my","lx","ly","clearSelection","getNodesWithin","GraphPicker","GraphPicker_classCallCheck","initialTarget","initialTargetType","_pickHandlers","pickHandler","getTargetType","updateTarget","hasTarget","document","body","cursor","getTargetAt","DEFAULT_SHOULD_DESTROY_POINTLESS_EDGE","InputController","inputAdapter","InputController_classCallCheck","_picker","_selectionBox","_swapMouseScheme","_trashMode","_disabled","_inputHandlers","AbstractInputController","inputHandler","_module","_inputAdapter","getPointerX","getPointerY","updateHoverTarget","updateInitialTarget","isTargetInSelection","handler","isTargetable","onAction","onDblAction","onDragStart","onDragMove","onDragStop","clearTarget","setViewportColor","shouldInputFirst","isAltInput","isDragging","isPointerActive","DEFAULT_AUTO_RENAME","GRAPH_REFRESH_RATE","GraphController","labeler","parser","GraphController_classCallCheck","GraphController_getPrototypeOf","_graphChangeHandler","GraphChangeHandler","setGraphController","GraphController_assertThisInitialized","shouldAutoLabel","AbstractGraphController","GraphController_get","_graph","GraphLayout","applyLayout","getModule","_labeler","setNodeLabel","getDefaultNodeLabel","nextQuad","destinationNode","prevDestination","nextInitial","prevInitial","nextX","nextY","targetNodes","enable","random","newNodeLabel","selectedNode","selection","deleteNode","onGraphIntentDeleteNodes","diameter","nextDX","nextDY","pos","getInputEventPosition","changeInputEventPosition","setQuadraticByCoords","getPickHandler","isSelfLoop","sourceNode","setQuadratic","getInputManager","getLabelEditorManager","getLabelEditorComponent","prevLabel","openEditor","ax","ay","SelectionBoxInputHandler","SelectionBoxInputHandler_classCallCheck","SelectionBoxInputHandler_possibleConstructorReturn","SelectionBoxInputHandler_getPrototypeOf","_inputController","beginSelection","isSelecting","updateSelection","endSelection","ViewportInputHandler","ViewportInputHandler_classCallCheck","ViewportInputHandler_possibleConstructorReturn","ViewportInputHandler_getPrototypeOf","getAdapter","addOffset","PatternInput","PatternInput_classCallCheck","PatternInput_getPrototypeOf","multiLine","_submitTimeout","_submit","submitOnBlur","_skipBlur","_skipSelect","PatternInput_assertThisInitialized","setTimeout","submit","activeElement","caretPosition","selectionStart","selectionEnd","ignore","separator","format","maxlength","multiline","rows","LabelEditorView","LabelEditorView_classCallCheck","LabelEditorView_getPrototypeOf","_target","_targetCallback","onInputSubmit","LabelEditorView_assertThisInitialized","onInputBlur","graphElement","onCancel","_targetOnSubmit","_targetOnCancel","getLabelFormatter","setFormatter","resetValue","closeEditor","isEditorOpen","targetStyle","getElement","parentClientRect","getBoundingClientRect","screenPos","ctm","getScreenCTM","f","transformViewToScreen","offsetWidth","offsetHeight","top","editor_container","patterninput_PatternInput","saveOnExit","LabelEditorManager","LabelEditorManager_classCallCheck","_labelEditorComponent","createRef","_labelEditorRenderer","renderer","LabelEditorRenderer","manager_labeleditor_LabelEditorView","current","nodalGraph","labelEditorRenderer","NodalGraphInputManager_classCallCheck","_labelEditorManager","setLabelEditorRenderer","setLabeler","_selectionBoxInputHandler","_viewportInputHandler","_graphLabeler","removeInputHandler","convertToDFA","dfaData","nfaSource","dfaStateMap","dfaFinalStates","dfaTransitionMap","dfaStartState","dfaTrapState","startStatesByClosure","getDFAStateFromNFAStates","statePowerSet","len","getPowerSetOfStates","nfaStates","expandNFAStatesToDFA","dfaState","dfaTransitionKey","getDFATransitionKeyFromDFAStateAndSymbol","setStartState","finalState","setFinalState","addTransition","fromDFAState","nfaTerminals","fromNFAState","doTerminalTransition","nfaStateKey","nfaState","getNFAStateKeyFromNFAStates","final","dfaStateLabel","MAX_COMPUTATION_STEPS","solveFSA","input","relatedState","counter","nfa","nextStates","cstate","nextState","apply","invertDFA","toBeRejected","getFinalStates","BoxRenderer","HIGHLIGHT_LINE_ARRAY","HighlightRenderer","HighlightRenderer_classCallCheck","HighlightRenderer_possibleConstructorReturn","HighlightRenderer_getPrototypeOf","endpoint","strokeDashoffset","offset","strokeDasharray","strokeWidth","SelectionBoxRenderer","SelectionBoxRenderer_classCallCheck","SelectionBoxRenderer_possibleConstructorReturn","SelectionBoxRenderer_getPrototypeOf","selectionBoundingBox","renderer_HighlightRenderer","renderer_BoxRenderer","GraphInputRenderer_classCallCheck","GraphInputRenderer_possibleConstructorReturn","GraphInputRenderer_getPrototypeOf","renderer_SelectionBoxRenderer","TrashCanWidget_classCallCheck","TrashCanWidget_getPrototypeOf","forceActive","_doubleTapTimeout","onMouseEnter","TrashCanWidget_assertThisInitialized","onMouseLeave","onAnyMouseDownNotConsumed","setTrashMode","clearTimeout","documentElement","isUsingTouch","trash_container","TrashCanDetailedIcon","ModeSelectTray_classCallCheck","ModeSelectTray_getPrototypeOf","ModeSelectTray_assertThisInitialized","tray_button","EditPencilIcon","MoveIcon","FSABuilder","_machine","AbstractMachineBuilder","nodeLabels","nodeOutgoings","edgeSymbols","edgePlaceholders","edgeEmpties","graphNodes","graphEdges","graphStart","srcNode","dstNode","srcState","getStateByID","dstState","edgeLabelSymbols","transitionSymbol","outSymbols","outEdges","sharedStates","unreachables","missingSymbols","_step4$value","edgeMapping","openList","startNode","queue","startIndex","nextNodes","nextNode","AbstractMachineController","_machineBuilder","setMachineType","getStateCount","read","stateMap","getTransitions","setStartNode","currentMachineType","setGraphToMachine","changeMachineTo","addCustomSymbol","removeCustomSymbol","prevSymbol","replace","renameCustomSymbol","getCustomSymbols","setCustomSymbol","clearCustomSymbols","_timeout","onMouseDown","onAnyMouseUp","ignoreBlur","newGraph","JSONGraphParser","machineData","machineName","customSymbols","statePrefix","getModuleName","version","process","getModuleVersion","timestamp","Date","getProjectName","fromJSON","toJSON","prevGraphHash","jsonData","JSON","jsonString","stringify","JSONFileIcon","onGraphIntentChangeInitial","toggleNode","TapeWidget_classCallCheck","TapeWidget_getPrototypeOf","onTapeStepBackward","TapeWidget_assertThisInitialized","onTapeStepForward","onTapeFinish","onTapeReset","onTapeSkipForward","onTapeSkipBackward","onTapeStop","stop","tapeContext","tapeIndex","getCurrentTapeIndex","tape_container","tape_control_tray","isTapeLeftInfinite","DownArrowIcon","opacity","getTapeInput","activeRead","sourceStates","getTapeSourceStatesByIndex","setCurrentTapeIndex","sourceState","isTapeRightInfinite"],"mappings":"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","file":"module_fsa2.bundle.c115ba73f78acb73f22c.js","sourcesContent":["import React from 'react';\n\nclass FSANodeRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    //TODO: Refer to app.css for comparable colors\n    const node = this.props.node;\n    const nodeLabel = node.getNodeLabel();\n\n    return (\n      <g className=\"graph-node-container\">\n        {/*Outer circle*/}\n        <circle className=\"graph-node\"\n          cx={node.x}\n          cy={node.y}\n          r={node.getNodeSize()}\n\n          fill=\"#FEE781\"\n          stroke=\"#000000\"/>\n\n        {/*Inner circle*/}\n        {node.getNodeAccept() &&\n          <circle className=\"graph-node-inner\"\n            cx={node.x}\n            cy={node.y}\n            r={node.getNodeSize() * 0.75}\n            fill=\"none\"\n\n            stroke=\"#000000\"/>}\n\n        //Label\n        <text className=\"graph-node-label\"\n          x={node.x} y={node.y + 4}\n          pointerEvents=\"none\"\n          style={{\n            userSelect: \"none\",\n            fontSize: (1 - Math.min(Math.max(nodeLabel.length - 2, 0) / 6, 0.5)) + \"em\"\n          }}\n          textAnchor=\"middle\">\n          {nodeLabel}\n        </text>\n      </g>\n    );\n  }\n}\n\nexport default FSANodeRenderer;\n","import React from 'react';\n\nimport EdgeRenderer, {DIRECTED_FORWARD} from 'renderer/EdgeRenderer.js';\n\nconst GRAPH_EDGE_CONTAINER_STYLE_NAME = \"graph-edge-container\";\n\nclass FSAEdgeRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const edge = this.props.edge;\n    const stroke = this.props.stroke || \"#000000\";\n    const start = edge.getStartPoint();\n    const end = edge.getEndPoint();\n    const center = edge.getCenterPoint();\n    const label = edge.getEdgeLabel();\n    const labels = edge.getEdgeSymbolsFromLabel();\n    const edgeDir = edge.getEdgeDirection();\n\n    return <g className={GRAPH_EDGE_CONTAINER_STYLE_NAME}>\n      <EdgeRenderer\n        directed={DIRECTED_FORWARD}\n        from={start}\n        to={end}\n        center={center}\n        label={labels.join('\\n')}\n        direction={edgeDir}\n        color={stroke}/>\n    </g>;\n  }\n}\n\nexport default FSAEdgeRenderer;\n","import React from 'react';\n\nimport FSANode from 'modules/fsa/graph/FSANode.js';\n\nconst NODE_RADIUS = 16;\nconst INITIAL_MARKER_OFFSET_X = -(NODE_RADIUS + (NODE_RADIUS / 2));\n\nclass InitialMarkerRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    const node = this.props.node;\n    //node.x + offset marker back to center if not a node (or is a pointer)\n    const x = node.x + (!(node instanceof FSANode) ? -INITIAL_MARKER_OFFSET_X : 0);\n    const y = node.y;\n    const r = NODE_RADIUS;\n    const d = r * 2;\n    return (\n      <g className=\"graph-initial-container\">\n        <path className=\"graph-initial\" d={\n          \"M\" + (x - r) + \" \" + (y) +\n          \" L\" + (x - d) + \" \" + (y - r) +\n          \" L\" + (x - d) + \" \" + (y + r) +\n          \" Z\"}\n          fill=\"none\"\n\n          stroke=\"#000000\"/>\n      </g>\n    );\n  }\n}\n\nexport default InitialMarkerRenderer;\n","import React from 'react';\nimport './FSAGraphRenderer.css';\n\nimport FSANodeRenderer from './FSANodeRenderer.js';\nimport FSAEdgeRenderer from './FSAEdgeRenderer.js';\nimport InitialMarkerRenderer from './InitialMarkerRenderer.js';\n\nclass FSAGraphRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    //Inherits props from parent\n    const currentModule = this.props.currentModule;\n    const inputController = currentModule.getInputController();\n    const graphController = currentModule.getGraphController();\n    const graph = graphController.getGraph();\n\n    return (\n      <g>\n        {/* Graph origin crosshair */\n          !graph.isEmpty() &&\n          <>\n            <line className=\"graph-ui\" x1=\"0\" y1=\"-5\" x2=\"0\" y2=\"5\" stroke=\"var(--color-viewport-back-detail)\"/>\n            <line className=\"graph-ui\" x1=\"-5\" y1=\"0\" x2=\"5\" y2=\"0\" stroke=\"var(--color-viewport-back-detail)\"/>\n          </>}\n\n        {graph.getNodes().map((e, i) => <FSANodeRenderer key={e.getGraphElementID() || i} node={e}/>)}\n        {graph.getEdges().map((e, i) => <FSAEdgeRenderer key={e.getGraphElementID() || i} edge={e}/>)}\n\n        {/* Initial marker and ghost */}\n        { graph.getStartNode() && (inputController.getInputHandlers()[3].ghostInitialMarker == null ?\n          <InitialMarkerRenderer node={graph.getStartNode()}/> :\n          <InitialMarkerRenderer node={inputController.getInputHandlers()[3].ghostInitialMarker}/>) }\n      </g>\n    );\n  }\n}\n\nexport default FSAGraphRenderer;\n","import React from 'react';\nimport Style from './FSALabelEditorRenderer.css';\n\nimport GraphEdge from 'graph/GraphEdge.js';\nimport GraphNode from 'graph/GraphNode.js';\nimport PatternInputButton from 'deprecated/system/patterninput/PatternInputButton.js';\nimport { SYMBOL_SEPARATOR, EMPTY_CHAR } from 'modules/fsa/graph/FSAEdge.js';\n\nconst RECOMMENDED_SYMBOLS = [\"0\", \"1\"];\nconst DEFAULT_SYMBOLS = [EMPTY_CHAR];\n\nclass FSALabelEditorRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  renderSymbol(symbol)\n  {\n    const labelEditor = this.props.parent;\n    if (!labelEditor) return null;\n\n    const inputComponent = labelEditor.inputComponent;\n    return (\n      <PatternInputButton key={symbol} parent={inputComponent} title={symbol}\n        onClick={e=>inputComponent.appendValue(symbol, SYMBOL_SEPARATOR)}/>\n    );\n  }\n\n  //Override\n  render()\n  {\n    const labelEditor = this.props.parent;\n    const currentModule = this.props.currentModule;\n    const machineController = currentModule.getMachineController();\n    const alphabet = machineController.getAlphabet();\n\n    const showEdgeTray = labelEditor && labelEditor.getTarget() instanceof GraphEdge;\n    const showNodeTray = labelEditor && labelEditor.getTarget() instanceof GraphNode;\n    const showDefault = true;\n    const showRecommended = !alphabet || alphabet.length <= 1;\n\n    return (\n      <div className={Style.tray_container}>\n        {showEdgeTray && <span>\n          <span className={Style.tray_used}>\n            {alphabet.map(e => this.renderSymbol(e))}\n          </span>\n          <span className={Style.tray_default}>\n            {showRecommended &&\n              RECOMMENDED_SYMBOLS.map(e => this.renderSymbol(e))}\n            {showDefault &&\n              DEFAULT_SYMBOLS.map(e => this.renderSymbol(e))}\n          </span>\n        </span>}\n        {showNodeTray && <span>\n            <PatternInputButton parent={labelEditor.inputComponent}\n              title={labelEditor.getTarget().getNodeCustom() ? \"Custom\" : \"Auto\"}\n              onClick={() => {labelEditor.getTarget().setNodeCustom(!labelEditor.getTarget().getNodeCustom())}}/>\n            <PatternInputButton parent={labelEditor.inputComponent}\n              title={labelEditor.getTarget().getNodeAccept() ? \"Accept\" : \"Reject\"}\n              onClick={() => {labelEditor.getTarget().setNodeAccept(!labelEditor.getTarget().getNodeAccept())}}/>\n        </span>}\n      </div>\n    );\n  }\n}\n\nexport default FSALabelEditorRenderer;\n","import React from 'react';\nimport Style from './StateListElement.css';\n\nconst SUBMIT_KEY_CODE = \"Enter\";\nconst CANCEL_KEY_CODE = \"Escape\";\n\nclass StateListElement extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.state = {\n      value: null,\n      error: false\n    };\n\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyUp = this.onKeyUp.bind(this);\n  }\n\n  onFocus(e)\n  {\n    const target = e.target;\n    const node = this.props.node;\n\n    const nodeLabel = node ? node.getNodeLabel() : null;\n    this.setState({\n      value: nodeLabel,\n      error: false\n    }, () => target.select());\n\n    //Call any listening focus\n    if (this.props.onFocus) this.props.onFocus(e, this);\n  }\n\n  onBlur(e)\n  {\n    const nextLabel = this.state.value;\n\n    //Reset to nothing (will use node.getNodeLabel() instead)\n    this.setState({ value: null, error: false });\n\n    //Call any listening blurs\n    if (this.props.onBlur) this.props.onBlur(e, this, nextLabel);\n  }\n\n  onKeyDown(e)\n  {\n    const keyCode = e.key;\n    if (keyCode === SUBMIT_KEY_CODE || keyCode === CANCEL_KEY_CODE)\n    {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  onKeyUp(e)\n  {\n    const keyCode = e.key;\n    const target = e.target;\n\n    if (keyCode === SUBMIT_KEY_CODE)\n    {\n      target.blur();\n    }\n    else if (keyCode === CANCEL_KEY_CODE)\n    {\n      this.setState({\n        value: null,\n        error: false\n      }, () => target.blur());\n    }\n  }\n\n  onValueChange(e)\n  {\n    let value = e.target.value.trim();\n    let error = false;\n\n    if (this.props.onChange)\n    {\n      try\n      {\n        this.props.onChange(e, this, value);\n      }\n      catch(e)\n      {\n        error = true;\n      }\n    }\n\n    this.setState({\n      value: value,\n      error: error\n    });\n  }\n\n  //Override\n  render()\n  {\n    const node = this.props.node;\n    const inputValue = this.state.value;\n\n    const nodeLabel = node ? node.getNodeLabel() : \"\";\n    const nodeCustom = node ? (node.getNodeCustom() || inputValue !== null && inputValue !== nodeLabel) : false;\n    const nodeAccept = node ? node.getNodeAccept() : false;\n    //Must check for null, not ONLY truthy because value might be empty string.\n    const displayValue = inputValue === null ? nodeLabel : inputValue;\n\n    return (\n      <div id={this.props.id}\n        className={Style.element_container +\n          (nodeCustom ? \" custom \" : \"\") +\n          ((!node.getNodeCustom() && displayValue.length <= 0) ? \" empty \" : \"\") +\n          (inputValue !== null && this.state.error ? \" error \" : \"\") +\n          (nodeAccept ? \" accept \" : \"\") +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <input\n          spellCheck={false}\n          style={{width: displayValue.length + \"ch\"}}\n          value={displayValue}\n          onChange={this.onValueChange}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          onKeyDown={this.onKeyDown}\n          onKeyUp={this.onKeyUp}/>\n      </div>\n    );\n  }\n}\n\nexport default StateListElement;\n","import React from 'react';\nimport Style from './StateListView.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport BoxAddIcon from 'experimental/iconset/BoxAddIcon.js';\nimport TriangleIcon from 'experimental/iconset/TriangleIcon.js';\n\nimport StateListElement from './StateListElement.js';\n\nclass StateListView extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this._prevX = 0;\n    this._prevY = 0;\n\n    this.onElementAdd = this.onElementAdd.bind(this);\n    this.onElementFocus = this.onElementFocus.bind(this);\n    this.onElementBlur = this.onElementBlur.bind(this);\n    this.onElementChange = this.onElementChange.bind(this);\n  }\n\n  onElementAdd(e)\n  {\n    const graphController = this.props.graphController;\n    this._prevX += 16;\n    this._prevY += 16;\n    const node = graphController.createNode(this._prevX, this._prevY);\n    graphController.focusOnNode(node);\n  }\n\n  onElementFocus(e, element)\n  {\n    this._prevX = element.props.node.x;\n    this._prevY = element.props.node.y;\n    const graphController = this.props.graphController;\n    graphController.focusOnNode(element.props.node);\n  }\n\n  onElementBlur(e, element, nextLabel)\n  {\n    const node = element.props.node;\n    if (!node) return;\n\n    const graphController = this.props.graphController;\n\n    //The value is already processed, abort\n    if (nextLabel !== null)\n    {\n      const graph = graphController.getGraph();\n      if (nextLabel.length > 0)\n      {\n        const otherNodes = graph.getNodesByLabel(nextLabel);\n        if (otherNodes.length <= 0)\n        {\n          //None other have the same name. Rename it!\n          graphController.renameNode(node, nextLabel);\n        }\n        else\n        {\n          //Found something already named that! Ignore!\n        }\n      }\n      else if (node.getNodeCustom())\n      {\n        //Remove custom naming instead of deleting.\n        node.setNodeCustom(false);\n        graphController.applyAutoRename();\n      }\n      else\n      {\n        //Delete!\n        graphController.deleteTargetNode(node);\n      }\n    }\n  }\n\n  onElementChange(e, element, value)\n  {\n    const graphController = this.props.graphController;\n\n    if (value.length > 0)\n    {\n      const graph = graphController.getGraph();\n      const otherNodes = graph.getNodesByLabel(value);\n\n      //If there are more than 1 nodes by the same name,\n      //OR if the duplicate node found is NOT the same node\n      if (otherNodes.length > 1 || (otherNodes.length === 1 && otherNodes[0] !== element.props.node))\n      {\n        throw new Error(\"Not a valid node label\");\n      }\n    }\n  }\n\n  //Override\n  render()\n  {\n    const graphController = this.props.graphController;\n    const graph = graphController.getGraph();\n    const nodes = graph.getNodes();\n\n    return (\n      <div id={this.props.id}\n        className={Style.list_container}\n        style={this.props.style}>\n        <div className={Style.element_list}>\n          <TriangleIcon className={Style.first_marker}/>\n          {nodes.map(e => <StateListElement key={e.getGraphElementID()}\n              node={e}\n              onFocus={this.onElementFocus}\n              onBlur={this.onElementBlur}\n              onChange={this.onElementChange}/>)}\n        </div>\n        <IconButton className={Style.add_button}\n          title=\"Add State\"\n          onClick={this.onElementAdd}>\n          <BoxAddIcon/>\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nexport default StateListView;\n","import React from 'react';\nimport Style from './AlphabetListElement.css';\n\nconst SUBMIT_KEY_CODE = \"Enter\";\nconst CANCEL_KEY_CODE = \"Escape\";\n\nclass AlphabetListElement extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this._inputElement = null;\n\n    this.state = {\n      value: null,\n      error: false\n    };\n\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyUp = this.onKeyUp.bind(this);\n  }\n\n  onFocus(e)\n  {\n    const target = e.target;\n    const symbol = this.props.symbol;\n\n    this.setState({\n      value: symbol,\n      error: false\n    }, () => target.select());\n\n    //Call any listening focus\n    if (this.props.onFocus) this.props.onFocus(e, this);\n  }\n\n  onBlur(e)\n  {\n    const nextSymbol = this.state.value;\n\n    //Call any listening blurs\n    if (this.props.onBlur) this.props.onBlur(e, this, nextSymbol);\n\n    //Reset to nothing (will use props.symbol instead)\n    this.setState({ value: null, error: false });\n  }\n\n  onKeyDown(e)\n  {\n    const keyCode = e.key;\n    if (keyCode === SUBMIT_KEY_CODE || keyCode === CANCEL_KEY_CODE)\n    {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  onKeyUp(e)\n  {\n    const keyCode = e.key;\n    const target = e.target;\n\n    if (keyCode === SUBMIT_KEY_CODE)\n    {\n      target.blur();\n    }\n    else if (keyCode === CANCEL_KEY_CODE)\n    {\n      this.setState({\n        value: null,\n        error: false\n      }, () => target.blur());\n    }\n  }\n\n  onValueChange(e)\n  {\n    let value = e.target.value.trim();\n    let error = false;\n\n    if (this.props.onChange)\n    {\n      try\n      {\n        this.props.onChange(e, this, value);\n      }\n      catch(e)\n      {\n        error = true;\n      }\n    }\n\n    this.setState({\n      value: value,\n      error: error\n    });\n  }\n\n  focus()\n  {\n    this._inputElement.focus();\n  }\n\n  //Override\n  render()\n  {\n    const inputSymbol = this.state.value;\n    const displaySymbol = inputSymbol === null ? this.props.symbol : inputSymbol;\n\n    const symbolUsed = this.props.used || false;\n\n    return (\n      <div id={this.props.id}\n        className={Style.element_container +\n          (displaySymbol !== null && displaySymbol.length <= 0 ? \" empty \" : \"\") +\n          (inputSymbol !== null && this.state.error ? \" error \" : \"\") +\n          (symbolUsed ? \" used \" : \"\") +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <input ref={ref=>this._inputElement=ref}\n          spellCheck={false}\n          maxLength={1}\n          style={{width: \"1ch\"}}\n          value={displaySymbol}\n          onChange={this.onValueChange}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          onKeyDown={this.onKeyDown}\n          onKeyUp={this.onKeyUp}/>\n      </div>\n    );\n  }\n}\n\nexport default AlphabetListElement;\n","import React from 'react';\nimport Style from './AlphabetListView.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport BoxAddIcon from 'experimental/iconset/BoxAddIcon.js';\n\nimport AlphabetListElement from './AlphabetListElement.js';\n\nclass AlphabetListView extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.newSymbolComponent = null;\n\n    this.state = {\n      useNewSymbol: false\n    };\n\n    this.onElementAdd = this.onElementAdd.bind(this);\n    this.onElementFocus = this.onElementFocus.bind(this);\n    this.onElementBlur = this.onElementBlur.bind(this);\n    this.onElementChange = this.onElementChange.bind(this);\n  }\n\n  onElementAdd(e)\n  {\n    //Create a new alphabet element...\n    this.setState({useNewSymbol: true}, () => {\n      this.newSymbolComponent.focus();\n    });\n  }\n\n  onElementFocus(e, element)\n  {\n    //Do nothing...\n  }\n\n  onElementBlur(e, element, nextSymbol)\n  {\n    const symbol = element.props.symbol;\n    const machineController = this.props.machineController;\n\n    if (nextSymbol !== null)\n    {\n      const machine = machineController.getMachineBuilder().getMachine();\n      if (nextSymbol.length > 0)\n      {\n        if (!machine.isSymbol(nextSymbol))\n        {\n          if (symbol)\n          {\n            //None other have the same name. Rename it!\n            machineController.renameSymbol(symbol, nextSymbol);\n          }\n          else\n          {\n            //None other have the same name. Create it!\n            machineController.createSymbol(nextSymbol);\n          }\n        }\n        else\n        {\n          //Found something already named that! Ignore!\n        }\n      }\n      else if (symbol)\n      {\n        //Delete!\n        machineController.deleteSymbol(symbol);\n      }\n    }\n\n    //Regardless, just close the \"new\" alphabet element if open.\n    if (this.state.useNewSymbol)\n    {\n      this.setState({ useNewSymbol: false });\n    }\n  }\n\n  onElementChange(e, element, symbol)\n  {\n    const machineController = this.props.machineController;\n\n    if (symbol.length > 0)\n    {\n      //If there are more than 1 symbols by the same name,\n      //OR if the duplicate symbol found is NOT the same symbol\n      const machine = machineController.getMachineBuilder().getMachine();\n      if (machine.isSymbol(symbol) && symbol !== element.props.symbol)\n      {\n        throw new Error(\"Not a valid symbol\");\n      }\n    }\n  }\n\n  renderAlphabetList(machine, alphabet)\n  {\n    const result = [];\n    for(const symbol of alphabet)\n    {\n      if (!symbol) continue;\n\n      result.push(<AlphabetListElement key={symbol}\n        symbol={symbol}\n        used={machine.isUsedSymbol(symbol)}\n        onFocus={this.onElementFocus}\n        onBlur={this.onElementBlur}\n        onChange={this.onElementChange}/>);\n    }\n    return result;\n  }\n\n  //Override\n  render()\n  {\n    const machineController = this.props.machineController;\n    const machine = machineController.getMachineBuilder().getMachine();\n    const alphabet = machine.getAlphabet();\n\n    return (\n      <div id={this.props.id}\n        className={Style.list_container}\n        style={this.props.style}>\n        <div className={Style.element_list}>\n          {this.renderAlphabetList(machine, alphabet)}\n          <AlphabetListElement\n            ref={ref=>this.newSymbolComponent=ref}\n            style={{display: this.state.useNewSymbol ? \"block\" : \"none\"}}\n            symbol={\"\"}\n            onFocus={this.onElementFocus}\n            onBlur={this.onElementBlur}\n            onChange={this.onElementChange}/>\n        </div>\n        <IconButton className={Style.add_button}\n          title=\"Add Symbol\"\n          onClick={this.onElementAdd}>\n          <BoxAddIcon/>\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nexport default AlphabetListView;\n","import React from 'react';\nimport Style from './TransitionChartView.css';\n\nimport { EMPTY_CHAR } from 'modules/fsa/graph/FSAEdge.js';\nimport { EMPTY_SYMBOL } from 'modules/fsa2/machine/FSA.js';\n\nclass TransitionChartView extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    //NOTE: this only works if machine hashing is faster than a re-calculate\n    this._cachedMachineHash = 0;\n    this._cachedMachineComponents = [];\n  }\n\n  //Override\n  componentWillUnmount()\n  {\n    //Reset cached components for re-rendering\n    this._cachedMachineHash = 0;\n    this._cachedMachineComponents.length = 0;\n  }\n\n  renderTransitionEntry(machine, state, symbol)\n  {\n    const deterministic = machine.isDeterministic();\n\n    let destinations = machine.doTransition(state, symbol, true);\n    let transitionString = \"\";\n    let error = false;\n\n    if (destinations.length <= 0)\n    {\n      if (deterministic)\n      {\n        error = true;\n        transitionString = \"-\";\n        if (symbol === EMPTY_SYMBOL)\n        {\n          //Don't show missing empty transitions for DFA's\n          return null;\n        }\n      }\n      else\n      {\n        //Don't show missing transitions for NFA's\n        return null;\n      }\n    }\n    else if (destinations.length === 1)\n    {\n      //Regardless if it's deterministic, it is a valid transition\n      error = false;\n      transitionString = destinations[0].getStateLabel();\n\n      if (!deterministic) transitionString = \"{\" + transitionString + \"}\";\n    }\n    else\n    {\n      //If it's deterministic, it is not valid\n      if (deterministic) error = true;\n\n      let string = \"\";\n      for(const state of destinations)\n      {\n        if (string.length > 0) string += \",\";\n        string += state.getStateLabel();\n      }\n      transitionString = \"{\" + string + \"}\";\n    }\n\n    //Convert empty symbol to the expected char value\n    if (symbol === EMPTY_SYMBOL)\n    {\n      symbol = EMPTY_CHAR;\n\n      //DFA's can't have empty symbols\n      if (deterministic) error = true;\n    }\n\n    return (\n      <tr key={state.getStateID() + \":\" + symbol}>\n        <td className={Style.chart_key + (error ? \" error \" : \"\")}>{\"(\" + state.getStateLabel() + \",\" + symbol + \")\"}</td>\n        <td className={Style.chart_value + (error ? \" error \" : \"\")}>{transitionString}</td>\n      </tr>\n    );\n  }\n\n  renderTransitionTable(machine)\n  {\n    const machineHash = machine.getHashCode();\n    if (machineHash !== this._cachedMachineHash)\n    {\n      this._cachedMachineHash = machineHash;\n    }\n    else\n    {\n      return this._cachedMachineComponents;\n    }\n\n    const result = this._cachedMachineComponents = [];\n    const deterministic = machine.isDeterministic();\n\n    for(const state of machine.getStates())\n    {\n      let entry = null;\n\n      //The empty transitions...\n      entry = this.renderTransitionEntry(machine, state, EMPTY_SYMBOL);\n      if (entry) result.push(entry);\n\n      //The other transitions...\n      for(const symbol of machine.getAlphabet())\n      {\n        entry = this.renderTransitionEntry(machine, state, symbol);\n        if (entry) result.push(entry);\n      }\n    }\n    return result;\n  }\n\n  //Override\n  render()\n  {\n    const machineController = this.props.machineController;\n    const machine = machineController.getMachineBuilder().getMachine();\n    const deterministic = machineController.getMachineType() === 'DFA';\n\n    return (\n      <div id={this.props.id}\n        className={Style.chart_container +\n        \" \" + this.props.className}\n        style={this.props.style}>\n        <table>\n          <tbody>\n            <tr>\n              <th>\n                {\"Q\\u00d7\\u03A3\"}\n              </th>\n              <th>\n                {deterministic ?\n                  <span>{\"Q\"}</span> :\n                  <span>\n                    <span style={{fontFamily: \"cursive\"}}>{\"P\"}</span>\n                    <span>{\"(Q)\"}</span>\n                  </span>}\n              </th>\n            </tr>\n            {this.renderTransitionTable(machine)}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default TransitionChartView;\n","import React from 'react';\nimport Style from './TransitionTableView.css';\n\nimport { EMPTY_CHAR } from 'modules/fsa/graph/FSAEdge.js';\nimport { EMPTY_SYMBOL } from 'modules/fsa2/machine/FSA.js';\n\nconst SYMBOL_AXIS = \"symbols\";\nconst STATE_AXIS = \"states\";\n\nclass TransitionTableView extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.state = {\n      rowAxis: SYMBOL_AXIS\n    };\n\n    this.onRowAxisSwitch = this.onRowAxisSwitch.bind(this);\n  }\n\n  onRowAxisSwitch(e)\n  {\n    this.setState((prev, props) => {\n      return {\n        rowAxis: prev.rowAxis === SYMBOL_AXIS ? STATE_AXIS : SYMBOL_AXIS\n      };\n    });\n  }\n\n  renderTableEntryForSymbolAxis(machine, state, symbol)\n  {\n    const deterministic = machine.isDeterministic();\n    const destinations = machine.doTransition(state, symbol);\n    let transitionString = \"\";\n    let error = false;\n\n    if (destinations.length <= 0)\n    {\n      if (deterministic && symbol !== EMPTY_SYMBOL) error = true;\n      transitionString = \"-\";\n    }\n    else if (destinations.length === 1)\n    {\n      if (deterministic && symbol === EMPTY_SYMBOL) error = true;\n      transitionString = destinations[0].getStateLabel();\n    }\n    else\n    {\n      if (deterministic) error = true;\n      let string = \"\";\n      for(const other of destinations)\n      {\n        if (string.length > 0) string += \",\";\n        string += other.getStateLabel();\n      }\n      transitionString = \"{\" + string + \"}\";\n    }\n\n    const disabled = deterministic && symbol === EMPTY_SYMBOL;\n\n    return (\n      <td key={state.getStateID() + \":\" + symbol}\n        className={Style.table_entry +\n          (error ? \" error \" : \"\") +\n          (disabled ? \" disabled \" : \"\")}>\n        {transitionString}\n      </td>\n    );\n  }\n\n  renderTableEntries(machine, rowAxis)\n  {\n    const deterministic = machine.isDeterministic();\n\n    const result = [];\n    for(const state of machine.getStates())\n    {\n      const rowComponents = [];\n      switch(rowAxis)\n      {\n        case SYMBOL_AXIS:\n          for(const symbol of machine.getAlphabet())\n          {\n            rowComponents.push(this.renderTableEntryForSymbolAxis(machine, state, symbol));\n          }\n          rowComponents.push(this.renderTableEntryForSymbolAxis(machine, state, EMPTY_SYMBOL));\n        break;\n        case STATE_AXIS:\n          for(const other of machine.getStates())\n          {\n            const symbols = machine.getTransitionSymbols(state, other);\n            let string = \"\";\n            if (symbols)\n            {\n              for(const symbol of symbols)\n              {\n                if (string.length > 0) string += \"\\n\";\n                if (symbol === EMPTY_SYMBOL) string += EMPTY_CHAR;\n                else string += symbol;\n              }\n            }\n            else\n            {\n              string = \"-\";\n            }\n            rowComponents.push(\n              <td key={state.getStateID() + \":\" + other.getStateID()}>\n                {string}\n              </td>\n            );\n          }\n        break;\n        default:\n          throw new Error(\"Unknown row axis type \\'\" + rowAxis + \"\\'\");\n      }\n      result.push(\n        <tr key={state.getStateID()}>\n          <th scope=\"row\" className={Style.table_axis_header + \" row\"}>\n            {state.getStateLabel()}\n          </th>\n          {rowComponents}\n        </tr>\n      );\n    }\n    return result;\n  }\n\n  renderTableAxis(machine, rowAxis)\n  {\n    let result = [];\n    switch(rowAxis)\n    {\n      case SYMBOL_AXIS:\n        for(const symbol of machine.getAlphabet())\n        {\n          result.push(\n            <th key={symbol} scope=\"col\" className={Style.table_axis_header + \" col\"}>\n              {symbol}\n            </th>\n          );\n        }\n        const disabled = machine.isDeterministic();\n        result.push(\n          <th key={EMPTY_SYMBOL} scope=\"col\"\n            className={Style.table_axis_header +\n              (disabled ? \" disabled \" : \"\") +\n              \" col\"}>\n            {EMPTY_CHAR}\n          </th>\n        );\n        return result;\n      case STATE_AXIS:\n        for(const state of machine.getStates())\n        {\n          result.push(\n            <th key={state.getStateID()} scope=\"col\" className={Style.table_axis_header + \" col\"}>\n              {state.getStateLabel()}\n            </th>\n          );\n        }\n        return result;\n      default:\n        throw new Error(\"Unknown row axis type \\'\" + rowAxis + \"\\'\");\n    }\n  }\n\n  //Override\n  render()\n  {\n    const rowAxis = this.state.rowAxis;\n    const machineController = this.props.machineController;\n    const machine = machineController.getMachineBuilder().getMachine();\n\n    return (\n      <div id={this.props.id}\n        className={Style.table_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <table>\n          <tbody>\n            <tr>\n              <th>\n                <button onClick={this.onRowAxisSwitch}>\n                  {rowAxis === SYMBOL_AXIS ? \"Q/\\u03A3\" : \"Q/Q\"}\n                </button>\n              </th>\n              {this.renderTableAxis(machine, rowAxis)}\n            </tr>\n            {this.renderTableEntries(machine, rowAxis)}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default TransitionTableView;\n","import React from 'react';\nimport Style from './AutoStateLabelView.css';\n\nimport FormattedInput from 'deprecated/system/formattedinput/FormattedInput.js';\n\nclass AutoStateLabelView extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.onAutoStatePrefixSubmit = this.onAutoStatePrefixSubmit.bind(this);\n    this.onAutoStatePrefixFormat = this.onAutoStatePrefixFormat.bind(this);\n  }\n\n  onAutoStatePrefixSubmit(next, prev)\n  {\n    const graphController = this.props.graphController;\n    const graphLabeler = graphController.getGraphLabeler();\n\n    const prefix = graphLabeler.getDefaultNodeLabelPrefix();\n    if (prefix != next)\n    {\n      graphLabeler.setDefaultNodeLabelPrefix(next);\n      graphController.applyAutoRename();\n    }\n  }\n\n  onAutoStatePrefixFormat(value)\n  {\n    return value && value.length > 0 ? value :\n      this.props.graphController.getGraphLabeler().getDefaultNodeLabelPrefix();\n  }\n\n  //Override\n  render()\n  {\n    const graphController = this.props.graphController;\n\n    return (\n      <div id={this.props.id}\n        className={Style.select_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <label className={Style.select_label}>\n          State Labels\n        </label>\n        <FormattedInput\n          className={Style.prefix_editor}\n          defaultValue={graphController.getGraphLabeler().getDefaultNodeLabelPrefix()}\n          captureOnExit=\"save\"\n          formatter={this.onAutoStatePrefixFormat}\n          onSubmit={this.onAutoStatePrefixSubmit}/>\n        <select className={Style.postfix_selector}\n          onChange={this.onMachineTypeChange}\n          disabled={true}>\n          <option>0-9</option>\n          <option>a-z</option>\n          <option>A-Z</option>\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default AutoStateLabelView;\n","import React from 'react';\nimport Style from './OverviewPanel.css';\n\nimport PanelContainer from 'experimental/panels/PanelContainer.js';\nimport PanelSection from 'experimental/panels/PanelSection.js';\nimport PanelDivider from 'experimental/panels/PanelDivider.js';\nimport PanelSwitch from 'experimental/panels/PanelSwitch.js';\n\nimport StateListView from './states/StateListView.js';\nimport AlphabetListView from './alphabet/AlphabetListView.js';\nimport TransitionChartView from './transitions/TransitionChartView.js';\nimport TransitionTableView from './transitions/TransitionTableView.js';\nimport AutoStateLabelView from './AutoStateLabelView.js';\n\nconst MACHINE_TYPE_DFA = \"DFA\";\nconst MACHINE_TYPE_NFA = \"NFA\";\n\nclass OverviewPanel extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.onMachineTypeChange = this.onMachineTypeChange.bind(this);\n    this.onAutoLayoutApply = this.onAutoLayoutApply.bind(this);\n    this.onAutoLayoutChange = this.onAutoLayoutChange.bind(this);\n    this.onAutoLabelChange = this.onAutoLabelChange.bind(this);\n    this.onSnapToGridChange = this.onSnapToGridChange.bind(this);\n  }\n\n  onMachineTypeChange(e)\n  {\n    const newValue = e.target.value;\n\n    const session = this.props.session;\n    const currentModule = session.getCurrentModule();\n    const machineController = currentModule.getMachineController();\n    const machine = machineController.getMachineBuilder().getMachine();\n\n    switch(newValue)\n    {\n      case MACHINE_TYPE_DFA:\n        machine.setDeterministic(true);\n        break;\n      case MACHINE_TYPE_NFA:\n        machine.setDeterministic(false);\n        break;\n      default:\n        throw new Error(\"Unknown machine type \\'\" + newValue + \"\\'\");\n    }\n  }\n\n  onAutoLayoutApply(e)\n  {\n    const currentModule = this.props.session.getCurrentModule();\n    const graphController = currentModule.getGraphController();\n    graphController.applyAutoLayout();\n  }\n\n  onAutoLayoutChange(e)\n  {\n    //TODO: Not yet implemented...\n  }\n\n  onAutoLabelChange(e)\n  {\n    const currentModule = this.props.session.getCurrentModule();\n    const graphController = currentModule.getGraphController();\n    graphController.setAutoRenameNodes(e.target.checked);\n  }\n\n  onSnapToGridChange(e)\n  {\n    //TODO: Not yet implemented...\n  }\n\n  //Override\n  render()\n  {\n    const drawer = this.props.drawer;\n    const session = this.props.session;\n    const currentModule = session.getCurrentModule();\n    const graphController = currentModule.getGraphController();\n    const machineController = currentModule.getMachineController();\n    const machineType = machineController.getMachineBuilder().getMachine().isDeterministic() ? MACHINE_TYPE_DFA : MACHINE_TYPE_NFA;\n    const autoRename = graphController.shouldAutoRenameNodes();\n\n    const drawerFull = drawer.isDrawerFullscreen();\n\n    return (\n      <PanelContainer id={this.props.id}\n        className={this.props.className}\n        style={this.props.style}\n        title={OverviewPanel.TITLE}>\n\n        <select className={Style.machine_type_select}\n          value={machineType}\n          onChange={this.onMachineTypeChange}>\n          <option>{MACHINE_TYPE_DFA}</option>\n          <option>{MACHINE_TYPE_NFA}</option>\n        </select>\n\n        <PanelDivider/>\n\n        <PanelSection title={\"States\"} initial={true} full={drawerFull}>\n          <StateListView graphController={graphController}/>\n        </PanelSection>\n        <PanelSection title={\"Alphabet\"} initial={true} full={drawerFull}>\n          <AlphabetListView machineController={machineController}/>\n        </PanelSection>\n\n        <PanelDivider/>\n\n        <PanelSection title={\"Transition Chart\"} full={drawerFull} disabled={graphController.getGraph().getEdgeCount() <= 0}>\n          <TransitionChartView machineController={machineController}/>\n        </PanelSection>\n        <PanelSection title={\"Transition Table\"} full={drawerFull} disabled={graphController.getGraph().getNodeCount() <= 0}>\n          <TransitionTableView machineController={machineController}/>\n        </PanelSection>\n\n        <PanelDivider/>\n\n        <AutoStateLabelView graphController={graphController}/>\n\n        <button className={Style.autolayout_button} onClick={this.onAutoLayoutApply} disabled={graphController.getGraph().isEmpty()}>\n          {I18N.toString(\"action.overview.autolayout\")}\n        </button>\n\n        <PanelDivider/>\n\n        <PanelSwitch id={\"overview-auto-label\"}\n          checked={autoRename}\n          title={\"Auto rename nodes\"}\n          onChange={this.onAutoLabelChange}/>\n        <PanelSwitch id={\"overview-auto-layout\"}\n          checked={false}\n          title={\"Auto layout nodes\"}\n          disabled={true}\n          onChange={this.onAutoLayoutChange}/>\n        <PanelSwitch id={\"overview-snap-grid\"}\n          checked={false}\n          title={\"Snap-to-grid\"}\n          disabled={true}\n          onChange={this.onSnapToGridChange}/>\n\n      </PanelContainer>\n    );\n  }\n}\nObject.defineProperty(OverviewPanel, 'TITLE', {\n  get: function() { return I18N.toString(\"component.overview.title\"); }\n});\n\nexport default OverviewPanel;\n","import React from 'react';\nimport Style from './TestItem.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport SubtractIcon from 'experimental/iconset/SubtractIcon.js';\nimport CheckCircleIcon from 'experimental/iconset/CheckCircleIcon.js';\nimport CrossCircleIcon from 'experimental/iconset/CrossCircleIcon.js';\nimport PendingIcon from 'experimental/iconset/PendingIcon.js';\nimport RunningManIcon from 'experimental/iconset/RunningManIcon.js';\nimport WalkingManIcon from 'experimental/iconset/WalkingManIcon.js';\n\nexport const DEFAULT_MODE = \"default\";\nexport const SUCCESS_MODE = \"success\";\nexport const FAILURE_MODE = \"failure\";\nexport const WORKING_MODE = \"working\";\n\nclass TestItem extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.inputElement = null;\n\n    this.state = {\n      value: this.props.defaultValue || \"\",\n      status: DEFAULT_MODE\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  focus()\n  {\n    if (this.inputElement)\n    {\n      this.inputElement.focus();\n    }\n  }\n\n  setValue(value, callback=null)\n  {\n    if (this.state.value !== value)\n    {\n      this.setState({value: value}, callback);\n    }\n    else if (callback)\n    {\n      callback();\n    }\n  }\n\n  setStatus(status, callback=null)\n  {\n    if (this.state.status !== status)\n    {\n      this.setState({status: status}, callback);\n    }\n    else if (callback)\n    {\n      callback();\n    }\n  }\n\n  resetStatus(callback=null)\n  {\n    if (this.state.status !== DEFAULT_MODE)\n    {\n      this.setState({status: DEFAULT_MODE}, callback);\n    }\n    else if (callback)\n    {\n      callback();\n    }\n  }\n\n  getValue()\n  {\n    return this.state.value;\n  }\n\n  getStatus()\n  {\n    return this.state.status;\n  }\n\n  onChange(e)\n  {\n    const nextValue = e.target.value;\n    if (this.state.value !== nextValue)\n    {\n      this.setState({value: nextValue, status: DEFAULT_MODE});\n    }\n  }\n\n  //Override\n  render()\n  {\n    const onDelete = this.props.onDelete;\n    const showDelete = true;\n\n    const onTest = this.props.onTest;\n    const showTest = true;\n\n    const active = this.props.active;\n    const subtitle = this.props.subtitle;\n    const placeholder = this.props.placeholder;\n    const status = this.state.status;\n\n    return (\n      <div id={this.props.id}\n        className={Style.test_item_container +\n          (active ? \" active \" : \"\") +\n          \" \" + status +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        {showTest &&\n          <IconButton className={Style.test_button}\n            title={\"Test\"}\n            disabled={!onTest}\n            onClick={(e) => onTest(e, this)}>\n            {status === SUCCESS_MODE ?\n              <CheckCircleIcon/> :\n              status === FAILURE_MODE ?\n              <CrossCircleIcon/> :\n              status === WORKING_MODE ?\n              <PendingIcon/> :\n              <RunningManIcon/>}\n          </IconButton>}\n        <div className={Style.test_input}>\n          <input ref={ref=>this.inputElement=ref} type=\"text\"\n            placeholder={placeholder}\n            value={this.state.value}\n            onChange={this.onChange}/>\n          <label>{this.props.subtitle}</label>\n        </div>\n        {showDelete &&\n          <IconButton className={Style.delete_button}\n            title={\"Delete\"}\n            disabled={!onDelete}\n            onClick={(e) => onDelete(e, this)}>\n            <SubtractIcon/>\n          </IconButton>}\n      </div>\n    );\n  }\n}\n\nexport default TestItem;\n","import React from 'react';\nimport Style from './TestListView.css';\n\nimport { guid } from 'util/MathHelper.js';\nimport { downloadText } from 'util/Downloader.js';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport IconUploadButton from 'experimental/components/IconUploadButton.js';\n\nimport PageContentIcon from 'experimental/iconset/PageContentIcon.js';\nimport UploadIcon from 'experimental/iconset/UploadIcon.js';\nimport DownloadIcon from 'experimental/iconset/DownloadIcon.js';\nimport CrossIcon from 'experimental/iconset/CrossIcon.js';\nimport AddIcon from 'experimental/iconset/AddIcon.js';\nimport RunningManIcon from 'experimental/iconset/RunningManIcon.js';\nimport WalkingManIcon from 'experimental/iconset/WalkingManIcon.js';\n\nimport TestItem, {SUCCESS_MODE, FAILURE_MODE, WORKING_MODE, DEFAULT_MODE} from './TestItem.js';\n\nimport GraphChangeHandler from 'experimental/GraphChangeHandler.js';\n\nconst ACCEPT_FILE_TYPES = ['.txt'];\nconst TEST_FILENAME = \"test.txt\";\nconst TEST_REFRESH_TICKS = 30;\n\nclass TestListView extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this._testList = [];\n    this._testName = TEST_FILENAME;\n\n    this.onTestNew = this.onTestNew.bind(this);\n    this.onTestUpload = this.onTestUpload.bind(this);\n    this.onTestDownload = this.onTestDownload.bind(this);\n    this.onTestClose = this.onTestClose.bind(this);\n    this.onTestAdd = this.onTestAdd.bind(this);\n    this.onTestDelete = this.onTestDelete.bind(this);\n    this.onTestTest = this.onTestTest.bind(this);\n    this.onTestRunAll = this.onTestRunAll.bind(this);\n    this.onGraphChange = this.onGraphChange.bind(this);\n  }\n\n  //Override\n  componentDidMount()\n  {\n    this.props.graphController.getGraphChangeHandler().addListener(this.onGraphChange);\n  }\n\n  //Override\n  componentWillUnmount()\n  {\n    this.props.graphController.getGraphChangeHandler().removeListener(this.onGraphChange);\n  }\n\n  onGraphChange(graph)\n  {\n    for(const test of this._testList)\n    {\n      test.ref.resetStatus();\n    }\n  }\n\n  onTestNew(e)\n  {\n    if (!this.isEmpty())\n    {\n      this.onTestClose(e);\n    }\n\n    this.onTestAdd(e);\n  }\n\n  onTestUpload(fileBlob)\n  {\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      try\n      {\n        this._testName = fileBlob.name;\n        this._testList.length = 0;\n\n        const tests = event.target.result.split(\"\\n\");\n        for(let test of tests)\n        {\n          test = test.trim();\n          if (test.length > 0)\n          {\n            this._testList.push({\n              id: guid(),\n              defaultValue: test,\n              ref: null\n            });\n          }\n        }\n\n        //Make sure an element exists, at least\n        if (this._testList.length <= 0)\n        {\n          this.onTestAdd(null);\n        }\n      }\n      catch(e)\n      {\n        reader.abort();\n      }\n    };\n    reader.readAsText(fileBlob);\n  }\n\n  onTestDownload(e)\n  {\n    const testStrings = [];\n    for(const test of this._testList)\n    {\n      const ref = test.ref;\n      if (ref)\n      {\n        testStrings.push(ref.getValue());\n      }\n    }\n\n    downloadText(this._testName, testStrings.join('\\n'));\n  }\n\n  onTestClose(e)\n  {\n    const tester = this.props.tester;\n    if (tester.isTesting())\n    {\n      tester.stopTest();\n    }\n\n    this._testList.length = 0;\n  }\n\n  onTestAdd(e)\n  {\n    this._testList.push({\n      id: guid(),\n      defaultValue: \"\",\n      ref: null\n    });\n  }\n\n  onTestRunAll(e)\n  {\n    const tester = this.props.tester;\n    let i = 0;\n\n    const nextTest = () => {\n      const test = this._testList[i];\n      this.onTestTest(null, test.ref, true, () => {\n        ++i;\n        if (i < this._testList.length)\n        {\n          nextTest();\n        }\n      });\n    }\n    nextTest();\n  }\n\n  onTestDelete(e, item)\n  {\n    //Already handled in render()\n  }\n\n  onTestTest(e, item, forceImmediate=false, callback=null)\n  {\n    const immediate = forceImmediate || this.props.immediate;\n    const tester = this.props.tester;\n    const itemValue = item.getValue();\n\n    item.setState({status: WORKING_MODE});\n\n    const graphController = this.props.graphController;\n    const machineController = this.props.machineController;\n    tester.startTest(itemValue, graphController, machineController).then((result) => {\n      item.setState({status: result ? SUCCESS_MODE : FAILURE_MODE});\n    }, (err) => {\n      //It didn't work out :(\n      item.setState({status: DEFAULT_MODE});\n    });\n\n    if (immediate)\n    {\n      const promise = tester.runTest(graphController, machineController, true);\n      if (callback)\n      {\n        promise.then(callback);\n      }\n    }\n  }\n\n  isEmpty()\n  {\n    return this._testList.length <= 0;\n  }\n  \n  //Override\n  render()\n  {\n    const immediate = this.props.immediate;\n    const tester = this.props.tester;\n\n    const graphController = this.props.graphController;\n    const machineController = this.props.machineController;\n\n    const empty = this.isEmpty();\n    const disabled = tester && tester.isTesting();\n\n    return (\n      <div id={this.props.id}\n        className={Style.test_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <div className={Style.test_control_tray}>\n          <IconButton className={Style.test_control_button}\n            title={I18N.toString(\"action.testing.new\")}\n            onClick={this.onTestNew}>\n            <PageContentIcon/>\n          </IconButton>\n          <IconUploadButton className={Style.test_control_button}\n            title={I18N.toString(\"action.testing.import\")}\n            accept={ACCEPT_FILE_TYPES.join(\",\")}\n            onUpload={this.onTestUpload}>\n            <UploadIcon/>\n          </IconUploadButton>\n          <IconButton className={Style.test_control_button}\n            title={I18N.toString(\"action.testing.save\")}\n            disabled={empty}\n            onClick={this.onTestDownload}>\n            <DownloadIcon/>\n          </IconButton>\n          <IconButton className={Style.test_control_button}\n            title={I18N.toString(\"action.testing.clear\")}\n            disabled={empty}\n            onClick={this.onTestClose}>\n            <CrossIcon/>\n          </IconButton>\n        </div>\n        <div className={Style.test_list_container +\n          (empty ? \" empty \" : \"\") +\n          (disabled ? \" disabled \": \"\")}>\n          <IconButton className={Style.test_list_add}\n            title={\"Add\"} onClick={this.onTestAdd}>\n            <AddIcon/>\n            <span className={Style.test_list_count}>\n              {!empty ? \"\" + this._testList.length : \"\"}\n            </span>\n          </IconButton>\n          <div className={Style.test_list_scroll_container}>\n            <div className={Style.test_list}>\n              {this._testList.map((e, i) => {\n                const id = e.id;\n                const defaultValue = e['defaultValue'] || \"\";\n                let testCallback = this.onTestTest;\n                if (!tester || graphController.getGraph().isEmpty())\n                {\n                  testCallback = null;\n                }\n                return <TestItem key={id} ref={ref=>e.ref=ref}\n                  defaultValue={defaultValue}\n                  onTest={testCallback}\n                  onDelete={(e, item) => {\n                    this._testList.splice(i, 1);\n                    this.onTestDelete(e, item);\n                  }}/>\n              })}\n            </div>\n          </div>\n          <IconButton className={Style.test_list_runall}\n            title={\"Run All\"} onClick={this.onTestRunAll}>\n            <RunningManIcon/>\n          </IconButton>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TestListView;\n","import React from 'react';\nimport DefaultNotificationLayout, {STYLE_TYPE_WARNING} from 'session/manager/notification/components/DefaultNotificationLayout.js';\n\nclass NFAToDFAConversionNotificationLayout extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e)\n  {\n    const notification = this.props.notification;\n    switch(e.target.value)\n    {\n      case \"convert\":\n      {\n        //FIXME: FSABUILDER: convertMachineTo needs to change?\n        const machineController = this.props.machineController;\n        machineController.convertMachineTo(\"DFA\");\n        notification.close();\n      }\n      break;\n    }\n  }\n\n  //Override\n  render()\n  {\n    const machineController = this.props.machineController;\n    const stateCount = machineController.countStates();\n\n    return (\n      <DefaultNotificationLayout id={this.props.id}\n        className={this.props.className}\n        style={this.props.style}\n        styleType={STYLE_TYPE_WARNING}\n        notification={this.props.notification}>\n        <p>{I18N.toString(\"message.warning.convertNFAToDFA\")}</p>\n        <p>{`${stateCount} states -> ${Math.pow(2, stateCount)} states`}</p>\n        <button value=\"convert\" onClick={this.onClick}>\n          {I18N.toString(\"message.action.convert\")}\n        </button>\n      </DefaultNotificationLayout>\n    );\n  }\n}\n\nexport default NFAToDFAConversionNotificationLayout;\n","import React from 'react';\nimport DefaultNotificationLayout, {STYLE_TYPE_ERROR} from 'session/manager/notification/components/DefaultNotificationLayout.js';\n\nclass StateNotificationLayout extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.targetIndex = 0;\n    this.targetLabel = \"\";\n    const targets = props.message.targets;\n    for(const target of targets)\n    {\n      if (this.targetLabel.length > 0)\n      {\n        this.targetLabel += \", \";\n      }\n      this.targetLabel += target.getNodeLabel();\n    }\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e)\n  {\n    const notification = this.props.notification;\n    const message = this.props.message;\n\n    const graphController = this.props.graphController;\n\n    switch(e.target.value)\n    {\n      case \"locate\":\n      {\n        const targets = message.targets;\n        const targetLength = targets.length;\n        if (targetLength > 0 && this.targetIndex < targetLength)\n        {\n          //Locate the target edge\n          const target = targets[this.targetIndex++];\n          if (this.targetIndex >= targetLength) this.targetIndex = 0;\n\n          //Move pointer to target\n          graphController.focusOnNode(target);\n        }\n      }\n      break;\n      case \"deleteall\":\n      {\n        const targets = message.targets;\n        //Delete all target nodes\n        graphController.deleteTargetNodes(targets);\n\n        //Sort the nodes after deleting if enabled...\n        graphController.applyAutoRename();\n\n        //Exit the message\n        notification.close();\n      }\n      break;\n    }\n  }\n\n  //Override\n  render()\n  {\n    const message = this.props.message;\n\n    return (\n      <DefaultNotificationLayout id={this.props.id}\n        className={this.props.className}\n        style={this.props.style}\n        styleType={STYLE_TYPE_ERROR}\n        notification={this.props.notification}>\n          <p>{message.text + \": \" + this.targetLabel}</p>\n          <button value=\"locate\" onClick={this.onClick}>\n            {I18N.toString(\"message.action.locate\")}\n          </button>\n          <button value=\"deleteall\" onClick={this.onClick}>\n            {I18N.toString(\"message.action.deleteall\")}\n          </button>\n      </DefaultNotificationLayout>\n    );\n  }\n}\n\nexport default StateNotificationLayout;\n","import React from 'react';\nimport DefaultNotificationLayout, {STYLE_TYPE_ERROR} from 'session/manager/notification/components/DefaultNotificationLayout.js';\nimport GraphNode from 'graph/GraphNode.js';\n\nconst ARROW = '\\u2192';\n\nclass TransitionNotificationLayout extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.targetIndex = 0;\n    this.targetLabel = \"\";\n    const targets = props.message.targets;\n    for(const target of targets)\n    {\n      if (this.targetLabel.length > 0)\n      {\n        this.targetLabel += \", \";\n      }\n      this.targetLabel += \"(\" + target.getSourceNode().getNodeLabel() + \", \" +\n        target.getEdgeLabel() + \") \" +\n        ARROW + \" \" + (target.getDestinationNode() instanceof GraphNode ? target.getDestinationNode().getNodeLabel() : \"null\");\n    }\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e)\n  {\n    const notification = this.props.notification;\n    const message = this.props.message;\n\n    const graphController = this.props.graphController;\n\n    switch(e.target.value)\n    {\n      case \"locate\":\n      {\n        const targets = message.targets;\n        const targetLength = targets.length;\n        if (targetLength > 0 && this.targetIndex < targetLength)\n        {\n          //Locate the target edge\n          const target = targets[this.targetIndex++];\n          if (this.targetIndex >= targetLength) this.targetIndex = 0;\n\n          //Move pointer to target\n          graphController.focusOnEdge(target);\n        }\n      }\n      break;\n      case \"deleteall\":\n      {\n        const targets = message.targets;\n        //Delete all target edges\n        graphController.deleteTargetEdges(targets);\n\n        //Exit the message\n        notification.close();\n      }\n      break;\n    }\n  }\n\n  //Override\n  render()\n  {\n    const message = this.props.message;\n\n    return (\n      <DefaultNotificationLayout id={this.props.id}\n        className={this.props.className}\n        style={this.props.style}\n        styleType={STYLE_TYPE_ERROR}\n        notification={this.props.notification}>\n          <p>{this.props.message.text + \": \" + this.targetLabel}</p>\n          <button value=\"locate\" onClick={this.onClick}>\n            {I18N.toString(\"message.action.locate\")}\n          </button>\n          <button value=\"deleteall\" onClick={this.onClick}>\n            {I18N.toString(\"message.action.deleteall\")}\n          </button>\n      </DefaultNotificationLayout>\n    );\n  }\n}\n\nexport default TransitionNotificationLayout;\n","import React from 'react';\nimport DefaultNotificationLayout, {STYLE_TYPE_ERROR} from 'session/manager/notification/components/DefaultNotificationLayout.js';\n\nclass StateMissingTransitionNotificationLayout extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.targetIndex = 0;\n    this.targetLabel = \"\";\n    const targets = props.message.targets;\n    for(const target of targets)\n    {\n      if (this.targetLabel.length > 0)\n      {\n        this.targetLabel += \", \";\n      }\n      this.targetLabel += target.getNodeLabel();\n    }\n    this.targetLabel += \" for \" + props.message.symbol;\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e)\n  {\n    const notification = this.props.notification;\n    const message = this.props.message;\n    const graphController = this.props.graphController;\n\n    switch(e.target.value)\n    {\n      case \"locate\":\n      {\n        const targets = message.targets;\n        const targetLength = targets.length;\n        if (targetLength > 0 && this.targetIndex < targetLength)\n        {\n          //Locate the target edge\n          const target = targets[this.targetIndex++];\n          if (this.targetIndex >= targetLength) this.targetIndex = 0;\n\n          //Move pointer to target\n          graphController.focusOnNode(target);\n        }\n      }\n      break;\n    }\n  }\n\n  //Override\n  render()\n  {\n    return (\n      <DefaultNotificationLayout id={this.props.id}\n        className={this.props.className}\n        style={this.props.style}\n        styleType={STYLE_TYPE_ERROR}\n        notification={this.props.notification}>\n        <p>{I18N.toString(\"message.error.missing\") + \": \" + this.targetLabel}</p>\n        <button value=\"locate\" onClick={this.onClick}>\n          {I18N.toString(\"message.action.locate\")}\n        </button>\n      </DefaultNotificationLayout>\n    );\n  }\n}\n\nexport default StateMissingTransitionNotificationLayout;\n","import React from 'react';\nimport DefaultNotificationLayout, {STYLE_TYPE_WARNING} from 'session/manager/notification/components/DefaultNotificationLayout.js';\n\nclass StateUnreachableNotificationLayout extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.targetIndex = 0;\n    this.targetLabel = \"\";\n    const targets = props.message;\n    for(const target of targets)\n    {\n      if (this.targetLabel.length > 0)\n      {\n        this.targetLabel += \", \";\n      }\n      this.targetLabel += target.getNodeLabel();\n    }\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e)\n  {\n    const notification = this.props.notification;\n    const message = this.props.message;\n    const graphController = this.props.graphController;\n\n    switch(e.target.value)\n    {\n      case \"locate\":\n      {\n        //Locate the target node\n        const target = message[this.targetIndex++];\n        if (this.targetIndex >= message.length)\n        {\n          this.targetIndex = 0;\n        }\n\n        //Move pointer to target\n        graphController.focusOnNode(target);\n      }\n      break;\n      case \"deleteall\":\n      {\n        const targets = message;\n        //Delete all target nodes\n        graphController.deleteTargetNodes(targets);\n\n        //Sort the nodes after deleting if enabled...\n        graphController.applyAutoRename();\n\n        //Exit the message\n        notification.close();\n      }\n      break;\n    }\n  }\n\n  //Override\n  render()\n  {\n    return (\n      <DefaultNotificationLayout id={this.props.id}\n        className={this.props.className}\n        style={this.props.style}\n        styleType={STYLE_TYPE_WARNING}\n        notification={this.props.notification}>\n        <p>{I18N.toString(\"message.warning.unreachable\") + \": \" + this.targetLabel}</p>\n        <button value=\"locate\" onClick={this.onClick}>\n          {I18N.toString(\"message.action.locate\")}\n        </button>\n        <button value=\"deleteall\" onClick={this.onClick}>\n          {I18N.toString(\"message.action.deleteall\")}\n        </button>\n      </DefaultNotificationLayout>\n    );\n  }\n}\n\nexport default StateUnreachableNotificationLayout;\n","import NFAToDFAConversionNotificationLayout from './NFAToDFAConversionNotificationLayout.js';\nexport const MACHINE_CONVERSION_LAYOUT_ID = \"machine-convert\";\nexport const MACHINE_CONVERSION_NOTIFICATION_TAG = \"machine-convert\";\n\nimport StateNotificationLayout from './StateNotificationLayout.js';\nexport const STATE_LAYOUT_ID = \"machine-state\";\n\nimport TransitionNotificationLayout from './TransitionNotificationLayout.js';\nexport const TRANSITION_LAYOUT_ID = \"machine-transition\";\n\nimport StateMissingTransitionNotificationLayout from './StateMissingTransitionNotificationLayout.js';\nexport const STATE_MISSING_LAYOUT_ID = \"machine-state-missing\";\n\nimport StateUnreachableNotificationLayout from './StateUnreachableNotificationLayout.js';\nexport const STATE_UNREACHABLE_LAYOUT_ID = \"machine-state-unreachable\";\n\nexport const MACHINE_ERROR_NOTIFICATION_TAG = \"machine-error\";\n\nexport function registerNotifications(notificationManager)\n{\n  notificationManager.registerNotificationLayout(MACHINE_CONVERSION_LAYOUT_ID, NFAToDFAConversionNotificationLayout);\n  notificationManager.registerNotificationLayout(STATE_MISSING_LAYOUT_ID, StateMissingTransitionNotificationLayout);\n  notificationManager.registerNotificationLayout(STATE_UNREACHABLE_LAYOUT_ID, StateUnreachableNotificationLayout);\n  notificationManager.registerNotificationLayout(STATE_LAYOUT_ID, StateNotificationLayout);\n  notificationManager.registerNotificationLayout(TRANSITION_LAYOUT_ID, TransitionNotificationLayout);\n};\n","import React from 'react';\nimport Style from './TestingPanel.css';\n\nimport PanelContainer from 'experimental/panels/PanelContainer.js';\nimport PanelSwitch from 'experimental/panels/PanelSwitch.js';\n\nimport TestListView from './TestListView.js';\n\nimport {MACHINE_ERROR_NOTIFICATION_TAG} from 'modules/fsa2/components/notifications/FSANotifications.js';\n\nclass TestingPanel extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.state = {\n      stepMode: false\n    };\n\n    this.onStepTestChange = this.onStepTestChange.bind(this);\n    this.onAutoErrorCheckChange = this.onAutoErrorCheckChange.bind(this);\n  }\n\n  //Override\n  componentDidMount()\n  {\n    //TODO: This should be in modules...\n    const session = this.props.session;\n    const app = session.getApp();\n    const currentModule = session.getCurrentModule();\n    const tester = currentModule._tester;\n    tester.on(\"startTest\", (tester) => {\n      app._viewport.setCurrentView(1);\n      app._drawer.setDrawerSoloClass(TestingPanel);\n      app._drawer.closeDrawer();\n    });\n    tester.on(\"stopTest\", (tester) => {\n      app._viewport.setCurrentView(0);\n      app._drawer.setDrawerSoloClass(null);\n      app._drawer.openDrawer();\n    });\n  }\n\n  onStepTestChange(e)\n  {\n    this.setState((prev, props) => {\n      return {stepMode: !prev.stepMode};\n    });\n  }\n\n  onAutoErrorCheckChange(e)\n  {\n    const currentModule = this.props.session.getCurrentModule();\n    const errorChecker = currentModule.getErrorChecker();\n    const errorCheck = errorChecker.isErrorChecking();\n    errorChecker.setErrorChecking(!errorCheck);\n    if (errorCheck)\n    {\n      //Turning it off\n      this.props.session.getApp().getNotificationManager().clearNotifications(MACHINE_ERROR_NOTIFICATION_TAG);\n    }\n  }\n\n  //Override\n  render()\n  {\n    const session = this.props.session;\n    const app = session.getApp();\n    const currentModule = session.getCurrentModule();\n    const graphController = currentModule.getGraphController();\n    const machineController = currentModule.getMachineController();\n    const tester = currentModule.getStringTester();\n    const errorChecker = currentModule.getErrorChecker();\n\n    const stepMode = this.state.stepMode;\n    const errorCheck = errorChecker.isErrorChecking();\n\n    return (\n      <PanelContainer id={this.props.id}\n        className={Style.panel_container +\n          \" \" + this.props.className}\n        style={this.props.style}\n        title={TestingPanel.TITLE}>\n\n        <TestListView tester={tester} graphController={graphController} machineController={machineController} immediate={!stepMode}/>\n        <PanelSwitch id={\"testing-step-test\"} checked={stepMode} onChange={this.onStepTestChange} title={\"Step testing\"}/>\n        <PanelSwitch id={\"testing-error-check\"} checked={errorCheck} onChange={this.onAutoErrorCheckChange} title={\"Auto error checking\"}/>\n\n      </PanelContainer>\n    );\n  }\n}\nObject.defineProperty(TestingPanel, 'TITLE', {\n  get: function() { return I18N.toString(\"component.testing.title\"); }\n});\n\nexport default TestingPanel;\n","import React from 'react';\nimport Style from './AnalysisPanel.css';\n\nimport PanelContainer from 'experimental/panels/PanelContainer.js';\nimport PanelSection from 'experimental/panels/PanelSection.js';\nimport PanelCheckbox from 'experimental/panels/PanelCheckbox.js';\n\nimport {\n  MACHINE_CONVERSION_LAYOUT_ID,\n  MACHINE_CONVERSION_NOTIFICATION_TAG\n} from 'modules/fsa2/components/notifications/FSANotifications.js';\n\nclass AnalysisPanel extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.optimizeUnreachOption = null;\n    this.optimizeRedundOption = null;\n\n    this.onConvertToDFA = this.onConvertToDFA.bind(this);\n    this.onConvertToNFA = this.onConvertToNFA.bind(this);\n    this.onInvertDFA = this.onInvertDFA.bind(this);\n\n    this.onOptimizeMachine = this.onOptimizeMachine.bind(this);\n  }\n\n  onDeleteAllUnreachable(e)\n  {\n    const session = this.props.session;\n    const currentModule = session.getCurrentModule();\n    const graphController = currentModule.getGraphController();\n    const machineController = currentModule.getMachineController();\n    const unreachableArray = machineController.getUnreachableNodes();\n    graphController.deleteTargetNodes(unreachableArray);\n  }\n\n  onConvertToDFA(e)\n  {\n    const session = this.props.session;\n    const currentModule = session.getCurrentModule();\n    const graphController = currentModule.getGraphController();\n    const machineController = currentModule.getMachineController();\n    const props = {graphController: graphController, machineController: machineController};\n\n    //Will do: machineController.convertMachineTo(\"DFA\");\n    session.getApp().getNotificationManager().pushNotification(\n      I18N.toString(\"message.warning.convertNFAToDFA\"),\n      MACHINE_CONVERSION_LAYOUT_ID, MACHINE_CONVERSION_NOTIFICATION_TAG, props, true\n    );\n  }\n\n  onConvertToNFA(e)\n  {\n    const session = this.props.session;\nconst currentModule = session.getCurrentModule();\n    const machineController = currentModule.getMachineController();\n    machineController.convertMachineTo(\"NFA\");\n  }\n\n  onInvertDFA(e)\n  {\n    const session = this.props.session;\nconst currentModule = session.getCurrentModule();\n    const machineController = currentModule.getMachineController();\n    machineController.invertMachine();\n  }\n\n  onOptimizeMachine(e)\n  {\n    if (this.optimizeUnreachOption.isChecked())\n    {\n      this.onDeleteAllUnreachable(e);\n    }\n  }\n\n  canOptimize()\n  {\n    return (this.optimizeRedundOption && this.optimizeRedundOption.isChecked()) ||\n    (this.optimizeUnreachOption && this.optimizeUnreachOption.isChecked());\n  }\n\n  //Override\n  render()\n  {\n    const session = this.props.session;\n    const currentModule = session.getCurrentModule();\n    const graphController = currentModule.getGraphController();\n    const machineController = currentModule.getMachineController();\n\n    return (\n      <PanelContainer id={this.props.id}\n        className={this.props.className}\n        style={this.props.style}\n        title={AnalysisPanel.TITLE}>\n        <PanelSection title={\"Optimizations\"} initial={true}>\n          <PanelCheckbox ref={ref=>this.optimizeUnreachOption=ref}\n            id=\"opt-unreach\" title=\"Unreachables\" value=\"unreach\"/>\n          <PanelCheckbox ref={ref=>this.optimizeRedundOption=ref} disabled={true}\n            id=\"opt-redund\" title=\"Redundant States\" value=\"redund\"/>\n          <button className={Style.analysis_button} onClick={this.onOptimizeMachine} disabled={!this.canOptimize()}>Optimize</button>\n          {\n            machineController.getMachineType() == \"DFA\" ?\n              <button className={Style.analysis_button} onClick={this.onConvertToNFA}>\n                {I18N.toString(\"action.overview.convertnfa\")}\n              </button>\n            : machineController.getMachineType() == \"NFA\" ?\n              <button className={Style.analysis_button} onClick={this.onConvertToDFA}>\n                {I18N.toString(\"action.overview.convertdfa\")}\n              </button>\n            : null\n          }\n        </PanelSection>\n        <PanelSection title={\"Related Machines\"}>\n          {machineController.getMachineType() === \"DFA\" &&\n            <button className={Style.analysis_button} onClick={this.onInvertDFA}>\n              {\"Flip all accept states\"}\n            </button>}\n        </PanelSection>\n      </PanelContainer>\n    );\n  }\n}\nObject.defineProperty(AnalysisPanel, 'TITLE', {\n  get: function() { return I18N.toString(\"component.analysis.title\"); }\n});\n\nexport default AnalysisPanel;\n","class TapeContext\n{\n  constructor(inputString, infiniteLeft=false, infiniteRight=false)\n  {\n    this._tapeInput = inputString ? inputString.split('') : [];\n    this._left = infiniteLeft;\n    this._right = infiniteRight;\n\n    this._index = 0;\n  }\n\n  stepForward()\n  {\n    ++this._index;\n  }\n\n  stepBackward()\n  {\n    --this._index;\n  }\n\n  finish()\n  {\n    this._index = (this._tapeInput.length * 2);\n  }\n\n  reset()\n  {\n    this._index = -1;\n  }\n\n  stop()\n  {\n    this.finish();\n    this.reset();\n  }\n\n  changeTapeSymbol(index, symbol=\"\")\n  {\n    this._tapeInput[index] = symbol;\n  }\n\n  getTapeSourceStatesByIndex(index)\n  {\n    return null;\n  }\n\n  getTapeSymbolByIndex(index)\n  {\n    if (index < 0 || index >= this._tapeInput.length) return \"\";\n    return this._tapeInput[index] || \"\";\n  }\n\n  isTapeLeftInfinite()\n  {\n    return this._left;\n  }\n\n  isTapeRightInfinite()\n  {\n    return this._right;\n  }\n\n  setCurrentTapeIndex(index)\n  {\n    this._index = index;\n  }\n\n  getCurrentTapeIndex()\n  {\n    return this._index;\n  }\n\n  getTapeInput()\n  {\n    return this._tapeInput;\n  }\n}\n\nexport default TapeContext;\n","import Eventable from 'util/Eventable.js';\n\nimport { solveFSAByStep } from 'modules/fsa2/machine/FSAUtils.js';\n\nimport TapeContext from './TapeContext.js';\n\nclass TestTapeContext extends TapeContext\n{\n  constructor(tester, graphController, machineController)\n  {\n    super(tester.getTestString(), false, true);\n\n    this._tester = tester;\n    this._graphController = graphController;\n    this._machineController = machineController;\n  }\n\n  //Override\n  stepForward()\n  {\n    const graphController = this._graphController;\n    const machineController = this._machineController;\n    this._tester.stepForward(graphController, machineController);\n  }\n\n  //Override\n  stepBackward()\n  {\n    const graphController = this._graphController;\n    const machineController = this._machineController;\n    this._tester.stepBackward(graphController, machineController);\n  }\n\n  //Override\n  reset()\n  {\n    this._tester.resetPosition();\n  }\n\n  //Override\n  finish()\n  {\n    const graphController = this._graphController;\n    const machineController = this._machineController;\n    this._tester.runTest(graphController, machineController, false);\n  }\n\n  //Override\n  stop()\n  {\n    this._tester.stopTest();\n  }\n\n  //Override\n  changeTapeSymbol(index, symbol=\"\")\n  {\n    throw new Error(\"Operation not yet supported\");\n  }\n\n  //Override\n  getTapeSourceStatesByIndex(index)\n  {\n    if (index < 0 || index >= this._tapeInput.length) return null;\n    return this._tester.getNodesAtPosition(index);\n  }\n\n  //Override\n  getTapeSymbolByIndex(index)\n  {\n    if (index < 0 || index >= this._tapeInput.length) return [];\n    return this._tapeInput[index] || \"\";\n  }\n\n  //Override\n  setCurrentTapeIndex(index)\n  {\n    this._tester.changePosition(index);\n  }\n\n  //Override\n  getCurrentTapeIndex()\n  {\n    return this._tester.getPosition();\n  }\n}\n\nclass StringTester\n{\n  constructor()\n  {\n    this._testString = null;\n    this._testIndex = -1;\n\n    this._tapeContext = null;\n\n    //For nfa solver use\n    this._cachePath = [];\n    this._cachedResult = null;\n    this._resolve = null;\n    this._reject = null;\n\n    this.registerEvent(\"startTest\");\n    this.registerEvent(\"stepTest\");\n    this.registerEvent(\"stopTest\");\n  }\n\n  //TODO: a hack to get current targets.\n  get targets()\n  {\n    if (this._cachePath.length <= 0) return [];\n    const cache = this._cachePath[this._cachePath.length - 1];\n    return cache.targets;\n  }\n\n  startTest(testString, graphController, machineController)\n  {\n    if (!testString) testString = \"\";\n    if (this._tapeContext) throw new Error(\"Unable to start an already running test\");\n\n    const graph = graphController.getGraph();\n    if (graph.isEmpty()) return Promise.reject();\n\n    this._testString = testString;\n    this._testIndex = -1;\n    this._cachePath.length = 0;\n    this._cachedResult = null;\n    this._tapeContext = new TestTapeContext(this, graphController, machineController);\n\n    this.emit(\"startTest\", this);\n\n    return new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  stopTest()\n  {\n    if (!this._tapeContext) throw new Error(\"Unable to stop null test\");\n\n    this.emit(\"stopTest\", this);\n\n    if (!this._resolve) throw new Error(\"Must call startTest() before anything else\");\n    if (!this._reject) throw new Error(\"Must call startTest() before anything else\");\n\n    let testResult = null;\n    if (this._cachePath.length >= this._testString.length)\n    {\n      testResult = this._cachedResult;\n      this._resolve(testResult);\n    }\n    else\n    {\n      testResult = null;\n      this._reject();\n    }\n\n    this._testString = null;\n    this._testIndex = -1;\n    this._cachePath.length = 0;\n    this._cachedResult = null;\n    this._tapeContext = null;\n\n    return Promise.resolve(testResult);\n  }\n\n  runTest(graphController, machineController, thenStop=false)\n  {\n    if (!this._tapeContext) throw new Error(\"Unable to run null test\");\n\n    return new Promise((resolve, reject) => {\n      let result = false;\n      do\n      {\n        result = this.stepForward(graphController, machineController, !thenStop);\n      }\n      while (result);\n\n      resolve(this._cachedResult);\n    }).then((result) => {\n      if (thenStop) return this.stopTest();\n      else return result;\n    });\n  }\n\n  stepForward(graphController, machineController, cacheStep=true)\n  {\n    const machine = machineController.getMachineBuilder().getMachine();\n\n    if (this._testIndex >= this._testString.length) return false;\n    ++this._testIndex;\n\n    if (this._cachePath.length <= this._testIndex)\n    {\n      //Calculate current step...\n      let cachedStates, cachedSymbols = null;\n      const isResult = this._testIndex === this._testString.length;\n\n      //Initialize first step...\n      if (this._testIndex <= 0)\n      {\n        cachedStates = [];\n        cachedSymbols = [];\n\n        const startState = machine.getStartState();\n        for (const currentState of machine.doClosureTransition(startState))\n        {\n          cachedStates.push({state: currentState, index: 0});\n        }\n      }\n      else\n      {\n        const prevCache = this._cachePath[this._testIndex - 1];\n        cachedStates = prevCache.states.slice();\n        cachedSymbols = prevCache.symbols.slice();\n\n        //Do the remaining steps...\n        const nextSymbol = this._testString[this._testIndex - 1];\n        solveFSAByStep(machine, nextSymbol, cachedStates, cachedSymbols);\n      }\n\n      //Do one last step for result...\n      if (isResult)\n      {\n        this._cachedResult = solveFSAByStep(machine, null, cachedStates, cachedSymbols);\n      }\n\n      //Store current step...\n      const targets = new Set();\n      for(const cachedState of cachedStates)\n      {\n        const node = cachedState.state.getSource();\n\n        //Couldn't find the node that was solved for this step...\n        if (!node) throw new Error(\"Could not find node \\'\" + cachedState.state + \"\\'\");\n\n        targets.add(node);\n      }\n      const nextCache = {\n        targets: Array.from(targets),\n        states: cachedStates,\n        symbols: cachedSymbols\n      };\n      this._cachePath.push(nextCache);\n    }\n    else\n    {\n      //Go forward a previously calculated step...by doing nothing...\n    }\n\n    this.emit(\"stepTest\");\n    return true;\n  }\n\n  stepBackward(graphController, machineController)\n  {\n    if (this._testIndex <= 0) return false;\n    --this._testIndex;\n\n    //Go back a step...by doing nothing...\n    this.emit(\"stepTest\");\n    return true;\n  }\n\n  isTesting()\n  {\n    return this._testString !== null;\n  }\n\n  changePosition(position)\n  {\n    if (position >= this._cachePath.length)\n    {\n      this._testIndex = this._cachePath.length - 1;\n    }\n    else\n    {\n      if (position < 0)\n      {\n        this._testIndex = 0;\n      }\n      else if (position >= this._testString.length)\n      {\n        this._testIndex = this._testString.length - 1;\n      }\n      else\n      {\n        this._testIndex = position;\n      }\n    }\n  }\n\n  resetPosition()\n  {\n    this._testIndex = -1;\n  }\n\n  getPosition()\n  {\n    return this._testIndex;\n  }\n\n  isComputedPosition(position)\n  {\n    return this._cachePath.length > position;\n  }\n\n  getCurrentNodes()\n  {\n    if (this._testIndex >= 0 && this._testIndex < this._cachePath.length)\n    {\n      return this._cachePath[this._testIndex];\n    }\n    else\n    {\n      return null;\n    }\n  }\n\n  getNodesAtPosition(position)\n  {\n    if (position >= 0 && position < this._cachePath.length)\n    {\n      return this._cachePath[position].targets;\n    }\n    else\n    {\n      return null;\n    }\n  }\n\n  getTestString()\n  {\n    return this._testString;\n  }\n\n  getTapeContext()\n  {\n    return this._tapeContext;\n  }\n}\nEventable.mixin(StringTester);\n\nexport default StringTester;\n","import {SUCCESS_LAYOUT_ID} from 'session/manager/notification/NotificationManager.js';\nimport {\n  MACHINE_ERROR_NOTIFICATION_TAG,\n  STATE_LAYOUT_ID,\n  TRANSITION_LAYOUT_ID,\n  STATE_UNREACHABLE_LAYOUT_ID,\n  STATE_MISSING_LAYOUT_ID\n} from './components/notifications/FSANotifications.js';\n\nimport {\n  ERROR_UNREACHABLE_STATE,\n  ERROR_DUPLICATE_STATE,\n  ERROR_INCOMPLETE_TRANSITION,\n  ERROR_DUPLICATE_TRANSITION,\n  ERROR_MISSING_TRANSITION,\n  ERROR_EMPTY_TRANSITION\n} from './machine/FSABuilder.js';\n\nclass FSAErrorChecker\n{\n  constructor(app, graphController, machineController)\n  {\n    this._app = app;\n    this._graphController = graphController;\n    this._machineController = machineController;\n    this._showErrorOnChange = false;\n\n    this.onMachineChange = this.onMachineChange.bind(this);\n\n    machineController.getMachineBuilder().getMachineChangeHandler().addListener(this.onMachineChange);\n  }\n\n  onMachineChange(machineBuilder)\n  {\n    if (this._showErrorOnChange)\n    {\n      this.showErrors();\n    }\n  }\n\n  setErrorChecking(enabled)\n  {\n    this._showErrorOnChange = enabled;\n  }\n\n  isErrorChecking()\n  {\n    return this._showErrorOnChange;\n  }\n\n  showErrors()\n  {\n    const props = {graphController: this._graphController, machineController: this._machineController};\n    const machineBuilder = this._machineController.getMachineBuilder();\n    const errors = machineBuilder.getMachineErrors();\n    const warnings = machineBuilder.getMachineWarnings();\n    const app = this._app;\n    const notificationManager = app.getNotificationManager();\n    console.log(notificationManager);\n\n    notificationManager.clearNotifications(MACHINE_ERROR_NOTIFICATION_TAG);\n    if (errors.length <= 0 && warnings.length <= 0)\n    {\n      notificationManager.pushNotification(\n        I18N.toString(\"message.error.none\"),\n        SUCCESS_LAYOUT_ID, MACHINE_ERROR_NOTIFICATION_TAG, null, false);\n    }\n    else\n    {\n      for(const warning of warnings)\n      {\n        switch(warning.name)\n        {\n          case ERROR_UNREACHABLE_STATE:\n            notificationManager.pushNotification(warning.nodes,\n              STATE_UNREACHABLE_LAYOUT_ID, MACHINE_ERROR_NOTIFICATION_TAG, props, false);\n          break;\n        }\n      }\n\n      for(const error of errors)\n      {\n        switch(error.name)\n        {\n          case ERROR_DUPLICATE_STATE:\n            notificationManager.pushNotification({\n              text: \"Found duplicate nodes of similar names\",\n              targets: error.nodes\n            }, STATE_LAYOUT_ID, MACHINE_ERROR_NOTIFICATION_TAG, props, false);\n          break;\n          case ERROR_INCOMPLETE_TRANSITION:\n            notificationManager.pushNotification({\n              text: I18N.toString(\"message.error.incomplete\"),\n              targets: error.edges\n            }, TRANSITION_LAYOUT_ID, MACHINE_ERROR_NOTIFICATION_TAG, props, false);\n          break;\n          case ERROR_DUPLICATE_TRANSITION:\n            notificationManager.pushNotification({\n              text: I18N.toString(\"message.error.dupe\"),\n              targets: error.edges\n            }, TRANSITION_LAYOUT_ID, MACHINE_ERROR_NOTIFICATION_TAG, props, false);\n          break;\n          case ERROR_MISSING_TRANSITION:\n            notificationManager.pushNotification({\n              targets: [error.node],\n              symbol: error.symbols\n            }, STATE_MISSING_LAYOUT_ID, MACHINE_ERROR_NOTIFICATION_TAG, props, false);\n          break;\n          case ERROR_EMPTY_TRANSITION:\n            notificationManager.pushNotification({\n              text: I18N.toString(\"message.error.empty\"),\n              targets: error.edges\n            }, TRANSITION_LAYOUT_ID, MACHINE_ERROR_NOTIFICATION_TAG, props, false);\n          break;\n        }\n      }\n    }\n  }\n}\n\nexport default FSAErrorChecker;\n","import React from 'react';\nimport Style from 'experimental/viewport/ViewportView.css';\n\nimport ModeSelectTray from 'experimental/widgets/ModeSelectTray.js';\nimport TrashCanWidget from 'experimental/widgets/TrashCanWidget.js';\nimport NavbarWidget from 'experimental/widgets/NavbarWidget.js';\n\nclass EditPane extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const session = this.props.session;\n    const currentModule = session.getCurrentModule();\n    const app = session.getApp();\n\n    const viewport = this.props.viewport;\n    const inputController = currentModule.getInputController();\n    const graphController = currentModule.getGraphController();\n    const inputActionMode = inputController.isActionMode();\n\n    return (\n      <div id={this.props.id}\n        className={Style.view_pane +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <NavbarWidget className={Style.view_widget} style={{right: 0}}\n          app={app}/>\n        <div className={Style.view_widget} style={{bottom: 0, left: 0}}>\n          <ModeSelectTray mode={inputActionMode ? 0 : 1} onChange={modeIndex => inputController.setInputScheme(modeIndex === 0)}/>\n        </div>\n        <div className={Style.view_widget} style={{bottom: 0, right: 0}}>\n          <TrashCanWidget app={app} inputController={inputController} graphController={graphController}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditPane;\n","import React from 'react';\nimport Style from 'experimental/viewport/ViewportView.css';\n\nimport TapeWidget from 'experimental/widgets/TapeWidget.js';\nimport NavbarWidget from 'experimental/widgets/NavbarWidget.js';\n\nclass TapePane extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  componentDidMount()\n  {\n    const session = this.props.session;\n    const currentModule = session.getCurrentModule();\n    const inputController = currentModule.getInputController();\n\n    inputController.setDisabled(true);\n  }\n\n  //Override\n  componentWillUnmount()\n  {\n    const session = this.props.session;\n    const currentModule = session.getCurrentModule();\n    const inputController = currentModule.getInputController();\n\n    inputController.setDisabled(false);\n  }\n\n  //Override\n  render()\n  {\n    const session = this.props.session;\n    const currentModule = session.getCurrentModule();\n    const app = session.getApp();\n\n    const viewport = this.props.viewport;\n    const tester = currentModule._tester;\n    const inputController = currentModule.getInputController();\n    const graphController = currentModule.getGraphController();\n    const machineController = currentModule.getMachineController();\n\n    return (\n      <div id={this.props.id}\n        className={Style.view_pane +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <NavbarWidget className={Style.view_widget} style={{right: 0}}\n          app={app}/>\n        <div className={Style.view_widget} style={{bottom: 0}}>\n          <TapeWidget value={tester ? tester.getTapeContext() : null}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TapePane;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 56 56\">\n        <path fill=\"#E9E9E0\" d=\"M36.985,0H7.963C7.155,0,6.5,0.655,6.5,1.926V55c0,0.345,0.655,1,1.463,1h40.074 c0.808,0,1.463-0.655,1.463-1V12.978c0-0.696-0.093-0.92-0.257-1.085L37.607,0.257C37.442,0.093,37.218,0,36.985,0z\"/>\n        <polygon fill=\"#D9D7CA\" points=\"37.5,0.151 37.5,12 49.349,12 \t\"/>\n        <path fill=\"#F29C1F\" d=\"M48.037,56H7.963C7.155,56,6.5,55.345,6.5,54.537V39h43v15.537C49.5,55.345,48.845,56,48.037,56z\"/>\n        <path fill=\"#FFFFFF\" d=\"M19.379,48.105L21.936,53h-1.9l-1.6-3.801h-0.137L16.576,53h-1.9l2.557-4.895l-2.721-5.182h1.873 l1.777,4.102h0.137l1.928-4.102H22.1L19.379,48.105z\"/>\n        <path fill=\"#FFFFFF\" d=\"M31.998,42.924h1.668V53h-1.668v-6.932l-2.256,5.605h-1.449l-2.27-5.605V53h-1.668V42.924h1.668 l2.994,6.891L31.998,42.924z\"/>\n        <path fill=\"#FFFFFF\" d=\"M37.863,42.924v8.832h4.635V53h-6.303V42.924H37.863z\"/>\n        <path fill=\"#F29C1F\" d=\"M15.5,24c-0.256,0-0.512-0.098-0.707-0.293c-0.391-0.391-0.391-1.023,0-1.414l6-6 c0.391-0.391,1.023-0.391,1.414,0s0.391,1.023,0,1.414l-6,6C16.012,23.902,15.756,24,15.5,24z\"/>\n        <path fill=\"#F29C1F\" d=\"M21.5,30c-0.256,0-0.512-0.098-0.707-0.293l-6-6c-0.391-0.391-0.391-1.023,0-1.414 s1.023-0.391,1.414,0l6,6c0.391,0.391,0.391,1.023,0,1.414C22.012,29.902,21.756,30,21.5,30z\"/>\n        <path fill=\"#F29C1F\" d=\"M33.5,30c-0.256,0-0.512-0.098-0.707-0.293c-0.391-0.391-0.391-1.023,0-1.414l6-6 c0.391-0.391,1.023-0.391,1.414,0s0.391,1.023,0,1.414l-6,6C34.012,29.902,33.756,30,33.5,30z\"/>\n        <path fill=\"#F29C1F\" d=\"M39.5,24c-0.256,0-0.512-0.098-0.707-0.293l-6-6c-0.391-0.391-0.391-1.023,0-1.414 s1.023-0.391,1.414,0l6,6c0.391,0.391,0.391,1.023,0,1.414C40.012,23.902,39.756,24,39.5,24z\"/>\n        <path fill=\"#F29C1F\" d=\"M24.5,32c-0.11,0-0.223-0.019-0.333-0.058c-0.521-0.184-0.794-0.755-0.61-1.276l6-17 c0.185-0.521,0.753-0.795,1.276-0.61c0.521,0.184,0.794,0.755,0.61,1.276l-6,17C25.298,31.744,24.912,32,24.5,32z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import AbstractGraphExporter from 'session/manager/export/AbstractGraphExporter.js';\n\nimport XMLFileIcon from 'experimental/iconset/flat/XMLFileIcon.js';\nimport { XML as XMLGraphParser } from 'modules/fsa/graph/FSAGraphParser.js';\nimport { downloadText } from 'util/Downloader.js';\n\nclass JFLAPGraphExporter extends AbstractGraphExporter\n{\n  constructor() { super(); }\n\n  //Override\n  importFromFile(fileBlob, module)\n  {\n    return new Promise((resolve, reject) => {\n      const filename = fileBlob.name;\n      if (!filename.endsWith(this.getFileType()))\n      {\n        throw new Error(\"Trying to import invalid file type for \\'\" + this.getFileType() + \"\\': \" + filename);\n      }\n\n      const reader = new FileReader();\n      reader.onload = e => {\n        const graphController = module.getGraphController();\n        const machineController = module.getMachineController();\n        const data = e.target.result;\n        const name = filename.substring(0, filename.length - this.getFileType().length - 1);\n        const graph = graphController.getGraph();\n\n        //TODO: this should not be here, this should exist somewhere in graphController\n        module.getApp().getUndoManager().captureEvent();\n\n        try\n        {\n          const xmlData = new DOMParser().parseFromString(data, \"text/xml\");\n          XMLGraphParser.parse(xmlData, graph);\n\n          //graphController.emit(\"userImportGraph\", graph);\n\n          module.getApp().getSession().setProjectName(name);\n\n          resolve();\n        }\n        catch (e)\n        {\n          reader.abort();\n          reject(e);\n        }\n        finally\n        {\n          module.getApp().getUndoManager().captureEvent();\n        }\n      };\n\n      reader.onerror = e => {\n        reject(new Error(\"Unable to import file: \" + e.target.error.code));\n      }\n\n      reader.readAsText(fileBlob);\n    });\n  }\n\n  //Override\n  exportToFile(filename, module)\n  {\n    const graph = module.getGraphController().getGraph();\n    const graphData = XMLGraphParser.objectify(graph);\n    const xmlString = new XMLSerializer().serializeToString(graphData);\n    downloadText(filename + '.' + this.getFileType(), xmlString);\n  }\n\n  //Override\n  doesSupportFile()\n  {\n    return true;\n  }\n\n  //Override\n  canImport(module)\n  {\n    return true;\n  }\n\n  //Override\n  getTitle()\n  {\n    return I18N.toString(\"file.export.jff.hint\");\n  }\n\n  //Override\n  getLabel()\n  {\n    return I18N.toString(\"file.export.jff\");\n  }\n\n  //Override\n  getFileType()\n  {\n    return \"jff\";\n  }\n\n  //Override\n  getIconClass()\n  {\n    return XMLFileIcon;\n  }\n}\n\nexport default JFLAPGraphExporter;\n","import React from 'react';\nimport PanelContainer from 'experimental/panels/PanelContainer.js';\n\nimport NodalGraphInputManager from 'modules/nodalgraph/manager/NodalGraphInputManager.js';\nimport MachineController from './controller/MachineController.js';\n\nimport FSAGraph from 'modules/fsa/graph/FSAGraph.js';\nimport FSAGraphLabeler from 'modules/fsa/graph/FSAGraphLabeler.js';\nimport * as FSAGraphParser from 'modules/fsa/graph/FSAGraphParser.js';\n\nimport FSAGraphRenderer from './renderer/FSAGraphRenderer.js';\nimport FSALabelEditorRenderer from './renderer/FSALabelEditorRenderer.js';\nimport GraphInputRenderer from 'modules/nodalgraph/controller/renderer/GraphInputRenderer.js';\n\nimport OverviewPanel from './components/panels/overview/OverviewPanel.js';\nimport TestingPanel from './components/panels/testing/TestingPanel.js';\nimport AnalysisPanel from './components/panels/analysis/AnalysisPanel.js';\n\nimport StringTester from './tester/StringTester.js';\nimport FSAErrorChecker from './FSAErrorChecker.js';\n\nimport EditPane from './components/views/EditPane.js';\nimport TapePane from './components/views/TapePane.js';\nimport {CTRL_KEY, ALT_KEY, SHIFT_KEY} from 'session/manager/hotkey/HotKeyManager.js';\nimport {RENDER_LAYER_WORKSPACE} from 'session/manager/RenderManager.js';\n\nimport FSAGraphExporter from './exporter/FSAGraphExporter.js';\nimport JFLAPGraphExporter from './exporter/JFLAPGraphExporter.js';\nimport {DEFAULT_IMAGE_EXPORTERS} from 'modules/nodalgraph/NodalGraphImageExporter.js';\nimport SafeGraphEventHandler from 'modules/nodalgraph/SafeGraphEventHandler.js';\n\nimport {registerNotifications} from './components/notifications/FSANotifications.js';\n\nimport GraphNodeInputHandler from 'modules/nodalgraph/controller/inputhandler/GraphNodeInputHandler.js';\nimport GraphInitialInputHandler from 'modules/nodalgraph/controller/inputhandler/GraphInitialInputHandler.js';\nimport GraphEdgeInputHandler from 'modules/nodalgraph/controller/inputhandler/GraphEdgeInputHandler.js';\nimport GraphEndpointInputHandler from 'modules/nodalgraph/controller/inputhandler/GraphEndpointInputHandler.js';\nimport GraphNodeCreateInputHandler from 'modules/nodalgraph/controller/inputhandler/GraphNodeCreateInputHandler.js';\nimport GraphNodeAcceptInputHandler from 'modules/nodalgraph/controller/inputhandler/GraphNodeAcceptInputHandler.js';\n\nimport GraphNodePickHandler from 'modules/nodalgraph/controller/pickhandler/GraphNodePickHandler.js';\nimport GraphEdgePickHandler from 'modules/nodalgraph/controller/pickhandler/GraphEdgePickHandler.js';\nimport GraphEndpointPickHandler from 'modules/nodalgraph/controller/pickhandler/GraphEndpointPickHandler.js';\nimport GraphInitialPickHandler from 'modules/nodalgraph/controller/pickhandler/GraphInitialPickHandler.js';\n\nimport * as UserUtil from 'experimental/UserUtil.js';\n\nconst MODULE_NAME = \"fsa2\";\nconst MODULE_VERSION = \"0.0.1\";\n\nclass FSAModule\n{\n  constructor(app)\n  {\n    this._app = app;\n\n    this._inputManager = new NodalGraphInputManager(this,\n      new FSAGraph(),\n      new FSAGraphLabeler(),\n      FSAGraphParser,\n      FSALabelEditorRenderer);\n    this._inputManager.getInputController().getPicker()\n      .addPickHandler(this._initialPickHandler = new GraphInitialPickHandler())\n      .addPickHandler(this._endpointPickHandler = new GraphEndpointPickHandler())\n      .addPickHandler(this._nodePickHandler = new GraphNodePickHandler())\n      .addPickHandler(this._edgePickHandler = new GraphEdgePickHandler());\n    this._inputManager.getInputController()\n      .addInputHandler(this._nodeInputHandler = new GraphNodeInputHandler())\n      .addInputHandler(this._edgeInputHandler = new GraphEdgeInputHandler())\n      .addInputHandler(this._endpointInputHandler = new GraphEndpointInputHandler())\n      .addInputHandler(this._initialInputHandler = new GraphInitialInputHandler())\n      .addInputHandler(this._createInputHandler = new GraphNodeCreateInputHandler())\n      .addInputHandler(this._acceptInputHandler = new GraphNodeAcceptInputHandler());\n    this._machineController = new MachineController(this);\n\n    this._errorChecker = new FSAErrorChecker(app,\n      this._inputManager.getGraphController(),\n      this._machineController);\n    this._tester = new StringTester();\n  }\n\n  //Override\n  initialize(app)\n  {\n    registerNotifications(app.getNotificationManager());\n\n    //TODO: These should have a pre/post handlers...\n    app.getExportManager()\n      .addExporter(new FSAGraphExporter())\n      .addExporter(new JFLAPGraphExporter())\n      .addExporters(DEFAULT_IMAGE_EXPORTERS);\n\n    app.getViewportManager()\n      .addViewClass(EditPane)\n      .addViewClass(TapePane);\n\n    app.getDrawerManager()\n      .addPanelClass(props => (\n        <PanelContainer id={props.id}\n          className={props.className}\n          style={props.style}\n          title={\"Finite State Automata\"}>\n          <p>{\"Brought to you with \\u2764 by the Flap.js team.\"}</p>\n          <p>{\"<- Tap on a tab to begin!\"}</p>\n        </PanelContainer>\n      ))\n      .addPanelClass(OverviewPanel)\n      .addPanelClass(TestingPanel)\n      .addPanelClass(AnalysisPanel);\n\n    app.getHotKeyManager()\n      .registerHotKey(\"Export to PNG\", [CTRL_KEY, 'KeyP'], () => {app.getExportManager().tryExportToFile(DEFAULT_IMAGE_EXPORTERS[0])})\n      .registerHotKey(\"Save as JSON\", [CTRL_KEY, 'KeyS'], () => {app.getExportManager().tryExportToFile(app.getExportManager().getDefaultExporter())})\n      .registerHotKey(\"New\", [CTRL_KEY, 'KeyN'], () => {this.clear(app)})\n      .registerHotKey(\"Undo\", [CTRL_KEY, 'KeyZ'], () => {app.getUndoManager().undo()})\n      .registerHotKey(\"Redo\", [CTRL_KEY, SHIFT_KEY, 'KeyZ'], () => {app.getUndoManager().redo()});\n\n    app.getRenderManager()\n      .addRenderer(RENDER_LAYER_WORKSPACE, props => (\n        <>\n          {/* Graph objects */\n            <FSAGraphRenderer currentModule={this} parent={props.workspace}/>}\n        </>\n      ))\n      .addRenderer(RENDER_LAYER_WORKSPACE, props => (\n        <GraphInputRenderer currentModule={this}/>\n      ));\n\n    app.getUndoManager()\n      .setEventHandlerFactory((...args) => {\n        return new SafeGraphEventHandler(this._inputManager.getGraphController(), this._inputManager.getGraphParser());\n      });\n\n    app.getTooltipManager()\n      .addTooltip(I18N.toString(\"message.workspace.empty\"))\n      .addTooltip(\"If you need help, try the \\'?\\' at the top.\")\n      .addTooltip(\"Or you can choose to do nothing.\")\n      .addTooltip(\"I can't do anything about that.\")\n      .addTooltip(\"You really should consider doing something though, for the sake of both of us.\")\n      .addTooltip(\"Of course, it is your free will.\")\n      .addTooltip(\"You do you.\")\n      .addTooltip(\"Please do something.\")\n      .addTooltip(\"I need my job.\")\n      .addTooltip(I18N.toString(\"message.workspace.empty\"));\n\n    const machineController = this.getMachineController();\n    machineController.initialize(this);\n\n    this._inputManager.onSessionStart(app.getSession());\n  }\n\n  //Override\n  update(app)\n  {\n    this._inputManager.update(this);\n\n    const machineController = this.getMachineController();\n    machineController.update(this);\n  }\n\n  //Override\n  destroy(app)\n  {\n    this._inputManager.onSessionStop(app.getSession());\n\n    const machineController = this.getMachineController();\n    machineController.destroy(this);\n  }\n\n  //Override\n  clear(app, graphOnly=false)\n  {\n    UserUtil.userClearGraph(app, graphOnly, () => app.getToolbarComponent().closeBar());\n  }\n\n  getInputManager() { return this._inputManager; }\n\n  getInputController() { return this._inputManager.getInputController(); }\n  getMachineController() { return this._machineController; }\n  getGraphController() { return this._inputManager.getGraphController(); }\n\n  getErrorChecker() { return this._errorChecker; }\n  getStringTester() { return this._tester; }\n\n  //Override\n  getModuleVersion() { return MODULE_VERSION; }\n  //Override\n  getModuleName() { return MODULE_NAME; }\n  //Override\n  getLocalizedModuleName() { return this._machineController.getMachineType(); }\n  getApp() { return this._app; }\n}\n\nexport default FSAModule;\n","import React from 'react';\nimport Style from './IconButton.css';\n\nclass IconButton extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const title = this.props.title;\n    const showButtonLabel = IconButton.SHOW_LABEL && title;\n\n    return (\n      <button id={this.props.id}\n        className={Style.icon_button +\n          (showButtonLabel ? \" hint \" : \"\") +\n          \" \" + this.props.className}\n        style={this.props.style}\n        title={title}\n        disabled={this.props.disabled}\n        onClick={this.props.onClick}>\n        {this.props.children}\n        <label>{title}</label>\n      </button>\n    );\n  }\n}\nIconButton.SHOW_LABEL = false;\n\nexport default IconButton;\n","import React from 'react';\nimport Style from './PanelContainer.css';\n\nclass PanelContainer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n  \n  //Override\n  render()\n  {\n    const title = this.props.title;\n\n    return (\n      <div id={this.props.id}\n        className={Style.panel_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <div className={Style.panel_title}>\n          <h1>{title}</h1>\n        </div>\n        <div className={Style.panel_content}>\n          {this.props.children}\n        </div>\n        <div className={Style.panel_bottom}>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PanelContainer;\n","import React from 'react';\nimport Style from './DefaultNotificationLayout.css';\n\nexport const STYLE_TYPE_DEFAULT = \"default\";\nexport const STYLE_TYPE_WARNING = \"warning\";\nexport const STYLE_TYPE_ERROR = \"error\";\nexport const STYLE_TYPE_SUCCESS = \"success\";\n\nclass DefaultNotificationLayout extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const message = this.props.message;\n    const notification = this.props.notification;\n\n    return (\n      <div id={this.props.id}\n        className={Style.notification_container +\n          \" \" + this.props.styleType +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        {message &&\n          message.split('\\n').map((e, i) => <p key={e + \":\" + i}>{e}</p>)}\n        {this.props.children}\n        {notification &&\n          <button onClick={e => notification.close()}>\n            {I18N.toString(\"message.action.close\")}\n          </button>}\n      </div>\n    );\n  }\n}\n\nexport default DefaultNotificationLayout;\n","import GraphElement from 'graph/GraphElement.js';\nimport { guid, stringHash } from 'util/MathHelper.js';\n\nconst FROM_STATE_INDEX = 0;\nconst SYMBOL_INDEX = 1;\nconst TO_STATE_INDEX = 2;\n\nexport const EMPTY_SYMBOL = '&empty';\n\nexport class State\n{\n  constructor(label=\"\", src=null)\n  {\n    this._label = label;\n\n    this._src = src;\n    this._id = src instanceof GraphElement ? src.getGraphElementID() : guid();\n  }\n\n  copy()\n  {\n    const result = new State();\n    result._label = this._label;\n    result._src = this._src;\n    result._id = this._id;\n    return result;\n  }\n\n  getStateLabel() { return this._label; }\n\n  getStateID() { return this._id; }\n  getSource() { return this._src; }\n\n  getHashString()\n  {\n    return this._id;\n  }\n}\n\nexport class Transition\n{\n  constructor(from, to, symbols=[])\n  {\n    this._from = from;\n    this._to = to;\n    this._symbols = symbols;\n  }\n\n  copy()\n  {\n    const result = new Transition();\n    result._from = this._from;\n    result._to = this._to;\n    result._symbols = this._symbols.slice();\n    return result;\n  }\n\n  getSourceState() { return this._from; }\n  getDestinationState() { return this._to; }\n\n  addSymbol(symbol) { this._symbols.push(symbol); }\n  hasSymbol(symbol) { return this._symbols.includes(symbol); }\n  getSymbols() { return this._symbols; }\n\n  getHashString()\n  {\n    return this._from.getHashString() + \":\" + this._symbols.join(\",\") + \":\" + this._to.getHashString();\n  }\n}\n\nclass FSA\n{\n  constructor(deterministic=false)\n  {\n    //state id -> state\n    this._states = new Map();\n    //symbol -> symbol use counter\n    this._alphabet = new Map();\n    //transition key (from + to) -> transition object\n    this._transitions = new Map();\n    this._finalStates = new Set();\n    this._customSymbols = new Set();\n    this._startState = null;\n\n    this._deterministic = deterministic;\n    this._errors = [];\n  }\n\n  /**\n   * Performs a shallow copy of the 2 machines. Any changes to a state will be\n   * reflected in both. However, changes to transitions, alphabet, and final\n   * states will not propagate.\n   */\n  copy(fsa)\n  {\n    //You are already yourself, don't copy nothing.\n    if (fsa === this) return;\n\n    //Make room for the copy...\n    this.clear();\n\n    //Copy state\n    for(const [key, value] of fsa._states.entries())\n    {\n      const result = value.copy();\n      this._states.set(key, result);\n\n      //Copy start state\n      if (fsa.isStartState(value))\n      {\n        this._startState = result;\n      }\n      //Copy final states\n      if (fsa.isFinalState(value))\n      {\n        this._finalStates.add(result);\n      }\n    }\n    //Copy alphabet\n    for(const [key, value] of fsa._alphabet.entries())\n    {\n      this._alphabet.set(key, value);\n    }\n    //Copy transitions\n    for(const [key, value] of fsa._transitions.entries())\n    {\n      const result = value.copy();\n      result._from = this._states.get(value.getSourceState().getStateID());\n      result._to = this._states.get(value.getDestinationState().getStateID());\n      this._transitions.set(key, result);\n    }\n    //Copy custom symbols\n    for(const symbol of fsa._customSymbols)\n    {\n      this._customSymbols.add(symbol);\n    }\n\n    //Copy determinism\n    this._deterministic = fsa._deterministic;\n\n    //Copy errors\n    for(const error of fsa._errors)\n    {\n    //WARNING: if the error's store state objects, they need to be redirected to the copies\n      this._errors.push(error);\n    }\n  }\n\n  clear()\n  {\n    this._states.clear();\n    this._alphabet.clear();\n    this._transitions.clear();\n    this._finalStates.clear();\n    this._customSymbols.clear();\n    this._startState = null;\n\n    this._errors.length = 0;\n  }\n\n  setDeterministic(deterministic) { this._deterministic = deterministic; }\n  isDeterministic() { return this._deterministic; }\n\n  validate()\n  {\n    //Reset errors\n    this._errors.length = 0;\n\n    if (this._deterministic)\n    {\n      const foundSymbols = new Map();\n      for(const key of this._alphabet.keys())\n      {\n        foundSymbols.set(key, false);\n      }\n\n      for(const state of this._states.values())\n      {\n        //Get all outgoing transitions\n        const transitions = this.getOutgoingTransitions(state);\n        for(const transition of transitions)\n        {\n          const symbol = transition[SYMBOL_INDEX];\n\n          //We don't need to worry about empty symbols cause this is a DFA\n          //So just assume every symbol is a valid one\n          if (!foundSymbols.get(symbol))\n          {\n            foundSymbols.set(symbol, true);\n          }\n          else\n          {\n            //Found duplicate\n            this._errors.push(\"duplicate symbol: \" + symbol);\n            return false;\n          }\n        }\n\n        //Reset foundSymbols for next state\n        for(const key of foundSymbols.keys())\n        {\n          if (!foundSymbols.get(key))\n          {\n            //Found missing symbol for state\n            this._errors.push(\"missing symbol: \" + key);\n            return false;\n          }\n\n          //Reset found symbol\n          foundSymbols.set(key, false);\n        }\n      }\n\n      //No errors found\n      this._errors.length = 0;\n      return true;\n    }\n    else\n    {\n      //It is a valid NFA already\n      this._errors.length = 0;\n      return true;\n    }\n  }\n  isValid() { return this._errors.length == 0; }\n  getErrors() { return this._errors; }\n\n  createState(label=\"\")\n  {\n    return this.addState(new State(label));\n  }\n\n  addState(state)\n  {\n    const stateID = state.getStateID();\n    if (this._states.has(stateID)) throw new Error(\"Already added state with id \\'\" + stateID + \"\\'\");\n    //Make state as new start state if no other states exist...\n    if (this._states.size <= 0) this._startState = state;\n    //Add to state set\n    this._states.set(stateID, state);\n    return state;\n  }\n\n  removeState(state)\n  {\n    const stateID = state.getStateID();\n    if (!this._states.has(stateID)) return false;\n    this._states.delete(stateID);\n\n    //Deleted the start state, so must pick another one...\n    if (this._startState === state)\n    {\n      if (this._states.size <= 0)\n      {\n        //If no more states to choose from, don't choose anything\n        this._startState = null;\n      }\n      else\n      {\n        //Choose an arbitrary start state\n        this._startState = this._states.values().next().value;\n      }\n    }\n\n    return true;\n  }\n\n  hasStateWithLabel(label)\n  {\n    for(const state of this._states.values())\n    {\n      if (state.getStateLabel() == label)\n      {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getStatesByLabel(label, dst=[])\n  {\n    for(const state of this._states.values())\n    {\n      if (state.getStateLabel() == label)\n      {\n        dst.push(state);\n      }\n    }\n    return dst;\n  }\n\n  getStateByID(id)\n  {\n    return this._states.get(id);\n  }\n\n  hasState(state) { return this._states.has(state.getStateID()); }\n\n  getStates() { return this._states.values(); }\n\n  getStateCount() { return this._states.size; }\n\n  addTransition(from, to, symbol)\n  {\n    if (!this.hasState(from)) throw new Error(\"Trying to add a transition to unknown state with label \\'\" + state.getStateLabel() + \"\\'\");\n    if (!this.hasState(to)) throw new Error(\"Trying to add a transition to unknown state with label \\'\" + state.getStateLabel() + \"\\'\");\n    if (!symbol) throw new Error(\"Cannot add transition for null symbol - use the empty symbol instead\");\n\n    const transitionKey = from.getStateID() + \"->\" + to.getStateID();\n    if (this._transitions.has(transitionKey))\n    {\n      const transition = this._transitions.get(transitionKey);\n      if (!transition.hasSymbol(symbol))\n      {\n        transition.addSymbol(symbol);\n      }\n      else\n      {\n        //Didn't add anything...\n        return false;\n      }\n    }\n    else\n    {\n      this._transitions.set(transitionKey, new Transition(from, to, [symbol]));\n    }\n\n    //Add to alphabet...\n    this._incrSymbolCount(symbol);\n    return true;\n  }\n\n  removeTransition(from, to, symbol=null)\n  {\n    const transitionKey = from.getStateID() + \"->\" + to.getStateID();\n    if (!this._transitions.has(transitionKey)) return false;\n\n    const transition = this._transitions.get(transitionKey);\n    const symbols = transition.getSymbols();\n\n    //If deleting a specific symbol...\n    if (symbol)\n    {\n      const index = symbols.indexOf(symbol);\n      if (index >= 0)\n      {\n        //Update symbol counts...\n        this._decrSymbolCount(symbol);\n\n        symbols.splice(index, 1);\n        if (symbols.length <= 0) this._transitions.delete(transitionKey);\n        return true;\n      }\n      else\n      {\n        return false;\n      }\n    }\n    //If deleting a all associated symbols...\n    else\n    {\n      //Update symbol counts...\n      for(const symbol of symbols)\n      {\n        this._decrSymbolCount(symbol);\n      }\n\n      //Remove transition\n      this._transitions.delete(transitionKey);\n      return true;\n    }\n  }\n\n  hasTransition(from, to, symbol=null)\n  {\n    const transitionKey = from.getStateID() + \"->\" + to.getStateID();\n    if (!this._transitions.has(transitionKey)) return false;\n    //Not checking for specific symbols...\n    if (!symbol) return true;\n\n    //Find the symbol...\n    return this._transitions.get(transitionKey).hasSymbol(symbol);\n  }\n\n  getTransitionSymbols(from, to)\n  {\n    const transitionKey = from.getStateID() + \"->\" + to.getStateID();\n    if (!this._transitions.has(transitionKey)) return null;\n    return this._transitions.get(transitionKey).getSymbols();\n  }\n\n  getTransitions() { return this._transitions.values(); }\n\n  _incrSymbolCount(symbol)\n  {\n    //Don't add empty symbol to the alphabet\n    if (symbol === EMPTY_SYMBOL) return;\n\n    const symbolCount = this._alphabet.get(symbol) || 0;\n    this._alphabet.set(symbol, symbolCount + 1);\n  }\n\n  _decrSymbolCount(symbol)\n  {\n    if (!this._alphabet.has(symbol)) throw new Error(\"Unable to find valid transition symbol in alphabet\");\n\n    //Empty symbol is not in the alphabet\n    if (symbol === EMPTY_SYMBOL) return;\n\n    const symbolCount = this._alphabet.get(symbol);\n    //Delete the symbol, since it is no longer used...\n    if (symbolCount <= 1)\n    {\n      if (!this.isCustomSymbol(symbol))\n      {\n        //Regular symbols are removed if unused...\n        this._alphabet.delete(symbol);\n      }\n      else\n      {\n        //Custom symbols stay in the alphabet, even if unused...\n        this._alphabet.set(symbol, 0);\n      }\n    }\n    else\n    {\n      //Still being used by someone...\n      this._alphabet.set(symbol, symbolCount - 1);\n    }\n  }\n\n  changeSymbol(symbol, newSymbol)\n  {\n    if (symbol === EMPTY_SYMBOL) throw new Error(\"Cannot change the empty symbol\");\n    if (newSymbol === EMPTY_SYMBOL) throw new Error(\"Cannot change to the empty symbol\");\n    if (this._alphabet.has(newSymbol)) throw new Error(\"Cannot change symbol to another existing symbol\");\n\n    for(const transition of this._transitions.values())\n    {\n      const symbols = transition.getSymbols();\n      const index = symbols.indexOf(symbol);\n\n      //Change the symbol from the transition\n      if (index >= 0)\n      {\n        symbols[index] = newSymbol;\n      }\n    }\n\n    //Exchange symbol counts...\n    const count = this._alphabet.get(symbol);\n    this._alphabet.set(newSymbol, count);\n    this._alphabet.delete(symbol);\n\n    //Check if custom symbol...\n    if (this._customSymbols.has(symbol))\n    {\n      this._customSymbols.delete(symbol);\n      this._customSymbols.add(newSymbol);\n    }\n  }\n\n  removeSymbol(symbol)\n  {\n    const cache = [];\n    for(const [key, transition] of this._transitions.entries())\n    {\n      const symbols = transition.getSymbols();\n      const index = symbols.indexOf(symbol);\n\n      //Delete the symbol from the transition\n      if (index >= 0)\n      {\n        symbols.splice(index, 1);\n\n        //If no more symbols, make sure to delete it from the map later...\n        if (symbols.length <= 0)\n        {\n          cache.push(key);\n        }\n      }\n    }\n\n    //Delete any transitions that have no more symbols...\n    for(const transitionKey of cache)\n    {\n      this._transitions.delete(transitionKey);\n    }\n\n    //Remove from alphabet if possible...\n    if (symbol !== EMPTY_SYMBOL)\n    {\n      if (this._customSymbols.has(symbol))\n      {\n        this._alphabet.set(symbol, 0);\n      }\n      else\n      {\n        this._alphabet.delete(symbol);\n      }\n    }\n  }\n\n  setCustomSymbol(symbol, custom=true)\n  {\n    if (symbol === EMPTY_SYMBOL) throw new Error(\"Cannot change the empty symbol as a custom symbol\");\n\n    if (custom)\n    {\n      if (!this._customSymbols.has(symbol))\n      {\n        this._customSymbols.add(symbol);\n\n        //Add symbol to alphabet if missing...\n        if (!this._alphabet.has(symbol)) this._alphabet.set(symbol, 0);\n      }\n    }\n    else\n    {\n      if (this._customSymbols.has(symbol))\n      {\n        this._customSymbols.delete(symbol);\n\n        //If symbol is unused, delete it\n        if (this._alphabet.has(symbol) && this._alphabet.get(symbol) <= 0) this._alphabet.delete(symbol)\n      }\n    }\n  }\n\n  isCustomSymbol(symbol)\n  {\n    return this._customSymbols.has(symbol);\n  }\n\n  getCustomSymbols()\n  {\n    return this._customSymbols;\n  }\n\n  clearCustomSymbols()\n  {\n    this._customSymbols.clear();\n  }\n\n  isUsedSymbol(symbol)\n  {\n    return this._alphabet.has(symbol) && this._alphabet.get(symbol) > 0;\n  }\n\n  isSymbol(symbol)\n  {\n    return this._alphabet.has(symbol);\n  }\n\n  getAlphabet()\n  {\n    return this._alphabet.keys();\n  }\n\n  setStartState(state)\n  {\n    const stateID = state.getStateID();\n    if (!this._states.has(stateID))\n    {\n      //Add it to the state set\n      this._states.set(stateID, state);\n    }\n    this._startState = state;\n  }\n  isStartState(state) { return this._startState === state; }\n  getStartState() { return this._startState; }\n\n  setFinalState(state, final=true)\n  {\n    //Make final\n    if (final)\n    {\n      //If missing from state set, add it in...\n      if (!this._states.has(state.getStateID()))\n      {\n        this.addState(state);\n      }\n\n      this._finalStates.add(state);\n    }\n    else\n    {\n      //If missing from state set, it would be effectively the same thing as\n      //calling addState(state). So due to ambiguity, don't do it.\n      if (!this._states.has(state.getStateID())) throw new Error(\"Trying to change final for missing state \\'\" + state.getStateLabel() + \"\\'\");\n\n      this._finalStates.delete(state);\n    }\n  }\n  isFinalState(state) { return this._finalStates.has(state); }\n  getFinalStates() { return this._finalStates; }\n\n  doTransition(state, symbol, forceNondeterminism=false, dst=[])\n  {\n    if (!state) return dst;\n    if (!(state instanceof State)) throw new Error(\"Invalid state instance type \\'\" + (typeof state) + \"\\'\");\n    if (!this._states.has(state.getStateID())) throw new Error(\"Unable to find source state with id \\'\" + state.getStateID() + \"\\'\");\n\n    if (!symbol) symbol = EMPTY_SYMBOL;\n\n    const fromTransitionKey = state.getStateID() + \"->\";\n    for(const key of this._transitions.keys())\n    {\n      if (key.startsWith(fromTransitionKey))\n      {\n        const transition = this._transitions.get(key);\n        if (transition.hasSymbol(symbol))\n        {\n          dst.push(transition.getDestinationState());\n\n          //There will only ever be 1 transition for deterministic machines\n          if (!forceNondeterminism && this._deterministic) return dst;\n        }\n      }\n    }\n    return dst;\n  }\n\n  doTerminalTransition(state, symbol, dst=[])\n  {\n    if (!state) return dst;\n    if (!this._states.has(state.getStateID())) throw new Error(\"Unable to find source state with id \\'\" + state.getStateID() + \"\\'\");\n\n    if (!symbol) symbol = EMPTY_SYMBOL;\n\n    const fromTransitionKey = state.getStateID() + \"->\";\n    for(const key of this._transitions.keys())\n    {\n      if (key.startsWith(fromTransitionKey))\n      {\n        const transition = this._transitions.get(key);\n        if (transition.hasSymbol(symbol))\n        {\n          const toState = transition.getDestinationState();\n          const result = this.doClosureTransition(toState);\n          for(const s of result)\n          {\n            if (!dst.includes(s)) dst.push(s);\n          }\n        }\n      }\n    }\n\n    return dst;\n  }\n\n  doClosureTransition(state, dst=[])\n  {\n    if (!state) return dst;\n\n    dst.push(state);\n    for(let i = 0; i < dst.length; ++i)\n    {\n      const transitions = this.getOutgoingTransitions(dst[i]);\n      for(const transition of transitions)\n      {\n        if (transition[SYMBOL_INDEX] === EMPTY_SYMBOL)\n        {\n          const toState = transition[TO_STATE_INDEX];\n          if (!dst.includes(toState))\n          {\n            dst.push(toState);\n          }\n        }\n      }\n    }\n    return dst;\n  }\n\n  getOutgoingTransitions(state, dst=[])\n  {\n    if (!state) return dst;\n    if (!this._states.has(state.getStateID())) throw new Error(\"Unable to find source state with id \\'\" + state.getStateID() + \"\\'\");\n\n    const fromTransitionKey = state.getStateID() + \"->\";\n    for(const key of this._transitions.keys())\n    {\n      if (key.startsWith(fromTransitionKey))\n      {\n        const transition = this._transitions.get(key);\n        const symbols = transition.getSymbols();\n        for(const symbol of symbols)\n        {\n          dst.push([state, symbol, transition.getDestinationState()]);\n        }\n      }\n    }\n\n    return dst;\n  }\n\n  getHashCode()\n  {\n    let string = \"\";\n    for(const state of this._states.values())\n    {\n      string += state.getHashString() + \",\";\n    }\n    string += \"|\";\n    for(const transition of this._transitions.values())\n    {\n      string += transition.getHashString() + \",\";\n    }\n    string += \"|\";\n    for(const state of this._finalStates)\n    {\n      string += state.getHashString();\n    }\n    string += \"|\";\n    string += this._startState ? this._startState.getHashString() : \"\";\n    string += \"|\";\n    string += this._deterministic ? \"d\" : \"n\";\n    return stringHash(string);\n  }\n}\n\nexport default FSA;\n","import InputHandler from './InputHandler.js';\n\nclass GraphElementInputHandler extends InputHandler\n{\n  constructor(targetType)\n  {\n    super();\n\n    if (!targetType)\n    {\n      throw new Error(\"Missing target type for graph element input handler\");\n    }\n\n    this._targetType = targetType;\n  }\n\n  //Override\n  isTargetable(inputController, pointer, target, targetType)\n  {\n    if (targetType === this._targetType)\n    {\n      return true;\n    }\n\n    return false;\n  }\n  \n  getTargetType()\n  {\n    return this._targetType;\n  }\n}\n\nexport default GraphElementInputHandler;\n","class PickHandler\n{\n  getTargetAt(graph, x, y) { return null; }\n  getTargetType() { return null; }\n}\nexport default PickHandler;\n","class AbstractGraphExporter\n{\n  constructor() {}\n\n  importFromData(data, module)\n  {\n    throw new Error(\"Unsupported import for type \\'\" + this.getFileType() + \"\\'\");\n  }\n\n  exportToData(module)\n  {\n    throw new Error(\"Unsupported export for type \\'\" + this.getFileType() + \"\\'\");\n  }\n\n  doesSupportData()\n  {\n    return false;\n  }\n\n  importFromFile(fileBlob, module)\n  {\n    throw new Error(\"Unsupported import for type \\'\" + this.getFileType() + \"\\'\");\n  }\n\n  exportToFile(filename, module)\n  {\n    throw new Error(\"Unsupported export for type \\'\" + this.getFileType() + \"\\'\");\n  }\n\n  doesSupportFile()\n  {\n    return false;\n  }\n\n  canImport(module)\n  {\n    return false;\n  }\n\n  canExport(module)\n  {\n    return true;\n  }\n\n  getTitle()\n  {\n    return this.getLabel();\n  }\n\n  getIconClass()\n  {\n    return null;\n  }\n\n  getLabel()\n  {\n    return \"Export as \" + this.getFileType().toUpperCase();\n  }\n\n  getFileType()\n  {\n    throw new Error(\"Unknown file type for exporter\");\n  }\n}\n\nexport default AbstractGraphExporter;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M7 10l5 5 5-5z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M7 14l5-5 5 5z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './PanelSection.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport TinyDownIcon from 'experimental/iconset/TinyDownIcon.js';\nimport TinyUpIcon from 'experimental/iconset/TinyUpIcon.js';\n\nclass PanelSection extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.state = {\n      open: props.initial || false\n    };\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e)\n  {\n    this.setState((prev, props) => {\n      return {open: !prev.open};\n    })\n  }\n\n  //Override\n  componentDidUpdate()\n  {\n    if (this.state.open && this.props.disabled)\n    {\n      this.setState({open: false});\n    }\n  }\n\n  //Override\n  render()\n  {\n    const isOpen = this.state.open;\n    const isDisabled = this.props.disabled || React.Children.count(this.props.children) <= 0;\n    const isFull = this.props.full;\n    const title = this.props.title;\n    return (\n      <section id={this.props.id}\n        className={Style.section_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <IconButton className={Style.section_header}\n          title={title}\n          disabled={isDisabled}\n          onClick={this.onClick}>\n          {!isOpen ? <TinyDownIcon/> : <TinyUpIcon/>}\n        </IconButton>\n        <div className={Style.section_content_container +\n          (isOpen ? \" open \" : \"\") +\n          (isFull ? \" full \" : \"\")}>\n          <div className={Style.section_content}>\n            {this.props.children}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default PanelSection;\n","import {guid} from 'util/MathHelper.js';\n\nclass Notification\n{\n  constructor(notificationManager, message, layoutID, tags, props)\n  {\n    this._notificationManager = notificationManager;\n    this._message = message;\n    this._layoutID = layoutID;\n    this._tags = tags;\n    this._props = props;\n    this._id = guid();\n  }\n\n  close() { this._notificationManager.removeNotification(this); }\n  hasTag(tag) { return this._tags.includes(tag); }\n\n  getMessage() { return this._message; }\n  getLayoutID() { return this._layoutID; }\n  getTags() { return this._tags; }\n  getProps() { return this._props; }\n  getID() { return this._id; }\n  getNotificationManager() { return this._notificationManager; }\n}\n\nexport default Notification;\n","import React from 'react';\nimport Notification from './Notification.js';\n\nimport DefaultNotificationLayout, {\n  STYLE_TYPE_DEFAULT,\n  STYLE_TYPE_WARNING,\n  STYLE_TYPE_ERROR,\n  STYLE_TYPE_SUCCESS\n} from './components/DefaultNotificationLayout.js';\n\nexport const DEFAULT_LAYOUT_ID = \"default\";\nexport const WARNING_LAYOUT_ID = \"warning\";\nexport const ERROR_LAYOUT_ID = \"error\";\nexport const SUCCESS_LAYOUT_ID = \"success\";\n\nclass NotificationManager\n{\n  constructor()\n  {\n    this._layouts = new Map();\n    this._notifications = [];\n  }\n\n  registerNotificationLayout(layoutID, notificationLayout)\n  {\n    this._layouts.set(layoutID, notificationLayout);\n    return this;\n  }\n\n  unregisterNotificationLayout(layoutID)\n  {\n    this._layouts.delete(layoutID);\n    return this;\n  }\n\n  pushNotification(message, layoutID=null, tags=[], props={}, replace=true)\n  {\n    if (replace)\n    {\n      this.clearNotifications(tags);\n    }\n\n    const notification = new Notification(this, message, layoutID, tags, props);\n    this._notifications.push(notification);\n    return notification;\n  }\n\n  popNotification(tags=null)\n  {\n    if (this._notifications.length <= 0) return null;\n\n    if (Array.isArray(tags))\n    {\n      for(let i = this._notifications.length - 1; i >= 0; --i)\n      {\n        const notification = this._notifications[i];\n        let flag = true;\n        for(const tag of tags)\n        {\n          if (!notification.hasTag(tag))\n          {\n            flag = false;\n            break;\n          }\n        }\n        if (flag)\n        {\n          this._notifications.splice(i, 1);\n          return notification;\n        }\n      }\n    }\n    else if (typeof tags === 'string')\n    {\n      for(let i = 0, length = this._notifications.length; i < length; ++i)\n      {\n        const notification = this._notifications[i];\n        if (notification.hasTag(tags))\n        {\n          this._notifications.splice(i, 1);\n          return notification;\n        }\n      }\n    }\n    else\n    {\n      return this._notifications.pop();\n    }\n  }\n\n  removeNotification(notification)\n  {\n    const i = this._notifications.indexOf(notification);\n    if (i >= 0)\n    {\n      this._notifications.splice(i, 1);\n    }\n  }\n\n  clearNotifications(tags=null)\n  {\n    if (this._notifications.length <= 0) return;\n\n    if (Array.isArray(tags))\n    {\n      for(let i = this._notifications.length - 1; i >= 0; --i)\n      {\n        const notification = this._notifications[i];\n        let flag = true;\n        for(const tag of tags)\n        {\n          if (!notification.hasTag(tag))\n          {\n            flag = false;\n            break;\n          }\n        }\n        if (flag)\n        {\n          this._notifications.splice(i, 1);\n        }\n      }\n    }\n    else if (typeof tags === 'string')\n    {\n      for(let i = this._notifications.length - 1; i >= 0; --i)\n      {\n        const notification = this._notifications[i];\n        if (notification.hasTag(tags))\n        {\n          this._notifications.splice(i, 1);\n        }\n      }\n    }\n    else\n    {\n      this._notifications.length = 0;\n    }\n  }\n\n  //DuckType(SessionListener)\n  onSessionStart(session)\n  {\n    //Overwrite any changes to default notifications...\n    this.registerNotificationLayout(DEFAULT_LAYOUT_ID, props => <DefaultNotificationLayout styleType={STYLE_TYPE_DEFAULT} {...props}/>);\n    this.registerNotificationLayout(WARNING_LAYOUT_ID, props => <DefaultNotificationLayout styleType={STYLE_TYPE_WARNING} {...props}/>);\n    this.registerNotificationLayout(ERROR_LAYOUT_ID, props => <DefaultNotificationLayout styleType={STYLE_TYPE_ERROR} {...props}/>);\n    this.registerNotificationLayout(SUCCESS_LAYOUT_ID, props => <DefaultNotificationLayout styleType={STYLE_TYPE_SUCCESS} {...props}/>);\n  }\n\n  //DuckType(SessionListener)\n  onSessionStop(session)\n  {\n    this.clearNotifications();\n  }\n\n  hasNotificationLayout(layoutID)\n  {\n    return this._layouts.has(layoutID);\n  }\n\n  getNotificationLayout(layoutID)\n  {\n    return this._layouts.get(layoutID);\n  }\n\n  getNotifications()\n  {\n    return this._notifications;\n  }\n\n  isEmpty()\n  {\n    return this._notifications.length <= 0;\n  }\n}\n\nexport default NotificationManager;\n","/**\n * Used by InputAdapter to handle input event logic.\n */\nclass AbstractInputHandler\n{\n  constructor() {}\n\n  /**\n   * Called by InputAdapter before an InputEvent begins.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not begin.\n   */\n  onPreInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter when an InputEvent resolves and is not an Alt input.\n   * To handle events for Alt inputs, refer to onAltInputEvent().\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events.\n   */\n  onInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter when an InputEvent resolves and is an Alt input.\n   * To handle events for non-Alt inputs, refer to onInputEvent().\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events.\n   */\n  onAltInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter when a DblInputEvent resolves. The input is\n   * assumed by a non-Alt input, since only non-Alt inputs can trigger this\n   * event.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events.\n   */\n  onDblInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter when input movess. The input is called before drag\n   * logic.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events (i.e. dragging events).\n   */\n  onMoveInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter before a drag begins. The input could be either\n   * an Alt or non-Alt input.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events, nor continue the drag input.\n   */\n  onDragStart(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter while dragging moves. The input could be either\n   * an Alt or non-Alt input.\n   * Will always be called after onDragStart() and will be followed by\n   * onDragStop() when complete.\n   */\n  onDragMove(pointer) {}\n\n  /**\n   * Called by InputAdapter after a drag ends. The input could be either an\n   * Alt or non-Alt input.\n   * Will always be called after onDragStart(). Although onDragMove may be\n   * called in-between, it is not guaranteed.\n   */\n  onDragStop(pointer) {}\n\n  /**\n   * Called by InputAdapter after an InputEvent ends.\n   */\n  onPostInputEvent(pointer) {}\n\n  /**\n   * Called by InputAdapter when zoom changes.\n   * Returns true if event is consumed (zoom will not be applied)\n   */\n  onZoomChange(pointer, zoomValue, prevValue)\n  {\n    return false;\n  }\n}\n\nexport default AbstractInputHandler;\n","export const RENDER_LAYER_WORKSPACE = \"workspace\";\nexport const RENDER_LAYER_WORKSPACE_OVERLAY = \"workspace-overlay\";\nexport const RENDER_LAYER_VIEWPORT = \"viewport\";\nexport const RENDER_LAYER_VIEWPORT_OVERLAY = \"viewport-overlay\";\n\nclass RenderManager\n{\n  constructor()\n  {\n    this._renderMapping = new Map();\n  }\n\n  addRenderer(layerID, rendererClass)\n  {\n    if (this._renderMapping.has(layerID))\n    {\n      this._renderMapping.get(layerID).push(rendererClass);\n    }\n    else\n    {\n      this._renderMapping.set(layerID, [rendererClass]);\n    }\n    return this;\n  }\n\n  //DuckType(SessionListener)\n  onSessionStart(session)\n  {\n\n  }\n\n  //DuckType(SessionListener)\n  onSessionStop(session)\n  {\n    this._renderMapping.clear();\n  }\n\n  getRenderersByLayer(layerID)\n  {\n    return this._renderMapping.get(layerID);\n  }\n}\n\nexport default RenderManager;\n","import React from 'react';\nimport Style from './PanelSwitch.css';\n\nclass PanelSwitch extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    if (!props.id) throw new Error(\"Must specify id\");\n  }\n\n  //Override\n  render()\n  {\n    const id = this.props.id;\n    const disabled = this.props.disabled;\n    const checked = this.props.checked;\n    const onChange = this.props.onChange;\n\n    return (\n      <div id={id}\n        className={Style.switch_container +\n          (disabled ? \" disabled \" : \"\") +\n          (checked ? \" active \" : \"\") +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <label className={Style.panel_switch}\n          style={this.props.style}>\n          <input type=\"checkbox\" id={id + \"-switch\"} checked={checked} onChange={onChange} disabled={disabled}/>\n          <div className={Style.switch_slider}></div>\n        </label>\n        <label className={Style.switch_label}\n          htmlFor={id + \"-switch\"}>\n          {this.props.title}\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default PanelSwitch;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M9,16V10H5L12,3L19,10H15V16H9M5,20V18H19V20H5Z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 56 56\">\n        <path fill=\"#E9E9E0\" d=\"M36.985,0H7.963C7.155,0,6.5,0.655,6.5,1.926V55c0,0.345,0.655,1,1.463,1h40.074 c0.808,0,1.463-0.655,1.463-1V12.978c0-0.696-0.093-0.92-0.257-1.085L37.607,0.257C37.442,0.093,37.218,0,36.985,0z\"/>\n        <polygon fill=\"#D9D7CA\" points=\"37.5,0.151 37.5,12 49.349,12 \t\"/>\n        <path fill=\"#9777A8\" d=\"M48.037,56H7.963C7.155,56,6.5,55.345,6.5,54.537V39h43v15.537C49.5,55.345,48.845,56,48.037,56z\"/>\n        <path fill=\"#FFFFFF\" d={\"M17.021,42.719v7.848c0,0.474-0.087,0.873-0.26,1.196s-0.405,0.583-0.697,0.779 s-0.627,0.333-1.005,0.41c-0.378,0.077-0.768,0.116-1.169,0.116c-0.2,0-0.436-0.021-0.704-0.062s-0.547-0.104-0.834-0.191 s-0.563-0.185-0.827-0.294s-0.487-0.232-0.67-0.369l0.697-1.107c0.091,0.063,0.221,0.13,0.39,0.198s0.354,0.132,0.554,0.191 s0.41,0.111,0.629,0.157s0.424,0.068,0.615,0.068c0.483,0,0.868-0.094,1.155-0.28s0.439-0.504,0.458-0.95v-7.711H17.021z\"}/>\n        <path fill=\"#FFFFFF\" d={\"M25.184,50.238c0,0.364-0.075,0.718-0.226,1.06s-0.362,0.643-0.636,0.902s-0.61,0.467-1.012,0.622 s-0.856,0.232-1.367,0.232c-0.219,0-0.444-0.012-0.677-0.034s-0.467-0.062-0.704-0.116c-0.237-0.055-0.463-0.13-0.677-0.226 s-0.398-0.212-0.554-0.349l0.287-1.176c0.128,0.073,0.289,0.144,0.485,0.212s0.398,0.132,0.608,0.191s0.419,0.107,0.629,0.144 s0.405,0.055,0.588,0.055c0.556,0,0.982-0.13,1.278-0.39s0.444-0.645,0.444-1.155c0-0.31-0.104-0.574-0.314-0.793 s-0.472-0.417-0.786-0.595s-0.654-0.355-1.019-0.533s-0.706-0.388-1.025-0.629s-0.583-0.526-0.793-0.854s-0.314-0.738-0.314-1.23 c0-0.446,0.082-0.843,0.246-1.189s0.385-0.641,0.663-0.882s0.602-0.426,0.971-0.554s0.759-0.191,1.169-0.191 c0.419,0,0.843,0.039,1.271,0.116s0.774,0.203,1.039,0.376c-0.055,0.118-0.118,0.248-0.191,0.39s-0.142,0.273-0.205,0.396 s-0.118,0.226-0.164,0.308s-0.073,0.128-0.082,0.137c-0.055-0.027-0.116-0.063-0.185-0.109s-0.166-0.091-0.294-0.137 s-0.296-0.077-0.506-0.096s-0.479-0.014-0.807,0.014c-0.183,0.019-0.355,0.07-0.52,0.157s-0.31,0.193-0.438,0.321 s-0.228,0.271-0.301,0.431s-0.109,0.313-0.109,0.458c0,0.364,0.104,0.658,0.314,0.882s0.47,0.419,0.779,0.588 s0.647,0.333,1.012,0.492s0.704,0.354,1.019,0.581s0.576,0.513,0.786,0.854S25.184,49.7,25.184,50.238z\"}/>\n        <path fill=\"#FFFFFF\" d={\"M35.082,47.914c0,0.848-0.107,1.595-0.321,2.242s-0.511,1.185-0.889,1.613s-0.82,0.752-1.326,0.971 s-1.06,0.328-1.661,0.328s-1.155-0.109-1.661-0.328s-0.948-0.542-1.326-0.971s-0.675-0.966-0.889-1.613s-0.321-1.395-0.321-2.242 s0.107-1.593,0.321-2.235s0.511-1.178,0.889-1.606s0.82-0.754,1.326-0.978s1.06-0.335,1.661-0.335s1.155,0.111,1.661,0.335 s0.948,0.549,1.326,0.978s0.675,0.964,0.889,1.606S35.082,47.066,35.082,47.914z M30.844,51.729c0.337,0,0.658-0.066,0.964-0.198 s0.579-0.349,0.82-0.649s0.431-0.695,0.567-1.183s0.21-1.082,0.219-1.784c-0.009-0.684-0.08-1.265-0.212-1.743 s-0.314-0.873-0.547-1.183s-0.497-0.533-0.793-0.67s-0.608-0.205-0.937-0.205c-0.337,0-0.658,0.063-0.964,0.191 s-0.579,0.344-0.82,0.649s-0.431,0.699-0.567,1.183c-0.137,0.483-0.21,1.075-0.219,1.777c0.009,0.684,0.08,1.267,0.212,1.75 s0.314,0.877,0.547,1.183s0.497,0.528,0.793,0.67S30.516,51.729,30.844,51.729z\"}/>\n        <path fill=\"#FFFFFF\" d=\"M44.68,42.924V53h-1.668l-3.951-6.945V53h-1.668V42.924h1.668l3.951,6.945v-6.945H44.68z\"/>\n        <path fill=\"#9777A8\" d=\"M19.5,19v-4c0-0.551,0.448-1,1-1c0.553,0,1-0.448,1-1s-0.447-1-1-1c-1.654,0-3,1.346-3,3v4 c0,1.103-0.897,2-2,2c-0.553,0-1,0.448-1,1s0.447,1,1,1c1.103,0,2,0.897,2,2v4c0,1.654,1.346,3,3,3c0.553,0,1-0.448,1-1 s-0.447-1-1-1c-0.552,0-1-0.449-1-1v-4c0-1.2-0.542-2.266-1.382-3C18.958,21.266,19.5,20.2,19.5,19z\"/>\n        <circle fill=\"#9777A8\" cx=\"27.5\" cy=\"18.5\" r=\"1.5\"/>\n        <path fill=\"#9777A8\" d=\"M39.5,21c-1.103,0-2-0.897-2-2v-4c0-1.654-1.346-3-3-3c-0.553,0-1,0.448-1,1s0.447,1,1,1 c0.552,0,1,0.449,1,1v4c0,1.2,0.542,2.266,1.382,3c-0.84,0.734-1.382,1.8-1.382,3v4c0,0.551-0.448,1-1,1c-0.553,0-1,0.448-1,1 s0.447,1,1,1c1.654,0,3-1.346,3-3v-4c0-1.103,0.897-2,2-2c0.553,0,1-0.448,1-1S40.053,21,39.5,21z\"/>\n        <path fill=\"#9777A8\" d=\"M27.5,24c-0.553,0-1,0.448-1,1v3c0,0.552,0.447,1,1,1s1-0.448,1-1v-3 C28.5,24.448,28.053,24,27.5,24z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","class InputHandler\n{\n  isTargetable(inputController, pointer, target, targetType)\n  {\n    return false;\n  }\n\n  onAction(inputController, graphController, pointer, target)\n  {\n    return false;\n  }\n\n  onDblAction(inputController, graphController, pointer, target)\n  {\n    return false;\n  }\n\n  onDragStart(inputController, graphController, pointer, target)\n  {\n    return false;\n  }\n\n  onDragMove(inputController, graphController, pointer, target)\n  {\n    return false;\n  }\n\n  onDragStop(inputController, graphController, pointer, target)\n  {\n    return false;\n  }\n}\nexport default InputHandler;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M13.49 5.48c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm-3.6 13.9l1-4.4 2.1 2v6h2v-7.5l-2.1-2 .6-3c1.3 1.5 3.3 2.5 5.5 2.5v-2c-1.9 0-3.5-1-4.3-2.4l-1-1.6c-.4-.6-1-1-1.7-1-.3 0-.5.1-.8.1l-5.2 2.2v4.7h2v-3.4l1.8-.7-1.6 8.1-4.9-1-.4 2 7 1.4z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './IconUploadButton.css';\n\nimport IconButton from './IconButton.js';\n\nclass IconUploadButton extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.onFileUpload = this.onFileUpload.bind(this);\n  }\n\n  onFileUpload(e)\n  {\n    const files = e.target.files;\n    if (files.length > 0)\n    {\n      if (this.props.onUpload) this.props.onUpload(files[0]);\n\n      //Makes sure you can upload the same file again.\n      e.target.value = \"\";\n    }\n  }\n\n  //Override\n  render()\n  {\n    const accept = this.props.accept;\n\n    return (\n      <IconButton id={this.props.id}\n        className={Style.upload_button +\n          \" \" + this.props.className}\n        style={this.props.style}\n        title={this.props.title}\n        disabled={this.props.disabled}>\n        <input type=\"file\" name=\"import\"\n          className={Style.upload_input}\n          disabled={this.props.disabled}\n          accept={accept}\n          onChange={this.onFileUpload}/>\n        {this.props.children}\n      </IconButton>\n    );\n  }\n}\n\nexport default IconUploadButton;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","export const CTRL_KEY = 'Control';\nexport const META_KEY = 'Meta';\nexport const ALT_KEY = 'Alt';\nexport const SHIFT_KEY = 'Shift';\n//NOTE: For more keys, refer to http://keycode.info/\n\nclass HotKeyManager\n{\n  constructor()\n  {\n    this._hotkeys = [];\n    this._cachedEvent = {\n      ctrlKey: false,\n      metaKey: false,\n      altKey: false,\n      shiftKey: false,\n      code: null\n    };\n    this._prevHotKey = null;\n    this._repeatCount = 0;\n    this._enabled = false;\n\n    this._altHotkey = null;\n\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyUp = this.onKeyUp.bind(this);\n  }\n\n  registerHotKey(name, keys, callback)\n  {\n    if (!Array.isArray(keys)) throw new Error(\"Must be an array of key codes\");\n    const ctrlIndex = keys.indexOf(CTRL_KEY);\n    if (ctrlIndex >= 0) keys.splice(ctrlIndex, 1);\n    const metaIndex = keys.indexOf(META_KEY);\n    if (metaIndex >= 0) keys.splice(metaIndex, 1);\n    const altIndex = keys.indexOf(ALT_KEY);\n    if (altIndex >= 0) keys.splice(altIndex, 1);\n    const shiftIndex = keys.indexOf(SHIFT_KEY);\n    if (shiftIndex >= 0) keys.splice(shiftIndex, 1);\n    if (keys.length != 1) throw new Error(\"Multiple key operations not supported\");\n    const charKey = keys[0];\n\n    const ctrl = ctrlIndex >= 0 || metaIndex >= 0;\n    const alt = altIndex >= 0;\n    const shift = shiftIndex >= 0;\n\n    const result = {\n      name: name,\n      localizedKeys: (ctrl ? \"Ctrl + \" : \"\") +\n        (alt ? \"Alt + \" : \"\") +\n        (shift ? \"Shift + \" : \"\") +\n        charKey,\n      charKey: charKey,\n      ctrlKey: ctrl,\n      altKey: alt,\n      shiftKey: shift,\n      callback: callback\n    };\n\n    this._hotkeys.unshift(result);\n\n    return this;\n  }\n\n  //HACK: Cause hotkey manager does not allow 'control' hotkeys. This is the exception.\n  registerAltHotKey(name, callback)\n  {\n    if (this._altHotkey) throw new Error(\"Only one hotkey can exist for \\'Alt\\'\");\n\n    this._altHotkey = {\n      name: name,\n      localizedKeys: \"Alt\",\n      charKey: null,\n      ctrlKey: false,\n      altKey: true,\n      shiftKey: false,\n      callback: callback\n    };\n\n    return this;\n  }\n\n  //Override\n  onSessionStart(session)\n  {\n    window.addEventListener('keydown', this.onKeyDown);\n    window.addEventListener('keyup', this.onKeyUp);\n\n    this._enabled = true;\n  }\n\n  //Override\n  onSessionStop(session)\n  {\n    this._enabled = false;\n\n    this._prevHotKey = null;\n    this._repeatCount = 0;\n    this._hotkeys.length = 0;\n    this._altHotkey = null;\n\n    window.removeEventListener('keydown', this.onKeyDown);\n    window.removeEventListener('keyup', this.onKeyUp);\n  }\n\n  setEnabled(enabled)\n  {\n    this._enabled = enabled;\n  }\n\n  isEnabled()\n  {\n    return this._enabled;\n  }\n\n  findMatchingHotKey(e)\n  {\n    for(const hotkey of this._hotkeys)\n    {\n      if (matchesHotKeyEvent(e, hotkey)) return hotkey;\n    }\n    return null;\n  }\n\n  getCurrentHotKey()\n  {\n    return this._prevHotKey;\n  }\n\n  getCurrentHotKeyRepeatCount()\n  {\n    return this._repeatCount;\n  }\n\n  getCurrentlyPossibleHotKeys(dst=[])\n  {\n    const event = this._cachedEvent;\n    const eventCtrl = event.ctrlKey || event.metaKey;\n    const eventAlt = event.altKey;\n    const eventShift = event.shiftKey;\n    if (!eventCtrl && !eventAlt && !eventShift) return dst;\n    const eventKey = event.code;\n\n    let result = null;\n    for(const hotkey of this._hotkeys)\n    {\n      let flag = false;\n      if (eventCtrl ^ hotkey.ctrlKey)\n      {\n        //It's ok, but it is not a complete match...\n        if (!eventCtrl) flag = true;\n        //Nope.\n        else continue;\n      }\n      if (eventAlt ^ hotkey.altKey)\n      {\n        //It's ok, but it is not a complete match...\n        if (!eventAlt) flag = true;\n        //Nope.\n        else continue;\n      }\n      if (eventShift ^ hotkey.shiftKey)\n      {\n        //It's ok, but it is not a complete match...\n        if (!eventShift) flag = true;\n        //Nope.\n        else continue;\n      }\n\n      if (!flag && eventKey === hotkey.charKey)\n      {\n        result = hotkey;\n      }\n\n      dst.push(hotkey);\n    }\n\n    if (result) return result;\n    else return dst;\n  }\n\n  onKeyDown(e)\n  {\n    if (!this._enabled) return;\n\n    if (!e.repeat)\n    {\n      this.captureKeyEvent(e, false);\n\n      let result = this.findMatchingHotKey(this._cachedEvent);\n      if (!result && matchesHotKeyEvent(e, this._altHotkey)) result = this._altHotkey;\n\n      if (result)\n      {\n        if (this._prevHotKey === result)\n        {\n          ++this._repeatCount;\n        }\n        else\n        {\n          this._prevHotKey = result;\n          this._repeatCount = 0;\n        }\n\n        result.callback();\n\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    }\n  }\n\n  onKeyUp(e)\n  {\n    if (!this._enabled) return;\n\n    if (this.captureKeyEvent(e, true))\n    {\n      this._prevHotKey = null;\n      this._repeatCount = 0;\n    }\n  }\n\n  captureKeyEvent(e, isKeyUp=false)\n  {\n    this._cachedEvent.ctrlKey = e.ctrlKey;\n    this._cachedEvent.metaKey = e.metaKey;\n    this._cachedEvent.altKey = e.altKey;\n    this._cachedEvent.shiftKey = e.shiftKey;\n    this._cachedEvent.code = isKeyUp ? null : (e.code || null);\n    return isKeyUp && !(this._cachedEvent.ctrlKey || this._cachedEvent.metaKey || this._cachedEvent.altKey || this._cachedEvent.shiftKey);\n  }\n}\n\nexport default HotKeyManager;\n\nfunction matchesHotKeyEvent(e, hotkey)\n{\n  if (hotkey.ctrlKey !== (e.ctrlKey || e.metaKey)) return false;\n  if (hotkey.altKey !== e.altKey) return false;\n  if (hotkey.shiftKey !== e.shiftKey) return false;\n  if (hotkey.charKey && hotkey.charKey !== e.code) return false;\n  return true;\n}\n","class AbstractEventHandler\n{\n  constructor() {}\n\n  applyUndo(undoManager)\n  {\n    throw new Error(\"Undo operation for handler not supported\");\n  }\n\n  applyRedo(undoManager)\n  {\n    throw new Error(\"Redo operation for handler not supported\");\n  }\n}\n\nexport default AbstractEventHandler;\n","import React from 'react';\nimport IconButton from './IconButton.js';\n\nclass IconStateButton extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.state = {\n      index: props.initial || 0\n    };\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e)\n  {\n    const prevIndex = this.state.index;\n    this.setState((prev, props) => {\n      const count = React.Children.count(props.children);\n      let nextIndex = prev.index + 1;\n      if (nextIndex >= count)\n      {\n        nextIndex = 0;\n      }\n      return {index: nextIndex};\n    }, () => {\n      if (this.props.onClick)\n      {\n        this.props.onClick(e, prevIndex);\n      }\n    });\n  }\n\n  setStateIndex(index)\n  {\n    this.setState({index: index});\n  }\n\n  getStateIndex()\n  {\n    return this.state.index;\n  }\n\n  //Override\n  render()\n  {\n    const child = React.Children.map(this.props.children, (child, i) => {\n      if (i === this.state.index) return child;\n    })[0];\n\n    return (\n      <IconButton id={this.props.id}\n        className={this.props.className}\n        style={this.props.style}\n        title={this.props.title}\n        disabled={this.props.disabled}\n        onClick={this.onClick}>\n        {child}\n      </IconButton>\n    );\n  }\n}\nexport default IconStateButton;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './FullscreenWidget.css';\n\nimport IconStateButton from 'experimental/components/IconStateButton.js';\nimport FullscreenIcon from 'experimental/iconset/FullscreenIcon.js';\nimport FullscreenExitIcon from 'experimental/iconset/FullscreenExitIcon.js';\n\nclass FullscreenWidget extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const app = this.props.app;\n\n    return (\n      <IconStateButton id={this.props.id}\n        className={Style.fullscreen_button + \" \" + this.props.className}\n        style={this.props.style}\n        title={\"Fullscreen Mode\"}\n        onClick={(e, i) => app.setState({hide: (i === 0)})}>\n        <FullscreenIcon/>\n        <FullscreenExitIcon/>\n      </IconStateButton>\n    );\n  }\n}\n\nexport default FullscreenWidget;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n        <path d=\"M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14zM7 9h5v1H7z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './ZoomWidget.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport ZoomInIcon from 'experimental/iconset/ZoomInIcon.js';\nimport ZoomOutIcon from 'experimental/iconset/ZoomOutIcon.js';\n\nclass ZoomWidget extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.onZoomIn = this.onZoomIn.bind(this);\n    this.onZoomOut = this.onZoomOut.bind(this);\n  }\n\n  onZoomIn(e)\n  {\n    const viewport = this.props.viewport;\n    const viewScale = -viewport.getScale() * 0.4;\n    viewport.addScale(viewScale);\n  }\n\n  onZoomOut(e)\n  {\n    const viewport = this.props.viewport;\n    const viewScale = viewport.getScale() * 0.75;\n    viewport.addScale(viewScale);\n  }\n\n  //Override\n  render()\n  {\n    const viewport = this.props.viewport;\n    const viewScale = \"x\" + (1 / (viewport.getScale() || 1)).toFixed(2);\n\n    return (\n      <div id={this.props.id}\n        className={Style.zoom_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <IconButton className={Style.zoom_button} title=\"Zoom In\" onClick={this.onZoomIn}>\n          <ZoomInIcon/>\n        </IconButton>\n        <IconButton className={Style.zoom_button} title=\"Zoom Out\" onClick={this.onZoomOut}>\n          <ZoomOutIcon/>\n        </IconButton>\n        <label className={Style.zoom_label}>{viewScale}</label>\n      </div>\n    );\n  }\n}\n\nexport default ZoomWidget;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm8.94 3c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06C6.83 3.52 3.52 6.83 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c4.17-.46 7.48-3.77 7.94-7.94H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './FocusCenterWidget.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport PinpointIcon from 'experimental/iconset/PinpointIcon.js';\n\nconst OFFSET_EPSILON = 0.1;\n\nclass FocusCenterWidget extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e)\n  {\n    const viewport = this.props.viewport;\n    viewport.setOffset(0, 0);\n  }\n\n  //Override\n  render()\n  {\n    const viewport = this.props.viewport;\n\n    return (\n      <IconButton id={this.props.id}\n        className={Style.center_focus_button +\n          \" \" + this.props.className}\n        style={this.props.style}\n        title={\"Center Workspace\"}\n        disabled={Math.abs(viewport.getOffsetX()) < OFFSET_EPSILON &&\n          Math.abs(viewport.getOffsetY()) < OFFSET_EPSILON} onClick={this.onClick}>\n        <PinpointIcon/>\n      </IconButton>\n    );\n  }\n}\n\nexport default FocusCenterWidget;\n","import React from 'react';\nimport Style from './NavbarWidget.css';\n\nimport FullscreenWidget from 'experimental/widgets/FullscreenWidget.js';\nimport ZoomWidget from 'experimental/widgets/ZoomWidget.js';\nimport FocusCenterWidget from 'experimental/widgets/FocusCenterWidget.js';\n\nclass NavbarWidget extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const app = this.props.app;\n    const viewport = app.getInputAdapter().getViewport();\n\n    return (\n      <div id={this.props.id}\n        className={Style.navbar_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <FullscreenWidget className={Style.navbar_widget} app={app}/>\n        <ZoomWidget className={Style.navbar_widget_container} viewport={viewport}/>\n        <FocusCenterWidget className={Style.navbar_widget} viewport={viewport}/>\n      </div>\n    );\n  }\n}\n\nexport default NavbarWidget;\n","import React from 'react';\nimport Style from './PanelDivider.css';\n\nclass PanelDivider extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    return (\n      <div id={this.props.id}\n        className={Style.panel_divider +\n          \" \" + this.props.className}\n        style={this.props.style}>\n      </div>\n    );\n  }\n}\n\nexport default PanelDivider;\n","import React from 'react';\n\nconst QUAD_RADIAN_THRESHOLD = 0.01;\nconst QUAD_REVERSE_OFFSET_THRESHOLD = 4;\nconst ARROW_WIDTH = 10;\nconst SIXTH_PI = Math.PI / 6;\n\nexport const DIRECTED_FORWARD = \"forward\";\nexport const DIRECTED_BACKWARD = \"backward\";\nexport const DIRECTED_BOTH = \"both\";\nexport const DIRECTED_NONE = \"undirected\";\n\nexport const DefaultEndpointRenderer = props => (\n  <>\n    <path d={\n      \"M \" +\n        (props.position.x - (props.length * Math.sin(props.angle - SIXTH_PI))) +\n        \" \" +\n        (props.position.y - (props.length * Math.cos(props.angle - SIXTH_PI))) +\n        \" \" +\n        \"L \" + props.position.x + \" \" + props.position.y +\n        \" \" +\n        \"L \" +\n        (props.position.x - (props.length * Math.sin(props.angle + SIXTH_PI))) +\n        \" \" +\n        (props.position.y - (props.length * Math.cos(props.angle + SIXTH_PI)))\n    }\n    stroke={props.color}\n    fill=\"none\"/>\n  </>\n);\n\nexport const DefaultLabelRenderer = props => (\n  <g transform={\"translate(\" + props.position.x + \",\" + props.position.y + \")\" +\n    \" \" +\n    \"rotate(\" + (props.direction * 180 / Math.PI) + \")\"}>\n    {\n      props.labels && props.labels.length > 0 &&\n      props.labels.map((str, i) => {\n        return (\n          <text key={str + \".\" + i}\n            transform={\"translate(0,\" + ((i + 1) * -15) + \")\" +\n              (props.reverse ? \" scale(-1,-1)\" : \"\")}\n            alignmentBaseline=\"central\"\n            pointerEvents=\"none\"\n            style={{userSelect: \"none\"}}\n            textAnchor=\"middle\"\n            fill={props.color}>\n            {str}\n          </text>\n        );\n      })\n    }\n  </g>\n);\n\nclass EdgeRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const directed = this.props.directed || DIRECTED_NONE;\n\n    const ForwardEndpointRenderer =\n      (directed === DIRECTED_FORWARD || directed === DIRECTED_BOTH) ?\n        (this.props.forwardEndpointRenderer ||\n        this.props.endpointRenderer ||\n        DefaultEndpointRenderer) : null;\n    const BackwardEndpointRenderer =\n      (directed === DIRECTED_BACKWARD || directed === DIRECTED_BOTH) ?\n        (this.props.backwardEndpointRenderer ||\n        this.props.endpointRenderer ||\n        DefaultEndpointRenderer) : null;\n    const EdgeLabelRenderer = this.props.labelRenderer || DefaultLabelRenderer;\n\n    const fromPoint = this.props.from;\n    const toPoint = this.props.to;\n    const centerPoint = this.props.center;\n    const label = this.props.label || \"\";\n    const direction = this.props.direction || 0;\n    const color = this.props.color || \"#000000\";\n\n    let reverseLabel = false;\n    let fromAngle;\n    let toAngle;\n    let quadLine = null;\n\n    const dftx = fromPoint.x - toPoint.x;\n    const dfty = fromPoint.y - toPoint.y;\n    const dfcx = fromPoint.x - centerPoint.x;\n    const dfcy = fromPoint.y - centerPoint.y;\n    const ftrad = Math.atan2(dfty, dftx);\n    const fcrad = Math.atan2(dfcy, dfcx);\n    if (Math.abs(ftrad - fcrad) <= QUAD_RADIAN_THRESHOLD)\n    {\n      toAngle = Math.atan2(centerPoint.x - toPoint.x, centerPoint.y - toPoint.y) + Math.PI;\n      fromAngle = Math.atan2(centerPoint.x - fromPoint.x, centerPoint.y - fromPoint.y) + Math.PI;\n      quadLine = \"L \" + toPoint.x + \" \" + toPoint.y;\n      reverseLabel = false;\n    }\n    else\n    {\n      const cx = ((centerPoint.x * 4) - fromPoint.x - toPoint.x) / 2;\n      const cy = ((centerPoint.y * 4) - fromPoint.y - toPoint.y) / 2;\n      toAngle = Math.atan2(cx - toPoint.x, cy - toPoint.y) + Math.PI;\n      fromAngle = Math.atan2(cx - fromPoint.x, cy - fromPoint.y) + Math.PI;\n      quadLine = \"Q \" + cx + \" \" + cy + \" \" + toPoint.x + \" \" + toPoint.y;\n      reverseLabel = cy > centerPoint.y + QUAD_REVERSE_OFFSET_THRESHOLD;\n    }\n\n    return (\n      <g>\n        <path d={\"M \" + fromPoint.x + \" \" + fromPoint.y + \" \" + quadLine}\n          stroke={color}\n          fill=\"none\"/>\n        {ForwardEndpointRenderer &&\n          <ForwardEndpointRenderer position={toPoint} angle={toAngle} length={ARROW_WIDTH} color={color}/>}\n        {BackwardEndpointRenderer &&\n          <BackwardEndpointRenderer position={fromPoint} angle={fromAngle} length={ARROW_WIDTH} color={color}/>}\n        {EdgeLabelRenderer &&\n          <EdgeLabelRenderer position={centerPoint} labels={label.split('\\n')} direction={direction} reverse={reverseLabel} color={color}/>}\n      </g>\n    );\n  }\n}\n\nexport default EdgeRenderer;\n","import AbstractGraphExporter from 'session/manager/export/AbstractGraphExporter.js';\n\nimport PNGIcon from 'deprecated/icons/flat/PNGIcon.js';\nimport JPGIcon from 'deprecated/icons/flat/JPGIcon.js';\nimport XMLIcon from 'deprecated/icons/flat/XMLIcon.js';\nimport SVGIcon from 'deprecated/icons/flat/SVGIcon.js';\nimport { FILE_TYPE_PNG, FILE_TYPE_JPG, FILE_TYPE_SVG, downloadImageFromSVG } from 'util/Downloader.js';\n\nconst EXPORT_PADDING_X = 30;\nconst EXPORT_PADDING_Y = 0;\n\nclass GraphImageExporter extends AbstractGraphExporter\n{\n  constructor(imageType=FILE_TYPE_PNG)\n  {\n    super();\n    this._imageType = imageType;\n  }\n\n  processSVGForExport(element, width, height, currentModule)\n  {\n    const graphController = currentModule.getGraphController();\n\n    const viewport = currentModule.getApp().getInputAdapter().getViewport();\n    const offsetX = viewport.getOffsetX();\n    const offsetY = viewport.getOffsetY();\n    const bounds = graphController.getGraph().getBoundingRect();\n    const dx = bounds.minX + offsetX - EXPORT_PADDING_X;\n    const dy = bounds.minY + offsetY - EXPORT_PADDING_Y;\n    const w = bounds.width + EXPORT_PADDING_X * 2;\n    const h = bounds.height + EXPORT_PADDING_Y * 2;\n    const clone = element.cloneNode(true);\n    clone.setAttribute('viewBox', dx + \" \" + dy + \" \" + w + \" \" + h);\n    clone.setAttribute('width', width);\n    clone.setAttribute('height', height);\n\n    //Apply the workspace font (refer to Workspace.css)\n    clone.setAttribute('font-size', \"16px\");\n    clone.setAttribute('font-family', \"monospace\");\n    clone.setAttribute('style', \".graph-ui {display: none;}\");\n\n    /*\n\n    const nodeColor = styleOpts.getOptionByProp(\"--color-graph-node\").getStyle();\n    const textColor = styleOpts.getOptionByProp(\"--color-graph-text\").getStyle();\n    console.log(nodeColor);\n    const styleString = \"* {\"\n      + \"--color-graph-node: blue;\"\n      + \"--color-graph-text: \" + textColor + \";\"\n      + \"}\";\n\n    */\n\n    /*\n    //TODO: Link the font family to svg\n    const link = document.createElement(\"link\");\n    link.setAttribute(\"rel\", \"stylesheet\");\n    clone.appendChild(link);\n    */\n\n    //Remove unwanted ui elements from image\n    const uiElements = clone.getElementsByClassName(\"graph-ui\");\n    while(uiElements.length > 0)\n    {\n      const e = uiElements[0];\n      e.remove();//This will propagate changes to uiElements, so be careful\n    }\n\n    return clone;\n  }\n\n  //Override\n  exportToFile(filename, module)\n  {\n    const workspace = module.getApp().workspace;\n    const svgElement = workspace.getSVGElement();\n    const workspaceDim = svgElement.viewBox.baseVal;\n    const width = workspaceDim.width;\n    const height = workspaceDim.height;\n    const svg = this.processSVGForExport(svgElement, width, height, module);\n\n    downloadImageFromSVG(filename, this._imageType, svg, width, height);\n  }\n\n  //Override\n  doesSupportFile()\n  {\n    return true;\n  }\n\n  //Override\n  canImport(module)\n  {\n    return false;\n  }\n\n  //Override\n  getTitle()\n  {\n    switch(this._imageType)\n    {\n      case FILE_TYPE_PNG: return I18N.toString(\"file.export.png.hint\");\n      case FILE_TYPE_JPG: return I18N.toString(\"file.export.jpg.hint\");\n      case FILE_TYPE_SVG: return I18N.toString(\"file.export.svg.hint\");\n      default: return super.getTitle();\n    }\n  }\n\n  //Override\n  getLabel()\n  {\n    switch(this._imageType)\n    {\n      case FILE_TYPE_PNG: return I18N.toString(\"file.export.png\");\n      case FILE_TYPE_JPG: return I18N.toString(\"file.export.jpg\");\n      case FILE_TYPE_SVG: return I18N.toString(\"file.export.svg\");\n      default: return super.getLabel();\n    }\n  }\n\n  //Override\n  getFileType()\n  {\n    return this._imageType;\n  }\n\n  //Override\n  getIconClass()\n  {\n    switch(this._imageType)\n    {\n      case FILE_TYPE_PNG: return PNGIcon;\n      case FILE_TYPE_JPG: return JPGIcon;\n      case FILE_TYPE_SVG: return SVGIcon;\n      default: return null;\n    }\n  }\n}\n\nexport const DEFAULT_IMAGE_EXPORTERS = [\n  new GraphImageExporter(FILE_TYPE_PNG),\n  new GraphImageExporter(FILE_TYPE_JPG),\n  new GraphImageExporter(FILE_TYPE_SVG)\n];\n\nexport default GraphImageExporter;\n","import AbstractEventHandler from 'session/manager/undo/AbstractEventHandler.js';\n\nclass SafeGraphEventHandler extends AbstractEventHandler\n{\n  constructor(graphController, graphParser)\n  {\n    super();\n\n    this._graphController = graphController;\n    this._graphParser = graphParser;\n    this._graphData = graphParser.objectify(graphController.getGraph());\n  }\n\n  //Override\n  applyUndo(undoManager)\n  {\n    const prevEvent = undoManager.getPreviousEvent();\n    if (prevEvent instanceof SafeGraphEventHandler)\n    {\n      prevEvent.applyRedo(undoManager);\n    }\n    else\n    {\n      this._graphController.getGraph().clear();\n    }\n  }\n\n  //Override\n  applyRedo(undoManager)\n  {\n    this._graphParser.parse(this._graphData, this._graphController.getGraph());\n  }\n}\nexport default SafeGraphEventHandler;\n","import GraphElementInputHandler from './GraphElementInputHandler.js';\n\nconst SNAP_TO_GRID = true;\nconst SNAP_SIZE = 48;\n\nclass GraphNodeInputHandler extends GraphElementInputHandler\n{\n  constructor()\n  {\n    super(\"node\");\n  }\n\n  //Override\n  onAction(inputController, graphController, pointer, target)\n  {\n    const picker = inputController.getPicker();\n    const selectionBox = inputController.getSelectionBox();\n\n    //Click to delete node\n    if (inputController.isTrashMode())\n    {\n      //So that the emitted 'delete' events can use this\n      graphController.prevX = target.x;\n      graphController.prevY = target.y;\n\n      //If there exists selected states, delete them all!\n      if (selectionBox.hasSelection())\n      {\n        //Delete all selected nodes\n        graphController.deleteSelectedNodes(target);\n      }\n      else\n      {\n        //Delete a single node\n        graphController.deleteTargetNode(target);\n      }\n      return true;\n    }\n    else if (inputController.isMoveMode())\n    {\n      //Edit label for selected node\n      graphController.openLabelEditor(target, target.getNodeLabel());\n    }\n\n    return false;\n  }\n\n  //Override\n  onDragStart(inputController, graphController, pointer, target)\n  {\n    if (inputController.isMoveMode())\n    {\n      //Moving node (and selected nodes)\n      graphController.prevX = target.x;\n      graphController.prevY = target.y;\n    }\n    else\n    {\n      const picker = inputController.getPicker();\n      const graph = graphController.getGraph();\n      const edge = graph.createEdge(target, pointer);\n      edge.setEdgeLabel(graphController.getGraphLabeler().getDefaultEdgeLabel());\n\n      //Redirect pointer to refer to the edge as the new target\n      picker.setInitialTarget(edge, \"endpoint\");\n      inputController.isNewEdge = true;\n\n      //Reset previous quad values for new proxy edge\n      const edgeQuad = edge.getQuadratic();\n      graphController.prevQuad.radians = edgeQuad.radians;\n      graphController.prevQuad.length = edgeQuad.length;\n      graphController.prevEdgeTo = null;\n\n      //Ready to move proxy edge to pointer...\n    }\n    return true;\n  }\n\n  //Override\n  onDragMove(inputController, graphController, pointer, target)\n  {\n    const picker = inputController.getPicker();\n    const selectionBox = inputController.getSelectionBox();\n    const graph = graphController.getGraph();\n    let x = pointer.x;\n    let y = pointer.y;\n\n    if (inputController._snapToGrid)\n    {\n      const snapSize = inputController._snapSize;\n      x = Math.round(x / snapSize) * snapSize;\n      y = Math.round(y / snapSize) * snapSize;\n    }\n\n    if (selectionBox.hasSelection())\n    {\n      graphController.moveMultipleNodesTo(pointer, selectionBox.getSelection(graph), x, y);\n    }\n    else\n    {\n      graphController.moveNodeTo(pointer, target, x, y);\n    }\n    return true;\n  }\n\n  //Override\n  onDragStop(inputController, graphController, pointer, target)\n  {\n    const picker = inputController.getPicker();\n    const selectionBox = inputController.getSelectionBox();\n    const graph = graphController.getGraph();\n    const x = pointer.x;\n    const y = pointer.y;\n\n    //Delete it if withing trash area...\n    if (inputController.isTrashMode())\n    {\n      //If there exists selected states, delete them all!\n      if (selectionBox.hasSelection())\n      {\n        graphController.deleteSelectedNodes(target);\n      }\n      else\n      {\n        //Delete a single node\n        graphController.deleteTargetNode(target);\n      }\n\n      return true;\n    }\n    //If dragged to an empty space (not trash)\n    else\n    {\n      //Do nothing, since should have moved to position\n      if (selectionBox.hasSelection())\n      {\n        const dx = x - graphController.prevX;\n        const dy = y - graphController.prevY;\n        graphController.onGraphIntentMoveAllNodes(selectionBox.getSelection(graph), dx, dy);\n        //graphController.emit(\"nodeMoveAll\", graph, picker.getSelection(graph), dx, dy);\n      }\n      else\n      {\n        graphController.onGraphIntentMoveNode(target, x, y, graphController.prevX, graphController.prevY);\n        //graphController.emit(\"nodeMove\", graph, target, x, y, graphController.prevX, graphController.prevY);\n      }\n      return true;\n    }\n\n    return false;\n  }\n}\n\nexport default GraphNodeInputHandler;\n","import GraphElementInputHandler from './GraphElementInputHandler.js';\n\nclass GraphEdgeInputHandler extends GraphElementInputHandler\n{\n  constructor()\n  {\n    super(\"edge\");\n  }\n\n  //Override\n  onAction(inputController, graphController, pointer, target)\n  {\n    if (inputController.isTrashMode())\n    {\n      //Delete a single edge\n      graphController.deleteTargetEdge(target);\n    }\n    else\n    {\n      //Edit label for selected edge\n      graphController.openLabelEditor(target, target.getEdgeLabel());\n    }\n    return true;\n  }\n\n  //Override\n  onDragStart(inputController, graphController, pointer, target)\n  {\n    //Makes sure that placeholders are not quadratics!\n    if (target.isPlaceholder())\n    {\n      return false;\n    }\n\n    //Save previous quadratics\n    const targetQuad = target.getQuadratic();\n    graphController.prevQuad.radians = targetQuad.radians;\n    graphController.prevQuad.length = targetQuad.length;\n\n    //Ready to move the edge vertex to pointer...\n    return true;\n  }\n\n  //Override\n  onDragMove(inputController, graphController, pointer, target)\n  {\n    graphController.moveEdgeTo(pointer, target, pointer.x, pointer.y);\n    return true;\n  }\n\n  //Override\n  onDragStop(inputController, graphController, pointer, target)\n  {\n    const graph = graphController.getGraph();\n\n    //Delete it if withing trash area...\n    if (inputController.isTrashMode())\n    {\n      graphController.deleteTargetEdge(target);\n    }\n    else\n    {\n      //Do nothing, since should have moved to position\n      graphController.onGraphIntentMoveEdge(target, target.getQuadratic(), graphController.prevQuad);\n      //graphController.emit(\"edgeMove\", graph, target, target.getQuadratic(), graphController.prevQuad);\n    }\n    return true;\n  }\n}\n\nexport default GraphEdgeInputHandler;\n","import GraphElementInputHandler from './GraphElementInputHandler.js';\nimport GraphNode from 'graph/GraphNode.js';\n\nclass GraphEndpointInputHandler extends GraphElementInputHandler\n{\n  constructor()\n  {\n    super(\"endpoint\");\n  }\n\n  //Override\n  onAction(inputController, graphController, pointer, target)\n  {\n    if (inputController.isTrashMode())\n    {\n      //Delete a single edge\n      graphController.deleteTargetEdge(target);\n      return true;\n    }\n    return false;\n  }\n\n  //Override\n  onDragStart(inputController, graphController, pointer, target)\n  {\n    const targetQuad = target.getQuadratic();\n    graphController.prevQuad.radians = targetQuad.radians;\n    graphController.prevQuad.length = targetQuad.length;\n    graphController.prevEdgeTo = target.getDestinationNode();\n\n    inputController.isNewEdge = false;\n\n    //Ready to move the edge endpoint to pointer...\n    return true;\n  }\n\n  //Override\n  onDragMove(inputController, graphController, pointer, target)\n  {\n    graphController.moveEndpointTo(pointer, target, pointer.x, pointer.y);\n    return true;\n  }\n\n  //Override\n  onDragStop(inputController, graphController, pointer, target)\n  {\n    const graph = graphController.getGraph();\n    const x = pointer.x;\n    const y = pointer.y;\n\n    //Delete it if withing trash area...\n    if (inputController.isTrashMode())\n    {\n      graphController.deleteTargetEdge(target);\n      return true;\n    }\n    //If hovering over a node...\n    else if (target.getDestinationNode() instanceof GraphNode)\n    {\n      const result = graph.formatEdge(target);\n\n      //If a different edge is the result of the target...\n      if (result !== target)\n      {\n        //Allow the user to edit the merged labels\n        graphController.openLabelEditor(result, result.getEdgeLabel());\n\n        //Delete the merged label\n        graph.deleteEdge(target);\n        return true;\n      }\n      //Open label editor if a new edge...\n      else\n      {\n        if (inputController.isNewEdge)\n        {\n          graphController.openLabelEditor(result, \"\", (target, value) => graphController.onGraphIntentFinishEdge(target));\n        }\n        else\n        {\n          graphController.openLabelEditor(target, target.getEdgeLabel());\n        }\n      }\n\n      if (inputController.isNewEdge)\n      {\n        //Must be after openLabelEditor() to allow the function to check it...\n        inputController.isNewEdge = false;\n\n        //Emit event\n        graphController.onGraphIntentCreateEdge(target);\n      }\n      else if (graphController.prevEdgeTo !== null)\n      {\n        //Emit event\n        graphController.onGraphIntentChangeDestination(target, target.getDestinationNode(), graphController.prevEdgeTo, graphController.prevQuad);\n      }\n\n      return true;\n    }\n    //If hovering over anything else...\n    else\n    {\n      //Destroy any edge that no longer have a destination\n      if (inputController.shouldDestroyPointlessEdges)\n      {\n        if (!inputController.isNewEdge)\n        {\n          graphController.deleteTargetEdge(target);\n        }\n        else\n        {\n          graph.deleteEdge(target);\n        }\n        return true;\n      }\n      //Keep edges as placeholders (used in DFA's)\n      else\n      {\n        target.changeDestinationNode(null);\n\n        //Open label editor if default edge...\n        if (target.getEdgeLabel().length <= 0)\n        {\n          graphController.openLabelEditor(target, target.getEdgeLabel());\n        }\n        return true;\n      }\n    }\n  }\n}\n\nexport default GraphEndpointInputHandler;\n","import InputHandler from './InputHandler.js';\n\nclass GraphNodeCreateInputHandler extends InputHandler\n{\n  constructor()\n  {\n    super();\n  }\n\n  //Override\n  isTargetable(inputController, pointer, target, targetType)\n  {\n    return targetType === 'none';\n  }\n\n  //Override\n  onDblAction(inputController, graphController, pointer, target)\n  {\n    let x = pointer.x;\n    let y = pointer.y;\n\n    if (inputController._snapToGrid)\n    {\n      const snapSize = inputController._snapSize;\n      x = Math.round(x / snapSize) * snapSize;\n      y = Math.round(y / snapSize) * snapSize;\n    }\n\n    //Create node at position\n    const node = graphController.createNode(x, y);\n    //TODO: this allows nodes to move away from other nodes\n    //But undoManager does not recognize it.\n    //graphController.moveNodeTo(pointer, node, x, y);\n    return true;\n  }\n}\n\nexport default GraphNodeCreateInputHandler;\n","import PickHandler from './PickHandler.js';\n\nclass GraphNodePickHandler extends PickHandler\n{\n  constructor()\n  {\n    super();\n  }\n\n  //Override\n  getTargetAt(graph, x, y)\n  {\n    //Search graph\n    for(const node of graph.getNodes())\n    {\n      const nodeSize = node.getNodeSize();\n      const dx = x - node.x;\n      const dy = y - node.y;\n      if (dx * dx + dy * dy < nodeSize * nodeSize)\n      {\n        return node;\n      }\n    }\n    return null;\n  }\n\n  //Override\n  getTargetType() { return \"node\"; }\n}\n\nexport default GraphNodePickHandler;\n","import PickHandler from './PickHandler.js';\n\nconst EDGE_RADIUS = 12;\nconst EDGE_RADIUS_SQU = EDGE_RADIUS * EDGE_RADIUS;\n\nclass GraphEdgePickHandler extends PickHandler\n{\n  constructor()\n  {\n    super();\n  }\n\n  //Override\n  getTargetAt(graph, x, y)\n  {\n    const center = {x: 0, y: 0};\n\n    //Search graph\n    for(const edge of graph.getEdges())\n    {\n      edge.getCenterPoint(center);\n      const dx = x - center.x;\n      const dy = y - center.y;\n      if (dx * dx + dy * dy < EDGE_RADIUS_SQU)\n      {\n        return edge;\n      }\n    }\n    return null;\n  }\n\n  //Override\n  getTargetType() { return \"edge\"; }\n}\n\nexport default GraphEdgePickHandler;\n","import PickHandler from './PickHandler.js';\n\nconst ENDPOINT_RADIUS = 6;\nconst ENDPOINT_RADIUS_SQU = ENDPOINT_RADIUS * ENDPOINT_RADIUS;\n\nclass GraphEndpointPickHandler extends PickHandler\n{\n  constructor()\n  {\n    super();\n  }\n\n  //Override\n  getTargetAt(graph, x, y)\n  {\n    const end = {x: 0, y: 0};\n    //Search graph\n    for(const edge of graph.getEdges())\n    {\n      edge.getEndPoint(end);\n      const dx = x - end.x;\n      const dy = y - end.y;\n      if (dx * dx + dy * dy < ENDPOINT_RADIUS_SQU)\n      {\n        return edge;\n      }\n    }\n    return null;\n  }\n\n  //Override\n  getTargetType() { return \"endpoint\"; }\n}\n\nexport default GraphEndpointPickHandler;\n","export function userClearGraph(app, graphOnly=false, callback=null)\n{\n  if (window.confirm(I18N.toString(\"alert.graph.clear\")))\n  {\n    const module = app.getCurrentModule();\n    module.getGraphController().getGraph().clear();\n    if (!graphOnly)\n    {\n      app.getUndoManager().clear();\n      app.getSession().setProjectName(null);\n    }\n    else\n    {\n      app.getUndoManager().captureEvent();\n    }\n    if (callback) callback();\n  }\n}\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M16.59 7.58L10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 8l-4 4h3c0 3.31-2.69 6-6 6-1.01 0-1.97-.25-2.8-.7l-1.46 1.46C8.97 19.54 10.43 20 12 20c4.42 0 8-3.58 8-8h3l-4-4zM6 12c0-3.31 2.69-6 6-6 1.01 0 1.97.25 2.8.7l1.46-1.46C15.03 4.46 13.57 4 12 4c-4.42 0-8 3.58-8 8H1l4 4 4-4H6z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './PanelCheckbox.css';\n\nclass PanelCheckbox extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.state = {\n      checked: props.initial || false\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  setChecked(value)\n  {\n    this.setState({checked: value});\n  }\n\n  isChecked()\n  {\n    return this.state.checked;\n  }\n\n  onChange(e)\n  {\n    const checked = e.target.checked;\n    if (this.state.checked !== checked)\n    {\n      this.setState({checked: checked});\n    }\n  }\n\n  //Override\n  render()\n  {\n    return (\n      <div id={this.props.id}\n        className={Style.checkbox_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <input type=\"checkbox\" id={this.props.id + \"-checkbox\"}\n          name={this.props.id + \"-checkbox\"} value={this.props.value}\n          checked={this.state.checked}\n          disabled={this.props.disabled}\n          onChange={this.onChange}/>\n        <label htmlFor={this.props.id + \"-checkbox\"}>{this.props.title}</label>\n      </div>\n    );\n  }\n}\n\nexport default PanelCheckbox;\n","class GraphNodeSelectionBox\n{\n  constructor()\n  {\n    this._boundingBox = {\n      fromX: 0, fromY: 0,\n      toX: 0, toY: 0,\n      visible: false\n    };\n\n    this.targets = [];\n  }\n\n  getSelectionBox()\n  {\n    return this._boundingBox;\n  }\n\n  getSelection(graph, forceUpdate=false)\n  {\n    if (forceUpdate)\n    {\n      const box = this._boundingBox;\n      const mx = Math.max(box.toX, box.fromX);\n      const my = Math.max(box.toY, box.fromY);\n      const lx = Math.min(box.toX, box.fromX);\n      const ly = Math.min(box.toY, box.fromY);\n      this.clearSelection();\n      getNodesWithin(graph, lx, ly, mx, my, this.targets);\n    }\n\n    return this.targets;\n  }\n\n  hasSelection()\n  {\n    return this.targets.length > 0;\n  }\n\n  clearSelection()\n  {\n    this.targets.length = 0;\n  }\n\n  isTargetInSelection(target)\n  {\n    return this.targets.includes(target);\n  }\n\n  beginSelection(graph, x, y)\n  {\n    const box = this._boundingBox;\n    box.fromX = box.toX = x;\n    box.fromY = box.toY = y;\n    this.clearSelection();\n\n    box.visible = true;\n  }\n\n  updateSelection(graph, x, y)\n  {\n    const box = this._boundingBox;\n    box.toX = x;\n    box.toY = y;\n    this.getSelection(graph, true);\n  }\n\n  endSelection(graph, x, y)\n  {\n    const box = this._boundingBox;\n    box.toX = x;\n    box.toY = y;\n    this.getSelection(graph, true);\n\n    box.visible = false;\n  }\n\n  isSelecting()\n  {\n    return this._boundingBox.visible;\n  }\n}\n\nfunction getNodesWithin(graph, x1, y1, x2, y2, dst)\n{\n  const fromX = Math.min(x1, x2);\n  const fromY = Math.min(y1, y2);\n  const toX = Math.max(x1, x2);\n  const toY = Math.max(y1, y2);\n\n  for(const node of graph.getNodes())\n  {\n    if (node.x >= fromX && node.x < toX &&\n        node.y >= fromY && node.y < toY)\n    {\n      dst.push(node);\n    }\n  }\n  return dst;\n}\n\nexport default GraphNodeSelectionBox;\n","const EDGE_RADIUS = 12;\nconst EDGE_RADIUS_SQU = EDGE_RADIUS * EDGE_RADIUS;\nconst ENDPOINT_RADIUS = 6;\nconst ENDPOINT_RADIUS_SQU = ENDPOINT_RADIUS * ENDPOINT_RADIUS;\n\nclass GraphPicker\n{\n  constructor()\n  {\n    this.target = null;\n    this.targetType = \"\";\n\n    this.initialTarget = null;\n    this.initialTargetType = \"\";\n\n    this._prevX = 0;\n    this._prevY = 0;\n\n    this._pickHandlers = new Map();\n  }\n\n  addPickHandler(pickHandler)\n  {\n    this._pickHandlers.set(pickHandler.getTargetType(), pickHandler);\n    return this;\n  }\n\n  removePickHandler(pickHandler)\n  {\n    this._pickHandlers.delete(pickHandler.getTargetType());\n    return this;\n  }\n\n  getPickHandler(targetType)\n  {\n    return this._pickHandlers.get(targetType);\n  }\n\n  setInitialTarget(target, type)\n  {\n    this.initialTarget = target;\n    this.initialTargetType = type;\n  }\n\n  updateHoverTarget(graph, x, y)\n  {\n    if (this._prevX !== x || this._prevY !== y)\n    {\n      this._prevX = x;\n      this._prevY = y;\n\n      //Update target\n      this.updateTarget(graph, x, y);\n\n      //HACK: to make the cursor look like a pointer when targeting\n      if (this.hasTarget())\n      {\n        document.body.style.cursor = \"pointer\";\n      }\n      else\n      {\n        document.body.style.cursor = \"auto\";\n      }\n    }\n  }\n\n  updateInitialTarget(graph, x, y)\n  {\n    this.updateTarget(graph, x, y);\n    this.setInitialTarget(this.target, this.targetType);\n  }\n\n  updateTarget(graph, x, y)\n  {\n    for(const pickHandler of this._pickHandlers.values())\n    {\n      if (this.target = pickHandler.getTargetAt(graph, x, y))\n      {\n        this.targetType = pickHandler.getTargetType();\n        return;\n      }\n    }\n\n    this.target = null;\n    this.targetType = \"none\";\n\n    return this.target;\n  }\n\n  clearTarget()\n  {\n    this.target = null;\n    this.targetType = \"none\";\n  }\n\n  hasTarget()\n  {\n    return this.target != null;\n  }\n\n  isTarget(target)\n  {\n    return this.target == target;\n  }\n\n  getPickHandlers()\n  {\n    return this._pickHandlers.values();\n  }\n}\n\nexport default GraphPicker;\n","import AbstractInputController from 'modules/abstract/AbstractInputController.js';\n\n//import NodalGraphPicker from 'graph/picker/NodalGraphPicker.js';\nimport GraphNodeSelectionBox from 'graph/GraphNodeSelectionBox.js';\nimport GraphPicker from './GraphPicker.js';\n\nconst DEFAULT_SHOULD_DESTROY_POINTLESS_EDGE = true;\n\nclass InputController extends AbstractInputController\n{\n  constructor(module, inputAdapter)\n  {\n    super(module, inputAdapter);\n    \n    this._picker = new GraphPicker();\n    this._selectionBox = new GraphNodeSelectionBox();\n    this._graphController = null;\n\n    //Make sure this is always false when moving endpoints\n    this.isNewEdge = false;\n\n    //Whether to destroy pointless edges\n    this.shouldDestroyPointlessEdges = DEFAULT_SHOULD_DESTROY_POINTLESS_EDGE;\n\n    //Swap left to right clicks and vice versa on anything else but Macs\n    this._swapMouseScheme = true;//!navigator.platform.startsWith(\"Mac\");\n\n    //Used to determine whether the target should be destroyed because of trash mode\n    this._trashMode = false;\n\n    this._disabled = false;\n\n    //TODO: this works, it's just not attached to anything\n    this._snapToGrid = false;\n    this._snapSize = 48;\n\n    this._inputHandlers = [];\n  }\n\n  addInputHandler(inputHandler)\n  {\n    this._inputHandlers.push(inputHandler);\n    return this;\n  }\n\n  removeInputHandler(inputHandler)\n  {\n    this._inputHandlers.splice(this._inputHandlers.indexOf(inputHandler), 1);\n    return this;\n  }\n\n  //Override\n  initialize(module)\n  {\n    super.initialize(module);\n\n    this._module = module;\n    this._graphController = module.getGraphController();\n  }\n\n  //Override\n  destroy(module)\n  {\n    super.destroy(module);\n  }\n\n  //Override\n  update(module)\n  {\n    super.update(module);\n\n    const graph = this._graphController.getGraph();\n    const picker = this._picker;\n\n    const x = this._inputAdapter.getPointerX();\n    const y = this._inputAdapter.getPointerY();\n    picker.updateHoverTarget(graph, x, y);\n  }\n\n  setDisabled(disabled)\n  {\n    this._disabled = disabled;\n  }\n\n  isDisabled()\n  {\n    return this._disabled;\n  }\n\n  //Override\n  onPreInputEvent(pointer)\n  {\n    if (this._disabled) return super.onPreInputEvent(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n\n    const graph = graphController.getGraph();\n    const picker = inputController.getPicker();\n    picker.updateInitialTarget(graph, pointer.x, pointer.y);\n\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    if (this._selectionBox.hasSelection())\n    {\n      //Unselect everything is clicked on something other than nodes...\n      if (targetType != \"node\" || !this._selectionBox.isTargetInSelection(target))\n      {\n        this._selectionBox.clearSelection();\n      }\n    }\n\n    //Override\n    return super.onPreInputEvent(pointer);\n  }\n\n  //Override\n  onInputEvent(pointer)\n  {\n    if (this._disabled) return super.onInputEvent(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n    const picker = inputController.getPicker();\n    picker.updateTarget(graphController.getGraph(), pointer.x, pointer.y);\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    for(const handler of this._inputHandlers)\n    {\n      if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onAction(inputController, graphController, pointer, target))\n      {\n        return true;\n      }\n    }\n\n    //Override\n    return super.onInputEvent(pointer);\n  }\n\n  //Override\n  onDblInputEvent(pointer)\n  {\n    if (this._disabled) return super.onDblInputEvent(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n    const picker = inputController.getPicker();\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    //Make sure it is not in trash mode\n    if (inputController.isTrashMode())\n    {\n      graphController.emit(\"tryCreateWhileTrash\");\n      return false;\n    }\n\n    for(const handler of this._inputHandlers)\n    {\n      if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onDblAction(inputController, graphController, pointer, target))\n      {\n        return true;\n      }\n    }\n\n    //Override\n    return super.onDblInputEvent(pointer);\n  }\n\n  //Override\n  onDragStart(pointer)\n  {\n    if (this._disabled) return super.onDragStart(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n    const picker = inputController.getPicker();\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    //Make sure it is not in new edge mode\n    inputController.isNewEdge = false;\n\n    //Make sure it is not in trash mode\n    if (inputController.isTrashMode())\n    {\n      graphController.emit(\"tryCreateWhileTrash\");\n      return false;\n    }\n\n    for(const handler of this._inputHandlers)\n    {\n      if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onDragStart(inputController, graphController, pointer, target))\n      {\n        return true;\n      }\n    }\n\n    //Override\n    return super.onDragStart(pointer);\n  }\n\n  //Override\n  onDragMove(pointer)\n  {\n    if (this._disabled) return super.onDragMove(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n    const picker = inputController.getPicker();\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    for(const handler of this._inputHandlers)\n    {\n      if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onDragMove(inputController, graphController, pointer, target))\n      {\n        return true;\n      }\n    }\n\n    //Override\n    return super.onDragMove(pointer);\n  }\n\n  //Override\n  onDragStop(pointer)\n  {\n    if (this._disabled) return super.onDragStop(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n    const picker = inputController.getPicker();\n    picker.updateTarget(graphController.getGraph(), pointer.x, pointer.y);\n    const target = picker.initialTarget;\n    const targetType = picker.initialTargetType;\n\n    for(const handler of this._inputHandlers)\n    {\n      if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onDragStop(inputController, graphController, pointer, target))\n      {\n        return true;\n      }\n    }\n\n    //Override\n    return super.onDragStop(pointer);\n  }\n\n  //Override\n  onPostInputEvent(pointer)\n  {\n    if (this._disabled) return super.onPostInputEvent(pointer);\n\n    const inputController = this;\n    const graphController = this._graphController;\n    const graph = graphController.getGraph();\n    const picker = inputController.getPicker();\n\n    picker.clearTarget();\n    picker.updateTarget(graph, pointer.x, pointer.y);\n\n    //Override\n    super.onPostInputEvent(pointer);\n  }\n\n  setTrashMode(enabled)\n  {\n    this._trashMode = enabled;\n    if (enabled)\n    {\n      this._module.getApp()._drawer.setViewportColor(\"var(--color-viewport-error)\");\n    }\n    else\n    {\n      this._module.getApp()._drawer.setViewportColor(null);\n    }\n  }\n\n  isTrashMode()\n  {\n    return this._trashMode;\n  }\n\n  setInputScheme(shouldInputFirst)\n  {\n    this._swapMouseScheme = !shouldInputFirst;\n  }\n\n  getInputScheme()\n  {\n    return this._swapMouseScheme;\n  }\n\n  isMoveMode()\n  {\n    const result = this._inputAdapter.isAltInput();\n    return this._swapMouseScheme ? !result : result;\n  }\n\n  isDragging()\n  {\n    return this._inputAdapter.isDragging();\n  }\n\n  isActionMode()\n  {\n    return this._inputAdapter.isPointerActive() ?\n      //Is considered an input when NOT moving or when creating a new edge...\n      this.isNewEdge || !this.isMoveMode() :\n      //If not active, just show default input...\n      !this._swapMouseScheme;\n  }\n\n  getPicker()\n  {\n    return this._picker;\n  }\n\n  getSelectionBox()\n  {\n    return this._selectionBox;\n  }\n\n  getInputHandlers()\n  {\n    return this._inputHandlers;\n  }\n}\n\nexport default InputController;\n","import AbstractGraphController from 'modules/abstract/AbstractGraphController.js';\n\nimport Eventable from 'util/Eventable.js';\nimport GraphEdge from 'graph/GraphEdge.js';\nimport GraphLayout from 'modules/fsa/graph/GraphLayout.js';\n\nimport GraphChangeHandler from 'experimental/GraphChangeHandler.js';\n\nconst NODE_SPAWN_RADIUS = 64;\nconst DEFAULT_AUTO_RENAME = true;\nconst GRAPH_REFRESH_RATE = 30;\nconst DELETE_ON_EMPTY = true;\n\nclass GraphController extends AbstractGraphController\n{\n  constructor(module, graph, labeler, parser)\n  {\n    super(module, graph, labeler, parser);\n\n    this.inputController = null;\n    this._graphChangeHandler = new GraphChangeHandler(GRAPH_REFRESH_RATE);\n\n    this.getGraphLabeler().setGraphController(this);\n\n    this.prevQuad = {\n      radians: 0, length: 0,\n      x: 0, y: 0\n    };\n    this.prevEdgeTo = null;\n    this.prevX = 0;\n    this.prevY = 0;\n\n    this.shouldAutoLabel = DEFAULT_AUTO_RENAME;\n\n    //The difference between controller events vs graph events is: controller has user-intent\n\n    //tryCreateWhileTrash()\n    this.registerEvent(\"tryCreateWhileTrash\");\n  }\n\n  //Override\n  initialize(module)\n  {\n    super.initialize(module);\n\n    this._module = module;\n    this.inputController = module.getInputController();\n  }\n\n  //Override\n  destroy(module)\n  {\n    super.destroy(module);\n  }\n\n  //Override\n  update(module)\n  {\n    super.update(module);\n\n    this._graphChangeHandler.update(this._graph);\n  }\n\n  getGraphChangeHandler()\n  {\n    return this._graphChangeHandler;\n  }\n\n  applyAutoLayout()\n  {\n    GraphLayout.applyLayout(this.getGraph());\n\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  applyAutoRename()\n  {\n    const graphLabeler = this._labeler;\n    const graph = this._graph;\n\n    if (graph.isEmpty()) return;\n\n    //Reset all default labels...\n    for(const node of graph.getNodes())\n    {\n      if (!node.getNodeCustom()) node.setNodeLabel(\"\");\n    }\n\n    //Rename all default labels appropriately...\n    for(const node of graph.getNodes())\n    {\n      if (!node.getNodeCustom())\n      {\n        node.setNodeLabel(graphLabeler.getDefaultNodeLabel());\n      }\n    }\n  }\n\n  onGraphIntentImport()\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentCreateEdge(edge)\n  {\n  }\n\n  onGraphIntentFinishEdge(edge)\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentMoveEdge(edge, nextQuad, prevQuad)\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentChangeDestination(edge, destinationNode, prevDestination, prevQuad)\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentChangeInitial(nextInitial, prevInitial)\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentMoveNode(node, nextX, nextY, prevX, prevY)\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentMoveAllNodes(nodes, dx, dy)\n  {\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  onGraphIntentDeleteNodes(node, targetNodes, prevX, prevY)\n  {\n    if (this.shouldAutoLabel)\n    {\n      this.applyAutoRename();\n    }\n  }\n\n  setAutoRenameNodes(enable)\n  {\n    const prev = this.shouldAutoLabel;\n    this.shouldAutoLabel = enable;\n    if (enable && !prev)\n    {\n      this.applyAutoRename();\n    }\n  }\n\n  shouldAutoRenameNodes()\n  {\n    return this.shouldAutoLabel;\n  }\n\n  renameNode(node, name)\n  {\n    const prev = node.getNodeLabel();\n    const isPrevCustom = node.getNodeCustom();\n\n    node.setNodeLabel(name);\n    node.setNodeCustom(true);\n\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  createNode(x, y)\n  {\n    if (typeof x === 'undefined') x = (Math.random() * NODE_SPAWN_RADIUS * 2) - NODE_SPAWN_RADIUS;\n    if (typeof y === 'undefined') y = (Math.random() * NODE_SPAWN_RADIUS * 2) - NODE_SPAWN_RADIUS;\n\n    const node = this.getGraph().createNode(x, y);\n\n    const newNodeLabel = this.getGraphLabeler().getDefaultNodeLabel();\n    node.setNodeLabel(newNodeLabel);\n\n    this.getModule().getApp().getUndoManager().captureEvent();\n    return node;\n  }\n\n  toggleNode(node)\n  {\n    const prev = node.getNodeAccept();\n    const result = !prev;\n    //Toggle accept for selected node\n    node.setNodeAccept(result);\n\n    //Emit event\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  deleteSelectedNodes(selectedNode)\n  {\n    const selectionBox = this.inputController.getSelectionBox();\n    const selection = selectionBox.getSelection(this.getGraph()).slice();\n\n    //Remove from graph\n    for(const node of selection)\n    {\n      this.getGraph().deleteNode(node);\n    }\n\n    //Remove from selection\n    selectionBox.clearSelection();\n\n    //Emit event\n    this.onGraphIntentDeleteNodes(selectedNode, selection, this.prevX, this.prevY);\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  deleteTargetNode(target)\n  {\n    this.getGraph().deleteNode(target);\n\n    //Emit event\n    this.onGraphIntentDeleteNodes(target, [target], this.prevX, this.prevY);\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  deleteTargetNodes(targets)\n  {\n    if (!targets || targets.length <= 0) return;\n\n    const graph = this.getGraph();\n    for(const node of targets)\n    {\n      graph.deleteNode(node);\n    }\n\n    //Emit event\n    this.onGraphIntentDeleteNodes(targets[0], targets, this.prevX, this.prevY);\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  deleteTargetEdge(target)\n  {\n    this.getGraph().deleteEdge(target);\n\n    //Emit event\n    this.getModule().getApp().getUndoManager().captureEvent();\n  }\n\n  deleteTargetEdges(targets)\n  {\n    if (!targets || targets.length <= 0) return;\n\n    for(const target of targets)\n    {\n      this.deleteTargetEdge(target);\n    }\n  }\n\n  moveNodeTo(pointer, node, x, y)\n  {\n    const nodeSize = node.getNodeSize();\n    for(const other of this.getGraph().getNodes())\n    {\n      //Update node collision\n      if (node === other) continue;\n\n      const dx = x - other.x;\n      const dy = y - other.y;\n      const angle = Math.atan2(dy, dx);\n\n      const diameter = (nodeSize * 2);\n      const nextDX = other.x + (Math.cos(angle) * diameter) - x;\n      const nextDY = other.y + (Math.sin(angle) * diameter) - y;\n\n      if (dx * dx + dy * dy < nodeSize * nodeSize * 4)\n      {\n        x += nextDX;\n        y += nextDY;\n      }\n    }\n\n    node.x = x;\n    node.y = y;\n  }\n\n  moveMultipleNodesTo(pointer, nodes, x, y)\n  {\n    //Moves all nodes by difference between initial position with passed-in x and y\n    const pos = pointer.getInputEventPosition();\n    const dx = x - pos.x;\n    const dy = y - pos.y;\n    for(const node of nodes)\n    {\n      node.x += dx;\n      node.y += dy;\n    }\n\n    //Updates initial position to passed-in x and y to maintain relative position\n    pointer.changeInputEventPosition(x, y);\n  }\n\n  moveEdgeTo(pointer, edge, x, y)\n  {\n    edge.setQuadraticByCoords(x, y);\n  }\n\n  moveEndpointTo(pointer, edge, x, y)\n  {\n    //Get ONLY node at x and y (cannot use hover target, since it is not ONLY nodes)\n    const picker = this.inputController.getPicker();\n    const dst = picker.getPickHandler(\"node\").getTargetAt(this.getGraph(), x, y) || pointer;\n\n    edge.changeDestinationNode(dst);\n\n    //If the cursor returns to the state after leaving it...\n    if (edge.isSelfLoop())\n    {\n      //Make it a self loop\n      const sourceNode = edge.getSourceNode();\n      const dx = sourceNode.x - x;\n      const dy = sourceNode.y - y;\n      const radians = Math.atan2(dy, dx) + Math.PI;\n      edge.setQuadratic(radians);\n    }\n    //Otherwise, maintain original curve\n    else\n    {\n      //TODO: This also causes self-loops to act weird when no longer a self loop\n      edge.setQuadratic(this.prevQuad.radians, this.prevQuad.length);\n    }\n  }\n\n  openLabelEditor(target, defaultValue=null, callback=null)\n  {\n    const labelEditor = this.getModule().getInputManager().getLabelEditorManager().getLabelEditorComponent();\n    const prevLabel = defaultValue;\n    labelEditor.openEditor(target, defaultValue, (target, value) => {\n      if (DELETE_ON_EMPTY && (!value || value.length <= 0) && target instanceof GraphEdge)\n      {\n        //Assumes target is GraphEdge\n        this._graph.deleteEdge(target);\n      }\n      else\n      {\n        if (target instanceof GraphEdge)\n        {\n          target.setEdgeLabel(value);\n        }\n        else\n        {\n          target.setNodeLabel(value);\n        }\n\n        if (!prevLabel || (prevLabel.length > 0 && value !== prevLabel))\n        {\n          this.getModule().getApp().getUndoManager().captureEvent();\n        }\n        if (callback) callback(target, value);\n      }\n    }, (target) => {\n      if (DELETE_ON_EMPTY && (!prevLabel || prevLabel.length <= 0) && target instanceof GraphEdge)\n      {\n        //Assumes target is GraphEdge\n        this._graph.deleteEdge(target);\n      }\n    });\n  }\n\n  focusOnNode(node)\n  {\n    //Center workspace at focused node; inverted due to graph-to-screen space\n    this.inputController.getInputAdapter().getViewport().setOffset(-node.x, -node.y);\n  }\n\n  focusOnEdge(edge)\n  {\n    //Center workspace at focused edge; inverted due to graph-to-screen space\n    const center = edge.getCenterPoint();\n    this.inputController.getInputAdapter().getViewport().setOffset(-center.x, -center.y);\n  }\n\n  focusOnNodes(nodes)\n  {\n    //Center workspace at the average of focused nodes; inverted due to graph-to-screen space\n    const length = nodes.length;\n    let ax = 0;\n    let ay = 0;\n    for(const node of nodes)\n    {\n      ax += node.x;\n      ay += node.y;\n    }\n    this.inputController.getInputAdapter().getViewport().setOffset(-ax / length, -ay / length);\n  }\n}\n//Mixin Eventable\nEventable.mixin(GraphController);\n\nexport default GraphController;\n","import AbstractInputHandler from 'util/input/AbstractInputHandler.js';\n\nclass SelectionBoxInputHandler extends AbstractInputHandler\n{\n  constructor(inputController, graphController, selectionBox)\n  {\n    super();\n\n    this._inputController = inputController;\n    this._graphController = graphController;\n    this._selectionBox = selectionBox;\n  }\n\n  //Override\n  onDragStart(pointer)\n  {\n    if (!this._inputController.isMoveMode())\n    {\n      //Begin selection box...\n      this._selectionBox.beginSelection(this._graphController.getGraph(), pointer.x, pointer.y);\n      return true;\n    }\n\n    return false;\n  }\n\n  //Override\n  onDragMove(pointer)\n  {\n    //If the selection box is active...\n    if (this._selectionBox.isSelecting())\n    {\n      //Update the selection box\n      this._selectionBox.updateSelection(this._graphController.getGraph(), pointer.x, pointer.y);\n      return true;\n    }\n\n    return false;\n  }\n\n  //Override\n  onDragStop(pointer)\n  {\n    //If was trying to select...\n    if (this._selectionBox.isSelecting())\n    {\n      //Stop selecting stuff, fool.\n      this._selectionBox.endSelection(this._graphController.getGraph(), pointer.x, pointer.y);\n      return true;\n    }\n\n    return false;\n  }\n}\n\nexport default SelectionBoxInputHandler;\n","import AbstractInputHandler from 'util/input/AbstractInputHandler.js';\n\nclass ViewportInputHandler extends AbstractInputHandler\n{\n  constructor()\n  {\n    super();\n\n    this._prevX = 0;\n    this._prevY = 0;\n  }\n\n  //Override\n  onDragStart(pointer)\n  {\n    this._prevX = pointer.x;\n    this._prevY = pointer.y;\n    return true;\n  }\n\n  //Override\n  onDragMove(pointer)\n  {\n    const dx = pointer.x - this._prevX;\n    const dy = pointer.y - this._prevY;\n    const adapter = pointer.getAdapter();\n    const viewport = adapter.getViewport();\n    viewport.addOffset(dx, dy, true);\n    return true;\n  }\n\n  //Override\n  onDragStop(pointer)\n  {\n    //Do nothing. It should already be moved.\n    return true;\n  }\n}\n\nexport default ViewportInputHandler;\n","import React from 'react';\n\nexport const SUBMIT_DELAY = 30;\nexport const SUBMIT_KEY = \"Enter\";\nexport const CANCEL_KEY = \"Escape\";\n\nclass PatternInput extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.inputElement = null;\n\n    this.placeholder = \"\";\n    this.maxLength = 524288;/*This is the default value*/\n    this.multiLine = true;\n    this.formatter = null;\n\n    this._submitTimeout = null;\n    this._submit = props.submitOnBlur;\n    this._skipBlur = false;\n    this._skipSelect = false;\n\n    this.state = {\n      prevValue: \"\",\n      value: \"\"\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n  }\n\n  setFormatter(formatter)\n  {\n    this.formatter = formatter;\n    return this;\n  }\n\n  setPlaceholder(placeholder)\n  {\n    this.placeholder = placeholder;\n    return this;\n  }\n\n  onFocus(e)\n  {\n    if (this._skipSelect)\n    {\n      this.inputElement.select();\n      this._skipSelect = false;\n    }\n  }\n\n  onBlur(e)\n  {\n    if (!this._submitTimeout)\n    {\n      this._submitTimeout = setTimeout(() => {\n        this._submitTimeout = null;\n        if (this._skipBlur) return;\n\n        const submit = this._submit;\n        this._submit = this.props.submitOnBlur;\n        if (document.activeElement !== this.inputElement && submit)\n        {\n          const value = this.state.value;\n          if (this.props.onSubmit) this.props.onSubmit(value);\n\n          this.setState({prevValue: value});\n        }\n        else\n        {\n          this.setState((prev, props) => {\n            return {value: prev.prevValue};\n          });\n        }\n\n        if (this.props.onBlur) this.props.onBlur(e);\n      }, SUBMIT_DELAY);\n    }\n  }\n\n  onKeyDown(e)\n  {\n    if (e.key === SUBMIT_KEY)\n    {\n      if (e.shiftKey && this.multiLine) return;\n\n      this._submit = true;\n      this.inputElement.blur();\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    else if (e.key === CANCEL_KEY)\n    {\n      this.setState((prev, props) => {\n        return {value: prev.prevValue};\n      }, () => {\n        this._submit = false;\n        this.inputElement.blur();\n      });\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  onChange(e)\n  {\n    const target = e.target;\n    const caretPosition = target.selectionStart;\n    let value = target.value;\n    if (this.formatter)\n    {\n      value = this.formatter(value);\n    }\n\n    this.setState({value: value}, () => {\n      target.selectionEnd = caretPosition;\n    });\n  }\n\n  focus(select=true)\n  {\n    this._skipSelect = select;\n    this.inputElement.focus();\n  }\n\n  ignoreBlur(ignore)\n  {\n    const prev = this._skipBlur;\n    this._skipBlur = ignore;\n    return prev !== ignore;\n  }\n\n  appendValue(string, separator=\"\", format=true)\n  {\n    const value = this.state.value;\n    if (value && value.length + string.length > this.maxLength) return;\n\n    let result;\n    if (value && value.length > 0)\n    {\n      result = value + separator + string;\n    }\n    else\n    {\n      result = string;\n    }\n\n    if (format && this.formatter)\n    {\n      result = this.formatter(result);\n    }\n\n    this.setState((prev, props) => {\n      return {value: result};\n    });\n  }\n\n  resetValue(string)\n  {\n    this.setState({prevValue: string, value: string});\n  }\n\n  setValue(string, format=true)\n  {\n    let value = string;\n    if (format && this.formatter)\n    {\n      value = this.formatter(value);\n    }\n    this.setState({value: value});\n  }\n\n  getValue()\n  {\n    return this.state.value;\n  }\n\n  //Override\n  render()\n  {\n    const placeholder = this.placeholder;\n    const maxlength = this.maxLength;\n    const multiline = this.multiLine;\n    const disabled = this.props.disabled;\n\n    const value = this.state.value;\n\n    return (\n      <div id={this.props.id}\n        className={this.props.className}\n        style={this.props.style}>\n        {\n          multiline ?\n          <textarea ref={ref=>this.inputElement=ref}\n            type=\"text\" rows=\"1\" spellCheck=\"false\"\n            disabled={disabled}\n            placeholder={placeholder}\n            maxLength={maxlength}\n            value={value}\n            onChange={this.onChange}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            onKeyDown={this.onKeyDown}/>\n          :\n          <input ref={ref=>this.inputElement=ref}\n            type=\"text\" spellCheck=\"false\"\n            disabled={disabled}\n            placeholder={placeholder}\n            maxLength={maxlength}\n            value={value}\n            onChange={this.onChange}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            onKeyDown={this.onKeyDown}/>\n        }\n      </div>\n    );\n  }\n}\n\nexport default PatternInput;\n","import React from 'react';\nimport Style from './LabelEditorView.css';\n\nimport GraphElement from 'graph/GraphElement.js';\n\nimport PatternInput from 'deprecated/system/patterninput/PatternInput.js';\n\nclass LabelEditorView extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.ref = null;\n    this.inputComponent = null;\n\n    this.state = {\n      open: false\n    };\n\n    this._target = null;\n    this._targetCallback = null;\n\n    this.onInputSubmit = this.onInputSubmit.bind(this);\n    this.onInputBlur = this.onInputBlur.bind(this);\n  }\n\n  openEditor(graphElement, defaultValue=null, onSubmit=null, onCancel=null)\n  {\n    if (!(graphElement instanceof GraphElement)) throw new Error(\"Can only open editor for GraphElements\");\n\n    this._target = graphElement;\n    this._targetOnSubmit = onSubmit;\n    this._targetOnCancel = onCancel;\n\n    const formatter = this.props.labeler.getLabelFormatter(this._target);\n    this.inputComponent.setFormatter(formatter);\n\n    this.setState({open: true}, () => {\n      if (defaultValue !== null)\n      {\n        this.inputComponent.resetValue(defaultValue);\n      }\n      this.inputComponent.focus();\n    });\n  }\n\n  closeEditor()\n  {\n    this._target = null;\n    this._targetOnSubmit = null;\n    this._targetOnCancel = null;\n\n    this.inputComponent.setFormatter(null);\n\n    this.setState({open: false});\n  }\n\n  isEditorOpen()\n  {\n    return this.state.open;\n  }\n\n  getTarget()\n  {\n    return this._target;\n  }\n\n  onInputSubmit(value)\n  {\n    if (this._targetOnSubmit)\n    {\n      this._targetOnSubmit(this._target, value);\n      //Don't handle cancel callbacks...\n      this._targetOnCancel = null;\n    }\n  }\n\n  onInputBlur(e)\n  {\n    if (this._targetOnCancel)\n    {\n      this._targetOnCancel(this._target);\n      //Don't handle submit callbacks...\n      this._targetOnSubmit = null;\n    }\n    this.closeEditor();\n  }\n\n  //Override\n  render()\n  {\n    const isEditorOpen = this.state.open;\n\n    const target = this._target;\n    const targetStyle = this.props.style || {};\n    const viewport = this.props.viewport;\n    const labeler = this.props.labeler;\n\n    if (target)\n    {\n      const center = target.getCenterPoint();\n      const element = viewport.getElement();\n      const parentClientRect = element.getBoundingClientRect();\n      const screenPos = transformViewToScreen(\n        element,\n        center.x + viewport.getOffsetX(),\n        center.y + viewport.getOffsetY()\n      );\n      const x = screenPos.x;\n      const y = screenPos.y;\n      const offsetX = -(this.ref.offsetWidth / 2) - parentClientRect.left;\n      const offsetY = -(this.ref.offsetHeight / 2) - parentClientRect.top;\n\n      targetStyle['top'] = (y + offsetY) + \"px\";\n      targetStyle['left'] = (x + offsetX) + \"px\";\n    }\n\n    return (\n      <div ref={ref=>this.ref=ref}\n        id={this.props.id}\n        className={Style.editor_container +\n          (isEditorOpen ? \" open \" : \"\") +\n          \" \" + this.props.className}\n        style={targetStyle}>\n        <PatternInput ref={ref=>this.inputComponent=ref}\n          submitOnBlur={this.props.saveOnExit}\n          onSubmit={this.onInputSubmit}\n          onBlur={this.onInputBlur}/>\n        <div className={Style.tray_container}>\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction transformViewToScreen(svg, x, y)\n{\n  const ctm = svg.getScreenCTM();\n  return {\n    x: (x * ctm.a) + ctm.e,\n    y: (y * ctm.d) + ctm.f\n  };\n}\n\nexport default LabelEditorView;\n","import React from 'react';\n\nimport LabelEditorView from './LabelEditorView.js';\nimport {RENDER_LAYER_WORKSPACE_OVERLAY} from 'session/manager/RenderManager.js';\n\nclass LabelEditorManager\n{\n  constructor(app)\n  {\n    this._app = app;\n\n    this._labelEditorComponent = React.createRef();\n    this._labelEditorRenderer = null;\n    this._labeler = null;\n  }\n\n  setLabelEditorRenderer(renderer)\n  {\n    this._labelEditorRenderer = renderer;\n    return this;\n  }\n\n  setLabeler(labeler)\n  {\n    this._labeler = labeler;\n    return this;\n  }\n\n  //DuckType(SessionListener)\n  onSessionStart(session)\n  {\n    const currentModule = session.getCurrentModule();\n    const viewport = session.getApp().getInputAdapter().getViewport();\n\n    const LabelEditorRenderer = this._labelEditorRenderer;\n    const labeler = this._labeler;\n\n    session.getApp().getRenderManager().addRenderer(RENDER_LAYER_WORKSPACE_OVERLAY, props => (\n      <LabelEditorView ref={this._labelEditorComponent}\n        labeler={labeler}\n        viewport={viewport}\n        saveOnExit={true}>\n        {/* LabelEditor objects */\n          LabelEditorRenderer &&\n          <LabelEditorRenderer currentModule={currentModule} parent={this._labelEditorComponent.current}/>}\n      </LabelEditorView>\n    ));\n  }\n\n  //DuckType(SessionListener)\n  onSessionStop(session)\n  {\n    this._labeler = null;\n    this._labelEditorRenderer = null;\n  }\n\n  getLabelEditorComponent()\n  {\n    return this._labelEditorComponent.current;\n  }\n}\n\nexport default LabelEditorManager;\n","import InputController from 'modules/nodalgraph/controller/InputController.js';\nimport GraphController from 'modules/nodalgraph/controller/GraphController.js';\n\nimport SelectionBoxInputHandler from 'modules/nodalgraph/controller/SelectionBoxInputHandler.js';\nimport ViewportInputHandler from 'modules/nodalgraph/controller/ViewportInputHandler.js';\n\nimport LabelEditorManager from 'session/manager/labeleditor/LabelEditorManager.js';\n\nimport {WARNING_LAYOUT_ID} from 'session/manager/notification/NotificationManager.js';\n\nexport const TRASH_EDITING_NOTIFICATION_TAG = \"tryCreateWhileTrash\";\n\nclass NodalGraphInputManager\n{\n  constructor(currentModule, nodalGraph, graphLabeler, graphParser, labelEditorRenderer)\n  {\n    this._inputController = new InputController(currentModule, currentModule.getApp().getInputAdapter());\n    this._graphController = new GraphController(currentModule, nodalGraph, graphLabeler, graphParser);\n\n    this._labelEditorManager = new LabelEditorManager(currentModule.getApp())\n      .setLabelEditorRenderer(labelEditorRenderer)\n      .setLabeler(graphLabeler);\n\n    this._selectionBoxInputHandler = new SelectionBoxInputHandler(this._inputController, this._graphController, this._inputController.getSelectionBox());\n    this._viewportInputHandler = new ViewportInputHandler();\n  }\n\n  //Not yet implemented\n  setGraphLabeler(labeler)\n  {\n    this._graphLabeler = labeler;\n    return this;\n  }\n\n  //Not yet implemented\n  setGraphParser(parser)\n  {\n    this._graphParser = parser;\n    return this;\n  }\n\n  update(currentModule)\n  {\n    const inputController = this.getInputController();\n    const graphController = this.getGraphController();\n    inputController.update(currentModule);\n    graphController.update(currentModule);\n  }\n\n  //DuckType(SessionListener)\n  onSessionStart(session)\n  {\n    const app = session.getApp();\n    const currentModule = session.getCurrentModule();\n\n    currentModule.getApp().getInputAdapter()\n      .addInputHandler(this._inputController)\n      .addInputHandler(this._selectionBoxInputHandler)\n      .addInputHandler(this._viewportInputHandler);\n\n    const inputController = this.getInputController();\n    const graphController = this.getGraphController();\n    inputController.initialize(currentModule);\n    graphController.initialize(currentModule);\n\n    this._labelEditorManager.onSessionStart(session);\n\n    //Notify on create in delete mode\n    const tryCreateWhileTrash = () => {\n      if (this._inputController.isTrashMode())\n      {\n        app.getNotificationManager().pushNotification(\n          I18N.toString(\"message.warning.cannotmodify\"),\n          WARNING_LAYOUT_ID, TRASH_EDITING_NOTIFICATION_TAG, null, true);\n      }\n    };\n    this._graphController.on(\"tryCreateWhileTrash\", tryCreateWhileTrash);\n  }\n\n  //DuckType(SessionListener)\n  onSessionStop(session)\n  {\n    session.getApp().getInputAdapter()\n      .removeInputHandler(this._inputController)\n      .removeInputHandler(this._selectionBoxInputHandler)\n      .removeInputHandler(this._viewportInputHandler);\n\n    this._labelEditorManager.onSessionStop(session);\n\n    const currentModule = session.getCurrentModule();\n    const inputController = this.getInputController();\n    const graphController = this.getGraphController();\n    graphController.destroy(currentModule);\n    inputController.destroy(currentModule);\n  }\n\n  getLabelEditorManager() { return this._labelEditorManager; }\n  getGraphParser() { return this._graphController.getGraphParser(); }\n  getGraphLabeler() { return this._graphController.getGraphLabeler(); }\n  getGraphController() { return this._graphController; }\n  getInputController() { return this._inputController; }\n}\n\nexport default NodalGraphInputManager;\n","import FSA, { State } from '../FSA.js';\n\nexport function convertToNFA(fsa, dst=new FSA(false))\n{\n  if (!fsa.isDeterministic())\n  {\n    dst.copy(fsa);\n    return dst;\n  }\n\n  dst.setDeterministic(false);\n  return dst;\n}\n\nexport function convertToDFA(fsa, dst=new FSA(true))\n{\n  if (fsa.isDeterministic())\n  {\n    dst.copy(fsa);\n    return dst;\n  }\n\n  dst.setDeterministic(true);\n\n  const startState = fsa.getStartState();\n\n  const dfaData = {\n    nfaSource: fsa,\n    //To keep track of dfa states in terms of nfa sets\n    dfaStateMap: new Map(),\n    //Array of final dfa states\n    dfaFinalStates: [],\n    //To keep track of dfa transitions in terms of dfa states\n    dfaTransitionMap: new Map(),\n    //The resultant dfa start state\n    dfaStartState: null,\n    //The trap state for all missing transitions\n    dfaTrapState: null\n  };\n\n  //Make new DFA start state\n  const startStatesByClosure = fsa.doClosureTransition(startState);\n  dfaData.dfaStartState = getDFAStateFromNFAStates(startStatesByClosure, dfaData);\n  dfaData.dfaTrapState = getDFAStateFromNFAStates([], dfaData);\n\n  //For every state from the NFA's powerset, add it to DFA with correct transitions\n  const statePowerSet = getPowerSetOfStates(fsa.getStates());\n  for(const nfaStates of statePowerSet)\n  {\n    //As long as it is not the empty set...\n    if (nfaStates.length > 0)\n    {\n      expandNFAStatesToDFA(nfaStates, dfaData);\n    }\n  }\n\n  //Make sure any unused symbols are added as transitions for every state...\n  for(const dfaState of dfaData.dfaStateMap.values())\n  {\n    for(const symbol of fsa.getAlphabet())\n    {\n      //If transition for symbol does not exist...\n      const dfaTransitionKey = getDFATransitionKeyFromDFAStateAndSymbol(dfaState, symbol, dfaData);\n      if (!dfaData.dfaTransitionMap.has(dfaTransitionKey))\n      {\n        dfaData.dfaTransitionMap.set(dfaTransitionKey, [dfaState, symbol, dfaData.dfaTrapState]);\n      }\n    }\n  }\n\n  //Compiled dfa data to dst\n  dst.clear();\n  //Add states\n  for(const dfaState of dfaData.dfaStateMap.values())\n  {\n    dst.addState(dfaState);\n  }\n\n  //Set start state\n  dst.setStartState(dfaData.dfaStartState);\n  //Set final states\n  for(const finalState of dfaData.dfaFinalStates)\n  {\n    dst.setFinalState(finalState);\n  }\n  //Add transitions (will also add any symbols used to alphabet)\n  for(const transition of dfaData.dfaTransitionMap.values())\n  {\n    dst.addTransition(transition[0], transition[2], transition[1]);\n  }\n  return dst;\n}\n\nfunction expandNFAStatesToDFA(nfaStates, dfaData)\n{\n  let fromDFAState = getDFAStateFromNFAStates(nfaStates, dfaData);\n  let dfaState = null;\n\n  let nfaTerminals = [];\n\n  for(const symbol of dfaData.nfaSource.getAlphabet())\n  {\n    //Get all closed reachable states...\n    for(const fromNFAState of nfaStates)\n    {\n      dfaData.nfaSource.doTerminalTransition(fromNFAState, symbol, nfaTerminals);\n    }\n\n    //If has reachable states...\n    if (nfaTerminals.length > 0)\n    {\n      dfaState = getDFAStateFromNFAStates(nfaTerminals, dfaData);\n\n      //Create transition for reachable state\n      //Should guarantee to be unique for state and symbol pair\n      const dfaTransitionKey = getDFATransitionKeyFromDFAStateAndSymbol(fromDFAState, symbol, dfaData);\n      dfaData.dfaTransitionMap.set(dfaTransitionKey, [fromDFAState, symbol, dfaState]);\n    }\n\n    //Reset list\n    nfaTerminals.length = 0;\n  }\n}\n\nfunction getNFAStateKeyFromNFAStates(nfaStates, dfaData)\n{\n  let result = \"\";\n  for(const nfaState of dfaData.nfaSource.getStates())\n  {\n    if (nfaStates.includes(nfaState))\n    {\n      result += \"x\";\n    }\n    else\n    {\n      result += \"-\";\n    }\n  }\n  return result;\n}\n\nfunction getDFATransitionKeyFromDFAStateAndSymbol(dfaState, symbol, dfaData)\n{\n  return dfaState.getStateID() + \";\" + symbol;\n}\n\nfunction getDFAStateFromNFAStates(nfaStates, dfaData)\n{\n  const nfaStateKey = getNFAStateKeyFromNFAStates(nfaStates, dfaData);\n  let result = dfaData.dfaStateMap.get(nfaStateKey);\n\n  //If it doesn't exist, create it...\n  if (!result)\n  {\n    let final = false;\n    //Compute the label from nfa states in set notation...\n    let dfaStateLabel = \"{\";\n    for(const state of nfaStates)\n    {\n      if (dfaStateLabel.length > 1)\n      {\n        dfaStateLabel += \",\";\n      }\n      dfaStateLabel += state.getStateLabel();\n\n      //Check if nfa state is final state...\n      if (!final)\n      {\n        final = dfaData.nfaSource.isFinalState(state);\n      }\n    }\n    dfaStateLabel += \"}\";\n\n    //Create the state\n    result = new State(dfaStateLabel);\n    dfaData.dfaStateMap.set(nfaStateKey, result);\n\n    //If any nfa states is a final state, make dfa state final...\n    if (final)\n    {\n      dfaData.dfaFinalStates.push(result);\n    }\n  }\n\n  return result;\n}\n\nfunction getPowerSetOfStates(states)\n{\n  var result = [[]];\n\n  for(const state of states)\n  {\n    for(let i = 0, len = result.length; i < len; ++i)\n    {\n      result.push(result[i].concat(state));\n    }\n  }\n  return result;\n}\n","const MAX_COMPUTATION_STEPS = 1000;\n\nexport function solveFSA(fsa, input)\n{\n  if (typeof input === 'string') input = input[Symbol.iterator]();\n\n  if (fsa.isDeterministic())\n  {\n    //Solve if the DFA way...\n    let state = fsa.getStartState();\n    let symbol = null;\n\n    //Is testing null after assignment\n    while((symbol = input.next().value))\n    {\n      const states = fsa.doTransition(state, symbol);\n      if (states.length < 1) return false;\n      //DFA's should only return 1 output\n      state = states[0];\n    }\n    return fsa.isFinalState(state);\n  }\n  else\n  {\n    //Solve it the NFA way...\n    const cachedStates = [];\n    const cachedSymbols = [];\n\n    //Start with the start state...\n    const startState = fsa.getStartState();\n    //(index refers to the \"level\" of computation)\n    cachedStates.push({state: startState, index: 0});\n    //...and any state defined similarly by closure...\n    for(const relatedState of fsa.doClosureTransition(startState))\n    {\n      cachedStates.push({state: relatedState, index: 0});\n    }\n\n    //The next symbol to compute...\n    let symbol = null;\n\n    //Just to be safe from infinite loops...\n    let counter = 0;\n    while(cachedStates.length > 0)\n    {\n      symbol = input.next().value;\n      if (solveFSAByStep(fsa, symbol, cachedStates, cachedSymbols))\n      {\n        return true;\n      }\n\n      //HACK: This is to stop any infinite loops! This should be fixed in the future!\n      ++counter;\n      if (counter > MAX_COMPUTATION_STEPS)\n      {\n        return false;\n      }\n    }\n\n    return false;\n  }\n}\n\n//TODO: When an empty transition occurs, it does a closure transition.\n//The closure chain will be stored as a group\n//Any future transitions must not re-enter the group\nexport function solveFSAByStep(nfa, symbol, cachedStates, cachedSymbols)\n{\n  //initialize variables\n  let state = null;\n  let nextStates = [];\n  let nextIndex = 0;\n\n  if (symbol)\n  {\n    cachedSymbols.push(symbol);\n  }\n\n  for(const cstate of cachedStates)\n  {\n    state = cstate.state;\n    symbol = cstate.index < cachedSymbols.length ? cachedSymbols[cstate.index] : null;\n\n    if (symbol)\n    {\n      //Read to next state...\n      nextIndex = cstate.index + 1;\n      for(const nextState of nfa.doTerminalTransition(state, symbol))\n      {\n        nextStates.push({state: nextState, index: nextIndex});\n      }\n    }\n    else\n    {\n      if (nfa.isFinalState(state)) return true;\n    }\n\n    //Read none to next state...\n    nextIndex = cstate.index;\n  }\n  cachedStates.length = 0\n  cachedStates.push(...nextStates);\n  return false;\n}\n","import FSA from '../FSA.js';\n\nexport function invertDFA(fsa, dst=new FSA(true))\n{\n  dst.copy(fsa);\n\n  const toBeRejected = new Set(dst.getFinalStates());\n  for(const state of dst.getStates())\n  {\n    if (toBeRejected.has(state))\n    {\n      dst.setFinalState(state, false);\n    }\n    else\n    {\n      dst.setFinalState(state, true);\n    }\n  }\n\n  return dst;\n};\n","export {convertToDFA, convertToNFA} from './util/ConvertFSA.js';\nexport {solveFSA, solveFSAByStep} from './util/SolveFSA.js';\nexport {isEquivalentFSA, isEquivalentDFA} from './util/EqualFSA.js';\nexport {invertDFA} from './util/InvertDFA.js';\nexport {intersectFSA, intersectDFA} from './util/IntersectFSA.js';\n","import React from 'react';\n\nclass BoxRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const visible = this.props.visible;\n    const fromX = this.props.fromX || 0;\n    const fromY = this.props.fromY || 0;\n    const toX = this.props.toX || fromX + 1;\n    const toY = this.props.toY || fromY + 1;\n\n    const dx = toX - fromX;\n    const dy = toY - fromY;\n\n    return (\n      <g className=\"graph-selection-container\">\n      { visible &&\n        <rect className=\"graph-selection\"\n          x={dx < 0 ? toX : fromX}\n          y={dy < 0 ? toY : fromY}\n          width={dx < 0 ? -dx : dx}\n          height={dy < 0 ? -dy : dy}/> }\n      </g>\n    );\n  }\n}\n\nexport default BoxRenderer;\n","import React from 'react';\n\nconst CURSOR_RADIUS = 4;\nconst NODE_RADIUS = 16;\nconst EDGE_RADIUS = 12;\nconst ENDPOINT_RADIUS = 6;\nconst INITIAL_MARKER_OFFSET_X = -(NODE_RADIUS + (NODE_RADIUS / 2));\n\nconst HIGHLIGHT_RADIUS_OFFSET = 4;\nconst HIGHLIGHT_LINE_WIDTH = 3;\nconst HIGHLIGHT_LINE_ARRAY = [8, 6];\n\nclass HighlightRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const target = this.props.target;\n    const type = this.props.type;\n\n    let x = 0;\n    let y = 0;\n    let r = CURSOR_RADIUS;\n    switch(type)\n    {\n      case \"node\":\n        x = target.x || 0;\n        y = target.y || 0;\n        r = NODE_RADIUS;\n        break;\n      case \"edge\":\n        const center = target.getCenterPoint();\n        x = center.x || 0;\n        y = center.y || 0;\n        r = EDGE_RADIUS;\n        break;\n      case \"endpoint\":\n        const endpoint = target.getEndPoint();\n        x = endpoint.x || 0;\n        y = endpoint.y || 0;\n        r = ENDPOINT_RADIUS;\n        break;\n      case \"initial\":\n        x = target.x + INITIAL_MARKER_OFFSET_X;\n        y = target.y || 0;\n        r = EDGE_RADIUS;\n        break;\n    }\n\n    return (\n      <g className=\"graph-highlight-container\">\n        <circle className={\"graph-highlight \" + this.props.className}\n          cx={x} cy={y}\n          r={r + HIGHLIGHT_RADIUS_OFFSET}\n          strokeDashoffset={this.props.offset || 0}\n          strokeDasharray={HIGHLIGHT_LINE_ARRAY}\n          strokeWidth={HIGHLIGHT_LINE_WIDTH}\n          fill=\"none\"/>\n      </g>\n    );\n  }\n}\n\nexport default HighlightRenderer;\n","import React from 'react';\n\nimport BoxRenderer from './BoxRenderer.js';\nimport HighlightRenderer from './HighlightRenderer.js';\n\nclass SelectionBoxRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const currentModule = this.props.currentModule;\n\n    const graphController = currentModule.getGraphController();\n    const inputController = currentModule.getInputController();\n\n    const graph = graphController.getGraph();\n    const selectionBox = inputController.getSelectionBox();\n    const selectionBoundingBox = selectionBox.getSelectionBox();\n\n    return (\n      <g>\n        {/* Selected elements */}\n        { selectionBox &&\n          selectionBox.hasSelection() &&\n          selectionBox.getSelection(graph).map((e, i) =>\n            <HighlightRenderer key={e.getGraphElementID()}\n              className={inputController.isTrashMode() ?\n                \"highlight-error\" :\n                \"highlight-select\"}\n              target={e} type=\"node\"/>) }\n\n        {/* Selection box */}\n        { selectionBoundingBox &&\n          <BoxRenderer visible={selectionBoundingBox.visible}\n            fromX={selectionBoundingBox.fromX} fromY={selectionBoundingBox.fromY}\n            toX={selectionBoundingBox.toX} toY={selectionBoundingBox.toY}/> }\n      </g>\n    );\n  }\n}\n\nexport default SelectionBoxRenderer;\n","import React from 'react';\n\nimport SelectionBoxRenderer from './SelectionBoxRenderer.js';\nimport HighlightRenderer from './HighlightRenderer.js';\n\nclass GraphInputRenderer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    //Inherits props from parent\n    const currentModule = this.props.currentModule;\n\n    const inputController = currentModule.getInputController();\n\n    const viewport = inputController.getInputAdapter().getViewport();\n    const picker = inputController.getPicker();\n    const selectionBox = inputController.getSelectionBox();\n\n    return (\n      <g>\n        <SelectionBoxRenderer currentModule={currentModule}/>\n\n        {/* Node test targets */}\n        { currentModule._tester &&\n          currentModule._tester.targets &&\n          currentModule._tester.targets.map((e, i) => {\n            return <HighlightRenderer key={e.getGraphElementID()}\n              className=\"highlight-test graph-gui\"\n              target={e} type=\"node\" offset=\"6\"/>;\n          })}\n\n        {/* Hover markers */}\n        { picker &&\n          picker.hasTarget() &&\n          !selectionBox.isTargetInSelection(picker.target) &&\n          <HighlightRenderer className={inputController.isTrashMode() ?\n            \"highlight-error\" :\n            \"highlight-select\"}\n            target={picker.target}\n            type={picker.targetType}/> }\n      </g>\n    );\n  }\n}\n\nexport default GraphInputRenderer;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 26 26\">\n        <path d=\"M 11.5 -0.03125 C 9.542969 -0.03125 7.96875 1.59375 7.96875 3.5625 L 7.96875 4 L 4 4 C 3.449219 4 3 4.449219 3 5 L 3 6 L 2 6 L 2 8 L 4 8 L 4 23 C 4 24.644531 5.355469 26 7 26 L 19 26 C 20.644531 26 22 24.644531 22 23 L 22 8 L 24 8 L 24 6 L 23 6 L 23 5 C 23 4.449219 22.550781 4 22 4 L 18.03125 4 L 18.03125 3.5625 C 18.03125 1.59375 16.457031 -0.03125 14.5 -0.03125 Z M 11.5 2.03125 L 14.5 2.03125 C 15.304688 2.03125 15.96875 2.6875 15.96875 3.5625 L 15.96875 4 L 10.03125 4 L 10.03125 3.5625 C 10.03125 2.6875 10.695313 2.03125 11.5 2.03125 Z M 6 8 L 11.125 8 C 11.25 8.011719 11.371094 8.03125 11.5 8.03125 L 14.5 8.03125 C 14.628906 8.03125 14.75 8.011719 14.875 8 L 20 8 L 20 23 C 20 23.5625 19.5625 24 19 24 L 7 24 C 6.4375 24 6 23.5625 6 23 Z M 8 10 L 8 22 L 10 22 L 10 10 Z M 12 10 L 12 22 L 14 22 L 14 10 Z M 16 10 L 16 22 L 18 22 L 18 10 Z \"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './TrashCanWidget.css';\n\nimport TrashCanDetailedIcon from 'experimental/iconset/TrashCanDetailedIcon.js';\n\nconst DOUBLE_TAP_TIME = 250;\n\nclass TrashCanWidget extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.ref = null;\n\n    this.state = {\n      forceActive: false\n    };\n\n    this._doubleTapTimeout = null;\n\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseLeave = this.onMouseLeave.bind(this);\n    this.onClick = this.onClick.bind(this);\n\n    //HACK: This is kinda a hack to lose trash mode focus...\n    this.onAnyMouseDownNotConsumed = this.onAnyMouseDownNotConsumed.bind(this);\n  }\n\n  onMouseEnter(e)\n  {\n    if (this.state.forceActive) return;\n\n    this.props.inputController.setTrashMode(true);\n  }\n\n  onMouseLeave(e)\n  {\n    if (this.state.forceActive) return;\n\n    this.props.inputController.setTrashMode(false);\n  }\n\n  onClick(e)\n  {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (this._doubleTapTimeout)\n    {\n      //This is a double tap!\n      clearTimeout(this._doubleTapTimeout);\n      this._doubleTapTimeout = null;\n      this.setState({forceActive: false});\n\n      this.props.app.getSession().getCurrentModule().clear(this.props.app, true);\n      this.props.inputController.setTrashMode(false);\n    }\n    else\n    {\n      //This is a single tap!\n      this.setState((prev, props) => {\n        const result = !prev.forceActive;\n        props.inputController.setTrashMode(result);\n        this._doubleTapTimeout = setTimeout(() => {\n          this._doubleTapTimeout = null;\n        }, DOUBLE_TAP_TIME);\n\n        if (result)\n        {\n          document.documentElement.addEventListener('mousedown', this.onAnyMouseDownNotConsumed);\n        }\n\n        return {\n          forceActive: result\n        };\n      });\n    }\n  }\n\n  onAnyMouseDownNotConsumed(e)\n  {\n    if (this.state.forceActive && this.ref !== e.target)\n    {\n      e.stopPropagation();\n      e.preventDefault();\n\n      document.documentElement.removeEventListener('mousedown', this.onAnyMouseDownNotConsumed);\n\n      this.props.inputController.setTrashMode(false);\n      this.setState({forceActive: false});\n    }\n  }\n\n  //Override\n  render()\n  {\n    const inputController = this.props.inputController;\n    const graphController = this.props.graphController;\n    const inputAdapter = inputController.getInputAdapter();\n\n    const active = inputController.isTrashMode();\n    const hide = !active && (graphController.getGraph().isEmpty() || (inputAdapter.isUsingTouch() && inputAdapter.isDragging()));\n\n    return (\n      <div ref={ref=>this.ref=ref} id={this.props.id}\n        className={Style.trash_container +\n          (active ? \" active \" : \"\") +\n          (hide ? \" hide \" : \"\") +\n          \" \" + this.props.className}\n        style={this.props.style}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n        onClick={this.onClick}>\n        <TrashCanDetailedIcon/>\n      </div>\n    );\n  }\n}\n\nexport default TrashCanWidget;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M13,6V11H18V7.75L22.25,12L18,16.25V13H13V18H16.25L12,22.25L7.75,18H11V13H6V16.25L1.75,12L6,7.75V11H11V6H7.75L12,1.75L16.25,6H13Z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './ModeSelectTray.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport EditPencilIcon from 'experimental/iconset/EditPencilIcon.js';\nimport MoveIcon from 'experimental/iconset/MoveIcon.js';\n\nclass ModeSelectTray extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(newValue)\n  {\n    if (this.props.onChange)\n    {\n      this.props.onChange(newValue);\n    }\n  }\n\n  //Override\n  render()\n  {\n    const mode = this.props.mode || 0;\n    const onChange = this.props.onChange;\n\n    return (\n      <div id={this.props.id}\n        className={Style.tray_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <IconButton className={Style.tray_button +\n          (mode === 0 ? \" active \" : \"\")}\n          onClick={() => this.onChange(0)}\n          title={I18N.toString(\"cursor.actionmode\")}>\n          <EditPencilIcon/>\n        </IconButton>\n        <IconButton className={Style.tray_button +\n          (mode === 1 ? \" active \" : \"\")}\n          onClick={() => this.onChange(1)}\n          title={I18N.toString(\"cursor.movemode\")}>\n          <MoveIcon/>\n        </IconButton>\n      </div>\n    );\n  }\n}\nexport default ModeSelectTray;\n","import AbstractMachineBuilder from 'modules/abstract/AbstractMachineBuilder.js';\nimport FSA, { EMPTY_SYMBOL, State } from './FSA.js';\nimport FSANode from 'modules/fsa/graph/FSANode.js';\nimport FSAEdge, { EMPTY_CHAR } from 'modules/fsa/graph/FSAEdge.js';\n\nexport const ERROR_UNREACHABLE_STATE = \"unreachable_state\";\nexport const ERROR_DUPLICATE_STATE = \"duplicate_state\";\nexport const ERROR_INCOMPLETE_TRANSITION = \"incomplete_transition\";\nexport const ERROR_DUPLICATE_TRANSITION = \"duplicate_transition\";\nexport const ERROR_MISSING_TRANSITION = \"missing_transition\";\nexport const ERROR_EMPTY_TRANSITION = \"empty_transition\";\n\nclass FSABuilder extends AbstractMachineBuilder\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._machine = new FSA();\n\t}\n\n\t//Override\n\tattemptBuild(graph, dst, errors=[], warnings=[])\n\t{\n\t\terrors.length = 0;\n\t\twarnings.length = 0;\n\n\t\tconst deterministic = dst.isDeterministic();\n\t\tdst.clear();\n\n\t\tconst nodeLabels = new Map();\n\t\tconst nodeOutgoings = new Map();\n\t\tconst edgeSymbols = new Set();\n\t\tconst edgePlaceholders = [];\n\t\tconst edgeEmpties = [];\n\n\t\tconst graphNodes = graph.getNodes();\n\t\tconst graphEdges = graph.getEdges();\n\t\tconst graphStart = graph.getStartNode();\n\n\t\tfor (const node of graphNodes)\n\t\t{\n\t\t\tconst nodeLabel = node.getNodeLabel();\n\t\t\tconst state = new State(nodeLabel, node);\n\t\t\tdst.addState(state);\n\n\t\t\tif (node.getNodeAccept())\n\t\t\t{\n\t\t\t\tdst.setFinalState(state, true);\n\t\t\t}\n\n\t\t\tif (graphStart === node)\n\t\t\t{\n\t\t\t\tdst.setStartState(state);\n\t\t\t}\n\n\t\t\t//Check for duplicate states\n\t\t\tif (nodeLabels.has(nodeLabel)) nodeLabels.get(nodeLabel).push(state);\n\t\t\telse nodeLabels.set(nodeLabel, [state]);\n\n\t\t\t//For duplicate transitions\n\t\t\tnodeOutgoings.set(state, new Map());\n\t\t}\n\n\t\tfor (const edge of graphEdges)\n\t\t{\n\t\t\tconst srcNode = edge.getSourceNode();\n\t\t\tconst dstNode = edge.getDestinationNode();\n\t\t\tif (!edge.isPlaceholder() && srcNode instanceof FSANode && dstNode instanceof FSANode)\n\t\t\t{\n\t\t\t\tconst srcState = dst.getStateByID(srcNode.getGraphElementID());\n\t\t\t\tconst dstState = dst.getStateByID(dstNode.getGraphElementID());\n\t\t\t\tif (!srcState || !dstState) throw new Error(\"Cannot find state for edge source/destination nodes - mismatch id\");\n\n\t\t\t\tconst edgeLabelSymbols = edge.getEdgeSymbolsFromLabel();\n\t\t\t\tfor (const symbol of edgeLabelSymbols)\n\t\t\t\t{\n\t\t\t\t\tif (!symbol) continue;\n\n          if (symbol === EMPTY_CHAR)\n          {\n\t\t\t\t\t\t//For empties\n            edgeEmpties.push(edge);\n          }\n          else\n          {\n\t\t\t\t\t\t//For used symbol\n            edgeSymbols.add(symbol);\n          }\n\n          //Translate all labels to symbols\n          let transitionSymbol;\n          switch(symbol)\n          {\n            case EMPTY_CHAR:\n              transitionSymbol = EMPTY_SYMBOL;\n              break;\n            default:\n              transitionSymbol = symbol;\n          }\n\n\t\t\t\t\t//For duplicate/missing transitions\n\t\t\t\t\tlet outSymbols = nodeOutgoings.get(srcState);\n\t\t\t\t\tlet outEdges = outSymbols.get(transitionSymbol);\n\t\t\t\t\tif (!outEdges) outSymbols.set(transitionSymbol, outEdges = new Array());\n\t\t\t\t\toutEdges.push(edge);\n\n          //Add to machine...\n\t\t\t\t\tdst.addTransition(srcState, dstState, transitionSymbol);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tedgePlaceholders.push(edge);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n    //Check for duplicate node labels\n\t\tfor(const [nodeLabel, sharedStates] of nodeLabels.entries())\n\t\t{\n\t\t\tif (sharedStates.length > 1)\n\t\t\t{\n\t\t\t\terrors.push({\n\t\t\t\t\tname: ERROR_DUPLICATE_STATE,\n\t\t\t\t\tlabel: nodeLabel,\n\t\t\t\t\tnodes: sharedStates.map(e => e.getSource())\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n    //Check for incomplete edge\n\t\tif (edgePlaceholders.length > 0)\n\t\t{\n\t\t\terrors.push({\n\t\t\t\tname: ERROR_INCOMPLETE_TRANSITION,\n\t\t\t\tedges: edgePlaceholders\n\t\t\t});\n\t\t}\n\n\t\t//Check for unreachable nodes\n\t\tconst unreachables = this.getUnreachableNodes(graph);\n\t\tif (unreachables && unreachables.length > 0)\n\t\t{\n\t\t\twarnings.push({\n\t\t\t\tname: ERROR_UNREACHABLE_STATE,\n\t\t\t\tnodes: unreachables\n\t\t\t});\n\t\t}\n\n\t\tif (deterministic)\n\t\t{\n\t    //Check for empty transitions\n\t\t\tif (edgeEmpties.length > 0)\n\t\t\t{\n\t\t\t\terrors.push({\n\t\t\t\t\tname: ERROR_EMPTY_TRANSITION,\n\t\t\t\t\tedges: edgeEmpties\n\t\t\t\t});\n\t\t\t}\n\n\t    //Check for duplicate edge labels\n\t\t\t//Check for missing edge labels\n\t\t\tconst missingSymbols = [];\n\t\t\tfor(const [state, edgeMapping] of nodeOutgoings.entries())\n\t\t\t{\n\t\t\t\tfor(const symbol of edgeSymbols)\n\t\t\t\t{\n\t\t\t\t\tconst edges = edgeMapping.get(symbol);\n\t\t\t\t\tif (edges)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (edges.length !== 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\t\tname: ERROR_DUPLICATE_TRANSITION,\n\t\t\t\t\t\t\t\tedges: edges,\n\t\t\t\t\t\t\t\tsymbol: symbol\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tmissingSymbols.push(symbol);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (missingSymbols.length > 0)\n\t\t\t\t{\n\t\t\t\t\terrors.push({\n\t\t\t\t\t\tname: ERROR_MISSING_TRANSITION,\n\t\t\t\t\t\tnode: state.getSource(),\n\t\t\t\t\t\tsymbols: missingSymbols.slice()\n\t\t\t\t\t});\n\t\t\t\t\tmissingSymbols.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (errors.length <= 0)\n\t\t{\n\t\t\t//Errors should be empty\n\t\t\treturn this._machine;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//Reasons are stored in errors\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tgetUnreachableNodes(graph)\n\t{\n\t\tconst openList = graph.getNodes().slice();\n\t\tconst index = openList.indexOf(startNode);\n\t\topenList.splice(index, 1);\n\n\t\tconst queue = [];\n\t\tqueue.push(startNode);\n\n\t\twhile(queue.length > 0)\n\t\t{\n\t\t\tconst nextNode = queue.pop();\n\n\t\t}\n\n    if (graph.getNodeCount() <= 1) return [];\n\n    const edges = graph.getEdges();\n    const nodes = graph.getNodes().slice();\n\t\tconst startNode = graph.getStartNode();\n\t\tconst startIndex = nodes.indexOf(startNode);\n\t\tif (startIndex < 0) return [];\n\t\tnodes.splice(startIndex, 1);\n\n    let nextNodes = [];\n    nextNodes.push(startNode);\n\n    while(nextNodes.length > 0)\n    {\n      const node = nextNodes.pop();\n      for(const edge of edges)\n      {\n        if (edge.getSourceNode() === node)\n        {\n          const i = nodes.indexOf(edge.getDestinationNode());\n          if (i >= 0)\n          {\n\t\t\t\t\t\tconst nextNode = nodes[i];\n            nodes.splice(i, 1);\n            nextNodes.push(nextNode);\n          }\n        }\n      }\n    }\n\n    return nodes;\n\t}\n\n\t//Override\n\tgetMachine()\n\t{\n\t\treturn this._machine;\n\t}\n}\n\n//Representations ->\n//Truth\n\n//MachineBuilder\n//Graph -> Machine (Compile, then return errors)\n//Any changes to graph does not warrant a change to machine\n//Machine Changes -> Graph (Apply them as they happen)\n//Any change to machine does.\n//Machine Conversion -> Graph (Reconstruct the entire graph from machine, then apply layout)\n\nexport default FSABuilder;\n","import AbstractMachineController from 'modules/abstract/AbstractMachineController.js';\n\nimport {EMPTY_SYMBOL} from 'modules/fsa2/machine/FSA.js';\nimport {EMPTY_CHAR, SYMBOL_SEPARATOR} from 'modules/fsa/graph/FSAEdge.js';\nimport FSABuilder from 'modules/fsa2/machine/FSABuilder.js';\nimport { convertToDFA, invertDFA } from 'modules/fsa2/machine/FSAUtils.js';\n\nimport GraphLayout from 'modules/fsa/graph/GraphLayout.js';\n\nclass MachineController extends AbstractMachineController\n{\n  constructor(module)\n  {\n    super(module, new FSABuilder());\n\n    this.graphController = null;\n  }\n\n  //Override\n  initialize(module)\n  {\n    super.initialize(module);\n\n    this.graphController = module.getGraphController();\n  }\n\n  //Override\n  destroy(module)\n  {\n    super.destroy(module);\n  }\n\n  //Override\n  update(module)\n  {\n    super.update(module);\n  }\n\n  getMachineType()\n  {\n    return this._machineBuilder.getMachine().isDeterministic() ? \"DFA\" : \"NFA\";\n  }\n\n  setMachineType(machineType)\n  {\n    this._machineBuilder.getMachine().setDeterministic(machineType === 'DFA');\n  }\n\n  changeMachineTo(machineType)\n  {\n    const prev = this.getMachineType();\n    if (prev != machineType)\n    {\n      this.setMachineType(machineType);\n    }\n  }\n\n  getFirstGraphNodeByLabel(graph, label)\n  {\n    for(const node of graph.getNodes())\n    {\n      if (node.getNodeLabel() == label)\n      {\n        return node;\n      }\n    }\n\n    return null;\n  }\n\n  setGraphToMachine(graph, machine)\n  {\n    graph.clear();\n\n    if (machine.getStateCount() <= 0) return;\n\n    //Add all states\n    let stateMap = new Map();\n    let node;\n    for(const state of machine.getStates())\n    {\n      node = graph.createNode(0, 0);\n      node.setNodeLabel(state.getStateLabel());\n      if (machine.isFinalState(state)) node.setNodeAccept(true);\n      stateMap.set(state, node);\n    }\n\n    //Add all transitions\n    let edge, from, to, read, labels, flag;\n    for(let transition of machine.getTransitions())\n    {\n      from = stateMap.get(transition.getSourceState());\n      to = stateMap.get(transition.getDestinationState());\n      read = [];\n      for(const symbol of transition.getSymbols())\n      {\n        if (symbol === EMPTY_SYMBOL)\n        {\n          read.push(EMPTY_CHAR);\n        }\n        else\n        {\n          read.push(symbol);\n        }\n      }\n      edge = graph.createEdge(from, to);\n      edge.setEdgeLabel(read.join(SYMBOL_SEPARATOR));\n      const formattedEdge = graph.formatEdge(edge);\n      if (edge != formattedEdge) graph.deleteEdge(edge);\n    }\n\n    //Set start state\n    const startState = machine.getStartState();\n    graph.setStartNode(stateMap.get(startState));\n\n    //Auto layout graph\n    GraphLayout.applyLayout(graph);\n  }\n\n  convertMachineTo(machineType)\n  {\n    const currentMachineType = this.getMachineType();\n\n    //Already converted machine...\n    if (currentMachineType === machineType) return;\n\n    if (machineType == \"DFA\" && currentMachineType == \"NFA\")\n    {\n      const result = convertToDFA(this.getMachineBuilder().getMachine());\n      this.setGraphToMachine(this.graphController.getGraph(), result);\n      this.setMachineType(machineType);\n    }\n    else if (machineType == \"NFA\" && currentMachineType == \"DFA\")\n    {\n      this.changeMachineTo(machineType);\n    }\n    else\n    {\n      throw new Error(\"Conversion scheme between \\'\" + currentMachineType + \"\\' to \\'\" + machineType + \"\\' is not supported\");\n    }\n  }\n\n  invertMachine()\n  {\n    const machine = this.getMachineBuilder().getMachine();\n    const result = invertDFA(machine, machine);\n\n    //Update final states\n    for(const state of result.getStates())\n    {\n      const src = state.getSource();\n      src.setNodeAccept(machine.isFinalState(state));\n    }\n  }\n\n  getUnreachableNodes()\n  {\n    const graphController = this.graphController;\n    const graph = graphController.getGraph();\n    if (graph.getNodeCount() <= 1) return [];\n\n    const edges = graph.getEdges();\n    const nodes = graph.getNodes().slice();\n    const startNode = nodes.shift();\n    let nextNodes = [];\n    nextNodes.push(startNode);\n\n    while(nextNodes.length > 0)\n    {\n      const node = nextNodes.pop();\n      for(const edge of edges)\n      {\n        if (edge.getSourceNode() === node)\n        {\n          const i = nodes.indexOf(edge.getDestinationNode());\n          if (i >= 0)\n          {\n            const nextNode = nodes.splice(i, 1)[0];\n            nextNodes.push(nextNode);\n          }\n        }\n      }\n    }\n\n    return nodes;\n  }\n\n  getStates()\n  {\n    return this._machineBuilder.getMachine().getStates();\n  }\n\n  countStates()\n  {\n    return this._machineBuilder.getMachine().getStateCount();\n  }\n\n  getFinalStates()\n  {\n    return this._machineBuilder.getMachine().getFinalStates();\n  }\n\n  getTransitions()\n  {\n    return this._machineBuilder.getMachine().getTransitions();\n  }\n\n  getAlphabet()\n  {\n    const machine = this._machineBuilder.getMachine();\n    return Array.from(machine.getAlphabet());\n  }\n\n  isUsedSymbol(symbol)\n  {\n    return !this.isCustomSymbol(symbol);\n  }\n\n  createSymbol(symbol)\n  {\n    this.addCustomSymbol(symbol);\n  }\n\n  deleteSymbol(symbol)\n  {\n    let edge = null;\n    let index = null;\n    let result = null;\n    const targets = [];\n\n    const graph = this.graphController.getGraph();\n    for(let i = graph.getEdges().length - 1; i >= 0; --i)\n    {\n      edge = graph.getEdges()[i];\n      index = edge.getEdgeLabel().indexOf(symbol);\n      if (index >= 0)\n      {\n        result = edge.getEdgeLabel().substring(0, index) + edge.getEdgeLabel().substring(index + 1);\n        if (result.length > 0)\n        {\n          edge.setEdgeLabel(result);\n        }\n        else\n        {\n          edge.setEdgeLabel(\"\");\n          graph.deleteEdge(edge);\n        }\n        targets.push(edge);\n      }\n    }\n\n    if (targets.length <= 0)\n    {\n      this.getMachineBuilder().removeCustomSymbol(symbol);\n    }\n  }\n\n  renameSymbol(prevSymbol, nextSymbol)\n  {\n    let edge = null;\n    let result = null;\n    const targets = [];\n\n    const graph = this.graphController.getGraph();\n    const length = graph.getEdges().length;\n    for(let i = 0; i < length; ++i)\n    {\n      edge = graph.getEdges()[i];\n      let result = edge.getEdgeLabel().replace(prevSymbol, nextSymbol);\n      if (result != edge.getEdgeLabel())\n      {\n        targets.push(edge);\n      }\n      edge.setEdgeLabel(result);\n    }\n\n    if (targets.length <= 0)\n    {\n      this.getMachineBuilder().renameCustomSymbol(prevSymbol, nextSymbol);\n    }\n  }\n\n  getCustomSymbols()\n  {\n    return Array.from(this._machineBuilder.getMachine().getCustomSymbols());\n  }\n\n  isCustomSymbol(symbol)\n  {\n    return this._machineBuilder.isCustomSymbol(symbol);\n  }\n\n  addCustomSymbol(symbol)\n  {\n    this._machineBuilder.getMachine().setCustomSymbol(symbol);\n  }\n\n  clearCustomSymbols()\n  {\n    this._machineBuilder.getMachine().clearCustomSymbols();\n  }\n}\n\nexport default MachineController;\n","import React from 'react';\n\nconst RETURN_FOCUS_DELAY = 50;\n\nclass PatternInputButton extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.ref = null;\n\n    this._timeout = null;\n\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onAnyMouseUp = this.onAnyMouseUp.bind(this);\n  }\n\n  onMouseDown(e)\n  {\n    const parent = this.props.parent;\n    if (parent.ignoreBlur(true))\n    {\n      document.addEventListener(\"mouseup\", this.onAnyMouseUp);\n    }\n\n    if (this.props.onClick)\n    {\n      this.props.onClick(e, this);\n    }\n  }\n\n  onAnyMouseUp()\n  {\n    document.removeEventListener(\"mouseup\", this.onAnyMouseUp);\n\n    if (this._timeout) clearTimeout(this._timeout);\n    this._timeout = setTimeout(() => {\n      this._timeout = null;\n\n      const parent = this.props.parent;\n      parent.ignoreBlur(false);\n\n      if (document.activeElement === this.ref)\n      {\n        parent.focus(false);\n      }\n      else if (document.activeElement !== this.props.parent.inputElement)\n      {\n        parent.onBlur();\n      }\n    }, RETURN_FOCUS_DELAY);\n  }\n\n  //Override\n  render()\n  {\n    return (\n      <button ref={ref=>this.ref=ref}\n        id={this.props.id}\n        className={this.props.className}\n        style={this.props.style}\n        title={this.props.title}\n        onMouseDown={this.onMouseDown}>\n        {this.props.title}\n      </button>\n    );\n  }\n}\n\nexport default PatternInputButton;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M12 7.77L18.39 18H5.61L12 7.77M12 4L2 20h20L12 4z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import AbstractGraphExporter from 'session/manager/export/AbstractGraphExporter.js';\n\nimport { JSON as JSONGraphParser } from 'modules/fsa/graph/FSAGraphParser.js';\nimport { downloadText } from 'util/Downloader.js';\n\nimport JSONFileIcon from 'experimental/iconset/flat/JSONFileIcon.js';\n\nclass FSAGraphExporter extends AbstractGraphExporter\n{\n  constructor() { super(); }\n\n  fromJSON(data, module)\n  {\n    const graphController = module.getGraphController();\n    const machineController = module.getMachineController();\n    const graph = graphController.getGraph();\n\n    const metadata = '_metadata' in data ? data['_metadata'] : {};\n    const newGraph = JSONGraphParser.parse(data.graphData, graph);\n\n    //HACK: this should be calculated elsewhere\n    const machineData = data.machineData;\n    const machineName = machineData.name;\n    if (machineName) module.getApp().getSession().setProjectName(machineName);\n    const machineType = machineData.type;\n    if (machineType) machineController.setMachineType(machineType);\n    const customSymbols = machineData.symbols;\n    if (customSymbols && Array.isArray(customSymbols))\n    {\n      machineController.clearCustomSymbols();\n      for(const symbol of customSymbols)\n      {\n        machineController.addCustomSymbol(symbol);\n      }\n    }\n    const statePrefix = machineData.statePrefix;\n    if (statePrefix)\n    {\n      graphController.getGraphLabeler().setDefaultNodeLabelPrefix(statePrefix);\n    }\n\n    return newGraph;\n  }\n\n  toJSON(graphData, module)\n  {\n    const graphController = module.getGraphController();\n    const machineController = module.getMachineController();\n\n    const dst = {};\n    dst[\"_metadata\"] = {\n      module: module.getModuleName(),\n      version: process.env.VERSION + \":\" + module.getModuleVersion(),\n      timestamp: new Date().toString()\n    };\n    dst[\"graphData\"] = graphData;\n    dst[\"machineData\"] = {\n      name: module.getApp().getSession().getProjectName(),\n      type: machineController.getMachineType(),\n      symbols: machineController.getCustomSymbols(),\n      statePrefix: graphController.getGraphLabeler().getDefaultNodeLabelPrefix()\n    };\n    return dst;\n  }\n\n  //Override\n  importFromData(data, module)\n  {\n    this.fromJSON(data, module);\n  }\n\n  //Override\n  exportToData(module)\n  {\n    const graph = module.getGraphController().getGraph();\n    const graphData = JSONGraphParser.objectify(graph);\n    const result = this.toJSON(graphData, module);\n    return result;\n  }\n\n  //Override\n  doesSupportData()\n  {\n    return true;\n  }\n\n  //Override\n  importFromFile(fileBlob, module)\n  {\n    return new Promise((resolve, reject) => {\n      const filename = fileBlob.name;\n      if (!filename.endsWith(this.getFileType()))\n      {\n        throw new Error(\"Trying to import invalid file type for \\'\" + this.getFileType() + \"\\': \" + filename);\n      }\n\n      const reader = new FileReader();\n      reader.onload = e => {\n        const graphController = module.getGraphController();\n        const machineController = module.getMachineController();\n        const data = e.target.result;\n        const name = filename.substring(0, filename.length - this.getFileType().length - 1);\n        const graph = graphController.getGraph();\n        const prevGraphHash = graph.getHashCode(true);\n\n        //TODO: this should not be here, this should exist somewhere in graphController\n        if (!graph.isEmpty())\n        {\n          module.getApp().getUndoManager().captureEvent();\n        }\n\n        try\n        {\n          const jsonData = JSON.parse(data);\n\n          this.fromJSON(jsonData, module);\n\n          module.getApp().getSession().setProjectName(name);\n\n          resolve();\n        }\n        catch (e)\n        {\n          reader.abort();\n          reject(e);\n        }\n        finally\n        {\n          const nextGraphHash = graph.getHashCode(true);\n          if (prevGraphHash !== nextGraphHash)\n          {\n            module.getApp().getUndoManager().captureEvent();\n          }\n        }\n      };\n\n      reader.onerror = e => {\n        reject(new Error(\"Unable to import file: \" + e.target.error.code));\n      }\n\n      reader.readAsText(fileBlob);\n    });\n  }\n\n  //Override\n  exportToFile(filename, module)\n  {\n    const graph = module.getGraphController().getGraph();\n    const graphData = JSONGraphParser.objectify(graph);\n    const dst = this.toJSON(graphData, module);\n    const jsonString = JSON.stringify(dst);\n    downloadText(filename + '.' + this.getFileType(), jsonString);\n  }\n\n  //Override\n  doesSupportFile()\n  {\n    return true;\n  }\n\n  //Override\n  canImport(module)\n  {\n    return true;\n  }\n\n  //Override\n  canExport(module)\n  {\n    return !module.getGraphController().getGraph().isEmpty();\n  }\n\n  //Override\n  getTitle()\n  {\n    return I18N.toString(\"file.export.machine.hint\");\n  }\n\n  //Override\n  getLabel()\n  {\n    return I18N.toString(\"file.export.machine\");\n  }\n\n  //Override\n  getFileType()\n  {\n    return \"json\";\n  }\n\n  //Override\n  getIconClass()\n  {\n    return JSONFileIcon;\n  }\n}\n\nexport default FSAGraphExporter;\n","import GraphElementInputHandler from './GraphElementInputHandler.js';\nimport GraphNode from 'graph/GraphNode.js';\n\nclass GraphInitialInputHandler extends GraphElementInputHandler\n{\n  constructor()\n  {\n    super(\"initial\");\n\n    //Used to change render to follow pointer when moving initial marker\n    this.ghostInitialMarker = null;\n  }\n\n  //Override\n  onDragStart(inputController, graphController, pointer, target)\n  {\n    //Ready to move the initial marker to another state...\n    this.ghostInitialMarker = pointer;\n    return true;\n  }\n\n  //Override\n  onDragMove(inputController, graphController, pointer, target)\n  {\n    const picker = inputController.getPicker();\n    const graph = graphController.getGraph();\n    const x = pointer.x;\n    const y = pointer.y;\n    //Move initial marker to node or pointer\n    const dst = picker.getPickHandler(\"node\").getTargetAt(graph, x, y) || pointer;\n    this.ghostInitialMarker = dst;\n    return true;\n  }\n\n  //Override\n  onDragStop(inputController, graphController, pointer, target)\n  {\n    const graph = graphController.getGraph();\n\n    //If valid initial object to mark...\n    if (this.ghostInitialMarker instanceof GraphNode)\n    {\n      const prevInitial = graph.getStartNode();\n\n      //Set the new object as the initial node\n      graph.setStartNode(this.ghostInitialMarker);\n      graphController.applyAutoRename();\n\n      //Emit event\n      graphController.onGraphIntentChangeInitial(this.ghostInitialMarker, prevInitial);\n      //graphController.emit(\"nodeInitial\", graph, this.ghostInitialMarker, prevInitial);\n    }\n\n    //Reset ghost initial marker\n    this.ghostInitialMarker = null;\n    return true;\n  }\n}\n\nexport default GraphInitialInputHandler;\n","import GraphElementInputHandler from './GraphElementInputHandler.js';\n\nclass GraphNodeAcceptInputHandler extends GraphElementInputHandler\n{\n  constructor()\n  {\n    super(\"node\");\n  }\n\n  //Override\n  onAction(inputController, graphController, pointer, target)\n  {\n    //Edit click to toggle node\n    if (!inputController.isMoveMode())\n    {\n      graphController.toggleNode(target);\n      return true;\n    }\n\n    return false;\n  }\n}\n\nexport default GraphNodeAcceptInputHandler;\n","import PickHandler from './PickHandler.js';\n\nconst EDGE_RADIUS = 12;\nconst EDGE_RADIUS_SQU = EDGE_RADIUS * EDGE_RADIUS;\n\nclass GraphInitialPickHandler extends PickHandler\n{\n  constructor()\n  {\n    super();\n  }\n\n  //Override\n  getTargetAt(graph, x, y)\n  {\n    const startNode = graph.getStartNode();\n    if (!startNode) return null;\n\n    const nodeSize = startNode.getNodeSize();\n    const offset = -(nodeSize + (nodeSize / 2));\n    const dx = x - (startNode.x + offset);\n    const dy = y - startNode.y;\n    if (dx * dx + dy * dy < EDGE_RADIUS_SQU)\n    {\n      return startNode;\n    }\n\n    return null;\n  }\n\n  //Override\n  getTargetType() { return \"initial\"; }\n}\n\nexport default GraphInitialPickHandler;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './TapeWidget.css';\n\nimport DownArrowIcon from 'experimental/iconset/DownArrowIcon.js';\n\nconst TAPE_INFINITE_LEFT = true;\nconst TAPE_INFINITE_RIGHT = true;\n\nclass TapeWidget extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.onTapeStepBackward = this.onTapeStepBackward.bind(this);\n    this.onTapeStepForward = this.onTapeStepForward.bind(this);\n    this.onTapeFinish = this.onTapeFinish.bind(this);\n    this.onTapeReset = this.onTapeReset.bind(this);\n    this.onTapeSkipForward = this.onTapeSkipForward.bind(this);\n    this.onTapeSkipBackward = this.onTapeSkipBackward.bind(this);\n    this.onTapeStop = this.onTapeStop.bind(this);\n  }\n\n  onTapeStepBackward(e)\n  {\n    const tapeContext = this.props.value;\n    tapeContext.stepBackward();\n  }\n\n  onTapeStepForward(e)\n  {\n    const tapeContext = this.props.value;\n    tapeContext.stepForward();\n  }\n\n  onTapeSkipForward(e)\n  {\n  }\n\n  onTapeSkipBackward(e)\n  {\n  }\n\n  onTapeReset(e)\n  {\n    const tapeContext = this.props.value;\n    tapeContext.reset();\n  }\n\n  onTapeFinish(e)\n  {\n    const tapeContext = this.props.value;\n    tapeContext.finish();\n  }\n\n  onTapeStop(e)\n  {\n    const tapeContext = this.props.value;\n    tapeContext.stop();\n  }\n\n  //Override\n  render()\n  {\n    const showTransitionStates = true;\n    const tapeContext = this.props.value;\n    const tapeIndex = tapeContext ? tapeContext.getCurrentTapeIndex() : -1;\n\n    if (!tapeContext) return null;\n\n    return (\n      <div id={this.props.id}\n        className={Style.tape_container +\n        \" \" + this.props.className}\n        style={this.props.style}>\n\n        <div className={Style.tape_control_tray}>\n          <button onClick={this.onTapeStepBackward}>BACK</button>\n          <button onClick={this.onTapeStepForward}>STEP</button>\n          <button onClick={this.onTapeReset}>RESET</button>\n          <button onClick={this.onTapeFinish}>TO END</button>\n        </div>\n\n        <div className={Style.tape_control_tray}>\n          <button onClick={this.onTapeSkipForward}>SKIP TO NEXT</button>\n          <button onClick={this.onTapeSkipBackward}>SKIP TO PREV</button>\n          <button onClick={this.onTapeStop}>STOP</button>\n        </div>\n\n        <div className={\"tape-row\"}>\n\n          {TAPE_INFINITE_LEFT && tapeContext.isTapeLeftInfinite() &&\n            <div className=\"tape-row-entry infinite\">\n              <span className=\"tape-row-states\"></span>\n              <label className=\"tape-row-symbol\">{\"...\"}</label>\n            </div>}\n\n          <DownArrowIcon\n            className=\"tape-pointer\"\n            style={{opacity: tapeIndex < 0 ? 0 : 1, left: tapeIndex + \"em\"}}/>\n\n          {tapeContext.getTapeInput().map((e, i) => {\n            let active = false;\n            let activeRead = false;\n            active = tapeIndex === i;\n            activeRead = tapeIndex === i - 1;\n            /*\n            const currentIndex = Math.floor(tapeIndex / 2);\n            if (currentIndex === i)\n            {\n              //It's the current index...\n              active = tapeIndex % 2 === 1;\n              activeRead = tapeIndex % 2 === 0;\n            }\n            else if (currentIndex === i + 1)\n            {\n              //It's the previous index...\n              active = tapeIndex % 2 === 0;\n            }\n            */\n\n            const sourceStates = tapeContext.getTapeSourceStatesByIndex(i);\n            const disabled = sourceStates === null;\n            return (\n              <div key={e + \":\" + i} className={\"tape-row-entry\" +\n                (active ? \" active \" : \"\") +\n                (activeRead ? \" active-read \" : \"\") +\n                (disabled ? \" disabled \" : \"\")}\n                onClick={(e) => (!disabled ? tapeContext.setCurrentTapeIndex(i) : null)}>\n                {showTransitionStates &&\n                  sourceStates &&\n                  <span className=\"tape-row-states\">\n                    {sourceStates.map(sourceState => {\n                      return (\n                        <label key={sourceState.getGraphElementID()}>\n                          {sourceState.getNodeLabel()}\n                        </label>\n                      );\n                    })}\n                  </span>}\n                <label className=\"tape-row-symbol\">\n                  {e}\n                </label>\n              </div>\n            );\n          })}\n\n          {TAPE_INFINITE_RIGHT && tapeContext.isTapeRightInfinite() &&\n            <div className=\"tape-row-entry infinite\">\n              <span className=\"tape-row-states\"></span>\n              <label className=\"tape-row-symbol\">{\"...\"}</label>\n            </div>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TapeWidget;\n"],"sourceRoot":""}