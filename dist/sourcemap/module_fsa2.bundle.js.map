{"version":3,"sources":["webpack:///./src/app/graph/elements/GraphNode.js","webpack:///./src/app/graph/elements/GraphEdge.js","webpack:///./src/app/graph/elements/GraphElement.js","webpack:///./src/app/util/input/AbstractInputHandler.js","webpack:///./src/app/modules/fsa2/machine/FSA.js","webpack:///./src/app/modules/fsa/graph/FSAEdge.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphElementInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/pickhandler/PickHandler.js","webpack:///./src/app/components/iconset/RunningManIcon.js","webpack:///./src/app/modules/fsa/graph/GraphLayout.js","webpack:///./src/app/util/input/InputContext.js","webpack:///./src/app/session/manager/undo/AbstractEventHandler.js","webpack:///./src/app/modules/fsa2/graph/UnreachableNodes.js","webpack:///./src/app/components/iconset/BoxAddIcon.js","webpack:///./src/app/components/iconset/flat/JSONFileIcon.js","webpack:///./src/app/experimental/widgets/ZoomWidget.js","webpack:///./src/app/experimental/widgets/FocusCenterWidget.js","webpack:///./src/app/experimental/widgets/NavbarWidget.js","webpack:///./src/app/util/file/import/Importer.js","webpack:///./src/app/session/SessionImporter.js","webpack:///./src/app/util/Eventable.js","webpack:///./src/app/graph/elements/QuadraticEdge.js","webpack:///./src/app/modules/fsa/graph/FSAGraph.js","webpack:///./src/app/graph/NodeGraph.js","webpack:///./src/app/util/Downloader.js","webpack:///./src/app/components/iconset/PageContentIcon.js","webpack:///./src/app/components/iconset/CrossIcon.js","webpack:///./src/app/components/iconset/AddIcon.js","webpack:///./src/app/components/iconset/SubtractIcon.js","webpack:///./src/app/components/iconset/CheckCircleIcon.js","webpack:///./src/app/components/iconset/CrossCircleIcon.js","webpack:///./src/app/components/iconset/PendingIcon.js","webpack:///./src/app/components/iconset/MoveIcon.js","webpack:///./src/app/components/iconset/TrashCanDetailedIcon.js","webpack:///./src/app/components/iconset/ZoomInIcon.js","webpack:///./src/app/components/iconset/ZoomOutIcon.js","webpack:///./src/app/components/iconset/PinpointIcon.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/InputHandler.js","webpack:///./src/app/experimental/UserUtil.js","webpack:///./src/app/modules/fsa2/machine/util/ConvertFSA.js","webpack:///./src/app/modules/fsa2/machine/util/SolveFSA.js","webpack:///./src/app/modules/fsa2/machine/util/IntersectFSA.js","webpack:///./src/app/modules/fsa2/machine/util/InvertDFA.js","webpack:///./src/app/modules/fsa2/machine/util/EqualFSA.js","webpack:///./src/app/modules/fsa2/machine/FSAUtils.js","webpack:///./src/app/util/input/InputPointer.js","webpack:///./src/app/util/input/ViewportAdapter.js","webpack:///./src/app/util/input/InputAdapter.js","webpack:///./src/app/util/input/components/ViewportComponent.js","webpack:///./src/app/deprecated/config.js","webpack:///./src/app/modules/fsa/graph/FSANode.js","webpack:///./src/app/modules/fsa/graph/FSAGraphParser.js","webpack:///./src/app/modules/fsa2/graph/FSAGraphUtil.js","webpack:///./src/app/modules/abstract/AbstractMachineController.js","webpack:///./src/app/graph/AbstractGraphLabeler.js","webpack:///./src/app/renderer/EdgeRenderer.js","webpack:///./src/app/deprecated/system/patterninput/PatternInputButton.js","webpack:///./src/app/experimental/panels/PanelDivider.js","webpack:///./src/app/components/iconset/TriangleIcon.js","webpack:///./src/app/experimental/panels/PanelCheckbox.js","webpack:///./src/app/experimental/widgets/ModeSelectTray.js","webpack:///./src/app/experimental/widgets/TrashCanWidget.js","webpack:///./src/app/modules/nodalgraph/SafeGraphEventHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphNodeInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphInitialInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphEdgeInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphEndpointInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphNodeCreateInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/inputhandler/GraphNodeAcceptInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/pickhandler/GraphNodePickHandler.js","webpack:///./src/app/modules/nodalgraph/controller/pickhandler/GraphEdgePickHandler.js","webpack:///./src/app/modules/nodalgraph/controller/pickhandler/GraphEndpointPickHandler.js","webpack:///./src/app/modules/nodalgraph/controller/pickhandler/GraphInitialPickHandler.js","webpack:///./src/app/deprecated/system/inputadapter/AbstractInputHandler.js","webpack:///./src/app/modules/abstract/AbstractInputController.js","webpack:///./src/app/graph/GraphNodeSelectionBox.js","webpack:///./src/app/modules/nodalgraph/controller/GraphPicker.js","webpack:///./src/app/modules/nodalgraph/controller/InputController.js","webpack:///./src/app/modules/abstract/AbstractGraphController.js","webpack:///./src/app/experimental/GraphChangeHandler.js","webpack:///./src/app/modules/nodalgraph/controller/GraphController.js","webpack:///./src/app/modules/nodalgraph/controller/SelectionBoxInputHandler.js","webpack:///./src/app/modules/nodalgraph/controller/ViewportInputHandler.js","webpack:///./src/app/deprecated/system/patterninput/PatternInput.js","webpack:///./src/app/session/manager/labeleditor/LabelEditorView.js","webpack:///./src/app/session/manager/labeleditor/LabelEditorManager.js","webpack:///./src/app/modules/nodalgraph/manager/NodalGraphInputManager.js","webpack:///./src/app/deprecated/icons/flat/PNGIcon.js","webpack:///./src/app/deprecated/icons/flat/JPGIcon.js","webpack:///./src/app/deprecated/icons/flat/SVGIcon.js","webpack:///./src/app/modules/nodalgraph/filehandlers/NodalGraphImageExporter.js","webpack:///./src/app/modules/nodalgraph/controller/renderer/BoxRenderer.js","webpack:///./src/app/modules/nodalgraph/controller/renderer/HighlightRenderer.js","webpack:///./src/app/modules/nodalgraph/controller/renderer/SelectionBoxRenderer.js","webpack:///./src/app/modules/nodalgraph/controller/renderer/GraphInputRenderer.js","webpack:///./src/app/components/iconset/DownArrowIcon.js","webpack:///./src/app/experimental/widgets/TapeWidget.js","webpack:///./src/app/experimental/MachineChangeHandler.js","webpack:///./src/app/modules/abstract/AbstractMachineBuilder.js","webpack:///./src/app/modules/fsa2/machine/FSABuilder.js","webpack:///./src/app/modules/fsa2/controller/MachineController.js","webpack:///./src/app/modules/fsa/machine/Symbols.js","webpack:///./src/app/modules/fsa/graph/FSAGraphLabeler.js","webpack:///./src/app/modules/fsa2/renderer/FSANodeRenderer.js","webpack:///./src/app/modules/fsa2/renderer/FSAEdgeRenderer.js","webpack:///./src/app/modules/fsa2/renderer/InitialMarkerRenderer.js","webpack:///./src/app/modules/fsa2/renderer/FSAGraphRenderer.js","webpack:///./src/app/modules/fsa2/renderer/FSALabelEditorRenderer.js","webpack:///./src/app/modules/fsa2/components/panels/overview/states/StateListElement.js","webpack:///./src/app/modules/fsa2/components/panels/overview/states/StateListView.js","webpack:///./src/app/modules/fsa2/components/panels/overview/alphabet/AlphabetListElement.js","webpack:///./src/app/modules/fsa2/components/panels/overview/alphabet/AlphabetListView.js","webpack:///./src/app/modules/fsa2/components/panels/overview/transitions/TransitionChartView.js","webpack:///./src/app/modules/fsa2/components/panels/overview/transitions/TransitionTableView.js","webpack:///./src/app/modules/fsa2/components/panels/overview/AutoStateLabelView.js","webpack:///./src/app/modules/fsa2/components/panels/overview/OverviewPanel.js","webpack:///./src/app/modules/fsa2/components/panels/testing/TestItem.js","webpack:///./src/app/modules/fsa2/components/panels/testing/TestListView.js","webpack:///./src/app/modules/fsa2/components/notifications/NFAToDFAConversionNotificationLayout.js","webpack:///./src/app/modules/fsa2/components/notifications/StateNotificationLayout.js","webpack:///./src/app/modules/fsa2/components/notifications/TransitionNotificationLayout.js","webpack:///./src/app/modules/fsa2/components/notifications/StateMissingTransitionNotificationLayout.js","webpack:///./src/app/modules/fsa2/components/notifications/StateUnreachableNotificationLayout.js","webpack:///./src/app/modules/fsa2/components/notifications/FSANotifications.js","webpack:///./src/app/modules/fsa2/components/panels/testing/TestingPanel.js","webpack:///./src/app/modules/fsa2/components/panels/analysis/AnalysisPanel.js","webpack:///./src/app/modules/fsa2/tester/TapeContext.js","webpack:///./src/app/modules/fsa2/tester/StringTester.js","webpack:///./src/app/modules/fsa2/FSAErrorChecker.js","webpack:///./src/app/modules/fsa2/components/views/EditPane.js","webpack:///./src/app/modules/fsa2/components/views/TapePane.js","webpack:///./src/app/modules/fsa2/steptracer/StepTracer.js","webpack:///./src/app/modules/fsa2/steptracer/StepTracerView.js","webpack:///./src/app/session/manager/broadcast/BroadcastHandler.js","webpack:///./src/app/modules/fsa2/FSABroadcastHandler.js","webpack:///./src/app/modules/fsa2/filehandlers/FSAImporter.js","webpack:///./src/app/modules/fsa2/filehandlers/FSAJFFImporter.js","webpack:///./src/app/modules/fsa2/filehandlers/FSAExporter.js","webpack:///./src/app/components/iconset/flat/XMLFileIcon.js","webpack:///./src/app/modules/fsa2/filehandlers/FSAJFFExporter.js","webpack:///./src/app/modules/fsa2/FSAModule.js"],"names":["GraphNode","id","_this","x","arguments","length","undefined","y","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","_label","GraphElement","dst","label","usePosition","_get","prototype","Math","floor","GraphEdge","from","to","_from","_to","node","Error","HALFPI","PI","result","isPlaceholder","dy","dx","atan2","halfPlaceholderLength","getPlaceholderLength","placeholderLength","getNodeSize","src","getHashString","elementID","_id","AbstractInputHandler","pointer","zoomValue","prevValue","EMPTY_SYMBOL","State","_src","getGraphElementID","guid","_createClass","key","value","Transition","symbols","_symbols","slice","symbol","push","includes","join","FSA","deterministic","_states","Map","_alphabet","_transitions","_finalStates","Set","_customSymbols","_startState","_deterministic","_errors","fsa","clear","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","next","done","_step$value","_slicedToArray","copy","set","isStartState","isFinalState","add","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_step2$value","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_step3$value","get","getSourceState","getStateID","getDestinationState","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","error","foundSymbols","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","keys","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","values","state","transitions","getOutgoingTransitions","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","addState","stateID","has","size","delete","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","getStateLabel","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","hasState","transitionKey","transition","hasSymbol","addSymbol","_incrSymbolCount","getSymbols","index","indexOf","_decrSymbolCount","splice","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","symbolCount","isCustomSymbol","newSymbol","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","count","cache","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_step14$value","_i2","custom","forceNondeterminism","_typeof","fromTransitionKey","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","startsWith","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","toState","doClosureTransition","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","s","i","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","string","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21","_iteratorNormalCompletion22","_didIteratorError22","_iteratorError22","_step22","_iterator22","_iteratorNormalCompletion23","_didIteratorError23","_iteratorError23","_step23","_iterator23","stringHash","SYMBOL_SEPARATOR","EMPTY_CHAR","FSAEdge","QuadraticEdge","getEdgeLabel","split","GraphElementInputHandler","targetType","_targetType","InputHandler","inputController","target","PickHandler","graph","Icon","props","React","Component","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","className","style","xmlns","width","height","viewBox","d","GraphLayout","reachableNode","reachable","startNode","getStartNode","getEdges","edge","getReachableState","unreachableNode","getNodes","filter","numOfReachable","numOfUnreachable","numOfNode","maxNum","max","radius","currentStep","degree","sin","cos","degree_re","degree_un","InputContext","_inputHandlers","inputHandler","eventName","_len","eventArgs","Array","_key","handlerEventCallback","apply","AbstractEventHandler","undoManager","getUnreachableNodes","getNodeCount","edges","nodes","shift","nextNodes","pop","getEdgeFrom","getEdgeTo","nextNode","__webpack_require__","__webpack_exports__","fill","points","cx","cy","r","ZoomWidget","onZoomIn","bind","_assertThisInitialized","onZoomOut","e","viewport","viewScale","getScale","addScale","toFixed","react_default","Style","zoom_container","IconButton","zoom_button","title","onClick","ZoomInIcon","ZoomOutIcon","zoom_label","FocusCenterWidget","FocusCenterWidget_classCallCheck","FocusCenterWidget_getPrototypeOf","FocusCenterWidget_assertThisInitialized","setOffset","center_focus_button","disabled","abs","getOffsetX","getOffsetY","PinpointIcon","NavbarWidget","NavbarWidget_classCallCheck","NavbarWidget_possibleConstructorReturn","NavbarWidget_getPrototypeOf","viewportAdapter","navbar_container","experimental_widgets_ZoomWidget","navbar_widget_container","experimental_widgets_FocusCenterWidget","navbar_widget","Importer","fileName","fileType","fileData","Promise","resolve","SessionImporter","app","SessionImporter_classCallCheck","_app","session","getApp","getUndoManager","captureEvent","sessionData","projectName","getSession","currentModule","getCurrentModule","onParseSession","onPreImportSession","onImportSession","substring","setProjectName","onPostImportSession","Eventable","__eventListeners","mixin","targetClass","targetPrototype","Object","assign","registerEvent","unregisterEvent","addEventListener","listener","removeEventListener","listeners","flag","clearEventListeners","countEventListeners","getEventListeners","on","once","f","args","emit","_len2","_key2","onEventProcessed","concat","_quad","radians","coords","changeDestinationNode","fromx","fromy","midpointx","midpointy","angleOffset","sqrt","outrad","inrad","maxdr","getDirectionalVector","isQuadratic","getQuadraticAsCoords","px","py","nodeSize","getMidPoint","qcoords","qx","qy","isSelfLoop","setQuadraticRadians","setQuadraticLength","getSelfLoopHeight","prevDest","angle","formatAsPlaceholder","formatAsSelfLoop","FSAGraph","FSANode","_nodes","NodeGraph","prev","edgeSource","edgeDestination","edgeLabel","getEdgeSymbolsFromLabel","otherEdge","otherSymbols","setEdgeLabel","getQuadratic","parallelEdgeHeight","maxNodeSize","x1","y1","x2","y2","dist12sq","vertical","m","b","x0","y0","nodeClass","edgeClass","_nodeClass","_edgeClass","_nodeMapping","_edgeMapping","clearEdges","clearNodes","minX","minY","maxX","maxY","minNX","Number","MAX_VALUE","minNY","maxNX","MIN_VALUE","maxNY","min","minEX","minEY","maxEX","maxEY","startPoint","endPoint","centerPoint","getStartPoint","getEndPoint","getCenterPoint","sx","sy","ex","ey","addNode","setGraphElementID","nullSourceEdges","setEdgeTo","_i","deleteEdge","getNodeLabel","addEdge","downloadText","filename","textData","downloadURL","encodeURIComponent","url","element","document","headerIndex","setAttribute","display","body","appendChild","click","removeChild","graphController","userClearGraph","graphOnly","callback","window","confirm","I18N","toString","getGraphController","getGraph","convertToDFA","isDeterministic","setDeterministic","startState","getStartState","dfaData","nfaSource","dfaStateMap","dfaFinalStates","dfaTransitionMap","dfaStartState","dfaTrapState","startStatesByClosure","getDFAStateFromNFAStates","statePowerSet","states","len","getPowerSetOfStates","getStates","nfaStates","expandNFAStatesToDFA","dfaState","getAlphabet","dfaTransitionKey","getDFATransitionKeyFromDFAStateAndSymbol","setStartState","finalState","setFinalState","addTransition","fromDFAState","nfaTerminals","fromNFAState","doTerminalTransition","nfaStateKey","nfaState","getNFAStateKeyFromNFAStates","final","dfaStateLabel","MAX_COMPUTATION_STEPS","solveFSA","input","doTransition","cachedStates","cachedSymbols","relatedState","counter","solveFSAByStep","nfa","nextStates","nextIndex","cstate","nextState","intersectDFA","dfa1","dfa2","fsa1","fsa2","alphabet","checkSameAlphabet","start1","start2","pairIDs","finalPairIDs","startPair","startPairID","remainingPairIDs","parentPairID","parentPair","parent1","parent2","state1","state2","newPairID","pairToState","statePairID","statePair","createState","fromPairID","toPairID","fromState","invertDFA","toBeRejected","getFinalStates","isEquivalentFSA","dfa3","intersectionOfComplement","isLanguageNotEmpty","dfa4","isEquivalentDFA","m1","m2","alphabet1","alphabet2","isUsedSymbol","haveTheSameUsedAlphabet","dfa","explored","frontier","path","current","pathUpTill","dest","InputPointer","inputAdapter","_inputAdapter","_element","_viewportAdapter","_active","_x","_y","_inputpos","pos","ViewportAdapter","ViewportAdapter_classCallCheck","_offsetX","_offsetY","_nextOffsetX","_nextOffsetY","_offsetDamping","_scaleFactor","_minScale","_maxScale","scale","damping","clientX","clientY","ctm","getScreenCTM","dscale","LONG_TAP_TICKS","DOUBLE_TAP_TICKS","SCROLL_SENSITIVITY","CURSOR_RADIUS_SQU","CURSOR_RADIUS","DRAGGING_BUFFER_SQU","DRAGGING_BUFFER","InputAdapter","InputAdapter_classCallCheck","_contexts","_activeDragHandler","_cursor","_mousemove","_mouseup","_touchmove","_touchend","_timer","_pointer","_dragging","_altinput","_holdInputDelay","_dblInputDelay","_scrollSensitivity","_minTapRadius","_draggingRadiusSqu","_prevEmptyInput","_prevEmptyTime","_prevEmptyX","_prevEmptyY","onContextMenu","onMouseDown","onMouseMove","onTouchStart","onWheel","onMouseDownThenMove","onMouseDownThenUp","onTouchStartThenMove","onTouchStartThenEnd","onDelayedInputDown","context","unshift","SVGElement","setElement","onTouchMove","update","_get2","handleEvent","stopPropagation","preventDefault","cursor","activeElement","blur","focus","button","ctrlKey","onInputDown","mouse","transformScreenToView","setPosition","cancelInputEvent","onInputMove","onInputUp","changedTouches","touch","deltaY","setScale","beginInput","setTimeout","onDragMove","getDistanceSquToInitial","inputEventPosition","getInputEventPosition","timer","clearTimeout","onDragStop","dist","dt","Date","now","endInput","isActive","SMOOTH_OFFSET_DAMPING","MIN_SCALE","MAX_SCALE","ViewportComponent","ViewportComponent_classCallCheck","ViewportComponent_possibleConstructorReturn","ViewportComponent_getPrototypeOf","_ref","createRef","getViewportAdapter","setMinScale","setMaxScale","setOffsetDamping","addInputHandler","initialize","destroy","baseViewSize","viewSize","halfViewSize","getSVGViewBoxString","transform","getSVGTransformString","ref","viewport_component","children","cfg","setValue","hasOwnProperty","_userDefined","_dirty","MACHINE_ERRORS_MESSAGE_TAG","MACHINE_CONVERSION_MESSAGE_TAG","ERROR_CHECK_INTERVAL","GRAPH_IMMEDIATE_INTERVAL","INIT_WAITTIME","STR_TRANSITION_DEFAULT_LABEL","STR_STATE_LABEL","PARALLEL_EDGE_HEIGHT","SELF_LOOP_HEIGHT","SUBMIT_KEY","CLEAR_KEY","TAB_KEY","UP_KEY","DOWN_KEY","DELETE_KEY","DELETE_FORWARD_KEY","DEFAULT_GRAPH_SIZE","NODE_RADIUS","NODE_RADIUS_SQU","NODE_DIAMETER","NODE_RADIUS_INNER","INITIAL_MARKER_OFFSET_X","EDGE_RADIUS","EDGE_RADIUS_SQU","ARROW_WIDTH","PLACEHOLDER_LENGTH","ENDPOINT_RADIUS","ENDPOINT_RADIUS_SQU","HOVER_RADIUS_OFFSET","SPAWN_RADIUS","DEFAULT_SHOULD_DESTROY_POINTLESS_EDGE","PADDING_RADIUS_SQU","_accept","_custom","Config","JSON","XML","_FSAGraph_js__WEBPACK_IMPORTED_MODULE_0__","_FSAEdge_js__WEBPACK_IMPORTED_MODULE_1__","parse","data","nodeDatas","nodeCount","edgeDatas","edgeCount","initialIndex","nodeIndices","nodeData","createNode","setNodeLabel","setNodeAccept","setNodeCustom","initialNode","setStartNode","edgeData","sourceNode","destinationNode","createEdge","quadData","objectify","graphNodes","graphEdges","graphInitial","accept","getNodeAccept","getNodeCustom","quad","sourceIndex","destinationIndex","initial","_version","nodeElements","getElementsByTagName","edgeElements","nodeElementIDs","nodeElement","nodeElementID","getAttribute","xElements","xElement","hasChildNodes","xValue","childNodes","parseFloat","nodeValue","yElements","yElement","yValue","boundingRect","getBoundingRect","transitionMapping","edgeElement","sourceID","fromElements","fromElement","fromValue","destinationID","toElements","toElement","toValue","readElements","readElement","readValue","transitionID","doc","DOMParser","parseFromString","structure","type","innerHTML","automaton","read","_UnreachableNodes_js__WEBPACK_IMPORTED_MODULE_0__","AbstractMachineController","module","machineBuilder","_module","_machineBuilder","AbstractGraphLabeler","getDefaultEdgeLabel","getDefaultNodeLabel","getEdgeLabelFormatter","getNodeLabelFormatter","SIXTH_PI","DIRECTED_FORWARD","DefaultEndpointRenderer","Fragment","position","stroke","color","DefaultLabelRenderer","direction","labels","map","str","reverse","alignmentBaseline","pointerEvents","userSelect","textAnchor","EdgeRenderer","fromAngle","toAngle","directed","ForwardEndpointRenderer","forwardEndpointRenderer","endpointRenderer","BackwardEndpointRenderer","backwardEndpointRenderer","EdgeLabelRenderer","labelRenderer","fromPoint","toPoint","center","reverseLabel","quadLine","dftx","dfty","dfcx","dfcy","ftrad","fcrad","PatternInputButton","_timeout","onAnyMouseUp","parent","ignoreBlur","_this2","inputElement","onBlur","_this3","PanelDivider","panel_divider","PanelCheckbox","checked","onChange","setState","checkbox_container","name","htmlFor","ModeSelectTray","newValue","mode","tray_container","experimental_components_IconButton_js__WEBPACK_IMPORTED_MODULE_2__","tray_button","components_iconset_EditPencilIcon_js__WEBPACK_IMPORTED_MODULE_3__","components_iconset_MoveIcon_js__WEBPACK_IMPORTED_MODULE_4__","TrashCanWidget","forceActive","_doubleTapTimeout","onMouseEnter","onMouseLeave","onAnyMouseDownNotConsumed","setTrashMode","documentElement","getInputAdapter","active","isTrashMode","hide","isEmpty","isUsingTouch","isDragging","trash_container","components_iconset_TrashCanDetailedIcon_js__WEBPACK_IMPORTED_MODULE_2__","SafeGraphEventHandler","graphParser","_graphController","_graphParser","_graphData","prevEvent","getPreviousEvent","applyRedo","GraphNodeInputHandler","selectionBox","getSelectionBox","prevX","prevY","hasSelection","deleteSelectedNodes","deleteTargetNode","isMoveMode","openLabelEditor","picker","getPicker","getGraphLabeler","setInitialTarget","isNewEdge","edgeQuad","prevQuad","prevEdgeTo","_snapToGrid","snapSize","_snapSize","round","moveMultipleNodesTo","getSelection","moveNodeTo","onGraphIntentMoveAllNodes","onGraphIntentMoveNode","GraphInitialInputHandler","ghostInitialMarker","getPickHandler","getTargetAt","prevInitial","applyAutoRename","onGraphIntentChangeInitial","GraphEdgeInputHandler","deleteTargetEdge","targetQuad","moveEdgeTo","onGraphIntentMoveEdge","GraphEndpointInputHandler","moveEndpointTo","formatEdge","onGraphIntentFinishEdge","onGraphIntentCreateEdge","onGraphIntentChangeDestination","shouldDestroyPointlessEdges","GraphNodeCreateInputHandler","GraphNodeAcceptInputHandler","toggleNode","GraphNodePickHandler","GraphEdgePickHandler","GraphEndpointPickHandler","end","GraphInitialPickHandler","offset","AbstractInputController","AbstractInputController_classCallCheck","onInputEvent","GraphNodeSelectionBox","GraphNodeSelectionBox_classCallCheck","_boundingBox","fromX","fromY","toX","toY","visible","targets","box","mx","my","lx","ly","clearSelection","getNodesWithin","GraphPicker","GraphPicker_classCallCheck","initialTarget","initialTargetType","_prevX","_prevY","_pickHandlers","pickHandler","getTargetType","updateTarget","hasTarget","InputController","InputController_classCallCheck","InputController_possibleConstructorReturn","InputController_getPrototypeOf","_picker","_selectionBox","_swapMouseScheme","_trashMode","_disabled","getPointerX","getPointerY","updateHoverTarget","updateInitialTarget","isTargetInSelection","handler","isTargetable","onAction","onDblAction","onDragStart","clearTarget","enabled","_drawer","setViewportColor","shouldInputFirst","isAltInput","isPointerActive","AbstractGraphController","labeler","parser","AbstractGraphController_classCallCheck","_graph","_labeler","_parser","parsers","GraphChangeHandler","refreshTicks","GraphChangeHandler_classCallCheck","_cachedGraphHash","_refreshTicks","_elapsedTicks","Infinity","_listeners","graphHash","getHashCode","DEFAULT_AUTO_RENAME","GRAPH_REFRESH_RATE","GraphController","GraphController_classCallCheck","GraphController_getPrototypeOf","_graphChangeHandler","setGraphController","GraphController_assertThisInitialized","shouldAutoLabel","GraphController_get","getInputController","applyLayout","getModule","graphLabeler","nextQuad","prevDestination","nextInitial","nextX","nextY","targetNodes","enable","random","newNodeLabel","selectedNode","selection","deleteNode","onGraphIntentDeleteNodes","other","diameter","nextDX","nextDY","changeInputEventPosition","setQuadraticByCoords","defaultValue","labelEditor","getInputManager","getLabelEditorManager","getLabelEditorComponent","prevLabel","openEditor","ax","ay","SelectionBoxInputHandler","SelectionBoxInputHandler_classCallCheck","SelectionBoxInputHandler_possibleConstructorReturn","SelectionBoxInputHandler_getPrototypeOf","_inputController","beginSelection","isSelecting","updateSelection","endSelection","ViewportInputHandler","ViewportInputHandler_classCallCheck","ViewportInputHandler_possibleConstructorReturn","ViewportInputHandler_getPrototypeOf","addOffset","PatternInput","PatternInput_classCallCheck","PatternInput_getPrototypeOf","placeholder","maxLength","multiLine","formatter","_submitTimeout","_submit","submitOnBlur","_skipBlur","_skipSelect","PatternInput_assertThisInitialized","onFocus","onKeyDown","select","submit","onSubmit","shiftKey","caretPosition","selectionStart","selectionEnd","ignore","separator","format","_this4","maxlength","multiline","rows","spellCheck","LabelEditorView","LabelEditorView_classCallCheck","LabelEditorView_getPrototypeOf","inputComponent","open","_target","_targetCallback","onInputSubmit","LabelEditorView_assertThisInitialized","onInputBlur","graphElement","onCancel","_targetOnSubmit","_targetOnCancel","getLabelFormatter","setFormatter","resetValue","closeEditor","isEditorOpen","targetStyle","getElement","parentClientRect","getBoundingClientRect","screenPos","svg","transformViewToScreen","offsetX","offsetWidth","left","offsetY","offsetHeight","top","editor_container","patterninput_PatternInput","saveOnExit","LabelEditorManager","LabelEditorManager_classCallCheck","_labelEditorComponent","_labelEditorRenderer","renderer","LabelEditorRenderer","getRenderManager","addRenderer","RENDER_LAYER_WORKSPACE_OVERLAY","manager_labeleditor_LabelEditorView","NodalGraphInputManager","nodalGraph","labelEditorRenderer","NodalGraphInputManager_classCallCheck","_labelEditorManager","setLabelEditorRenderer","setLabeler","_selectionBoxInputHandler","_viewportInputHandler","_graphLabeler","onSessionStart","getNotificationManager","pushNotification","WARNING_LAYOUT_ID","removeInputHandler","onSessionStop","getGraphParser","PNGIcon","JPGIcon","JPGIcon_classCallCheck","JPGIcon_possibleConstructorReturn","JPGIcon_getPrototypeOf","SVGIcon","SVGIcon_classCallCheck","SVGIcon_possibleConstructorReturn","SVGIcon_getPrototypeOf","IMAGE_TYPE_PNG","NodalGraphImageExporter","imageType","NodalGraphImageExporter_classCallCheck","NodalGraphImageExporter_possibleConstructorReturn","NodalGraphImageExporter_getPrototypeOf","_imageType","SessionExporter","exportType","getProjectName","svgElement","getWorkspaceComponent","getSVGElement","workspaceDim","baseVal","processSVGForExport","image-type","bounds","w","EXPORT_PADDING_X","h","EXPORT_PADDING_Y","clone","cloneNode","uiElements","getElementsByClassName","remove","IMAGE_EXPORTERS","registerImageExporters","exportManager","exporter","registerExporter","getImageType","BoxRenderer","HIGHLIGHT_LINE_ARRAY","HighlightRenderer","HighlightRenderer_classCallCheck","HighlightRenderer_possibleConstructorReturn","HighlightRenderer_getPrototypeOf","point","strokeDashoffset","strokeDasharray","strokeWidth","SelectionBoxRenderer","SelectionBoxRenderer_classCallCheck","SelectionBoxRenderer_possibleConstructorReturn","SelectionBoxRenderer_getPrototypeOf","selectionBoundingBox","renderer_HighlightRenderer","renderer_BoxRenderer","GraphInputRenderer","GraphInputRenderer_classCallCheck","GraphInputRenderer_possibleConstructorReturn","GraphInputRenderer_getPrototypeOf","renderer_SelectionBoxRenderer","_tester","TapeWidget","TapeWidget_classCallCheck","TapeWidget_getPrototypeOf","onTapeStepBackward","TapeWidget_assertThisInitialized","onTapeStepForward","onTapeFinish","onTapeReset","onTapeSkipForward","onTapeSkipBackward","onTapeStop","stepBackward","stepForward","reset","finish","stop","tapeContext","tapeIndex","getCurrentTapeIndex","tape_container","tape_control_tray","isTapeLeftInfinite","DownArrowIcon","opacity","getTapeInput","activeRead","sourceStates","getTapeSourceStatesByIndex","setCurrentTapeIndex","sourceState","isTapeRightInfinite","MachineChangeHandler","AbstractMachineBuilder","AbstractMachineBuilder_classCallCheck","_machineChangeHandler","_warnings","onGraphChange","getGraphChangeHandler","addListener","removeListener","attemptBuildMachine","getMachine","machine","errors","warnings","FSABuilder","_machine","getTransitions","fromNodes","getNodesByLabel","toNodes","startNodes","nodeLabels","nodeOutgoings","edgeSymbols","edgePlaceholders","edgeEmpties","graphStart","nodeLabel","srcNode","dstNode","srcState","getStateByID","dstState","edgeLabelSymbols","transitionSymbol","outSymbols","outEdges","_step5$value","sharedStates","getSource","unreachables","missingSymbols","_step6$value","edgeMapping","MachineController","MachineController_classCallCheck","MachineController_possibleConstructorReturn","MachineController_getPrototypeOf","machineType","getMachineType","setMachineType","attemptBuildGraph","currentMachineType","getMachineBuilder","setGraphToMachine","changeMachineTo","getStateCount","addCustomSymbol","removeCustomSymbol","prevSymbol","nextSymbol","replace","renameCustomSymbol","getCustomSymbols","setCustomSymbol","clearCustomSymbols","EMPTY","DEFAULT_NODE_LABEL_PREFIX","edgeLabelFormatter","allowNull","symbolLength","trim","subsymbol","FSAGraphLabeler","FSAGraphLabeler_classCallCheck","FSAGraphLabeler_possibleConstructorReturn","FSAGraphLabeler_getPrototypeOf","_prefix","prefix","shouldAutoRenameNodes","otherNodes","nodeIndex","getDefaultNodeLabelPrefix","FSANodeRenderer","FSANodeRenderer_classCallCheck","FSANodeRenderer_possibleConstructorReturn","FSANodeRenderer_getPrototypeOf","fontSize","FSAEdgeRenderer","FSAEdgeRenderer_classCallCheck","FSAEdgeRenderer_possibleConstructorReturn","FSAEdgeRenderer_getPrototypeOf","start","edgeDir","getEdgeDirection","InitialMarkerRenderer","InitialMarkerRenderer_classCallCheck","InitialMarkerRenderer_possibleConstructorReturn","InitialMarkerRenderer_getPrototypeOf","FSAGraphRenderer","FSAGraphRenderer_classCallCheck","FSAGraphRenderer_possibleConstructorReturn","FSAGraphRenderer_getPrototypeOf","renderer_FSANodeRenderer","renderer_FSAEdgeRenderer","getInputHandlers","renderer_InitialMarkerRenderer","RECOMMENDED_SYMBOLS","DEFAULT_SYMBOLS","FSALabelEditorRenderer","FSALabelEditorRenderer_classCallCheck","FSALabelEditorRenderer_possibleConstructorReturn","FSALabelEditorRenderer_getPrototypeOf","appendValue","getMachineController","showEdgeTray","getTarget","showNodeTray","showRecommended","tray_used","renderSymbol","tray_default","StateListElement","StateListElement_classCallCheck","StateListElement_getPrototypeOf","onValueChange","StateListElement_assertThisInitialized","onKeyUp","nextLabel","keyCode","inputValue","nodeCustom","nodeAccept","displayValue","element_container","StateListView","StateListView_classCallCheck","StateListView_getPrototypeOf","onElementAdd","StateListView_assertThisInitialized","onElementFocus","onElementBlur","onElementChange","focusOnNode","renameNode","list_container","element_list","TriangleIcon","first_marker","overview_states_StateListElement","add_button","BoxAddIcon","AlphabetListElement","AlphabetListElement_classCallCheck","AlphabetListElement_getPrototypeOf","_inputElement","AlphabetListElement_assertThisInitialized","inputSymbol","displaySymbol","symbolUsed","used","AlphabetListView","AlphabetListView_classCallCheck","AlphabetListView_getPrototypeOf","newSymbolComponent","useNewSymbol","AlphabetListView_assertThisInitialized","machineController","isSymbol","renameSymbol","createSymbol","deleteSymbol","overview_alphabet_AlphabetListElement","renderAlphabetList","TransitionChartView","TransitionChartView_classCallCheck","TransitionChartView_possibleConstructorReturn","TransitionChartView_getPrototypeOf","_cachedMachineHash","_cachedMachineComponents","destinations","transitionString","chart_key","chart_value","machineHash","entry","renderTransitionEntry","chart_container","fontFamily","renderTransitionTable","SYMBOL_AXIS","TransitionTableView","TransitionTableView_classCallCheck","TransitionTableView_getPrototypeOf","rowAxis","onRowAxisSwitch","TransitionTableView_assertThisInitialized","table_entry","rowComponents","renderTableEntryForSymbolAxis","getTransitionSymbols","scope","table_axis_header","table_container","renderTableAxis","renderTableEntries","AutoStateLabelView","AutoStateLabelView_classCallCheck","AutoStateLabelView_getPrototypeOf","onAutoStatePrefixSubmit","AutoStateLabelView_assertThisInitialized","onAutoStatePrefixFormat","setDefaultNodeLabelPrefix","select_container","select_label","FormattedInput","prefix_editor","captureOnExit","postfix_selector","onMachineTypeChange","OverviewPanel","OverviewPanel_classCallCheck","OverviewPanel_getPrototypeOf","OverviewPanel_assertThisInitialized","onAutoLayoutApply","onAutoLayoutChange","onAutoLabelChange","onSnapToGridChange","applyAutoLayout","setAutoRenameNodes","drawer","autoRename","drawerFull","isDrawerFullscreen","PanelContainer","TITLE","machine_type_select","PanelSection","full","overview_states_StateListView","overview_alphabet_AlphabetListView","getEdgeCount","overview_transitions_TransitionChartView","overview_transitions_TransitionTableView","panels_overview_AutoStateLabelView","autolayout_button","PanelSwitch","defineProperty","DEFAULT_MODE","TestItem","TestItem_classCallCheck","TestItem_getPrototypeOf","status","TestItem_assertThisInitialized","nextValue","onDelete","onTest","test_item_container","test_button","CheckCircleIcon","CrossCircleIcon","PendingIcon","RunningManIcon","test_input","subtitle","delete_button","SubtractIcon","ACCEPT_FILE_TYPES","TEST_FILENAME","TestListView","TestListView_classCallCheck","TestListView_getPrototypeOf","_testList","_testName","onTestNew","TestListView_assertThisInitialized","onTestUpload","onTestDownload","onTestClose","onTestAdd","onTestDelete","onTestTest","onTestRunAll","resetStatus","fileBlob","reader","FileReader","onload","event","tests","test","abort","readAsText","testStrings","getValue","tester","isTesting","stopTest","nextTest","item","forceImmediate","immediate","itemValue","startTest","then","promise","runTest","empty","test_container","test_control_tray","test_control_button","PageContentIcon","IconUploadButton","onUpload","UploadIcon","DownloadIcon","CrossIcon","test_list_container","test_list_add","AddIcon","test_list_count","test_list_scroll_container","test_list","testCallback","panels_testing_TestItem","test_list_runall","NFAToDFAConversionNotificationLayout","NFAToDFAConversionNotificationLayout_classCallCheck","NFAToDFAConversionNotificationLayout_getPrototypeOf","NFAToDFAConversionNotificationLayout_assertThisInitialized","notification","convertMachineTo","close","stateCount","countStates","DefaultNotificationLayout","styleType","STYLE_TYPE_WARNING","pow","StateNotificationLayout","StateNotificationLayout_classCallCheck","StateNotificationLayout_getPrototypeOf","_targetIndex","_targetLabel","message","StateNotificationLayout_assertThisInitialized","targetLength","deleteTargetNodes","STYLE_TYPE_ERROR","text","ARROW","TransitionNotificationLayout","TransitionNotificationLayout_classCallCheck","TransitionNotificationLayout_getPrototypeOf","targetIndex","targetLabel","TransitionNotificationLayout_assertThisInitialized","focusOnEdge","deleteTargetEdges","StateMissingTransitionNotificationLayout","StateMissingTransitionNotificationLayout_classCallCheck","StateMissingTransitionNotificationLayout_getPrototypeOf","StateMissingTransitionNotificationLayout_assertThisInitialized","StateUnreachableNotificationLayout","StateUnreachableNotificationLayout_classCallCheck","StateUnreachableNotificationLayout_getPrototypeOf","StateUnreachableNotificationLayout_assertThisInitialized","MACHINE_CONVERSION_LAYOUT_ID","STATE_LAYOUT_ID","TRANSITION_LAYOUT_ID","STATE_MISSING_LAYOUT_ID","STATE_UNREACHABLE_LAYOUT_ID","TestingPanel","TestingPanel_classCallCheck","TestingPanel_getPrototypeOf","stepMode","onStepTestChange","TestingPanel_assertThisInitialized","onAutoErrorCheckChange","_viewport","setCurrentView","setDrawerSoloClass","closeDrawer","openDrawer","errorChecker","getErrorChecker","errorCheck","isErrorChecking","setErrorChecking","clearNotifications","getStringTester","panel_container","panels_testing_TestListView","AnalysisPanel","AnalysisPanel_classCallCheck","AnalysisPanel_getPrototypeOf","optimizeUnreachOption","optimizeRedundOption","onConvertToDFA","AnalysisPanel_assertThisInitialized","onConvertToNFA","onInvertDFA","onOptimizeMachine","unreachableArray","invertMachine","isChecked","onDeleteAllUnreachable","analysis_button","canOptimize","TapeContext","inputString","infiniteLeft","infiniteRight","TapeContext_classCallCheck","_tapeInput","_left","_right","_index","TestTapeContext","StringTester_classCallCheck","StringTester_possibleConstructorReturn","StringTester_getPrototypeOf","getTestString","_machineController","resetPosition","getNodesAtPosition","changePosition","getPosition","StringTester","_testString","_testIndex","_tapeContext","_cachePath","_cachedResult","_resolve","_reject","testString","reject","testResult","thenStop","isResult","currentState","prevCache","cachedState","nextCache","FSAErrorChecker","FSAErrorChecker_classCallCheck","_showErrorOnChange","onMachineChange","getMachineChangeHandler","showErrors","getMachineErrors","getMachineWarnings","notificationManager","SUCCESS_LAYOUT_ID","warning","EditPane","EditPane_classCallCheck","EditPane_possibleConstructorReturn","EditPane_getPrototypeOf","inputActionMode","isActionMode","view_pane","view_widget","right","bottom","modeIndex","setInputScheme","TapePane","TapePane_classCallCheck","TapePane_possibleConstructorReturn","TapePane_getPrototypeOf","setDisabled","getTapeContext","StepTracer","StepTracer_classCallCheck","_currentSymbols","_currentNode","_nextEdges","_prevEdges","_expectedString","updateNextEdges","StepTracerView","StepTracerView_classCallCheck","StepTracerView_possibleConstructorReturn","StepTracerView_getPrototypeOf","stepTracer","_stepTracer","getCurrentSymbols","MessageHandler","BroadcastHandler_classCallCheck","_broadcastManager","broadcastManager","FSABroadcastHandler","FSABroadcastHandler_classCallCheck","FSABroadcastHandler_possibleConstructorReturn","FSABroadcastHandler_getPrototypeOf","BroadcastHandler","targetSessionID","sendMessageTo","graphData","JSONGraphParser","attemptBuild","currentMachine","alert","FSAImporter","jsonGraphParser","FSAImporter_classCallCheck","FSAImporter_possibleConstructorReturn","FSAImporter_getPrototypeOf","_prevGraphHash","machineData","customSymbols","isArray","statePrefix","loadMachineFromData","nextGraphHash","FSAJFFImporter","jffGraphParser","FSAJFFImporter_classCallCheck","FSAJFFImporter_possibleConstructorReturn","FSAJFFImporter_getPrototypeOf","FSAExporter","FSAExporter_classCallCheck","FSAExporter_possibleConstructorReturn","FSAExporter_getPrototypeOf","JSONFileIcon","XMLFileIcon_classCallCheck","XMLFileIcon_possibleConstructorReturn","XMLFileIcon_getPrototypeOf","FSAJFFExporter","FSAJFFExporter_classCallCheck","FSAJFFExporter_possibleConstructorReturn","FSAJFFExporter_getPrototypeOf","XMLSerializer","serializeToString","XMLFileIcon","FSAModule","FSAModule_classCallCheck","_inputManager","FSAGraphParser","RENDER_LAYER_WORKSPACE","_workspace","fsa2_renderer_FSAGraphRenderer","workspace","_errorChecker","_broadcastHandler","addPickHandler","_initialPickHandler","_endpointPickHandler","_nodePickHandler","_edgePickHandler","_nodeInputHandler","_edgeInputHandler","_endpointInputHandler","_initialInputHandler","_createInputHandler","_acceptInputHandler","registerNotificationLayout","getExportManager","getImportManager","addImporter","getViewportManager","addViewClass","getDrawerManager","addPanelClass","getHotKeyManager","registerHotKey","CTRL_KEY","tryExportFile","undo","SHIFT_KEY","redo","setEventHandlerFactory","getTooltipManager","addTooltip","getBroadcastManager","addMessageHandler","UserUtil","getToolbarComponent","closeBar"],"mappings":"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","file":"module_fsa2.bundle.5ed2622cec1bfbfe5c4c.js","sourcesContent":["import GraphElement from './GraphElement.js';\n\n/**\n * A class that represents the node elements of a graph.\n *\n * @see {@link NodeGraph}\n * @extends GraphElement\n */\nclass GraphNode extends GraphElement\n{\n    /**\n   * Creates a node with the unique id.\n   * \n   * @param {String} id     the element id for this node.\n   * @param {Number} [x=0]  the initial x position\n   * @param {Number} [y=0]  the initial y position\n   */\n    constructor(id, x = 0, y = 0)\n    {\n        super(id);\n\n        this.x = x;\n        this.y = y;\n\n        this._label = '';\n    }\n\n    /** @override */\n    getCenterPoint(dst={x: 0, y: 0})\n    {\n        dst.x = this.x;\n        dst.y = this.y;\n        return dst;\n    }\n\n    /**\n   * Sets the node label to the passed-in string.\n   *\n   * Assumes the label is NOT null.\n   * @param {String} label  The new node label.\n   * @returns {this}\n   */\n    setNodeLabel(label)\n    {\n        this._label = label;\n        return this;\n    }\n\n    /**\n   * Gets the label of the node. If the node has no label, it will return an\n   * empty string.\n   * @returns {String} The node's label.\n   */\n    getNodeLabel() { return this._label; }\n\n    /**\n   * Gets the size of the node. Can be overriden to specify a different size.\n   * @returns {Number} The radius of the node.\n   */\n    getNodeSize() { return 16; }\n\n    /** @override */\n    getHashString(usePosition=true)\n    {\n        if (usePosition)\n        {\n            return super.getHashString(usePosition) + ':' +\n        Math.floor(this.x) + ',' + Math.floor(this.y) + '.' + this._label;\n        }\n        else\n        {\n            return super.getHashString(usePosition) + ':' + this._label;\n        }\n    }\n}\n\nexport default GraphNode;\n","import GraphElement from './GraphElement.js';\n\n/**\n * A class that represents the edge elements of a graph.\n * \n * @see {@link NodeGraph}\n * @extends GraphElement\n */\nclass GraphEdge extends GraphElement\n{\n    /**\n     * Creates a edge with the unique id.\n     * \n     * @param {String} id           The element id for this node.\n     * @param {GraphNode} from      The from node of the edge.\n     * @param {GraphNode} [to=null] The to node of the edge.\n     */\n    constructor(id, from, to=null)\n    {\n        super(id);\n\n        this._from = from;\n        this._to = to;\n\n        this._label = '';\n    }\n\n    // DEPRECATED!\n    changeDestinationNode(node)\n    {\n        this._to = node;\n    }\n\n    setEdgeFrom(node)\n    {\n        if (!node) throw new Error('Source of edge cannot be null');\n\n        this._from = node;\n        return this;\n    }\n\n    setEdgeTo(node)\n    {\n        this._to = node;\n        return this;\n    }\n\n    /**\n     * Sets the edge label to the passed-in string.\n     *\n     * Assumes the label is NOT null.\n     * @param {String} label  The new edge label.\n     * @returns {this}\n     */\n    setEdgeLabel(label)\n    {\n        this._label = label;\n        return this;\n    }\n\n    getEdgeDirection()\n    {\n        const from = this._from;\n        const to = this._to;\n        const HALFPI = Math.PI / 2;\n        let result = 0;\n\n        if (this.isPlaceholder())\n        {\n            result = Math.PI / 4;\n        }\n        else\n        {\n            const dy = to.y - from.y;\n            const dx = to.x - from.x;\n            result = Math.atan2(dy, dx);\n        }\n\n        if (result > HALFPI || result < -HALFPI)\n        {\n            result += Math.PI;\n        }\n\n        return result;\n    }\n\n    getStartPoint(dst = { x: 0, y: 0 })\n    {\n        const from = this._from;\n        dst.x = from.x;\n        dst.y = from.y;\n        return dst;\n    }\n\n    /** @override */\n    getCenterPoint(dst = { x: 0, y: 0 })\n    {\n        const from = this._from;\n        const to = this._to;\n        if (this.isPlaceholder())\n        {\n            const halfPlaceholderLength = this.getPlaceholderLength() / 2;\n            dst.x = from.x + halfPlaceholderLength;\n            dst.y = from.y + halfPlaceholderLength;\n        }\n        else\n        {\n            dst.x = from.x + (to.x - from.x) / 2;\n            dst.y = from.y + (to.y - from.y) / 2;\n        }\n        return dst;\n    }\n\n    getEndPoint(dst = { x: 0, y: 0 })\n    {\n        if (this.isPlaceholder())\n        {\n            const from = this._from;\n            const placeholderLength = this.getPlaceholderLength();\n            dst.x = from.x + placeholderLength;\n            dst.y = from.y + placeholderLength;\n        }\n        else\n        {\n            const to = this._to;\n            dst.x = to.x;\n            dst.y = to.y;\n        }\n        return dst;\n    }\n\n    getPlaceholderLength() { return this._from.getNodeSize(); }\n    isPlaceholder() { return this._to === null; }\n    isSelfLoop() { return this._from === this._to; }\n\n    /**\n     * Gets the label of the edge. If the edge has no label, it will return an\n     * empty string.\n     * @returns {String} The edge's label.\n     */\n    getEdgeLabel() { return this._label; }\n\n    getEdgeFrom() { return this._from; }\n    getEdgeTo() { return this._to; }\n\n    /** @override */\n    getHashString(usePosition = true)\n    {\n        const src = this._from ? this._from.getHashString(usePosition) : '';\n        // HACK: to may be a pointer, which is not a node, so getHashString does not exist.\n        const dst = this._to ? this._to.getHashString ? this._to.getHashString(usePosition) : '0' : '';\n        return super.getHashString(usePosition) + ':' + src + ',' + dst + '.' + this._label;\n    }\n}\n\nexport default GraphEdge;","/**\n * A class that represents any positioned, unique object in a graph. Usually\n * this is not instantiated, but rather extended. Look at {@link NodeElement}\n * and {@link EdgeElement} as examples.\n */\nclass GraphElement\n{\n    /**\n   * Creates an element with the unique id.\n   * \n   * @param {Number} elementID The unique id that represents the element.\n   */\n    constructor(elementID)\n    {\n        this._id = elementID;\n    }\n\n    /**\n   * Sets the element's id to the passed-in id.\n   * @param {String} elementID  The new id.\n   * @returns {this}\n   */\n    setGraphElementID(elementID)\n    {\n        this._id = elementID;\n        return this;\n    }\n\n    /**\n   * Compute the center point of the element and store the result in dst. The\n   * properties changed in dst are: x, y.\n   * @param  {Object} [dst={x: 0, y: 0}]    The object to store the result.\n   * @returns {Object}                       The passed-in dst.\n   */\n    getCenterPoint(dst = { x: 0, y: 0 })\n    {\n        dst.x = dst.y = 0;\n        return dst;\n    }\n\n    /**\n   * A unique identifier for this graph element\n   * @returns {String} The unique identifier for this element.\n   */\n    getGraphElementID() { return this._id; }\n\n    /**\n   * Computes the hash string that represents this element and its current state\n   * uniquely and deterministically. {@link NodeGraph} uses this to compute its\n   * hash code that distinguishes it from other graphs. The generated string\n   * should only be used to differentiate between other objects of the same hash\n   * function. In other words, every instance should only be compared to other\n   * instances of the same class (or extended class without override).\n   * @param  {Boolean} [usePosition=true] Whether to consider positioning as\n   *                                      part of the unique state.\n   * @returns {String}                     The hash string that represents this\n   *                                      current state.\n   */\n    getHashString(usePosition = true) { return this._id; }\n}\n\nexport default GraphElement;\n","/**\n * Used by InputAdapter to handle input event logic.\n */\nclass AbstractInputHandler\n{\n    constructor() {}\n\n    /**\n   * Called by InputAdapter before an InputEvent begins.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not begin.\n   */\n    onPreInputEvent(pointer) { return false; }\n\n    /**\n   * Called by InputAdapter when an InputEvent resolves and is not an Alt input.\n   * To handle events for Alt inputs, refer to onAltInputEvent().\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to trigger other events.\n   */\n    onInputEvent(pointer) { return false; }\n\n    /**\n   * Called by InputAdapter when an InputEvent resolves and is an Alt input.\n   * To handle events for non-Alt inputs, refer to onInputEvent().\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to trigger other events.\n   */\n    onAltInputEvent(pointer) { return false; }\n\n    /**\n   * Called by InputAdapter when a DblInputEvent resolves. The input is\n   * assumed by a non-Alt input, since only non-Alt inputs can trigger this\n   * event.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to trigger other events.\n   */\n    onDblInputEvent(pointer) { return false; }\n\n    /**\n   * Called by InputAdapter when input moves. The input is called before drag\n   * logic.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to trigger other events (i.e. dragging events).\n   */\n    onMoveInputEvent(pointer) { return false; }\n\n    /**\n   * Called by InputAdapter before a drag begins. The input could be either\n   * an Alt or non-Alt input.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to trigger other events, and then it will continue the drag\n   * input events for the current handler only.\n   * \n   * NOTE: A drag does not start immediately on move. There is a radius to\n   * compensate for mobile users. Therefore pointer.x and pointer.y refer to\n   * the offset position. To get the starting pointer position, use\n   * pointer.getInputEventPosition().\n   */\n    onDragStart(pointer) { return false; }\n\n    /**\n   * Called by InputAdapter while dragging moves. The input could be either\n   * an Alt or non-Alt input.\n   * Will always be called after onDragStart() and will be followed by\n   * onDragStop() when complete.\n   */\n    onDragMove(pointer) {}\n\n    /**\n   * Called by InputAdapter after a drag ends. The input could be either an\n   * Alt or non-Alt input.\n   * Will always be called after onDragStart(). Although onDragMove may be\n   * called in-between, it is not guaranteed.\n   */\n    onDragStop(pointer) {}\n\n    /**\n   * Called by InputAdapter after an InputEvent ends.\n   */\n    onPostInputEvent(pointer) {}\n\n    /**\n   * Called by InputAdapter when zoom changes.\n   * Returns true if event is consumed (zoom will not be applied)\n   */\n    onZoomChange(pointer, zoomValue, prevValue)\n    {\n        return false;\n    }\n}\n\nexport default AbstractInputHandler;","import GraphElement from 'graph/elements/GraphElement.js';\nimport { guid, stringHash } from 'util/MathHelper.js';\n\n// const FROM_STATE_INDEX = 0;\nconst SYMBOL_INDEX = 1;\nconst TO_STATE_INDEX = 2;\n\nexport const EMPTY_SYMBOL = '&empty';\n\nexport class State\n{\n    constructor(label='', src=null)\n    {\n        this._label = label;\n\n        this._src = src;\n        this._id = src instanceof GraphElement ? src.getGraphElementID() : guid();\n    }\n\n    copy()\n    {\n        const result = new State();\n        result._label = this._label;\n        result._src = this._src;\n        result._id = this._id;\n        return result;\n    }\n\n    getStateLabel() { return this._label; }\n\n    getStateID() { return this._id; }\n    getSource() { return this._src; }\n\n    getHashString()\n    {\n        return this._id;\n    }\n}\n\nexport class Transition\n{\n    constructor(from, to, symbols=[])\n    {\n        this._from = from;\n        this._to = to;\n        this._symbols = symbols;\n    }\n\n    copy()\n    {\n        const result = new Transition();\n        result._from = this._from;\n        result._to = this._to;\n        result._symbols = this._symbols.slice();\n        return result;\n    }\n\n    getSourceState() { return this._from; }\n    getDestinationState() { return this._to; }\n\n    addSymbol(symbol) { this._symbols.push(symbol); }\n    hasSymbol(symbol) { return this._symbols.includes(symbol); }\n    getSymbols() { return this._symbols; }\n\n    getHashString()\n    {\n        return this._from.getHashString() + ':' + this._symbols.join(',') + ':' + this._to.getHashString();\n    }\n}\n\nclass FSA\n{\n    constructor(deterministic=false)\n    {\n    //state id -> state\n        this._states = new Map();\n        //symbol -> symbol use counter\n        this._alphabet = new Map();\n        //transition key (from + to) -> transition object\n        this._transitions = new Map();\n        this._finalStates = new Set();\n        this._customSymbols = new Set();\n        this._startState = null;\n\n        this._deterministic = deterministic;\n        this._errors = [];\n    }\n\n    /**\n   * Performs a shallow copy of the 2 machines. Any changes to a state will be\n   * reflected in both. However, changes to transitions, alphabet, and final\n   * states will not propagate.\n   */\n    copy(fsa)\n    {\n    //You are already yourself, don't copy nothing.\n        if (fsa === this) return;\n\n        //Make room for the copy...\n        this.clear();\n\n        //Copy state\n        for(const [key, value] of fsa._states.entries())\n        {\n            const result = value.copy();\n            this._states.set(key, result);\n\n            //Copy start state\n            if (fsa.isStartState(value))\n            {\n                this._startState = result;\n            }\n            //Copy final states\n            if (fsa.isFinalState(value))\n            {\n                this._finalStates.add(result);\n            }\n        }\n        //Copy alphabet\n        for(const [key, value] of fsa._alphabet.entries())\n        {\n            this._alphabet.set(key, value);\n        }\n        //Copy transitions\n        for(const [key, value] of fsa._transitions.entries())\n        {\n            const result = value.copy();\n            result._from = this._states.get(value.getSourceState().getStateID());\n            result._to = this._states.get(value.getDestinationState().getStateID());\n            this._transitions.set(key, result);\n        }\n        //Copy custom symbols\n        for(const symbol of fsa._customSymbols)\n        {\n            this._customSymbols.add(symbol);\n        }\n\n        //Copy determinism\n        this._deterministic = fsa._deterministic;\n\n        //Copy errors\n        for(const error of fsa._errors)\n        {\n            //WARNING: if the error's store state objects, they need to be redirected to the copies\n            this._errors.push(error);\n        }\n    }\n\n    clear()\n    {\n        this._states.clear();\n        this._alphabet.clear();\n        this._transitions.clear();\n        this._finalStates.clear();\n        this._customSymbols.clear();\n        this._startState = null;\n\n        this._errors.length = 0;\n    }\n\n    setDeterministic(deterministic) { this._deterministic = deterministic; }\n    isDeterministic() { return this._deterministic; }\n\n    validate()\n    {\n    //Reset errors\n        this._errors.length = 0;\n\n        if (this._deterministic)\n        {\n            const foundSymbols = new Map();\n            for(const key of this._alphabet.keys())\n            {\n                foundSymbols.set(key, false);\n            }\n\n            for(const state of this._states.values())\n            {\n                //Get all outgoing transitions\n                const transitions = this.getOutgoingTransitions(state);\n                for(const transition of transitions)\n                {\n                    const symbol = transition[SYMBOL_INDEX];\n\n                    //We don't need to worry about empty symbols cause this is a DFA\n                    //So just assume every symbol is a valid one\n                    if (!foundSymbols.get(symbol))\n                    {\n                        foundSymbols.set(symbol, true);\n                    }\n                    else\n                    {\n                        //Found duplicate\n                        this._errors.push('duplicate symbol: ' + symbol);\n                        return false;\n                    }\n                }\n\n                //Reset foundSymbols for next state\n                for(const key of foundSymbols.keys())\n                {\n                    if (!foundSymbols.get(key))\n                    {\n                        //Found missing symbol for state\n                        this._errors.push('missing symbol: ' + key);\n                        return false;\n                    }\n\n                    //Reset found symbol\n                    foundSymbols.set(key, false);\n                }\n            }\n\n            //No errors found\n            this._errors.length = 0;\n            return true;\n        }\n        else\n        {\n            //It is a valid NFA already\n            this._errors.length = 0;\n            return true;\n        }\n    }\n    isValid() { return this._errors.length == 0; }\n    getErrors() { return this._errors; }\n\n    createState(label='')\n    {\n        return this.addState(new State(label));\n    }\n\n    addState(state)\n    {\n        const stateID = state.getStateID();\n        if (this._states.has(stateID)) throw new Error('Already added state with id \\'' + stateID + '\\'');\n        //Make state as new start state if no other states exist...\n        if (this._states.size <= 0) this._startState = state;\n        //Add to state set\n        this._states.set(stateID, state);\n        return state;\n    }\n\n    removeState(state)\n    {\n        const stateID = state.getStateID();\n        if (!this._states.has(stateID)) return false;\n        this._states.delete(stateID);\n\n        //Deleted the start state, so must pick another one...\n        if (this._startState === state)\n        {\n            if (this._states.size <= 0)\n            {\n                //If no more states to choose from, don't choose anything\n                this._startState = null;\n            }\n            else\n            {\n                //Choose an arbitrary start state\n                this._startState = this._states.values().next().value;\n            }\n        }\n\n        return true;\n    }\n\n    hasStateWithLabel(label)\n    {\n        for(const state of this._states.values())\n        {\n            if (state.getStateLabel() == label)\n            {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    getStatesByLabel(label, dst=[])\n    {\n        for(const state of this._states.values())\n        {\n            if (state.getStateLabel() == label)\n            {\n                dst.push(state);\n            }\n        }\n        return dst;\n    }\n\n    getStateByID(id)\n    {\n        return this._states.get(id);\n    }\n\n    hasState(state) { return this._states.has(state.getStateID()); }\n\n    getStates() { return this._states.values(); }\n\n    getStateCount() { return this._states.size; }\n\n    addTransition(from, to, symbol)\n    {\n        if (!this.hasState(from)) throw new Error('Trying to add a transition to unknown state with label \\'' + from.getStateLabel() + '\\'');\n        if (!this.hasState(to)) throw new Error('Trying to add a transition to unknown state with label \\'' + to.getStateLabel() + '\\'');\n        if (!symbol) throw new Error('Cannot add transition for null symbol - use the empty symbol instead');\n\n        const transitionKey = from.getStateID() + '->' + to.getStateID();\n        if (this._transitions.has(transitionKey))\n        {\n            const transition = this._transitions.get(transitionKey);\n            if (!transition.hasSymbol(symbol))\n            {\n                transition.addSymbol(symbol);\n            }\n            else\n            {\n                //Didn't add anything...\n                return false;\n            }\n        }\n        else\n        {\n            this._transitions.set(transitionKey, new Transition(from, to, [symbol]));\n        }\n\n        //Add to alphabet...\n        this._incrSymbolCount(symbol);\n        return true;\n    }\n\n    removeTransition(from, to, symbol=null)\n    {\n        const transitionKey = from.getStateID() + '->' + to.getStateID();\n        if (!this._transitions.has(transitionKey)) return false;\n\n        const transition = this._transitions.get(transitionKey);\n        const symbols = transition.getSymbols();\n\n        //If deleting a specific symbol...\n        if (symbol)\n        {\n            const index = symbols.indexOf(symbol);\n            if (index >= 0)\n            {\n                //Update symbol counts...\n                this._decrSymbolCount(symbol);\n\n                symbols.splice(index, 1);\n                if (symbols.length <= 0) this._transitions.delete(transitionKey);\n                return true;\n            }\n            else\n            {\n                return false;\n            }\n        }\n        //If deleting a all associated symbols...\n        else\n        {\n            //Update symbol counts...\n            for(const symbol of symbols)\n            {\n                this._decrSymbolCount(symbol);\n            }\n\n            //Remove transition\n            this._transitions.delete(transitionKey);\n            return true;\n        }\n    }\n\n    hasTransition(from, to, symbol=null)\n    {\n        const transitionKey = from.getStateID() + '->' + to.getStateID();\n        if (!this._transitions.has(transitionKey)) return false;\n        //Not checking for specific symbols...\n        if (!symbol) return true;\n\n        //Find the symbol...\n        return this._transitions.get(transitionKey).hasSymbol(symbol);\n    }\n\n    getTransitionSymbols(from, to)\n    {\n        const transitionKey = from.getStateID() + '->' + to.getStateID();\n        if (!this._transitions.has(transitionKey)) return null;\n        return this._transitions.get(transitionKey).getSymbols();\n    }\n\n    getTransitions() { return this._transitions.values(); }\n\n    _incrSymbolCount(symbol)\n    {\n    //Don't add empty symbol to the alphabet\n        if (symbol === EMPTY_SYMBOL) return;\n\n        const symbolCount = this._alphabet.get(symbol) || 0;\n        this._alphabet.set(symbol, symbolCount + 1);\n    }\n\n    _decrSymbolCount(symbol)\n    {\n        if (!this._alphabet.has(symbol)) throw new Error('Unable to find valid transition symbol in alphabet');\n\n        //Empty symbol is not in the alphabet\n        if (symbol === EMPTY_SYMBOL) return;\n\n        const symbolCount = this._alphabet.get(symbol);\n        //Delete the symbol, since it is no longer used...\n        if (symbolCount <= 1)\n        {\n            if (!this.isCustomSymbol(symbol))\n            {\n                //Regular symbols are removed if unused...\n                this._alphabet.delete(symbol);\n            }\n            else\n            {\n                //Custom symbols stay in the alphabet, even if unused...\n                this._alphabet.set(symbol, 0);\n            }\n        }\n        else\n        {\n            //Still being used by someone...\n            this._alphabet.set(symbol, symbolCount - 1);\n        }\n    }\n\n    changeSymbol(symbol, newSymbol)\n    {\n        if (symbol === EMPTY_SYMBOL) throw new Error('Cannot change the empty symbol');\n        if (newSymbol === EMPTY_SYMBOL) throw new Error('Cannot change to the empty symbol');\n        if (this._alphabet.has(newSymbol)) throw new Error('Cannot change symbol to another existing symbol');\n\n        for(const transition of this._transitions.values())\n        {\n            const symbols = transition.getSymbols();\n            const index = symbols.indexOf(symbol);\n\n            //Change the symbol from the transition\n            if (index >= 0)\n            {\n                symbols[index] = newSymbol;\n            }\n        }\n\n        //Exchange symbol counts...\n        const count = this._alphabet.get(symbol);\n        this._alphabet.set(newSymbol, count);\n        this._alphabet.delete(symbol);\n\n        //Check if custom symbol...\n        if (this._customSymbols.has(symbol))\n        {\n            this._customSymbols.delete(symbol);\n            this._customSymbols.add(newSymbol);\n        }\n    }\n\n    removeSymbol(symbol)\n    {\n        const cache = [];\n        for(const [key, transition] of this._transitions.entries())\n        {\n            const symbols = transition.getSymbols();\n            const index = symbols.indexOf(symbol);\n\n            //Delete the symbol from the transition\n            if (index >= 0)\n            {\n                symbols.splice(index, 1);\n\n                //If no more symbols, make sure to delete it from the map later...\n                if (symbols.length <= 0)\n                {\n                    cache.push(key);\n                }\n            }\n        }\n\n        //Delete any transitions that have no more symbols...\n        for(const transitionKey of cache)\n        {\n            this._transitions.delete(transitionKey);\n        }\n\n        //Remove from alphabet if possible...\n        if (symbol !== EMPTY_SYMBOL)\n        {\n            if (this._customSymbols.has(symbol))\n            {\n                this._alphabet.set(symbol, 0);\n            }\n            else\n            {\n                this._alphabet.delete(symbol);\n            }\n        }\n    }\n\n    setCustomSymbol(symbol, custom=true)\n    {\n        if (symbol === EMPTY_SYMBOL) throw new Error('Cannot change the empty symbol as a custom symbol');\n\n        if (custom)\n        {\n            if (!this._customSymbols.has(symbol))\n            {\n                this._customSymbols.add(symbol);\n\n                //Add symbol to alphabet if missing...\n                if (!this._alphabet.has(symbol)) this._alphabet.set(symbol, 0);\n            }\n        }\n        else\n        {\n            if (this._customSymbols.has(symbol))\n            {\n                this._customSymbols.delete(symbol);\n\n                //If symbol is unused, delete it\n                if (this._alphabet.has(symbol) && this._alphabet.get(symbol) <= 0) this._alphabet.delete(symbol);\n            }\n        }\n    }\n\n    isCustomSymbol(symbol)\n    {\n        return this._customSymbols.has(symbol);\n    }\n\n    getCustomSymbols()\n    {\n        return this._customSymbols;\n    }\n\n    clearCustomSymbols()\n    {\n        this._customSymbols.clear();\n    }\n\n    isUsedSymbol(symbol)\n    {\n        return this._alphabet.has(symbol) && this._alphabet.get(symbol) > 0;\n    }\n\n    isSymbol(symbol)\n    {\n        return this._alphabet.has(symbol);\n    }\n\n    getAlphabet()\n    {\n        return this._alphabet.keys();\n    }\n\n    setStartState(state)\n    {\n        const stateID = state.getStateID();\n        if (!this._states.has(stateID))\n        {\n            //Add it to the state set\n            this._states.set(stateID, state);\n        }\n        this._startState = state;\n    }\n    isStartState(state) { return this._startState === state; }\n    getStartState() { return this._startState; }\n\n    setFinalState(state, final=true)\n    {\n    //Make final\n        if (final)\n        {\n            //If missing from state set, add it in...\n            if (!this._states.has(state.getStateID()))\n            {\n                this.addState(state);\n            }\n\n            this._finalStates.add(state);\n        }\n        else\n        {\n            //If missing from state set, it would be effectively the same thing as\n            //calling addState(state). So due to ambiguity, don't do it.\n            if (!this._states.has(state.getStateID())) throw new Error('Trying to change final for missing state \\'' + state.getStateLabel() + '\\'');\n\n            this._finalStates.delete(state);\n        }\n    }\n    isFinalState(state) { return this._finalStates.has(state); }\n    getFinalStates() { return this._finalStates; }\n\n    doTransition(state, symbol, forceNondeterminism=false, dst=[])\n    {\n        if (!state) return dst;\n        if (!(state instanceof State)) throw new Error('Invalid state instance type \\'' + (typeof state) + '\\'');\n        if (!this._states.has(state.getStateID())) throw new Error('Unable to find source state with id \\'' + state.getStateID() + '\\'');\n\n        if (!symbol) symbol = EMPTY_SYMBOL;\n\n        const fromTransitionKey = state.getStateID() + '->';\n        for(const key of this._transitions.keys())\n        {\n            if (key.startsWith(fromTransitionKey))\n            {\n                const transition = this._transitions.get(key);\n                if (transition.hasSymbol(symbol))\n                {\n                    dst.push(transition.getDestinationState());\n\n                    //There will only ever be 1 transition for deterministic machines\n                    if (!forceNondeterminism && this._deterministic) return dst;\n                }\n            }\n        }\n        return dst;\n    }\n\n    doTerminalTransition(state, symbol, dst=[])\n    {\n        if (!state) return dst;\n        if (!this._states.has(state.getStateID())) throw new Error('Unable to find source state with id \\'' + state.getStateID() + '\\'');\n\n        if (!symbol) symbol = EMPTY_SYMBOL;\n\n        const fromTransitionKey = state.getStateID() + '->';\n        for(const key of this._transitions.keys())\n        {\n            if (key.startsWith(fromTransitionKey))\n            {\n                const transition = this._transitions.get(key);\n                if (transition.hasSymbol(symbol))\n                {\n                    const toState = transition.getDestinationState();\n                    const result = this.doClosureTransition(toState);\n                    for(const s of result)\n                    {\n                        if (!dst.includes(s)) dst.push(s);\n                    }\n                }\n            }\n        }\n\n        return dst;\n    }\n\n    doClosureTransition(state, dst=[])\n    {\n        if (!state) return dst;\n\n        dst.push(state);\n        for(let i = 0; i < dst.length; ++i)\n        {\n            const transitions = this.getOutgoingTransitions(dst[i]);\n            for(const transition of transitions)\n            {\n                if (transition[SYMBOL_INDEX] === EMPTY_SYMBOL)\n                {\n                    const toState = transition[TO_STATE_INDEX];\n                    if (!dst.includes(toState))\n                    {\n                        dst.push(toState);\n                    }\n                }\n            }\n        }\n        return dst;\n    }\n\n    getOutgoingTransitions(state, dst=[])\n    {\n        if (!state) return dst;\n        if (!this._states.has(state.getStateID())) throw new Error('Unable to find source state with id \\'' + state.getStateID() + '\\'');\n\n        const fromTransitionKey = state.getStateID() + '->';\n        for(const key of this._transitions.keys())\n        {\n            if (key.startsWith(fromTransitionKey))\n            {\n                const transition = this._transitions.get(key);\n                const symbols = transition.getSymbols();\n                for(const symbol of symbols)\n                {\n                    dst.push([state, symbol, transition.getDestinationState()]);\n                }\n            }\n        }\n\n        return dst;\n    }\n\n    getHashCode()\n    {\n        let string = '';\n        for(const state of this._states.values())\n        {\n            string += state.getHashString() + ',';\n        }\n        string += '|';\n        for(const transition of this._transitions.values())\n        {\n            string += transition.getHashString() + ',';\n        }\n        string += '|';\n        for(const state of this._finalStates)\n        {\n            string += state.getHashString();\n        }\n        string += '|';\n        string += this._startState ? this._startState.getHashString() : '';\n        string += '|';\n        string += this._deterministic ? 'd' : 'n';\n        return stringHash(string);\n    }\n}\n\nexport default FSA;\n","import QuadraticEdge from 'graph/elements/QuadraticEdge.js';\n\nexport const SYMBOL_SEPARATOR = ' ';\nexport const EMPTY_CHAR = '\\u03B5';\n\nclass FSAEdge extends QuadraticEdge\n{\n    constructor(id, from, to=null)\n    {\n        super(id, from, to);\n    }\n\n    /** @override */\n    setEdgeLabel(label)\n    {\n        if (typeof label === 'string')\n        {\n            super.setEdgeLabel(label);\n        }\n        else\n        {\n            super.setEdgeLabel(EMPTY_CHAR);\n        }\n    }\n\n    getEdgeSymbolsFromLabel()\n    {\n        return this.getEdgeLabel().split(SYMBOL_SEPARATOR);\n    }\n}\n\nexport default FSAEdge;\n","import InputHandler from './InputHandler.js';\n\nclass GraphElementInputHandler extends InputHandler\n{\n    constructor(targetType)\n    {\n        super();\n\n        if (!targetType)\n        {\n            throw new Error('Missing target type for graph element input handler');\n        }\n\n        this._targetType = targetType;\n    }\n\n    /** @override */\n    isTargetable(inputController, pointer, target, targetType)\n    {\n        if (targetType === this._targetType)\n        {\n            return true;\n        }\n\n        return false;\n    }\n  \n    getTargetType()\n    {\n        return this._targetType;\n    }\n}\n\nexport default GraphElementInputHandler;\n","class PickHandler\n{\n    getTargetAt(graph, x, y) { return null; }\n    getTargetType() { return null; }\n}\nexport default PickHandler;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M13.49 5.48c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm-3.6 13.9l1-4.4 2.1 2v6h2v-7.5l-2.1-2 .6-3c1.3 1.5 3.3 2.5 5.5 2.5v-2c-1.9 0-3.5-1-4.3-2.4l-1-1.6c-.4-.6-1-1-1.7-1-.3 0-.5.1-.8.1l-5.2 2.2v4.7h2v-3.4l1.8-.7-1.6 8.1-4.9-1-.4 2 7 1.4z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","\nfunction getReachableState(graph)\n{\n    let reachable = [];\n    let startNode = graph.getStartNode();\n    reachable.push(startNode);\n    for(let i = 0; i < reachable.length; i++)\n    {\n        for (const edge of graph.getEdges())\n        {\n            if(edge._from == reachable[i])\n            {\n                if(!reachable.includes(edge._to))\n                {\n                    reachable.push(edge._to);\n                }\n            }\n        }\n    }\n    return reachable;\n}\n\nclass GraphLayout\n{\n    static applyLayout(graph, type='circle')\n    {\n        if (type != 'circle') throw new Error('Invalid layout type');\n        //seperate node to reachable and unreachable\n        const reachableNode= getReachableState(graph);\n        function unreachable(node)\n        {\n            return !reachableNode.includes(node);\n        }\n        const unreachableNode = graph.getNodes().filter(unreachable);\n\n        //get num of nodes\n        const numOfReachable = reachableNode.length;\n        const numOfUnreachable = unreachableNode.length;\n        const numOfNode = graph.getNodes().length;\n        const maxNum = Math.max(numOfReachable, numOfUnreachable);\n        if(numOfNode == 0)\n        {\n            return;\n        }\n        //set radius\n        var radius;\n        if(numOfReachable < 10 && numOfUnreachable < 10)\n        {\n            radius = maxNum/4 * 50 + 30;\n        }\n        else\n        {\n            radius = (maxNum/5) * 40 + 30;\n        }\n\n        let currentStep = 0;\n        if (numOfReachable == 1)\n        {\n            let degree = 2* Math.PI/numOfNode;\n            for(const node of graph.getNodes())\n            {\n                node.y = Math.sin(degree*currentStep + Math.PI)*radius;\n                node.x = Math.cos(degree*currentStep + Math.PI)*radius;\n                currentStep += 1;\n            }\n        }\n        else \n        {\n            const degree_re = 2* Math.PI/numOfReachable;\n            const degree_un = 2* Math.PI/numOfUnreachable;\n\n            currentStep = 0;\n            for(const node of reachableNode)\n            {\n                node.y = Math.sin(degree_re*currentStep + Math.PI)*radius;\n                node.x = Math.cos(degree_re*currentStep + Math.PI)*radius;\n                currentStep += 1;\n            }\n            currentStep = 0;\n            for(const node of unreachableNode)\n            {\n                node.y = Math.sin(degree_un*currentStep + Math.PI)*(radius + 100);\n                node.x = Math.cos(degree_un*currentStep + Math.PI)*(radius + 100);\n                currentStep += 1;\n            }\n        }\n    /*for(const node of graph.getNodes())\n    {\n      node.y = Math.sin(degree*currentStep + Math.PI)*radius;\n      node.x = Math.cos(degree*currentStep + Math.PI)*radius;\n      currentStep += 1\n    }*/\n    }\n\n\n}\n\nexport default GraphLayout;\n","class InputContext\n{\n    constructor()\n    {\n        this._inputHandlers = [];\n    }\n\n    addInputHandler(inputHandler)\n    {\n        this._inputHandlers.push(inputHandler);\n        return this;\n    }\n\n    removeInputHandler(inputHandler)\n    {\n        const index = this._inputHandlers.indexOf(inputHandler);\n        if (index >= 0) this._inputHandlers.splice(index, 1);\n        return this;\n    }\n\n    clearInputHandlers() { this._inputHandlers.length = 0; }\n\n    handleEvent(eventName, ...eventArgs)\n    {\n        //Let others handle this event...\n        for (const inputHandler of this._inputHandlers)\n        {\n            const handlerEventCallback = inputHandler[eventName];\n            if (typeof handlerEventCallback === 'function')\n            {\n                if (handlerEventCallback.apply(inputHandler, eventArgs))\n                {\n                    return inputHandler;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    getInputHandlers() { return this._inputHandlers; }\n    hasInputHandlers() { return this._inputHandlers.length > 0; }\n}\n\nexport default InputContext;","class AbstractEventHandler\n{\n    constructor() {}\n\n    applyUndo(undoManager)\n    {\n        throw new Error('Undo operation for handler not supported');\n    }\n\n    applyRedo(undoManager)\n    {\n        throw new Error('Redo operation for handler not supported');\n    }\n}\n\nexport default AbstractEventHandler;\n","export function getUnreachableNodes(graph)\n{\n    if (graph.getNodeCount() <= 1) return [];\n\n    const edges = graph.getEdges();\n    const nodes = graph.getNodes().slice();\n    const startNode = nodes.shift();\n    let nextNodes = [];\n    nextNodes.push(startNode);\n\n    while(nextNodes.length > 0)\n    {\n        const node = nextNodes.pop();\n        for(const edge of edges)\n        {\n            if (edge.getEdgeFrom() === node)\n            {\n                const i = nodes.indexOf(edge.getEdgeTo());\n                if (i >= 0)\n                {\n                    const nextNode = nodes.splice(i, 1)[0];\n                    nextNodes.push(nextNode);\n                }\n            }\n        }\n    }\n\n    return nodes;\n}","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\" />\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 56 56\">\n                <path fill=\"#E9E9E0\" d=\"M36.985,0H7.963C7.155,0,6.5,0.655,6.5,1.926V55c0,0.345,0.655,1,1.463,1h40.074 c0.808,0,1.463-0.655,1.463-1V12.978c0-0.696-0.093-0.92-0.257-1.085L37.607,0.257C37.442,0.093,37.218,0,36.985,0z\"/>\n                <polygon fill=\"#D9D7CA\" points=\"37.5,0.151 37.5,12 49.349,12 \t\"/>\n                <path fill=\"#9777A8\" d=\"M48.037,56H7.963C7.155,56,6.5,55.345,6.5,54.537V39h43v15.537C49.5,55.345,48.845,56,48.037,56z\"/>\n                <path fill=\"#FFFFFF\" d={'M17.021,42.719v7.848c0,0.474-0.087,0.873-0.26,1.196s-0.405,0.583-0.697,0.779 s-0.627,0.333-1.005,0.41c-0.378,0.077-0.768,0.116-1.169,0.116c-0.2,0-0.436-0.021-0.704-0.062s-0.547-0.104-0.834-0.191 s-0.563-0.185-0.827-0.294s-0.487-0.232-0.67-0.369l0.697-1.107c0.091,0.063,0.221,0.13,0.39,0.198s0.354,0.132,0.554,0.191 s0.41,0.111,0.629,0.157s0.424,0.068,0.615,0.068c0.483,0,0.868-0.094,1.155-0.28s0.439-0.504,0.458-0.95v-7.711H17.021z'}/>\n                <path fill=\"#FFFFFF\" d={'M25.184,50.238c0,0.364-0.075,0.718-0.226,1.06s-0.362,0.643-0.636,0.902s-0.61,0.467-1.012,0.622 s-0.856,0.232-1.367,0.232c-0.219,0-0.444-0.012-0.677-0.034s-0.467-0.062-0.704-0.116c-0.237-0.055-0.463-0.13-0.677-0.226 s-0.398-0.212-0.554-0.349l0.287-1.176c0.128,0.073,0.289,0.144,0.485,0.212s0.398,0.132,0.608,0.191s0.419,0.107,0.629,0.144 s0.405,0.055,0.588,0.055c0.556,0,0.982-0.13,1.278-0.39s0.444-0.645,0.444-1.155c0-0.31-0.104-0.574-0.314-0.793 s-0.472-0.417-0.786-0.595s-0.654-0.355-1.019-0.533s-0.706-0.388-1.025-0.629s-0.583-0.526-0.793-0.854s-0.314-0.738-0.314-1.23 c0-0.446,0.082-0.843,0.246-1.189s0.385-0.641,0.663-0.882s0.602-0.426,0.971-0.554s0.759-0.191,1.169-0.191 c0.419,0,0.843,0.039,1.271,0.116s0.774,0.203,1.039,0.376c-0.055,0.118-0.118,0.248-0.191,0.39s-0.142,0.273-0.205,0.396 s-0.118,0.226-0.164,0.308s-0.073,0.128-0.082,0.137c-0.055-0.027-0.116-0.063-0.185-0.109s-0.166-0.091-0.294-0.137 s-0.296-0.077-0.506-0.096s-0.479-0.014-0.807,0.014c-0.183,0.019-0.355,0.07-0.52,0.157s-0.31,0.193-0.438,0.321 s-0.228,0.271-0.301,0.431s-0.109,0.313-0.109,0.458c0,0.364,0.104,0.658,0.314,0.882s0.47,0.419,0.779,0.588 s0.647,0.333,1.012,0.492s0.704,0.354,1.019,0.581s0.576,0.513,0.786,0.854S25.184,49.7,25.184,50.238z'}/>\n                <path fill=\"#FFFFFF\" d={'M35.082,47.914c0,0.848-0.107,1.595-0.321,2.242s-0.511,1.185-0.889,1.613s-0.82,0.752-1.326,0.971 s-1.06,0.328-1.661,0.328s-1.155-0.109-1.661-0.328s-0.948-0.542-1.326-0.971s-0.675-0.966-0.889-1.613s-0.321-1.395-0.321-2.242 s0.107-1.593,0.321-2.235s0.511-1.178,0.889-1.606s0.82-0.754,1.326-0.978s1.06-0.335,1.661-0.335s1.155,0.111,1.661,0.335 s0.948,0.549,1.326,0.978s0.675,0.964,0.889,1.606S35.082,47.066,35.082,47.914z M30.844,51.729c0.337,0,0.658-0.066,0.964-0.198 s0.579-0.349,0.82-0.649s0.431-0.695,0.567-1.183s0.21-1.082,0.219-1.784c-0.009-0.684-0.08-1.265-0.212-1.743 s-0.314-0.873-0.547-1.183s-0.497-0.533-0.793-0.67s-0.608-0.205-0.937-0.205c-0.337,0-0.658,0.063-0.964,0.191 s-0.579,0.344-0.82,0.649s-0.431,0.699-0.567,1.183c-0.137,0.483-0.21,1.075-0.219,1.777c0.009,0.684,0.08,1.267,0.212,1.75 s0.314,0.877,0.547,1.183s0.497,0.528,0.793,0.67S30.516,51.729,30.844,51.729z'}/>\n                <path fill=\"#FFFFFF\" d=\"M44.68,42.924V53h-1.668l-3.951-6.945V53h-1.668V42.924h1.668l3.951,6.945v-6.945H44.68z\"/>\n                <path fill=\"#9777A8\" d=\"M19.5,19v-4c0-0.551,0.448-1,1-1c0.553,0,1-0.448,1-1s-0.447-1-1-1c-1.654,0-3,1.346-3,3v4 c0,1.103-0.897,2-2,2c-0.553,0-1,0.448-1,1s0.447,1,1,1c1.103,0,2,0.897,2,2v4c0,1.654,1.346,3,3,3c0.553,0,1-0.448,1-1 s-0.447-1-1-1c-0.552,0-1-0.449-1-1v-4c0-1.2-0.542-2.266-1.382-3C18.958,21.266,19.5,20.2,19.5,19z\"/>\n                <circle fill=\"#9777A8\" cx=\"27.5\" cy=\"18.5\" r=\"1.5\"/>\n                <path fill=\"#9777A8\" d=\"M39.5,21c-1.103,0-2-0.897-2-2v-4c0-1.654-1.346-3-3-3c-0.553,0-1,0.448-1,1s0.447,1,1,1 c0.552,0,1,0.449,1,1v4c0,1.2,0.542,2.266,1.382,3c-0.84,0.734-1.382,1.8-1.382,3v4c0,0.551-0.448,1-1,1c-0.553,0-1,0.448-1,1 s0.447,1,1,1c1.654,0,3-1.346,3-3v-4c0-1.103,0.897-2,2-2c0.553,0,1-0.448,1-1S40.053,21,39.5,21z\"/>\n                <path fill=\"#9777A8\" d=\"M27.5,24c-0.553,0-1,0.448-1,1v3c0,0.552,0.447,1,1,1s1-0.448,1-1v-3 C28.5,24.448,28.053,24,27.5,24z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './ZoomWidget.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport ZoomInIcon from 'components/iconset/ZoomInIcon.js';\nimport ZoomOutIcon from 'components/iconset/ZoomOutIcon.js';\n\nclass ZoomWidget extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.onZoomIn = this.onZoomIn.bind(this);\n        this.onZoomOut = this.onZoomOut.bind(this);\n    }\n\n    onZoomIn(e)\n    {\n        const viewport = this.props.viewport;\n        const viewScale = -viewport.getScale() * 0.4;\n        viewport.addScale(viewScale);\n    }\n\n    onZoomOut(e)\n    {\n        const viewport = this.props.viewport;\n        const viewScale = viewport.getScale() * 0.75;\n        viewport.addScale(viewScale);\n    }\n\n    /** @override */\n    render()\n    {\n        const viewport = this.props.viewport;\n        const viewScale = 'x' + (1 / (viewport.getScale() || 1)).toFixed(2);\n\n        return (\n            <div id={this.props.id}\n                className={Style.zoom_container +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <IconButton className={Style.zoom_button} title=\"Zoom In\" onClick={this.onZoomIn}>\n                    <ZoomInIcon/>\n                </IconButton>\n                <IconButton className={Style.zoom_button} title=\"Zoom Out\" onClick={this.onZoomOut}>\n                    <ZoomOutIcon/>\n                </IconButton>\n                <label className={Style.zoom_label}>{viewScale}</label>\n            </div>\n        );\n    }\n}\n\nexport default ZoomWidget;\n","import React from 'react';\nimport Style from './FocusCenterWidget.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport PinpointIcon from 'components/iconset/PinpointIcon.js';\n\nconst OFFSET_EPSILON = 0.1;\n\nclass FocusCenterWidget extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick(e)\n    {\n        const viewport = this.props.viewport;\n        viewport.setOffset(0, 0);\n    }\n\n    /** @override */\n    render()\n    {\n        const viewport = this.props.viewport;\n\n        return (\n            <IconButton id={this.props.id}\n                className={Style.center_focus_button +\n          ' ' + this.props.className}\n                style={this.props.style}\n                title={'Center Workspace'}\n                disabled={Math.abs(viewport.getOffsetX()) < OFFSET_EPSILON &&\n          Math.abs(viewport.getOffsetY()) < OFFSET_EPSILON} onClick={this.onClick}>\n                <PinpointIcon/>\n            </IconButton>\n        );\n    }\n}\n\nexport default FocusCenterWidget;\n","import React from 'react';\nimport Style from './NavbarWidget.css';\n\nimport ZoomWidget from 'experimental/widgets/ZoomWidget.js';\nimport FocusCenterWidget from 'experimental/widgets/FocusCenterWidget.js';\n\nclass NavbarWidget extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const viewportAdapter = this.props.viewportAdapter;\n\n        return (\n            <div id={this.props.id}\n                className={Style.navbar_container +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <ZoomWidget className={Style.navbar_widget_container} viewport={viewportAdapter}/>\n                <FocusCenterWidget className={Style.navbar_widget} viewport={viewportAdapter}/>\n            </div>\n        );\n    }\n}\n\nexport default NavbarWidget;\n","class Importer\n{\n    constructor() {}\n\n    /**\n     * Try to import the target file. Assumes that isValidFile() returns true.\n     * \n     * @param {String} fileName the name of the target file\n     * @param {String} fileType the associated file extension\n     * @param {String} fileData the file content to import\n     * @returns {Promise} a Promise that resolves if imported without errors\n     */\n    importFileData(fileName, fileType, fileData)\n    {\n        return Promise.resolve(fileData);\n    }\n    \n    getDataType() { return 'text'; }\n}\nexport default Importer;\n","import Importer from 'util/file/import/Importer.js';\n\nclass SessionImporter extends Importer\n{\n    constructor(app)\n    {\n        super();\n\n        this._app = app;\n    }\n\n    onParseSession(session, fileData)\n    {\n        return fileData;\n    }\n\n    onPreImportSession(session)\n    {\n        session.getApp().getUndoManager().captureEvent();\n    }\n\n    onImportSession(session, sessionData)\n    {\n        \n    }\n\n    onPostImportSession(session)\n    {\n        session.getApp().getUndoManager().captureEvent();\n    }\n\n    /** @override */\n    importFileData(fileName, fileType, fileData)\n    {\n        const app = this._app;\n        const session = app.getSession();\n        const currentModule = session.getCurrentModule();\n        const result = this.onParseSession(session, fileData);\n\n        this.onPreImportSession(session);\n\n        this.onImportSession(session, result);\n\n        let projectName;\n        if (fileName)\n        {\n            projectName = fileName.substring(0, fileName.length - fileType.length);\n        }\n        else\n        {\n            projectName = result['_metadata']['name'];\n        }\n        \n        app.getSession().setProjectName(projectName);\n\n        this.onPostImportSession(session);\n\n        return currentModule;\n    }\n}\n\nexport default SessionImporter;\n","const ALLOW_AUTOMATIC_REGISTER = false;\n\nconst Eventable = {\n    __eventListeners: null,\n    mixin(targetClass)\n    {\n        const targetPrototype = targetClass.prototype;\n        Object.assign(targetPrototype, Eventable);\n        delete targetPrototype.mixin;\n    },\n\n    registerEvent(eventName)\n    {\n        if (!this.__eventListeners) this.__eventListeners = new Map();\n\n        if (!this.__eventListeners.has(eventName))\n        {\n            this.__eventListeners.set(eventName, []);\n        }\n        else\n        {\n            throw new Error('Already registered event \\'' + eventName + '\\'');\n        }\n    },\n\n    unregisterEvent(eventName)\n    {\n        if (!this.__eventListeners) return;\n\n        if (this.__eventListeners.has(eventName))\n        {\n            this.__eventListeners.delete(eventName);\n        }\n        else\n        {\n            throw new Error('Unable to find event \\'' + eventName + '\\'');\n        }\n    },\n\n    addEventListener(eventName, listener)\n    {\n        if (!this.__eventListeners) this.__eventListeners = new Map();\n\n        let listeners;\n        if (this.__eventListeners.has(eventName))\n        {\n            listeners = this.__eventListeners.get(eventName);\n        }\n        else if (ALLOW_AUTOMATIC_REGISTER)\n        {\n            listeners = [];\n            this.__eventListeners.set(eventName, listeners);\n        }\n        else\n        {\n            throw new Error('Unable to find event \\'' + eventName + '\\'');\n        }\n\n        listeners.push(listener);\n    },\n\n    removeEventListener(eventName, listener)\n    {\n        if (!this.__eventListeners) return;\n\n        if (this.__eventListeners.has(eventName))\n        {\n            const listeners = this.__eventListeners.get(eventName);\n            let flag = false;\n            let i = listeners.length;\n            while (i--)\n            {\n                if (listeners[i] === listener)\n                {\n                    listeners.splice(i, 1);\n                    flag = true;\n                }\n            }\n\n            if (!flag)\n            {\n                throw new Error('Unable to find listener for event \\'' + eventName + '\\'');\n            }\n        }\n        else\n        {\n            throw new Error('Unknown event \\'' + eventName + '\\'');\n        }\n    },\n\n    clearEventListeners(eventName)\n    {\n        if (!this.__eventListeners) return;\n\n        if (!eventName)\n        {\n            this.__eventListeners.clear();\n        }\n        else if (this.__eventListeners.has(eventName))\n        {\n            const listeners = this.__eventListeners.get(eventName);\n            listeners.length = 0;\n        }\n        else if (ALLOW_AUTOMATIC_REGISTER)\n        {\n            const listeners = [];\n            this.__eventListeners.set(eventName, listeners);\n        }\n        else\n        {\n            throw new Error('Unable to find event \\'' + eventName + '\\'');\n        }\n    },\n\n    countEventListeners(eventName)\n    {\n        if (!this.__eventListeners) return 0;\n        return this.__eventListeners.has(eventName) ? this.__eventListeners.get(eventName).length : 0;\n    },\n\n    getEventListeners(eventName)\n    {\n        if (!this.__eventListeners) return null;\n        return this.__eventListeners.get(eventName);\n    },\n\n    on(eventName, listener)\n    {\n        this.addEventListener(eventName, listener);\n    },\n\n    once(eventName, listener)\n    {\n        const f = (...args) => \n        {\n            try\n            {\n                listener.apply(null, args);\n            }\n            finally\n            {\n                this.removeEventListener(eventName, f);\n            }\n        };\n\n        this.addEventListener(eventName, f);\n    },\n\n    emit(eventName, ...args)\n    {\n        try\n        {\n            if (!this.__eventListeners) return;\n\n            let listeners;\n            if (!this.__eventListeners.has(eventName))\n            {\n                if (ALLOW_AUTOMATIC_REGISTER)\n                {\n                    listeners = [];\n                    this.__eventListeners.set(eventName, listeners);\n                }\n                else\n                {\n                    throw new Error('Unable to find event \\'' + eventName + '\\'');\n                }\n            }\n            else\n            {\n                listeners = this.__eventListeners.get(eventName);\n\n                let result = null;\n                let i = listeners.length;\n                while (i--)\n                {\n                    try\n                    {\n                        result = listeners[i].apply(null, args);\n                    }\n                    catch (e)\n                    {\n                        continue;\n                    }\n\n                    if (result === true) break;\n                }\n            }\n        }\n        finally\n        {\n            this.onEventProcessed(eventName, ...args);\n        }\n    },\n\n    onEventProcessed(eventName, ...args)\n    {\n        //Do nothing.\n    }\n};\n\nexport default Eventable;\n","import GraphEdge from './GraphEdge.js';\nimport { getDirectionalVector, getMidPoint } from 'util/MathHelper.js';\n\n/**\n * A class that represents the curved edge elements of a graph.\n * \n * @see {@link NodeGraph}\n * @extends GraphEdge\n */\nclass QuadraticEdge extends GraphEdge\n{\n    /**\n   * Creates a quadratic edge with the unique id.\n   * @constructor\n   * @param {String} id           The element id for this node.\n   * @param {GraphNode} from      The from node of the edge.\n   * @param {GraphNode} [to=null] The to node of the edge.\n   */\n    constructor(id, from, to = null)\n    {\n        super(id, from, null);\n\n        //radians = the angle in radians, where 0 is the normal of midpoint\n        //length = the distance from midpoint\n        this._quad = {\n            radians: 0,\n            length: 0,\n            coords: { x: 0, y: 0 }\n        };\n\n        // Make sure to format it correctly when creating...\n        this.changeDestinationNode(to);\n    }\n\n    /**\n   * Set the angle of the curve in radians\n   * @param {Number} radians the radians the quadratic should be curved\n   * @returns {this}\n   */\n    setQuadraticRadians(radians)\n    {\n        this._quad.radians = radians;\n        return this;\n    }\n\n    /**\n   * Set the distance of the curve from the midpoint\n   * @param {Number} length the \"height\" of the curve\n   * @returns {this}\n   */\n    setQuadraticLength(length)\n    {\n        this._quad.length = length;\n        return this;\n    }\n\n    /**\n   * Calculates and sets the quadratic vertex to pass through the position.\n   * This will update the radians and length of the curve.\n   * @param {Number} x the x coordinate\n   * @param {Number} y the y coordinate\n   * @returns {this}\n   */\n    setQuadraticByCoords(x, y)\n    {\n        const from = this._from;\n        const to = this._to;\n        const fromx = from.x;\n        const fromy = from.y;\n        const tox = to.x;\n        const toy = to.y;\n\n        let dx = tox - fromx;\n        let dy = toy - fromy;\n        const midpointx = fromx + dx / 2;\n        const midpointy = fromy + dy / 2;\n\n        // Remember: y-axis is flipped because canvas coord-space is -y => +y\n        // Therefore, dy needs to be flipped\n        const angleOffset = Math.atan2(-dy, dx);\n        dx = x - midpointx;\n        dy = y - midpointy;\n\n        const PI = Math.PI;\n        const HALFPI = PI / 2;\n        // 0 rad = to the right\n        // Also: angleOffset is the offset from midpoint angle, the orthogonal base vector\n        // This is because the from and to could be flipped, and\n        // therefore give a negative, or at least a reversed angle.\n        let radians = Math.atan2(dy, dx) + angleOffset;\n        let length = Math.sqrt(dx * dx + dy * dy);\n        if (length < 0) length = 0;\n\n        // -PI / 2 is outward\n        const outrad = radians - (-HALFPI);\n        // PI / 2 is inward\n        const inrad = radians - (HALFPI);\n        // TODO: Should be dependent on length, instead of a constant.\n        const maxdr = PI / 20;\n\n        if (Math.abs(length) < 8)\n        {\n            radians = 0;\n            length = 0;\n        }\n        else if (outrad < maxdr && outrad > -maxdr)\n        {\n            // -PI / 2 is outward\n            radians = -HALFPI;\n        }\n        else if (-inrad < maxdr && -inrad > -maxdr)\n        {\n            // PI / 2 is inward\n            radians = HALFPI;\n        }\n\n        this._quad.radians = radians;\n        this._quad.length = length;\n        return this;\n    }\n\n    getQuadraticLength() { return this._quad.length; }\n    getQuadraticRadians() { return this._quad.radians; }\n    getQuadratic() { return this._quad; }\n    isQuadratic() { return !this.isPlaceholder() && this._quad.length !== 0; }\n\n    getQuadraticAsCoords()\n    {\n        const from = this._from;\n        const to = this._to;\n        const dst = this._quad.coords;\n        if (from == null || to == null)\n        {\n            dst.x = 0;\n            dst.y = 0;\n        }\n        else\n        {\n            /*\n      //To mark dirty...\n      _capture: {\n        fx: 0, fy: 0,\n        tx: 0, ty: 0,\n        ql: 0, qr: 0\n      }\n      */\n            getDirectionalVector(from.x, from.y, to.x, to.y, this._quad.length, this._quad.radians, dst);\n        }\n        return dst;\n    }\n\n    /** @override */\n    getEdgeDirection()\n    {\n        let result = 0;\n        if (this.isQuadratic())\n        {\n            const coords = this.getQuadraticAsCoords();\n            result = Math.atan2(coords.y, coords.x) + Math.PI / 2;\n        }\n        else\n        {\n            result = super.getEdgeDirection();\n        }\n\n        return result;\n    }\n\n    /** @override */\n    getStartPoint(dst = { x: 0, y: 0 })\n    {\n        const from = this._from;\n        const to = this._to;\n\n        if (!from) throw new Error('Source of edge cannot be null.');\n        if (!to)\n        {\n            //Make sure to use quad for placeholder direction (not magnitude)\n            const px = Math.cos(this._quad.radians);\n            const py = Math.sin(this._quad.radians);\n            const nodeSize = from.getNodeSize();\n            dst.x = from.x + px * nodeSize;\n            dst.y = from.y + py * nodeSize;\n            return dst;\n        }\n\n        //Check if edge is following something other than a node...then remain flat\n        if (!to.getNodeSize || !this.isQuadratic())\n        {\n            getDirectionalVector(from.x, from.y, to.x, to.y, from.getNodeSize(), 0, dst);\n            dst.x += from.x;\n            dst.y += from.y;\n            return dst;\n        }\n        else\n        {\n            getMidPoint(from.x, from.y, to.x, to.y, dst);\n            const qcoords = this.getQuadraticAsCoords();\n            const qx = dst.x + qcoords.x;\n            const qy = dst.y + qcoords.y;\n            getDirectionalVector(from.x, from.y, qx, qy, from.getNodeSize(), this.isSelfLoop() ? (Math.PI / 4) : 0, dst);\n            dst.x += from.x;\n            dst.y += from.y;\n            return dst;\n        }\n    }\n\n    /** @override */\n    getCenterPoint(dst = { x: 0, y: 0 })\n    {\n        const from = this._from;\n        const to = this._to;\n\n        if (!from) throw new Error('Source of edge cannot be null.');\n        if (!to)\n        {\n            //Make sure to use quad for placeholder direction (not magnitude)\n            const px = Math.cos(this._quad.radians);\n            const py = Math.sin(this._quad.radians);\n            const placeholderLength = from.getNodeSize() + this.getPlaceholderLength() / 2;\n            dst.x = from.x + px * placeholderLength;\n            dst.y = from.y + py * placeholderLength;\n            return dst;\n        }\n\n        getMidPoint(from.x, from.y, to.x, to.y, dst);\n\n        if (this.isQuadratic())\n        {\n            const qcoords = this.getQuadraticAsCoords();\n            dst.x += qcoords.x;\n            dst.y += qcoords.y;\n        }\n\n        return dst;\n    }\n\n    /** @override */\n    getEndPoint(dst = { x: 0, y: 0 })\n    {\n        const from = this._from;\n        const to = this._to;\n\n        if (!from) throw new Error('Source of edge cannot be null.');\n        if (!to)\n        {\n            //Make sure to use quadCoords for placeholder direction (not magnitude)\n            const px = Math.cos(this._quad.radians);\n            const py = Math.sin(this._quad.radians);\n            const placeholderLength = from.getNodeSize() + this.getPlaceholderLength();\n            dst.x = from.x + px * placeholderLength;\n            dst.y = from.y + py * placeholderLength;\n            return dst;\n        }\n\n        //Get end point for non-nodes...\n        if (!to.getNodeSize)\n        {\n            return to;\n        }\n        //Get end point for straight edges...\n        else if (!this.isQuadratic())\n        {\n            getDirectionalVector(to.x, to.y, from.x, from.y, to.getNodeSize(), 0, dst);\n            dst.x += to.x;\n            dst.y += to.y;\n            return dst;\n        }\n        //Get end point for quadratics...\n        else\n        {\n            getMidPoint(from.x, from.y, to.x, to.y, dst);\n            const qcoords = this.getQuadraticAsCoords();\n            const qx = dst.x + qcoords.x;\n            const qy = dst.y + qcoords.y;\n            getDirectionalVector(to.x, to.y, qx, qy, to.getNodeSize(), this.isSelfLoop() ? -(Math.PI / 4.0) : 0, dst);\n            dst.x += to.x;\n            dst.y += to.y;\n            return dst;\n        }\n    }\n\n    /** @override */\n    getHashString(usePosition = true)\n    {\n        if (usePosition)\n        {\n            return super.getHashString(usePosition) + ':' + this._quad.radians + ',' + this._quad.length;\n        }\n        else\n        {\n            return super.getHashString(usePosition);\n        }\n    }\n\n    // DEPRECATED STUFF BELOW!!!\n\n    getSelfLoopHeight()\n    {\n        return this._from.getNodeSize();\n    }\n\n    formatAsSelfLoop()\n    {\n        this.setQuadraticRadians(-Math.PI / 2);\n        this.setQuadraticLength(this._from.getNodeSize() + this.getSelfLoopHeight());\n    }\n\n    formatAsPlaceholder(prevDest)\n    {\n    //Quad is re-used to determine edge angle for placeholder\n    //This can be used specifically for quad since regular quad is\n    //dependent on this._to != null, which placeholder assumes this._to == null.\n    //Also, quad.length is ignored, because the length should always be\n    //getPlaceholderLength(). This is resolved by getStartPoint(), etc.\n        if (prevDest)\n        {\n            const dx = this._from.x - prevDest.x;\n            const dy = this._from.y - prevDest.y;\n            const angle = -Math.atan2(dx, dy) - (Math.PI / 2);\n            this._quad.radians = angle;\n        }\n        else\n        {\n            this._quad.radians = 0;\n        }\n    }\n\n    /** @override */\n    changeDestinationNode(node)\n    {\n        const prevDest = this._to;\n\n        //Just to optimize this a little :)\n        if (prevDest === node) return;\n\n        super.changeDestinationNode(node);\n\n        if (this.isPlaceholder())\n        {\n            this.formatAsPlaceholder(prevDest);\n        }\n        else if (this.isSelfLoop())\n        {\n            this.formatAsSelfLoop();\n        }\n    }\n}\n\nexport default QuadraticEdge;","import NodeGraph from 'graph/NodeGraph.js';\nimport FSANode from './FSANode.js';\nimport FSAEdge, { SYMBOL_SEPARATOR } from './FSAEdge.js';\n\nconst PARALLEL_EDGE_HEIGHT = 10;\n\nclass FSAGraph extends NodeGraph\n{\n    constructor()\n    {\n        super(FSANode, FSAEdge);\n\n        this._nodes = [];\n    }\n\n    setStartNode(node)\n    {\n        if (this._nodes.length <= 0) throw new Error('Cannot set start node to empty graph');\n\n        //There is only one node, and that is already the start node\n        if (this._nodes.length === 1) return;\n\n        const i = this._nodes.indexOf(node);\n        if (i > 0)\n        {\n            //This does a swap; we could do a prepend but that's more costly...\n            const prev = this._nodes[0];\n            this._nodes[0] = node;\n            this._nodes[i] = prev;\n        }\n        else if (i < 0)\n        {\n            throw new Error('Cannot set start node for unknown node');\n        }\n    }\n\n    getStartNode()\n    {\n        return this._nodes.length > 0 ? this._nodes[0] : null;\n    }\n\n    /** @override */\n    addNode(node)\n    {\n        this._nodes.push(node);\n        return super.addNode(node);\n    }\n\n    /** @override */\n    deleteNode(node)\n    {\n        super.deleteNode(node);\n        const i = this._nodes.indexOf(node);\n        if (i >= 0) this._nodes.splice(i, 1);\n    }\n\n    /** @override */\n    clearNodes()\n    {\n        super.clearNodes();\n        this._nodes.length = 0;\n    }\n\n    //This is more like addEdge() without adding it to the graph and just returns the result\n    //This should only be called once when completing an edge\n    /** @override */\n    formatEdge(edge)\n    {\n        const edgeSource = edge.getEdgeFrom();\n        const edgeDestination = edge.getEdgeTo();\n        const edgeLabel = edge.getEdgeSymbolsFromLabel();\n\n        //Look for an existing edge with similar from and to\n        for (const otherEdge of this.getEdges())\n        {\n            if (otherEdge === edge) continue;\n            if (otherEdge.getEdgeFrom() === edgeSource && otherEdge.getEdgeTo() === edgeDestination)\n            {\n                const otherSymbols = otherEdge.getEdgeSymbolsFromLabel();\n                if (edgeLabel.length > 0)\n                {\n                    const result = otherSymbols.concat(edgeLabel);\n                    otherEdge.setEdgeLabel(result.join(SYMBOL_SEPARATOR));\n                }\n\n                //Merged with newfound edge...\n                return otherEdge;\n            }\n        }\n\n        //Otherwise, format the current edge\n\n        if (!edge.isSelfLoop())\n        {\n            let flag = false;\n\n            //Bend away if there is another edge not bent with the same src/dst\n            const parallelEdgeHeight = PARALLEL_EDGE_HEIGHT;\n            const HALFPI = Math.PI / 2;\n            for (const otherEdge of this.getEdges())\n            {\n                if (otherEdge.isQuadratic() && Math.abs(otherEdge.getQuadratic().length) >= parallelEdgeHeight * 2) continue;\n                if ((otherEdge.getEdgeTo() === edgeSource && otherEdge.getEdgeFrom() === edgeDestination))\n                {\n                    edge.setQuadraticRadians(HALFPI).setQuadraticLength(parallelEdgeHeight);\n                    otherEdge.setQuadraticRadians(HALFPI).setQuadraticLength(parallelEdgeHeight);\n                    flag = true;\n\n                    //ASSUMES that there will only ever be 2 edges that are parallel...\n                    break;\n                }\n            }\n\n            //Try to move the edge away from intersecting nodes...\n            if (!flag)\n            {\n                const maxNodeSize = Math.max(edgeSource.getNodeSize(), edgeDestination.getNodeSize());\n                const x1 = edgeSource.x;\n                const y1 = edgeSource.y;\n                const x2 = edgeDestination.x;\n                const y2 = edgeDestination.y;\n                const dist12sq = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\n                let vertical = false;\n                let m = 0;\n                let b = 0;\n\n                if (x1 > x2)\n                {\n                    m = (y1 - y2) / (x1 - x2);\n                    b = y2 - m * x2;\n                }\n                else if (x1 < x2)\n                {\n                    m = (y2 - y1) / (x2 - x1);\n                    b = y1 - m * x1;\n                }\n                else\n                {\n                    vertical = true;\n                }\n\n                for (const node of this.getNodes())\n                {\n                    if (node === edgeSource || node === edgeDestination) continue;\n\n                    const x0 = node.x;\n                    const y0 = node.y;\n\n                    const dist01sq = (x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0);\n                    const dist02sq = (x2 - x0) * (x2 - x0) + (y2 - y0) * (y2 - y0);\n                    if (dist01sq > dist12sq || dist02sq > dist12sq) continue;\n\n                    let dist = 0;\n                    if (vertical)\n                    {\n                        dist = Math.abs(x1 - x0);\n                    }\n                    else\n                    {\n                        dist = Math.abs(b + m * x0 - y0) / Math.sqrt(1 + m * m);\n                    }\n\n                    if (dist < node.getNodeSize())\n                    {\n                        flag = true;\n                        break;\n                    }\n                }\n\n                if (flag)\n                {\n                    edge.setQuadraticRadians(-Math.PI / 2);\n                    edge.setQuadraticLength(maxNodeSize + 10);\n                }\n            }\n        }\n\n        return edge;\n    }\n}\n\nexport default FSAGraph;\n","import GraphNode from './elements/GraphNode.js';\nimport GraphEdge from './elements/GraphEdge.js';\nimport { guid, stringHash } from 'util/MathHelper.js';\n\n/**\n * A class that represents a graph that coordinates nodes and edges.\n * \n */\nclass NodeGraph\n{\n    /**\n   * Create a NodeGraph.\n   * \n   * @param {Class} [nodeClass=GraphNode] The class that represents a node.\n   * @param {Class} [edgeClass=GraphEdge] The class that represents an edge.\n   */\n    constructor(nodeClass = GraphNode, edgeClass = GraphEdge)\n    {\n        this._nodeClass = nodeClass;\n        this._edgeClass = edgeClass;\n\n        this._nodeMapping = new Map();\n        this._edgeMapping = new Map();\n    }\n\n    /**\n   * Removes all nodes and edges from the graph.\n   */\n    clear()\n    {\n        this.clearEdges();\n        this.clearNodes();\n    }\n\n    /**\n   * Checks whether there exists any number of nodes or edges.\n   * @returns {Boolean} Whether the graph is empty.\n   */\n    isEmpty()\n    {\n        return this._nodeMapping.size <= 0 && this._edgeMapping.size <= 0;\n    }\n\n    /**\n   * Computes the boundaries of the graph that surrounds all nodes and edges. If\n   * the graph is empty, a rectangle at the origin of size 1 is returned.\n   * @returns {Object} The object which represents the bounding rectangle. It has\n   *                  the properties: minX, minY, maxX, maxY, width, height.\n   */\n    getBoundingRect()\n    {\n        if (this._nodeMapping.size <= 0) return {\n            minX: 0,\n            minY: 0,\n            maxX: 1,\n            maxY: 1,\n            width: 1,\n            height: 1\n        };\n\n        var minNX = Number.MAX_VALUE;\n        var minNY = Number.MAX_VALUE;\n        var maxNX = Number.MIN_VALUE;\n        var maxNY = Number.MIN_VALUE;\n\n        var maxNodeSize = 0;\n        for (const node of this._nodeMapping.values())\n        {\n            const x = node.x;\n            const y = node.y;\n            const size = node.getNodeSize();\n            if (size > maxNodeSize) maxNodeSize = size;\n\n            minNX = Math.min(minNX, x);\n            maxNX = Math.max(maxNX, x);\n\n            minNY = Math.min(minNY, y);\n            maxNY = Math.max(maxNY, y);\n        }\n\n        minNX -= maxNodeSize;\n        minNY -= maxNodeSize;\n        maxNX += maxNodeSize;\n        maxNY += maxNodeSize;\n\n        var minEX = Number.MAX_VALUE;\n        var minEY = Number.MAX_VALUE;\n        var maxEX = Number.MIN_VALUE;\n        var maxEY = Number.MIN_VALUE;\n\n        const startPoint = { x: 0, y: 0 };\n        const endPoint = { x: 0, y: 0 };\n        const centerPoint = { x: 0, y: 0 };\n        for (const edge of this._edgeMapping.values())\n        {\n            //Will store into point objects...\n            edge.getStartPoint(startPoint);\n            edge.getEndPoint(endPoint);\n            edge.getCenterPoint(centerPoint);\n\n            const sx = startPoint.x;\n            const sy = startPoint.y;\n            const ex = endPoint.x;\n            const ey = endPoint.y;\n            const cx = centerPoint.x;\n            const cy = centerPoint.y;\n\n            minEX = Math.min(minEX, sx, ex, cx);\n            maxEX = Math.max(maxEX, sx, ex, cx);\n\n            minEY = Math.min(minEY, sy, ey, cy);\n            maxEY = Math.max(maxEY, sy, ey, cy);\n        }\n\n        const result = {\n            minX: Math.min(minNX, minEX),\n            minY: Math.min(minNY, minEY),\n            maxX: Math.max(maxNX, maxEX),\n            maxY: Math.max(maxNY, maxEY),\n            width: 0,\n            height: 0\n        };\n        result.width = result.maxX - result.minX;\n        result.height = result.maxY - result.minY;\n        return result;\n    }\n\n    /**\n   * Computes a unique and persistent hash code that describes the current\n   * state.\n   * @param  {Boolean} [usePosition=true] Whether to consider the positioning as\n   *                                      part of the graph's state.\n   * @returns {Number}                    the hash code.\n   */\n    getHashCode(usePosition = true)\n    {\n        let string = '';\n        for (const node of this._nodeMapping.values())\n        {\n            string += node.getHashString(usePosition) + ',';\n        }\n        string += '|';\n        for (const edge of this._edgeMapping.values())\n        {\n            string += edge.getHashString(usePosition) + ',';\n        }\n        return stringHash(string);\n    }\n\n    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= NODES\n\n    /**\n   * Create node for graph.\n   * @param  {Number} [x=0]       the initial x position\n   * @param  {Number} [y=0]       the initial y position\n   * @param  {String} [id=null]   the new node id (will be generated if null)\n   * @returns {GraphNdoe}         the new node\n   */\n    createNode(x = 0, y = 0, id = null)\n    {\n        return this.addNode(new (this._nodeClass)(id || guid(), x, y));\n    }\n\n    /**\n   * Add existing node to the graph. Any edges connected to the node are NOT\n   * deleted in the process. (so pls delete them first.)\n   * @param {GraphNode} node The node to be added.\n   * @returns {GraphNode} The node that was added to the graph.\n   */\n    addNode(node)\n    {\n        if (!node.getGraphElementID()) node.setGraphElementID(guid());\n        this._nodeMapping.set(node.getGraphElementID(), node);\n        return node;\n    }\n\n    /**\n   * Delete node from graph. Any edges whose source is the target node are also\n   * deleted.\n   * @param  {GraphNode} node        Target node to be deleted.\n   */\n    deleteNode(node)\n    {\n        const elementID = node.getGraphElementID();\n        if (this._nodeMapping.has(elementID))\n        {\n            this._nodeMapping.delete(elementID);\n\n            const nullSourceEdges = [];\n            //Find connected edges without sources...\n            for (const edge of this.getEdges())\n            {\n                if (edge.getEdgeFrom() === node)\n                {\n                    nullSourceEdges.push(edge);\n                }\n                else if (edge.getEdgeTo() === node)\n                {\n                    edge.setEdgeTo(null);\n                }\n            }\n            //Delete sourceless edges...\n            for (const edge of nullSourceEdges)\n            {\n                this.deleteEdge(edge);\n            }\n        }\n    }\n\n    clearNodes() { this._nodeMapping.clear(); }\n\n    getNodeByElementID(elementID)\n    {\n        if (this._nodeMapping.has(elementID))\n        {\n            return this._nodeMapping.get(elementID);\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    getNodesByLabel(label, dst = [])\n    {\n        for (const node of this.getNodes())\n        {\n            if (node.getNodeLabel() === label)\n            {\n                dst.push(node);\n            }\n        }\n        return dst;\n    }\n\n    getNodes() { return Array.from(this._nodeMapping.values()); }\n    getNodeCount() { return this._nodeMapping.size; }\n    getNodeClass() { return this._nodeClass; }\n\n    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= EDGES\n\n    /**\n   * This is more like addEdge() without adding it to the graph and just returns the result.\n   * This should only be called once when completing an edge.\n   */\n    formatEdge(edge)\n    {\n        return edge;\n    }\n\n    /**\n   * Create edge for graph. The id argument can be used to set the id to a\n   * pre-defined value instead of generating a new one.\n   * @param  {GraphNode} from                     the source graph node for the edge\n   * @param  {GraphNode|InputPointer} [to=null]   the destination graph node for the edge\n   * @param  {String} [id=null]                   the new edge id (will be generated if null)\n   * @returns {GraphEdge}                         the new edge\n   */\n    createEdge(from, to = null, id = null)\n    {\n        return this.addEdge(new (this._edgeClass)(id || guid(), from, to));\n    }\n\n    /**\n   * Add existing edge to the graph.\n   * \n   * Assumes that the passed-in edge does not have conflicting id's within this graph.\n   * @param {GraphEdge} edge    the edge to be added.\n   * @returns {GraphEdge}       the edge that was added to the graph.\n   */\n    addEdge(edge)\n    {\n        if (!edge.getGraphElementID()) edge.setGraphElementID(guid());\n        this._edgeMapping.set(edge.getGraphElementID(), edge);\n        return edge;\n    }\n\n    /**\n   * Delete edge from graph. The from and to nodes of the target edge are not\n   * modified.\n   * @param  {GraphEdge} edge      target edge to be deleted.\n   */\n    deleteEdge(edge)\n    {\n        const elementID = edge.getGraphElementID();\n        if (this._edgeMapping.has(elementID))\n        {\n            this._edgeMapping.delete(elementID);\n        }\n    }\n\n    clearEdges() { this._edgeMapping.clear(); }\n\n    getEdgeByElementID(elementID)\n    {\n        if (this._edgeMapping.has(elementID))\n        {\n            return this._edgeMapping.get(elementID);\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    getEdgesByLabel(label, dst = [])\n    {\n        for (const edge of this.getEdges())\n        {\n            if (edge.getEdgeLabel() === label)\n            {\n                dst.push(edge);\n            }\n        }\n        return dst;\n    }\n\n    getEdges() { return Array.from(this._edgeMapping.values()); }\n    getEdgeCount() { return this._edgeMapping.size; }\n    getEdgeClass() { return this._edgeClass; }\n}\n\nexport default NodeGraph;\n","export const FILE_TYPE_PNG = 'png';\nexport const FILE_TYPE_JPG = 'jpg';\nexport const FILE_TYPE_SVG = 'svg';\n\nexport function downloadText(filename, textData)\n{\n    downloadURL(filename, getTextDataURI(textData));\n}\n\nfunction createBlobFromSVG(svg)\n{\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(svg);\n    const blob = new Blob([svgString], { type: 'image/svg+xml' });\n    return blob;\n}\n\nexport function downloadImageFromSVG(filename, filetype, svg, width, height)\n{\n    const blob = createBlobFromSVG(svg);\n    switch (filetype)\n    {\n    case FILE_TYPE_PNG:\n    case FILE_TYPE_JPG:\n        {\n            const url = URL.createObjectURL(blob);\n\n            const canvas = document.createElement('canvas');\n            const ctx = canvas.getContext('2d');\n            const pixelRatio = window.devicePixelRatio || 1;\n            canvas.width = width * pixelRatio;\n            canvas.height = height * pixelRatio;\n            canvas.style.width = width + 'px';\n            canvas.style.height = height + 'px';\n            ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\n            const image = new Image();\n            image.onload = () => \n            {\n                ctx.drawImage(image, 0, 0);\n                URL.revokeObjectURL(url);\n\n                const imageURI = canvas.toDataURL('image/' + filetype).replace('image/' + filetype, 'image/octet-stream');\n                downloadURL(filename + '.' + filetype, imageURI);\n            };\n            image.src = url;\n        }\n        break;\n    case FILE_TYPE_SVG:\n        {\n            const reader = new FileReader();\n            reader.onload = () => \n            {\n                downloadURL(filename + '.' + filetype, reader.result);\n            };\n            reader.readAsDataURL(blob);\n        }\n        break;\n    default:\n        throw new Error('Unknown file type \\'' + filetype + '\\'');\n    }\n}\n\nexport function downloadURL(filename, url)\n{\n    const element = document.createElement('a');\n    const headerIndex = url.indexOf(';');\n    url = url.substring(0, headerIndex + 1) + 'headers=Content-Disposition%3A%20attachment%3B%20filename=' + filename + ';' + url.substring(headerIndex + 1);\n    element.setAttribute('href', url);\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n    document.body.removeChild(element);\n}\n\nfunction getTextDataURI(data)\n{\n    return 'data:text/plain; charset=utf-8,' + encodeURIComponent(data);\n}\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M16.59 7.58L10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M19 8l-4 4h3c0 3.31-2.69 6-6 6-1.01 0-1.97-.25-2.8-.7l-1.46 1.46C8.97 19.54 10.43 20 12 20c4.42 0 8-3.58 8-8h3l-4-4zM6 12c0-3.31 2.69-6 6-6 1.01 0 1.97.25 2.8.7l1.46-1.46C15.03 4.46 13.57 4 12 4c-4.42 0-8 3.58-8 8H1l4 4 4-4H6z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M13,6V11H18V7.75L22.25,12L18,16.25V13H13V18H16.25L12,22.25L7.75,18H11V13H6V16.25L1.75,12L6,7.75V11H11V6H7.75L12,1.75L16.25,6H13Z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 26 26\">\n                <path d=\"M 11.5 -0.03125 C 9.542969 -0.03125 7.96875 1.59375 7.96875 3.5625 L 7.96875 4 L 4 4 C 3.449219 4 3 4.449219 3 5 L 3 6 L 2 6 L 2 8 L 4 8 L 4 23 C 4 24.644531 5.355469 26 7 26 L 19 26 C 20.644531 26 22 24.644531 22 23 L 22 8 L 24 8 L 24 6 L 23 6 L 23 5 C 23 4.449219 22.550781 4 22 4 L 18.03125 4 L 18.03125 3.5625 C 18.03125 1.59375 16.457031 -0.03125 14.5 -0.03125 Z M 11.5 2.03125 L 14.5 2.03125 C 15.304688 2.03125 15.96875 2.6875 15.96875 3.5625 L 15.96875 4 L 10.03125 4 L 10.03125 3.5625 C 10.03125 2.6875 10.695313 2.03125 11.5 2.03125 Z M 6 8 L 11.125 8 C 11.25 8.011719 11.371094 8.03125 11.5 8.03125 L 14.5 8.03125 C 14.628906 8.03125 14.75 8.011719 14.875 8 L 20 8 L 20 23 C 20 23.5625 19.5625 24 19 24 L 7 24 C 6.4375 24 6 23.5625 6 23 Z M 8 10 L 8 22 L 10 22 L 10 10 Z M 12 10 L 12 22 L 14 22 L 14 10 Z M 16 10 L 16 22 L 18 22 L 18 10 Z \"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n                <path d=\"M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14zM7 9h5v1H7z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm8.94 3c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06C6.83 3.52 3.52 6.83 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c4.17-.46 7.48-3.77 7.94-7.94H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","class InputHandler\n{\n    isTargetable(inputController, pointer, target, targetType)\n    {\n        return false;\n    }\n\n    onAction(inputController, graphController, pointer, target)\n    {\n        return false;\n    }\n\n    onDblAction(inputController, graphController, pointer, target)\n    {\n        return false;\n    }\n\n    onDragStart(inputController, graphController, pointer, target)\n    {\n        return false;\n    }\n\n    onDragMove(inputController, graphController, pointer, target)\n    {\n        return false;\n    }\n\n    onDragStop(inputController, graphController, pointer, target)\n    {\n        return false;\n    }\n}\nexport default InputHandler;\n","export function userClearGraph(app, graphOnly=false, callback=null)\n{\n    if (window.confirm(I18N.toString('alert.graph.clear')))\n    {\n        const module = app.getCurrentModule();\n        module.getGraphController().getGraph().clear();\n        if (!graphOnly)\n        {\n            app.getUndoManager().clear();\n            app.getSession().setProjectName(null);\n        }\n        else\n        {\n            app.getUndoManager().captureEvent();\n        }\n        if (callback) callback();\n    }\n}\n","import FSA, { State } from '../FSA.js';\n\nexport function convertToNFA(fsa, dst=new FSA(false))\n{\n    if (!fsa.isDeterministic())\n    {\n        dst.copy(fsa);\n        return dst;\n    }\n\n    dst.setDeterministic(false);\n    return dst;\n}\n\nexport function convertToDFA(fsa, dst=new FSA(true))\n{\n    if (fsa.isDeterministic())\n    {\n        dst.copy(fsa);\n        return dst;\n    }\n\n    dst.setDeterministic(true);\n\n    const startState = fsa.getStartState();\n\n    const dfaData = {\n        nfaSource: fsa,\n        //To keep track of dfa states in terms of nfa sets\n        dfaStateMap: new Map(),\n        //Array of final dfa states\n        dfaFinalStates: [],\n        //To keep track of dfa transitions in terms of dfa states\n        dfaTransitionMap: new Map(),\n        //The resultant dfa start state\n        dfaStartState: null,\n        //The trap state for all missing transitions\n        dfaTrapState: null\n    };\n\n    //Make new DFA start state\n    const startStatesByClosure = fsa.doClosureTransition(startState);\n    dfaData.dfaStartState = getDFAStateFromNFAStates(startStatesByClosure, dfaData);\n    dfaData.dfaTrapState = getDFAStateFromNFAStates([], dfaData);\n\n    //For every state from the NFA's powerset, add it to DFA with correct transitions\n    const statePowerSet = getPowerSetOfStates(fsa.getStates());\n    for(const nfaStates of statePowerSet)\n    {\n    //As long as it is not the empty set...\n        if (nfaStates.length > 0)\n        {\n            expandNFAStatesToDFA(nfaStates, dfaData);\n        }\n    }\n\n    //Make sure any unused symbols are added as transitions for every state...\n    for(const dfaState of dfaData.dfaStateMap.values())\n    {\n        for(const symbol of fsa.getAlphabet())\n        {\n            //If transition for symbol does not exist...\n            const dfaTransitionKey = getDFATransitionKeyFromDFAStateAndSymbol(dfaState, symbol, dfaData);\n            if (!dfaData.dfaTransitionMap.has(dfaTransitionKey))\n            {\n                dfaData.dfaTransitionMap.set(dfaTransitionKey, [dfaState, symbol, dfaData.dfaTrapState]);\n            }\n        }\n    }\n\n    //Compiled dfa data to dst\n    dst.clear();\n    //Add states\n    for(const dfaState of dfaData.dfaStateMap.values())\n    {\n        dst.addState(dfaState);\n    }\n\n    //Set start state\n    dst.setStartState(dfaData.dfaStartState);\n    //Set final states\n    for(const finalState of dfaData.dfaFinalStates)\n    {\n        dst.setFinalState(finalState);\n    }\n    //Add transitions (will also add any symbols used to alphabet)\n    for(const transition of dfaData.dfaTransitionMap.values())\n    {\n        dst.addTransition(transition[0], transition[2], transition[1]);\n    }\n    return dst;\n}\n\nfunction expandNFAStatesToDFA(nfaStates, dfaData)\n{\n    let fromDFAState = getDFAStateFromNFAStates(nfaStates, dfaData);\n    let dfaState = null;\n\n    let nfaTerminals = [];\n\n    for(const symbol of dfaData.nfaSource.getAlphabet())\n    {\n    //Get all closed reachable states...\n        for(const fromNFAState of nfaStates)\n        {\n            dfaData.nfaSource.doTerminalTransition(fromNFAState, symbol, nfaTerminals);\n        }\n\n        //If has reachable states...\n        if (nfaTerminals.length > 0)\n        {\n            dfaState = getDFAStateFromNFAStates(nfaTerminals, dfaData);\n\n            //Create transition for reachable state\n            //Should guarantee to be unique for state and symbol pair\n            const dfaTransitionKey = getDFATransitionKeyFromDFAStateAndSymbol(fromDFAState, symbol, dfaData);\n            dfaData.dfaTransitionMap.set(dfaTransitionKey, [fromDFAState, symbol, dfaState]);\n        }\n\n        //Reset list\n        nfaTerminals.length = 0;\n    }\n}\n\nfunction getNFAStateKeyFromNFAStates(nfaStates, dfaData)\n{\n    let result = '';\n    for(const nfaState of dfaData.nfaSource.getStates())\n    {\n        if (nfaStates.includes(nfaState))\n        {\n            result += 'x';\n        }\n        else\n        {\n            result += '-';\n        }\n    }\n    return result;\n}\n\nfunction getDFATransitionKeyFromDFAStateAndSymbol(dfaState, symbol, dfaData)\n{\n    return dfaState.getStateID() + ';' + symbol;\n}\n\nfunction getDFAStateFromNFAStates(nfaStates, dfaData)\n{\n    const nfaStateKey = getNFAStateKeyFromNFAStates(nfaStates, dfaData);\n    let result = dfaData.dfaStateMap.get(nfaStateKey);\n\n    //If it doesn't exist, create it...\n    if (!result)\n    {\n        let final = false;\n        //Compute the label from nfa states in set notation...\n        let dfaStateLabel = '{';\n        for(const state of nfaStates)\n        {\n            if (dfaStateLabel.length > 1)\n            {\n                dfaStateLabel += ',';\n            }\n            dfaStateLabel += state.getStateLabel();\n\n            //Check if nfa state is final state...\n            if (!final)\n            {\n                final = dfaData.nfaSource.isFinalState(state);\n            }\n        }\n        dfaStateLabel += '}';\n\n        //Create the state\n        result = new State(dfaStateLabel);\n        dfaData.dfaStateMap.set(nfaStateKey, result);\n\n        //If any nfa states is a final state, make dfa state final...\n        if (final)\n        {\n            dfaData.dfaFinalStates.push(result);\n        }\n    }\n\n    return result;\n}\n\nfunction getPowerSetOfStates(states)\n{\n    var result = [[]];\n\n    for(const state of states)\n    {\n        for(let i = 0, len = result.length; i < len; ++i)\n        {\n            result.push(result[i].concat(state));\n        }\n    }\n    return result;\n}\n","const MAX_COMPUTATION_STEPS = 1000;\n\nexport function solveFSA(fsa, input)\n{\n    if (typeof input === 'string') input = input[Symbol.iterator]();\n\n    if (fsa.isDeterministic())\n    {\n    //Solve if the DFA way...\n        let state = fsa.getStartState();\n        let symbol = null;\n\n        //Is testing null after assignment\n        while((symbol = input.next().value))\n        {\n            const states = fsa.doTransition(state, symbol);\n            if (states.length < 1) return false;\n            //DFA's should only return 1 output\n            state = states[0];\n        }\n        return fsa.isFinalState(state);\n    }\n    else\n    {\n    //Solve it the NFA way...\n        const cachedStates = [];\n        const cachedSymbols = [];\n\n        //Start with the start state...\n        const startState = fsa.getStartState();\n        //(index refers to the \"level\" of computation)\n        cachedStates.push({state: startState, index: 0});\n        //...and any state defined similarly by closure...\n        for(const relatedState of fsa.doClosureTransition(startState))\n        {\n            cachedStates.push({state: relatedState, index: 0});\n        }\n\n        //The next symbol to compute...\n        let symbol = null;\n\n        //Just to be safe from infinite loops...\n        let counter = 0;\n        while(cachedStates.length > 0)\n        {\n            symbol = input.next().value;\n            if (solveFSAByStep(fsa, symbol, cachedStates, cachedSymbols))\n            {\n                return true;\n            }\n\n            //HACK: This is to stop any infinite loops! This should be fixed in the future!\n            ++counter;\n            if (counter > MAX_COMPUTATION_STEPS)\n            {\n                return false;\n            }\n        }\n\n        return false;\n    }\n}\n\n//TODO: When an empty transition occurs, it does a closure transition.\n//The closure chain will be stored as a group\n//Any future transitions must not re-enter the group\nexport function solveFSAByStep(nfa, symbol, cachedStates, cachedSymbols)\n{\n    //initialize variables\n    let state = null;\n    let nextStates = [];\n    let nextIndex = 0;\n\n    if (symbol)\n    {\n        cachedSymbols.push(symbol);\n    }\n\n    for(const cstate of cachedStates)\n    {\n        state = cstate.state;\n        symbol = cstate.index < cachedSymbols.length ? cachedSymbols[cstate.index] : null;\n\n        if (symbol)\n        {\n            //Read to next state...\n            nextIndex = cstate.index + 1;\n            for(const nextState of nfa.doTerminalTransition(state, symbol))\n            {\n                nextStates.push({state: nextState, index: nextIndex});\n            }\n        }\n        else\n        {\n            if (nfa.isFinalState(state)) return true;\n        }\n\n        //Read none to next state...\n        nextIndex = cstate.index;\n    }\n    cachedStates.length = 0;\n    cachedStates.push(...nextStates);\n    return false;\n}\n","import FSA from '../FSA.js';\n// TODO: add function headers-\n\n// TODO:explain intersected FSA\nexport function intersectFSA(fsa1, fsa2, dst=new FSA(true))\n{\n    throw new Error('Unsupported operation - not yet implemented');\n}\n\n\nexport function intersectDFA(dfa1, dfa2, dst=new FSA(true))\n{\n    if (!checkSameAlphabet(dfa1, dfa2))\n        throw new Error('Mismatched machine alphabet');\n\n    const alphabet = dfa1.getAlphabet();\n    const start1 = dfa1.getStartState();\n    const start2 = dfa2.getStartState();\n\n    if (!start1 && !start2)\n    {\n        dst.clear();\n        return dst;\n    }\n    else if (!start1)\n    {\n        return dst.copy(dfa2);\n    }\n    else if (!start2)\n    {\n        return dst.copy(dfa1);\n    }\n\n    const pairIDs = new Map();\n    const finalPairIDs = new Set();\n    const transitions = [];\n\n    //Add start state pair\n    const startPair = [start1, start2];\n    const startPairID = start1.getStateID() + ':' + start2.getStateID();\n    if (dfa1.isFinalState(start1) && dfa2.isFinalState(start2))\n    {\n        finalPairIDs.add(startPairID);\n    }\n    pairIDs.set(startPairID, startPair);\n\n    //Add remaining states by symbol\n    const remainingPairIDs = [];\n    remainingPairIDs.push(startPairID);\n    while(remainingPairIDs.length > 0)\n    {\n        const parentPairID = remainingPairIDs.pop();\n        const parentPair = pairIDs.get(parentPairID);\n        const parent1 = parentPair[0];\n        const parent2 = parentPair[1];\n\n        const result = [];\n        for(const symbol of alphabet)\n        {\n            let state1;\n            let state2;\n\n            dfa1.doTransition(parent1, symbol, false, result);\n            if (result.length !== 1)\n            {\n                throw new Error('Found non-deterministic transition from \\'' +\n          parent1.getStateLabel() + '\\' for \\'' + symbol + '\\' - transitions to \\'' + result.join(',') + '\\'');\n            }\n            state1 = result[0];\n            result.length = 0;\n\n            dfa2.doTransition(parent2, symbol, false, result);\n            if (result.length !== 1)\n            {\n                throw new Error('Found non-deterministic transition from \\'' +\n          parent2.getStateLabel() + '\\' for \\'' + symbol + '\\' - transitions to \\'' + result.join(',') + '\\'');\n            }\n            state2 = result[0];\n            result.length = 0;\n\n            //Get cartesian-product equivalent\n            const newPairID = state1.getStateID() + ':' + state2.getStateID();\n            if (!pairIDs.has(newPairID))\n            {\n                pairIDs.set(newPairID, [state1, state2]);\n                remainingPairIDs.push(newPairID);\n\n                //Only accept if both do\n                if (dfa1.isFinalState(state1) && dfa2.isFinalState(state2))\n                {\n                    finalPairIDs.add(newPairID);\n                }\n            }\n\n            //Add the transition\n            transitions.push([\n                /*FROM PAIR ID*/ parentPairID,\n                /*SYMBOL*/ symbol,\n                /*TO PAIR ID*/ newPairID\n            ]);\n        }\n    }\n\n    dst.clear();\n\n    //Add state/final pairs to the machine\n    const pairToState = new Map();\n    for(const [statePairID, statePair] of pairIDs.entries())\n    {\n        const state = dst.createState('(' + statePair[0].getStateLabel() + ',' + statePair[1].getStateLabel() + ')');\n        if (finalPairIDs.has(statePairID))\n        {\n            dst.setFinalState(state, true);\n        }\n        pairToState.set(statePairID, state);\n    }\n\n    //Add start pair to the machine\n    const startState = pairToState.get(startPairID);\n    if (!startState) throw new Error('Unable to find start state for pair');\n    dst.setStartState(startState);\n\n    //Add transitions to the machine\n    for(const transition of transitions)\n    {\n        const fromPairID = transition[0];\n        const symbol = transition[1];\n        const toPairID = transition[2];\n\n        const fromState = pairToState.get(fromPairID);\n        const toState = pairToState.get(toPairID);\n        if (!fromState || !toState) throw new Error('Cannot find state for pair');\n\n        dst.addTransition(fromState, toState, symbol);\n    }\n\n    return dst;\n}\n\nfunction checkSameAlphabet(fsa1, fsa2)\n{\n    const alphabet = new Set();\n    for(let symbol of fsa1.getAlphabet()) { alphabet.add(symbol); }\n\n    for(let symbol of fsa2.getAlphabet())\n    {\n        if (!alphabet.has(symbol))\n        {\n            return false;\n        }\n        else\n        {\n            alphabet.delete(symbol);\n        }\n    }\n\n    return alphabet.size <= 0;\n}\n","import FSA from '../FSA.js';\n\nexport function invertDFA(fsa, dst=new FSA(true))\n{\n    dst.copy(fsa);\n\n    const toBeRejected = new Set(dst.getFinalStates());\n    for(const state of dst.getStates())\n    {\n        if (toBeRejected.has(state))\n        {\n            dst.setFinalState(state, false);\n        }\n        else\n        {\n            dst.setFinalState(state, true);\n        }\n    }\n\n    return dst;\n}\n","import { convertToDFA } from './ConvertFSA.js';\nimport { intersectDFA } from './IntersectFSA.js';\nimport { invertDFA } from './InvertDFA.js';\n// import FSA from '../FSA.js';\n\nexport function isEquivalentFSA(fsa1, fsa2)\n{\n    const dfa1 = fsa1.isDeterministic() ? fsa1 : convertToDFA(fsa1);\n    const dfa2 = fsa2.isDeterministic() ? fsa2 : convertToDFA(fsa2);\n    return isEquivalentDFA(dfa1, dfa2);\n}\n\nexport function isEquivalentDFA(dfa1, dfa2)\n{\n    // L(dfa3) = L(dfa1) && !L(dfa2)\n    let dfa3 = intersectionOfComplement(dfa1, dfa2);\n    if (!dfa3) \n    {\n        //console.log(\"dfa1 and dfa2 use different alphabets\");\n        return false;\n    }\n    let dfa3acceptssomething = isLanguageNotEmpty(dfa3);\n    if(dfa3acceptssomething) \n    {\n        //console.log(`dfa1 accepts ${dfa3acceptssomething} while dfa2 doesn't`)\n        return false;\n    }\n    let dfa4 = intersectionOfComplement(dfa2, dfa1);\n    if (!dfa4) \n    {\n        //console.log(\"dfa1 and dfa2 use different alphabets\");\n        return false;\n    }\n    let dfa4acceptssometing = isLanguageNotEmpty(dfa4);\n    if(dfa4acceptssometing) \n    {\n        //console.log(`dfa2 accepts ${dfa4acceptssomething} while dfa1 doesn't`);\n        return false;\n    }\n    return true;\n    // L(dfa4) = L(dfa2) && !L(dfa1)\n}\n\n// TODO: move helper functions to seperate file\n// intersection is closed for DFA\nfunction intersectionOfComplement(dfa1, dfa2)\n{\n    // Returns false if used alphabet is different, else returns the common alphabet\n    const commonAlphabet = haveTheSameUsedAlphabet(dfa1, dfa2);\n    if (!commonAlphabet)\n        return null;\n\n    const inverted = invertDFA(dfa2);\n    return intersectDFA(dfa1, inverted);\n}\n\nfunction isLanguageNotEmpty(dfa)\n{\n    //Perform BFS from start state. If a final state can be reached, then the language\n    //is not empty, and the path is a witness. Else if no final states are ever reached,\n    //the language is empty\n    const explored = [];\n    const frontier = [dfa.getStartState()];\n    const path = new Map();\n    path.set(dfa.getStartState(), '');\n\n    while (frontier.length) \n    {\n        let current = frontier.shift();\n        explored.push(current);\n        let pathUpTill = path.get(current);\n\n        if (dfa.isFinalState(current)) \n        {\n            return pathUpTill;\n        }\n        for (const transition of dfa.getOutgoingTransitions(current)) \n        {\n            let dest = transition[2];\n            if(!explored.includes(dest) && !frontier.includes(dest)) \n            {\n                frontier.push(dest);\n                let symbol = transition[1];\n                path.set(dest, pathUpTill + symbol);\n            }\n        }\n    }\n    return false;\n}\n\n// TODO: same function in intersectFSA\nfunction haveTheSameUsedAlphabet(m1, m2)\n{\n    let alphabet1 = new Set();\n    let alphabet2 = new Set();\n    for (const symbol of m1.getAlphabet()) \n    {\n        if (m1.isUsedSymbol(symbol)) \n        {\n            alphabet1.add(symbol);\n        }\n    }\n    for (const symbol of m2.getAlphabet()) \n    {\n        if (m2.isUsedSymbol(symbol)) \n        {\n            alphabet2.add(symbol);\n        }\n    }\n    if (alphabet1.size != alphabet2.size)\n        return false;\n    for (const symbol of alphabet1) \n    {\n        if (!alphabet2.has(symbol))\n            return false;\n    }\n    return alphabet1;\n}\n\n/*\nexport function isEquivalentDFA(dfa1, dfa2)\n{\n  //Union the alphabets\n  const alphabet = new Set();\n  for(let symbol of dfa1.getAlphabet()) { alphabet.add(symbol); }\n  for(let symbol of dfa2.getAlphabet()) { alphabet.add(symbol); }\n\n  //TODO: to do later... :P\n\n  let s1 = null;\n  let s2 = null;\n  let newSet = null;\n\n  //1. For every state q in Q1 U Q2, MakeSet(q)\n  const sets = new Map();\n  const stack = [];\n  // - For each state q_1 in Q1, make {q_1}\n  let flag1 = false;\n  for(const q of dfa1.getStates())\n  {\n    s1 = \"1_\" + q.getStateID();\n    sets.set(s1, [s1]);\n    flag1 = true;\n  }\n  // - For each state q_2 in Q2, make {q_2}\n  let flag2 = false;\n  for(const q of dfa2.getStates())\n  {\n    s2 = \"2_\" + q.getStateID();\n    sets.set(s2, [s2]);\n    flag2 = true;\n  }\n  //This basically checks for the empty cases...\n  // - If no states exists in both, they are equivalent\n  if (sets.size == 0) return true;\n  // - If no states exists in either, they are not equivalent\n  if (!flag1 || !flag2) return false;\n\n  //2. Union(s1, s2) and Push(s1, s2) to stack S\n  // - Union(q_1, q_2) to refer to the same set\n  s1 = \"1_\" + dfa1.getStartState().getStateID();\n  s2 = \"2_\" + dfa2.getStartState().getStateID();\n  newSet = union(sets.get(s1), sets.get(s2));\n  sets.set(s1, newSet);\n  sets.set(s2, newSet);\n  // - Push(q_1, q_2) to stack\n  stack.push([s1, s2]);\n\n  //3. While S is not empty:\n  while(stack.length > 0)\n  {\n    //  a. Pop pair(q1, q2) from S\n    let set1 = null;\n    let set2 = null;\n    let pair = stack.pop();\n    //  b. For each a of Alphabet\n    for(const a of alphabet)\n    {\n      //    i. r1 = Find(Transition(q1, a))\n      const s1ID = pair[0].substring(2);\n      const s1SRC = dfa1.getStateByID(s1ID);\n      const s1Result = dfa1.doTransition(s1SRC, a);\n      if (s1Result.length > 0)\n      {\n        s1 = \"1_\" + s1Result[0].getStateID();\n        set1 = sets.get(s1);\n      }\n      //    ii. r2 = Find(Transition(q2, a))\n      const s2ID = pair[1].substring(2);\n      const s2SRC = dfa2.getStateByID(s2ID);\n      const s2Result = dfa2.doTransition(s2SRC, a);\n      if (s2Result.length > 0)\n      {\n        s2 = \"2_\" + s2Result[0].getStateID();\n        set2 = sets.get(s2);\n      }\n\n      // - if either lead no where, it is not a valid pair to work with.\n      if (!set1 || !set2) break;\n\n      //    iii. if r1 != r2\n      if (set1 !== set2)\n      {\n        //      1. Union(r1, r2) and Push(r1, r2) to S\n        //        - Union(q_1, q_2) to refer to the same set\n        newSet = union(set1, set2);\n        sets.set(s1, newSet);\n        sets.set(s2, newSet);\n        // - Update all elements in set to refer to the same set\n        for(const key of set1)\n        {\n          sets.set(key, newSet);\n        }\n        // - Update all elements in set to refer to the same set\n        for(const key of set2)\n        {\n          sets.set(key, newSet);\n        }\n        //        - Push(q_1, q_2) to stack\n        stack.push([s1, s2]);\n      }\n    }\n  }\n  //4. if no set contains a final and a non-final state\n  for(const states of sets.values())\n  {\n    let isFinal = false;\n    let isNotFinal = false;\n    for(const state of states)\n    {\n      if (state.startsWith(\"1_\"))\n      {\n        // - Whether a state that belongs to the first machine is a final or not\n        const stateID = state.substring(2);\n        const stateSRC = dfa1.getStateByID(stateID);\n        if (dfa1.isFinalState(stateSRC))\n        {\n          isFinal = true;\n        }\n        else\n        {\n          isNotFinal = true;\n        }\n      }\n      else if (state.startsWith(\"2_\"))\n      {\n        // - Whether a state that belongs to the second machine is a final or not\n        const stateID = state.substring(2);\n        const stateSRC = dfa2.getStateByID(stateID);\n        if (dfa2.isFinalState(stateSRC))\n        {\n          isFinal = true;\n        }\n        else\n        {\n          isNotFinal = true;\n        }\n      }\n      else\n      {\n        throw new Error(\"Found state from unknown machine.\");\n      }\n    }\n\n    // - If this set contains BOTH a final and non-final state, then it is not equal\n    if (isFinal && isNotFinal)\n    {\n      return false;\n    }\n  }\n  return true;\n};\n\nfunction union(set1, set2)\n{\n  const set = new Set();\n  for(const e of set1)\n  {\n    set.add(e);\n  }\n  for(const e of set2)\n  {\n    set.add(e);\n  }\n  return Array.from(set);\n}\n\n*/\n","export {convertToDFA, convertToNFA} from './util/ConvertFSA.js';\nexport {solveFSA, solveFSAByStep} from './util/SolveFSA.js';\nexport {isEquivalentFSA, isEquivalentDFA} from './util/EqualFSA.js';\nexport {invertDFA} from './util/InvertDFA.js';\nexport {intersectFSA, intersectDFA} from './util/IntersectFSA.js';\n","/**\n * Used by InputAdapter to hold input event data.\n */\nclass InputPointer\n{\n    constructor(inputAdapter, element, viewportAdapter)\n    {\n        this._inputAdapter = inputAdapter;\n        this._element = element;\n        this._viewportAdapter = viewportAdapter;\n\n        this._active = false;\n        this._x = 0;\n        this._y = 0;\n\n        this._inputpos = { x: 0, y: 0 };\n    }\n\n    get x() { return this._x; }\n    get y() { return this._y; }\n\n    setPosition(x, y)\n    {\n        this._x = x;\n        this._y = y;\n        return this;\n    }\n\n    beginInput()\n    {\n        this._active = true;\n        this._inputpos.x = this._x;\n        this._inputpos.y = this._y;\n    }\n\n    /**\n     * Returns the position which the input began at. This is mutable.\n     */\n    getInputEventPosition() { return this._inputpos; }\n\n    changeInputEventPosition(x, y)\n    {\n        this._inputpos.x = x;\n        this._inputpos.y = y;\n    }\n\n    endInput() { this._active = false; }\n    isActive() { return this._active; }\n\n    getDistanceSquToInitial()\n    {\n        const pos = this._inputpos;\n        const dx = pos.x - this._x;\n        const dy = pos.y - this._y;\n        return dx * dx + dy * dy;\n    }\n\n    /**\n     * The DOM element for which this pointer provides context for; this should be\n     * the same element as in the input adapter.\n     */\n    getElement() { return this._element; }\n\n    /**\n     * The viewport for this pointer operates within; this should be the same\n     * viewport as in the input adapter.\n     */\n    getViewportAdapter() { return this._viewportAdapter; }\n\n    /**\n     * The input adapter that controls this pointer's properties\n     */\n    getInputAdapter() { return this._inputAdapter; }\n}\n\nexport default InputPointer;\n","/**\n * Represents and handles the transformations to the interactible viewport of\n * the SVG element.\n */\nclass ViewportAdapter\n{\n    constructor()\n    {\n        this._element = null;\n        this._offsetX = 0;\n        this._offsetY = 0;\n        this._nextOffsetX = 0;\n        this._nextOffsetY = 0;\n        this._offsetDamping = 0.1;\n\n        this._scaleFactor = 1;\n        this._minScale = 1;\n        this._maxScale = 1;\n    }\n\n    setElement(element)\n    {\n        this._element = element;\n        return this;\n    }\n\n    setMinScale(scale)\n    {\n        this._minScale = scale;\n        if (this._scaleFactor < this._minScale) this._scaleFactor = this._minScale;\n        return this;\n    }\n\n    setMaxScale(scale)\n    {\n        this._maxScale = scale;\n        if (this._scaleFactor > this._maxScale) this._scaleFactor = this._maxScale;\n        return this;\n    }\n\n    setOffsetDamping(damping)\n    {\n        this._offsetDamping = damping;\n        return this;\n    }\n\n    update()\n    {\n        const dx = this._nextOffsetX - this._offsetX;\n        this._offsetX += dx * this._offsetDamping;\n        const dy = this._nextOffsetY - this._offsetY;\n        this._offsetY += dy * this._offsetDamping;\n    }\n\n    transformScreenToView(clientX, clientY)\n    {\n        if (!this._element) return {x: clientX - this._offsetX, y: clientY - this._offsetY};\n\n        const ctm = this._element.getScreenCTM();\n        return {\n            x: (clientX - ctm.e) / ctm.a - this._offsetX,\n            y: (clientY - ctm.f) / ctm.d - this._offsetY\n        };\n    }\n\n    setOffset(x, y, immediate=false)\n    {\n        if (immediate)\n        {\n            this._nextOffsetX = this._offsetX = x;\n            this._nextOffsetY = this._offsetY = y;\n        }\n        else\n        {\n            this._nextOffsetX = x;\n            this._nextOffsetY = y;\n        }\n    }\n\n    addOffset(dx, dy, immediate=false)\n    {\n        if (immediate)\n        {\n            this._offsetX += dx;\n            this._offsetY += dy;\n            this._nextOffsetX = this._offsetX;\n            this._nextOffsetY = this._offsetY;\n        }\n        else\n        {\n            this._nextOffsetX += dx;\n            this._nextOffsetY += dy;\n        }\n    }\n\n    setScale(scale) { this._scaleFactor = Math.min(this._maxScale, Math.max(this._minScale, scale)); }\n    addScale(dscale) { this._scaleFactor = Math.min(this._maxScale, Math.max(this._minScale, this._scaleFactor + dscale)); }\n    getOffsetX() { return this._offsetX; }\n    getOffsetY() { return this._offsetY; }\n    getOffsetDamping() { return this._offsetDamping; }\n    getScale() { return this._scaleFactor; }\n    getMinScale() { return this._minScale; }\n    getMaxScale() { return this._maxScale; }\n    getElement() { return this._element; }\n}\n\nexport default ViewportAdapter;\n","import InputContext from './InputContext.js';\nimport InputPointer from './InputPointer.js';\nimport ViewportAdapter from './ViewportAdapter.js';\n\nconst LONG_TAP_TICKS = 600;\nconst DOUBLE_TAP_TICKS = 600;\nconst SCROLL_SENSITIVITY = 1.0 / 300.0;\nconst CURSOR_RADIUS = 4;\nconst CURSOR_RADIUS_SQU = CURSOR_RADIUS * CURSOR_RADIUS;\nconst DRAGGING_BUFFER = 18;\nconst DRAGGING_BUFFER_SQU = DRAGGING_BUFFER * DRAGGING_BUFFER;\n\n/**\n * Provides an interface for input handlers to interact with a HTMLElement.\n * Each listenable element should correspond to only a single InputAdapter.\n */\nclass InputAdapter extends InputContext\n{\n    constructor()\n    {\n        super();\n        this._contexts = [];\n        this._activeDragHandler = null;\n\n        this._element = null;\n        this._cursor = {\n            _mousemove: null,\n            _mouseup: null,\n            _touchmove: null,\n            _touchend: null,\n            _timer: null\n        };\n        this._pointer = null;\n\n        this._viewportAdapter = new ViewportAdapter();\n\n        //Although dragging could be in pointer, it should be here to allow\n        //the adapter to be independent of pointer.\n        this._dragging = false;\n        this._altinput = false;\n\n        this._holdInputDelay = LONG_TAP_TICKS;\n        this._dblInputDelay = DOUBLE_TAP_TICKS;\n        this._scrollSensitivity = SCROLL_SENSITIVITY;\n        this._minTapRadius = CURSOR_RADIUS_SQU * 16;\n        this._draggingRadiusSqu = CURSOR_RADIUS_SQU + DRAGGING_BUFFER_SQU;\n\n        this._prevEmptyInput = false;\n        this._prevEmptyTime = 0;\n        this._prevEmptyX = 0;\n        this._prevEmptyY = 0;\n\n        this.onContextMenu = this.onContextMenu.bind(this);\n        this.onMouseDown = this.onMouseDown.bind(this);\n        this.onMouseMove = this.onMouseMove.bind(this);\n        this.onTouchStart = this.onTouchStart.bind(this);\n        this.onWheel = this.onWheel.bind(this);\n\n        this.onMouseDownThenMove = this.onMouseDownThenMove.bind(this);\n        this.onMouseDownThenUp = this.onMouseDownThenUp.bind(this);\n        this.onTouchStartThenMove = this.onTouchStartThenMove.bind(this);\n        this.onTouchStartThenEnd = this.onTouchStartThenEnd.bind(this);\n\n        this.onDelayedInputDown = this.onDelayedInputDown.bind(this);\n    }\n\n    bindContext(context)\n    {\n        if (!(context instanceof InputContext)) \n            throw new Error('Cannot bind invalid context - must be an instance of InputContext');\n      \n        this._contexts.unshift(context);\n        return this;\n    }\n\n    bindContextAsLast(context)\n    {\n        if (!(context instanceof InputContext)) \n            throw new Error('Cannot bind invalid context - must be an instance of InputContext');\n      \n        this._contexts.push(context);\n        return this;\n    }\n\n    unbindContext(context=null)\n    {\n        if (context)\n        {\n            const index = this._contexts.indexOf(context);\n            if (index >= 0)\n            {\n                this._contexts.splice(index, 1);\n                return context;\n            }\n            else\n            {\n                return null;\n            }\n        }\n        else\n        {\n            return this._contexts.shift();\n        }\n    }\n\n    clearContexts()\n    {\n        this._contexts.length = 0;\n    }\n\n    hasContexts()\n    {\n        return this._contexts.length > 0;\n    }\n\n    getCurrentContext()\n    {\n        if (this._contexts.length > 0)\n        {\n            return this._contexts[this._contexts.length - 1];\n        }\n        else\n        {\n            return this;\n        }\n    }\n\n    initialize(element)\n    {\n        if (!(element instanceof SVGElement)) throw new Error('Missing SVG element for input adapter\\'s viewport');\n        if (this._element) throw new Error('Trying to initialize an InputAdapter already initialized');\n\n        this._viewportAdapter.setElement(this._element = element);\n        this._pointer = new InputPointer(this, this._element, this._viewportAdapter);\n\n        this._element.addEventListener('mousedown', this.onMouseDown);\n        this._element.addEventListener('mousemove', this.onMouseMove);\n        this._element.addEventListener('touchstart', this.onTouchStart);\n        this._element.addEventListener('touchmove', this.onTouchMove);\n        this._element.addEventListener('contextmenu', this.onContextMenu);\n        this._element.addEventListener('wheel', this.onWheel);\n    }\n\n    destroy()\n    {\n        if (!this._element) throw new Error('Trying to destroy an InputAdapter that is not yet initialized');\n\n        this._element.removeEventListener('mousedown', this.onMouseDown);\n        this._element.removeEventListener('mousemove', this.onMouseMove);\n        this._element.removeEventListener('touchstart', this.onTouchStart);\n        this._element.removeEventListener('contextmenu', this.onContextMenu);\n        this._element.removeEventListener('wheel', this.onWheel);\n\n        this._element = null;\n    }\n\n    update()\n    {\n        if (this._element)\n        {\n            //Smooth transition offset\n            this._viewportAdapter.update();\n        }\n    }\n\n    /** @override */\n    handleEvent(eventName, ...eventArgs)\n    {\n        for(const context of this._contexts)\n        {\n            const result = context.handleEvent(eventName, ...eventArgs);\n            if (result)\n            {\n                return result;\n            }\n        }\n    \n        return super.handleEvent(eventName, ...eventArgs);\n    }\n\n    onMouseDown(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const cursor = this._cursor;\n\n        //Blur any element in focus\n        document.activeElement.blur();\n        this._element.focus();\n\n        //Make sure mouse move is deleted, just in case\n        if (cursor._mousemove)\n        {\n            document.removeEventListener('mousemove', cursor._mousemove);\n            cursor._mousemove = null;\n        }\n        //Make sure mouse up is deleted, just in case\n        if (cursor._mouseup)\n        {\n            document.removeEventListener('mouseup', cursor._mouseup);\n            cursor._mouseup = null;\n        }\n\n        //HACK: To allow Mac's to use ctrl+click as right clicks\n        const button = e.ctrlKey ? 2 : e.button;\n\n        //Is this a valid mouse down?\n        if (this.onInputDown(e.clientX, e.clientY, button))\n        {\n            //Start mouse down logic...\n            cursor._mousemove = this.onMouseDownThenMove;\n            cursor._mouseup = this.onMouseDownThenUp;\n\n            document.addEventListener('mousemove', cursor._mousemove);\n            document.addEventListener('mouseup', cursor._mouseup);\n        }\n\n        return false;\n    }\n\n    onMouseMove(e)\n    {\n        const mouse = this._viewportAdapter.transformScreenToView(e.clientX, e.clientY);\n        const pointer = this._pointer;\n        pointer.setPosition(mouse.x, mouse.y);\n\n        if (this.handleEvent('onMoveInputEvent', pointer))\n        {\n            e.stopPropagation();\n            e.preventDefault();\n\n            this.cancelInputEvent();\n        }\n    }\n\n    onMouseDownThenMove(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        this.onInputMove(e.clientX, e.clientY);\n\n        return false;\n    }\n\n    onMouseDownThenUp(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const cursor = this._cursor;\n\n        //Make sure mouse move is deleted, just in case\n        if (cursor._mousemove)\n        {\n            document.removeEventListener('mousemove', cursor._mousemove);\n            cursor._mousemove = null;\n        }\n        //Make sure mouse up is deleted, just in case\n        if (cursor._mouseup)\n        {\n            document.removeEventListener('mouseup', cursor._mouseup);\n            cursor._mouseup = null;\n        }\n\n        this.onInputUp(e.clientX, e.clientY);\n\n        return false;\n    }\n\n    onTouchStart(e)\n    {\n        if (e.changedTouches.length == 1)\n        {\n            e.stopPropagation();\n            e.preventDefault();\n\n            const cursor = this._cursor;\n\n            //Blur any element in focus\n            document.activeElement.blur();\n            this._element.focus();\n\n            //Make sure touch move is deleted, just in case\n            if (cursor._touchmove)\n            {\n                document.removeEventListener('touchmove', cursor._touchmove);\n                cursor._touchmove = null;\n            }\n            //Make sure touch end is deleted, just in case\n            if (cursor._touchend)\n            {\n                document.removeEventListener('touchend', cursor._touchend);\n                cursor._touchend = null;\n            }\n\n            const touch = e.changedTouches[0];\n            //Is this a valid touch start?\n            if (this.onInputDown(touch.clientX, touch.clientY, 0))\n            {\n                //Start touch start logic...\n                cursor._touchmove = this.onTouchStartThenMove;\n                cursor._touchend = this.onTouchStartThenEnd;\n\n                document.addEventListener('touchmove', cursor._touchmove);\n                document.addEventListener('touchend', cursor._touchend);\n            }\n\n            return false;\n        }\n    }\n\n    onTouchStartThenEnd(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const cursor = this._cursor;\n\n        //Make sure mouse move is deleted, just in case\n        if (cursor._touchmove)\n        {\n            document.removeEventListener('touchmove', cursor._touchmove);\n            cursor._touchmove = null;\n        }\n        //Make sure mouse up is deleted, just in case\n        if (cursor._touchend)\n        {\n            document.removeEventListener('touchend', cursor._touchend);\n            cursor._touchend = null;\n        }\n\n        const touch = e.changedTouches[0];\n        this.onInputUp(touch.clientX, touch.clientY);\n\n        return false;\n    }\n\n    onTouchStartThenMove(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const touch = e.changedTouches[0];\n        this.onInputMove(touch.clientX, touch.clientY);\n\n        return false;\n    }\n\n    onContextMenu(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        return false;\n    }\n\n    onWheel(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const pointer = this._pointer;\n        const dy = e.deltaY * this._scrollSensitivity;\n        const prev = this._viewportAdapter.getScale();\n        const next = prev + dy;\n\n        //Let others handle this event...\n        if (!this.handleEvent('onZoomChange', pointer, next, prev))\n        {\n            this._viewportAdapter.setScale(next);\n        }\n\n        return false;\n    }\n\n    onInputDown(x, y, button)\n    {\n    //Setup for hold timer...\n        const cursor = this._cursor;\n        const pointer = this._pointer;\n        const mouse = this._viewportAdapter.transformScreenToView(x, y);\n        pointer.setPosition(mouse.x, mouse.y);\n\n        this._dragging = false;\n        this._altinput = button == 2;\n\n        //Let others handle this event...\n        if (!this.handleEvent('onPreInputEvent', pointer))\n        {\n            pointer.beginInput();\n            cursor._timer = setTimeout(this.onDelayedInputDown, this._holdInputDelay);\n            return true;\n        }\n\n        return false;\n    }\n\n    onDelayedInputDown()\n    {\n    //That means the input is remaining still (like a hold)...\n        if (!this._dragging)\n        {\n            this._altinput = true;\n        }\n    }\n\n    onInputMove(x, y)\n    {\n        const pointer = this._pointer;\n        const mouse = this._viewportAdapter.transformScreenToView(x, y);\n        pointer.setPosition(mouse.x, mouse.y);\n\n        if (!this._dragging)\n        {\n            if (pointer.getDistanceSquToInitial() > this._draggingRadiusSqu)\n            {\n                this._dragging = true;\n\n                //Let others handle this event...\n                const inputEventPosition = pointer.getInputEventPosition();\n                const result = this.handleEvent('onDragStart', pointer, inputEventPosition.x, inputEventPosition.y);\n                if (!result)\n                {\n                    this._dragging = false;\n\n                    //TODO: you could NOT cancel the event and just update the target?\n                    //If so, who is the initial target then?\n\n                    //Stop the input event early...\n                    this.cancelInputEvent();\n                }\n                else\n                {\n                    this._activeDragHandler = result;\n                }\n            }\n            else\n            {\n                //Still a click or hold...\n            }\n        }\n        else\n        {\n            //Continue to drag...\n            if (this._activeDragHandler)\n            {\n                this._activeDragHandler.onDragMove(pointer);\n            }\n        }\n    }\n\n    onInputUp(x, y)\n    {\n        const cursor = this._cursor;\n        const timer = cursor._timer;\n        if (timer)\n        {\n            clearTimeout(timer);\n            cursor._timer = null;\n        }\n\n        //Update pointer target to final position\n        const pointer = this._pointer;\n        const mouse = this._viewportAdapter.transformScreenToView(x, y);\n        pointer.setPosition(mouse.x, mouse.y);\n\n        if (this._dragging)\n        {\n            //Stop dragging!\n            if (this._activeDragHandler)\n            {\n                this._activeDragHandler.onDragStop(pointer);\n                this._activeDragHandler = null;\n            }\n        }\n        else\n        {\n            if (this._altinput)\n            {\n                //Alt Tap!\n                this.handleEvent('onAltInputEvent', pointer);\n            }\n            else\n            {\n                //If the input was not consumed...\n                if (!this.handleEvent('onInputEvent', pointer))\n                {\n                    //Try for double tap...\n                    const dx = x - this._prevEmptyX;\n                    const dy = y - this._prevEmptyY;\n                    const dist = dx * dx + dy * dy;\n                    const dt = Date.now() - this._prevEmptyTime;\n                    if (this._prevEmptyInput &&\n            dist < this._minTapRadius &&\n            dt < this._dblInputDelay)\n                    {\n                        //Double tap!\n                        this.handleEvent('onDblInputEvent', pointer);\n\n                        this._prevEmptyInput = false;\n                    }\n                    else\n                    {\n                        this._prevEmptyInput = true;\n                        this._prevEmptyTime = Date.now();\n                        this._prevEmptyX = x;\n                        this._prevEmptyY = y;\n                    }\n                }\n            }\n        }\n\n        pointer.endInput();\n        this.handleEvent('onPostInputEvent', pointer);\n    }\n\n    cancelInputEvent()\n    {\n        const pointer = this._pointer;\n        const cursor = this._cursor;\n\n        //Make sure mouse move is deleted, just in case\n        if (cursor._mousemove)\n        {\n            document.removeEventListener('mousemove', cursor._mousemove);\n            cursor._mousemove = null;\n        }\n        //Make sure mouse up is deleted, just in case\n        if (cursor._mouseup)\n        {\n            document.removeEventListener('mouseup', cursor._mouseup);\n            cursor._mouseup = null;\n        }\n\n        const timer = cursor._timer;\n        if (timer)\n        {\n            clearTimeout(timer);\n            cursor._timer = null;\n        }\n\n        pointer.endInput();\n        this.handleEvent('onPostInputEvent', pointer);\n    }\n\n    getContexts() { return this._contexts; }\n    getActiveElement() { return this._element; }\n    getViewportAdapter() { return this._viewportAdapter; }\n    getPointerX() { return this._pointer ? this._pointer.x : 0; }\n    getPointerY() { return this._pointer ? this._pointer.y : 0; }\n    isPointerActive() { return this._pointer ? this._pointer.isActive() : false; }\n    isUsingTouch() { return this._cursor._touchmove || this._cursor._touchend; }\n    isAltInput() { return this._altinput; }\n    isDragging() { return this._dragging; }\n}\n\nexport default InputAdapter;","import React from 'react';\nimport Style from './ViewportComponent.css';\n\nimport InputAdapter from '../InputAdapter.js';\nimport AbstractInputHandler from '../AbstractInputHandler.js';\n\nconst DEFAULT_VIEW_SIZE = 300;\nconst SMOOTH_OFFSET_DAMPING = 0.4;\nconst MIN_SCALE = 0.1;\nconst MAX_SCALE = 10;\n\nclass ViewportComponent extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this._ref = React.createRef();\n\n        this._inputAdapter = new InputAdapter();\n        this._inputAdapter.getViewportAdapter()\n            .setMinScale(MIN_SCALE)\n            .setMaxScale(MAX_SCALE)\n            .setOffsetDamping(SMOOTH_OFFSET_DAMPING);\n    }\n\n    addInputHandler(inputHandler)\n    {\n        if (!(inputHandler instanceof AbstractInputHandler)) throw new Error('input handler must be an instanceof AbstractInputHandler');\n        this._inputAdapter.addInputHandler(inputHandler);\n        return this;\n    }\n\n    /** @override */\n    componentDidMount()\n    {\n        this._inputAdapter.initialize(this._ref.current);\n    }\n\n    /** @override */\n    componentWillUnmount()\n    {\n        this._inputAdapter.destroy();\n    }\n\n    /** @override */\n    componentDidUpdate()\n    {\n        this._inputAdapter.update();\n    }\n\n    getSVGTransformString()\n    {\n        const viewport = this._inputAdapter.getViewportAdapter();\n        return 'translate(' + viewport.getOffsetX() + ' ' + viewport.getOffsetY() + ')';\n    }\n\n    getSVGViewBoxString(baseViewSize)\n    {\n        const viewport = this._inputAdapter.getViewportAdapter();\n        const viewSize = baseViewSize * Math.max(Number.MIN_VALUE, viewport.getScale());\n        const halfViewSize = viewSize / 2;\n        return (-halfViewSize) + ' ' + (-halfViewSize) + ' ' + viewSize + ' ' + viewSize;\n    }\n\n    getSVGElement()\n    {\n        return this._ref.current;\n    }\n\n    getInputAdapter()\n    {\n        return this._inputAdapter;\n    }\n\n    /** @override */\n    render()\n    {\n        const viewBox = this.getSVGViewBoxString(this.props.viewSize || DEFAULT_VIEW_SIZE);\n        const transform = this.getSVGTransformString();\n\n        return (\n            <svg ref={this._ref}\n                id={this.props.id}\n                className={Style.viewport_component + ' ' + this.props.className}\n                style={this.props.style}\n                viewBox={viewBox}>\n                <g transform={transform}>\n                    {this.props.children}\n                </g>\n            </svg>\n        );\n    }\n}\n\nexport default ViewportComponent;","const LOCAL_STORAGE_ID = \"config\";\n\nconst cfg = {};\ncfg._resetOnLoad = false;\ncfg._userDefined = false;\ncfg._dirty = false;\ncfg.setValue = function(key, value) {\n  if (this.hasOwnProperty(key))\n  {\n    this._userDefined = true;\n    this._dirty = true;\n    this[key] = value;\n  }\n  else\n  {\n    throw new Error(\"Trying to assign value to non-existant key in config\");\n  }\n}.bind(cfg);\nexport default cfg;\n\n//Preferences\n\n//General\ncfg.MACHINE_ERRORS_MESSAGE_TAG = \"machineError\";\ncfg.MACHINE_CONVERSION_MESSAGE_TAG = \"machineConversion\";\n\ncfg.ERROR_CHECK_INTERVAL = 2000;\ncfg.GRAPH_IMMEDIATE_INTERVAL = 50;\n\n//Controller\ncfg.SMOOTH_OFFSET_DAMPING = 0.4;\ncfg.SCROLL_SENSITIVITY = 1.0 / 300.0;\ncfg.MIN_SCALE = 0.1;\ncfg.MAX_SCALE = 10;\n\n//Workspace\ncfg.INIT_WAITTIME = 1500;\n\n//NodalGraph\ncfg.STR_TRANSITION_DEFAULT_LABEL = \"\";\ncfg.STR_STATE_LABEL = \"q\";\ncfg.PARALLEL_EDGE_HEIGHT = 10;\ncfg.SELF_LOOP_HEIGHT = 40;\n\n//Input Fields\ncfg.SUBMIT_KEY = 13; //ENTER\ncfg.CLEAR_KEY = 27; //ESCAPE\ncfg.TAB_KEY = 9; //TAB\ncfg.UP_KEY = 38; //UP\ncfg.DOWN_KEY = 40; //DOWN\ncfg.DELETE_KEY = 8; //DELETE\n\n/** LEGACY CONFIG **/\n\n//Input\ncfg.DELETE_FORWARD_KEY = 46; //DELETE FORWARD\n\n//Geometry\ncfg.DEFAULT_GRAPH_SIZE = 300;\n\ncfg.NODE_RADIUS = 16;\ncfg.NODE_RADIUS_SQU = cfg.NODE_RADIUS * cfg.NODE_RADIUS;\ncfg.NODE_DIAMETER = cfg.NODE_RADIUS * 2;\ncfg.NODE_RADIUS_INNER = 12;\n\ncfg.INITIAL_MARKER_OFFSET_X = -(cfg.NODE_RADIUS + (cfg.NODE_RADIUS / 2));\n\ncfg.EDGE_RADIUS = 12;\ncfg.EDGE_RADIUS_SQU = cfg.EDGE_RADIUS * cfg.EDGE_RADIUS;\ncfg.ARROW_WIDTH = 10;\ncfg.PLACEHOLDER_LENGTH = cfg.NODE_RADIUS * 3;\ncfg.ENDPOINT_RADIUS = 6;\ncfg.ENDPOINT_RADIUS_SQU = cfg.ENDPOINT_RADIUS * cfg.ENDPOINT_RADIUS;\n\ncfg.HOVER_RADIUS_OFFSET = 4;\ncfg.CURSOR_RADIUS = 4;\ncfg.CURSOR_RADIUS_SQU = cfg.CURSOR_RADIUS * cfg.CURSOR_RADIUS;\n\n//Interface\ncfg.DOUBLE_TAP_TICKS = 600;\ncfg.LONG_TAP_TICKS = 600;\ncfg.SPAWN_RADIUS = 64;\ncfg.DEFAULT_SHOULD_DESTROY_POINTLESS_EDGE = true;\ncfg.DRAGGING_BUFFER = 18;\ncfg.DRAGGING_BUFFER_SQU = cfg.DRAGGING_BUFFER * cfg.DRAGGING_BUFFER;\n\n//Graph sorting\ncfg.PADDING_RADIUS_SQU = 2304;\n\n\n/** LOCAL STORAGE FUNCTIONS **/\n\n//check if browser support local storage\nexport function doesSupportLocalStorage()\n{\n  return typeof(Storage) !== 'undefined';\n}\n\nexport function loadConfig()\n{\n  const jsonString = localStorage.getItem(LOCAL_STORAGE_ID);\n  //If cannot find a config...\n  if (!jsonString)\n  {\n    //Just use the default one and don't save anything...\n    console.log(\"Using default config...\");\n    return;\n  }\n\n  try\n  {\n    console.log(\"Loading config...\");\n    const jsonData = JSON.parse(jsonString);\n    if (jsonData['_resetOnLoad'] == true)\n    {\n      //Reset the config\n      clearConfig();\n\n      //Save a new config\n      saveConfig();\n    }\n    else\n    {\n      Object.assign(cfg, jsonData);\n    }\n  }\n  catch (e)\n  {\n    //Reset the config\n    clearConfig();\n  }\n};\n\nexport function saveConfig(forceSave=false)\n{\n  if (forceSave || (cfg._userDefined && cfg._dirty))\n  {\n    try\n    {\n      console.log(\"Saving config...\");\n      const jsonString = JSON.stringify(cfg);\n      localStorage.setItem(LOCAL_STORAGE_ID, jsonString);\n\n      cfg._dirty = false;\n    }\n    catch (e)\n    {\n      //Reset the config\n      clearConfig();\n    }\n  }\n};\n\nexport function clearConfig()\n{\n  localStorage.removeItem(LOCAL_STORAGE_ID);\n\n  cfg._dirty = true;\n};\n","import GraphNode from 'graph/elements/GraphNode.js';\nimport Config from 'deprecated/config.js';\n\nclass FSANode extends GraphNode\n{\n    constructor(id, x, y)\n    {\n        super(id, x, y);\n\n        this._accept = false;\n\n        //this is not saved to hash since it is an aesthetic option\n        this._custom = false;\n    }\n\n    setNodeAccept(value)\n    {\n        this._accept = value;\n    }\n\n    getNodeAccept()\n    {\n        return this._accept;\n    }\n\n    setNodeCustom(value)\n    {\n        this._custom = value;\n    }\n\n    getNodeCustom()\n    {\n        return this._custom;\n    }\n\n    /** @override */\n    getNodeSize()\n    {\n        return Config.NODE_RADIUS;\n    }\n\n    /** @override */\n    getHashString(usePosition=true)\n    {\n        return super.getHashString(usePosition) + ':' + (this._accept ? '1' : '0');\n    }\n}\n\nexport default FSANode;\n","import FSAGraph from './FSAGraph.js';\nimport { SYMBOL_SEPARATOR } from './FSAEdge.js';\n\nconst GRAPH_PARSER_VERSION = '1.0.0';\n\nexport const JSON = {\n    parse(data, dst=null)\n    {\n        if (!dst) dst = new FSAGraph();\n        else dst.clear();\n\n        const nodeDatas = data['nodes'] || [];\n        const nodeCount = Math.min(nodeDatas.length || 0, data['nodeCount'] || 0);\n        const edgeDatas = data['edges'] || [];\n        const edgeCount = Math.min(edgeDatas.length || 0, data['edgeCount'] || 0);\n        const initialIndex = data['initial'] || 0;\n\n        const nodeIndices = new Map();\n        for(let i = 0; i < nodeCount; ++i)\n        {\n            const nodeData = nodeDatas[i];\n            if (!nodeData) continue;\n\n            //NOTE: Assumes createNode will maintain order\n            const node = dst.createNode(nodeData['x'] || 0, nodeData['y'] || 0, nodeData['id']);\n            node.setNodeLabel(nodeData['label'] || '');\n            node.setNodeAccept(nodeData['accept'] || false);\n            node.setNodeCustom(nodeData['custom'] || false);\n\n            nodeIndices.set(i, node);\n        }\n\n        const initialNode = nodeIndices.get(initialIndex);\n        if (initialNode)\n        {\n            dst.setStartNode(initialNode);\n        }\n\n        for(let i = 0; i < edgeCount; ++i)\n        {\n            const edgeData = edgeDatas[i];\n            if (!edgeData) continue;\n            const sourceNode = nodeIndices.get(edgeData['from']) || null;\n            //Cannot create source-less edges\n            if (!sourceNode) continue;\n            const destinationNode = nodeIndices.get(edgeData['to']) || null;\n            //NOTE: Assumes createEdge will maintain order\n            const edge = dst.createEdge(sourceNode, destinationNode, edgeData['id']);\n            const quadData = edgeData['quad'] || {};\n            edge.setEdgeLabel(edgeData['label'] || '');\n            edge.setQuadraticRadians(quadData['radians'] || 0);\n            edge.setQuadraticLength(quadData['length'] || 0);\n        }\n\n        return dst;\n    },\n    objectify(graph)\n    {\n        const graphNodes = graph.getNodes() || [];\n        const nodeCount = graphNodes.length || 0;\n        const graphEdges = graph.getEdges() || [];\n        const edgeCount = graphEdges.length || 0;\n        const graphInitial = graph.getStartNode();\n\n        const nodeDatas = new Array(nodeCount);\n        const nodeIndices = new Map();\n        for(let i = 0; i < nodeCount; ++i)\n        {\n            const node = graphNodes[i];\n            if (node)\n            {\n                //NOTE: Assumes node must have an id\n                const elementID = node.getGraphElementID();\n\n                nodeIndices.set(node, i);\n                nodeDatas[i] = {\n                    id: elementID,\n                    x: node.x || 0, y: node.y || 0,\n                    label: node.getNodeLabel() || '',\n                    accept: node.getNodeAccept() || false,\n                    custom: node.getNodeCustom() || false\n                };\n            }\n        }\n\n        const edgeDatas = new Array(edgeCount);\n        for(let i = 0; i < edgeCount; ++i)\n        {\n            const edge = graphEdges[i];\n            if (edge)\n            {\n                //NOTE: Assumes edge must have an id\n                const elementID = edge.getGraphElementID();\n\n                const quad = edge.getQuadratic() || {};\n                const edgeSource = edge.getEdgeFrom();\n                const edgeDestination = edge.getEdgeTo();\n                const sourceIndex = nodeIndices.has(edgeSource) ? nodeIndices.get(edgeSource) : -1;\n                const destinationIndex = nodeIndices.has(edgeDestination) ? nodeIndices.get(edgeDestination) : -1;\n                edgeDatas[i] = {\n                    id: elementID,\n                    from: sourceIndex,\n                    to: destinationIndex,\n                    quad: { radians: quad['radians'] || 0, length: quad['length'] || 0 },\n                    label: edge.getEdgeLabel() || ''\n                };\n            }\n        }\n\n        const initialIndex = nodeIndices.get(graphInitial) || 0;\n\n        return {\n            nodeCount: nodeCount,\n            nodes: nodeDatas,\n            edgeCount: edgeCount,\n            edges: edgeDatas,\n            initial: initialIndex,\n            _version: GRAPH_PARSER_VERSION\n        };\n    }\n};\n\nexport const XML = {\n    parse(data, dst = null)\n    {\n        if (!dst) dst = new FSAGraph();\n        else dst.clear();\n\n        const nodeElements = data.getElementsByTagName('state') || [];\n        const nodeCount = nodeElements.length;\n        const edgeElements = data.getElementsByTagName('transition') || [];\n        const edgeCount = edgeElements.length;\n        let initialIndex = '0';\n\n        //Get the nodes...\n        const nodeElementIDs = new Map();\n        for(let i = 0; i < nodeCount; ++i)\n        {\n            const nodeElement = nodeElements[i];\n            if (!nodeElement) continue;\n            const nodeElementID = nodeElement.getAttribute('id');\n            if (!nodeElementID) continue;\n\n            //Get x value\n            let x = 0;\n            const xElements = nodeElement.getElementsByTagName('x');\n            //If no elements exists, we are guaranteed an empty list...\n            if (xElements.length > 0)\n            {\n                const xElement = xElements[0];\n                if (xElement.hasChildNodes())\n                {\n                    //hasChildNodes() guarantees at least 1 element\n                    const xValue = xElement.childNodes[0];\n                    if (xValue)\n                    {\n                        try\n                        {\n                            x = parseFloat(xValue.nodeValue) || 0;\n                        }\n                        catch (e)\n                        {\n                            x = 0;\n                        }\n                    }\n                }\n            }\n\n            //Get y value\n            let y = 0;\n            const yElements = nodeElement.getElementsByTagName('y');\n            //If no elements exists, we are guaranteed an empty list...\n            if (yElements.length > 0)\n            {\n                const yElement = yElements[0];\n                if (yElement.hasChildNodes())\n                {\n                    //hasChildNodes() guarantees at least 1 element\n                    const yValue = yElement.childNodes[0];\n                    if (yValue)\n                    {\n                        try\n                        {\n                            y = parseFloat(yValue.nodeValue) || 0;\n                        }\n                        catch (e)\n                        {\n                            y = 0;\n                        }\n                    }\n                }\n            }\n\n            //Get initial flag\n            const initialElements = nodeElement.getElementsByTagName('initial');\n            //If no elements exists, we are guaranteed an empty list...\n            const initial = initialElements.length > 0;\n\n            //Get final flag\n            const finalElements = nodeElement.getElementsByTagName('final');\n            //If no elements exists, we are guaranteed an empty list...\n            const final = finalElements.length > 0;\n\n            //NOTE: Assumes createNode will maintain order\n            const node = dst.createNode(x, y);\n            node.setNodeLabel(nodeElement.getAttribute('name') || '');\n            node.setNodeAccept(final);\n\n            if (initial) initialIndex = nodeElementID;\n            nodeElementIDs.set(nodeElementID, node);\n        }\n\n        //Set the initial node...\n        const initialNode = nodeElementIDs.get(initialIndex);\n        if (initialNode)\n        {\n            dst.setStartNode(initialNode);\n        }\n\n        //Readjust the center of graph...\n        const boundingRect = dst.getBoundingRect();\n        const minX = boundingRect.minX;\n        const minY = boundingRect.minY;\n        const width = boundingRect.width;\n        const height = boundingRect.height;\n        const graphNodes = dst.getNodes();\n        for(let i = 0, len = graphNodes.length; i < len; ++i)\n        {\n            graphNodes[i].x -= minX + width / 2;\n            graphNodes[i].y -= minY + height / 2;\n        }\n\n        //Get the transitions...\n        const transitionMapping = new Map();\n        for(let i = 0; i < edgeCount; ++i)\n        {\n            const edgeElement = edgeElements[i];\n            if (!edgeElement) continue;\n\n            //Get from value\n            let sourceID = null;\n            const fromElements = edgeElement.getElementsByTagName('from');\n            //If no elements exists, we are guaranteed an empty list...\n            if (fromElements.length > 0)\n            {\n                const fromElement = fromElements[0];\n                if (fromElement.hasChildNodes())\n                {\n                    //hasChildNodes() guarantees at least 1 element\n                    const fromValue = fromElement.childNodes[0];\n                    if (fromValue)\n                    {\n                        sourceID = fromValue.nodeValue;\n                    }\n                }\n            }\n\n            //Cannot create source-less edges\n            if (!nodeElementIDs.has(sourceID)) continue;\n\n            //Get to value\n            let destinationID = '';\n            const toElements = edgeElement.getElementsByTagName('to');\n            //If no elements exists, we are guaranteed an empty list...\n            if (toElements.length > 0)\n            {\n                const toElement = toElements[0];\n                if (toElement.hasChildNodes())\n                {\n                    //hasChildNodes() guarantees at least 1 element\n                    const toValue = toElement.childNodes[0];\n                    if (toValue)\n                    {\n                        destinationID = toValue.nodeValue || '';\n                    }\n                }\n            }\n\n            //Get read value\n            let symbol = '';\n            const readElements = edgeElement.getElementsByTagName('read');\n            //If no elements exists, we are guaranteed an empty list...\n            if (readElements.length > 0)\n            {\n                const readElement = readElements[0];\n                if (readElement.hasChildNodes())\n                {\n                    //hasChildNodes() guarantees at least 1 element\n                    const readValue = readElement.childNodes[0];\n                    if (readValue)\n                    {\n                        symbol = readValue.nodeValue || '';\n                    }\n                }\n            }\n\n            const transitionID = sourceID + '\\n' + destinationID;\n            let symbols;\n            if (transitionMapping.has(transitionID))\n            {\n                symbols = transitionMapping.get(transitionID);\n            }\n            else\n            {\n                symbols = [];\n                transitionMapping.set(transitionID, symbols);\n            }\n            symbols.push(symbol);\n        }\n\n        for(const transitionKey of transitionMapping.keys())\n        {\n            const key = transitionKey.split('\\n');\n            if (key.length !== 2) continue;\n\n            const symbols = transitionMapping.get(transitionKey);\n            const label = symbols.join(SYMBOL_SEPARATOR);\n            //Should never be null, since it was checked before...\n            const sourceNode = nodeElementIDs.get(key[0]);\n            const destinationNode = nodeElementIDs.get(key[1]);\n\n            //NOTE: Assumes createEdge will maintain order\n            const edge = dst.createEdge(sourceNode, destinationNode);\n            edge.setEdgeLabel(label);\n        }\n\n        return dst;\n    },\n    objectify(graph)\n    {\n        const graphNodes = graph.getNodes() || [];\n        const nodeCount = graphNodes.length || 0;\n        const graphEdges = graph.getEdges() || [];\n        // const edgeCount = graphEdges.length || 0;\n        const graphInitial = graph.getStartNode();\n\n        const header = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>' +\n      '<!--Created with flap.js ' + GRAPH_PARSER_VERSION + '-->' +\n      '<structure></structure>';\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(header, 'application/xml');\n        const structure = doc.getElementsByTagName('structure')[0];\n\n        const type = doc.createElement('type');\n        type.innerHTML = 'fa'; //finite automata\n        structure.appendChild(type);\n\n        const automaton = doc.createElement('automaton');\n        structure.appendChild(automaton);\n\n        const nodeIndices = new Map();\n        for(let i = 0; i < nodeCount; ++i)\n        {\n            const node = graphNodes[i];\n            nodeIndices.set(node, i);\n\n            //state tag\n            const state = doc.createElement('state');\n            state.id = '' + i;\n            state.setAttribute('name', node.getNodeLabel());\n            automaton.appendChild(state);\n\n            //x tag\n            const x = doc.createElement('x');\n            x.innerHTML = '' + (node.x || 0);\n            state.appendChild(x);\n\n            //y tag\n            const y = doc.createElement('y');\n            y.innerHTML = '' + (node.y || 0);\n            state.appendChild(y);\n\n            //initial tag\n            if (graphInitial === node)\n            {\n                state.appendChild(doc.createElement('initial'));\n            }\n\n            //final tag\n            if (node.getNodeAccept())\n            {\n                state.appendChild(doc.createElement('final'));\n            }\n        }\n\n        for(let edge of graphEdges)\n        {\n            const symbols = edge.getEdgeSymbolsFromLabel();\n            for(let symbol of symbols)\n            {\n                //transition tag\n                const transition = doc.createElement('transition');\n                automaton.appendChild(transition);\n\n                //from tag\n                const from = doc.createElement('from');\n                from.innerHTML = '' + (nodeIndices.get(edge.getEdgeFrom()) || 0);\n                transition.appendChild(from);\n\n                //to tag\n                const to = doc.createElement('to');\n                to.innerHTML = '' + (nodeIndices.get(edge.getEdgeTo()) || 0);\n                transition.appendChild(to);\n\n                //read tag\n                const read = doc.createElement('read');\n                read.innerHTML = '' + (symbol || '');\n                transition.appendChild(read);\n            }\n        }\n\n        return doc;\n    }\n};\n","export { getUnreachableNodes } from './UnreachableNodes.js';","class AbstractMachineController\n{\n    constructor(module, machineBuilder)\n    {\n        if (!module) throw new Error('Missing module for machine controller');\n        if (!machineBuilder) throw new Error('Missing machine builder for machine controller');\n\n        this._module = module;\n        this._machineBuilder = machineBuilder;\n    }\n\n    initialize(module)\n    {\n        this._machineBuilder.initialize(module);\n    }\n\n    destroy(module)\n    {\n        this._machineBuilder.destroy(module);\n    }\n\n    update(module)\n    {\n    }\n\n    getMachineBuilder()\n    {\n        return this._machineBuilder;\n    }\n\n    getModule()\n    {\n        return this._module;\n    }\n}\n\nexport default AbstractMachineController;\n","import GraphEdge from 'graph/elements/GraphEdge.js';\n\nclass AbstractGraphLabeler\n{\n    constructor() { }\n\n    getDefaultLabel(target)\n    {\n        if (target instanceof GraphEdge)\n        {\n            return this.getDefaultEdgeLabel();\n        }\n        else\n        {\n            return this.getDefaultNodeLabel();\n        }\n    }\n\n    getLabelFormatter(target)\n    {\n        if (target instanceof GraphEdge)\n        {\n            return this.getEdgeLabelFormatter();\n        }\n        else\n        {\n            return this.getNodeLabelFormatter();\n        }\n    }\n\n    //Deprecated - use getDefaultLabel()\n    getDefaultNodeLabel()\n    {\n        return '';\n    }\n\n    //Deprecated - use getDefaultLabel()\n    getDefaultEdgeLabel()\n    {\n        return '';\n    }\n\n    //Deprecated - use getDefaultLabel()\n    getNodeLabelFormatter()\n    {\n        throw new Error('Node label formatting is not supported');\n    }\n\n    //Deprecated - use getDefaultLabel()\n    getEdgeLabelFormatter()\n    {\n        throw new Error('Edge label formatting is not supported');\n    }\n}\n\nexport default AbstractGraphLabeler;\n","import React from 'react';\n\nconst QUAD_RADIAN_THRESHOLD = 0.01;\nconst QUAD_REVERSE_OFFSET_THRESHOLD = 4;\nconst ARROW_WIDTH = 10;\nconst SIXTH_PI = Math.PI / 6;\n\nexport const DIRECTED_FORWARD = 'forward';\nexport const DIRECTED_BACKWARD = 'backward';\nexport const DIRECTED_BOTH = 'both';\nexport const DIRECTED_NONE = 'undirected';\n\nexport const DefaultEndpointRenderer = props => (\n    <React.Fragment>\n        <path d={\n            'M ' +\n            (props.position.x - (props.length * Math.sin(props.angle - SIXTH_PI))) +\n            ' ' +\n            (props.position.y - (props.length * Math.cos(props.angle - SIXTH_PI))) +\n            ' ' +\n            'L ' + props.position.x + ' ' + props.position.y +\n            ' ' +\n            'L ' +\n            (props.position.x - (props.length * Math.sin(props.angle + SIXTH_PI))) +\n            ' ' +\n            (props.position.y - (props.length * Math.cos(props.angle + SIXTH_PI)))\n        }\n        stroke={props.color}\n        fill=\"none\" />\n    </React.Fragment>\n);\n\nexport const DefaultLabelRenderer = props => (\n    <g transform={'translate(' + props.position.x + ',' + props.position.y + ')' +\n        ' ' +\n        'rotate(' + (props.direction * 180 / Math.PI) + ')'}>\n        {\n            props.labels && props.labels.length > 0 &&\n            props.labels.map((str, i) => \n            {\n                return (\n                    <text key={str + '.' + i}\n                        transform={'translate(0,' + ((i + 1) * -15) + ')' +\n                            (props.reverse ? ' scale(-1,-1)' : '')}\n                        alignmentBaseline=\"central\"\n                        pointerEvents=\"none\"\n                        style={{ userSelect: 'none' }}\n                        textAnchor=\"middle\"\n                        fill={props.color}>\n                        {str}\n                    </text>\n                );\n            })\n        }\n    </g>\n);\n\nclass EdgeRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const directed = this.props.directed || DIRECTED_NONE;\n\n        const ForwardEndpointRenderer =\n            (directed === DIRECTED_FORWARD || directed === DIRECTED_BOTH) ?\n                (this.props.forwardEndpointRenderer ||\n                    this.props.endpointRenderer ||\n                    DefaultEndpointRenderer) : null;\n        const BackwardEndpointRenderer =\n            (directed === DIRECTED_BACKWARD || directed === DIRECTED_BOTH) ?\n                (this.props.backwardEndpointRenderer ||\n                    this.props.endpointRenderer ||\n                    DefaultEndpointRenderer) : null;\n        const EdgeLabelRenderer = this.props.labelRenderer || DefaultLabelRenderer;\n\n        const fromPoint = this.props.from;\n        const toPoint = this.props.to;\n        const centerPoint = this.props.center;\n        const label = this.props.label || '';\n        const direction = this.props.direction || 0;\n        const color = this.props.color || '#000000';\n\n        let reverseLabel = false;\n        let fromAngle;\n        let toAngle;\n        let quadLine = null;\n\n        const dftx = fromPoint.x - toPoint.x;\n        const dfty = fromPoint.y - toPoint.y;\n        const dfcx = fromPoint.x - centerPoint.x;\n        const dfcy = fromPoint.y - centerPoint.y;\n        const ftrad = Math.atan2(dfty, dftx);\n        const fcrad = Math.atan2(dfcy, dfcx);\n        if (Math.abs(ftrad - fcrad) <= QUAD_RADIAN_THRESHOLD)\n        {\n            toAngle = Math.atan2(centerPoint.x - toPoint.x, centerPoint.y - toPoint.y) + Math.PI;\n            fromAngle = Math.atan2(centerPoint.x - fromPoint.x, centerPoint.y - fromPoint.y) + Math.PI;\n            quadLine = 'L ' + toPoint.x + ' ' + toPoint.y;\n            reverseLabel = false;\n        }\n        else\n        {\n            const cx = ((centerPoint.x * 4) - fromPoint.x - toPoint.x) / 2;\n            const cy = ((centerPoint.y * 4) - fromPoint.y - toPoint.y) / 2;\n            toAngle = Math.atan2(cx - toPoint.x, cy - toPoint.y) + Math.PI;\n            fromAngle = Math.atan2(cx - fromPoint.x, cy - fromPoint.y) + Math.PI;\n            quadLine = 'Q ' + cx + ' ' + cy + ' ' + toPoint.x + ' ' + toPoint.y;\n            reverseLabel = cy > centerPoint.y + QUAD_REVERSE_OFFSET_THRESHOLD;\n        }\n\n        return (\n            <g>\n                <path d={'M ' + fromPoint.x + ' ' + fromPoint.y + ' ' + quadLine}\n                    stroke={color}\n                    fill=\"none\" />\n                {ForwardEndpointRenderer &&\n                    <ForwardEndpointRenderer position={toPoint} angle={toAngle} length={ARROW_WIDTH} color={color} />}\n                {BackwardEndpointRenderer &&\n                    <BackwardEndpointRenderer position={fromPoint} angle={fromAngle} length={ARROW_WIDTH} color={color} />}\n                {EdgeLabelRenderer &&\n                    <EdgeLabelRenderer position={centerPoint} labels={label.split('\\n')} direction={direction} reverse={reverseLabel} color={color} />}\n            </g>\n        );\n    }\n}\n\nexport default EdgeRenderer;\n","import React from 'react';\n\nconst RETURN_FOCUS_DELAY = 50;\n\nclass PatternInputButton extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.ref = null;\n\n    this._timeout = null;\n\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onAnyMouseUp = this.onAnyMouseUp.bind(this);\n  }\n\n  onMouseDown(e)\n  {\n    const parent = this.props.parent;\n    if (parent.ignoreBlur(true))\n    {\n      document.addEventListener(\"mouseup\", this.onAnyMouseUp);\n    }\n\n    if (this.props.onClick)\n    {\n      this.props.onClick(e, this);\n    }\n  }\n\n  onAnyMouseUp()\n  {\n    document.removeEventListener(\"mouseup\", this.onAnyMouseUp);\n\n    if (this._timeout) clearTimeout(this._timeout);\n    this._timeout = setTimeout(() => {\n      this._timeout = null;\n\n      const parent = this.props.parent;\n      parent.ignoreBlur(false);\n\n      if (document.activeElement === this.ref)\n      {\n        parent.focus(false);\n      }\n      else if (document.activeElement !== this.props.parent.inputElement)\n      {\n        parent.onBlur();\n      }\n    }, RETURN_FOCUS_DELAY);\n  }\n\n  /** @override */\n  render()\n  {\n    return (\n      <button ref={ref=>this.ref=ref}\n        id={this.props.id}\n        className={this.props.className}\n        style={this.props.style}\n        title={this.props.title}\n        onMouseDown={this.onMouseDown}>\n        {this.props.title}\n      </button>\n    );\n  }\n}\n\nexport default PatternInputButton;\n","import React from 'react';\nimport Style from './PanelDivider.css';\n\nclass PanelDivider extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        return (\n            <div id={this.props.id}\n                className={Style.panel_divider +\n          ' ' + this.props.className}\n                style={this.props.style}>\n            </div>\n        );\n    }\n}\n\nexport default PanelDivider;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M12 7.77L18.39 18H5.61L12 7.77M12 4L2 20h20L12 4z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './PanelCheckbox.css';\n\nclass PanelCheckbox extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            checked: props.initial || false\n        };\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    setChecked(value)\n    {\n        this.setState({checked: value});\n    }\n\n    isChecked()\n    {\n        return this.state.checked;\n    }\n\n    onChange(e)\n    {\n        const checked = e.target.checked;\n        if (this.state.checked !== checked)\n        {\n            this.setState({checked: checked});\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        return (\n            <div id={this.props.id}\n                className={Style.checkbox_container +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <input type=\"checkbox\" id={this.props.id + '-checkbox'}\n                    name={this.props.id + '-checkbox'} value={this.props.value}\n                    checked={this.state.checked}\n                    disabled={this.props.disabled}\n                    onChange={this.onChange}/>\n                <label htmlFor={this.props.id + '-checkbox'}>{this.props.title}</label>\n            </div>\n        );\n    }\n}\n\nexport default PanelCheckbox;\n","import React from 'react';\nimport Style from './ModeSelectTray.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport EditPencilIcon from 'components/iconset/EditPencilIcon.js';\nimport MoveIcon from 'components/iconset/MoveIcon.js';\n\nclass ModeSelectTray extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange(newValue)\n    {\n        if (this.props.onChange)\n        {\n            this.props.onChange(newValue);\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        const mode = this.props.mode || 0;\n        //const onChange = this.props.onChange;\n\n        return (\n            <div id={this.props.id}\n                className={Style.tray_container +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <IconButton className={Style.tray_button +\n          (mode === 0 ? ' active ' : '')}\n                onClick={() => this.onChange(0)}\n                title={I18N.toString('cursor.actionmode')}>\n                    <EditPencilIcon/>\n                </IconButton>\n                <IconButton className={Style.tray_button +\n          (mode === 1 ? ' active ' : '')}\n                onClick={() => this.onChange(1)}\n                title={I18N.toString('cursor.movemode')}>\n                    <MoveIcon/>\n                </IconButton>\n            </div>\n        );\n    }\n}\nexport default ModeSelectTray;\n","import React from 'react';\nimport Style from './TrashCanWidget.css';\n\nimport TrashCanDetailedIcon from 'components/iconset/TrashCanDetailedIcon.js';\n\nconst DOUBLE_TAP_TIME = 250;\n\nclass TrashCanWidget extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.ref = null;\n\n        this.state = {\n            forceActive: false\n        };\n\n        this._doubleTapTimeout = null;\n\n        this.onMouseEnter = this.onMouseEnter.bind(this);\n        this.onMouseLeave = this.onMouseLeave.bind(this);\n        this.onClick = this.onClick.bind(this);\n\n        //HACK: This is kinda a hack to lose trash mode focus...\n        this.onAnyMouseDownNotConsumed = this.onAnyMouseDownNotConsumed.bind(this);\n    }\n\n    onMouseEnter(e)\n    {\n        if (this.state.forceActive) return;\n\n        this.props.inputController.setTrashMode(true);\n    }\n\n    onMouseLeave(e)\n    {\n        if (this.state.forceActive) return;\n\n        this.props.inputController.setTrashMode(false);\n    }\n\n    onClick(e)\n    {\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (this._doubleTapTimeout)\n        {\n            //This is a double tap!\n            clearTimeout(this._doubleTapTimeout);\n            this._doubleTapTimeout = null;\n            this.setState({forceActive: false});\n\n            this.props.app.getSession().getCurrentModule().clear(this.props.app, true);\n            this.props.inputController.setTrashMode(false);\n        }\n        else\n        {\n            //This is a single tap!\n            this.setState((prev, props) => \n            {\n                const result = !prev.forceActive;\n                props.inputController.setTrashMode(result);\n                this._doubleTapTimeout = setTimeout(() => \n                {\n                    this._doubleTapTimeout = null;\n                }, DOUBLE_TAP_TIME);\n\n                if (result)\n                {\n                    document.documentElement.addEventListener('mousedown', this.onAnyMouseDownNotConsumed);\n                }\n\n                return {\n                    forceActive: result\n                };\n            });\n        }\n    }\n\n    onAnyMouseDownNotConsumed(e)\n    {\n        if (this.state.forceActive && this.ref !== e.target)\n        {\n            e.stopPropagation();\n            e.preventDefault();\n\n            document.documentElement.removeEventListener('mousedown', this.onAnyMouseDownNotConsumed);\n\n            this.props.inputController.setTrashMode(false);\n            this.setState({forceActive: false});\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        const inputController = this.props.inputController;\n        const graphController = this.props.graphController;\n        const inputAdapter = inputController.getInputAdapter();\n\n        const active = inputController.isTrashMode();\n        const hide = !active && (graphController.getGraph().isEmpty() || (inputAdapter.isUsingTouch() && inputAdapter.isDragging()));\n\n        return (\n            <div ref={ref=>this.ref=ref} id={this.props.id}\n                className={Style.trash_container +\n          (active ? ' active ' : '') +\n          (hide ? ' hide ' : '') +\n          ' ' + this.props.className}\n                style={this.props.style}\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n                onClick={this.onClick}>\n                <TrashCanDetailedIcon/>\n            </div>\n        );\n    }\n}\n\nexport default TrashCanWidget;\n","import AbstractEventHandler from 'session/manager/undo/AbstractEventHandler.js';\n\nclass SafeGraphEventHandler extends AbstractEventHandler\n{\n    constructor(graphController, graphParser)\n    {\n        super();\n\n        this._graphController = graphController;\n        this._graphParser = graphParser;\n        this._graphData = graphParser.objectify(graphController.getGraph());\n    }\n\n    /** @override */\n    applyUndo(undoManager)\n    {\n        const prevEvent = undoManager.getPreviousEvent();\n        if (prevEvent instanceof SafeGraphEventHandler)\n        {\n            prevEvent.applyRedo(undoManager);\n        }\n        else\n        {\n            this._graphController.getGraph().clear();\n        }\n    }\n\n    /** @override */\n    applyRedo(undoManager)\n    {\n        this._graphParser.parse(this._graphData, this._graphController.getGraph());\n    }\n}\nexport default SafeGraphEventHandler;\n","import GraphElementInputHandler from './GraphElementInputHandler.js';\n\n// const SNAP_TO_GRID = true;\n// const SNAP_SIZE = 48;\n\nclass GraphNodeInputHandler extends GraphElementInputHandler\n{\n    constructor()\n    {\n        super('node');\n    }\n\n    /** @override */\n    onAction(inputController, graphController, pointer, target)\n    {\n        const selectionBox = inputController.getSelectionBox();\n\n        //Click to delete node\n        if (inputController.isTrashMode())\n        {\n            //So that the emitted 'delete' events can use this\n            graphController.prevX = target.x;\n            graphController.prevY = target.y;\n\n            //If there exists selected states, delete them all!\n            if (selectionBox.hasSelection())\n            {\n                //Delete all selected nodes\n                graphController.deleteSelectedNodes(target);\n            }\n            else\n            {\n                //Delete a single node\n                graphController.deleteTargetNode(target);\n            }\n            return true;\n        }\n        else if (inputController.isMoveMode())\n        {\n            //Edit label for selected node\n            graphController.openLabelEditor(target, target.getNodeLabel());\n        }\n\n        return false;\n    }\n\n    /** @override */\n    onDragStart(inputController, graphController, pointer, target)\n    {\n        if (inputController.isMoveMode())\n        {\n            //Moving node (and selected nodes)\n            graphController.prevX = target.x;\n            graphController.prevY = target.y;\n        }\n        else\n        {\n            const picker = inputController.getPicker();\n            const graph = graphController.getGraph();\n            const edge = graph.createEdge(target, pointer);\n            edge.setEdgeLabel(graphController.getGraphLabeler().getDefaultEdgeLabel());\n\n            //Redirect pointer to refer to the edge as the new target\n            picker.setInitialTarget(edge, 'endpoint');\n            inputController.isNewEdge = true;\n\n            //Reset previous quad values for new proxy edge\n            const edgeQuad = edge.getQuadratic();\n            graphController.prevQuad.radians = edgeQuad.radians;\n            graphController.prevQuad.length = edgeQuad.length;\n            graphController.prevEdgeTo = null;\n\n            //Ready to move proxy edge to pointer...\n        }\n        return true;\n    }\n\n    /** @override */\n    onDragMove(inputController, graphController, pointer, target)\n    {\n        const selectionBox = inputController.getSelectionBox();\n        const graph = graphController.getGraph();\n        let x = pointer.x;\n        let y = pointer.y;\n\n        if (inputController._snapToGrid)\n        {\n            const snapSize = inputController._snapSize;\n            x = Math.round(x / snapSize) * snapSize;\n            y = Math.round(y / snapSize) * snapSize;\n        }\n\n        if (selectionBox.hasSelection())\n        {\n            graphController.moveMultipleNodesTo(pointer, selectionBox.getSelection(graph), x, y);\n        }\n        else\n        {\n            graphController.moveNodeTo(pointer, target, x, y);\n        }\n        return true;\n    }\n\n    /** @override */\n    onDragStop(inputController, graphController, pointer, target)\n    {\n        const selectionBox = inputController.getSelectionBox();\n        const graph = graphController.getGraph();\n        const x = pointer.x;\n        const y = pointer.y;\n\n        //Delete it if withing trash area...\n        if (inputController.isTrashMode())\n        {\n            //If there exists selected states, delete them all!\n            if (selectionBox.hasSelection())\n            {\n                graphController.deleteSelectedNodes(target);\n            }\n            else\n            {\n                //Delete a single node\n                graphController.deleteTargetNode(target);\n            }\n\n            return true;\n        }\n        //If dragged to an empty space (not trash)\n        else\n        {\n            //Do nothing, since should have moved to position\n            if (selectionBox.hasSelection())\n            {\n                const dx = x - graphController.prevX;\n                const dy = y - graphController.prevY;\n                graphController.onGraphIntentMoveAllNodes(selectionBox.getSelection(graph), dx, dy);\n                //graphController.emit(\"nodeMoveAll\", graph, picker.getSelection(graph), dx, dy);\n            }\n            else\n            {\n                graphController.onGraphIntentMoveNode(target, x, y, graphController.prevX, graphController.prevY);\n                //graphController.emit(\"nodeMove\", graph, target, x, y, graphController.prevX, graphController.prevY);\n            }\n            return true;\n        }\n    }\n}\n\nexport default GraphNodeInputHandler;\n","import GraphElementInputHandler from './GraphElementInputHandler.js';\nimport GraphNode from 'graph/elements/GraphNode.js';\n\nclass GraphInitialInputHandler extends GraphElementInputHandler\n{\n    constructor()\n    {\n        super('initial');\n\n        //Used to change render to follow pointer when moving initial marker\n        this.ghostInitialMarker = null;\n    }\n\n    /** @override */\n    onDragStart(inputController, graphController, pointer, target)\n    {\n    //Ready to move the initial marker to another state...\n        this.ghostInitialMarker = pointer;\n        return true;\n    }\n\n    /** @override */\n    onDragMove(inputController, graphController, pointer, target)\n    {\n        const picker = inputController.getPicker();\n        const graph = graphController.getGraph();\n        const x = pointer.x;\n        const y = pointer.y;\n        //Move initial marker to node or pointer\n        const dst = picker.getPickHandler('node').getTargetAt(graph, x, y) || pointer;\n        this.ghostInitialMarker = dst;\n        return true;\n    }\n\n    /** @override */\n    onDragStop(inputController, graphController, pointer, target)\n    {\n        const graph = graphController.getGraph();\n\n        //If valid initial object to mark...\n        if (this.ghostInitialMarker instanceof GraphNode)\n        {\n            const prevInitial = graph.getStartNode();\n\n            //Set the new object as the initial node\n            graph.setStartNode(this.ghostInitialMarker);\n            graphController.applyAutoRename();\n\n            //Emit event\n            graphController.onGraphIntentChangeInitial(this.ghostInitialMarker, prevInitial);\n            //graphController.emit(\"nodeInitial\", graph, this.ghostInitialMarker, prevInitial);\n        }\n\n        //Reset ghost initial marker\n        this.ghostInitialMarker = null;\n        return true;\n    }\n}\n\nexport default GraphInitialInputHandler;\n","import GraphElementInputHandler from './GraphElementInputHandler.js';\n\nclass GraphEdgeInputHandler extends GraphElementInputHandler\n{\n    constructor()\n    {\n        super('edge');\n    }\n\n    /** @override */\n    onAction(inputController, graphController, pointer, target)\n    {\n        if (inputController.isTrashMode())\n        {\n            //Delete a single edge\n            graphController.deleteTargetEdge(target);\n        }\n        else\n        {\n            //Edit label for selected edge\n            graphController.openLabelEditor(target, target.getEdgeLabel());\n        }\n        return true;\n    }\n\n    /** @override */\n    onDragStart(inputController, graphController, pointer, target)\n    {\n        //Makes sure that placeholders are not quadratics!\n        if (target.isPlaceholder())\n        {\n            return false;\n        }\n\n        //Save previous quadratics\n        const targetQuad = target.getQuadratic();\n        graphController.prevQuad.radians = targetQuad.radians;\n        graphController.prevQuad.length = targetQuad.length;\n\n        //Ready to move the edge vertex to pointer...\n        return true;\n    }\n\n    /** @override */\n    onDragMove(inputController, graphController, pointer, target)\n    {\n        graphController.moveEdgeTo(pointer, target, pointer.x, pointer.y);\n        return true;\n    }\n\n    /** @override */\n    onDragStop(inputController, graphController, pointer, target)\n    {\n        //Delete it if withing trash area...\n        if (inputController.isTrashMode())\n        {\n            graphController.deleteTargetEdge(target);\n        }\n        else\n        {\n            //Do nothing, since should have moved to position\n            graphController.onGraphIntentMoveEdge(target, target.getQuadratic(), graphController.prevQuad);\n            //graphController.emit(\"edgeMove\", graph, target, target.getQuadratic(), graphController.prevQuad);\n        }\n        return true;\n    }\n}\n\nexport default GraphEdgeInputHandler;\n","import GraphElementInputHandler from './GraphElementInputHandler.js';\nimport GraphNode from 'graph/elements/GraphNode.js';\n\nclass GraphEndpointInputHandler extends GraphElementInputHandler\n{\n    constructor()\n    {\n        super('endpoint');\n    }\n\n    /** @override */\n    onAction(inputController, graphController, pointer, target)\n    {\n        if (inputController.isTrashMode())\n        {\n            //Delete a single edge\n            graphController.deleteTargetEdge(target);\n            return true;\n        }\n        return false;\n    }\n\n    /** @override */\n    onDragStart(inputController, graphController, pointer, target)\n    {\n        const targetQuad = target.getQuadratic();\n        graphController.prevQuad.radians = targetQuad.radians;\n        graphController.prevQuad.length = targetQuad.length;\n        graphController.prevEdgeTo = target.getEdgeTo();\n\n        inputController.isNewEdge = false;\n\n        //Ready to move the edge endpoint to pointer...\n        return true;\n    }\n\n    /** @override */\n    onDragMove(inputController, graphController, pointer, target)\n    {\n        graphController.moveEndpointTo(pointer, target, pointer.x, pointer.y);\n        return true;\n    }\n\n    /** @override */\n    onDragStop(inputController, graphController, pointer, target)\n    {\n        const graph = graphController.getGraph();\n\n        //Delete it if withing trash area...\n        if (inputController.isTrashMode())\n        {\n            graphController.deleteTargetEdge(target);\n            return true;\n        }\n        //If hovering over a node...\n        else if (target.getEdgeTo() instanceof GraphNode)\n        {\n            const result = graph.formatEdge(target);\n\n            //If a different edge is the result of the target...\n            if (result !== target)\n            {\n                //Allow the user to edit the merged labels\n                graphController.openLabelEditor(result, result.getEdgeLabel());\n\n                //Delete the merged label\n                graph.deleteEdge(target);\n                return true;\n            }\n            //Open label editor if a new edge...\n            else\n            {\n                if (inputController.isNewEdge)\n                {\n                    graphController.openLabelEditor(result, '', (target, value) => graphController.onGraphIntentFinishEdge(target));\n                }\n                else\n                {\n                    graphController.openLabelEditor(target, target.getEdgeLabel());\n                }\n            }\n\n            if (inputController.isNewEdge)\n            {\n                //Must be after openLabelEditor() to allow the function to check it...\n                inputController.isNewEdge = false;\n\n                //Emit event\n                graphController.onGraphIntentCreateEdge(target);\n            }\n            else if (graphController.prevEdgeTo !== null)\n            {\n                //Emit event\n                graphController.onGraphIntentChangeDestination(target, target.getEdgeTo(), graphController.prevEdgeTo, graphController.prevQuad);\n            }\n\n            return true;\n        }\n        //If hovering over anything else...\n        else\n        {\n            //Destroy any edge that no longer have a destination\n            if (inputController.shouldDestroyPointlessEdges)\n            {\n                if (!inputController.isNewEdge)\n                {\n                    graphController.deleteTargetEdge(target);\n                }\n                else\n                {\n                    graph.deleteEdge(target);\n                }\n                return true;\n            }\n            //Keep edges as placeholders (used in DFA's)\n            else\n            {\n                target.changeDestinationNode(null);\n\n                //Open label editor if default edge...\n                if (target.getEdgeLabel().length <= 0)\n                {\n                    graphController.openLabelEditor(target, target.getEdgeLabel());\n                }\n                return true;\n            }\n        }\n    }\n}\n\nexport default GraphEndpointInputHandler;\n","import InputHandler from './InputHandler.js';\n\nclass GraphNodeCreateInputHandler extends InputHandler\n{\n    constructor()\n    {\n        super();\n    }\n\n    /** @override */\n    isTargetable(inputController, pointer, target, targetType)\n    {\n        return targetType === 'none';\n    }\n\n    /** @override */\n    onDblAction(inputController, graphController, pointer, target)\n    {\n        let x = pointer.x;\n        let y = pointer.y;\n\n        if (inputController._snapToGrid)\n        {\n            const snapSize = inputController._snapSize;\n            x = Math.round(x / snapSize) * snapSize;\n            y = Math.round(y / snapSize) * snapSize;\n        }\n\n        //Create node at position\n        graphController.createNode(x, y);\n        //TODO: this allows nodes to move away from other nodes\n        //But undoManager does not recognize it.\n        //graphController.moveNodeTo(pointer, node, x, y);\n        return true;\n    }\n}\n\nexport default GraphNodeCreateInputHandler;\n","import GraphElementInputHandler from './GraphElementInputHandler.js';\n\nclass GraphNodeAcceptInputHandler extends GraphElementInputHandler\n{\n    constructor()\n    {\n        super('node');\n    }\n\n    /** @override */\n    onAction(inputController, graphController, pointer, target)\n    {\n    //Edit click to toggle node\n        if (!inputController.isMoveMode())\n        {\n            graphController.toggleNode(target);\n            return true;\n        }\n\n        return false;\n    }\n}\n\nexport default GraphNodeAcceptInputHandler;\n","import PickHandler from './PickHandler.js';\n\nclass GraphNodePickHandler extends PickHandler\n{\n    constructor()\n    {\n        super();\n    }\n\n    /** @override */\n    getTargetAt(graph, x, y)\n    {\n    //Search graph\n        for(const node of graph.getNodes())\n        {\n            const nodeSize = node.getNodeSize();\n            const dx = x - node.x;\n            const dy = y - node.y;\n            if (dx * dx + dy * dy < nodeSize * nodeSize)\n            {\n                return node;\n            }\n        }\n        return null;\n    }\n\n    /** @override */\n    getTargetType() { return 'node'; }\n}\n\nexport default GraphNodePickHandler;\n","import PickHandler from './PickHandler.js';\n\nconst EDGE_RADIUS = 12;\nconst EDGE_RADIUS_SQU = EDGE_RADIUS * EDGE_RADIUS;\n\nclass GraphEdgePickHandler extends PickHandler\n{\n    constructor()\n    {\n        super();\n    }\n\n    /** @override */\n    getTargetAt(graph, x, y)\n    {\n        const center = {x: 0, y: 0};\n\n        //Search graph\n        for(const edge of graph.getEdges())\n        {\n            edge.getCenterPoint(center);\n            const dx = x - center.x;\n            const dy = y - center.y;\n            if (dx * dx + dy * dy < EDGE_RADIUS_SQU)\n            {\n                return edge;\n            }\n        }\n        return null;\n    }\n\n    /** @override */\n    getTargetType() { return 'edge'; }\n}\n\nexport default GraphEdgePickHandler;\n","import PickHandler from './PickHandler.js';\n\nconst ENDPOINT_RADIUS = 6;\nconst ENDPOINT_RADIUS_SQU = ENDPOINT_RADIUS * ENDPOINT_RADIUS;\n\nclass GraphEndpointPickHandler extends PickHandler\n{\n    constructor()\n    {\n        super();\n    }\n\n    /** @override */\n    getTargetAt(graph, x, y)\n    {\n        const end = {x: 0, y: 0};\n        //Search graph\n        for(const edge of graph.getEdges())\n        {\n            edge.getEndPoint(end);\n            const dx = x - end.x;\n            const dy = y - end.y;\n            if (dx * dx + dy * dy < ENDPOINT_RADIUS_SQU)\n            {\n                return edge;\n            }\n        }\n        return null;\n    }\n\n    /** @override */\n    getTargetType() { return 'endpoint'; }\n}\n\nexport default GraphEndpointPickHandler;\n","import PickHandler from './PickHandler.js';\n\nconst EDGE_RADIUS = 12;\nconst EDGE_RADIUS_SQU = EDGE_RADIUS * EDGE_RADIUS;\n\nclass GraphInitialPickHandler extends PickHandler\n{\n    constructor()\n    {\n        super();\n    }\n\n    /** @override */\n    getTargetAt(graph, x, y)\n    {\n        const startNode = graph.getStartNode();\n        if (!startNode) return null;\n\n        const nodeSize = startNode.getNodeSize();\n        const offset = -(nodeSize + (nodeSize / 2));\n        const dx = x - (startNode.x + offset);\n        const dy = y - startNode.y;\n        if (dx * dx + dy * dy < EDGE_RADIUS_SQU)\n        {\n            return startNode;\n        }\n\n        return null;\n    }\n\n    /** @override */\n    getTargetType() { return 'initial'; }\n}\n\nexport default GraphInitialPickHandler;\n","/**\n * Used by InputAdapter to handle input event logic.\n */\nclass AbstractInputHandler\n{\n  constructor() {}\n\n  /**\n   * Called by InputAdapter before an InputEvent begins.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not begin.\n   */\n  onPreInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter when an InputEvent resolves and is not an Alt input.\n   * To handle events for Alt inputs, refer to onAltInputEvent().\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events.\n   */\n  onInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter when an InputEvent resolves and is an Alt input.\n   * To handle events for non-Alt inputs, refer to onInputEvent().\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events.\n   */\n  onAltInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter when a DblInputEvent resolves. The input is\n   * assumed by a non-Alt input, since only non-Alt inputs can trigger this\n   * event.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events.\n   */\n  onDblInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter when input movess. The input is called before drag\n   * logic.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events (i.e. dragging events).\n   */\n  onMoveInputEvent(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter before a drag begins. The input could be either\n   * an Alt or non-Alt input.\n   * Returns true if the event should be consumed. If consumed, the event will\n   * not propagate to other trigger other events, nor continue the drag input.\n   */\n  onDragStart(pointer) { return false; }\n\n  /**\n   * Called by InputAdapter while dragging moves. The input could be either\n   * an Alt or non-Alt input.\n   * Will always be called after onDragStart() and will be followed by\n   * onDragStop() when complete.\n   */\n  onDragMove(pointer) {}\n\n  /**\n   * Called by InputAdapter after a drag ends. The input could be either an\n   * Alt or non-Alt input.\n   * Will always be called after onDragStart(). Although onDragMove may be\n   * called in-between, it is not guaranteed.\n   */\n  onDragStop(pointer) {}\n\n  /**\n   * Called by InputAdapter after an InputEvent ends.\n   */\n  onPostInputEvent(pointer) {}\n\n  /**\n   * Called by InputAdapter when zoom changes.\n   * Returns true if event is consumed (zoom will not be applied)\n   */\n  onZoomChange(pointer, zoomValue, prevValue)\n  {\n    return false;\n  }\n}\n\nexport default AbstractInputHandler;\n","import AbstractInputHandler from 'deprecated/system/inputadapter/AbstractInputHandler.js';\n\nclass AbstractInputController extends AbstractInputHandler\n{\n    constructor(module, inputAdapter)\n    {\n        super();\n\n        if (!module) throw new Error('Missing module for input controller');\n        if (!inputAdapter) throw new Error('Missing inputAdapter for input controller');\n\n        this._module = module;\n        this._inputAdapter = inputAdapter;\n    }\n\n    initialize(module) {}\n    destroy(module) {}\n    update(module) {}\n\n    /** @override */\n    onPreInputEvent(pointer) { return false; }\n    /** @override */\n    onInputEvent(pointer) { return false; }\n    /** @override */\n    onAltInputEvent(pointer) { return this.onInputEvent(pointer); }\n    /** @override */\n    onDblInputEvent(pointer) { return false; }\n    /** @override */\n    onDragStart(pointer) { return false; }\n    /** @override */\n    onDragMove(pointer) { return false; }\n    /** @override */\n    onDragStop(pointer) { return false; }\n    /** @override */\n    onPostInputEvent(pointer) {}\n    /** @override */\n    onZoomChange(pointer, zoomValue, prevValue) { return false; }\n\n    getInputAdapter()\n    {\n        return this._inputAdapter;\n    }\n\n    getModule()\n    {\n        return this._module;\n    }\n}\n\nexport default AbstractInputController;\n","class GraphNodeSelectionBox\n{\n    constructor()\n    {\n        this._boundingBox = {\n            fromX: 0, fromY: 0,\n            toX: 0, toY: 0,\n            visible: false\n        };\n\n        this.targets = [];\n    }\n\n    getSelectionBox()\n    {\n        return this._boundingBox;\n    }\n\n    getSelection(graph, forceUpdate = false)\n    {\n        if (forceUpdate)\n        {\n            const box = this._boundingBox;\n            const mx = Math.max(box.toX, box.fromX);\n            const my = Math.max(box.toY, box.fromY);\n            const lx = Math.min(box.toX, box.fromX);\n            const ly = Math.min(box.toY, box.fromY);\n            this.clearSelection();\n            getNodesWithin(graph, lx, ly, mx, my, this.targets);\n        }\n\n        return this.targets;\n    }\n\n    hasSelection()\n    {\n        return this.targets.length > 0;\n    }\n\n    clearSelection()\n    {\n        this.targets.length = 0;\n    }\n\n    isTargetInSelection(target)\n    {\n        return this.targets.includes(target);\n    }\n\n    beginSelection(graph, x, y)\n    {\n        const box = this._boundingBox;\n        box.fromX = box.toX = x;\n        box.fromY = box.toY = y;\n        this.clearSelection();\n\n        box.visible = true;\n    }\n\n    updateSelection(graph, x, y)\n    {\n        const box = this._boundingBox;\n        box.toX = x;\n        box.toY = y;\n        this.getSelection(graph, true);\n    }\n\n    endSelection(graph, x, y)\n    {\n        const box = this._boundingBox;\n        box.toX = x;\n        box.toY = y;\n        this.getSelection(graph, true);\n\n        box.visible = false;\n    }\n\n    isSelecting()\n    {\n        return this._boundingBox.visible;\n    }\n}\n\nfunction getNodesWithin(graph, x1, y1, x2, y2, dst)\n{\n    const fromX = Math.min(x1, x2);\n    const fromY = Math.min(y1, y2);\n    const toX = Math.max(x1, x2);\n    const toY = Math.max(y1, y2);\n\n    for (const node of graph.getNodes())\n    {\n        if (node.x >= fromX && node.x < toX &&\n            node.y >= fromY && node.y < toY)\n        {\n            dst.push(node);\n        }\n    }\n    return dst;\n}\n\nexport default GraphNodeSelectionBox;\n","class GraphPicker\n{\n    constructor()\n    {\n        this.target = null;\n        this.targetType = '';\n\n        this.initialTarget = null;\n        this.initialTargetType = '';\n\n        this._prevX = 0;\n        this._prevY = 0;\n\n        this._pickHandlers = new Map();\n    }\n\n    addPickHandler(pickHandler)\n    {\n        this._pickHandlers.set(pickHandler.getTargetType(), pickHandler);\n        return this;\n    }\n\n    removePickHandler(pickHandler)\n    {\n        this._pickHandlers.delete(pickHandler.getTargetType());\n        return this;\n    }\n\n    getPickHandler(targetType)\n    {\n        return this._pickHandlers.get(targetType);\n    }\n\n    setInitialTarget(target, type)\n    {\n        this.initialTarget = target;\n        this.initialTargetType = type;\n    }\n\n    updateHoverTarget(graph, x, y)\n    {\n        if (this._prevX !== x || this._prevY !== y)\n        {\n            this._prevX = x;\n            this._prevY = y;\n\n            //Update target\n            this.updateTarget(graph, x, y);\n\n            //HACK: to make the cursor look like a pointer when targeting\n            if (this.hasTarget())\n            {\n                document.body.style.cursor = 'pointer';\n            }\n            else\n            {\n                document.body.style.cursor = 'auto';\n            }\n        }\n    }\n\n    updateInitialTarget(graph, x, y)\n    {\n        this.updateTarget(graph, x, y);\n        this.setInitialTarget(this.target, this.targetType);\n    }\n\n    updateTarget(graph, x, y)\n    {\n        for (const pickHandler of this._pickHandlers.values())\n        {\n            this.target = pickHandler.getTargetAt(graph, x, y);\n            if (this.target)\n            {\n                this.targetType = pickHandler.getTargetType();\n                return;\n            }\n        }\n\n        this.target = null;\n        this.targetType = 'none';\n\n        return this.target;\n    }\n\n    clearTarget()\n    {\n        this.target = null;\n        this.targetType = 'none';\n    }\n\n    hasTarget()\n    {\n        return this.target != null;\n    }\n\n    isTarget(target)\n    {\n        return this.target == target;\n    }\n\n    getPickHandlers()\n    {\n        return this._pickHandlers.values();\n    }\n}\n\nexport default GraphPicker;\n","import AbstractInputController from 'modules/abstract/AbstractInputController.js';\n\n//import NodalGraphPicker from 'graph/picker/NodalGraphPicker.js';\nimport GraphNodeSelectionBox from 'graph/GraphNodeSelectionBox.js';\nimport GraphPicker from './GraphPicker.js';\n\nconst DEFAULT_SHOULD_DESTROY_POINTLESS_EDGE = true;\n\nclass InputController extends AbstractInputController\n{\n    constructor(module, inputAdapter)\n    {\n        super(module, inputAdapter);\n    \n        this._picker = new GraphPicker();\n        this._selectionBox = new GraphNodeSelectionBox();\n        this._graphController = null;\n\n        //Make sure this is always false when moving endpoints\n        this.isNewEdge = false;\n\n        //Whether to destroy pointless edges\n        this.shouldDestroyPointlessEdges = DEFAULT_SHOULD_DESTROY_POINTLESS_EDGE;\n\n        //Swap left to right clicks and vice versa on anything else but Macs\n        this._swapMouseScheme = true;//!navigator.platform.startsWith(\"Mac\");\n\n        //Used to determine whether the target should be destroyed because of trash mode\n        this._trashMode = false;\n\n        this._disabled = false;\n\n        //TODO: this works, it's just not attached to anything\n        this._snapToGrid = false;\n        this._snapSize = 48;\n\n        this._inputHandlers = [];\n    }\n\n    addInputHandler(inputHandler)\n    {\n        this._inputHandlers.push(inputHandler);\n        return this;\n    }\n\n    removeInputHandler(inputHandler)\n    {\n        this._inputHandlers.splice(this._inputHandlers.indexOf(inputHandler), 1);\n        return this;\n    }\n\n    /** @override */\n    initialize(module)\n    {\n        super.initialize(module);\n\n        this._module = module;\n        this._graphController = module.getGraphController();\n    }\n\n    /** @override */\n    destroy(module)\n    {\n        super.destroy(module);\n    }\n\n    /** @override */\n    update(module)\n    {\n        super.update(module);\n\n        const graph = this._graphController.getGraph();\n        const picker = this._picker;\n\n        const x = this._inputAdapter.getPointerX();\n        const y = this._inputAdapter.getPointerY();\n        picker.updateHoverTarget(graph, x, y);\n    }\n\n    setDisabled(disabled)\n    {\n        this._disabled = disabled;\n    }\n\n    isDisabled()\n    {\n        return this._disabled;\n    }\n\n    /** @override */\n    onPreInputEvent(pointer)\n    {\n        if (this._disabled) return super.onPreInputEvent(pointer);\n\n        const inputController = this;\n        const graphController = this._graphController;\n\n        const graph = graphController.getGraph();\n        const picker = inputController.getPicker();\n        picker.updateInitialTarget(graph, pointer.x, pointer.y);\n\n        const target = picker.initialTarget;\n        const targetType = picker.initialTargetType;\n\n        if (this._selectionBox.hasSelection())\n        {\n            //Unselect everything is clicked on something other than nodes...\n            if (targetType != 'node' || !this._selectionBox.isTargetInSelection(target))\n            {\n                this._selectionBox.clearSelection();\n            }\n        }\n\n        /** @override */\n        return super.onPreInputEvent(pointer);\n    }\n\n    /** @override */\n    onInputEvent(pointer)\n    {\n        if (this._disabled) return super.onInputEvent(pointer);\n\n        const inputController = this;\n        const graphController = this._graphController;\n        const picker = inputController.getPicker();\n        picker.updateTarget(graphController.getGraph(), pointer.x, pointer.y);\n        const target = picker.initialTarget;\n        const targetType = picker.initialTargetType;\n\n        for(const handler of this._inputHandlers)\n        {\n            if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onAction(inputController, graphController, pointer, target))\n            {\n                return true;\n            }\n        }\n\n        /** @override */\n        return super.onInputEvent(pointer);\n    }\n\n    /** @override */\n    onDblInputEvent(pointer)\n    {\n        if (this._disabled) return super.onDblInputEvent(pointer);\n\n        const inputController = this;\n        const graphController = this._graphController;\n        const picker = inputController.getPicker();\n        const target = picker.initialTarget;\n        const targetType = picker.initialTargetType;\n\n        //Make sure it is not in trash mode\n        if (inputController.isTrashMode())\n        {\n            graphController.emit('tryCreateWhileTrash');\n            return false;\n        }\n\n        for(const handler of this._inputHandlers)\n        {\n            if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onDblAction(inputController, graphController, pointer, target))\n            {\n                return true;\n            }\n        }\n\n        /** @override */\n        return super.onDblInputEvent(pointer);\n    }\n\n    /** @override */\n    onDragStart(pointer)\n    {\n        if (this._disabled) return super.onDragStart(pointer);\n\n        const inputController = this;\n        const graphController = this._graphController;\n        const picker = inputController.getPicker();\n        const target = picker.initialTarget;\n        const targetType = picker.initialTargetType;\n\n        //Make sure it is not in new edge mode\n        inputController.isNewEdge = false;\n\n        //Make sure it is not in trash mode\n        if (inputController.isTrashMode())\n        {\n            graphController.emit('tryCreateWhileTrash');\n            return false;\n        }\n\n        for(const handler of this._inputHandlers)\n        {\n            if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onDragStart(inputController, graphController, pointer, target))\n            {\n                return true;\n            }\n        }\n\n        /** @override */\n        return super.onDragStart(pointer);\n    }\n\n    /** @override */\n    onDragMove(pointer)\n    {\n        if (this._disabled) return super.onDragMove(pointer);\n\n        const inputController = this;\n        const graphController = this._graphController;\n        const picker = inputController.getPicker();\n        const target = picker.initialTarget;\n        const targetType = picker.initialTargetType;\n\n        for(const handler of this._inputHandlers)\n        {\n            if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onDragMove(inputController, graphController, pointer, target))\n            {\n                return true;\n            }\n        }\n\n        /** @override */\n        return super.onDragMove(pointer);\n    }\n\n    /** @override */\n    onDragStop(pointer)\n    {\n        if (this._disabled) return super.onDragStop(pointer);\n\n        const inputController = this;\n        const graphController = this._graphController;\n        const picker = inputController.getPicker();\n        picker.updateTarget(graphController.getGraph(), pointer.x, pointer.y);\n        const target = picker.initialTarget;\n        const targetType = picker.initialTargetType;\n\n        for(const handler of this._inputHandlers)\n        {\n            if (handler.isTargetable(inputController, pointer, target, targetType) &&\n        handler.onDragStop(inputController, graphController, pointer, target))\n            {\n                return true;\n            }\n        }\n\n        /** @override */\n        return super.onDragStop(pointer);\n    }\n\n    /** @override */\n    onPostInputEvent(pointer)\n    {\n        if (this._disabled) return super.onPostInputEvent(pointer);\n\n        const inputController = this;\n        const graphController = this._graphController;\n        const graph = graphController.getGraph();\n        const picker = inputController.getPicker();\n\n        picker.clearTarget();\n        picker.updateTarget(graph, pointer.x, pointer.y);\n\n        /** @override */\n        super.onPostInputEvent(pointer);\n    }\n\n    setTrashMode(enabled)\n    {\n        this._trashMode = enabled;\n        if (enabled)\n        {\n            this._module.getApp()._drawer.setViewportColor('var(--color-viewport-error)');\n        }\n        else\n        {\n            this._module.getApp()._drawer.setViewportColor(null);\n        }\n    }\n\n    isTrashMode()\n    {\n        return this._trashMode;\n    }\n\n    setInputScheme(shouldInputFirst)\n    {\n        this._swapMouseScheme = !shouldInputFirst;\n    }\n\n    getInputScheme()\n    {\n        return this._swapMouseScheme;\n    }\n\n    isMoveMode()\n    {\n        const result = this._inputAdapter.isAltInput();\n        return this._swapMouseScheme ? !result : result;\n    }\n\n    isDragging()\n    {\n        return this._inputAdapter.isDragging();\n    }\n\n    isActionMode()\n    {\n        return this._inputAdapter.isPointerActive() ?\n        //Is considered an input when NOT moving or when creating a new edge...\n            this.isNewEdge || !this.isMoveMode() :\n        //If not active, just show default input...\n            !this._swapMouseScheme;\n    }\n\n    getPicker()\n    {\n        return this._picker;\n    }\n\n    getSelectionBox()\n    {\n        return this._selectionBox;\n    }\n\n    getInputHandlers()\n    {\n        return this._inputHandlers;\n    }\n}\n\nexport default InputController;\n","class AbstractGraphController\n{\n    constructor(module, graph, labeler, parser)\n    {\n        if (!module) throw new Error('Missing module for graph controller');\n        if (!graph) throw new Error('Missing graph for graph controller');\n        if (!labeler) throw new Error('Missing graph labeler for graph controller');\n        if (!parser) throw new Error('Missing graph parser for graph controller');\n\n        this._module = module;\n        this._graph = graph;\n        this._labeler = labeler;\n        this._parser = parser;\n    }\n\n    initialize(module) {}\n    destroy(module) {}\n    update(module) {}\n\n    getGraphParser(type='JSON')\n    {\n        const parsers = this._parser;\n        if (parsers && type in parsers)\n        {\n            return parsers[type];\n        }\n        else\n        {\n            throw new Error('Unsupported type for graph parser \\'' + type + '\\'');\n        }\n    }\n    getGraphLabeler() { return this._labeler; }\n    getGraph() { return this._graph; }\n    getModule() { return this._module; }\n}\n\nexport default AbstractGraphController;\n","class GraphChangeHandler\n{\n    constructor(refreshTicks=10)\n    {\n        this._cachedGraphHash = 0;\n\n        this._refreshTicks = refreshTicks;\n        this._elapsedTicks = Infinity;\n\n        this._listeners = [];\n    }\n\n    addListener(listener)\n    {\n        if (typeof listener !== 'function')\n            throw new Error('Cannot add uncallable listener');\n        this._listeners.push(listener);\n    }\n\n    removeListener(listener)\n    {\n        const i = this._listeners.indexOf(listener);\n        if (i >= 0)\n        {\n            this._listeners.splice(i, 1);\n            return true;\n        }\n        return false;\n    }\n\n    clearListeners()\n    {\n        this._listeners.length = 0;\n    }\n\n    getListeners()\n    {\n        return this._listeners;\n    }\n\n    reset()\n    {\n        this._elapsedTicks = 0;\n        this._cachedGraphHash = 0;\n    }\n\n    update(graph)\n    {\n        if (++this._elapsedTicks >= this._refreshTicks)\n        {\n            this._elapsedTicks = 0;\n\n            const graphHash = graph.getHashCode(false);\n            if (graphHash !== this._cachedGraphHash)\n            {\n                this._cachedGraphHash = graphHash;\n                for(const listener of this._listeners)\n                {\n                    listener(graph);\n                }\n            }\n        }\n    }\n}\n\nexport default GraphChangeHandler;\n","import AbstractGraphController from 'modules/abstract/AbstractGraphController.js';\n\nimport Eventable from 'util/Eventable.js';\nimport GraphEdge from 'graph/elements/GraphEdge.js';\nimport GraphLayout from 'modules/fsa/graph/GraphLayout.js';\n\nimport GraphChangeHandler from 'experimental/GraphChangeHandler.js';\n\nconst NODE_SPAWN_RADIUS = 64;\nconst DEFAULT_AUTO_RENAME = true;\nconst GRAPH_REFRESH_RATE = 30;\nconst DELETE_ON_EMPTY = true;\n\nclass GraphController extends AbstractGraphController\n{\n    constructor(module, graph, labeler, parser)\n    {\n        super(module, graph, labeler, parser);\n\n        this.inputController = null;\n        this._graphChangeHandler = new GraphChangeHandler(GRAPH_REFRESH_RATE);\n\n        this.getGraphLabeler().setGraphController(this);\n\n        this.prevQuad = {\n            radians: 0, length: 0,\n            x: 0, y: 0\n        };\n        this.prevEdgeTo = null;\n        this.prevX = 0;\n        this.prevY = 0;\n\n        this.shouldAutoLabel = DEFAULT_AUTO_RENAME;\n\n        //The difference between controller events vs graph events is: controller has user-intent\n\n        //tryCreateWhileTrash()\n        this.registerEvent('tryCreateWhileTrash');\n    }\n\n    /** @override */\n    initialize(module)\n    {\n        super.initialize(module);\n\n        this._module = module;\n        this.inputController = module.getInputController();\n    }\n\n    /** @override */\n    destroy(module)\n    {\n        super.destroy(module);\n    }\n\n    /** @override */\n    update(module)\n    {\n        super.update(module);\n\n        this._graphChangeHandler.update(this._graph);\n    }\n\n    getGraphChangeHandler()\n    {\n        return this._graphChangeHandler;\n    }\n\n    applyAutoLayout()\n    {\n        GraphLayout.applyLayout(this.getGraph());\n\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    applyAutoRename()\n    {\n        const graphLabeler = this._labeler;\n        const graph = this._graph;\n\n        if (graph.isEmpty()) return;\n\n        //Reset all default labels...\n        for(const node of graph.getNodes())\n        {\n            if (!node.getNodeCustom()) node.setNodeLabel('');\n        }\n\n        //Rename all default labels appropriately...\n        for(const node of graph.getNodes())\n        {\n            if (!node.getNodeCustom())\n            {\n                node.setNodeLabel(graphLabeler.getDefaultNodeLabel());\n            }\n        }\n    }\n\n    onGraphIntentImport()\n    {\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    onGraphIntentCreateEdge(edge)\n    {\n    }\n\n    onGraphIntentFinishEdge(edge)\n    {\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    onGraphIntentMoveEdge(edge, nextQuad, prevQuad)\n    {\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    onGraphIntentChangeDestination(edge, destinationNode, prevDestination, prevQuad)\n    {\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    onGraphIntentChangeInitial(nextInitial, prevInitial)\n    {\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    onGraphIntentMoveNode(node, nextX, nextY, prevX, prevY)\n    {\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    onGraphIntentMoveAllNodes(nodes, dx, dy)\n    {\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    onGraphIntentDeleteNodes(node, targetNodes, prevX, prevY)\n    {\n        if (this.shouldAutoLabel)\n        {\n            this.applyAutoRename();\n        }\n    }\n\n    setAutoRenameNodes(enable)\n    {\n        const prev = this.shouldAutoLabel;\n        this.shouldAutoLabel = enable;\n        if (enable && !prev)\n        {\n            this.applyAutoRename();\n        }\n    }\n\n    shouldAutoRenameNodes()\n    {\n        return this.shouldAutoLabel;\n    }\n\n    renameNode(node, name)\n    {\n        node.setNodeLabel(name);\n        node.setNodeCustom(true);\n\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    createNode(x, y)\n    {\n        if (typeof x === 'undefined') x = (Math.random() * NODE_SPAWN_RADIUS * 2) - NODE_SPAWN_RADIUS;\n        if (typeof y === 'undefined') y = (Math.random() * NODE_SPAWN_RADIUS * 2) - NODE_SPAWN_RADIUS;\n\n        const node = this.getGraph().createNode(x, y);\n\n        const newNodeLabel = this.getGraphLabeler().getDefaultNodeLabel();\n        node.setNodeLabel(newNodeLabel);\n\n        this.getModule().getApp().getUndoManager().captureEvent();\n        return node;\n    }\n\n    toggleNode(node)\n    {\n        const prev = node.getNodeAccept();\n        const result = !prev;\n        //Toggle accept for selected node\n        node.setNodeAccept(result);\n\n        //Emit event\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    deleteSelectedNodes(selectedNode)\n    {\n        const selectionBox = this.inputController.getSelectionBox();\n        const selection = selectionBox.getSelection(this.getGraph()).slice();\n\n        //Remove from graph\n        for(const node of selection)\n        {\n            this.getGraph().deleteNode(node);\n        }\n\n        //Remove from selection\n        selectionBox.clearSelection();\n\n        //Emit event\n        this.onGraphIntentDeleteNodes(selectedNode, selection, this.prevX, this.prevY);\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    deleteTargetNode(target)\n    {\n        this.getGraph().deleteNode(target);\n\n        //Emit event\n        this.onGraphIntentDeleteNodes(target, [target], this.prevX, this.prevY);\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    deleteTargetNodes(targets)\n    {\n        if (!targets || targets.length <= 0) return;\n\n        const graph = this.getGraph();\n        for(const node of targets)\n        {\n            graph.deleteNode(node);\n        }\n\n        //Emit event\n        this.onGraphIntentDeleteNodes(targets[0], targets, this.prevX, this.prevY);\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    deleteTargetEdge(target)\n    {\n        this.getGraph().deleteEdge(target);\n\n        //Emit event\n        this.getModule().getApp().getUndoManager().captureEvent();\n    }\n\n    deleteTargetEdges(targets)\n    {\n        if (!targets || targets.length <= 0) return;\n\n        for(const target of targets)\n        {\n            this.deleteTargetEdge(target);\n        }\n    }\n\n    moveNodeTo(pointer, node, x, y)\n    {\n        const nodeSize = node.getNodeSize();\n        for(const other of this.getGraph().getNodes())\n        {\n            //Update node collision\n            if (node === other) continue;\n\n            const dx = x - other.x;\n            const dy = y - other.y;\n            const angle = Math.atan2(dy, dx);\n\n            const diameter = (nodeSize * 2);\n            const nextDX = other.x + (Math.cos(angle) * diameter) - x;\n            const nextDY = other.y + (Math.sin(angle) * diameter) - y;\n\n            if (dx * dx + dy * dy < nodeSize * nodeSize * 4)\n            {\n                x += nextDX;\n                y += nextDY;\n            }\n        }\n\n        node.x = x;\n        node.y = y;\n    }\n\n    moveMultipleNodesTo(pointer, nodes, x, y)\n    {\n    //Moves all nodes by difference between initial position with passed-in x and y\n        const pos = pointer.getInputEventPosition();\n        const dx = x - pos.x;\n        const dy = y - pos.y;\n        for(const node of nodes)\n        {\n            node.x += dx;\n            node.y += dy;\n        }\n\n        //Updates initial position to passed-in x and y to maintain relative position\n        pointer.changeInputEventPosition(x, y);\n    }\n\n    moveEdgeTo(pointer, edge, x, y)\n    {\n        edge.setQuadraticByCoords(x, y);\n    }\n\n    moveEndpointTo(pointer, edge, x, y)\n    {\n    //Get ONLY node at x and y (cannot use hover target, since it is not ONLY nodes)\n        const picker = this.inputController.getPicker();\n        const dst = picker.getPickHandler('node').getTargetAt(this.getGraph(), x, y) || pointer;\n\n        edge.changeDestinationNode(dst);\n\n        //If the cursor returns to the state after leaving it...\n        if (edge.isSelfLoop())\n        {\n            //Make it a self loop\n            const sourceNode = edge.getEdgeFrom();\n            const dx = sourceNode.x - x;\n            const dy = sourceNode.y - y;\n            const radians = Math.atan2(dy, dx) + Math.PI;\n            edge.setQuadraticRadians(radians);\n        }\n        //Otherwise, maintain original curve\n        else\n        {\n            //TODO: This also causes self-loops to act weird when no longer a self loop\n            edge.setQuadraticRadians(this.prevQuad.radians).setQuadraticLength(this.prevQuad.length);\n        }\n    }\n\n    openLabelEditor(target, defaultValue=null, callback=null)\n    {\n        const labelEditor = this.getModule().getInputManager().getLabelEditorManager().getLabelEditorComponent();\n        const prevLabel = defaultValue;\n        labelEditor.openEditor(target, defaultValue, (target, value) => \n        {\n            if (DELETE_ON_EMPTY && (!value || value.length <= 0) && target instanceof GraphEdge)\n            {\n                //Assumes target is GraphEdge\n                this._graph.deleteEdge(target);\n            }\n            else\n            {\n                if (target instanceof GraphEdge)\n                {\n                    target.setEdgeLabel(value);\n                }\n                else\n                {\n                    target.setNodeLabel(value);\n                }\n\n                if (!prevLabel || (prevLabel.length > 0 && value !== prevLabel))\n                {\n                    this.getModule().getApp().getUndoManager().captureEvent();\n                }\n                if (callback) callback(target, value);\n            }\n        }, (target) => \n        {\n            if (DELETE_ON_EMPTY && (!prevLabel || prevLabel.length <= 0) && target instanceof GraphEdge)\n            {\n                //Assumes target is GraphEdge\n                this._graph.deleteEdge(target);\n            }\n        });\n    }\n\n    focusOnNode(node)\n    {\n    //Center workspace at focused node; inverted due to graph-to-screen space\n        this.inputController.getInputAdapter().getViewportAdapter().setOffset(-node.x, -node.y);\n    }\n\n    focusOnEdge(edge)\n    {\n    //Center workspace at focused edge; inverted due to graph-to-screen space\n        const center = edge.getCenterPoint();\n        this.inputController.getInputAdapter().getViewportAdapter().setOffset(-center.x, -center.y);\n    }\n\n    focusOnNodes(nodes)\n    {\n    //Center workspace at the average of focused nodes; inverted due to graph-to-screen space\n        const length = nodes.length;\n        let ax = 0;\n        let ay = 0;\n        for(const node of nodes)\n        {\n            ax += node.x;\n            ay += node.y;\n        }\n        this.inputController.getInputAdapter().getViewportAdapter().setOffset(-ax / length, -ay / length);\n    }\n}\n//Mixin Eventable\nEventable.mixin(GraphController);\n\nexport default GraphController;\n","import AbstractInputHandler from 'util/input/AbstractInputHandler.js';\n\nclass SelectionBoxInputHandler extends AbstractInputHandler\n{\n    constructor(inputController, graphController, selectionBox)\n    {\n        super();\n\n        this._inputController = inputController;\n        this._graphController = graphController;\n        this._selectionBox = selectionBox;\n    }\n\n    /** @override */\n    onDragStart(pointer)\n    {\n        if (!this._inputController.isMoveMode())\n        {\n            //Begin selection box...\n            this._selectionBox.beginSelection(this._graphController.getGraph(), pointer.x, pointer.y);\n            return true;\n        }\n\n        return false;\n    }\n\n    /** @override */\n    onDragMove(pointer)\n    {\n    //If the selection box is active...\n        if (this._selectionBox.isSelecting())\n        {\n            //Update the selection box\n            this._selectionBox.updateSelection(this._graphController.getGraph(), pointer.x, pointer.y);\n            return true;\n        }\n\n        return false;\n    }\n\n    /** @override */\n    onDragStop(pointer)\n    {\n    //If was trying to select...\n        if (this._selectionBox.isSelecting())\n        {\n            //Stop selecting stuff, fool.\n            this._selectionBox.endSelection(this._graphController.getGraph(), pointer.x, pointer.y);\n            return true;\n        }\n\n        return false;\n    }\n}\n\nexport default SelectionBoxInputHandler;\n","import AbstractInputHandler from 'util/input/AbstractInputHandler.js';\n\nclass ViewportInputHandler extends AbstractInputHandler\n{\n    constructor()\n    {\n        super();\n\n        this._prevX = 0;\n        this._prevY = 0;\n    }\n\n    /** @override */\n    onDragStart(pointer)\n    {\n        this._prevX = pointer.x;\n        this._prevY = pointer.y;\n        return true;\n    }\n\n    /** @override */\n    onDragMove(pointer)\n    {\n        const dx = pointer.x - this._prevX;\n        const dy = pointer.y - this._prevY;\n        const adapter = pointer.getInputAdapter();\n        const viewport = adapter.getViewportAdapter();\n        viewport.addOffset(dx, dy, true);\n        return true;\n    }\n\n    /** @override */\n    onDragStop(pointer)\n    {\n    //Do nothing. It should already be moved.\n        return true;\n    }\n}\n\nexport default ViewportInputHandler;\n","import React from 'react';\n\nexport const SUBMIT_DELAY = 30;\nexport const SUBMIT_KEY = \"Enter\";\nexport const CANCEL_KEY = \"Escape\";\n\nclass PatternInput extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.inputElement = null;\n\n    this.placeholder = \"\";\n    this.maxLength = 524288;/*This is the default value*/\n    this.multiLine = true;\n    this.formatter = null;\n\n    this._submitTimeout = null;\n    this._submit = props.submitOnBlur;\n    this._skipBlur = false;\n    this._skipSelect = false;\n\n    this.state = {\n      prevValue: \"\",\n      value: \"\"\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n  }\n\n  setFormatter(formatter)\n  {\n    this.formatter = formatter;\n    return this;\n  }\n\n  setPlaceholder(placeholder)\n  {\n    this.placeholder = placeholder;\n    return this;\n  }\n\n  onFocus(e)\n  {\n    if (this._skipSelect)\n    {\n      this.inputElement.select();\n      this._skipSelect = false;\n    }\n  }\n\n  onBlur(e)\n  {\n    if (!this._submitTimeout)\n    {\n      this._submitTimeout = setTimeout(() => {\n        this._submitTimeout = null;\n        if (this._skipBlur) return;\n\n        const submit = this._submit;\n        this._submit = this.props.submitOnBlur;\n        if (document.activeElement !== this.inputElement && submit)\n        {\n          const value = this.state.value;\n          if (this.props.onSubmit) this.props.onSubmit(value);\n\n          this.setState({prevValue: value});\n        }\n        else\n        {\n          this.setState((prev, props) => {\n            return {value: prev.prevValue};\n          });\n        }\n\n        if (this.props.onBlur) this.props.onBlur(e);\n      }, SUBMIT_DELAY);\n    }\n  }\n\n  onKeyDown(e)\n  {\n    if (e.key === SUBMIT_KEY)\n    {\n      if (e.shiftKey && this.multiLine) return;\n\n      this._submit = true;\n      this.inputElement.blur();\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    else if (e.key === CANCEL_KEY)\n    {\n      this.setState((prev, props) => {\n        return {value: prev.prevValue};\n      }, () => {\n        this._submit = false;\n        this.inputElement.blur();\n      });\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  onChange(e)\n  {\n    const target = e.target;\n    const caretPosition = target.selectionStart;\n    let value = target.value;\n    if (this.formatter)\n    {\n      value = this.formatter(value);\n    }\n\n    this.setState({value: value}, () => {\n      target.selectionEnd = caretPosition;\n    });\n  }\n\n  focus(select=true)\n  {\n    this._skipSelect = select;\n    this.inputElement.focus();\n  }\n\n  ignoreBlur(ignore)\n  {\n    const prev = this._skipBlur;\n    this._skipBlur = ignore;\n    return prev !== ignore;\n  }\n\n  appendValue(string, separator=\"\", format=true)\n  {\n    const value = this.state.value;\n    if (value && value.length + string.length > this.maxLength) return;\n\n    let result;\n    if (value && value.length > 0)\n    {\n      result = value + separator + string;\n    }\n    else\n    {\n      result = string;\n    }\n\n    if (format && this.formatter)\n    {\n      result = this.formatter(result);\n    }\n\n    this.setState((prev, props) => {\n      return {value: result};\n    });\n  }\n\n  resetValue(string)\n  {\n    this.setState({prevValue: string, value: string});\n  }\n\n  setValue(string, format=true)\n  {\n    let value = string;\n    if (format && this.formatter)\n    {\n      value = this.formatter(value);\n    }\n    this.setState({value: value});\n  }\n\n  getValue()\n  {\n    return this.state.value;\n  }\n\n  /** @override */\n  render()\n  {\n    const placeholder = this.placeholder;\n    const maxlength = this.maxLength;\n    const multiline = this.multiLine;\n    const disabled = this.props.disabled;\n\n    const value = this.state.value;\n\n    return (\n      <div id={this.props.id}\n        className={this.props.className}\n        style={this.props.style}>\n        {\n          multiline ?\n          <textarea ref={ref=>this.inputElement=ref}\n            type=\"text\" rows=\"1\" spellCheck=\"false\"\n            disabled={disabled}\n            placeholder={placeholder}\n            maxLength={maxlength}\n            value={value}\n            onChange={this.onChange}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            onKeyDown={this.onKeyDown}/>\n          :\n          <input ref={ref=>this.inputElement=ref}\n            type=\"text\" spellCheck=\"false\"\n            disabled={disabled}\n            placeholder={placeholder}\n            maxLength={maxlength}\n            value={value}\n            onChange={this.onChange}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            onKeyDown={this.onKeyDown}/>\n        }\n      </div>\n    );\n  }\n}\n\nexport default PatternInput;\n","import React from 'react';\nimport Style from './LabelEditorView.css';\n\nimport GraphElement from 'graph/elements/GraphElement.js';\n\nimport PatternInput from 'deprecated/system/patterninput/PatternInput.js';\n\nclass LabelEditorView extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.ref = null;\n        this.inputComponent = null;\n\n        this.state = {\n            open: false\n        };\n\n        this._target = null;\n        this._targetCallback = null;\n\n        this.onInputSubmit = this.onInputSubmit.bind(this);\n        this.onInputBlur = this.onInputBlur.bind(this);\n    }\n\n    openEditor(graphElement, defaultValue = null, onSubmit = null, onCancel = null)\n    {\n        if (!(graphElement instanceof GraphElement)) throw new Error('Can only open editor for GraphElements');\n\n        this._target = graphElement;\n        this._targetOnSubmit = onSubmit;\n        this._targetOnCancel = onCancel;\n\n        const formatter = this.props.labeler.getLabelFormatter(this._target);\n        this.inputComponent.setFormatter(formatter);\n\n        this.setState({ open: true }, () => \n        {\n            if (defaultValue !== null)\n            {\n                this.inputComponent.resetValue(defaultValue);\n            }\n            this.inputComponent.focus();\n        });\n    }\n\n    closeEditor()\n    {\n        this._target = null;\n        this._targetOnSubmit = null;\n        this._targetOnCancel = null;\n\n        this.inputComponent.setFormatter(null);\n\n        this.setState({ open: false });\n    }\n\n    isEditorOpen()\n    {\n        return this.state.open;\n    }\n\n    getTarget()\n    {\n        return this._target;\n    }\n\n    onInputSubmit(value)\n    {\n        if (this._targetOnSubmit)\n        {\n            this._targetOnSubmit(this._target, value);\n            //Don't handle cancel callbacks...\n            this._targetOnCancel = null;\n        }\n    }\n\n    onInputBlur(e)\n    {\n        if (this._targetOnCancel)\n        {\n            this._targetOnCancel(this._target);\n            //Don't handle submit callbacks...\n            this._targetOnSubmit = null;\n        }\n        this.closeEditor();\n    }\n\n    /** @override */\n    render()\n    {\n        const isEditorOpen = this.state.open;\n\n        const target = this._target;\n        const targetStyle = this.props.style || {};\n        const viewport = this.props.viewport;\n        //const labeler = this.props.labeler;\n\n        if (target)\n        {\n            const center = target.getCenterPoint();\n            const element = viewport.getElement();\n            const parentClientRect = element.getBoundingClientRect();\n            const screenPos = transformViewToScreen(\n                element,\n                center.x + viewport.getOffsetX(),\n                center.y + viewport.getOffsetY()\n            );\n            const x = screenPos.x;\n            const y = screenPos.y;\n            const offsetX = -(this.ref.offsetWidth / 2) - parentClientRect.left;\n            const offsetY = -(this.ref.offsetHeight / 2) - parentClientRect.top;\n\n            targetStyle['top'] = (y + offsetY) + 'px';\n            targetStyle['left'] = (x + offsetX) + 'px';\n        }\n\n        return (\n            <div ref={ref => this.ref = ref}\n                id={this.props.id}\n                className={Style.editor_container +\n                    (isEditorOpen ? ' open ' : '') +\n                    ' ' + this.props.className}\n                style={targetStyle}>\n                <PatternInput ref={ref => this.inputComponent = ref}\n                    submitOnBlur={this.props.saveOnExit}\n                    onSubmit={this.onInputSubmit}\n                    onBlur={this.onInputBlur} />\n                <div className={Style.tray_container}>\n                    {this.props.children}\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction transformViewToScreen(svg, x, y)\n{\n    const ctm = svg.getScreenCTM();\n    return {\n        x: (x * ctm.a) + ctm.e,\n        y: (y * ctm.d) + ctm.f\n    };\n}\n\nexport default LabelEditorView;\n","import React from 'react';\n\nimport LabelEditorView from './LabelEditorView.js';\nimport {RENDER_LAYER_WORKSPACE_OVERLAY} from 'session/manager/RenderManager.js';\n\nclass LabelEditorManager\n{\n    constructor(app)\n    {\n        this._app = app;\n\n        this._labelEditorComponent = React.createRef();\n        this._labelEditorRenderer = null;\n        this._labeler = null;\n    }\n\n    setLabelEditorRenderer(renderer)\n    {\n        this._labelEditorRenderer = renderer;\n        return this;\n    }\n\n    setLabeler(labeler)\n    {\n        this._labeler = labeler;\n        return this;\n    }\n\n    //DuckType(SessionListener)\n    onSessionStart(session)\n    {\n        const currentModule = session.getCurrentModule();\n        const viewport = session.getApp().getInputAdapter().getViewportAdapter();\n\n        const LabelEditorRenderer = this._labelEditorRenderer;\n        const labeler = this._labeler;\n\n        session.getApp().getRenderManager().addRenderer(RENDER_LAYER_WORKSPACE_OVERLAY, props => (\n            <LabelEditorView ref={this._labelEditorComponent}\n                labeler={labeler}\n                viewport={viewport}\n                saveOnExit={true}>\n                {/* LabelEditor objects */\n                    LabelEditorRenderer &&\n          <LabelEditorRenderer currentModule={currentModule} parent={this._labelEditorComponent.current}/>}\n            </LabelEditorView>\n        ));\n    }\n\n    //DuckType(SessionListener)\n    onSessionStop(session)\n    {\n        this._labeler = null;\n        this._labelEditorRenderer = null;\n    }\n\n    getLabelEditorComponent()\n    {\n        return this._labelEditorComponent.current;\n    }\n}\n\nexport default LabelEditorManager;\n","import InputController from 'modules/nodalgraph/controller/InputController.js';\nimport GraphController from 'modules/nodalgraph/controller/GraphController.js';\n\nimport SelectionBoxInputHandler from 'modules/nodalgraph/controller/SelectionBoxInputHandler.js';\nimport ViewportInputHandler from 'modules/nodalgraph/controller/ViewportInputHandler.js';\n\nimport LabelEditorManager from 'session/manager/labeleditor/LabelEditorManager.js';\n\nimport {WARNING_LAYOUT_ID} from 'session/manager/notification/NotificationManager.js';\n\nexport const TRASH_EDITING_NOTIFICATION_TAG = 'tryCreateWhileTrash';\n\nclass NodalGraphInputManager\n{\n    constructor(currentModule, nodalGraph, graphLabeler, graphParser, labelEditorRenderer)\n    {\n        this._graphController = new GraphController(currentModule, nodalGraph, graphLabeler, graphParser);\n\n        this._labelEditorManager = new LabelEditorManager(currentModule.getApp())\n            .setLabelEditorRenderer(labelEditorRenderer)\n            .setLabeler(graphLabeler);\n\n        this._inputController = null;\n        this._selectionBoxInputHandler = null;\n        this._viewportInputHandler = null;\n    }\n\n    //Not yet implemented\n    setGraphLabeler(labeler)\n    {\n        this._graphLabeler = labeler;\n        return this;\n    }\n\n    //Not yet implemented\n    setGraphParser(parser)\n    {\n        this._graphParser = parser;\n        return this;\n    }\n\n    update(currentModule)\n    {\n        const inputController = this.getInputController();\n        const graphController = this.getGraphController();\n        inputController.update(currentModule);\n        graphController.update(currentModule);\n    }\n\n    //DuckType(SessionListener)\n    onSessionStart(session)\n    {\n        const app = session.getApp();\n        const currentModule = session.getCurrentModule();\n\n        this._inputController = new InputController(currentModule, currentModule.getApp().getInputAdapter());\n        this._selectionBoxInputHandler = new SelectionBoxInputHandler(this._inputController, this._graphController, this._inputController.getSelectionBox());\n        this._viewportInputHandler = new ViewportInputHandler();\n\n        currentModule.getApp().getInputAdapter()\n            .addInputHandler(this._inputController)\n            .addInputHandler(this._selectionBoxInputHandler)\n            .addInputHandler(this._viewportInputHandler);\n\n        const inputController = this.getInputController();\n        const graphController = this.getGraphController();\n        inputController.initialize(currentModule);\n        graphController.initialize(currentModule);\n\n        this._labelEditorManager.onSessionStart(session);\n\n        //Notify on create in delete mode\n        const tryCreateWhileTrash = () => \n        {\n            if (this._inputController.isTrashMode())\n            {\n                app.getNotificationManager().pushNotification(\n                    I18N.toString('message.warning.cannotmodify'),\n                    WARNING_LAYOUT_ID, TRASH_EDITING_NOTIFICATION_TAG, null, true);\n            }\n        };\n        this._graphController.on('tryCreateWhileTrash', tryCreateWhileTrash);\n    }\n\n    //DuckType(SessionListener)\n    onSessionStop(session)\n    {\n        session.getApp().getInputAdapter()\n            .removeInputHandler(this._inputController)\n            .removeInputHandler(this._selectionBoxInputHandler)\n            .removeInputHandler(this._viewportInputHandler);\n\n        this._labelEditorManager.onSessionStop(session);\n\n        const currentModule = session.getCurrentModule();\n        const inputController = this.getInputController();\n        const graphController = this.getGraphController();\n        graphController.destroy(currentModule);\n        inputController.destroy(currentModule);\n    }\n\n    getLabelEditorManager() { return this._labelEditorManager; }\n    getGraphParser() { return this._graphController.getGraphParser(); }\n    getGraphLabeler() { return this._graphController.getGraphLabeler(); }\n    getGraphController() { return this._graphController; }\n    getInputController() { return this._inputController; }\n}\n\nexport default NodalGraphInputManager;\n","//https://www.flaticon.com/free-icon/png_136523\nimport React from 'react';\n\nclass PNGIcon extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    return <svg className=\"png-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 56 56\">\n      <g>\n        <path fill=\"#E9E9E0\" d=\"M36.985,0H7.963C7.155,0,6.5,0.655,6.5,1.926V55c0,0.345,0.655,1,1.463,1h40.074 c0.808,0,1.463-0.655,1.463-1V12.978c0-0.696-0.093-0.92-0.257-1.085L37.607,0.257C37.442,0.093,37.218,0,36.985,0z\"/>\n        <path fill=\"#659C35\" d=\"M48.037,56H7.963C7.155,56,6.5,55.345,6.5,54.537V39h43v15.537C49.5,55.345,48.845,56,48.037,56z\"/>\n        <polygon fill=\"#D9D7CA\" points=\"37.5,0.151 37.5,12 49.349,12 \t\"/>\n        <g>\n          <path fill=\"#FFFFFF\" d=\"M17.385,53h-1.641V42.924h2.898c0.428,0,0.852,0.068,1.271,0.205 c0.419,0.137,0.795,0.342,1.128,0.615c0.333,0.273,0.602,0.604,0.807,0.991s0.308,0.822,0.308,1.306 c0,0.511-0.087,0.973-0.26,1.388c-0.173,0.415-0.415,0.764-0.725,1.046c-0.31,0.282-0.684,0.501-1.121,0.656 s-0.921,0.232-1.449,0.232h-1.217V53z M17.385,44.168v3.992h1.504c0.2,0,0.398-0.034,0.595-0.103 c0.196-0.068,0.376-0.18,0.54-0.335c0.164-0.155,0.296-0.371,0.396-0.649c0.1-0.278,0.15-0.622,0.15-1.032 c0-0.164-0.023-0.354-0.068-0.567c-0.046-0.214-0.139-0.419-0.28-0.615c-0.142-0.196-0.34-0.36-0.595-0.492 c-0.255-0.132-0.593-0.198-1.012-0.198H17.385z\"/>\n          <path fill=\"#FFFFFF\" d=\"M31.316,42.924V53h-1.668l-3.951-6.945V53h-1.668V42.924h1.668l3.951,6.945v-6.945H31.316z\"/>\n          <path fill=\"#FFFFFF\" d={\"M41.16,47.805v3.896c-0.21,0.265-0.444,0.48-0.704,0.649s-0.533,0.308-0.82,0.417 \" +\n            \"S39.052,52.954,38.747,53c-0.306,0.046-0.608,0.068-0.909,0.068c-0.602,0-1.155-0.109-1.661-0.328s-0.948-0.542-1.326-0.971 \" +\n            \"c-0.378-0.429-0.675-0.966-0.889-1.613c-0.214-0.647-0.321-1.395-0.321-2.242s0.107-1.593,0.321-2.235 \" +\n            \"c0.214-0.643,0.51-1.178,0.889-1.606c0.378-0.429,0.822-0.754,1.333-0.978c0.51-0.224,1.062-0.335,1.654-0.335 \" +\n            \"c0.547,0,1.057,0.091,1.531,0.273c0.474,0.183,0.897,0.456,1.271,0.82l-1.135,1.012c-0.219-0.265-0.47-0.456-0.752-0.574 \" +\n            \"c-0.283-0.118-0.574-0.178-0.875-0.178c-0.337,0-0.659,0.063-0.964,0.191c-0.306,0.128-0.579,0.344-0.82,0.649 \" +\n            \"c-0.242,0.306-0.431,0.699-0.567,1.183s-0.21,1.075-0.219,1.777c0.009,0.684,0.08,1.276,0.212,1.777 \" +\n            \"c0.132,0.501,0.314,0.911,0.547,1.23s0.497,0.556,0.793,0.711c0.296,0.155,0.608,0.232,0.937,0.232c0.1,0,0.234-0.007,0.403-0.021 \" +\n            \"c0.168-0.014,0.337-0.036,0.506-0.068c0.168-0.032,0.33-0.075,0.485-0.13c0.155-0.055,0.269-0.132,0.342-0.232v-2.488h-1.709 v-1.121H41.16z\"}/>\n        </g>\n        <circle fill=\"#F3D55B\" cx=\"18.931\" cy=\"14.431\" r=\"4.569\"/>\n        <polygon fill=\"#88C057\" points=\"6.5,39 17.5,39 49.5,39 49.5,28 39.5,18.5 29,30 23.517,24.517 \t\"/>\n      </g>\n    </svg>;\n  }\n}\n\nexport default PNGIcon;\n","//https://www.flaticon.com/free-icon/jpg_136524\nimport React from 'react';\n\nclass JPGIcon extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  render()\n  {\n    return <svg className=\"jpg-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 56 56\">\n      <g>\n        <path fill=\"#E9E9E0\" d=\"M36.985,0H7.963C7.155,0,6.5,0.655,6.5,1.926V55c0,0.345,0.655,1,1.463,1h40.074 c0.808,0,1.463-0.655,1.463-1V12.978c0-0.696-0.093-0.92-0.257-1.085L37.607,0.257C37.442,0.093,37.218,0,36.985,0z\"/>\n        <polygon fill=\"#D9D7CA\" points=\"37.5,0.151 37.5,12 49.349,12 \t\"/>\n        <circle fill=\"#F3D55B\" cx=\"18.931\" cy=\"14.431\" r=\"4.569\"/>\n        <polygon fill=\"#26B99A\" points=\"6.5,39 17.5,39 49.5,39 49.5,28 39.5,18.5 29,30 23.517,24.517 \t\"/>\n        <path fill=\"#14A085\" d=\"M48.037,56H7.963C7.155,56,6.5,55.345,6.5,54.537V39h43v15.537C49.5,55.345,48.845,56,48.037,56z\"/>\n        <g>\n          <path fill=\"#FFFFFF\" d={\"M21.426,42.65v7.848c0,0.474-0.087,0.873-0.26,1.196c-0.173,0.323-0.406,0.583-0.697,0.779 \" +\n            \"c-0.292,0.196-0.627,0.333-1.005,0.41C19.085,52.961,18.696,53,18.295,53c-0.201,0-0.436-0.021-0.704-0.062 \" +\n            \"c-0.269-0.041-0.547-0.104-0.834-0.191s-0.563-0.185-0.827-0.294c-0.265-0.109-0.488-0.232-0.67-0.369l0.697-1.107 \" +\n            \"c0.091,0.063,0.221,0.13,0.39,0.198c0.168,0.068,0.353,0.132,0.554,0.191c0.2,0.06,0.41,0.111,0.629,0.157 \" +\n            \"s0.424,0.068,0.615,0.068c0.483,0,0.868-0.094,1.155-0.28s0.439-0.504,0.458-0.95V42.65H21.426z\"}/>\n          <path fill=\"#FFFFFF\" d={\"M25.514,52.932h-1.641V42.855h2.898c0.428,0,0.852,0.068,1.271,0.205 \" +\n            \"c0.419,0.137,0.795,0.342,1.128,0.615c0.333,0.273,0.602,0.604,0.807,0.991s0.308,0.822,0.308,1.306 \" +\n            \"c0,0.511-0.087,0.973-0.26,1.388c-0.173,0.415-0.415,0.764-0.725,1.046c-0.31,0.282-0.684,0.501-1.121,0.656 \" +\n            \"s-0.921,0.232-1.449,0.232h-1.217V52.932z M25.514,44.1v3.992h1.504c0.2,0,0.398-0.034,0.595-0.103 \" +\n            \"c0.196-0.068,0.376-0.18,0.54-0.335s0.296-0.371,0.396-0.649c0.1-0.278,0.15-0.622,0.15-1.032c0-0.164-0.023-0.354-0.068-0.567 \" +\n            \"c-0.046-0.214-0.139-0.419-0.28-0.615c-0.142-0.196-0.34-0.36-0.595-0.492C27.5,44.166,27.163,44.1,26.744,44.1H25.514z\"}/>\n          <path fill=\"#FFFFFF\" d={\"M39.5,47.736v3.896c-0.21,0.265-0.444,0.48-0.704,0.649s-0.533,0.308-0.82,0.417 \" +\n            \"s-0.583,0.187-0.889,0.232C36.781,52.978,36.479,53,36.178,53c-0.602,0-1.155-0.109-1.661-0.328s-0.948-0.542-1.326-0.971 \" +\n            \"c-0.378-0.429-0.675-0.966-0.889-1.613c-0.214-0.647-0.321-1.395-0.321-2.242s0.107-1.593,0.321-2.235 \" +\n            \"c0.214-0.643,0.51-1.178,0.889-1.606c0.378-0.429,0.822-0.754,1.333-0.978c0.51-0.224,1.062-0.335,1.654-0.335 \" +\n            \"c0.547,0,1.057,0.091,1.531,0.273c0.474,0.183,0.897,0.456,1.271,0.82l-1.135,1.012c-0.219-0.265-0.47-0.456-0.752-0.574 \" +\n            \"c-0.283-0.118-0.574-0.178-0.875-0.178c-0.337,0-0.659,0.063-0.964,0.191c-0.306,0.128-0.579,0.344-0.82,0.649 \" +\n            \"c-0.242,0.306-0.431,0.699-0.567,1.183s-0.21,1.075-0.219,1.777c0.009,0.684,0.08,1.276,0.212,1.777 \" +\n            \"c0.132,0.501,0.314,0.911,0.547,1.23s0.497,0.556,0.793,0.711c0.296,0.155,0.608,0.232,0.937,0.232c0.1,0,0.234-0.007,0.403-0.021 \" +\n            \"c0.168-0.014,0.337-0.036,0.506-0.068c0.168-0.032,0.33-0.075,0.485-0.13c0.155-0.055,0.269-0.132,0.342-0.232v-2.488h-1.709 \" +\n            \"v-1.121H39.5z\"}/>\n        </g>\n      </g>\n    </svg>;\n  }\n}\n\nexport default JPGIcon;\n","import React from 'react';\n\nclass SVGIcon extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  /** @override */\n  render()\n  {\n    return <svg className=\"svg-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 56 56\">\n    \t<g>\n    \t\t<path fill=\"#E9E9E0\" d=\"M36.985,0H7.963C7.155,0,6.5,0.655,6.5,1.926V55c0,0.345,0.655,1,1.463,1h40.074\n    \t\tc0.808,0,1.463-0.655,1.463-1V12.978c0-0.696-0.093-0.92-0.257-1.085L37.607,0.257C37.442,0.093,37.218,0,36.985,0z\"/>\n    \t\t<polygon fill=\"#D9D7CA\" points=\"37.5,0.151 37.5,12 49.349,12 \t\"/>\n    \t\t<path fill=\"#E57E25\" d=\"M48.037,56H7.963C7.155,56,6.5,55.345,6.5,54.537V39h43v15.537C49.5,55.345,48.845,56,48.037,56z\"/>\n    \t\t<g>\n    \t\t\t<path fill=\"#FFFFFF\"\n    \t\t\t\td=\"M21.459,50.238c0,0.364-0.075,0.718-0.226,1.06s-0.362,0.643-0.636,0.902s-0.61,0.467-1.012,0.622\n    \t\t\ts-0.856,0.232-1.367,0.232c-0.219,0-0.444-0.012-0.677-0.034s-0.467-0.062-0.704-0.116s-0.463-0.13-0.677-0.226\n    \t\t\ts-0.398-0.212-0.554-0.349l0.287-1.176c0.128,0.073,0.289,0.144,0.485,0.212s0.398,0.132,0.608,0.191s0.419,0.107,0.629,0.144\n    \t\t\ts0.405,0.055,0.588,0.055c0.556,0,0.982-0.13,1.278-0.39c0.296-0.26,0.444-0.645,0.444-1.155c0-0.31-0.104-0.574-0.314-0.793\n    \t\t\ts-0.472-0.417-0.786-0.595s-0.654-0.355-1.019-0.533s-0.706-0.388-1.025-0.629s-0.583-0.526-0.793-0.854s-0.314-0.738-0.314-1.23\n    \t\t\tc0-0.446,0.082-0.843,0.246-1.189s0.385-0.641,0.663-0.882s0.602-0.426,0.971-0.554s0.759-0.191,1.169-0.191\n    \t\t\tc0.419,0,0.843,0.039,1.271,0.116s0.774,0.203,1.039,0.376c-0.055,0.118-0.118,0.248-0.191,0.39s-0.142,0.273-0.205,0.396\n    \t\t\ts-0.118,0.226-0.164,0.308s-0.073,0.128-0.082,0.137c-0.055-0.027-0.116-0.063-0.185-0.109s-0.166-0.091-0.294-0.137\n    \t\t\ts-0.296-0.077-0.506-0.096s-0.479-0.014-0.807,0.014c-0.183,0.019-0.355,0.07-0.52,0.157s-0.31,0.193-0.438,0.321\n    \t\t\ts-0.228,0.271-0.301,0.431s-0.109,0.313-0.109,0.458c0,0.364,0.104,0.658,0.314,0.882s0.47,0.419,0.779,0.588\n    \t\t\ts0.647,0.333,1.012,0.492s0.704,0.354,1.019,0.581s0.576,0.513,0.786,0.854S21.459,49.7,21.459,50.238z\"/>\n    \t\t\t<path fill=\"#FFFFFF\" d=\"M25.861,53.055L22.73,42.924h1.873l2.338,8.695l2.475-8.695h1.859l-3.281,10.131H25.861z\"/>\n    \t\t\t<path fill=\"#FFFFFF\"\n    \t\t\t\td=\"M40.668,47.805v3.896c-0.21,0.265-0.444,0.48-0.704,0.649s-0.533,0.308-0.82,0.417\n    \t\t\tS38.561,52.954,38.255,53s-0.608,0.068-0.909,0.068c-0.602,0-1.155-0.109-1.661-0.328s-0.948-0.542-1.326-0.971\n    \t\t\ts-0.675-0.966-0.889-1.613s-0.321-1.395-0.321-2.242s0.107-1.593,0.321-2.235s0.511-1.178,0.889-1.606s0.822-0.754,1.333-0.978\n    \t\t\ts1.062-0.335,1.654-0.335c0.547,0,1.058,0.091,1.531,0.273s0.897,0.456,1.271,0.82l-1.135,1.012\n    \t\t\tc-0.219-0.265-0.47-0.456-0.752-0.574s-0.574-0.178-0.875-0.178c-0.337,0-0.658,0.063-0.964,0.191s-0.579,0.344-0.82,0.649\n    \t\t\ts-0.431,0.699-0.567,1.183s-0.21,1.075-0.219,1.777c0.009,0.684,0.08,1.276,0.212,1.777s0.314,0.911,0.547,1.23\n    \t\t\ts0.497,0.556,0.793,0.711s0.608,0.232,0.937,0.232c0.101,0,0.234-0.007,0.403-0.021s0.337-0.036,0.506-0.068\n    \t\t\ts0.33-0.075,0.485-0.13s0.269-0.132,0.342-0.232v-2.488h-1.709v-1.121H40.668z\"/>\n    \t\t</g>\n    \t\t<path fill=\"#C8BDB8\"\n    \t\t\td=\"M45.5,22v-6h-6v2h-6v-4h-10v4h-6v-2h-6v6h6v-2h3.548c-4.566,2.636-7.548,7.588-7.548,13\n    \t\tc0,0.552,0.447,1,1,1s1-0.448,1-1c0-5.246,3.229-9.999,8-11.995V24h10v-2.995c4.771,1.997,8,6.75,8,11.995c0,0.552,0.447,1,1,1\n    \t\ts1-0.448,1-1c0-5.412-2.982-10.364-7.548-13H39.5v2H45.5z M15.5,20h-2v-2h2V20z M31.5,22h-6v-3.754V16h6v2.246V22z M41.5,18h2v2h-2\n    \t\tV18z\"/>\n    \t</g>\n    </svg>;\n  }\n}\n\nexport default SVGIcon;\n","import SessionExporter from 'session/SessionExporter.js';\n\nimport PNGIcon from 'deprecated/icons/flat/PNGIcon.js';\nimport JPGIcon from 'deprecated/icons/flat/JPGIcon.js';\nimport SVGIcon from 'deprecated/icons/flat/SVGIcon.js';\n\nexport const IMAGE_TYPE_PNG = 'png';\nexport const IMAGE_TYPE_JPG = 'jpg';\nexport const IMAGE_TYPE_SVG = 'svg';\n\nconst EXPORT_PADDING_X = 30;\nconst EXPORT_PADDING_Y = 0;\n\nclass NodalGraphImageExporter extends SessionExporter\n{\n    constructor(imageType=IMAGE_TYPE_PNG)\n    {\n        super();\n        this._imageType = imageType;\n    }\n\n    /** @override */\n    exportTarget(exportType, target)\n    {\n        const session = target;\n        const currentModule = session.getCurrentModule();\n        const fileName = session.getProjectName();\n        const workspace = session.getApp().getWorkspaceComponent();\n        const svgElement = workspace.getSVGElement();\n        const workspaceDim = svgElement.viewBox.baseVal;\n        const width = workspaceDim.width;\n        const height = workspaceDim.height;\n        const svg = this.processSVGForExport(svgElement, width, height, currentModule);\n\n        return Promise.resolve({\n            name: fileName + '.' + this._imageType,\n            type: 'image',\n            data: svg,\n            width: width,\n            height: height,\n            'image-type': this._imageType\n        });\n    }\n\n    processSVGForExport(element, width, height, currentModule)\n    {\n        const graphController = currentModule.getGraphController();\n\n        const viewport = currentModule.getApp().getInputAdapter().getViewportAdapter();\n        const offsetX = viewport.getOffsetX();\n        const offsetY = viewport.getOffsetY();\n        const bounds = graphController.getGraph().getBoundingRect();\n        const dx = bounds.minX + offsetX - EXPORT_PADDING_X;\n        const dy = bounds.minY + offsetY - EXPORT_PADDING_Y;\n        const w = bounds.width + EXPORT_PADDING_X * 2;\n        const h = bounds.height + EXPORT_PADDING_Y * 2;\n        const clone = element.cloneNode(true);\n        clone.setAttribute('viewBox', dx + ' ' + dy + ' ' + w + ' ' + h);\n        clone.setAttribute('width', width);\n        clone.setAttribute('height', height);\n\n        //Apply the workspace font (refer to Workspace.css)\n        clone.setAttribute('font-size', '16px');\n        clone.setAttribute('font-family', 'monospace');\n        clone.setAttribute('style', '.graph-ui {display: none;}');\n\n        /*\n        const nodeColor = styleOpts.getOptionByProp(\"--color-graph-node\").getStyle();\n        const textColor = styleOpts.getOptionByProp(\"--color-graph-text\").getStyle();\n        console.log(nodeColor);\n        const styleString = \"* {\"\n        + \"--color-graph-node: blue;\"\n        + \"--color-graph-text: \" + textColor + \";\"\n        + \"}\";\n        */\n\n        /*\n        //TODO: Link the font family to svg\n        const link = document.createElement(\"link\");\n        link.setAttribute(\"rel\", \"stylesheet\");\n        clone.appendChild(link);\n        */\n\n        //Remove unwanted ui elements from image\n        const uiElements = clone.getElementsByClassName('graph-ui');\n        while(uiElements.length > 0)\n        {\n            const e = uiElements[0];\n            e.remove();//This will propagate changes to uiElements, so be careful\n        }\n\n        return clone;\n    }\n\n    /** @override */\n    getIconClass()\n    {\n        switch(this._imageType)\n        {\n        case IMAGE_TYPE_PNG: return PNGIcon;\n        case IMAGE_TYPE_JPG: return JPGIcon;\n        case IMAGE_TYPE_SVG: return SVGIcon;\n        default: return null;\n        }\n    }\n\n    /** @override */\n    getLabel()\n    {\n        switch(this._imageType)\n        {\n        case IMAGE_TYPE_PNG: return I18N.toString('file.export.png');\n        case IMAGE_TYPE_JPG: return I18N.toString('file.export.jpg');\n        case IMAGE_TYPE_SVG: return I18N.toString('file.export.svg');\n        default: return super.getLabel();\n        }\n    }\n\n    /** @override */\n    getTitle()\n    {\n        switch(this._imageType)\n        {\n        case IMAGE_TYPE_PNG: return I18N.toString('file.export.png.hint');\n        case IMAGE_TYPE_JPG: return I18N.toString('file.export.jpg.hint');\n        case IMAGE_TYPE_SVG: return I18N.toString('file.export.svg.hint');\n        default: return super.getTitle();\n        }\n    }\n\n    getImageType()\n    {\n        return this._imageType;\n    }\n}\n\nexport const IMAGE_EXPORTERS = [\n    new NodalGraphImageExporter(IMAGE_TYPE_PNG),\n    new NodalGraphImageExporter(IMAGE_TYPE_JPG),\n    new NodalGraphImageExporter(IMAGE_TYPE_SVG)\n];\n\nexport function registerImageExporters(exportManager)\n{\n    for(const exporter of IMAGE_EXPORTERS)\n    {\n        exportManager.registerExporter(exporter, 'image-' + exporter.getImageType());\n    }\n}\n\nexport default NodalGraphImageExporter;\n","import React from 'react';\n\nclass BoxRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const visible = this.props.visible;\n        const fromX = this.props.fromX || 0;\n        const fromY = this.props.fromY || 0;\n        const toX = this.props.toX || fromX + 1;\n        const toY = this.props.toY || fromY + 1;\n\n        const dx = toX - fromX;\n        const dy = toY - fromY;\n\n        return (\n            <g className=\"graph-selection-container\">\n                { visible &&\n        <rect className=\"graph-selection\"\n            x={dx < 0 ? toX : fromX}\n            y={dy < 0 ? toY : fromY}\n            width={dx < 0 ? -dx : dx}\n            height={dy < 0 ? -dy : dy}/> }\n            </g>\n        );\n    }\n}\n\nexport default BoxRenderer;\n","import React from 'react';\n\nconst CURSOR_RADIUS = 4;\nconst NODE_RADIUS = 16;\nconst EDGE_RADIUS = 12;\nconst ENDPOINT_RADIUS = 6;\nconst INITIAL_MARKER_OFFSET_X = -(NODE_RADIUS + (NODE_RADIUS / 2));\n\nconst HIGHLIGHT_RADIUS_OFFSET = 4;\nconst HIGHLIGHT_LINE_WIDTH = 3;\nconst HIGHLIGHT_LINE_ARRAY = [8, 6];\n\nclass HighlightRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const target = this.props.target;\n        const type = this.props.type;\n\n        let x = 0;\n        let y = 0;\n        let r = CURSOR_RADIUS;\n        let point;\n        switch(type)\n        {\n        case 'node':\n            x = target.x || 0;\n            y = target.y || 0;\n            r = NODE_RADIUS;\n            break;\n        case 'edge':\n            point = target.getCenterPoint();\n            x = point.x || 0;\n            y = point.y || 0;\n            r = EDGE_RADIUS;\n            break;\n        case 'endpoint':\n            point = target.getEndPoint();\n            x = point.x || 0;\n            y = point.y || 0;\n            r = ENDPOINT_RADIUS;\n            break;\n        case 'initial':\n            x = target.x + INITIAL_MARKER_OFFSET_X;\n            y = target.y || 0;\n            r = EDGE_RADIUS;\n            break;\n        }\n\n        return (\n            <g className=\"graph-highlight-container\">\n                <circle className={'graph-highlight ' + this.props.className}\n                    cx={x} cy={y}\n                    r={r + HIGHLIGHT_RADIUS_OFFSET}\n                    strokeDashoffset={this.props.offset || 0}\n                    strokeDasharray={HIGHLIGHT_LINE_ARRAY}\n                    strokeWidth={HIGHLIGHT_LINE_WIDTH}\n                    fill=\"none\"/>\n            </g>\n        );\n    }\n}\n\nexport default HighlightRenderer;\n","import React from 'react';\n\nimport BoxRenderer from './BoxRenderer.js';\nimport HighlightRenderer from './HighlightRenderer.js';\n\nclass SelectionBoxRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const currentModule = this.props.currentModule;\n\n        const graphController = currentModule.getGraphController();\n        const inputController = currentModule.getInputController();\n\n        const graph = graphController.getGraph();\n        const selectionBox = inputController.getSelectionBox();\n        const selectionBoundingBox = selectionBox.getSelectionBox();\n\n        return (\n            <g>\n                {/* Selected elements */}\n                { selectionBox &&\n          selectionBox.hasSelection() &&\n          selectionBox.getSelection(graph).map((e, i) =>\n              <HighlightRenderer key={e.getGraphElementID()}\n                  className={inputController.isTrashMode() ?\n                      'highlight-error' :\n                      'highlight-select'}\n                  target={e} type=\"node\"/>) }\n\n                {/* Selection box */}\n                { selectionBoundingBox &&\n          <BoxRenderer visible={selectionBoundingBox.visible}\n              fromX={selectionBoundingBox.fromX} fromY={selectionBoundingBox.fromY}\n              toX={selectionBoundingBox.toX} toY={selectionBoundingBox.toY}/> }\n            </g>\n        );\n    }\n}\n\nexport default SelectionBoxRenderer;\n","import React from 'react';\n\nimport SelectionBoxRenderer from './SelectionBoxRenderer.js';\nimport HighlightRenderer from './HighlightRenderer.js';\n\nclass GraphInputRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n    //Inherits props from parent\n        const currentModule = this.props.currentModule;\n\n        const inputController = currentModule.getInputController();\n\n        const picker = inputController.getPicker();\n        const selectionBox = inputController.getSelectionBox();\n\n        return (\n            <g>\n                <SelectionBoxRenderer currentModule={currentModule}/>\n\n                {/* Node test targets */}\n                { currentModule._tester &&\n          currentModule._tester.targets &&\n          currentModule._tester.targets.map((e, i) => \n          {\n              return <HighlightRenderer key={e.getGraphElementID()}\n                  className=\"highlight-test graph-gui\"\n                  target={e} type=\"node\" offset=\"6\"/>;\n          })}\n\n                {/* Hover markers */}\n                { picker &&\n          picker.hasTarget() &&\n          !selectionBox.isTargetInSelection(picker.target) &&\n          <HighlightRenderer className={inputController.isTrashMode() ?\n              'highlight-error' :\n              'highlight-select'}\n          target={picker.target}\n          type={picker.targetType}/> }\n            </g>\n        );\n    }\n}\n\nexport default GraphInputRenderer;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                <path d=\"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './TapeWidget.css';\n\nimport DownArrowIcon from 'components/iconset/DownArrowIcon.js';\n\nconst TAPE_INFINITE_LEFT = true;\nconst TAPE_INFINITE_RIGHT = true;\n\nclass TapeWidget extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.onTapeStepBackward = this.onTapeStepBackward.bind(this);\n        this.onTapeStepForward = this.onTapeStepForward.bind(this);\n        this.onTapeFinish = this.onTapeFinish.bind(this);\n        this.onTapeReset = this.onTapeReset.bind(this);\n        this.onTapeSkipForward = this.onTapeSkipForward.bind(this);\n        this.onTapeSkipBackward = this.onTapeSkipBackward.bind(this);\n        this.onTapeStop = this.onTapeStop.bind(this);\n    }\n\n    onTapeStepBackward(e)\n    {\n        const tapeContext = this.props.value;\n        tapeContext.stepBackward();\n    }\n\n    onTapeStepForward(e)\n    {\n        const tapeContext = this.props.value;\n        tapeContext.stepForward();\n    }\n\n    onTapeSkipForward(e)\n    {\n    }\n\n    onTapeSkipBackward(e)\n    {\n    }\n\n    onTapeReset(e)\n    {\n        const tapeContext = this.props.value;\n        tapeContext.reset();\n    }\n\n    onTapeFinish(e)\n    {\n        const tapeContext = this.props.value;\n        tapeContext.finish();\n    }\n\n    onTapeStop(e)\n    {\n        const tapeContext = this.props.value;\n        tapeContext.stop();\n    }\n\n    /** @override */\n    render()\n    {\n        const showTransitionStates = true;\n        const tapeContext = this.props.value;\n        const tapeIndex = tapeContext ? tapeContext.getCurrentTapeIndex() : -1;\n\n        if (!tapeContext) return null;\n\n        return (\n            <div id={this.props.id}\n                className={Style.tape_container +\n        ' ' + this.props.className}\n                style={this.props.style}>\n\n                <div className={Style.tape_control_tray}>\n                    <button onClick={this.onTapeStepBackward}>BACK</button>\n                    <button onClick={this.onTapeStepForward}>STEP</button>\n                    <button onClick={this.onTapeReset}>RESET</button>\n                    <button onClick={this.onTapeFinish}>TO END</button>\n                </div>\n\n                <div className={Style.tape_control_tray}>\n                    <button onClick={this.onTapeSkipForward}>SKIP TO NEXT</button>\n                    <button onClick={this.onTapeSkipBackward}>SKIP TO PREV</button>\n                    <button onClick={this.onTapeStop}>STOP</button>\n                </div>\n\n                <div className={'tape-row'}>\n\n                    {TAPE_INFINITE_LEFT && tapeContext.isTapeLeftInfinite() &&\n            <div className=\"tape-row-entry infinite\">\n                <span className=\"tape-row-states\"></span>\n                <label className=\"tape-row-symbol\">{'...'}</label>\n            </div>}\n\n                    <DownArrowIcon\n                        className=\"tape-pointer\"\n                        style={{opacity: tapeIndex < 0 ? 0 : 1, left: tapeIndex + 'em'}}/>\n\n                    {tapeContext.getTapeInput().map((e, i) => \n                    {\n                        let active = false;\n                        let activeRead = false;\n                        active = tapeIndex === i;\n                        activeRead = tapeIndex === i - 1;\n                        /*\n            const currentIndex = Math.floor(tapeIndex / 2);\n            if (currentIndex === i)\n            {\n              //It's the current index...\n              active = tapeIndex % 2 === 1;\n              activeRead = tapeIndex % 2 === 0;\n            }\n            else if (currentIndex === i + 1)\n            {\n              //It's the previous index...\n              active = tapeIndex % 2 === 0;\n            }\n            */\n\n                        const sourceStates = tapeContext.getTapeSourceStatesByIndex(i);\n                        const disabled = sourceStates === null;\n                        return (\n                            <div key={e + ':' + i} className={'tape-row-entry' +\n                (active ? ' active ' : '') +\n                (activeRead ? ' active-read ' : '') +\n                (disabled ? ' disabled ' : '')}\n                            onClick={(e) => (!disabled ? tapeContext.setCurrentTapeIndex(i) : null)}>\n                                {showTransitionStates &&\n                  sourceStates &&\n                  <span className=\"tape-row-states\">\n                      {sourceStates.map(sourceState => \n                      {\n                          return (\n                              <label key={sourceState.getGraphElementID()}>\n                                  {sourceState.getNodeLabel()}\n                              </label>\n                          );\n                      })}\n                  </span>}\n                                <label className=\"tape-row-symbol\">\n                                    {e}\n                                </label>\n                            </div>\n                        );\n                    })}\n\n                    {TAPE_INFINITE_RIGHT && tapeContext.isTapeRightInfinite() &&\n            <div className=\"tape-row-entry infinite\">\n                <span className=\"tape-row-states\"></span>\n                <label className=\"tape-row-symbol\">{'...'}</label>\n            </div>}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TapeWidget;\n","class MachineChangeHandler\n{\n    constructor()\n    {\n        this._listeners = [];\n    }\n\n    addListener(listener)\n    {\n        if (typeof listener !== 'function')\n            throw new Error('Cannot add uncallable listener');\n        this._listeners.push(listener);\n    }\n\n    removeListener(listener)\n    {\n        const i = this._listeners.indexOf(listener);\n        if (i >= 0)\n        {\n            this._listeners.splice(i, 1);\n            return true;\n        }\n        return false;\n    }\n\n    clearListeners()\n    {\n        this._listeners.length = 0;\n    }\n\n    getListeners()\n    {\n        return this._listeners;\n    }\n\n    update(machineBuilder)\n    {\n        for (const listener of this._listeners)\n        {\n            listener(machineBuilder);\n        }\n    }\n}\n\nexport default MachineChangeHandler;\n","import MachineChangeHandler from 'experimental/MachineChangeHandler.js';\n\nclass AbstractMachineBuilder\n{\n    constructor()\n    {\n        this._machineChangeHandler = new MachineChangeHandler();\n\n        this._errors = [];\n        this._warnings = [];\n\n        this.onGraphChange = this.onGraphChange.bind(this);\n    }\n\n    initialize(module)\n    {\n        module.getGraphController().getGraphChangeHandler().addListener(this.onGraphChange);\n    }\n\n    destroy(module)\n    {\n        module.getGraphController().getGraphChangeHandler().removeListener(this.onGraphChange);\n    }\n\n    onGraphChange(graph)\n    {\n        this.attemptBuildMachine(graph, this.getMachine(), this._errors, this._warnings);\n        this._machineChangeHandler.update(this);\n    }\n\n    attemptBuildGraph(machine, dst)\n    {\n        throw new Error('Missing graph build operation');\n    }\n\n    attemptBuildMachine(graph, dst, errors, warnings)\n    {\n        throw new Error('Missing machine build operation');\n    }\n\n    getMachineErrors()\n    {\n        return this._errors;\n    }\n\n    getMachineWarnings()\n    {\n        return this._warnings;\n    }\n\n    getMachineChangeHandler()\n    {\n        return this._machineChangeHandler;\n    }\n\n    isMachineValid()\n    {\n        return this._errors.length <= 0;\n    }\n\n    getMachine()\n    {\n        throw new Error('Missing machine for builder');\n    }\n}\n\nexport default AbstractMachineBuilder;\n","import AbstractMachineBuilder from 'modules/abstract/AbstractMachineBuilder.js';\nimport FSA, { EMPTY_SYMBOL, State } from './FSA.js';\nimport FSANode from 'modules/fsa/graph/FSANode.js';\nimport { EMPTY_CHAR } from 'modules/fsa/graph/FSAEdge.js';\nimport {getUnreachableNodes} from 'modules/fsa2/graph/UnreachableNodes.js';\n\nexport const ERROR_UNREACHABLE_STATE = 'unreachable_state';\nexport const ERROR_DUPLICATE_STATE = 'duplicate_state';\nexport const ERROR_INCOMPLETE_TRANSITION = 'incomplete_transition';\nexport const ERROR_DUPLICATE_TRANSITION = 'duplicate_transition';\nexport const ERROR_MISSING_TRANSITION = 'missing_transition';\nexport const ERROR_EMPTY_TRANSITION = 'empty_transition';\n\nclass FSABuilder extends AbstractMachineBuilder\n{\n    constructor()\n    {\n        super();\n\n        this._machine = new FSA();\n    }\n\n    /** @override */\n    attemptBuildGraph(machine, dst)\n    {\n        dst.clear();\n\n        //Add all states\n        let node;\n        for (const state of machine.getStates())\n        {\n            node = dst.createNode(0, 0);\n            node.setNodeLabel(state.getStateLabel());\n            if (machine.isFinalState(state))\n            {\n                node.setNodeAccept(true);\n            }\n        }\n\n        //Add all transitions\n        let edge, from, to, read;\n        for (let transition of machine.getTransitions())\n        {\n            let fromNodes = dst.getNodesByLabel(transition[0]);\n            if (!fromNodes || fromNodes.length <= 0) continue;\n            from = fromNodes[0];\n\n            read = transition[1];\n\n            let toNodes = dst.getNodesByLabel(transition[2]);\n            if (!toNodes || toNodes.length <= 0) continue;\n            from = toNodes[0];\n\n            edge = dst.createEdge(from, to);\n            edge.setEdgeLabel(read);\n            const formattedEdge = dst.formatEdge(edge);\n            if (edge != formattedEdge) dst.deleteEdge(edge);\n        }\n\n        //Set start state\n        const startState = machine.getStartState();\n\n\n        let startNodes = dst.getNodesByLabel(startState);\n        if (startNodes && startNodes.length > 0)\n        {\n            dst.setStartNode(startNodes[0]);\n        }\n\n        return dst;\n    }\n\n    /** @override */\n    attemptBuildMachine(graph, dst, errors = [], warnings = [])\n    {\n        errors.length = 0;\n        warnings.length = 0;\n\n        const deterministic = dst.isDeterministic();\n        dst.clear();\n\n        const nodeLabels = new Map();\n        const nodeOutgoings = new Map();\n        const edgeSymbols = new Set();\n        const edgePlaceholders = [];\n        const edgeEmpties = [];\n\n        const graphNodes = graph.getNodes();\n        const graphEdges = graph.getEdges();\n        const graphStart = graph.getStartNode();\n\n        for (const node of graphNodes)\n        {\n            const nodeLabel = node.getNodeLabel();\n            const state = new State(nodeLabel, node);\n            dst.addState(state);\n\n            if (node.getNodeAccept())\n            {\n                dst.setFinalState(state, true);\n            }\n\n            if (graphStart === node)\n            {\n                dst.setStartState(state);\n            }\n\n            //Check for duplicate states\n            if (nodeLabels.has(nodeLabel)) nodeLabels.get(nodeLabel).push(state);\n            else nodeLabels.set(nodeLabel, [state]);\n\n            //For duplicate transitions\n            nodeOutgoings.set(state, new Map());\n        }\n\n        for (const edge of graphEdges)\n        {\n            const srcNode = edge.getEdgeFrom();\n            const dstNode = edge.getEdgeTo();\n            if (!edge.isPlaceholder() && srcNode instanceof FSANode && dstNode instanceof FSANode)\n            {\n                const srcState = dst.getStateByID(srcNode.getGraphElementID());\n                const dstState = dst.getStateByID(dstNode.getGraphElementID());\n                if (!srcState || !dstState) throw new Error('Cannot find state for edge source/destination nodes - mismatch id');\n\n                const edgeLabelSymbols = edge.getEdgeSymbolsFromLabel();\n                for (const symbol of edgeLabelSymbols)\n                {\n                    if (!symbol) continue;\n\n                    if (symbol === EMPTY_CHAR)\n                    {\n                        //For empties\n                        edgeEmpties.push(edge);\n                    }\n                    else\n                    {\n                        //For used symbol\n                        edgeSymbols.add(symbol);\n                    }\n\n                    //Translate all labels to symbols\n                    let transitionSymbol;\n                    switch (symbol)\n                    {\n                    case EMPTY_CHAR:\n                        transitionSymbol = EMPTY_SYMBOL;\n                        break;\n                    default:\n                        transitionSymbol = symbol;\n                    }\n\n                    //For duplicate/missing transitions\n                    let outSymbols = nodeOutgoings.get(srcState);\n                    let outEdges = outSymbols.get(transitionSymbol);\n                    if (!outEdges) outSymbols.set(transitionSymbol, outEdges = new Array());\n                    outEdges.push(edge);\n\n                    //Add to machine...\n                    dst.addTransition(srcState, dstState, transitionSymbol);\n                }\n            }\n            else\n            {\n                edgePlaceholders.push(edge);\n                continue;\n            }\n        }\n\n        //Check for duplicate node labels\n        for (const [nodeLabel, sharedStates] of nodeLabels.entries())\n        {\n            if (sharedStates.length > 1)\n            {\n                errors.push({\n                    name: ERROR_DUPLICATE_STATE,\n                    label: nodeLabel,\n                    nodes: sharedStates.map(e => e.getSource())\n                });\n            }\n        }\n\n        //Check for incomplete edge\n        if (edgePlaceholders.length > 0)\n        {\n            errors.push({\n                name: ERROR_INCOMPLETE_TRANSITION,\n                edges: edgePlaceholders\n            });\n        }\n\n        //Check for unreachable nodes\n        const unreachables =  getUnreachableNodes(graph);\n        if (unreachables && unreachables.length > 0)\n        {\n            warnings.push({\n                name: ERROR_UNREACHABLE_STATE,\n                nodes: unreachables\n            });\n        }\n\n        if (deterministic)\n        {\n            //Check for empty transitions\n            if (edgeEmpties.length > 0)\n            {\n                errors.push({\n                    name: ERROR_EMPTY_TRANSITION,\n                    edges: edgeEmpties\n                });\n            }\n\n            //Check for duplicate edge labels\n            //Check for missing edge labels\n            const missingSymbols = [];\n            for (const [state, edgeMapping] of nodeOutgoings.entries())\n            {\n                for (const symbol of edgeSymbols)\n                {\n                    const edges = edgeMapping.get(symbol);\n                    if (edges)\n                    {\n                        if (edges.length !== 1)\n                        {\n                            errors.push({\n                                name: ERROR_DUPLICATE_TRANSITION,\n                                edges: edges,\n                                symbol: symbol\n                            });\n                        }\n                    }\n                    else\n                    {\n                        missingSymbols.push(symbol);\n                    }\n                }\n\n                if (missingSymbols.length > 0)\n                {\n                    errors.push({\n                        name: ERROR_MISSING_TRANSITION,\n                        node: state.getSource(),\n                        symbols: missingSymbols.slice()\n                    });\n                    missingSymbols.length = 0;\n                }\n            }\n        }\n\n        if (errors.length <= 0)\n        {\n            //Errors should be empty\n            return this._machine;\n        }\n        else\n        {\n            //Reasons are stored in errors\n            return null;\n        }\n    }\n\n    /** @override */\n    getMachine()\n    {\n        return this._machine;\n    }\n}\n\n//Representations ->\n//Truth\n\n//MachineBuilder\n//Graph -> Machine (Compile, then return errors)\n//Any changes to graph does not warrant a change to machine\n//Machine Changes -> Graph (Apply them as they happen)\n//Any change to machine does.\n//Machine Conversion -> Graph (Reconstruct the entire graph from machine, then apply layout)\n\nexport default FSABuilder;","import AbstractMachineController from 'modules/abstract/AbstractMachineController.js';\n\nimport FSABuilder from 'modules/fsa2/machine/FSABuilder.js';\nimport { convertToDFA, invertDFA } from 'modules/fsa2/machine/FSAUtils.js';\n\nimport GraphLayout from 'modules/fsa/graph/GraphLayout.js';\n\nclass MachineController extends AbstractMachineController\n{\n    constructor(module)\n    {\n        super(module, new FSABuilder());\n\n        this.graphController = null;\n    }\n\n    /** @override */\n    initialize(module)\n    {\n        super.initialize(module);\n\n        this.graphController = module.getGraphController();\n    }\n\n    /** @override */\n    destroy(module)\n    {\n        super.destroy(module);\n    }\n\n    /** @override */\n    update(module)\n    {\n        super.update(module);\n    }\n\n    getMachineType()\n    {\n        return this._machineBuilder.getMachine().isDeterministic() ? 'DFA' : 'NFA';\n    }\n\n    setMachineType(machineType)\n    {\n        this._machineBuilder.getMachine().setDeterministic(machineType === 'DFA');\n    }\n\n    changeMachineTo(machineType)\n    {\n        const prev = this.getMachineType();\n        if (prev != machineType)\n        {\n            this.setMachineType(machineType);\n        }\n    }\n\n    getFirstGraphNodeByLabel(graph, label)\n    {\n        for(const node of graph.getNodes())\n        {\n            if (node.getNodeLabel() == label)\n            {\n                return node;\n            }\n        }\n\n        return null;\n    }\n\n    setGraphToMachine(graph, machine)\n    {\n        this._machineBuilder.attemptBuildGraph(machine, graph);\n        //Auto layout graph\n        GraphLayout.applyLayout(graph);\n    }\n\n    convertMachineTo(machineType)\n    {\n        const currentMachineType = this.getMachineType();\n\n        //Already converted machine...\n        if (currentMachineType === machineType) return;\n\n        if (machineType == 'DFA' && currentMachineType == 'NFA')\n        {\n            const result = convertToDFA(this.getMachineBuilder().getMachine());\n            this.setGraphToMachine(this.graphController.getGraph(), result);\n            this.setMachineType(machineType);\n        }\n        else if (machineType == 'NFA' && currentMachineType == 'DFA')\n        {\n            this.changeMachineTo(machineType);\n        }\n        else\n        {\n            throw new Error('Conversion scheme between \\'' + currentMachineType + '\\' to \\'' + machineType + '\\' is not supported');\n        }\n    }\n\n    invertMachine()\n    {\n        const machine = this.getMachineBuilder().getMachine();\n        const result = invertDFA(machine, machine);\n\n        //Update final states\n        for(const state of result.getStates())\n        {\n            const src = state.getSource();\n            src.setNodeAccept(machine.isFinalState(state));\n        }\n    }\n\n    getStates()\n    {\n        return this._machineBuilder.getMachine().getStates();\n    }\n\n    countStates()\n    {\n        return this._machineBuilder.getMachine().getStateCount();\n    }\n\n    getFinalStates()\n    {\n        return this._machineBuilder.getMachine().getFinalStates();\n    }\n\n    getTransitions()\n    {\n        return this._machineBuilder.getMachine().getTransitions();\n    }\n\n    getAlphabet()\n    {\n        const machine = this._machineBuilder.getMachine();\n        return Array.from(machine.getAlphabet());\n    }\n\n    isUsedSymbol(symbol)\n    {\n        return !this.isCustomSymbol(symbol);\n    }\n\n    createSymbol(symbol)\n    {\n        this.addCustomSymbol(symbol);\n    }\n\n    deleteSymbol(symbol)\n    {\n        let edge = null;\n        let index = null;\n        let result = null;\n        const targets = [];\n\n        const graph = this.graphController.getGraph();\n        for(let i = graph.getEdges().length - 1; i >= 0; --i)\n        {\n            edge = graph.getEdges()[i];\n            index = edge.getEdgeLabel().indexOf(symbol);\n            if (index >= 0)\n            {\n                result = edge.getEdgeLabel().substring(0, index) + edge.getEdgeLabel().substring(index + 1);\n                if (result.length > 0)\n                {\n                    edge.setEdgeLabel(result);\n                }\n                else\n                {\n                    edge.setEdgeLabel('');\n                    graph.deleteEdge(edge);\n                }\n                targets.push(edge);\n            }\n        }\n\n        if (targets.length <= 0)\n        {\n            this.getMachineBuilder().removeCustomSymbol(symbol);\n        }\n    }\n\n    renameSymbol(prevSymbol, nextSymbol)\n    {\n        let edge = null;\n        let result = null;\n        const targets = [];\n\n        const graph = this.graphController.getGraph();\n        const length = graph.getEdges().length;\n        for(let i = 0; i < length; ++i)\n        {\n            edge = graph.getEdges()[i];\n            result = edge.getEdgeLabel().replace(prevSymbol, nextSymbol);\n            if (result != edge.getEdgeLabel())\n            {\n                targets.push(edge);\n            }\n            edge.setEdgeLabel(result);\n        }\n\n        if (targets.length <= 0)\n        {\n            this.getMachineBuilder().renameCustomSymbol(prevSymbol, nextSymbol);\n        }\n    }\n\n    getCustomSymbols()\n    {\n        return Array.from(this._machineBuilder.getMachine().getCustomSymbols());\n    }\n\n    isCustomSymbol(symbol)\n    {\n        return this._machineBuilder.isCustomSymbol(symbol);\n    }\n\n    addCustomSymbol(symbol)\n    {\n        this._machineBuilder.getMachine().setCustomSymbol(symbol);\n    }\n\n    clearCustomSymbols()\n    {\n        this._machineBuilder.getMachine().clearCustomSymbols();\n    }\n}\n\nexport default MachineController;\n","export const EMPTY = '\\u03B5';\nexport const ARROW = '\\u2192';\nexport const EMPTY_SET = '\\u2205';\n\nexport const CONCAT = '.';\nexport const UNION = '|';\nexport const KLEENE = '*';\n//'\\u03BB' = LAMBDA\n","import AbstractGraphLabeler from 'graph/AbstractGraphLabeler.js';\n\nimport { SYMBOL_SEPARATOR } from 'modules/fsa/graph/FSAEdge.js';\nimport { EMPTY } from 'modules/fsa/machine/Symbols.js';\n\nconst DEFAULT_NODE_LABEL_PREFIX = 'q';\n\nclass FSAGraphLabeler extends AbstractGraphLabeler\n{\n    constructor()\n    {\n        super();\n\n        this._prefix = DEFAULT_NODE_LABEL_PREFIX;\n        this._graphController = null;\n    }\n\n    setGraphController(graphController)\n    {\n        this._graphController = graphController;\n        return this;\n    }\n\n    setDefaultNodeLabelPrefix(prefix)\n    {\n        this._prefix = prefix;\n    }\n\n    getDefaultNodeLabelPrefix()\n    {\n        return this._prefix;\n    }\n\n    /** @override */\n    getDefaultNodeLabel()\n    {\n        if (!this._graphController.shouldAutoRenameNodes())\n        {\n            return this.getDefaultNodeLabelPrefix();\n        }\n        else\n        {\n            const graph = this._graphController.getGraph();\n            const otherNodes = [];\n            let nodeIndex = 0;\n\n            const startNode = graph.getStartNode();\n            if (startNode && startNode.getNodeCustom()) nodeIndex = 1;\n\n            let newNodeLabel = this.getDefaultNodeLabelPrefix() + nodeIndex;\n            while(graph.getNodesByLabel(newNodeLabel, otherNodes).length > 0)\n            {\n                otherNodes.length = 0;\n                ++nodeIndex;\n                newNodeLabel = this.getDefaultNodeLabelPrefix() + nodeIndex;\n            }\n\n            return newNodeLabel;\n        }\n    }\n\n    /** @override */\n    getDefaultEdgeLabel()\n    {\n        return '';\n    }\n\n    /** @override */\n    getNodeLabelFormatter()\n    {\n        return (string) => string || '';\n    }\n\n    /** @override */\n    getEdgeLabelFormatter()\n    {\n        return edgeLabelFormatter;\n    }\n}\n\nfunction edgeLabelFormatter(string, allowNull=false)\n{\n    const symbols = string.split(SYMBOL_SEPARATOR);\n    const result = new Set();\n\n    let symbol = '';\n    let symbolLength = 0;\n    const length = symbols.length;\n    for(let i = 0; i < length; ++i)\n    {\n        symbol = symbols[i].trim();\n        symbolLength = symbol.length;\n        //If the symbol has none or more than 1 char\n        if (symbolLength !== 1)\n        {\n            //Remove symbol (by not adding to result)\n\n            //Divide multi-char symbol into smaller single char symbols\n            if (symbolLength > 1)\n            {\n                for(let subsymbol of symbol.split(''))\n                {\n                    subsymbol = subsymbol.trim();\n                    if (!result.has(subsymbol))\n                    {\n                        result.add(subsymbol);\n                    }\n                }\n            }\n        }\n        else\n        {\n            result.add(symbol);\n        }\n    }\n\n    //If it is an empty string...\n    if (result.size <= 0) return allowNull ? null : EMPTY;\n    return Array.from(result).join(SYMBOL_SEPARATOR);\n}\n\nexport default FSAGraphLabeler;\n","import React from 'react';\n\nclass FSANodeRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n    //TODO: Refer to app.css for comparable colors\n        const node = this.props.node;\n        const nodeLabel = node.getNodeLabel();\n\n        return (\n            <g className=\"graph-node-container\">\n                {/*Outer circle*/}\n                <circle className=\"graph-node\"\n                    cx={node.x}\n                    cy={node.y}\n                    r={node.getNodeSize()}\n\n                    fill=\"#FEE781\"\n                    stroke=\"#000000\"/>\n\n                {/*Inner circle*/}\n                {node.getNodeAccept() &&\n          <circle className=\"graph-node-inner\"\n              cx={node.x}\n              cy={node.y}\n              r={node.getNodeSize() * 0.75}\n              fill=\"none\"\n\n              stroke=\"#000000\"/>}\n\n                {/*Label*/}\n                <text className=\"graph-node-label\"\n                    x={node.x} y={node.y + 4}\n                    pointerEvents=\"none\"\n                    style={{\n                        userSelect: 'none',\n                        fontSize: (1 - Math.min(Math.max(nodeLabel.length - 2, 0) / 6, 0.5)) + 'em'\n                    }}\n                    textAnchor=\"middle\">\n                    {nodeLabel}\n                </text>\n            </g>\n        );\n    }\n}\n\nexport default FSANodeRenderer;\n","import React from 'react';\n\nimport EdgeRenderer, {DIRECTED_FORWARD} from 'renderer/EdgeRenderer.js';\n\nconst GRAPH_EDGE_CONTAINER_STYLE_NAME = 'graph-edge-container';\n\nclass FSAEdgeRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const edge = this.props.edge;\n        const stroke = this.props.stroke || '#000000';\n        const start = edge.getStartPoint();\n        const end = edge.getEndPoint();\n        const center = edge.getCenterPoint();\n        // const label = edge.getEdgeLabel();\n        const labels = edge.getEdgeSymbolsFromLabel();\n        const edgeDir = edge.getEdgeDirection();\n\n        return <g className={GRAPH_EDGE_CONTAINER_STYLE_NAME}>\n            <EdgeRenderer\n                directed={DIRECTED_FORWARD}\n                from={start}\n                to={end}\n                center={center}\n                label={labels.join('\\n')}\n                direction={edgeDir}\n                color={stroke}/>\n        </g>;\n    }\n}\n\nexport default FSAEdgeRenderer;\n","import React from 'react';\n\nimport FSANode from 'modules/fsa/graph/FSANode.js';\n\nconst NODE_RADIUS = 16;\nconst INITIAL_MARKER_OFFSET_X = -(NODE_RADIUS + (NODE_RADIUS / 2));\n\nclass InitialMarkerRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    render()\n    {\n        const node = this.props.node;\n        //node.x + offset marker back to center if not a node (or is a pointer)\n        const x = node.x + (!(node instanceof FSANode) ? -INITIAL_MARKER_OFFSET_X : 0);\n        const y = node.y;\n        const r = NODE_RADIUS;\n        const d = r * 2;\n        return (\n            <g className=\"graph-initial-container\">\n                <path className=\"graph-initial\" d={\n                    'M' + (x - r) + ' ' + (y) +\n          ' L' + (x - d) + ' ' + (y - r) +\n          ' L' + (x - d) + ' ' + (y + r) +\n          ' Z'}\n                fill=\"none\"\n\n                stroke=\"#000000\"/>\n            </g>\n        );\n    }\n}\n\nexport default InitialMarkerRenderer;\n","import React from 'react';\nimport './FSAGraphRenderer.css';\n\nimport FSANodeRenderer from './FSANodeRenderer.js';\nimport FSAEdgeRenderer from './FSAEdgeRenderer.js';\nimport InitialMarkerRenderer from './InitialMarkerRenderer.js';\n\nclass FSAGraphRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        //Inherits props from parent\n        const currentModule = this.props.currentModule;\n        const inputController = currentModule.getInputController();\n        const graphController = currentModule.getGraphController();\n        const graph = graphController.getGraph();\n\n        //Graph origin crosshair\n        return (\n            <g>\n                {!graph.isEmpty() &&\n                    <React.Fragment>\n                        <line className=\"graph-ui\" x1=\"0\" y1=\"-5\" x2=\"0\" y2=\"5\" stroke=\"var(--color-viewport-back-detail)\" />\n                        <line className=\"graph-ui\" x1=\"-5\" y1=\"0\" x2=\"5\" y2=\"0\" stroke=\"var(--color-viewport-back-detail)\" />\n                    </React.Fragment>}\n\n                {graph.getNodes().map((e, i) => <FSANodeRenderer key={e.getGraphElementID() || i} node={e} />)}\n                {graph.getEdges().map((e, i) => <FSAEdgeRenderer key={e.getGraphElementID() || i} edge={e} />)}\n\n                {/* Initial marker and ghost */}\n                {graph.getStartNode() && (inputController.getInputHandlers()[3].ghostInitialMarker == null ?\n                    <InitialMarkerRenderer node={graph.getStartNode()} /> :\n                    <InitialMarkerRenderer node={inputController.getInputHandlers()[3].ghostInitialMarker} />)}\n            </g>\n        );\n    }\n}\n\nexport default FSAGraphRenderer;\n","import React from 'react';\nimport Style from './FSALabelEditorRenderer.css';\n\nimport GraphEdge from 'graph/elements/GraphEdge.js';\nimport GraphNode from 'graph/elements/GraphNode.js';\nimport PatternInputButton from 'deprecated/system/patterninput/PatternInputButton.js';\nimport { SYMBOL_SEPARATOR, EMPTY_CHAR } from 'modules/fsa/graph/FSAEdge.js';\n\nconst RECOMMENDED_SYMBOLS = ['0', '1'];\nconst DEFAULT_SYMBOLS = [EMPTY_CHAR];\n\nclass FSALabelEditorRenderer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    renderSymbol(symbol)\n    {\n        const labelEditor = this.props.parent;\n        if (!labelEditor) return null;\n\n        const inputComponent = labelEditor.inputComponent;\n        return (\n            <PatternInputButton key={symbol} parent={inputComponent} title={symbol}\n                onClick={e=>inputComponent.appendValue(symbol, SYMBOL_SEPARATOR)}/>\n        );\n    }\n\n    /** @override */\n    render()\n    {\n        const labelEditor = this.props.parent;\n        const currentModule = this.props.currentModule;\n        const machineController = currentModule.getMachineController();\n        const alphabet = machineController.getAlphabet();\n\n        const showEdgeTray = labelEditor && labelEditor.getTarget() instanceof GraphEdge;\n        const showNodeTray = labelEditor && labelEditor.getTarget() instanceof GraphNode;\n        const showDefault = true;\n        const showRecommended = !alphabet || alphabet.length <= 1;\n\n        return (\n            <div className={Style.tray_container}>\n                {showEdgeTray && <span>\n                    <span className={Style.tray_used}>\n                        {alphabet.map(e => this.renderSymbol(e))}\n                    </span>\n                    <span className={Style.tray_default}>\n                        {showRecommended &&\n              RECOMMENDED_SYMBOLS.map(e => this.renderSymbol(e))}\n                        {showDefault &&\n              DEFAULT_SYMBOLS.map(e => this.renderSymbol(e))}\n                    </span>\n                </span>}\n                {showNodeTray && <span>\n                    <PatternInputButton parent={labelEditor.inputComponent}\n                        title={labelEditor.getTarget().getNodeCustom() ? 'Custom' : 'Auto'}\n                        onClick={() => {labelEditor.getTarget().setNodeCustom(!labelEditor.getTarget().getNodeCustom());}}/>\n                    <PatternInputButton parent={labelEditor.inputComponent}\n                        title={labelEditor.getTarget().getNodeAccept() ? 'Accept' : 'Reject'}\n                        onClick={() => {labelEditor.getTarget().setNodeAccept(!labelEditor.getTarget().getNodeAccept());}}/>\n                </span>}\n            </div>\n        );\n    }\n}\n\nexport default FSALabelEditorRenderer;\n","import React from 'react';\nimport Style from './StateListElement.css';\n\nconst SUBMIT_KEY_CODE = 'Enter';\nconst CANCEL_KEY_CODE = 'Escape';\n\nclass StateListElement extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            value: null,\n            error: false\n        };\n\n        this.onValueChange = this.onValueChange.bind(this);\n        this.onFocus = this.onFocus.bind(this);\n        this.onBlur = this.onBlur.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.onKeyUp = this.onKeyUp.bind(this);\n    }\n\n    onFocus(e)\n    {\n        const target = e.target;\n        const node = this.props.node;\n\n        const nodeLabel = node ? node.getNodeLabel() : null;\n        this.setState({\n            value: nodeLabel,\n            error: false\n        }, () => target.select());\n\n        //Call any listening focus\n        if (this.props.onFocus) this.props.onFocus(e, this);\n    }\n\n    onBlur(e)\n    {\n        const nextLabel = this.state.value;\n\n        //Reset to nothing (will use node.getNodeLabel() instead)\n        this.setState({ value: null, error: false });\n\n        //Call any listening blurs\n        if (this.props.onBlur) this.props.onBlur(e, this, nextLabel);\n    }\n\n    onKeyDown(e)\n    {\n        const keyCode = e.key;\n        if (keyCode === SUBMIT_KEY_CODE || keyCode === CANCEL_KEY_CODE)\n        {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n\n    onKeyUp(e)\n    {\n        const keyCode = e.key;\n        const target = e.target;\n\n        if (keyCode === SUBMIT_KEY_CODE)\n        {\n            target.blur();\n        }\n        else if (keyCode === CANCEL_KEY_CODE)\n        {\n            this.setState({\n                value: null,\n                error: false\n            }, () => target.blur());\n        }\n    }\n\n    onValueChange(e)\n    {\n        let value = e.target.value.trim();\n        let error = false;\n\n        if (this.props.onChange)\n        {\n            try\n            {\n                this.props.onChange(e, this, value);\n            }\n            catch(e)\n            {\n                error = true;\n            }\n        }\n\n        this.setState({\n            value: value,\n            error: error\n        });\n    }\n\n    /** @override */\n    render()\n    {\n        const node = this.props.node;\n        const inputValue = this.state.value;\n\n        const nodeLabel = node ? node.getNodeLabel() : '';\n        const nodeCustom = node ? (node.getNodeCustom() || inputValue !== null && inputValue !== nodeLabel) : false;\n        const nodeAccept = node ? node.getNodeAccept() : false;\n        //Must check for null, not ONLY truthy because value might be empty string.\n        const displayValue = inputValue === null ? nodeLabel : inputValue;\n\n        return (\n            <div id={this.props.id}\n                className={Style.element_container +\n          (nodeCustom ? ' custom ' : '') +\n          ((!node.getNodeCustom() && displayValue.length <= 0) ? ' empty ' : '') +\n          (inputValue !== null && this.state.error ? ' error ' : '') +\n          (nodeAccept ? ' accept ' : '') +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <input\n                    spellCheck={false}\n                    style={{width: displayValue.length + 'ch'}}\n                    value={displayValue}\n                    onChange={this.onValueChange}\n                    onFocus={this.onFocus}\n                    onBlur={this.onBlur}\n                    onKeyDown={this.onKeyDown}\n                    onKeyUp={this.onKeyUp}/>\n            </div>\n        );\n    }\n}\n\nexport default StateListElement;\n","import React from 'react';\nimport Style from './StateListView.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport BoxAddIcon from 'components/iconset/BoxAddIcon.js';\nimport TriangleIcon from 'components/iconset/TriangleIcon.js';\n\nimport StateListElement from './StateListElement.js';\n\nclass StateListView extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this._prevX = 0;\n        this._prevY = 0;\n\n        this.onElementAdd = this.onElementAdd.bind(this);\n        this.onElementFocus = this.onElementFocus.bind(this);\n        this.onElementBlur = this.onElementBlur.bind(this);\n        this.onElementChange = this.onElementChange.bind(this);\n    }\n\n    onElementAdd(e)\n    {\n        const graphController = this.props.graphController;\n        this._prevX += 16;\n        this._prevY += 16;\n        const node = graphController.createNode(this._prevX, this._prevY);\n        graphController.focusOnNode(node);\n    }\n\n    onElementFocus(e, element)\n    {\n        this._prevX = element.props.node.x;\n        this._prevY = element.props.node.y;\n        const graphController = this.props.graphController;\n        graphController.focusOnNode(element.props.node);\n    }\n\n    onElementBlur(e, element, nextLabel)\n    {\n        const node = element.props.node;\n        if (!node) return;\n\n        const graphController = this.props.graphController;\n\n        //The value is already processed, abort\n        if (nextLabel !== null)\n        {\n            const graph = graphController.getGraph();\n            if (nextLabel.length > 0)\n            {\n                const otherNodes = graph.getNodesByLabel(nextLabel);\n                if (otherNodes.length <= 0)\n                {\n                    //None other have the same name. Rename it!\n                    graphController.renameNode(node, nextLabel);\n                }\n                else\n                {\n                    //Found something already named that! Ignore!\n                }\n            }\n            else if (node.getNodeCustom())\n            {\n                //Remove custom naming instead of deleting.\n                node.setNodeCustom(false);\n                graphController.applyAutoRename();\n            }\n            else\n            {\n                //Delete!\n                graphController.deleteTargetNode(node);\n            }\n        }\n    }\n\n    onElementChange(e, element, value)\n    {\n        const graphController = this.props.graphController;\n\n        if (value.length > 0)\n        {\n            const graph = graphController.getGraph();\n            const otherNodes = graph.getNodesByLabel(value);\n\n            //If there are more than 1 nodes by the same name,\n            //OR if the duplicate node found is NOT the same node\n            if (otherNodes.length > 1 || (otherNodes.length === 1 && otherNodes[0] !== element.props.node))\n            {\n                throw new Error('Not a valid node label');\n            }\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        const graphController = this.props.graphController;\n        const graph = graphController.getGraph();\n        const nodes = graph.getNodes();\n\n        return (\n            <div id={this.props.id}\n                className={Style.list_container}\n                style={this.props.style}>\n                <div className={Style.element_list}>\n                    <TriangleIcon className={Style.first_marker}/>\n                    {nodes.map(e => <StateListElement key={e.getGraphElementID()}\n                        node={e}\n                        onFocus={this.onElementFocus}\n                        onBlur={this.onElementBlur}\n                        onChange={this.onElementChange}/>)}\n                </div>\n                <IconButton className={Style.add_button}\n                    title=\"Add State\"\n                    onClick={this.onElementAdd}>\n                    <BoxAddIcon/>\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nexport default StateListView;\n","import React from 'react';\nimport Style from './AlphabetListElement.css';\n\nconst SUBMIT_KEY_CODE = 'Enter';\nconst CANCEL_KEY_CODE = 'Escape';\n\nclass AlphabetListElement extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this._inputElement = null;\n\n        this.state = {\n            value: null,\n            error: false\n        };\n\n        this.onValueChange = this.onValueChange.bind(this);\n        this.onFocus = this.onFocus.bind(this);\n        this.onBlur = this.onBlur.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.onKeyUp = this.onKeyUp.bind(this);\n    }\n\n    onFocus(e)\n    {\n        const target = e.target;\n        const symbol = this.props.symbol;\n\n        this.setState({\n            value: symbol,\n            error: false\n        }, () => target.select());\n\n        //Call any listening focus\n        if (this.props.onFocus) this.props.onFocus(e, this);\n    }\n\n    onBlur(e)\n    {\n        const nextSymbol = this.state.value;\n\n        //Call any listening blurs\n        if (this.props.onBlur) this.props.onBlur(e, this, nextSymbol);\n\n        //Reset to nothing (will use props.symbol instead)\n        this.setState({ value: null, error: false });\n    }\n\n    onKeyDown(e)\n    {\n        const keyCode = e.key;\n        if (keyCode === SUBMIT_KEY_CODE || keyCode === CANCEL_KEY_CODE)\n        {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n\n    onKeyUp(e)\n    {\n        const keyCode = e.key;\n        const target = e.target;\n\n        if (keyCode === SUBMIT_KEY_CODE)\n        {\n            target.blur();\n        }\n        else if (keyCode === CANCEL_KEY_CODE)\n        {\n            this.setState({\n                value: null,\n                error: false\n            }, () => target.blur());\n        }\n    }\n\n    onValueChange(e)\n    {\n        let value = e.target.value.trim();\n        let error = false;\n\n        if (this.props.onChange)\n        {\n            try\n            {\n                this.props.onChange(e, this, value);\n            }\n            catch(e)\n            {\n                error = true;\n            }\n        }\n\n        this.setState({\n            value: value,\n            error: error\n        });\n    }\n\n    focus()\n    {\n        this._inputElement.focus();\n    }\n\n    /** @override */\n    render()\n    {\n        const inputSymbol = this.state.value;\n        const displaySymbol = inputSymbol === null ? this.props.symbol : inputSymbol;\n\n        const symbolUsed = this.props.used || false;\n\n        return (\n            <div id={this.props.id}\n                className={Style.element_container +\n          (displaySymbol !== null && displaySymbol.length <= 0 ? ' empty ' : '') +\n          (inputSymbol !== null && this.state.error ? ' error ' : '') +\n          (symbolUsed ? ' used ' : '') +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <input ref={ref=>this._inputElement=ref}\n                    spellCheck={false}\n                    maxLength={1}\n                    style={{width: '1ch'}}\n                    value={displaySymbol}\n                    onChange={this.onValueChange}\n                    onFocus={this.onFocus}\n                    onBlur={this.onBlur}\n                    onKeyDown={this.onKeyDown}\n                    onKeyUp={this.onKeyUp}/>\n            </div>\n        );\n    }\n}\n\nexport default AlphabetListElement;\n","import React from 'react';\nimport Style from './AlphabetListView.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport BoxAddIcon from 'components/iconset/BoxAddIcon.js';\n\nimport AlphabetListElement from './AlphabetListElement.js';\n\nclass AlphabetListView extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.newSymbolComponent = null;\n\n        this.state = {\n            useNewSymbol: false\n        };\n\n        this.onElementAdd = this.onElementAdd.bind(this);\n        this.onElementFocus = this.onElementFocus.bind(this);\n        this.onElementBlur = this.onElementBlur.bind(this);\n        this.onElementChange = this.onElementChange.bind(this);\n    }\n\n    onElementAdd(e)\n    {\n    //Create a new alphabet element...\n        this.setState({useNewSymbol: true}, () => \n        {\n            this.newSymbolComponent.focus();\n        });\n    }\n\n    onElementFocus(e, element)\n    {\n    //Do nothing...\n    }\n\n    onElementBlur(e, element, nextSymbol)\n    {\n        const symbol = element.props.symbol;\n        const machineController = this.props.machineController;\n\n        if (nextSymbol !== null)\n        {\n            const machine = machineController.getMachineBuilder().getMachine();\n            if (nextSymbol.length > 0)\n            {\n                if (!machine.isSymbol(nextSymbol))\n                {\n                    if (symbol)\n                    {\n                        //None other have the same name. Rename it!\n                        machineController.renameSymbol(symbol, nextSymbol);\n                    }\n                    else\n                    {\n                        //None other have the same name. Create it!\n                        machineController.createSymbol(nextSymbol);\n                    }\n                }\n                else\n                {\n                    //Found something already named that! Ignore!\n                }\n            }\n            else if (symbol)\n            {\n                //Delete!\n                machineController.deleteSymbol(symbol);\n            }\n        }\n\n        //Regardless, just close the \"new\" alphabet element if open.\n        if (this.state.useNewSymbol)\n        {\n            this.setState({ useNewSymbol: false });\n        }\n    }\n\n    onElementChange(e, element, symbol)\n    {\n        const machineController = this.props.machineController;\n\n        if (symbol.length > 0)\n        {\n            //If there are more than 1 symbols by the same name,\n            //OR if the duplicate symbol found is NOT the same symbol\n            const machine = machineController.getMachineBuilder().getMachine();\n            if (machine.isSymbol(symbol) && symbol !== element.props.symbol)\n            {\n                throw new Error('Not a valid symbol');\n            }\n        }\n    }\n\n    renderAlphabetList(machine, alphabet)\n    {\n        const result = [];\n        for(const symbol of alphabet)\n        {\n            if (!symbol) continue;\n\n            result.push(<AlphabetListElement key={symbol}\n                symbol={symbol}\n                used={machine.isUsedSymbol(symbol)}\n                onFocus={this.onElementFocus}\n                onBlur={this.onElementBlur}\n                onChange={this.onElementChange}/>);\n        }\n        return result;\n    }\n\n    /** @override */\n    render()\n    {\n        const machineController = this.props.machineController;\n        const machine = machineController.getMachineBuilder().getMachine();\n        const alphabet = machine.getAlphabet();\n\n        return (\n            <div id={this.props.id}\n                className={Style.list_container}\n                style={this.props.style}>\n                <div className={Style.element_list}>\n                    {this.renderAlphabetList(machine, alphabet)}\n                    <AlphabetListElement\n                        ref={ref=>this.newSymbolComponent=ref}\n                        style={{display: this.state.useNewSymbol ? 'block' : 'none'}}\n                        symbol={''}\n                        onFocus={this.onElementFocus}\n                        onBlur={this.onElementBlur}\n                        onChange={this.onElementChange}/>\n                </div>\n                <IconButton className={Style.add_button}\n                    title=\"Add Symbol\"\n                    onClick={this.onElementAdd}>\n                    <BoxAddIcon/>\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nexport default AlphabetListView;\n","import React from 'react';\nimport Style from './TransitionChartView.css';\n\nimport { EMPTY_CHAR } from 'modules/fsa/graph/FSAEdge.js';\nimport { EMPTY_SYMBOL } from 'modules/fsa2/machine/FSA.js';\n\nclass TransitionChartView extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        //NOTE: this only works if machine hashing is faster than a re-calculate\n        this._cachedMachineHash = 0;\n        this._cachedMachineComponents = [];\n    }\n\n    /** @override */\n    componentWillUnmount()\n    {\n    //Reset cached components for re-rendering\n        this._cachedMachineHash = 0;\n        this._cachedMachineComponents.length = 0;\n    }\n\n    renderTransitionEntry(machine, state, symbol)\n    {\n        const deterministic = machine.isDeterministic();\n\n        let destinations = machine.doTransition(state, symbol, true);\n        let transitionString = '';\n        let error = false;\n\n        if (destinations.length <= 0)\n        {\n            if (deterministic)\n            {\n                error = true;\n                transitionString = '-';\n                if (symbol === EMPTY_SYMBOL)\n                {\n                    //Don't show missing empty transitions for DFA's\n                    return null;\n                }\n            }\n            else\n            {\n                //Don't show missing transitions for NFA's\n                return null;\n            }\n        }\n        else if (destinations.length === 1)\n        {\n            //Regardless if it's deterministic, it is a valid transition\n            error = false;\n            transitionString = destinations[0].getStateLabel();\n\n            if (!deterministic) transitionString = '{' + transitionString + '}';\n        }\n        else\n        {\n            //If it's deterministic, it is not valid\n            if (deterministic) error = true;\n\n            let string = '';\n            for(const state of destinations)\n            {\n                if (string.length > 0) string += ',';\n                string += state.getStateLabel();\n            }\n            transitionString = '{' + string + '}';\n        }\n\n        //Convert empty symbol to the expected char value\n        if (symbol === EMPTY_SYMBOL)\n        {\n            symbol = EMPTY_CHAR;\n\n            //DFA's can't have empty symbols\n            if (deterministic) error = true;\n        }\n\n        return (\n            <tr key={state.getStateID() + ':' + symbol}>\n                <td className={Style.chart_key + (error ? ' error ' : '')}>{'(' + state.getStateLabel() + ',' + symbol + ')'}</td>\n                <td className={Style.chart_value + (error ? ' error ' : '')}>{transitionString}</td>\n            </tr>\n        );\n    }\n\n    renderTransitionTable(machine)\n    {\n        const machineHash = machine.getHashCode();\n        if (machineHash !== this._cachedMachineHash)\n        {\n            this._cachedMachineHash = machineHash;\n        }\n        else\n        {\n            return this._cachedMachineComponents;\n        }\n\n        const result = this._cachedMachineComponents = [];\n        // const deterministic = machine.isDeterministic();\n\n        for(const state of machine.getStates())\n        {\n            let entry = null;\n\n            //The empty transitions...\n            entry = this.renderTransitionEntry(machine, state, EMPTY_SYMBOL);\n            if (entry) result.push(entry);\n\n            //The other transitions...\n            for(const symbol of machine.getAlphabet())\n            {\n                entry = this.renderTransitionEntry(machine, state, symbol);\n                if (entry) result.push(entry);\n            }\n        }\n        return result;\n    }\n\n    /** @override */\n    render()\n    {\n        const machineController = this.props.machineController;\n        const machine = machineController.getMachineBuilder().getMachine();\n        const deterministic = machineController.getMachineType() === 'DFA';\n\n        return (\n            <div id={this.props.id}\n                className={Style.chart_container +\n        ' ' + this.props.className}\n                style={this.props.style}>\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>\n                                {'Q\\u00d7\\u03A3'}\n                            </th>\n                            <th>\n                                {deterministic ?\n                                    <span>{'Q'}</span> :\n                                    <span>\n                                        <span style={{fontFamily: 'cursive'}}>{'P'}</span>\n                                        <span>{'(Q)'}</span>\n                                    </span>}\n                            </th>\n                        </tr>\n                        {this.renderTransitionTable(machine)}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default TransitionChartView;\n","import React from 'react';\nimport Style from './TransitionTableView.css';\n\nimport { EMPTY_CHAR } from 'modules/fsa/graph/FSAEdge.js';\nimport { EMPTY_SYMBOL } from 'modules/fsa2/machine/FSA.js';\n\nconst SYMBOL_AXIS = 'symbols';\nconst STATE_AXIS = 'states';\n\nclass TransitionTableView extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            rowAxis: SYMBOL_AXIS\n        };\n\n        this.onRowAxisSwitch = this.onRowAxisSwitch.bind(this);\n    }\n\n    onRowAxisSwitch(e)\n    {\n        this.setState((prev, props) => \n        {\n            return {\n                rowAxis: prev.rowAxis === SYMBOL_AXIS ? STATE_AXIS : SYMBOL_AXIS\n            };\n        });\n    }\n\n    renderTableEntryForSymbolAxis(machine, state, symbol)\n    {\n        const deterministic = machine.isDeterministic();\n        const destinations = machine.doTransition(state, symbol);\n        let transitionString = '';\n        let error = false;\n\n        if (destinations.length <= 0)\n        {\n            if (deterministic && symbol !== EMPTY_SYMBOL) error = true;\n            transitionString = '-';\n        }\n        else if (destinations.length === 1)\n        {\n            if (deterministic && symbol === EMPTY_SYMBOL) error = true;\n            transitionString = destinations[0].getStateLabel();\n        }\n        else\n        {\n            if (deterministic) error = true;\n            let string = '';\n            for (const other of destinations)\n            {\n                if (string.length > 0) string += ',';\n                string += other.getStateLabel();\n            }\n            transitionString = '{' + string + '}';\n        }\n\n        const disabled = deterministic && symbol === EMPTY_SYMBOL;\n\n        return (\n            <td key={state.getStateID() + ':' + symbol}\n                className={Style.table_entry +\n                    (error ? ' error ' : '') +\n                    (disabled ? ' disabled ' : '')}>\n                {transitionString}\n            </td>\n        );\n    }\n\n    renderTableEntries(machine, rowAxis)\n    {\n        // const deterministic = machine.isDeterministic();\n\n        const result = [];\n        for (const state of machine.getStates())\n        {\n            const rowComponents = [];\n            switch (rowAxis)\n            {\n            case SYMBOL_AXIS:\n                for (const symbol of machine.getAlphabet())\n                {\n                    rowComponents.push(this.renderTableEntryForSymbolAxis(machine, state, symbol));\n                }\n                rowComponents.push(this.renderTableEntryForSymbolAxis(machine, state, EMPTY_SYMBOL));\n                break;\n            case STATE_AXIS:\n                for (const other of machine.getStates())\n                {\n                    const symbols = machine.getTransitionSymbols(state, other);\n                    let string = '';\n                    if (symbols)\n                    {\n                        for (const symbol of symbols)\n                        {\n                            if (string.length > 0) string += '\\n';\n                            if (symbol === EMPTY_SYMBOL) string += EMPTY_CHAR;\n                            else string += symbol;\n                        }\n                    }\n                    else\n                    {\n                        string = '-';\n                    }\n                    rowComponents.push(\n                        <td key={state.getStateID() + ':' + other.getStateID()}>\n                            {string}\n                        </td>\n                    );\n                }\n                break;\n            default:\n                throw new Error('Unknown row axis type \\'' + rowAxis + '\\'');\n            }\n            result.push(\n                <tr key={state.getStateID()}>\n                    <th scope=\"row\" className={Style.table_axis_header + ' row'}>\n                        {state.getStateLabel()}\n                    </th>\n                    {rowComponents}\n                </tr>\n            );\n        }\n        return result;\n    }\n\n    renderTableAxis(machine, rowAxis)\n    {\n        let result = [];\n        const disabled = machine.isDeterministic();\n        switch (rowAxis)\n        {\n        case SYMBOL_AXIS:\n            for (const symbol of machine.getAlphabet())\n            {\n                result.push(\n                    <th key={symbol} scope=\"col\" className={Style.table_axis_header + ' col'}>\n                        {symbol}\n                    </th>\n                );\n            }\n            result.push(\n                <th key={EMPTY_SYMBOL} scope=\"col\"\n                    className={Style.table_axis_header +\n                            (disabled ? ' disabled ' : '') +\n                            ' col'}>\n                    {EMPTY_CHAR}\n                </th>\n            );\n            return result;\n        case STATE_AXIS:\n            for (const state of machine.getStates())\n            {\n                result.push(\n                    <th key={state.getStateID()} scope=\"col\" className={Style.table_axis_header + ' col'}>\n                        {state.getStateLabel()}\n                    </th>\n                );\n            }\n            return result;\n        default:\n            throw new Error('Unknown row axis type \\'' + rowAxis + '\\'');\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        const rowAxis = this.state.rowAxis;\n        const machineController = this.props.machineController;\n        const machine = machineController.getMachineBuilder().getMachine();\n\n        return (\n            <div id={this.props.id}\n                className={Style.table_container +\n                    ' ' + this.props.className}\n                style={this.props.style}>\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>\n                                <button onClick={this.onRowAxisSwitch}>\n                                    {rowAxis === SYMBOL_AXIS ? 'Q/\\u03A3' : 'Q/Q'}\n                                </button>\n                            </th>\n                            {this.renderTableAxis(machine, rowAxis)}\n                        </tr>\n                        {this.renderTableEntries(machine, rowAxis)}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default TransitionTableView;\n","import React from 'react';\nimport Style from './AutoStateLabelView.css';\n\nimport FormattedInput from 'deprecated/system/formattedinput/FormattedInput.js';\n\nclass AutoStateLabelView extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.onAutoStatePrefixSubmit = this.onAutoStatePrefixSubmit.bind(this);\n        this.onAutoStatePrefixFormat = this.onAutoStatePrefixFormat.bind(this);\n    }\n\n    onAutoStatePrefixSubmit(next, prev)\n    {\n        const graphController = this.props.graphController;\n        const graphLabeler = graphController.getGraphLabeler();\n\n        const prefix = graphLabeler.getDefaultNodeLabelPrefix();\n        if (prefix != next)\n        {\n            graphLabeler.setDefaultNodeLabelPrefix(next);\n            graphController.applyAutoRename();\n        }\n    }\n\n    onAutoStatePrefixFormat(value)\n    {\n        return value && value.length > 0 ? value :\n            this.props.graphController.getGraphLabeler().getDefaultNodeLabelPrefix();\n    }\n\n    /** @override */\n    render()\n    {\n        const graphController = this.props.graphController;\n\n        return (\n            <div id={this.props.id}\n                className={Style.select_container +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <label className={Style.select_label}>\n          State Labels\n                </label>\n                <FormattedInput\n                    className={Style.prefix_editor}\n                    defaultValue={graphController.getGraphLabeler().getDefaultNodeLabelPrefix()}\n                    captureOnExit=\"save\"\n                    formatter={this.onAutoStatePrefixFormat}\n                    onSubmit={this.onAutoStatePrefixSubmit}/>\n                <select className={Style.postfix_selector}\n                    onChange={this.onMachineTypeChange}\n                    disabled={true}>\n                    <option>0-9</option>\n                    <option>a-z</option>\n                    <option>A-Z</option>\n                </select>\n            </div>\n        );\n    }\n}\n\nexport default AutoStateLabelView;\n","import React from 'react';\nimport Style from './OverviewPanel.css';\n\nimport PanelContainer from 'experimental/panels/PanelContainer.js';\nimport PanelSection from 'experimental/panels/PanelSection.js';\nimport PanelDivider from 'experimental/panels/PanelDivider.js';\nimport PanelSwitch from 'experimental/panels/PanelSwitch.js';\n\nimport StateListView from './states/StateListView.js';\nimport AlphabetListView from './alphabet/AlphabetListView.js';\nimport TransitionChartView from './transitions/TransitionChartView.js';\nimport TransitionTableView from './transitions/TransitionTableView.js';\nimport AutoStateLabelView from './AutoStateLabelView.js';\n\nconst MACHINE_TYPE_DFA = 'DFA';\nconst MACHINE_TYPE_NFA = 'NFA';\n\nclass OverviewPanel extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.onMachineTypeChange = this.onMachineTypeChange.bind(this);\n        this.onAutoLayoutApply = this.onAutoLayoutApply.bind(this);\n        this.onAutoLayoutChange = this.onAutoLayoutChange.bind(this);\n        this.onAutoLabelChange = this.onAutoLabelChange.bind(this);\n        this.onSnapToGridChange = this.onSnapToGridChange.bind(this);\n    }\n\n    onMachineTypeChange(e)\n    {\n        const newValue = e.target.value;\n\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const machineController = currentModule.getMachineController();\n        const machine = machineController.getMachineBuilder().getMachine();\n\n        switch(newValue)\n        {\n        case MACHINE_TYPE_DFA:\n            machine.setDeterministic(true);\n            break;\n        case MACHINE_TYPE_NFA:\n            machine.setDeterministic(false);\n            break;\n        default:\n            throw new Error('Unknown machine type \\'' + newValue + '\\'');\n        }\n    }\n\n    onAutoLayoutApply(e)\n    {\n        const currentModule = this.props.session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        graphController.applyAutoLayout();\n    }\n\n    onAutoLayoutChange(e)\n    {\n    //TODO: Not yet implemented...\n    }\n\n    onAutoLabelChange(e)\n    {\n        const currentModule = this.props.session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        graphController.setAutoRenameNodes(e.target.checked);\n    }\n\n    onSnapToGridChange(e)\n    {\n    //TODO: Not yet implemented...\n    }\n\n    /** @override */\n    render()\n    {\n        const drawer = this.props.drawer;\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        const machineController = currentModule.getMachineController();\n        const machineType = machineController.getMachineBuilder().getMachine().isDeterministic() ? MACHINE_TYPE_DFA : MACHINE_TYPE_NFA;\n        const autoRename = graphController.shouldAutoRenameNodes();\n\n        const drawerFull = drawer.isDrawerFullscreen();\n\n        return (\n            <PanelContainer id={this.props.id}\n                className={this.props.className}\n                style={this.props.style}\n                title={OverviewPanel.TITLE}>\n\n                <select className={Style.machine_type_select}\n                    value={machineType}\n                    onChange={this.onMachineTypeChange}>\n                    <option>{MACHINE_TYPE_DFA}</option>\n                    <option>{MACHINE_TYPE_NFA}</option>\n                </select>\n\n                <PanelDivider/>\n\n                <PanelSection title={'States'} initial={true} full={drawerFull}>\n                    <StateListView graphController={graphController}/>\n                </PanelSection>\n                <PanelSection title={'Alphabet'} initial={true} full={drawerFull}>\n                    <AlphabetListView machineController={machineController}/>\n                </PanelSection>\n\n                <PanelDivider/>\n\n                <PanelSection title={'Transition Chart'} full={drawerFull} disabled={graphController.getGraph().getEdgeCount() <= 0}>\n                    <TransitionChartView machineController={machineController}/>\n                </PanelSection>\n                <PanelSection title={'Transition Table'} full={drawerFull} disabled={graphController.getGraph().getNodeCount() <= 0}>\n                    <TransitionTableView machineController={machineController}/>\n                </PanelSection>\n\n                <PanelDivider/>\n\n                <AutoStateLabelView graphController={graphController}/>\n\n                <button className={Style.autolayout_button} onClick={this.onAutoLayoutApply} disabled={graphController.getGraph().isEmpty()}>\n                    {I18N.toString('action.overview.autolayout')}\n                </button>\n\n                <PanelDivider/>\n\n                <PanelSwitch id={'overview-auto-label'}\n                    checked={autoRename}\n                    title={'Auto rename nodes'}\n                    onChange={this.onAutoLabelChange}/>\n                <PanelSwitch id={'overview-auto-layout'}\n                    checked={false}\n                    title={'Auto layout nodes'}\n                    disabled={true}\n                    onChange={this.onAutoLayoutChange}/>\n                <PanelSwitch id={'overview-snap-grid'}\n                    checked={false}\n                    title={'Snap-to-grid'}\n                    disabled={true}\n                    onChange={this.onSnapToGridChange}/>\n\n            </PanelContainer>\n        );\n    }\n}\nObject.defineProperty(OverviewPanel, 'TITLE', {\n    get: function() { return I18N.toString('component.overview.title'); }\n});\n\nexport default OverviewPanel;\n","import React from 'react';\nimport Style from './TestItem.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport SubtractIcon from 'components/iconset/SubtractIcon.js';\nimport CheckCircleIcon from 'components/iconset/CheckCircleIcon.js';\nimport CrossCircleIcon from 'components/iconset/CrossCircleIcon.js';\nimport PendingIcon from 'components/iconset/PendingIcon.js';\nimport RunningManIcon from 'components/iconset/RunningManIcon.js';\n\nexport const DEFAULT_MODE = 'default';\nexport const SUCCESS_MODE = 'success';\nexport const FAILURE_MODE = 'failure';\nexport const WORKING_MODE = 'working';\n\nclass TestItem extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.inputElement = null;\n\n        this.state = {\n            value: this.props.defaultValue || '',\n            status: DEFAULT_MODE\n        };\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    focus()\n    {\n        if (this.inputElement)\n        {\n            this.inputElement.focus();\n        }\n    }\n\n    setValue(value, callback=null)\n    {\n        if (this.state.value !== value)\n        {\n            this.setState({value: value}, callback);\n        }\n        else if (callback)\n        {\n            callback();\n        }\n    }\n\n    setStatus(status, callback=null)\n    {\n        if (this.state.status !== status)\n        {\n            this.setState({status: status}, callback);\n        }\n        else if (callback)\n        {\n            callback();\n        }\n    }\n\n    resetStatus(callback=null)\n    {\n        if (this.state.status !== DEFAULT_MODE)\n        {\n            this.setState({status: DEFAULT_MODE}, callback);\n        }\n        else if (callback)\n        {\n            callback();\n        }\n    }\n\n    getValue()\n    {\n        return this.state.value;\n    }\n\n    getStatus()\n    {\n        return this.state.status;\n    }\n\n    onChange(e)\n    {\n        const nextValue = e.target.value;\n        if (this.state.value !== nextValue)\n        {\n            this.setState({value: nextValue, status: DEFAULT_MODE});\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        const onDelete = this.props.onDelete;\n        const showDelete = true;\n\n        const onTest = this.props.onTest;\n        const showTest = true;\n\n        const active = this.props.active;\n        // const subtitle = this.props.subtitle;\n        const placeholder = this.props.placeholder;\n        const status = this.state.status;\n\n        return (\n            <div id={this.props.id}\n                className={Style.test_item_container +\n          (active ? ' active ' : '') +\n          ' ' + status +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                {showTest &&\n          <IconButton className={Style.test_button}\n              title={'Test'}\n              disabled={!onTest}\n              onClick={(e) => onTest(e, this)}>\n              {status === SUCCESS_MODE ?\n                  <CheckCircleIcon/> :\n                  status === FAILURE_MODE ?\n                      <CrossCircleIcon/> :\n                      status === WORKING_MODE ?\n                          <PendingIcon/> :\n                          <RunningManIcon/>}\n          </IconButton>}\n                <div className={Style.test_input}>\n                    <input ref={ref=>this.inputElement=ref} type=\"text\"\n                        placeholder={placeholder}\n                        value={this.state.value}\n                        onChange={this.onChange}/>\n                    <label>{this.props.subtitle}</label>\n                </div>\n                {showDelete &&\n          <IconButton className={Style.delete_button}\n              title={'Delete'}\n              disabled={!onDelete}\n              onClick={(e) => onDelete(e, this)}>\n              <SubtractIcon/>\n          </IconButton>}\n            </div>\n        );\n    }\n}\n\nexport default TestItem;\n","import React from 'react';\nimport Style from './TestListView.css';\n\nimport { guid } from 'util/MathHelper.js';\nimport { downloadText } from 'util/Downloader.js';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport IconUploadButton from 'experimental/components/IconUploadButton.js';\n\nimport PageContentIcon from 'components/iconset/PageContentIcon.js';\nimport UploadIcon from 'components/iconset/UploadIcon.js';\nimport DownloadIcon from 'components/iconset/DownloadIcon.js';\nimport CrossIcon from 'components/iconset/CrossIcon.js';\nimport AddIcon from 'components/iconset/AddIcon.js';\nimport RunningManIcon from 'components/iconset/RunningManIcon.js';\n\nimport TestItem, {SUCCESS_MODE, FAILURE_MODE, WORKING_MODE, DEFAULT_MODE} from './TestItem.js';\n\nconst ACCEPT_FILE_TYPES = ['.txt'];\nconst TEST_FILENAME = 'test.txt';\n// const TEST_REFRESH_TICKS = 30;\n\nclass TestListView extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this._testList = [];\n        this._testName = TEST_FILENAME;\n\n        this.onTestNew = this.onTestNew.bind(this);\n        this.onTestUpload = this.onTestUpload.bind(this);\n        this.onTestDownload = this.onTestDownload.bind(this);\n        this.onTestClose = this.onTestClose.bind(this);\n        this.onTestAdd = this.onTestAdd.bind(this);\n        this.onTestDelete = this.onTestDelete.bind(this);\n        this.onTestTest = this.onTestTest.bind(this);\n        this.onTestRunAll = this.onTestRunAll.bind(this);\n        this.onGraphChange = this.onGraphChange.bind(this);\n    }\n\n    /** @override */\n    componentDidMount()\n    {\n        this.props.graphController.getGraphChangeHandler().addListener(this.onGraphChange);\n    }\n\n    /** @override */\n    componentWillUnmount()\n    {\n        this.props.graphController.getGraphChangeHandler().removeListener(this.onGraphChange);\n    }\n\n    onGraphChange(graph)\n    {\n        for(const test of this._testList)\n        {\n            test.ref.resetStatus();\n        }\n    }\n\n    onTestNew(e)\n    {\n        if (!this.isEmpty())\n        {\n            this.onTestClose(e);\n        }\n\n        this.onTestAdd(e);\n    }\n\n    onTestUpload(fileBlob)\n    {\n        const reader = new FileReader();\n        reader.onload = (event) => \n        {\n            try\n            {\n                this._testName = fileBlob.name;\n                this._testList.length = 0;\n\n                const tests = event.target.result.split('\\n');\n                for(let test of tests)\n                {\n                    test = test.trim();\n                    if (test.length > 0)\n                    {\n                        this._testList.push({\n                            id: guid(),\n                            defaultValue: test,\n                            ref: null\n                        });\n                    }\n                }\n\n                //Make sure an element exists, at least\n                if (this._testList.length <= 0)\n                {\n                    this.onTestAdd(null);\n                }\n            }\n            catch(e)\n            {\n                reader.abort();\n            }\n        };\n        reader.readAsText(fileBlob);\n    }\n\n    onTestDownload(e)\n    {\n        const testStrings = [];\n        for(const test of this._testList)\n        {\n            const ref = test.ref;\n            if (ref)\n            {\n                testStrings.push(ref.getValue());\n            }\n        }\n\n        downloadText(this._testName, testStrings.join('\\n'));\n    }\n\n    onTestClose(e)\n    {\n        const tester = this.props.tester;\n        if (tester.isTesting())\n        {\n            tester.stopTest();\n        }\n\n        this._testList.length = 0;\n    }\n\n    onTestAdd(e)\n    {\n        this._testList.push({\n            id: guid(),\n            defaultValue: '',\n            ref: null\n        });\n    }\n\n    onTestRunAll(e)\n    {\n        // const tester = this.props.tester;\n        let i = 0;\n\n        const nextTest = () => \n        {\n            const test = this._testList[i];\n            this.onTestTest(null, test.ref, true, () => \n            {\n                ++i;\n                if (i < this._testList.length)\n                {\n                    nextTest();\n                }\n            });\n        };\n        nextTest();\n    }\n\n    onTestDelete(e, item)\n    {\n    //Already handled in render()\n    }\n\n    onTestTest(e, item, forceImmediate=false, callback=null)\n    {\n        const immediate = forceImmediate || this.props.immediate;\n        const tester = this.props.tester;\n        const itemValue = item.getValue();\n\n        item.setState({status: WORKING_MODE});\n\n        const graphController = this.props.graphController;\n        const machineController = this.props.machineController;\n        tester.startTest(itemValue, graphController, machineController).then((result) => \n        {\n            item.setState({status: result ? SUCCESS_MODE : FAILURE_MODE});\n        }, (err) => \n        {\n            //It didn't work out :(\n            item.setState({status: DEFAULT_MODE});\n        });\n\n        if (immediate)\n        {\n            const promise = tester.runTest(graphController, machineController, true);\n            if (callback)\n            {\n                promise.then(callback);\n            }\n        }\n    }\n\n    isEmpty()\n    {\n        return this._testList.length <= 0;\n    }\n  \n    /** @override */\n    render()\n    {\n        // const immediate = this.props.immediate;\n        const tester = this.props.tester;\n\n        const graphController = this.props.graphController;\n        // const machineController = this.props.machineController;\n\n        const empty = this.isEmpty();\n        const disabled = tester && tester.isTesting();\n\n        return (\n            <div id={this.props.id}\n                className={Style.test_container +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <div className={Style.test_control_tray}>\n                    <IconButton className={Style.test_control_button}\n                        title={I18N.toString('action.testing.new')}\n                        onClick={this.onTestNew}>\n                        <PageContentIcon/>\n                    </IconButton>\n                    <IconUploadButton className={Style.test_control_button}\n                        title={I18N.toString('action.testing.import')}\n                        accept={ACCEPT_FILE_TYPES.join(',')}\n                        onUpload={this.onTestUpload}>\n                        <UploadIcon/>\n                    </IconUploadButton>\n                    <IconButton className={Style.test_control_button}\n                        title={I18N.toString('action.testing.save')}\n                        disabled={empty}\n                        onClick={this.onTestDownload}>\n                        <DownloadIcon/>\n                    </IconButton>\n                    <IconButton className={Style.test_control_button}\n                        title={I18N.toString('action.testing.clear')}\n                        disabled={empty}\n                        onClick={this.onTestClose}>\n                        <CrossIcon/>\n                    </IconButton>\n                </div>\n                <div className={Style.test_list_container +\n          (empty ? ' empty ' : '') +\n          (disabled ? ' disabled ': '')}>\n                    <IconButton className={Style.test_list_add}\n                        title={'Add'} onClick={this.onTestAdd}>\n                        <AddIcon/>\n                        <span className={Style.test_list_count}>\n                            {!empty ? '' + this._testList.length : ''}\n                        </span>\n                    </IconButton>\n                    <div className={Style.test_list_scroll_container}>\n                        <div className={Style.test_list}>\n                            {this._testList.map((e, i) => \n                            {\n                                const id = e.id;\n                                const defaultValue = e['defaultValue'] || '';\n                                let testCallback = this.onTestTest;\n                                if (!tester || graphController.getGraph().isEmpty())\n                                {\n                                    testCallback = null;\n                                }\n                                return <TestItem key={id} ref={ref=>e.ref=ref}\n                                    defaultValue={defaultValue}\n                                    onTest={testCallback}\n                                    onDelete={(e, item) => \n                                    {\n                                        this._testList.splice(i, 1);\n                                        this.onTestDelete(e, item);\n                                    }}/>;\n                            })}\n                        </div>\n                    </div>\n                    <IconButton className={Style.test_list_runall}\n                        title={'Run All'} onClick={this.onTestRunAll}>\n                        <RunningManIcon/>\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TestListView;\n","import React from 'react';\nimport DefaultNotificationLayout, {STYLE_TYPE_WARNING} from 'session/manager/notification/components/DefaultNotificationLayout.js';\n\n// TODO: specify what the class does\nclass NFAToDFAConversionNotificationLayout extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick(e)\n    {\n        const notification = this.props.notification;\n        // TODO: specify what e is\n        switch(e.target.value)\n        {\n        case 'convert':\n            {\n                //FIXME: FSABUILDER: convertMachineTo needs to change?\n                const machineController = this.props.machineController;\n                machineController.convertMachineTo('DFA');\n                notification.close();\n            }\n            break;\n        }\n    }\n\n    /** @override */\n    render()\n    {\n    // TODO: clarify machineController?\n        const machineController = this.props.machineController;\n        const stateCount = machineController.countStates();\n\n        return (\n            <DefaultNotificationLayout id={this.props.id}\n                className={this.props.className}\n                style={this.props.style}\n                styleType={STYLE_TYPE_WARNING}\n                notification={this.props.notification}>\n                <p>{I18N.toString('message.warning.convertNFAToDFA')}</p>\n                <p>{`${stateCount} states -> ${Math.pow(2, stateCount)} states`}</p>\n                <button value=\"convert\" onClick={this.onClick}>\n                    {I18N.toString('message.action.convert')}\n                </button>\n            </DefaultNotificationLayout>\n        );\n    }\n}\n\nexport default NFAToDFAConversionNotificationLayout;\n","import React from 'react';\nimport DefaultNotificationLayout, {STYLE_TYPE_ERROR}\n    from 'session/manager/notification/components/DefaultNotificationLayout.js';\n\n/**\n * @class\n * A class representing the layout for a notification referring to states\n */\nclass StateNotificationLayout extends React.Component\n{\n    /**\n   * @constructor\n   * @param {Object} props component's properties\n   */\n    constructor(props)\n    {\n        super(props);\n\n        this._targetIndex = 0;\n        this._targetLabel = '';\n        const targets = props.message.targets;\n        for(const target of targets)\n        {\n            if (this._targetLabel.length > 0)\n            {\n                this._targetLabel += ', ';\n            }\n            // TODO: make a helper function for this type of constructor\n            this._targetLabel += target.getNodeLabel();\n        }\n\n        this.onClick = this.onClick.bind(this);\n    }\n\n    /**\n   * Handles onclick events for the buttons\n   * @param {Event} e the input event\n   */\n    onClick(e)\n    {\n        const notification = this.props.notification;\n        const message = this.props.message;\n\n        const graphController = this.props.graphController;\n\n        switch(e.target.value)\n        {\n        // Cycle through all of the targets and center the viewport on it\n        case 'locate':\n            {\n                const targets = message.targets;\n                const targetLength = targets.length;\n                if (targetLength > 0 && this._targetIndex < targetLength)\n                {\n                    // Locate the target edge\n                    const target = targets[this._targetIndex++];\n                    if (this._targetIndex >= targetLength) this._targetIndex = 0;\n\n                    // Move pointer to target\n                    graphController.focusOnNode(target);\n                }\n            }\n            break;\n            // Delete all targets\n        case 'deleteall':\n            {\n                const targets = message.targets;\n                // Delete all target nodes\n                graphController.deleteTargetNodes(targets);\n\n                // Sort the nodes after deleting if enabled...\n                graphController.applyAutoRename();\n\n                // Exit the message\n                notification.close();\n            }\n            break;\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        const message = this.props.message;\n\n        // TODO: localization issues\n        return (\n            <DefaultNotificationLayout id={this.props.id}\n                className={this.props.className}\n                style={this.props.style}\n                styleType={STYLE_TYPE_ERROR}\n                notification={this.props.notification}>\n                <p>{message.text + ': ' + this._targetLabel}</p>\n                <button value=\"locate\" onClick={this.onClick}>\n                    {I18N.toString('message.action.locate')}\n                </button>\n                <button value=\"deleteall\" onClick={this.onClick}>\n                    {I18N.toString('message.action.deleteall')}\n                </button>\n            </DefaultNotificationLayout>\n        );\n    }\n}\n\nexport default StateNotificationLayout;\n","import React from 'react';\nimport DefaultNotificationLayout, {STYLE_TYPE_ERROR} from 'session/manager/notification/components/DefaultNotificationLayout.js';\nimport GraphNode from 'graph/elements/GraphNode.js';\n\nconst ARROW = '\\u2192';\n\nclass TransitionNotificationLayout extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.targetIndex = 0;\n        this.targetLabel = '';\n        const targets = props.message.targets;\n        for(const target of targets)\n        {\n            if (this.targetLabel.length > 0)\n            {\n                this.targetLabel += ', ';\n            }\n            this.targetLabel += '(' + target.getEdgeFrom().getNodeLabel() + ', ' +\n        target.getEdgeLabel() + ') ' +\n        ARROW + ' ' + (target.getEdgeTo() instanceof GraphNode ? target.getEdgeTo().getNodeLabel() : 'null');\n        }\n\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick(e)\n    {\n        const notification = this.props.notification;\n        const message = this.props.message;\n\n        const graphController = this.props.graphController;\n\n        switch(e.target.value)\n        {\n        case 'locate':\n            {\n                const targets = message.targets;\n                const targetLength = targets.length;\n                if (targetLength > 0 && this.targetIndex < targetLength)\n                {\n                    //Locate the target edge\n                    const target = targets[this.targetIndex++];\n                    if (this.targetIndex >= targetLength) this.targetIndex = 0;\n\n                    //Move pointer to target\n                    graphController.focusOnEdge(target);\n                }\n            }\n            break;\n        case 'deleteall':\n            {\n                const targets = message.targets;\n                //Delete all target edges\n                graphController.deleteTargetEdges(targets);\n\n                //Exit the message\n                notification.close();\n            }\n            break;\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        // const message = this.props.message;\n\n        return (\n            <DefaultNotificationLayout id={this.props.id}\n                className={this.props.className}\n                style={this.props.style}\n                styleType={STYLE_TYPE_ERROR}\n                notification={this.props.notification}>\n                <p>{this.props.message.text + ': ' + this.targetLabel}</p>\n                <button value=\"locate\" onClick={this.onClick}>\n                    {I18N.toString('message.action.locate')}\n                </button>\n                <button value=\"deleteall\" onClick={this.onClick}>\n                    {I18N.toString('message.action.deleteall')}\n                </button>\n            </DefaultNotificationLayout>\n        );\n    }\n}\n\nexport default TransitionNotificationLayout;\n","import React from 'react';\nimport DefaultNotificationLayout, {STYLE_TYPE_ERROR} from 'session/manager/notification/components/DefaultNotificationLayout.js';\n\n// TODO: add @see for usage\nclass StateMissingTransitionNotificationLayout extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        // TODO: check to see if these variables are used elsewhere; otherwise make it private\n        this.targetIndex = 0;\n        this.targetLabel = '';\n        // TODO: clarify what target is, specify type\n        const targets = props.message.targets;\n        for(const target of targets)\n        {\n            if (this.targetLabel.length > 0)\n            {\n                this.targetLabel += ', ';\n            }\n            this.targetLabel += target.getNodeLabel();\n        }\n        // TODO: fix \"for\" - not language compatible\n        this.targetLabel += ' for ' + props.message.symbol;\n\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick(e)\n    {\n        // const notification = this.props.notification;\n        const message = this.props.message;\n        const graphController = this.props.graphController;\n\n        switch(e.target.value)\n        {\n        case 'locate':\n            {\n                const targets = message.targets;\n                const targetLength = targets.length;\n                if (targetLength > 0 && this.targetIndex < targetLength)\n                {\n                    //Locate the target edge\n                    const target = targets[this.targetIndex++];\n                    if (this.targetIndex >= targetLength) this.targetIndex = 0;\n\n                    //Move pointer to target\n                    graphController.focusOnNode(target);\n                }\n            }\n            break;\n        }\n    }\n\n    /** @override */\n    render()\n    {\n    // TODO: I18N - look out for localization\n        return (\n            <DefaultNotificationLayout id={this.props.id}\n                className={this.props.className}\n                style={this.props.style}\n                styleType={STYLE_TYPE_ERROR}\n                notification={this.props.notification}>\n                <p>{I18N.toString('message.error.missing') + ': ' + this.targetLabel}</p>\n                <button value=\"locate\" onClick={this.onClick}>\n                    {I18N.toString('message.action.locate')}\n                </button>\n            </DefaultNotificationLayout>\n        );\n    }\n}\n\nexport default StateMissingTransitionNotificationLayout;\n","import React from 'react';\nimport DefaultNotificationLayout, {STYLE_TYPE_WARNING} from 'session/manager/notification/components/DefaultNotificationLayout.js';\n\nclass StateUnreachableNotificationLayout extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.targetIndex = 0;\n        this.targetLabel = '';\n        const targets = props.message;\n        for(const target of targets)\n        {\n            if (this.targetLabel.length > 0)\n            {\n                this.targetLabel += ', ';\n            }\n            this.targetLabel += target.getNodeLabel();\n        }\n\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick(e)\n    {\n        const notification = this.props.notification;\n        const message = this.props.message;\n        const graphController = this.props.graphController;\n\n        switch(e.target.value)\n        {\n        case 'locate':\n            {\n                //Locate the target node\n                const target = message[this.targetIndex++];\n                if (this.targetIndex >= message.length)\n                {\n                    this.targetIndex = 0;\n                }\n\n                //Move pointer to target\n                graphController.focusOnNode(target);\n            }\n            break;\n        case 'deleteall':\n            {\n                const targets = message;\n                //Delete all target nodes\n                graphController.deleteTargetNodes(targets);\n\n                //Sort the nodes after deleting if enabled...\n                graphController.applyAutoRename();\n\n                //Exit the message\n                notification.close();\n            }\n            break;\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        return (\n            <DefaultNotificationLayout id={this.props.id}\n                className={this.props.className}\n                style={this.props.style}\n                styleType={STYLE_TYPE_WARNING}\n                notification={this.props.notification}>\n                <p>{I18N.toString('message.warning.unreachable') + ': ' + this.targetLabel}</p>\n                <button value=\"locate\" onClick={this.onClick}>\n                    {I18N.toString('message.action.locate')}\n                </button>\n                <button value=\"deleteall\" onClick={this.onClick}>\n                    {I18N.toString('message.action.deleteall')}\n                </button>\n            </DefaultNotificationLayout>\n        );\n    }\n}\n\nexport default StateUnreachableNotificationLayout;\n","import NFAToDFAConversionNotificationLayout from './NFAToDFAConversionNotificationLayout.js';\nexport const MACHINE_CONVERSION_LAYOUT_ID = 'machine-convert';\nexport const MACHINE_CONVERSION_NOTIFICATION_TAG = 'machine-convert';\n\nimport StateNotificationLayout from './StateNotificationLayout.js';\nexport const STATE_LAYOUT_ID = 'machine-state';\n\nimport TransitionNotificationLayout from './TransitionNotificationLayout.js';\nexport const TRANSITION_LAYOUT_ID = 'machine-transition';\n\nimport StateMissingTransitionNotificationLayout from './StateMissingTransitionNotificationLayout.js';\nexport const STATE_MISSING_LAYOUT_ID = 'machine-state-missing';\n\nimport StateUnreachableNotificationLayout from './StateUnreachableNotificationLayout.js';\nexport const STATE_UNREACHABLE_LAYOUT_ID = 'machine-state-unreachable';\n\nexport const MACHINE_ERROR_NOTIFICATION_TAG = 'machine-error';\n\nexport function registerNotifications(notificationManager)\n{\n    notificationManager.registerNotificationLayout(MACHINE_CONVERSION_LAYOUT_ID, NFAToDFAConversionNotificationLayout);\n    notificationManager.registerNotificationLayout(STATE_MISSING_LAYOUT_ID, StateMissingTransitionNotificationLayout);\n    notificationManager.registerNotificationLayout(STATE_UNREACHABLE_LAYOUT_ID, StateUnreachableNotificationLayout);\n    notificationManager.registerNotificationLayout(STATE_LAYOUT_ID, StateNotificationLayout);\n    notificationManager.registerNotificationLayout(TRANSITION_LAYOUT_ID, TransitionNotificationLayout);\n}\n","import React from 'react';\nimport Style from './TestingPanel.css';\n\nimport PanelContainer from 'experimental/panels/PanelContainer.js';\nimport PanelSwitch from 'experimental/panels/PanelSwitch.js';\n\nimport TestListView from './TestListView.js';\n\nimport { MACHINE_ERROR_NOTIFICATION_TAG } from 'modules/fsa2/components/notifications/FSANotifications.js';\n\nclass TestingPanel extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            stepMode: false\n        };\n\n        this.onStepTestChange = this.onStepTestChange.bind(this);\n        this.onAutoErrorCheckChange = this.onAutoErrorCheckChange.bind(this);\n    }\n\n    /** @override */\n    componentDidMount()\n    {\n    //TODO: This should be in modules...\n        const session = this.props.session;\n        const app = session.getApp();\n        const currentModule = session.getCurrentModule();\n        const tester = currentModule._tester;\n        tester.on('startTest', (tester) => \n        {\n            app._viewport.setCurrentView(1);\n            app._drawer.setDrawerSoloClass(TestingPanel);\n            app._drawer.closeDrawer();\n        });\n        tester.on('stopTest', (tester) => \n        {\n            app._viewport.setCurrentView(0);\n            app._drawer.setDrawerSoloClass(null);\n            app._drawer.openDrawer();\n        });\n    }\n\n    onStepTestChange(e)\n    {\n        this.setState((prev, props) => \n        {\n            return {stepMode: !prev.stepMode};\n        });\n    }\n\n    onAutoErrorCheckChange(e)\n    {\n        const currentModule = this.props.session.getCurrentModule();\n        const errorChecker = currentModule.getErrorChecker();\n        const errorCheck = errorChecker.isErrorChecking();\n        errorChecker.setErrorChecking(!errorCheck);\n        if (errorCheck)\n        {\n            //Turning it off\n            this.props.session.getApp().getNotificationManager().clearNotifications(MACHINE_ERROR_NOTIFICATION_TAG);\n        }\n    }\n\n    /** @override */\n    render()\n    {\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        const machineController = currentModule.getMachineController();\n        const tester = currentModule.getStringTester();\n        const errorChecker = currentModule.getErrorChecker();\n\n        const stepMode = this.state.stepMode;\n        const errorCheck = errorChecker.isErrorChecking();\n\n        return (\n            <PanelContainer id={this.props.id}\n                className={Style.panel_container +\n          ' ' + this.props.className}\n                style={this.props.style}\n                title={TestingPanel.TITLE}>\n\n                <TestListView tester={tester} graphController={graphController} machineController={machineController} immediate={!stepMode}/>\n                <PanelSwitch id={'testing-step-test'} checked={stepMode} onChange={this.onStepTestChange} title={'Step testing'}/>\n                <PanelSwitch id={'testing-error-check'} checked={errorCheck} onChange={this.onAutoErrorCheckChange} title={'Auto error checking'}/>\n\n            </PanelContainer>\n        );\n    }\n}\nObject.defineProperty(TestingPanel, 'TITLE', {\n    get: function() { return I18N.toString('component.testing.title'); }\n});\n\nexport default TestingPanel;\n","import React from 'react';\nimport Style from './AnalysisPanel.css';\n\nimport { getUnreachableNodes } from 'modules/fsa2/graph/FSAGraphUtil.js';\n\nimport PanelContainer from 'experimental/panels/PanelContainer.js';\nimport PanelSection from 'experimental/panels/PanelSection.js';\nimport PanelCheckbox from 'experimental/panels/PanelCheckbox.js';\n\nimport { MACHINE_CONVERSION_LAYOUT_ID, MACHINE_CONVERSION_NOTIFICATION_TAG }\n    from 'modules/fsa2/components/notifications/FSANotifications.js';\n\nclass AnalysisPanel extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.optimizeUnreachOption = null;\n        this.optimizeRedundOption = null;\n\n        this.onConvertToDFA = this.onConvertToDFA.bind(this);\n        this.onConvertToNFA = this.onConvertToNFA.bind(this);\n        this.onInvertDFA = this.onInvertDFA.bind(this);\n\n        this.onOptimizeMachine = this.onOptimizeMachine.bind(this);\n    }\n\n    onDeleteAllUnreachable(e)\n    {\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        const unreachableArray = getUnreachableNodes(graphController.getGraph());\n        graphController.deleteTargetNodes(unreachableArray);\n    }\n\n    onConvertToDFA(e)\n    {\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        const machineController = currentModule.getMachineController();\n        const props = { graphController: graphController, machineController: machineController };\n\n        //Will do: machineController.convertMachineTo(\"DFA\");\n        session.getApp().getNotificationManager().pushNotification(\n            I18N.toString('message.warning.convertNFAToDFA'),\n            MACHINE_CONVERSION_LAYOUT_ID, MACHINE_CONVERSION_NOTIFICATION_TAG, props, true\n        );\n    }\n\n    onConvertToNFA(e)\n    {\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const machineController = currentModule.getMachineController();\n        machineController.convertMachineTo('NFA');\n    }\n\n    onInvertDFA(e)\n    {\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const machineController = currentModule.getMachineController();\n        machineController.invertMachine();\n    }\n\n    onOptimizeMachine(e)\n    {\n        if (this.optimizeUnreachOption.isChecked())\n        {\n            this.onDeleteAllUnreachable(e);\n        }\n    }\n\n    canOptimize()\n    {\n        return (this.optimizeRedundOption && this.optimizeRedundOption.isChecked()) ||\n            (this.optimizeUnreachOption && this.optimizeUnreachOption.isChecked());\n    }\n\n    /** @override */\n    render()\n    {\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const machineController = currentModule.getMachineController();\n\n        return (\n            <PanelContainer id={this.props.id}\n                className={this.props.className}\n                style={this.props.style}\n                title={AnalysisPanel.TITLE}>\n                <PanelSection title={'Optimizations'} initial={true}>\n                    <PanelCheckbox ref={ref => this.optimizeUnreachOption = ref}\n                        id=\"opt-unreach\" title=\"Unreachables\" value=\"unreach\" />\n                    <PanelCheckbox ref={ref => this.optimizeRedundOption = ref} disabled={true}\n                        id=\"opt-redund\" title=\"Redundant States\" value=\"redund\" />\n                    <button className={Style.analysis_button} onClick={this.onOptimizeMachine} disabled={!this.canOptimize()}>Optimize</button>\n                    {\n                        machineController.getMachineType() == 'DFA' ?\n                            <button className={Style.analysis_button} onClick={this.onConvertToNFA}>\n                                {I18N.toString('action.overview.convertnfa')}\n                            </button>\n                            : machineController.getMachineType() == 'NFA' ?\n                                <button className={Style.analysis_button} onClick={this.onConvertToDFA}>\n                                    {I18N.toString('action.overview.convertdfa')}\n                                </button>\n                                : null\n                    }\n                </PanelSection>\n                <PanelSection title={'Related Machines'}>\n                    {machineController.getMachineType() === 'DFA' &&\n                        <button className={Style.analysis_button} onClick={this.onInvertDFA}>\n                            {'Flip all accept states'}\n                        </button>}\n                </PanelSection>\n            </PanelContainer>\n        );\n    }\n}\nObject.defineProperty(AnalysisPanel, 'TITLE', {\n    get: function () { return I18N.toString('component.analysis.title'); }\n});\n\nexport default AnalysisPanel;\n","class TapeContext\n{\n    constructor(inputString, infiniteLeft=false, infiniteRight=false)\n    {\n        this._tapeInput = inputString ? inputString.split('') : [];\n        this._left = infiniteLeft;\n        this._right = infiniteRight;\n\n        this._index = 0;\n    }\n\n    stepForward()\n    {\n        ++this._index;\n    }\n\n    stepBackward()\n    {\n        --this._index;\n    }\n\n    finish()\n    {\n        this._index = (this._tapeInput.length * 2);\n    }\n\n    reset()\n    {\n        this._index = -1;\n    }\n\n    stop()\n    {\n        this.finish();\n        this.reset();\n    }\n\n    changeTapeSymbol(index, symbol='')\n    {\n        this._tapeInput[index] = symbol;\n    }\n\n    getTapeSourceStatesByIndex(index)\n    {\n        return null;\n    }\n\n    getTapeSymbolByIndex(index)\n    {\n        if (index < 0 || index >= this._tapeInput.length) return '';\n        return this._tapeInput[index] || '';\n    }\n\n    isTapeLeftInfinite()\n    {\n        return this._left;\n    }\n\n    isTapeRightInfinite()\n    {\n        return this._right;\n    }\n\n    setCurrentTapeIndex(index)\n    {\n        this._index = index;\n    }\n\n    getCurrentTapeIndex()\n    {\n        return this._index;\n    }\n\n    getTapeInput()\n    {\n        return this._tapeInput;\n    }\n}\n\nexport default TapeContext;\n","import Eventable from 'util/Eventable.js';\n\nimport { solveFSAByStep } from 'modules/fsa2/machine/FSAUtils.js';\n\nimport TapeContext from './TapeContext.js';\n\nclass TestTapeContext extends TapeContext\n{\n    constructor(tester, graphController, machineController)\n    {\n        super(tester.getTestString(), false, true);\n\n        this._tester = tester;\n        this._graphController = graphController;\n        this._machineController = machineController;\n    }\n\n    /** @override */\n    stepForward()\n    {\n        const graphController = this._graphController;\n        const machineController = this._machineController;\n        this._tester.stepForward(graphController, machineController);\n    }\n\n    /** @override */\n    stepBackward()\n    {\n        const graphController = this._graphController;\n        const machineController = this._machineController;\n        this._tester.stepBackward(graphController, machineController);\n    }\n\n    /** @override */\n    reset()\n    {\n        this._tester.resetPosition();\n    }\n\n    /** @override */\n    finish()\n    {\n        const graphController = this._graphController;\n        const machineController = this._machineController;\n        this._tester.runTest(graphController, machineController, false);\n    }\n\n    /** @override */\n    stop()\n    {\n        this._tester.stopTest();\n    }\n\n    /** @override */\n    changeTapeSymbol(index, symbol='')\n    {\n        throw new Error('Operation not yet supported');\n    }\n\n    /** @override */\n    getTapeSourceStatesByIndex(index)\n    {\n        if (index < 0 || index >= this._tapeInput.length) return null;\n        return this._tester.getNodesAtPosition(index);\n    }\n\n    /** @override */\n    getTapeSymbolByIndex(index)\n    {\n        if (index < 0 || index >= this._tapeInput.length) return [];\n        return this._tapeInput[index] || '';\n    }\n\n    /** @override */\n    setCurrentTapeIndex(index)\n    {\n        this._tester.changePosition(index);\n    }\n\n    /** @override */\n    getCurrentTapeIndex()\n    {\n        return this._tester.getPosition();\n    }\n}\n\nclass StringTester\n{\n    constructor()\n    {\n        this._testString = null;\n        this._testIndex = -1;\n\n        this._tapeContext = null;\n\n        //For nfa solver use\n        this._cachePath = [];\n        this._cachedResult = null;\n        this._resolve = null;\n        this._reject = null;\n\n        this.registerEvent('startTest');\n        this.registerEvent('stepTest');\n        this.registerEvent('stopTest');\n    }\n\n    //TODO: a hack to get current targets.\n    get targets()\n    {\n        if (this._cachePath.length <= 0) return [];\n        const cache = this._cachePath[this._cachePath.length - 1];\n        return cache.targets;\n    }\n\n    startTest(testString, graphController, machineController)\n    {\n        if (!testString) testString = '';\n        if (this._tapeContext) throw new Error('Unable to start an already running test');\n\n        const graph = graphController.getGraph();\n        if (graph.isEmpty()) return Promise.reject();\n\n        this._testString = testString;\n        this._testIndex = -1;\n        this._cachePath.length = 0;\n        this._cachedResult = null;\n        this._tapeContext = new TestTapeContext(this, graphController, machineController);\n\n        this.emit('startTest', this);\n\n        return new Promise((resolve, reject) => \n        {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n    }\n\n    stopTest()\n    {\n        if (!this._tapeContext) throw new Error('Unable to stop null test');\n\n        this.emit('stopTest', this);\n\n        if (!this._resolve) throw new Error('Must call startTest() before anything else');\n        if (!this._reject) throw new Error('Must call startTest() before anything else');\n\n        let testResult = null;\n        if (this._cachePath.length >= this._testString.length)\n        {\n            testResult = this._cachedResult;\n            this._resolve(testResult);\n        }\n        else\n        {\n            testResult = null;\n            this._reject();\n        }\n\n        this._testString = null;\n        this._testIndex = -1;\n        this._cachePath.length = 0;\n        this._cachedResult = null;\n        this._tapeContext = null;\n\n        return Promise.resolve(testResult);\n    }\n\n    runTest(graphController, machineController, thenStop=false)\n    {\n        if (!this._tapeContext) throw new Error('Unable to run null test');\n\n        return new Promise((resolve, reject) => \n        {\n            let result = false;\n            do\n            {\n                result = this.stepForward(graphController, machineController, !thenStop);\n            }\n            while (result);\n\n            resolve(this._cachedResult);\n        }).then((result) => \n        {\n            if (thenStop) return this.stopTest();\n            else return result;\n        });\n    }\n\n    stepForward(graphController, machineController, cacheStep=true)\n    {\n        const machine = machineController.getMachineBuilder().getMachine();\n\n        if (this._testIndex >= this._testString.length) return false;\n        ++this._testIndex;\n\n        if (this._cachePath.length <= this._testIndex)\n        {\n            //Calculate current step...\n            let cachedStates, cachedSymbols = null;\n            const isResult = this._testIndex === this._testString.length;\n\n            //Initialize first step...\n            if (this._testIndex <= 0)\n            {\n                cachedStates = [];\n                cachedSymbols = [];\n\n                const startState = machine.getStartState();\n                for (const currentState of machine.doClosureTransition(startState))\n                {\n                    cachedStates.push({state: currentState, index: 0});\n                }\n            }\n            else\n            {\n                const prevCache = this._cachePath[this._testIndex - 1];\n                cachedStates = prevCache.states.slice();\n                cachedSymbols = prevCache.symbols.slice();\n\n                //Do the remaining steps...\n                const nextSymbol = this._testString[this._testIndex - 1];\n                solveFSAByStep(machine, nextSymbol, cachedStates, cachedSymbols);\n            }\n\n            //Do one last step for result...\n            if (isResult)\n            {\n                this._cachedResult = solveFSAByStep(machine, null, cachedStates, cachedSymbols);\n            }\n\n            //Store current step...\n            const targets = new Set();\n            for(const cachedState of cachedStates)\n            {\n                const node = cachedState.state.getSource();\n\n                //Couldn't find the node that was solved for this step...\n                if (!node) throw new Error('Could not find node \\'' + cachedState.state + '\\'');\n\n                targets.add(node);\n            }\n            const nextCache = {\n                targets: Array.from(targets),\n                states: cachedStates,\n                symbols: cachedSymbols\n            };\n            this._cachePath.push(nextCache);\n        }\n        else\n        {\n            //Go forward a previously calculated step...by doing nothing...\n        }\n\n        this.emit('stepTest');\n        return true;\n    }\n\n    stepBackward(graphController, machineController)\n    {\n        if (this._testIndex <= 0) return false;\n        --this._testIndex;\n\n        //Go back a step...by doing nothing...\n        this.emit('stepTest');\n        return true;\n    }\n\n    isTesting()\n    {\n        return this._testString !== null;\n    }\n\n    changePosition(position)\n    {\n        if (position >= this._cachePath.length)\n        {\n            this._testIndex = this._cachePath.length - 1;\n        }\n        else\n        {\n            if (position < 0)\n            {\n                this._testIndex = 0;\n            }\n            else if (position >= this._testString.length)\n            {\n                this._testIndex = this._testString.length - 1;\n            }\n            else\n            {\n                this._testIndex = position;\n            }\n        }\n    }\n\n    resetPosition()\n    {\n        this._testIndex = -1;\n    }\n\n    getPosition()\n    {\n        return this._testIndex;\n    }\n\n    isComputedPosition(position)\n    {\n        return this._cachePath.length > position;\n    }\n\n    getCurrentNodes()\n    {\n        if (this._testIndex >= 0 && this._testIndex < this._cachePath.length)\n        {\n            return this._cachePath[this._testIndex];\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    getNodesAtPosition(position)\n    {\n        if (position >= 0 && position < this._cachePath.length)\n        {\n            return this._cachePath[position].targets;\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    getTestString()\n    {\n        return this._testString;\n    }\n\n    getTapeContext()\n    {\n        return this._tapeContext;\n    }\n}\nEventable.mixin(StringTester);\n\nexport default StringTester;\n","import {SUCCESS_LAYOUT_ID} from 'session/manager/notification/NotificationManager.js';\nimport {\n    MACHINE_ERROR_NOTIFICATION_TAG,\n    STATE_LAYOUT_ID,\n    TRANSITION_LAYOUT_ID,\n    STATE_UNREACHABLE_LAYOUT_ID,\n    STATE_MISSING_LAYOUT_ID\n} from './components/notifications/FSANotifications.js';\n\nimport {\n    ERROR_UNREACHABLE_STATE,\n    ERROR_DUPLICATE_STATE,\n    ERROR_INCOMPLETE_TRANSITION,\n    ERROR_DUPLICATE_TRANSITION,\n    ERROR_MISSING_TRANSITION,\n    ERROR_EMPTY_TRANSITION\n} from './machine/FSABuilder.js';\n\nclass FSAErrorChecker\n{\n    constructor(app, graphController, machineController)\n    {\n        this._app = app;\n        this._graphController = graphController;\n        this._machineController = machineController;\n        this._showErrorOnChange = false;\n\n        this.onMachineChange = this.onMachineChange.bind(this);\n\n        machineController.getMachineBuilder().getMachineChangeHandler().addListener(this.onMachineChange);\n    }\n\n    onMachineChange(machineBuilder)\n    {\n        if (this._showErrorOnChange)\n        {\n            this.showErrors();\n        }\n    }\n\n    setErrorChecking(enabled)\n    {\n        this._showErrorOnChange = enabled;\n    }\n\n    isErrorChecking()\n    {\n        return this._showErrorOnChange;\n    }\n\n    showErrors()\n    {\n        const props = {graphController: this._graphController, machineController: this._machineController};\n        const machineBuilder = this._machineController.getMachineBuilder();\n        const errors = machineBuilder.getMachineErrors();\n        const warnings = machineBuilder.getMachineWarnings();\n        const app = this._app;\n        const notificationManager = app.getNotificationManager();\n\n        notificationManager.clearNotifications(MACHINE_ERROR_NOTIFICATION_TAG);\n        if (errors.length <= 0 && warnings.length <= 0)\n        {\n            notificationManager.pushNotification(\n                I18N.toString('message.error.none'),\n                SUCCESS_LAYOUT_ID, MACHINE_ERROR_NOTIFICATION_TAG, null, false);\n        }\n        else\n        {\n            for(const warning of warnings)\n            {\n                switch(warning.name)\n                {\n                case ERROR_UNREACHABLE_STATE:\n                    notificationManager.pushNotification(warning.nodes,\n                        STATE_UNREACHABLE_LAYOUT_ID, MACHINE_ERROR_NOTIFICATION_TAG, props, false);\n                    break;\n                }\n            }\n\n            for(const error of errors)\n            {\n                switch(error.name)\n                {\n                case ERROR_DUPLICATE_STATE:\n                    notificationManager.pushNotification({\n                        text: 'Found duplicate nodes of similar names',\n                        targets: error.nodes\n                    }, STATE_LAYOUT_ID, MACHINE_ERROR_NOTIFICATION_TAG, props, false);\n                    break;\n                case ERROR_INCOMPLETE_TRANSITION:\n                    notificationManager.pushNotification({\n                        text: I18N.toString('message.error.incomplete'),\n                        targets: error.edges\n                    }, TRANSITION_LAYOUT_ID, MACHINE_ERROR_NOTIFICATION_TAG, props, false);\n                    break;\n                case ERROR_DUPLICATE_TRANSITION:\n                    notificationManager.pushNotification({\n                        text: I18N.toString('message.error.dupe'),\n                        targets: error.edges\n                    }, TRANSITION_LAYOUT_ID, MACHINE_ERROR_NOTIFICATION_TAG, props, false);\n                    break;\n                case ERROR_MISSING_TRANSITION:\n                    notificationManager.pushNotification({\n                        targets: [error.node],\n                        symbol: error.symbols\n                    }, STATE_MISSING_LAYOUT_ID, MACHINE_ERROR_NOTIFICATION_TAG, props, false);\n                    break;\n                case ERROR_EMPTY_TRANSITION:\n                    notificationManager.pushNotification({\n                        text: I18N.toString('message.error.empty'),\n                        targets: error.edges\n                    }, TRANSITION_LAYOUT_ID, MACHINE_ERROR_NOTIFICATION_TAG, props, false);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nexport default FSAErrorChecker;\n","import React from 'react';\nimport Style from 'experimental/viewport/ViewportView.css';\n\nimport ModeSelectTray from 'experimental/widgets/ModeSelectTray.js';\nimport TrashCanWidget from 'experimental/widgets/TrashCanWidget.js';\nimport NavbarWidget from 'experimental/widgets/NavbarWidget.js';\n\nclass EditPane extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    render()\n    {\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const app = session.getApp();\n\n        // const viewport = this.props.viewport;\n        const inputController = currentModule.getInputController();\n        const graphController = currentModule.getGraphController();\n        const inputActionMode = inputController.isActionMode();\n\n        return (\n            <div id={this.props.id}\n                className={Style.view_pane +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <NavbarWidget className={Style.view_widget} style={{right: 0}}\n                    viewportAdapter={app.getInputAdapter().getViewportAdapter()}/>\n                <div className={Style.view_widget} style={{bottom: 0, left: 0}}>\n                    <ModeSelectTray mode={inputActionMode ? 0 : 1} onChange={modeIndex => inputController.setInputScheme(modeIndex === 0)}/>\n                </div>\n                <div className={Style.view_widget} style={{bottom: 0, right: 0}}>\n                    <TrashCanWidget app={app} inputController={inputController} graphController={graphController}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default EditPane;\n","import React from 'react';\nimport Style from 'experimental/viewport/ViewportView.css';\n\nimport TapeWidget from 'experimental/widgets/TapeWidget.js';\nimport NavbarWidget from 'experimental/widgets/NavbarWidget.js';\n\nclass TapePane extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    componentDidMount()\n    {\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const inputController = currentModule.getInputController();\n\n        inputController.setDisabled(true);\n    }\n\n    /** @override */\n    componentWillUnmount()\n    {\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const inputController = currentModule.getInputController();\n\n        inputController.setDisabled(false);\n    }\n\n    /** @override */\n    render()\n    {\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const app = session.getApp();\n\n        const tester = currentModule._tester;\n\n        return (\n            <div id={this.props.id}\n                className={Style.view_pane +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <NavbarWidget className={Style.view_widget} style={{right: 0}}\n                    viewportAdapter={app.getInputAdapter().getViewportAdapter()}/>\n                <div className={Style.view_widget} style={{bottom: 0}}>\n                    <TapeWidget value={tester ? tester.getTapeContext() : null}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TapePane;\n","class StepTracer\n{\n    constructor(graphController, machineController)\n    {\n        this._graphController = graphController;\n        this._machineController = machineController;\n\n        this._currentSymbols = [];\n        this._currentNode = null;\n        this._nextEdges = [];\n        this._prevEdges = [];\n\n        this._expectedString = null;\n    }\n\n    setExpectedString(string)\n    {\n        this._expectedString = string;\n    }\n\n    updateNextEdges()\n    {\n        const graph = this._graphController.getGraph();\n        const node = this._currentNode;\n        this._nextEdges.length = 0;\n        for(const edge of graph.getEdges())\n        {\n            if (edge.getEdgeFrom() === node)\n            {\n                this._nextEdges.push(edge);\n            }\n        }\n    }\n\n    nextEdge(edge)\n    {\n        if (!this._nextEdges.includes(edge)) throw new Error('Must use edge from this._nextEdges');\n        if (this._nextEdges.length <= 0) return;\n\n        this._prevEdges.push(edge);\n        const symbols = edge.getEdgeSymbolsFromLabel();\n        //FIXME: there needs to be a way to select which symbols you want to use\n        this._currentSymbols.push(symbols[0]);\n        this._currentNode = edge.getEdgeTo();\n        this.updateNextEdges();\n    }\n\n    prevEdge()\n    {\n        if (this._prevEdges.length <= 0) return;\n\n        const edge = this._prevEdges.pop();\n        this._currentNode = edge.getEdgeFrom();\n        this.updateNextEdges();\n    }\n\n    getPrevEdges()\n    {\n        return this._prevEdges;\n    }\n\n    getNextEdges()\n    {\n        return this._nextEdges;\n    }\n\n    getExpectedString()\n    {\n        return this._expectedString;\n    }\n\n    getCurrentSymbols()\n    {\n        return this._currentSymbols;\n    }\n\n    getCurrentNode()\n    {\n        return this._currentNode;\n    }\n\n    getCurrentString()\n    {\n        return this._currentSymbols.join('');\n    }\n\n    isAcceptedString()\n    {\n        if (this._expectedString)\n        {\n            return this._expectedString === this._currentSymbols.join('');\n        }\n        else\n        {\n            return this._currentNode !== null && this._currentNode.getNodeAccept();\n        }\n    }\n}\n\nexport default StepTracer;\n","import React from 'react';\nimport Style from 'experimental/viewport/ViewportView.css';\n\nimport NavbarWidget from 'experimental/widgets/NavbarWidget.js';\n\nclass StepTracerView extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    /** @override */\n    componentDidMount()\n    {\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const inputController = currentModule.getInputController();\n\n        inputController.setDisabled(true);\n    }\n\n    /** @override */\n    componentWillUnmount()\n    {\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const inputController = currentModule.getInputController();\n\n        inputController.setDisabled(false);\n    }\n\n    /** @override */\n    render()\n    {\n        const session = this.props.session;\n        const currentModule = session.getCurrentModule();\n        const app = session.getApp();\n\n        const viewport = this.props.viewport;\n        const stepTracer = currentModule._stepTracer;\n\n        return (\n            <div id={this.props.id}\n                className={Style.view_pane +\n          ' ' + this.props.className}\n                style={this.props.style}>\n                <NavbarWidget className={Style.view_widget} style={{right: 0}}\n                    viewportAdapter={app.getInputAdapter().getViewportAdapter()}/>\n                <div className={Style.view_widget} style={{bottom: 0}}>\n                    {stepTracer.getCurrentSymbols().join('')}\n                    <button>Next</button>\n                    <button onClick={e => {viewport.setCurrentView(0);}}>Back</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default StepTracerView;\n","class MessageHandler\n{\n    constructor()\n    {\n        this._broadcastManager = null;\n    }\n\n    setBroadcastManager(broadcastManager)\n    {\n        this._broadcastManager = broadcastManager;\n        return this;\n    }\n\n    onBroadcastMessage(type, src, dst, message)\n    {\n        return false;\n    }\n\n    getBroadcastManager() { return this._broadcastManager; }\n}\n\nexport default MessageHandler;\n","import BroadcastHandler from 'session/manager/broadcast/BroadcastHandler.js';\n\nimport { JSON as JSONGraphParser } from 'modules/fsa/graph/FSAGraphParser.js';\nimport FSA from 'modules/fsa2/machine/FSA.js';\nimport {isEquivalentFSA} from 'modules/fsa2/machine/FSAUtils.js';\n\nconst MACHINE_REQUEST_MESSAGE_TYPE = 'fsa-machine-request';\nconst MACHINE_RESPONSE_MESSAGE_TYPE = 'fsa-machine-response';\n\nclass FSABroadcastHandler extends BroadcastHandler\n{\n    constructor()\n    {\n        super();\n    }\n\n    testEquivalence(targetSessionID)\n    {\n        this._broadcastManager.sendMessageTo(targetSessionID, MACHINE_REQUEST_MESSAGE_TYPE);\n    }\n\n    /** @override */\n    onBroadcastMessage(type, src, dst, message)\n    {\n        if (type === MACHINE_REQUEST_MESSAGE_TYPE)\n        {\n            const graph = this._broadcastManager.getApp().getSession()\n                .getCurrentModule()\n                .getGraphController()\n                .getGraph();\n            const graphData = JSONGraphParser.objectify(graph);\n            this._broadcastManager.sendMessageTo(src, MACHINE_RESPONSE_MESSAGE_TYPE, {\n                graphData: graphData\n            });\n            return true;\n        }\n        else if (type === MACHINE_RESPONSE_MESSAGE_TYPE)\n        {\n            const machineController = this._broadcastManager.getApp().getSession()\n                .getCurrentModule()\n                .getMachineController();\n            const graphData = message['graphData'];\n            const graph = JSONGraphParser.parse(graphData);\n            const machine = machineController\n                .getMachineBuilder()\n                .attemptBuild(graph, new FSA());\n            const currentMachine = machineController.getMachineBuilder().getMachine();\n            const result = isEquivalentFSA(machine, currentMachine);\n\n            window.alert('The machines are ' + (result ? 'EQUAL' : 'NOT EQUAL') + '!');\n            return true;\n        }\n\n        return false;\n    }\n}\n\nexport default FSABroadcastHandler;\n","import SessionImporter from 'session/SessionImporter.js';\n\n/**\n * Sets all of the details pertaining to the module (and the machine)\n *\n * @param  {GraphController} graphController        the controller for the graph to be constructed\n * @param  {MachineController} machineController    the controller for the machine to be constructed\n * @param  {Object} machineData                     the machine data to be parsed\n */\nfunction loadMachineFromData(graphController, machineController, machineData)\n{\n    const machineType = machineData.type;\n    if (machineType) machineController.setMachineType(machineType);\n    const customSymbols = machineData.symbols;\n    if (customSymbols && Array.isArray(customSymbols))\n    {\n        machineController.clearCustomSymbols();\n        for(const symbol of customSymbols)\n        {\n            machineController.addCustomSymbol(symbol);\n        }\n    }\n    const statePrefix = machineData.statePrefix;\n    if (statePrefix)\n    {\n        graphController.getGraphLabeler().setDefaultNodeLabelPrefix(statePrefix);\n    }\n}\n\nclass FSAImporter extends SessionImporter\n{\n    constructor(app, jsonGraphParser)\n    {\n        super(app);\n\n        this._graphParser = jsonGraphParser;\n        this._prevGraphHash = 0;\n    }\n\n    /** @override */\n    onParseSession(session, fileData)\n    {\n        return JSON.parse(fileData);\n    }\n\n    /** @override */\n    onPreImportSession(session)\n    {\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        const graph = graphController.getGraph();\n        this._prevGraphHash = graph.getHashCode(true);\n\n        // TODO: this should not be here, this should exist somewhere in graphController\n        if (!graph.isEmpty())\n        {\n            session.getApp().getUndoManager().captureEvent();\n        }\n    }\n\n    /** @override */\n    onImportSession(session, sessionData)\n    {\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        const machineController = currentModule.getMachineController();\n        const graph = graphController.getGraph();\n\n        this._graphParser.parse(sessionData['graphData'], graph);\n\n        loadMachineFromData(currentModule, graphController, machineController, sessionData['machineData']);\n    }\n\n    /** @override */\n    onPostImportSession(session)\n    {\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        const graph = graphController.getGraph();\n\n        // Compares the graph hash before and after import, captures event if they are not equal\n        const nextGraphHash = graph.getHashCode(true);\n        if (this._prevGraphHash !== nextGraphHash)\n        {\n            // TODO: this should not be here\n            session.getApp().getUndoManager().captureEvent();\n        }\n    }\n}\n\nexport default FSAImporter;\n","import SessionImporter from 'session/SessionImporter.js';\n\nclass FSAJFFImporter extends SessionImporter\n{\n    constructor(app, jffGraphParser)\n    {\n        super();\n\n        this._app = app;\n        this._graphParser = jffGraphParser;\n    }\n\n    /** @override */\n    onParseSession(session, fileData)\n    {\n        return new DOMParser().parseFromString(fileData, 'text/xml');\n    }\n\n    /** @override */\n    onPreImportSession(session)\n    {\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        const graph = graphController.getGraph();\n        this._prevGraphHash = graph.getHashCode(true);\n\n        // TODO: this should not be here, this should exist somewhere in graphController\n        if (!graph.isEmpty())\n        {\n            session.getApp().getUndoManager().captureEvent();\n        }\n    }\n\n    /** @override */\n    onImportSession(session, sessionData)\n    {\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        const graph = graphController.getGraph();\n\n        this._graphParser.parse(sessionData, graph);\n    }\n\n    /** @override */\n    onPostImportSession(session)\n    {\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        const graph = graphController.getGraph();\n\n        // Compares the graph hash before and after import, captures event if they are not equal\n        const nextGraphHash = graph.getHashCode(true);\n        if (this._prevGraphHash !== nextGraphHash)\n        {\n            // TODO: this should not be here\n            session.getApp().getUndoManager().captureEvent();\n        }\n    }\n}\n\nexport default FSAJFFImporter;\n","import SessionExporter from 'session/SessionExporter.js';\n\nimport JSONFileIcon from 'components/iconset/flat/JSONFileIcon.js';\n\nclass FSAExporter extends SessionExporter\n{\n    constructor(jsonGraphParser)\n    {\n        super('.fsa.json');\n        this._graphParser = jsonGraphParser;\n    }\n\n    /** @override */\n    onExportSession(session, dst)\n    {\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        const machineController = currentModule.getMachineController();\n        const graph = graphController.getGraph();\n        const graphData = this._graphParser.objectify(graph);\n\n        dst['graphData'] = graphData;\n        dst['machineData'] = {\n            type: machineController.getMachineType(),\n            symbols: machineController.getCustomSymbols(),\n            statePrefix: graphController.getGraphLabeler().getDefaultNodeLabelPrefix()\n        };\n    }\n\n    /** @override */\n    getIconClass() { return JSONFileIcon; }\n    /** @override */\n    getLabel() { return I18N.toString('file.export.machine'); }\n    /** @override */\n    getTitle() { return I18N.toString('file.export.machine.hint'); }\n}\n\nexport default FSAExporter;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n    constructor(props) { super(props); }\n\n    /** @override */\n    render()\n    {\n        return (\n            <svg id={this.props.id} className={this.props.className} style={this.props.style}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\" height=\"24\" viewBox=\"0 0 56 56\">\n                <path fill=\"#E9E9E0\" d=\"M36.985,0H7.963C7.155,0,6.5,0.655,6.5,1.926V55c0,0.345,0.655,1,1.463,1h40.074 c0.808,0,1.463-0.655,1.463-1V12.978c0-0.696-0.093-0.92-0.257-1.085L37.607,0.257C37.442,0.093,37.218,0,36.985,0z\"/>\n                <polygon fill=\"#D9D7CA\" points=\"37.5,0.151 37.5,12 49.349,12 \t\"/>\n                <path fill=\"#F29C1F\" d=\"M48.037,56H7.963C7.155,56,6.5,55.345,6.5,54.537V39h43v15.537C49.5,55.345,48.845,56,48.037,56z\"/>\n                <path fill=\"#FFFFFF\" d=\"M19.379,48.105L21.936,53h-1.9l-1.6-3.801h-0.137L16.576,53h-1.9l2.557-4.895l-2.721-5.182h1.873 l1.777,4.102h0.137l1.928-4.102H22.1L19.379,48.105z\"/>\n                <path fill=\"#FFFFFF\" d=\"M31.998,42.924h1.668V53h-1.668v-6.932l-2.256,5.605h-1.449l-2.27-5.605V53h-1.668V42.924h1.668 l2.994,6.891L31.998,42.924z\"/>\n                <path fill=\"#FFFFFF\" d=\"M37.863,42.924v8.832h4.635V53h-6.303V42.924H37.863z\"/>\n                <path fill=\"#F29C1F\" d=\"M15.5,24c-0.256,0-0.512-0.098-0.707-0.293c-0.391-0.391-0.391-1.023,0-1.414l6-6 c0.391-0.391,1.023-0.391,1.414,0s0.391,1.023,0,1.414l-6,6C16.012,23.902,15.756,24,15.5,24z\"/>\n                <path fill=\"#F29C1F\" d=\"M21.5,30c-0.256,0-0.512-0.098-0.707-0.293l-6-6c-0.391-0.391-0.391-1.023,0-1.414 s1.023-0.391,1.414,0l6,6c0.391,0.391,0.391,1.023,0,1.414C22.012,29.902,21.756,30,21.5,30z\"/>\n                <path fill=\"#F29C1F\" d=\"M33.5,30c-0.256,0-0.512-0.098-0.707-0.293c-0.391-0.391-0.391-1.023,0-1.414l6-6 c0.391-0.391,1.023-0.391,1.414,0s0.391,1.023,0,1.414l-6,6C34.012,29.902,33.756,30,33.5,30z\"/>\n                <path fill=\"#F29C1F\" d=\"M39.5,24c-0.256,0-0.512-0.098-0.707-0.293l-6-6c-0.391-0.391-0.391-1.023,0-1.414 s1.023-0.391,1.414,0l6,6c0.391,0.391,0.391,1.023,0,1.414C40.012,23.902,39.756,24,39.5,24z\"/>\n                <path fill=\"#F29C1F\" d=\"M24.5,32c-0.11,0-0.223-0.019-0.333-0.058c-0.521-0.184-0.794-0.755-0.61-1.276l6-17 c0.185-0.521,0.753-0.795,1.276-0.61c0.521,0.184,0.794,0.755,0.61,1.276l-6,17C25.298,31.744,24.912,32,24.5,32z\"/>\n            </svg>\n        );\n    }\n}\nexport default Icon;\n","import SessionExporter from 'session/SessionExporter.js';\n\nimport XMLFileIcon from 'components/iconset/flat/XMLFileIcon.js';\n\nclass FSAJFFExporter extends SessionExporter\n{\n    constructor(jffGraphParser)\n    {\n        super('.jff');\n        this._graphParser = jffGraphParser;\n    }\n\n    /** @override */\n    onExportSession(session, dst)\n    {\n        const currentModule = session.getCurrentModule();\n        const graphController = currentModule.getGraphController();\n        const graph = graphController.getGraph();\n        dst['graphData'] = this._graphParser.objectify(graph);\n    }\n\n    /** @override */\n    onStringifySession(session, dst)\n    {\n        return new XMLSerializer().serializeToString(dst.graphData);\n    }\n\n    /** @override */\n    getIconClass() { return XMLFileIcon; }\n    /** @override */\n    getLabel() { return I18N.toString('file.export.jff'); }\n    /** @override */\n    getTitle() { return I18N.toString('file.export.jff.hint'); }\n}\n\nexport default FSAJFFExporter;\n","import React from 'react';\nimport PanelContainer from 'experimental/panels/PanelContainer.js';\n\nimport NodalGraphInputManager from 'modules/nodalgraph/manager/NodalGraphInputManager.js';\nimport ViewportComponent from 'util/input/components/ViewportComponent.js';\nimport MachineController from './controller/MachineController.js';\n\nimport FSAGraph from 'modules/fsa/graph/FSAGraph.js';\nimport FSAGraphLabeler from 'modules/fsa/graph/FSAGraphLabeler.js';\nimport * as FSAGraphParser from 'modules/fsa/graph/FSAGraphParser.js';\n\nimport FSAGraphRenderer from './renderer/FSAGraphRenderer.js';\nimport FSALabelEditorRenderer from './renderer/FSALabelEditorRenderer.js';\nimport GraphInputRenderer from 'modules/nodalgraph/controller/renderer/GraphInputRenderer.js';\n\nimport OverviewPanel from './components/panels/overview/OverviewPanel.js';\nimport TestingPanel from './components/panels/testing/TestingPanel.js';\nimport AnalysisPanel from './components/panels/analysis/AnalysisPanel.js';\n\nimport StringTester from './tester/StringTester.js';\nimport FSAErrorChecker from './FSAErrorChecker.js';\n\nimport EditPane from './components/views/EditPane.js';\nimport TapePane from './components/views/TapePane.js';\nimport { CTRL_KEY, SHIFT_KEY } from 'session/manager/hotkey/HotKeyManager.js';\nimport { RENDER_LAYER_WORKSPACE } from 'session/manager/RenderManager.js';\n\nimport SafeGraphEventHandler from 'modules/nodalgraph/SafeGraphEventHandler.js';\n\nimport { registerNotifications } from './components/notifications/FSANotifications.js';\n\nimport GraphNodeInputHandler from 'modules/nodalgraph/controller/inputhandler/GraphNodeInputHandler.js';\nimport GraphInitialInputHandler from 'modules/nodalgraph/controller/inputhandler/GraphInitialInputHandler.js';\nimport GraphEdgeInputHandler from 'modules/nodalgraph/controller/inputhandler/GraphEdgeInputHandler.js';\nimport GraphEndpointInputHandler from 'modules/nodalgraph/controller/inputhandler/GraphEndpointInputHandler.js';\nimport GraphNodeCreateInputHandler from 'modules/nodalgraph/controller/inputhandler/GraphNodeCreateInputHandler.js';\nimport GraphNodeAcceptInputHandler from 'modules/nodalgraph/controller/inputhandler/GraphNodeAcceptInputHandler.js';\n\nimport GraphNodePickHandler from 'modules/nodalgraph/controller/pickhandler/GraphNodePickHandler.js';\nimport GraphEdgePickHandler from 'modules/nodalgraph/controller/pickhandler/GraphEdgePickHandler.js';\nimport GraphEndpointPickHandler from 'modules/nodalgraph/controller/pickhandler/GraphEndpointPickHandler.js';\nimport GraphInitialPickHandler from 'modules/nodalgraph/controller/pickhandler/GraphInitialPickHandler.js';\n\nimport * as UserUtil from 'experimental/UserUtil.js';\n\nimport StepTracer from './steptracer/StepTracer.js';\nimport StepTracerView from './steptracer/StepTracerView.js';\n\nimport FSABroadcastHandler from './FSABroadcastHandler.js';\n\nimport FSAImporter from './filehandlers/FSAImporter.js';\nimport FSAJFFImporter from './filehandlers/FSAJFFImporter.js';\nimport FSAExporter from './filehandlers/FSAExporter.js';\nimport FSAJFFExporter from './filehandlers/FSAJFFExporter.js';\nimport { registerImageExporters } from 'modules/nodalgraph/filehandlers/NodalGraphImageExporter.js';\n\nconst MODULE_NAME = 'fsa2';\nconst MODULE_VERSION = '0.0.1';\n\nclass FSAModule\n{\n    constructor(app)\n    {\n        this._app = app;\n\n        this._inputManager = new NodalGraphInputManager(this,\n            new FSAGraph(),\n            new FSAGraphLabeler(),\n            FSAGraphParser,\n            FSALabelEditorRenderer);\n\n        app.getRenderManager()\n            .addRenderer(RENDER_LAYER_WORKSPACE, props => (\n                <ViewportComponent ref={ref => app._workspace.current = ref}>\n                    <FSAGraphRenderer currentModule={this} parent={props.workspace} />\n                    {this._inputManager.getInputController() && <GraphInputRenderer currentModule={this} />}\n                </ViewportComponent>\n            ));\n\n        this._machineController = new MachineController(this);\n\n        this._errorChecker = new FSAErrorChecker(app,\n            this._inputManager.getGraphController(),\n            this._machineController);\n        this._tester = new StringTester();\n        this._stepTracer = new StepTracer(this.getGraphController(), this.getMachineController());\n\n        this._broadcastHandler = new FSABroadcastHandler();\n    }\n\n    /** @override */\n    initialize(app)\n    {\n        this._inputManager.onSessionStart(app.getSession());\n\n        this._inputManager.getInputController().getPicker()\n            .addPickHandler(this._initialPickHandler = new GraphInitialPickHandler())\n            .addPickHandler(this._endpointPickHandler = new GraphEndpointPickHandler())\n            .addPickHandler(this._nodePickHandler = new GraphNodePickHandler())\n            .addPickHandler(this._edgePickHandler = new GraphEdgePickHandler());\n        this._inputManager.getInputController()\n            .addInputHandler(this._nodeInputHandler = new GraphNodeInputHandler())\n            .addInputHandler(this._edgeInputHandler = new GraphEdgeInputHandler())\n            .addInputHandler(this._endpointInputHandler = new GraphEndpointInputHandler())\n            .addInputHandler(this._initialInputHandler = new GraphInitialInputHandler())\n            .addInputHandler(this._createInputHandler = new GraphNodeCreateInputHandler())\n            .addInputHandler(this._acceptInputHandler = new GraphNodeAcceptInputHandler());\n\n        registerNotifications(app.getNotificationManager());\n\n        //TODO: These should have a pre/post handlers...\n        app.getExportManager()\n            .registerExporter(new FSAExporter(FSAGraphParser.JSON), 'session')\n            .registerExporter(new FSAJFFExporter(FSAGraphParser.XML), 'jflap');\n\n        registerImageExporters(app.getExportManager());\n        \n        app.getImportManager()\n            .addImporter(new FSAImporter(app, FSAGraphParser.JSON), '.fsa.json', '.json')\n            .addImporter(new FSAJFFImporter(app, FSAGraphParser.XML), '.jff');\n\n        app.getViewportManager()\n            .addViewClass(EditPane)\n            .addViewClass(TapePane)\n            .addViewClass(StepTracerView);\n\n        app.getDrawerManager()\n            .addPanelClass(props => (\n                <PanelContainer id={props.id}\n                    className={props.className}\n                    style={props.style}\n                    title={'Finite State Automata'}>\n                    <p>{'Brought to you with \\u2764 by the Flap.js team.'}</p>\n                    <p>{'<- Tap on a tab to begin!'}</p>\n                </PanelContainer>\n            ))\n            .addPanelClass(OverviewPanel)\n            .addPanelClass(TestingPanel)\n            .addPanelClass(AnalysisPanel);\n\n        app.getHotKeyManager()\n            .registerHotKey('Export to PNG', [CTRL_KEY, 'KeyP'], () => { app.getExportManager().tryExportFile('image-png', app.getSession()); })\n            .registerHotKey('Save as JSON', [CTRL_KEY, 'KeyS'], () => { app.getExportManager().tryExportFile('session', app.getSession()); })\n            .registerHotKey('New', [CTRL_KEY, 'KeyN'], () => { this.clear(app); })\n            .registerHotKey('Undo', [CTRL_KEY, 'KeyZ'], () => { app.getUndoManager().undo(); })\n            .registerHotKey('Redo', [CTRL_KEY, SHIFT_KEY, 'KeyZ'], () => { app.getUndoManager().redo(); });\n\n        app.getUndoManager()\n            .setEventHandlerFactory((...args) =>\n            {\n                return new SafeGraphEventHandler(this._inputManager.getGraphController(), this._inputManager.getGraphParser());\n            });\n\n        app.getTooltipManager()\n            .addTooltip(I18N.toString('message.workspace.empty'))\n            .addTooltip('If you need help, try the \\'?\\' at the top.')\n            .addTooltip('Or you can choose to do nothing.')\n            .addTooltip('I can\\'t do anything about that.')\n            .addTooltip('You really should consider doing something though, for the sake of both of us.')\n            .addTooltip('Of course, it is your free will.')\n            .addTooltip('You do you.')\n            .addTooltip('Please do something.')\n            .addTooltip('I need my job.')\n            .addTooltip(I18N.toString('message.workspace.empty'));\n\n        app.getBroadcastManager()\n            .addMessageHandler(this._broadcastHandler);\n\n        const machineController = this.getMachineController();\n        machineController.initialize(this);\n    }\n\n    /** @override */\n    update(app)\n    {\n        this._inputManager.update(this);\n\n        const machineController = this.getMachineController();\n        machineController.update(this);\n    }\n\n    /** @override */\n    destroy(app)\n    {\n        this._inputManager.onSessionStop(app.getSession());\n\n        const machineController = this.getMachineController();\n        machineController.destroy(this);\n    }\n\n    /** @override */\n    clear(app, graphOnly = false)\n    {\n        UserUtil.userClearGraph(app, graphOnly, () => app.getToolbarComponent().closeBar());\n    }\n\n    getInputManager() { return this._inputManager; }\n\n    getInputController() { return this._inputManager.getInputController(); }\n    getMachineController() { return this._machineController; }\n    getGraphController() { return this._inputManager.getGraphController(); }\n\n    getErrorChecker() { return this._errorChecker; }\n    getStringTester() { return this._tester; }\n    getStepTracer() { return this._stepTracer; }\n    getBroadcastHandler() { return this._broadcastHandler; }\n\n    /** @override */\n    getModuleVersion() { return MODULE_VERSION; }\n    /** @override */\n    getModuleName() { return MODULE_NAME; }\n    /** @override */\n    getLocalizedModuleName() { return this._machineController.getMachineType(); }\n    getApp() { return this._app; }\n}\n\nexport default FSAModule;\n"],"sourceRoot":""}