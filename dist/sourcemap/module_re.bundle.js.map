{"version":3,"sources":["webpack:///./src/app/modules/re/machine/RE.js","webpack:///./src/app/modules/re/machine/REParser.js","webpack:///./src/app/modules/re/machine/util/ConvertRE.js","webpack:///./src/app/modules/re/ExpressionChangeHandler.js","webpack:///./src/app/modules/re/MachineController.js","webpack:///./src/app/modules/re/exporter/REGraphExporter.js","webpack:///./src/app/modules/re/exporter/REtoFSAGraphExporter.js","webpack:///./src/app/modules/re/REErrorChecker.js","webpack:///./src/app/modules/re/components/notifications/RENotifications.js","webpack:///./src/app/modules/re/SafeExpressionEventHandler.js","webpack:///./src/app/modules/re/components/panels/overview/alphabet/AlphabetListElement.js","webpack:///./src/app/modules/re/components/panels/overview/alphabet/AlphabetListView.js","webpack:///./src/app/modules/re/components/panels/overview/OverviewPanel.js","webpack:///./src/app/modules/re/components/panels/analysis/AnalysisPanel.js","webpack:///./src/app/modules/re/components/panels/testing/TestItem.js","webpack:///./src/app/modules/re/components/panels/testing/TestListView.js","webpack:///./src/app/modules/re/components/panels/testing/TestingPanel.js","webpack:///./src/app/modules/re/components/views/ExpressionView.js","webpack:///./src/app/modules/re/REModule.js","webpack:///./src/app/experimental/components/IconButton.js","webpack:///./src/app/experimental/panels/PanelContainer.js","webpack:///./src/app/session/manager/notification/components/DefaultNotificationLayout.js","webpack:///./src/app/modules/fsa2/machine/FSA.js","webpack:///./src/app/session/manager/export/AbstractGraphExporter.js","webpack:///./src/app/experimental/iconset/TinyDownIcon.js","webpack:///./src/app/experimental/iconset/TinyUpIcon.js","webpack:///./src/app/experimental/panels/PanelSection.js","webpack:///./src/app/session/manager/notification/Notification.js","webpack:///./src/app/session/manager/notification/NotificationManager.js","webpack:///./src/app/experimental/panels/PanelSwitch.js","webpack:///./src/app/experimental/iconset/UploadIcon.js","webpack:///./src/app/experimental/iconset/flat/JSONFileIcon.js","webpack:///./src/app/experimental/iconset/BoxAddIcon.js","webpack:///./src/app/experimental/iconset/RunningManIcon.js","webpack:///./src/app/experimental/components/IconUploadButton.js","webpack:///./src/app/experimental/iconset/DownloadIcon.js","webpack:///./src/app/session/manager/hotkey/HotKeyManager.js","webpack:///./src/app/session/manager/undo/AbstractEventHandler.js","webpack:///./src/app/experimental/panels/PanelDivider.js","webpack:///./src/app/experimental/iconset/PageContentIcon.js","webpack:///./src/app/experimental/iconset/CrossIcon.js","webpack:///./src/app/experimental/iconset/AddIcon.js","webpack:///./src/app/experimental/iconset/SubtractIcon.js","webpack:///./src/app/experimental/iconset/CheckCircleIcon.js","webpack:///./src/app/experimental/iconset/CrossCircleIcon.js","webpack:///./src/app/experimental/iconset/PendingIcon.js","webpack:///./src/app/experimental/panels/PanelCheckbox.js","webpack:///./src/app/modules/fsa2/machine/util/ConvertFSA.js","webpack:///./src/app/modules/fsa2/machine/util/SolveFSA.js","webpack:///./src/app/modules/fsa2/machine/util/InvertDFA.js","webpack:///./src/app/modules/fsa2/machine/FSAUtils.js","webpack:///./src/app/modules/fsa2/machine/FSABuilder.js","webpack:///./src/app/modules/fsa2/controller/MachineController.js","webpack:///./src/app/modules/fsa2/exporter/FSAGraphExporter.js"],"names":["EMPTY","CONCAT","UNION","KLEENE","SIGMA","EMPTY_SET","PLUS","RE","expression","arguments","length","undefined","_classCallCheck","this","_expression","_terminals","Set","_errors","re","clear","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","terminal","value","add","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","error","push","isExpressionValid","e","x","has","count","getExpression","i","charAt","areParenthesisBalanced","Error","currChar","prevChar","result","nextChar","setExpression","stringHash","ASTNode","symbol","isTerminal","parentNode","index","REParser_classCallCheck","_symbol","_isTerminal","_parent","_children","_index","childNode","hasRoomForChildren","originalChild","newChild","includes","indexOf","newSymbol","REParser","rootNode","regex","clearTerminals","currNode","openParenStack","char","newNode","addChild","pop","kleeneNode","getParent","makeParentOf","plusNode","originalParent","getSymbol","grandparent","concatNode","unionNode","symbolNode","addTerminal","newParentNode","targetNode","setParent","replaceChild","convertToNFA","prevExpression","replace","insertConcatSymbols","parser","parseRegex","nfa","ASTtoNFA","astNode","emptySet","terminals","getTerminals","charNFAs","size","character","or","splice","sigma","kleene","concat","a","FSA","state0","createState","setStartState","EMPTY_SYMBOL","state1","addTransition","setFinalState","b","stateIndex","aStateMap","Map","firstAState","getStates","state","newState","set","bStateMap","firstBState","lastBState","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","isFinalState","aTransitions","getTransitions","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","transition","newFromState","get","getSourceState","newToState","getDestinationState","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","getSymbols","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","getFinalStates","finalState","newFinalState","bTransitions","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","stateMap","firstState","lastAState","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","lastState","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","ExpressionChangeHandler","refreshTicks","ExpressionChangeHandler_classCallCheck","_cachedExpressionHash","_refreshTicks","_elapsedTicks","Infinity","_listeners","listener","expr","exprHash","EXPRESSION_REFRESH_RATE","MachineController","MachineController_classCallCheck","_machine","_parser","_expressionChangeHandler","_equalFSA","_equalREHash","update","setMachineExpression","hasTerminal","isSymbol","nextSymbol","nextExpression","RegExp","Array","from","string","validate","getErrors","REGraphExporter","REGraphExporter_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","AbstractGraphExporter","data","module","machineController","getMachineController","machineData","machineName","name","getApp","getSession","setProjectName","machineExpression","dst","getModuleName","version","process","getModuleVersion","timestamp","Date","toString","getProjectName","getMachineExpression","fromJSON","toJSON","fileBlob","_this","Promise","resolve","reject","filename","endsWith","getFileType","reader","FileReader","onload","target","substring","getUndoManager","captureEvent","jsonData","JSON","parse","abort","onerror","code","readAsText","jsonString","stringify","downloadText","I18N","JSONFileIcon","REtoFSAGraphExporter","REtoFSAGraphExporter_classCallCheck","REtoFSAGraphExporter_possibleConstructorReturn","REtoFSAGraphExporter_getPrototypeOf","FSAGraphExporter","graphData","type","symbols","machine","getEquivalentFSA","graph","FSAGraph","getStateCount","node","edge","to","read","createNode","setNodeLabel","getStateLabel","setNodeAccept","EMPTY_CHAR","createEdge","setEdgeLabel","join","SYMBOL_SEPARATOR","formattedEdge","formatEdge","deleteEdge","startState","getStartState","setStartNode","GraphLayout","applyLayout","setGraphToFSA","JSONGraphParser","objectify","REErrorChecker","app","REErrorChecker_classCallCheck","_app","_machineController","_showErrorOnChange","onExpressionChange","bind","getExpressionChangeHandler","addListener","showErrors","enabled","errors","getMachine","notificationManager","getNotificationManager","clearNotifications","pushNotification","SUCCESS_LAYOUT_ID","message","ERROR_LAYOUT_ID","SafeExpressionEventHandler","SafeExpressionEventHandler_classCallCheck","SafeExpressionEventHandler_possibleConstructorReturn","SafeExpressionEventHandler_getPrototypeOf","AbstractEventHandler","undoManager","prevEvent","getPreviousEvent","applyRedo","AlphabetListElement","props","AlphabetListElement_classCallCheck","AlphabetListElement_getPrototypeOf","_inputElement","onValueChange","AlphabetListElement_assertThisInitialized","onFocus","onBlur","onKeyDown","onKeyUp","React","Component","setState","select","keyCode","key","preventDefault","stopPropagation","blur","trim","onChange","focus","_this2","inputSymbol","displaySymbol","symbolUsed","used","react_default","createElement","id","className","Style","element_container","style","ref","spellCheck","maxLength","width","TerminalListView","AlphabetListView_classCallCheck","AlphabetListView_getPrototypeOf","newSymbolComponent","useNewSymbol","onElementAdd","AlphabetListView_assertThisInitialized","onElementFocus","onElementBlur","onElementChange","element","renameSymbol","deleteSymbol","overview_alphabet_AlphabetListElement","isUsedSymbol","_this3","getMachineTerminals","list_container","element_list","renderTerminalList","display","OverviewPanel","OverviewPanel_classCallCheck","OverviewPanel_possibleConstructorReturn","OverviewPanel_getPrototypeOf","drawer","session","getCurrentModule","drawerFull","isDrawerFullscreen","PanelContainer","title","TITLE","PanelSection","initial","full","alphabet_AlphabetListView","Object","defineProperty","AnalysisPanel","AnalysisPanel_classCallCheck","AnalysisPanel_getPrototypeOf","onConvertToNFA","AnalysisPanel_assertThisInitialized","exportManager","getExportManager","tryExportToFile","getExporters","analysis_button","onClick","DEFAULT_MODE","TestItem","TestItem_classCallCheck","TestItem_getPrototypeOf","inputElement","defaultValue","status","TestItem_assertThisInitialized","callback","nextValue","onDelete","onTest","active","placeholder","subtitle","test_item_container","IconButton","test_button","disabled","CheckCircleIcon","CrossCircleIcon","PendingIcon","RunningManIcon","test_input","delete_button","SubtractIcon","ACCEPT_FILE_TYPES","TEST_FILENAME","TestListView","TestListView_classCallCheck","TestListView_getPrototypeOf","_testList","_testName","onTestNew","TestListView_assertThisInitialized","onTestUpload","onTestDownload","onTestClose","onTestAdd","onTestDelete","onTestTest","onTestRunAll","removeListener","resetStatus","isEmpty","event","tests","split","test","guid","testStrings","getValue","nextTest","item","itemValue","fsa","solveFSA","_this4","empty","test_container","test_control_tray","test_control_button","PageContentIcon","IconUploadButton","accept","onUpload","UploadIcon","DownloadIcon","CrossIcon","test_list_container","test_list_add","AddIcon","test_list_count","test_list_scroll_container","test_list","map","testCallback","panels_testing_TestItem","test_list_runall","TestingPanel","TestingPanel_classCallCheck","TestingPanel_getPrototypeOf","onAutoErrorCheckChange","TestingPanel_assertThisInitialized","currentModule","errorChecker","getErrorChecker","errorCheck","isErrorChecking","setErrorChecking","panel_container","panels_testing_TestListView","PanelSwitch","checked","ExpressionView","ExpressionView_classCallCheck","ExpressionView_getPrototypeOf","onInputChange","ExpressionView_assertThisInitialized","isValid","readableValue","view_pane","view_widget","ExpressionViewStyle","expression_tray","tray_important","_appendSymbol","tray_symbol","REModule","REModule_classCallCheck","_errorChecker","getDrawerManager","addPanelClass","getViewportManager","addViewClass","setEventHandlerFactory","addExporter","getHotKeyManager","registerHotKey","CTRL_KEY","getDefaultExporter","undo","SHIFT_KEY","redo","window","confirm","getToolbarComponent","closeBar","showButtonLabel","SHOW_LABEL","react__WEBPACK_IMPORTED_MODULE_0___default","icon_button","children","panel_title","panel_content","panel_bottom","STYLE_TYPE_DEFAULT","STYLE_TYPE_WARNING","STYLE_TYPE_ERROR","STYLE_TYPE_SUCCESS","DefaultNotificationLayout","notification","notification_container","styleType","close","State","label","src","_label","_src","_id","GraphElement","getGraphElementID","_createClass","Transition","_from","_to","_symbols","slice","getHashString","deterministic","_states","_alphabet","_transitions","_finalStates","_customSymbols","_startState","_deterministic","entries","_step$value","_slicedToArray","copy","isStartState","_step2$value","_step3$value","getStateID","foundSymbols","keys","values","transitions","getOutgoingTransitions","addState","stateID","delete","hasState","transitionKey","hasSymbol","addSymbol","_incrSymbolCount","_decrSymbolCount","symbolCount","isCustomSymbol","cache","_step14$value","_i2","custom","forceNondeterminism","_typeof","fromTransitionKey","startsWith","toState","doClosureTransition","s","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21","_iteratorNormalCompletion22","_didIteratorError22","_iteratorError22","_step22","_iterator22","_iteratorNormalCompletion23","_didIteratorError23","_iteratorError23","_step23","_iterator23","getLabel","toUpperCase","Icon","xmlns","height","viewBox","d","TinyUpIcon_classCallCheck","TinyUpIcon_possibleConstructorReturn","TinyUpIcon_getPrototypeOf","PanelSection_classCallCheck","PanelSection_getPrototypeOf","open","PanelSection_assertThisInitialized","prev","isOpen","isDisabled","Children","isFull","section_container","section_header","TinyUpIcon","TinyDownIcon","section_content_container","section_content","Notification","layoutID","tags","_notificationManager","_message","_layoutID","_tags","_props","removeNotification","tag","WARNING_LAYOUT_ID","NotificationManager","NotificationManager_classCallCheck","_layouts","_notifications","notificationLayout","isArray","flag","hasTag","registerNotificationLayout","_extends","switch_container","panel_switch","switch_slider","switch_label","htmlFor","fill","points","cx","cy","r","onFileUpload","_assertThisInitialized","files","_IconButton_js__WEBPACK_IMPORTED_MODULE_2__","upload_button","upload_input","HotKeyManager","_hotkeys","_cachedEvent","ctrlKey","metaKey","altKey","shiftKey","_prevHotKey","_repeatCount","_enabled","_altHotkey","ctrlIndex","metaIndex","altIndex","shiftIndex","charKey","ctrl","alt","shift","localizedKeys","unshift","addEventListener","removeEventListener","hotkey","matchesHotKeyEvent","eventCtrl","eventAlt","eventShift","eventKey","repeat","captureKeyEvent","findMatchingHotKey","isKeyUp","PanelDivider","panel_divider","PanelCheckbox","checkbox_container","convertToDFA","isDeterministic","setDeterministic","dfaData","nfaSource","dfaStateMap","dfaFinalStates","dfaTransitionMap","dfaStartState","dfaTrapState","startStatesByClosure","getDFAStateFromNFAStates","statePowerSet","states","len","getPowerSetOfStates","nfaStates","expandNFAStatesToDFA","dfaState","getAlphabet","dfaTransitionKey","getDFATransitionKeyFromDFAStateAndSymbol","fromDFAState","nfaTerminals","fromNFAState","doTerminalTransition","nfaStateKey","nfaState","getNFAStateKeyFromNFAStates","final","dfaStateLabel","MAX_COMPUTATION_STEPS","input","doTransition","cachedStates","cachedSymbols","relatedState","counter","solveFSAByStep","nextStates","nextIndex","cstate","nextState","apply","invertDFA","toBeRejected","__webpack_require__","__webpack_exports__","ERROR_UNREACHABLE_STATE","ERROR_DUPLICATE_STATE","ERROR_INCOMPLETE_TRANSITION","ERROR_DUPLICATE_TRANSITION","ERROR_MISSING_TRANSITION","ERROR_EMPTY_TRANSITION","FSABuilder","AbstractMachineBuilder","warnings","nodeLabels","nodeOutgoings","edgeSymbols","edgePlaceholders","edgeEmpties","graphNodes","getNodes","graphEdges","getEdges","graphStart","getStartNode","nodeLabel","getNodeLabel","getNodeAccept","srcNode","getSourceNode","dstNode","getDestinationNode","isPlaceholder","FSANode","srcState","getStateByID","dstState","edgeLabelSymbols","getEdgeSymbolsFromLabel","transitionSymbol","outSymbols","outEdges","sharedStates","nodes","getSource","edges","unreachables","getUnreachableNodes","missingSymbols","_step4$value","edgeMapping","openList","startNode","queue","getNodeCount","startIndex","nextNodes","nextNode","graphController","AbstractMachineController","_get","prototype","getGraphController","_machineBuilder","machineType","getMachineType","setMachineType","currentMachineType","getMachineBuilder","setGraphToMachine","getGraph","changeMachineTo","addCustomSymbol","targets","getEdgeLabel","removeCustomSymbol","prevSymbol","renameCustomSymbol","getCustomSymbols","setCustomSymbol","clearCustomSymbols","newGraph","customSymbols","statePrefix","getGraphLabeler","setDefaultNodeLabelPrefix","getDefaultNodeLabelPrefix","prevGraphHash","getHashCode"],"mappings":"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","file":"module_re.bundle.75294c8996d93d080d0c.js","sourcesContent":["import GraphElement from 'graph/GraphElement.js';\nimport { guid, stringHash } from 'util/MathHelper.js';\n\nexport const EMPTY = \"\\u03B5\";\nexport const CONCAT = \".\";\nexport const UNION = \"U\";\nexport const KLEENE = \"*\";\nexport const SIGMA = \"\\u03A3\";\nexport const EMPTY_SET = \"\\u2205\";\nexport const PLUS = \"\\u207A\";\n\nclass RE\n{\n\tconstructor(expression = \"\")\n\t{\n\t\tthis._expression = expression;\n\t\tthis._terminals = new Set();\n\t\tthis._errors = [];\n\t}\n\n\t/**\n\t * Performs a shallow copy of the 2 machines. Any changes to a state will be\n\t * reflected in both. However, changes to transitions, alphabet, and final\n\t * states will not propagate.\n\t */\n\tcopy(re)\n\t{\n\t\t//You are already yourself, don't copy nothing.\n\t\tif (re === this) return;\n\n\t\t//Make room for the copy...\n\t\tthis.clear();\n\n\t\tthis._expression = re._expression;\n\n\t\t//Copy terminals\n\t\tfor (const terminal of re._terminals)\n\t\t{\n\t\t\tthis._terminals.add(terminal);\n\t\t}\n\n\t\t//Copy errors\n\t\tfor (const error of re._errors)\n\t\t{\n\t\t\t//WARNING: if the error's store state objects, they need to be redirected to the copies\n\t\t\tthis._errors.push(error);\n\t\t}\n\t}\n\n\tclear()\n\t{\n\t\tthis._expression = \"\";\n\t\tthis._terminals.clear();\n\t\tthis._errors.length = 0;\n\t}\n\n\tvalidate()\n\t{\n\t\t//Reset errors\n\t\tthis._errors.length = 0;\n\n\t\ttry\n\t\t{\n\t\t\tif (this.isExpressionValid())\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tthis._errors.push(e);\n\t\t}\n\n\t\treturn false;\n\t}\n\tisValid()\n\t{\n\t\treturn this._errors.length == 0;\n\t}\n\tgetErrors()\n\t{\n\t\treturn this._errors;\n\t}\n\n\taddTerminal(x)\n\t{\n\t\tthis._terminals.add(x);\n\t}\n\thasTerminal(x)\n\t{\n\t\treturn this._terminals.has(x);\n\t}\n\tgetTerminals()\n\t{\n\t\treturn this._terminals;\n\t}\n\tclearTerminals()\n\t{\n\t\tthis._terminals.clear();\n\t}\n\n\tareParenthesisBalanced()\n\t{\n\t\tlet count = 0;\n\t\tlet expression = this.getExpression();\n\t\tfor (let i = 0; i < expression.length; i++)\n\t\t{\n\t\t\tif (expression.charAt(i) == '(')\n\t\t\t\tcount++;\n\t\t\telse if (expression.charAt(i) == ')')\n\t\t\t\tcount--;\n\t\t\tif (count < 0)\n\t\t\t\treturn false;\n\t\t}\n\t\treturn count == 0;\n\t}\n\n\tisExpressionValid()\n\t{\n\t\tlet expression = this.getExpression();\n\t\tif (!expression || expression.length == 0) return true;\n\t\t//throw new Error(\"The expression must be nonempty.\");\n\t\tif (!this.areParenthesisBalanced())\n\t\t\tthrow new Error(\"The parentheses are unbalanced!\");\n\t\tswitch (expression.charAt(0))\n\t\t{\n\t\t\t//Only '(' or a symbol can be the first character\n\t\tcase ')':\n\t\tcase UNION:\n\t\tcase KLEENE:\n\t\tcase CONCAT:\n\t\tcase PLUS:\n\t\t\tthrow new Error(\"Operators are poorly formatted.\");\n\t\t}\n\t\tfor (let i = 1; i < expression.length; i++)\n\t\t{\n\t\t\tlet currChar = expression.charAt(i);\n\t\t\tlet prevChar = expression.charAt(i - 1);\n\t\t\tswitch (currChar)\n\t\t\t{\n\t\t\tcase UNION:\n\t\t\tcase CONCAT:\n\t\t\t\t// UNION and CONCAT can't be the last character\n\t\t\t\tif (i == expression.length - 1)\n\t\t\t\t\tthrow new Error(\"Operators are poorly formatted.\");\n\t\t\tcase ')':\n\t\t\tcase KLEENE:\n\t\t\tcase PLUS:\n\t\t\t\t// Must be preceded with a symbol\n\t\t\t\tif (prevChar == '(' || prevChar == UNION || prevChar == CONCAT)\n\t\t\t\t\tthrow new Error(\"Operators are poorly formatted.\");\n                // Kleene and Plus cannot be applied to empty set\n                if ((currChar == KLEENE || currChar == PLUS) && prevChar == EMPTY_SET)\n                    throw new Error(\"Empty set can only be part of a union or concatenation\");\n                break;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tinsertConcatSymbols()\n\t{\n\t\tlet result = \"\";\n\t\tlet expression = this.getExpression();\n\t\tfor (let i = 0; i < expression.length; i++)\n\t\t{\n\t\t\tlet currChar = expression.charAt(i);\n\t\t\tresult += currChar;\n\t\t\tif (i + 1 < expression.length)\n\t\t\t{\n\t\t\t\tlet nextChar = expression.charAt(i + 1);\n\t\t\t\tif (currChar != '(' && currChar != UNION && currChar != CONCAT &&\n\t\t\t\t\tnextChar != ')' && nextChar != UNION && nextChar != KLEENE && nextChar != PLUS && nextChar != CONCAT)\n\t\t\t\t{\n\t\t\t\t\tresult += CONCAT;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.setExpression(result);\n\t}\n\n\n\tsetExpression(expression)\n\t{\n\t\tthis._expression = expression;\n\t\treturn this;\n\t}\n\n\tgetExpression()\n\t{\n\t\treturn this._expression;\n\t}\n\n\tgetHashCode()\n\t{\n\t\treturn stringHash(this._expression);\n\t}\n}\n\nexport default RE;\n","import RE,\n{\n\tEMPTY,\n\tCONCAT,\n\tUNION,\n\tKLEENE,\n\tSIGMA,\n\tEMPTY_SET,\n\tPLUS\n}\nfrom './RE.js';\n\nclass ASTNode\n{\n\tconstructor(symbol, isTerminal, parentNode, index)\n\t{\n\t\tthis._symbol = symbol;\n\t\tthis._isTerminal = isTerminal;\n\t\tthis._parent = parentNode;\n\t\tthis._children = [];\n\t\tthis._index = index;\n\t}\n\n\taddChild(childNode)\n\t{\n\t\tif (this.hasRoomForChildren())\n\t\t{\n\t\t\tthis._children.push(childNode);\n\t\t\tthis._isTerminal = false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthrow new Error(\"Trying to add more than 2 children to an ASTNode\");\n\t\t}\n\t}\n\n\treplaceChild(originalChild, newChild)\n\t{\n\t\tif (this._children.includes(originalChild))\n\t\t{\n\t\t\tlet index = this._children.indexOf(originalChild);\n\t\t\tthis._children[index] = newChild;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthrow new Error(\"The child to replace isn't a child already\")\n\t\t}\n\t}\n\n\thasRoomForChildren()\n\t{\n\t\treturn this._children.length < 2;\n\t}\n\n\tisTerminal()\n\t{\n\t\treturn this._isTerminal;\n\t}\n\n\tsetTerminal(isTerminal)\n\t{\n\t\tthis._isTerminal = isTerminal;\n\t}\n\n\tgetSymbol()\n\t{\n\t\treturn this._symbol;\n\t}\n\n\tsetSymbol(newSymbol)\n\t{\n\t\tthis._symbol = newSymbol;\n\t}\n\n\tgetParent()\n\t{\n\t\treturn this._parent;\n\t}\n\n\tsetParent(parentNode)\n\t{\n\t\tthis._parent = parentNode;\n\t}\n\n\tgetChildren()\n\t{\n\t\treturn this._children;\n\t}\n\n\tgetIndex()\n\t{\n\t\treturn this._index;\n\t}\n\n\tsetIndex(index)\n\t{\n\t\tthis._index = index;\n\t}\n}\n\nclass REParser\n{\n\tconstructor()\n\t{\n\t\tthis.rootNode = null;\n\t}\n\n\tparseRegex(regex)\n\t{\n\t\tthis.rootNode = null;\n\t\tregex.clearTerminals();\n\t\tif (regex.getExpression().length == 0)\n\t\t{\n\t\t\tregex.clear();\n\t\t\treturn;\n\t\t}\n\t\telse if (regex.isExpressionValid())\n\t\t{\n\t\t\tlet currNode = this.rootNode;\n\t\t\tlet openParenStack = [];\n\t\t\tlet expression = regex.getExpression();\n\t\t\tlet index = -1;\n\n\t\t\tfor (const char of expression)\n\t\t\t{\n\t\t\t\tindex++;\n\t\t\t\tswitch (char)\n\t\t\t\t{\n\t\t\t\tcase '(':\n\t\t\t\t\tif (!currNode)\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrNode = new ASTNode('(', false, null, index);\n\t\t\t\t\t\tthis.rootNode = currNode;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tlet newNode = new ASTNode('(', false, currNode, index);\n\t\t\t\t\t\tcurrNode.addChild(newNode);\n\t\t\t\t\t\tcurrNode = newNode;\n\t\t\t\t\t}\n\t\t\t\t\topenParenStack.push(currNode);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ')':\n\t\t\t\t\tcurrNode = openParenStack.pop();\n\t\t\t\t\tbreak;\n\t\t\t\tcase KLEENE:\n\t\t\t\t\tlet kleeneNode = new ASTNode(KLEENE, false, currNode.getParent(), index);\n\t\t\t\t\tthis.makeParentOf(kleeneNode, currNode);\n\t\t\t\t\tcurrNode = kleeneNode;\n\t\t\t\t\tbreak;\n\t\t\t\tcase PLUS:\n\t\t\t\t\tlet plusNode = new ASTNode(PLUS, false, currNode.getParent(), index);\n\t\t\t\t\tthis.makeParentOf(plusNode, currNode);\n\t\t\t\t\tcurrNode = plusNode;\n\t\t\t\t\tbreak;\n\t\t\t\tcase CONCAT:\n\t\t\t\t\tif (!currNode.getParent())\n\t\t\t\t\t{\n\t\t\t\t\t\tlet concatNode = new ASTNode(CONCAT, false, null, index);\n\t\t\t\t\t\tthis.makeParentOf(concatNode, currNode);\n\t\t\t\t\t\tcurrNode = concatNode;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tlet originalParent = currNode.getParent();\n\t\t\t\t\t\tlet parentSym = originalParent.getSymbol();\n\t\t\t\t\t\tif (parentSym == CONCAT)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet grandparent = originalParent.getParent();\n\t\t\t\t\t\t\tlet concatNode = new ASTNode(CONCAT, false, grandparent, index);\n\t\t\t\t\t\t\tthis.makeParentOf(concatNode, originalParent);\n\t\t\t\t\t\t\tcurrNode = concatNode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet concatNode = new ASTNode(CONCAT, false, originalParent, index);\n\t\t\t\t\t\t\tthis.makeParentOf(concatNode, currNode);\n\t\t\t\t\t\t\tcurrNode = concatNode;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase UNION:\n\t\t\t\t\tif (!currNode.getParent())\n\t\t\t\t\t{\n\t\t\t\t\t\tlet unionNode = new ASTNode(UNION, false, null, index);\n\t\t\t\t\t\tthis.makeParentOf(unionNode, currNode);\n\t\t\t\t\t\tcurrNode = unionNode;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tlet originalParent = currNode.getParent();\n\t\t\t\t\t\tlet sym = originalParent.getSymbol();\n\t\t\t\t\t\tif (sym == '(')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet unionNode = new ASTNode(UNION, false, originalParent, index);\n\t\t\t\t\t\t\tthis.makeParentOf(unionNode, currNode);\n\t\t\t\t\t\t\tcurrNode = unionNode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet grandparent = originalParent.getParent();\n\t\t\t\t\t\t\tlet unionNode = new ASTNode(UNION, false, grandparent, index);\n\t\t\t\t\t\t\tthis.makeParentOf(unionNode, originalParent);\n\t\t\t\t\t\t\tcurrNode = unionNode;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ' ':\n\t\t\t\t\tbreak;\n\t\t\t\t\t//For symbols\n\t\t\t\tdefault:\n\t\t\t\t\tif (!currNode)\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrNode = new ASTNode(char, true, null, index);\n\t\t\t\t\t\tthis.rootNode = currNode;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tlet symbolNode = new ASTNode(char, true, currNode, index);\n\t\t\t\t\t\tcurrNode.addChild(symbolNode);\n\t\t\t\t\t\tcurrNode = symbolNode;\n\t\t\t\t\t}\n\t\t\t\t\t// Add terminals to the regex's terminal set\n\t\t\t\t\tif (char != SIGMA && char != EMPTY_SET && char != EMPTY)\n\t\t\t\t\t{\n\t\t\t\t\t\tregex.addTerminal(char);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tmakeParentOf(newParentNode, targetNode)\n\t{\n\t\tlet originalParent = targetNode.getParent();\n\t\tnewParentNode.setParent(originalParent);\n\t\tnewParentNode.addChild(targetNode);\n\t\tif (originalParent != null)\n\t\t{\n\t\t\toriginalParent.replaceChild(targetNode, newParentNode);\n\t\t}\n\t\ttargetNode.setParent(newParentNode);\n\n\t\tif (this.rootNode == targetNode)\n\t\t{\n\t\t\tthis.rootNode = newParentNode;\n\t\t}\n\t}\n}\n\nexport default REParser;\n","import FSA, {EMPTY_SYMBOL} from 'modules/fsa2/machine/FSA.js';\nimport {EMPTY,\n  CONCAT,\n\tUNION,\n\tKLEENE,\n    SIGMA,\n    EMPTY_SET,\n    PLUS} from '../RE.js';\n\nimport REParser from '../REParser.js';\n\n// Return NFA representation of the input regular expression\n// Construction of NFA is done using Thompson's algorithm\nexport function convertToNFA(re)\n{\n  const prevExpression = re.getExpression();\n  re.setExpression(prevExpression.replace(/\\s/g,''));\n  re.insertConcatSymbols();\n\tconst parser = new REParser();\n\tparser.parseRegex(re);         //Create parse tree and add terminals to re's terminal set\n\tconst nfa = ASTtoNFA(parser.rootNode, re);\n  re.setExpression(prevExpression);\n  return nfa;\n}\n\nfunction ASTtoNFA(astNode, re)\n{\n\t//Base case, terminal nodes are characters in the alphabet OR\n    //the EmptySet or Sigma\n\tif (astNode.isTerminal())\n\t{\n        switch (astNode.getSymbol())\n        {\n            case EMPTY_SET:\n                return emptySet();\n            case SIGMA:\n                return sigma(re);\n            default:\n                return character(astNode.getSymbol());\n        }\n\t}\n\tswitch (astNode.getSymbol())\n\t{\n\tcase KLEENE:\n\t\treturn kleene(ASTtoNFA(astNode._children[0] , re));\n    case PLUS:\n        return plus(ASTtoNFA(astNode._children[0], re));\n\tcase CONCAT:\n\t\treturn concat(ASTtoNFA(astNode._children[0] , re), ASTtoNFA(astNode._children[1] , re));\n\tcase UNION:\n\t\treturn or(ASTtoNFA(astNode._children[0] , re), ASTtoNFA(astNode._children[1] , re));\n\tcase '(':\n\t\treturn ASTtoNFA(astNode._children[0] , re);\n\tdefault:\n\t\tthrow new Error(\"You've got a weird node in the AST tree with symbol \" + astNode.getSymbol());\n\t}\n}\n\n// For the empty set, the NFA is a start state, with no final state, nor transitions.\nfunction emptySet()\n{\n    const result = new FSA(false);\n    const state0 = result.createState(\"q0\");\n    result.setStartState(state0);\n    return result;\n}\n\n// For Sigma, the NFA is just the union of all the terminals in the regular expression\n// e.g. if Sigma = {0, 1}, then as a regular expression it is just 0 U 1\nfunction sigma(re){\n    const terminals = re.getTerminals();\n    const charNFAs = [];\n\n    if (terminals.size == 0) {\n        return emptySet()\n    }\n    // Build NFAs for each terminal in the terminal set\n    for(const terminal of terminals) {\n        charNFAs.push(character(terminal));\n    }\n    // Unionize them into one big union NFA to return\n    while( charNFAs.length > 1 )\n    {\n        charNFAs[0] = or(charNFAs[0], charNFAs[1]);     // Accumulate in the 0th index\n        charNFAs.splice(1, 1);                          // Shift down from 1st index\n    }\n    return charNFAs[0]\n}\n\n// For a symbol of the alphabet, the NFA is two states, a start and a finish state,\n// with the transition being the symbol.\nfunction character(symbol)\n{\n    // Necessary for having empty in an FSA\n    if (symbol == EMPTY) {\n        symbol = EMPTY_SYMBOL;\n    }\n\tconst result = new FSA(false);\n\tconst state0 = result.createState(\"q0\");\n\tconst state1 = result.createState(\"q1\");\n\tresult.addTransition(state0, state1, symbol);\n\tresult.setStartState(state0);\n\tresult.setFinalState(state1);\n\treturn result;\n}\n\nfunction concat(a, b)\n{\n\tconst result = new FSA(false);\n  let stateIndex = 0;\n\n  let aStateMap = new Map();\n  let firstAState = null;\n  let lastAState = null;\n  for(const state of a.getStates())\n  {\n    let newState = result.createState(\"q\" + (stateIndex++));\n    aStateMap.set(state, newState);\n    if (firstAState === null) firstAState = newState;\n    lastAState = newState;\n  }\n\n  let bStateMap = new Map();\n  let firstBState = null;\n  let lastBState = null;\n  for(const state of b.getStates())\n  {\n    let newState = result.createState(\"q\" + (stateIndex++));\n    bStateMap.set(state, newState);\n    if (firstBState === null) firstBState = newState;\n    // lastBState should only be set to a final state (EMPTY_SET has none)\n    if (b.isFinalState(state)) {\n        lastBState = newState;\n    }\n  }\n\n\tconst aTransitions = a.getTransitions();\n\tfor (const transition of aTransitions)\n\t{\n    const newFromState = aStateMap.get(transition.getSourceState());\n    const newToState = aStateMap.get(transition.getDestinationState());\n    if (newFromState === null || newToState === null) throw new Error(\"Unable to find state endpoints for transition\");\n    for(const symbol of transition.getSymbols())\n    {\n  \t\tresult.addTransition(newFromState, newToState, symbol);\n    }\n\t}\n\n  for(const finalState of a.getFinalStates())\n  {\n    const newFinalState = aStateMap.get(finalState);\n    result.addTransition(newFinalState, firstBState, EMPTY_SYMBOL);\n  }\n\n\tconst bTransitions = b.getTransitions();\n\tfor (const transition of bTransitions)\n\t{\n    const newFromState = bStateMap.get(transition.getSourceState());\n    const newToState = bStateMap.get(transition.getDestinationState());\n    if (newFromState === null || newToState === null) throw new Error(\"Unable to find state endpoints for transition\");\n    for(const symbol of transition.getSymbols())\n    {\n  \t\tresult.addTransition(newFromState, newToState, symbol);\n    }\n\t}\n\n\tresult.setStartState(firstAState);\n    if(lastBState != null) result.setFinalState(lastBState);\n\treturn result;\n}\n\nfunction kleene(a)\n{\n\tconst result = new FSA(false);\n  let stateIndex = 0;\n\n  const stateMap = new Map();\n\n  const firstState = result.createState(\"q\" + (stateIndex++));\n  let firstAState = null;\n  let lastAState = null;\n  for(const state of a.getStates())\n  {\n    let newState = result.createState(\"q\" + (stateIndex++));\n    stateMap.set(state, newState);\n\n    if (firstAState === null) firstAState = newState;\n    lastAState = newState;\n  }\n  const lastState = result.createState(\"q\" + (stateIndex++));\n\n  result.addTransition(firstState, firstAState, EMPTY_SYMBOL);\n\n  const aTransitions = a.getTransitions();\n\tfor (const transition of aTransitions)\n\t{\n    const newFromState = stateMap.get(transition.getSourceState());\n    const newToState = stateMap.get(transition.getDestinationState());\n    if (newFromState === null || newToState === null) throw new Error(\"Unable to find state endpoints for transition\");\n    for(const symbol of transition.getSymbols())\n    {\n  \t\tresult.addTransition(newFromState, newToState, symbol);\n    }\n\t}\n\n\tresult.addTransition(lastAState, lastState, EMPTY_SYMBOL);\n\tresult.addTransition(lastAState, firstAState, EMPTY_SYMBOL);\n\tresult.addTransition(firstState, lastState, EMPTY_SYMBOL);\n\n\tresult.setStartState(firstState);\n\tresult.setFinalState(lastState);\n\treturn result;\n}\n\nfunction plus(a)\n{\n    return concat(a, kleene(a));\n}\n\nfunction or(a, b)\n{\n\tconst result = new FSA(false);\n  let stateIndex = 0;\n\n  const firstState = result.createState(\"q\" + (stateIndex++));\n\n  let aStateMap = new Map();\n  let firstAState = null;\n  let lastAState = null;\n  for(const state of a.getStates())\n  {\n    let newState = result.createState(\"q\" + (stateIndex++));\n    aStateMap.set(state, newState);\n    if (firstAState === null) firstAState = newState;\n    // lastAState should only be set to a final state (EMPTY_SET has none)\n    if (a.isFinalState(state)) {\n        lastAState = newState;\n    }\n  }\n\n  let bStateMap = new Map();\n  let firstBState = null;\n  let lastBState = null;\n  for(const state of b.getStates())\n  {\n    let newState = result.createState(\"q\" + (stateIndex++));\n    bStateMap.set(state, newState);\n    if (firstBState === null) firstBState = newState;\n    // lastBState should only be set to a final state (EMPTY_SET has none)\n    if (b.isFinalState(state)) {\n        lastBState = newState;\n    }\n  }\n\n  const lastState = result.createState(\"q\" + (stateIndex++));\n\n  //A machine\n\tresult.addTransition(firstState, firstAState, EMPTY_SYMBOL);\n  const aTransitions = a.getTransitions();\n\tfor (const transition of aTransitions)\n\t{\n    const newFromState = aStateMap.get(transition.getSourceState());\n    const newToState = aStateMap.get(transition.getDestinationState());\n    if (newFromState === null || newToState === null) throw new Error(\"Unable to find state endpoints for transition\");\n    for(const symbol of transition.getSymbols())\n    {\n  \t\tresult.addTransition(newFromState, newToState, symbol);\n    }\n\t}\n    if(lastAState != null) {\n\t       result.addTransition(lastAState, lastState, EMPTY_SYMBOL);\n    }\n\n  //B machine\n\tresult.addTransition(firstState, firstBState, EMPTY_SYMBOL);\n  const bTransitions = b.getTransitions();\n\tfor (const transition of bTransitions)\n\t{\n    const newFromState = bStateMap.get(transition.getSourceState());\n    const newToState = bStateMap.get(transition.getDestinationState());\n    if (newFromState === null || newToState === null) throw new Error(\"Unable to find state endpoints for transition\");\n    for(const symbol of transition.getSymbols())\n    {\n  \t\tresult.addTransition(newFromState, newToState, symbol);\n    }\n\t}\n    if(lastBState != null) {\n\t       result.addTransition(lastBState, lastState, EMPTY_SYMBOL);\n    }\n\n\tresult.setStartState(firstState);\n\tresult.setFinalState(lastState);\n\treturn result;\n}\n","import {stringHash} from 'util/MathHelper.js';\n\nclass ExpressionChangeHandler\n{\n  constructor(refreshTicks=10)\n  {\n\t\tthis._cachedExpressionHash = 0;\n\n    this._refreshTicks = refreshTicks;\n    this._elapsedTicks = Infinity;\n\n    this._listeners = [];\n  }\n\n  addListener(listener)\n  {\n    if (typeof listener !== 'function')\n      throw new Error(\"Cannot add uncallable listener\");\n    this._listeners.push(listener);\n  }\n\n  removeListener(listener)\n  {\n    const i = this._listeners.indexOf(listener);\n    if (i >= 0)\n    {\n      this._listeners.splice(i, 1);\n      return true;\n    }\n    return false;\n  }\n\n  clearListeners()\n  {\n    this._listeners.length = 0;\n  }\n\n  getListeners()\n  {\n    return this._listeners;\n  }\n\n  reset()\n  {\n    this._elapsedTicks = 0;\n    this._cachedExpressionHash = 0;\n  }\n\n  update(expr)\n  {\n    if (++this._elapsedTicks >= this._refreshTicks)\n    {\n      this._elapsedTicks = 0;\n\n      const exprHash = stringHash(expr);\n      if (exprHash !== this._cachedExpressionHash)\n      {\n        this._cachedExpressionHash = exprHash;\n        for(const listener of this._listeners)\n        {\n          listener(expr);\n        }\n      }\n    }\n  }\n}\n\nexport default ExpressionChangeHandler;\n","import {stringHash} from 'util/MathHelper.js';\n\nimport RE from './machine/RE.js';\nimport REParser from './machine/REParser.js';\nimport {convertToNFA} from './machine/REUtils.js';\n\nimport ExpressionChangeHandler from './ExpressionChangeHandler.js';\n\nconst EXPRESSION_REFRESH_RATE = 30;\nconst ERROR_MESSAGE_TAG = \"re_parse_error\"\n\nclass MachineController\n{\n  constructor()\n  {\n    this._machine = new RE();\n    this._parser = new REParser();\n    this._expressionChangeHandler = new ExpressionChangeHandler(EXPRESSION_REFRESH_RATE);\n\n    this._equalFSA = null;\n    this._equalREHash = stringHash(this._machine.getExpression());\n  }\n\n  update()\n  {\n    this._expressionChangeHandler.update(this._machine.getExpression());\n  }\n\n  clear()\n  {\n    this.setMachineExpression(\"\");\n  }\n\n  isSymbol(symbol)\n  {\n    return this._machine.hasTerminal(symbol);\n  }\n\n  isUsedSymbol(symbol)\n  {\n    return this.isSymbol(symbol);\n  }\n\n  renameSymbol(symbol, nextSymbol)\n  {\n    const prevExpression = this._machine.getExpression();\n    const nextExpression = prevExpression.replace(new RegExp(symbol, 'g'), nextSymbol);\n    this.setMachineExpression(nextExpression);\n  }\n\n  deleteSymbol(symbol)\n  {\n    const prevExpression = this._machine.getExpression();\n    const nextExpression = prevExpression.replace(new RegExp(symbol, 'g'), '');\n    this.setMachineExpression(nextExpression);\n  }\n\n  getMachineTerminals()\n  {\n    return Array.from(this._machine.getTerminals());\n  }\n\n  getEquivalentFSA()\n  {\n    if (!this._equalFSA || (stringHash(this._machine.getExpression()) !== this._equalREHash))\n    {\n      this._equalREHash = stringHash(this._machine.getExpression());\n      this._equalFSA = convertToNFA(this._machine);\n    }\n    return this._equalFSA;\n  }\n\n  setMachineExpression(string)\n  {\n    this._machine.setExpression(string);\n    if (this._machine.validate())\n    {\n      this._parser.parseRegex(this._machine);\n    }\n  }\n\n  getMachineExpression()\n  {\n    return this._machine.getExpression() || \"\";\n  }\n\n  getMachineErrors()\n  {\n    return this._machine.getErrors();\n  }\n\n  getMachine()\n  {\n    return this._machine;\n  }\n\n  getExpressionChangeHandler()\n  {\n    return this._expressionChangeHandler;\n  }\n}\n\nexport default MachineController;\n","import AbstractGraphExporter from 'session/manager/export/AbstractGraphExporter.js';\n\nimport { downloadText } from 'util/Downloader.js';\n\nimport JSONFileIcon from 'experimental/iconset/flat/JSONFileIcon.js';\n\nclass REGraphExporter extends AbstractGraphExporter\n{\n  constructor() { super(); }\n\n  fromJSON(data, module)\n  {\n    const machineController = module.getMachineController();\n\n    const metadata = '_metadata' in data ? data['_metadata'] : {};\n\n    //HACK: this should be calculated elsewhere\n    const machineData = data.machineData;\n    const machineName = machineData.name;\n    if (machineName) module.getApp().getSession().setProjectName(machineName);\n    const machineExpression = machineData.expression;\n    if (machineExpression) machineController.setMachineExpression(machineExpression);\n\n    return machineExpression;\n  }\n\n  toJSON(expression, module)\n  {\n    const machineController = module.getMachineController();\n\n    const dst = {};\n    dst[\"_metadata\"] = {\n      module: module.getModuleName(),\n      version: process.env.VERSION + \":\" + module.getModuleVersion(),\n      timestamp: new Date().toString()\n    };\n    dst[\"machineData\"] = {\n      name: module.getApp().getSession().getProjectName(),\n      expression: machineController.getMachineExpression()\n    };\n    return dst;\n  }\n\n  //Override\n  importFromData(data, module)\n  {\n    this.fromJSON(data, module);\n  }\n\n  //Override\n  exportToData(module)\n  {\n    const expression = module.getMachineController().getMachineExpression();\n    const result = this.toJSON(expression, module);\n    return result;\n  }\n\n  //Override\n  doesSupportData()\n  {\n    return true;\n  }\n\n  //Override\n  importFromFile(fileBlob, module)\n  {\n    return new Promise((resolve, reject) => {\n      const filename = fileBlob.name;\n      if (!filename.endsWith(this.getFileType()))\n      {\n        throw new Error(\"Trying to import invalid file type for \\'\" + this.getFileType() + \"\\': \" + filename);\n      }\n\n      const reader = new FileReader();\n      reader.onload = e => {\n        const machineController = module.getMachineController();\n        const data = e.target.result;\n        const name = filename.substring(0, filename.length - this.getFileType().length - 1);\n        const expression = machineController.getMachineExpression();\n\n        //TODO: this should not be here, this should exist somewhere in graphController\n        if (expression.length > 0)\n        {\n          module.getApp().getUndoManager().captureEvent();\n        }\n\n        try\n        {\n          const jsonData = JSON.parse(data);\n\n          this.fromJSON(jsonData, module);\n\n          module.getApp().getSession().setProjectName(name);\n\n          resolve();\n        }\n        catch (e)\n        {\n          reader.abort();\n          reject(e);\n        }\n        finally\n        {\n          const nextExpression = machineController.getMachineExpression()\n          if (expression !== nextExpression)\n          {\n            module.getApp().getUndoManager().captureEvent();\n          }\n        }\n      };\n\n      reader.onerror = e => {\n        reject(new Error(\"Unable to import file: \" + e.target.error.code));\n      }\n\n      reader.readAsText(fileBlob);\n    });\n  }\n\n  //Override\n  exportToFile(filename, module)\n  {\n    const expression = module.getMachineController().getMachineExpression();\n    const dst = this.toJSON(expression, module);\n    const jsonString = JSON.stringify(dst);\n    downloadText(filename + '.' + this.getFileType(), jsonString);\n  }\n\n  //Override\n  doesSupportFile()\n  {\n    return true;\n  }\n\n  //Override\n  canImport(module)\n  {\n    return true;\n  }\n\n  //Override\n  canExport(module)\n  {\n    return module.getMachineController().getMachineExpression().length > 0;\n  }\n\n  //Override\n  getTitle()\n  {\n    return I18N.toString(\"file.export.machine.hint\");\n  }\n\n  //Override\n  getLabel()\n  {\n    return I18N.toString(\"file.export.machine\");\n  }\n\n  //Override\n  getFileType()\n  {\n    return \"json\";\n  }\n\n  //Override\n  getIconClass()\n  {\n    return JSONFileIcon;\n  }\n}\n\nexport default REGraphExporter;\n","import FSAGraphExporter from 'modules/fsa2/exporter/FSAGraphExporter.js';\nimport MachineController from 'modules/fsa2/controller/MachineController.js';\nimport { JSON as JSONGraphParser } from 'modules/fsa/graph/FSAGraphParser.js';\n\nimport FSAGraph from 'modules/fsa/graph/FSAGraph.js';\nimport {EMPTY_SYMBOL} from 'modules/fsa2/machine/FSA.js';\nimport {EMPTY_CHAR, SYMBOL_SEPARATOR} from 'modules/fsa/graph/FSAEdge.js';\nimport GraphLayout from 'modules/fsa/graph/GraphLayout.js';\nimport { downloadText } from 'util/Downloader.js';\n\nclass REtoFSAGraphExporter extends FSAGraphExporter\n{\n  constructor() { super(); }\n\n  //Override\n  toJSON(graphData, module)\n  {\n    const dst = {};\n    dst[\"_metadata\"] = {\n      module: module.getModuleName(),\n      version: process.env.VERSION + \":\" + module.getModuleVersion(),\n      timestamp: new Date().toString()\n    };\n    dst[\"graphData\"] = graphData;\n    dst[\"machineData\"] = {\n      name: module.getApp().getSession().getProjectName(),\n      type: \"NFA\",\n      symbols: []\n    };\n    return dst;\n  }\n\n  //Override\n  doesSupportData()\n  {\n    return false;\n  }\n\n  //Override\n  exportToFile(filename, module)\n  {\n    const machine = module.getMachineController().getEquivalentFSA();\n    const graph = new FSAGraph();\n    setGraphToFSA(graph, machine);\n    const graphData = JSONGraphParser.objectify(graph);\n    const dst = this.toJSON(graphData, module);\n    const jsonString = JSON.stringify(dst);\n    downloadText(filename + '.' + this.getFileType(), jsonString);\n  }\n\n  //Override\n  doesSupportFile()\n  {\n    return true;\n  }\n\n  //Override\n  canImport(module)\n  {\n    return false;\n  }\n\n  //Override\n  canExport(module)\n  {\n    return module.getMachineController().getMachineExpression().length > 0;\n  }\n\n  //Override\n  getLabel()\n  {\n    return I18N.toString(\"file.export.convertfsa\");\n  }\n}\n\nfunction setGraphToFSA(graph, machine)\n{\n  graph.clear();\n\n  if (machine.getStateCount() <= 0) return;\n\n  //Add all states\n  let stateMap = new Map();\n  let node;\n  for(const state of machine.getStates())\n  {\n    node = graph.createNode(0, 0);\n    node.setNodeLabel(state.getStateLabel());\n    if (machine.isFinalState(state)) node.setNodeAccept(true);\n    stateMap.set(state, node);\n  }\n\n  //Add all transitions\n  let edge, from, to, read, labels, flag;\n  for(let transition of machine.getTransitions())\n  {\n    from = stateMap.get(transition.getSourceState());\n    to = stateMap.get(transition.getDestinationState());\n    read = [];\n    for(const symbol of transition.getSymbols())\n    {\n      if (symbol === EMPTY_SYMBOL)\n      {\n        read.push(EMPTY_CHAR);\n      }\n      else\n      {\n        read.push(symbol);\n      }\n    }\n    edge = graph.createEdge(from, to);\n    edge.setEdgeLabel(read.join(SYMBOL_SEPARATOR));\n    const formattedEdge = graph.formatEdge(edge);\n    if (edge != formattedEdge) graph.deleteEdge(edge);\n  }\n\n  //Set start state\n  const startState = machine.getStartState();\n  graph.setStartNode(stateMap.get(startState));\n\n  //Auto layout graph\n  GraphLayout.applyLayout(graph);\n}\n\nexport default REtoFSAGraphExporter;\n","import {SUCCESS_LAYOUT_ID, ERROR_LAYOUT_ID} from 'session/manager/notification/NotificationManager.js';\nimport {\n  MACHINE_ERROR_NOTIFICATION_TAG,\n  STATE_LAYOUT_ID,\n  TRANSITION_LAYOUT_ID,\n  STATE_UNREACHABLE_LAYOUT_ID\n} from './components/notifications/RENotifications.js';\n\nclass REErrorChecker\n{\n  constructor(app, machineController)\n  {\n    this._app = app;\n    this._machineController = machineController;\n    this._showErrorOnChange = false;\n\n    this.onExpressionChange = this.onExpressionChange.bind(this);\n\n    machineController.getExpressionChangeHandler().addListener(this.onExpressionChange);\n  }\n\n  onExpressionChange(expression)\n  {\n    if (this._showErrorOnChange)\n    {\n      this.showErrors();\n    }\n  }\n\n  setErrorChecking(enabled)\n  {\n    this._showErrorOnChange = enabled;\n  }\n\n  isErrorChecking()\n  {\n    return this._showErrorOnChange;\n  }\n\n  showErrors()\n  {\n    const errors = this._machineController.getMachine().getErrors();\n\n    const app = this._app;\n    const notificationManager = app.getNotificationManager();\n\n    notificationManager.clearNotifications(MACHINE_ERROR_NOTIFICATION_TAG);\n    if (errors.length <= 0)\n    {\n      notificationManager.pushNotification(\n        I18N.toString(\"message.error.none\"),\n        SUCCESS_LAYOUT_ID, MACHINE_ERROR_NOTIFICATION_TAG, null, false);\n    }\n    else\n    {\n      for(const error of errors)\n      {\n        notificationManager.pushNotification(error.name + \" - \" + error.message,\n          ERROR_LAYOUT_ID, MACHINE_ERROR_NOTIFICATION_TAG, null, false);\n      }\n    }\n  }\n}\n\nexport default REErrorChecker;\n","export const MACHINE_ERROR_NOTIFICATION_TAG = \"machine-error\";\n\nexport function registerNotifications(notificationManager)\n{\n  \n};\n","import AbstractEventHandler from 'session/manager/undo/AbstractEventHandler.js';\n\nclass SafeExpressionEventHandler extends AbstractEventHandler\n{\n  constructor(machineController)\n  {\n    super();\n\n    this._machineController = machineController;\n    this._expression = machineController.getMachineExpression();\n  }\n\n  //Override\n  applyUndo(undoManager)\n  {\n    const prevEvent = undoManager.getPreviousEvent();\n    if (prevEvent instanceof SafeExpressionEventHandler)\n    {\n      prevEvent.applyRedo(undoManager);\n    }\n    else\n    {\n      this._machineController.clear();\n    }\n  }\n\n  //Override\n  applyRedo(undoManager)\n  {\n    this._machineController.setMachineExpression(this._expression);\n  }\n}\nexport default SafeExpressionEventHandler;\n","import React from 'react';\nimport Style from './AlphabetListElement.css';\n\nconst SUBMIT_KEY_CODE = \"Enter\";\nconst CANCEL_KEY_CODE = \"Escape\";\n\nclass AlphabetListElement extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this._inputElement = null;\n\n    this.state = {\n      value: null,\n      error: false\n    };\n\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyUp = this.onKeyUp.bind(this);\n  }\n\n  onFocus(e)\n  {\n    const target = e.target;\n    const symbol = this.props.symbol;\n\n    this.setState({\n      value: symbol,\n      error: false\n    }, () => target.select());\n\n    //Call any listening focus\n    if (this.props.onFocus) this.props.onFocus(e, this);\n  }\n\n  onBlur(e)\n  {\n    const nextSymbol = this.state.value;\n\n    //Call any listening blurs\n    if (this.props.onBlur) this.props.onBlur(e, this, nextSymbol);\n\n    //Reset to nothing (will use props.symbol instead)\n    this.setState({ value: null, error: false });\n  }\n\n  onKeyDown(e)\n  {\n    const keyCode = e.key;\n    if (keyCode === SUBMIT_KEY_CODE || keyCode === CANCEL_KEY_CODE)\n    {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  onKeyUp(e)\n  {\n    const keyCode = e.key;\n    const target = e.target;\n\n    if (keyCode === SUBMIT_KEY_CODE)\n    {\n      target.blur();\n    }\n    else if (keyCode === CANCEL_KEY_CODE)\n    {\n      this.setState({\n        value: null,\n        error: false\n      }, () => target.blur());\n    }\n  }\n\n  onValueChange(e)\n  {\n    let value = e.target.value.trim();\n    let error = false;\n\n    if (this.props.onChange)\n    {\n      try\n      {\n        this.props.onChange(e, this, value);\n      }\n      catch(e)\n      {\n        error = true;\n      }\n    }\n\n    this.setState({\n      value: value,\n      error: error\n    });\n  }\n\n  focus()\n  {\n    this._inputElement.focus();\n  }\n\n  //Override\n  render()\n  {\n    const inputSymbol = this.state.value;\n    const displaySymbol = inputSymbol === null ? this.props.symbol : inputSymbol;\n\n    const symbolUsed = this.props.used || false;\n\n    return (\n      <div id={this.props.id}\n        className={Style.element_container +\n          (displaySymbol !== null && displaySymbol.length <= 0 ? \" empty \" : \"\") +\n          (inputSymbol !== null && this.state.error ? \" error \" : \"\") +\n          (symbolUsed ? \" used \" : \"\") +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <input ref={ref=>this._inputElement=ref}\n          spellCheck={false}\n          maxLength={1}\n          style={{width: \"1ch\"}}\n          value={displaySymbol}\n          onChange={this.onValueChange}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          onKeyDown={this.onKeyDown}\n          onKeyUp={this.onKeyUp}/>\n      </div>\n    );\n  }\n}\n\nexport default AlphabetListElement;\n","import React from 'react';\nimport Style from './AlphabetListView.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport BoxAddIcon from 'experimental/iconset/BoxAddIcon.js';\n\nimport AlphabetListElement from './AlphabetListElement.js';\n\nclass TerminalListView extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.newSymbolComponent = null;\n\n    this.state = {\n      useNewSymbol: false\n    };\n\n    this.onElementAdd = this.onElementAdd.bind(this);\n    this.onElementFocus = this.onElementFocus.bind(this);\n    this.onElementBlur = this.onElementBlur.bind(this);\n    this.onElementChange = this.onElementChange.bind(this);\n  }\n\n  onElementAdd(e)\n  {\n    //Create a new alphabet element...\n    this.setState({useNewSymbol: true}, () => {\n      this.newSymbolComponent.focus();\n    });\n  }\n\n  onElementFocus(e, element)\n  {\n    //Do nothing...\n  }\n\n  onElementBlur(e, element, nextSymbol)\n  {\n    const symbol = element.props.symbol;\n    const machineController = this.props.machineController;\n\n    if (nextSymbol !== null)\n    {\n      if (nextSymbol.length > 0)\n      {\n        if (!machineController.isSymbol(nextSymbol))\n        {\n          if (symbol)\n          {\n            //None other have the same name. Rename it!\n            machineController.renameSymbol(symbol, nextSymbol);\n          }\n          else\n          {\n            //None other have the same name. Create it!\n            //machineController.createSymbol(nextSymbol);\n          }\n        }\n        else\n        {\n          //Found something already named that! Ignore!\n        }\n      }\n      else if (symbol)\n      {\n        //Delete!\n        machineController.deleteSymbol(symbol);\n      }\n    }\n\n    //Regardless, just close the \"new\" alphabet element if open.\n    if (this.state.useNewSymbol)\n    {\n      this.setState({ useNewSymbol: false });\n    }\n  }\n\n  onElementChange(e, element, symbol)\n  {\n    const machineController = this.props.machineController;\n\n    if (symbol.length > 0)\n    {\n      //If there are more than 1 symbols by the same name,\n      //OR if the duplicate symbol found is NOT the same symbol\n      if (machineController.isSymbol(symbol) && symbol !== element.props.symbol)\n      {\n        throw new Error(\"Not a valid symbol\");\n      }\n    }\n  }\n\n  renderTerminalList(machineController, terminals)\n  {\n    const result = [];\n    for(const symbol of terminals)\n    {\n      if (!symbol) continue;\n\n      result.push(<AlphabetListElement key={symbol}\n        symbol={symbol}\n        used={machineController.isUsedSymbol(symbol)}\n        onFocus={this.onElementFocus}\n        onBlur={this.onElementBlur}\n        onChange={this.onElementChange}/>);\n    }\n    return result;\n  }\n\n  //Override\n  render()\n  {\n    const machineController = this.props.machineController;\n    const terminals = machineController.getMachineTerminals();\n\n    return (\n      <div id={this.props.id}\n        className={Style.list_container}\n        style={this.props.style}>\n        <div className={Style.element_list}>\n          {this.renderTerminalList(machineController, terminals)}\n          <AlphabetListElement\n            ref={ref=>this.newSymbolComponent=ref}\n            style={{display: this.state.useNewSymbol ? \"block\" : \"none\"}}\n            symbol={\"\"}\n            onFocus={this.onElementFocus}\n            onBlur={this.onElementBlur}\n            onChange={this.onElementChange}/>\n        </div>\n        {/*\n          <IconButton className={Style.add_button}\n            title=\"Add Terminal\"\n            onClick={this.onElementAdd}\n            disabled={true}>\n            <BoxAddIcon/>\n          </IconButton>\n        */}\n      </div>\n    );\n  }\n}\n\nexport default TerminalListView;\n","import React from 'react';\nimport Style from './OverviewPanel.css';\n\nimport PanelContainer from 'experimental/panels/PanelContainer.js';\nimport PanelSection from 'experimental/panels/PanelSection.js';\nimport PanelDivider from 'experimental/panels/PanelDivider.js';\n\nimport AlphabetListView from './alphabet/AlphabetListView.js';\n\nimport {EMPTY, CONCAT, UNION, KLEENE, SIGMA, EMPTY_SET, PLUS} from 'modules/re/machine/RE.js';\n\nclass OverviewPanel extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const drawer = this.props.drawer;\n    const session = this.props.session;\n    const currentModule = session.getCurrentModule();\n\n    const machineController = currentModule.getMachineController();\n    const drawerFull = drawer.isDrawerFullscreen();\n\n    return (\n      <PanelContainer id={this.props.id}\n        className={this.props.className}\n        style={this.props.style}\n        title={OverviewPanel.TITLE}>\n        <PanelSection title={\"Terminals\"} initial={true} full={drawerFull}>\n          <AlphabetListView machineController={machineController}/>\n        </PanelSection>\n        <PanelSection title={\"Symbol Key\"} initial={true} full={true}>\n          <table>\n          <tbody>\n            <tr><td>Epsilon</td><td>{EMPTY}</td></tr>\n            <tr><td>Union</td><td>{UNION}</td></tr>\n            <tr><td>Concat</td><td>{CONCAT}</td></tr>\n            <tr><td>Kleene Star</td><td>{KLEENE}</td></tr>\n            <tr><td>Kleene Plus</td><td>{PLUS}</td></tr>\n            <tr><td>Sigma</td><td>{SIGMA}</td></tr>\n            <tr><td>Empty Set</td><td>{EMPTY_SET}</td></tr>\n          </tbody>\n          </table>\n        </PanelSection>\n      </PanelContainer>\n    );\n  }\n}\nObject.defineProperty(OverviewPanel, 'TITLE', {\n  get: function() { return I18N.toString(\"component.overview.title\"); }\n});\n\nexport default OverviewPanel;\n","import React from 'react';\nimport Style from './AnalysisPanel.css';\n\nimport PanelContainer from 'experimental/panels/PanelContainer.js';\nimport PanelSection from 'experimental/panels/PanelSection.js';\nimport PanelCheckbox from 'experimental/panels/PanelCheckbox.js';\n\nclass AnalysisPanel extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.onConvertToNFA = this.onConvertToNFA.bind(this);\n  }\n\n  onConvertToNFA(e)\n  {\n    const exportManager = this.props.session.getApp().getExportManager();\n    exportManager.tryExportToFile(exportManager.getExporters()[1]);\n  }\n\n  //Override\n  render()\n  {\n    const session = this.props.session;\n\n    return (\n      <PanelContainer id={this.props.id}\n        className={this.props.className}\n        style={this.props.style}\n        title={AnalysisPanel.TITLE}>\n        <PanelSection title={\"Optimizations\"} initial={true}>\n          <button className={Style.analysis_button} onClick={this.onConvertToNFA}>\n            {I18N.toString(\"action.overview.convertnfa\")}\n          </button>\n        </PanelSection>\n        <PanelSection title={\"Related Machines\"}>\n        </PanelSection>\n      </PanelContainer>\n    );\n  }\n}\nObject.defineProperty(AnalysisPanel, 'TITLE', {\n  get: function() { return I18N.toString(\"component.analysis.title\"); }\n});\n\nexport default AnalysisPanel;\n","import React from 'react';\nimport Style from './TestItem.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport SubtractIcon from 'experimental/iconset/SubtractIcon.js';\nimport CheckCircleIcon from 'experimental/iconset/CheckCircleIcon.js';\nimport CrossCircleIcon from 'experimental/iconset/CrossCircleIcon.js';\nimport PendingIcon from 'experimental/iconset/PendingIcon.js';\nimport RunningManIcon from 'experimental/iconset/RunningManIcon.js';\nimport WalkingManIcon from 'experimental/iconset/WalkingManIcon.js';\n\nexport const DEFAULT_MODE = \"default\";\nexport const SUCCESS_MODE = \"success\";\nexport const FAILURE_MODE = \"failure\";\nexport const WORKING_MODE = \"working\";\n\nclass TestItem extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.inputElement = null;\n\n    this.state = {\n      value: this.props.defaultValue || \"\",\n      status: DEFAULT_MODE\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  focus()\n  {\n    if (this.inputElement)\n    {\n      this.inputElement.focus();\n    }\n  }\n\n  setValue(value, callback=null)\n  {\n    if (this.state.value !== value)\n    {\n      this.setState({value: value}, callback);\n    }\n    else if (callback)\n    {\n      callback();\n    }\n  }\n\n  setStatus(status, callback=null)\n  {\n    if (this.state.status !== status)\n    {\n      this.setState({status: status}, callback);\n    }\n    else if (callback)\n    {\n      callback();\n    }\n  }\n\n  resetStatus(callback=null)\n  {\n    if (this.state.status !== DEFAULT_MODE)\n    {\n      this.setState({status: DEFAULT_MODE}, callback);\n    }\n    else if (callback)\n    {\n      callback();\n    }\n  }\n\n  getValue()\n  {\n    return this.state.value;\n  }\n\n  getStatus()\n  {\n    return this.state.status;\n  }\n\n  onChange(e)\n  {\n    const nextValue = e.target.value;\n    if (this.state.value !== nextValue)\n    {\n      this.setState({value: nextValue, status: DEFAULT_MODE});\n    }\n  }\n\n  //Override\n  render()\n  {\n    const onDelete = this.props.onDelete;\n    const showDelete = true;\n\n    const onTest = this.props.onTest;\n    const showTest = true;\n\n    const active = this.props.active;\n    const subtitle = this.props.subtitle;\n    const placeholder = this.props.placeholder;\n    const status = this.state.status;\n\n    return (\n      <div id={this.props.id}\n        className={Style.test_item_container +\n          (active ? \" active \" : \"\") +\n          \" \" + status +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        {showTest &&\n          <IconButton className={Style.test_button}\n            title={\"Test\"}\n            disabled={!onTest}\n            onClick={(e) => onTest(e, this)}>\n            {status === SUCCESS_MODE ?\n              <CheckCircleIcon/> :\n              status === FAILURE_MODE ?\n              <CrossCircleIcon/> :\n              status === WORKING_MODE ?\n              <PendingIcon/> :\n              <RunningManIcon/>}\n          </IconButton>}\n        <div className={Style.test_input}>\n          <input ref={ref=>this.inputElement=ref} type=\"text\"\n            placeholder={placeholder}\n            value={this.state.value}\n            onChange={this.onChange}/>\n          <label>{this.props.subtitle}</label>\n        </div>\n        {showDelete &&\n          <IconButton className={Style.delete_button}\n            title={\"Delete\"}\n            disabled={!onDelete}\n            onClick={(e) => onDelete(e, this)}>\n            <SubtractIcon/>\n          </IconButton>}\n      </div>\n    );\n  }\n}\n\nexport default TestItem;\n","import React from 'react';\nimport Style from './TestListView.css';\n\nimport { guid } from 'util/MathHelper.js';\nimport { downloadText } from 'util/Downloader.js';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport IconUploadButton from 'experimental/components/IconUploadButton.js';\n\nimport PageContentIcon from 'experimental/iconset/PageContentIcon.js';\nimport UploadIcon from 'experimental/iconset/UploadIcon.js';\nimport DownloadIcon from 'experimental/iconset/DownloadIcon.js';\nimport CrossIcon from 'experimental/iconset/CrossIcon.js';\nimport AddIcon from 'experimental/iconset/AddIcon.js';\nimport RunningManIcon from 'experimental/iconset/RunningManIcon.js';\nimport WalkingManIcon from 'experimental/iconset/WalkingManIcon.js';\n\nimport TestItem, {SUCCESS_MODE, FAILURE_MODE, WORKING_MODE, DEFAULT_MODE} from './TestItem.js';\n\nimport {solveFSA} from 'modules/fsa2/machine/FSAUtils.js';\n\nconst ACCEPT_FILE_TYPES = ['.txt'];\nconst TEST_FILENAME = \"test.txt\";\nconst TEST_REFRESH_TICKS = 30;\n\nclass TestListView extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this._testList = [];\n    this._testName = TEST_FILENAME;\n\n    this.onTestNew = this.onTestNew.bind(this);\n    this.onTestUpload = this.onTestUpload.bind(this);\n    this.onTestDownload = this.onTestDownload.bind(this);\n    this.onTestClose = this.onTestClose.bind(this);\n    this.onTestAdd = this.onTestAdd.bind(this);\n    this.onTestDelete = this.onTestDelete.bind(this);\n    this.onTestTest = this.onTestTest.bind(this);\n    this.onTestRunAll = this.onTestRunAll.bind(this);\n    this.onExpressionChange = this.onExpressionChange.bind(this);\n  }\n\n  //Override\n  componentDidMount()\n  {\n    this.props.machineController.getExpressionChangeHandler().addListener(this.onExpressionChange);\n  }\n\n  //Override\n  componentWillUnmount()\n  {\n    this.props.machineController.getExpressionChangeHandler().removeListener(this.onExpressionChange);\n  }\n\n  onExpressionChange(expression)\n  {\n    for(const test of this._testList)\n    {\n      test.ref.resetStatus();\n    }\n  }\n\n  onTestNew(e)\n  {\n    if (!this.isEmpty())\n    {\n      this.onTestClose(e);\n    }\n\n    this.onTestAdd(e);\n  }\n\n  onTestUpload(fileBlob)\n  {\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      try\n      {\n        this._testName = fileBlob.name;\n        this._testList.length = 0;\n\n        const tests = event.target.result.split(\"\\n\");\n        for(let test of tests)\n        {\n          test = test.trim();\n          if (test.length > 0)\n          {\n            this._testList.push({\n              id: guid(),\n              defaultValue: test,\n              ref: null\n            });\n          }\n        }\n\n        //Make sure an element exists, at least\n        if (this._testList.length <= 0)\n        {\n          this.onTestAdd(null);\n        }\n      }\n      catch(e)\n      {\n        reader.abort();\n      }\n    };\n    reader.readAsText(fileBlob);\n  }\n\n  onTestDownload(e)\n  {\n    const testStrings = [];\n    for(const test of this._testList)\n    {\n      const ref = test.ref;\n      if (ref)\n      {\n        testStrings.push(ref.getValue());\n      }\n    }\n\n    downloadText(this._testName, testStrings.join('\\n'));\n  }\n\n  onTestClose(e)\n  {\n    this._testList.length = 0;\n  }\n\n  onTestAdd(e)\n  {\n    this._testList.push({\n      id: guid(),\n      defaultValue: \"\",\n      ref: null\n    });\n  }\n\n  onTestRunAll(e)\n  {\n    let i = 0;\n\n    const nextTest = () => {\n      const test = this._testList[i];\n      this.onTestTest(null, test.ref, () => {\n        ++i;\n        if (i < this._testList.length)\n        {\n          nextTest();\n        }\n      });\n    }\n    nextTest();\n  }\n\n  onTestDelete(e, item)\n  {\n    //Already handled in render()\n  }\n\n  onTestTest(e, item, callback=null)\n  {\n    const itemValue = item.getValue();\n\n    item.setState({status: WORKING_MODE});\n\n    const machineController = this.props.machineController;\n    const fsa = machineController.getEquivalentFSA();\n    const result = solveFSA(fsa, itemValue);\n    item.setState({status: result ? SUCCESS_MODE : FAILURE_MODE});\n\n    if (callback)\n    {\n      callback();\n    }\n  }\n\n  isEmpty()\n  {\n    return this._testList.length <= 0;\n  }\n\n  //Override\n  render()\n  {\n    const machineController = this.props.machineController;\n\n    const empty = this.isEmpty();\n\n    return (\n      <div id={this.props.id}\n        className={Style.test_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <div className={Style.test_control_tray}>\n          <IconButton className={Style.test_control_button}\n            title={I18N.toString(\"action.testing.new\")}\n            onClick={this.onTestNew}>\n            <PageContentIcon/>\n          </IconButton>\n          <IconUploadButton className={Style.test_control_button}\n            title={I18N.toString(\"action.testing.import\")}\n            accept={ACCEPT_FILE_TYPES.join(\",\")}\n            onUpload={this.onTestUpload}>\n            <UploadIcon/>\n          </IconUploadButton>\n          <IconButton className={Style.test_control_button}\n            title={I18N.toString(\"action.testing.save\")}\n            disabled={empty}\n            onClick={this.onTestDownload}>\n            <DownloadIcon/>\n          </IconButton>\n          <IconButton className={Style.test_control_button}\n            title={I18N.toString(\"action.testing.clear\")}\n            disabled={empty}\n            onClick={this.onTestClose}>\n            <CrossIcon/>\n          </IconButton>\n        </div>\n        <div className={Style.test_list_container +\n          (empty ? \" empty \" : \"\")}>\n          <IconButton className={Style.test_list_add}\n            title={\"Add\"} onClick={this.onTestAdd}>\n            <AddIcon/>\n            <span className={Style.test_list_count}>\n              {!empty ? \"\" + this._testList.length : \"\"}\n            </span>\n          </IconButton>\n          <div className={Style.test_list_scroll_container}>\n            <div className={Style.test_list}>\n              {this._testList.map((e, i) => {\n                const id = e.id;\n                const defaultValue = e['defaultValue'] || \"\";\n                let testCallback = this.onTestTest;\n                if (machineController.getMachineExpression().length === 0)\n                {\n                  testCallback = null;\n                }\n                return <TestItem key={id} ref={ref=>e.ref=ref}\n                  defaultValue={defaultValue}\n                  onTest={testCallback}\n                  onDelete={(e, item) => {\n                    this._testList.splice(i, 1);\n                    this.onTestDelete(e, item);\n                  }}/>\n              })}\n            </div>\n          </div>\n          <IconButton className={Style.test_list_runall}\n            title={\"Run All\"} onClick={this.onTestRunAll}>\n            <RunningManIcon/>\n          </IconButton>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TestListView;\n","import React from 'react';\nimport Style from './TestingPanel.css';\n\nimport PanelContainer from 'experimental/panels/PanelContainer.js';\nimport PanelSwitch from 'experimental/panels/PanelSwitch.js';\nimport PanelDivider from 'experimental/panels/PanelDivider.js';\nimport PanelSection from 'experimental/panels/PanelSection.js';\n\nimport TestListView from './TestListView.js';\n\nimport {MACHINE_ERROR_NOTIFICATION_TAG} from 'modules/re/components/notifications/RENotifications.js';\n\nclass TestingPanel extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.onAutoErrorCheckChange = this.onAutoErrorCheckChange.bind(this);\n  }\n\n  onAutoErrorCheckChange(e)\n  {\n    const currentModule = this.props.session.getCurrentModule();\n    const errorChecker = currentModule.getErrorChecker();\n    const errorCheck = errorChecker.isErrorChecking();\n    errorChecker.setErrorChecking(!errorCheck);\n    if (errorCheck)\n    {\n      //Turning it off\n      this.props.session.getApp().getNotificationManager().clearNotifications(MACHINE_ERROR_NOTIFICATION_TAG);\n    }\n    else\n    {\n      const machineController = currentModule.getMachineController();\n      errorChecker.onExpressionChange(machineController.getMachineExpression());\n    }\n  }\n\n  //Override\n  render()\n  {\n    const session = this.props.session;\n    const currentModule = session.getCurrentModule();\n    const machineController = currentModule.getMachineController();\n    const errorChecker = currentModule.getErrorChecker();\n\n    const errorCheck = errorChecker.isErrorChecking();\n\n    return (\n      <PanelContainer id={this.props.id}\n        className={Style.panel_container +\n          \" \" + this.props.className}\n        style={this.props.style}\n        title={TestingPanel.TITLE}>\n\n        <TestListView machineController={machineController}/>\n        <PanelSwitch id={\"testing-error-check\"} checked={errorCheck} onChange={this.onAutoErrorCheckChange} title={\"Auto error checking\"}/>\n\n      </PanelContainer>\n    );\n  }\n}\nObject.defineProperty(TestingPanel, 'TITLE', {\n  get: function() { return I18N.toString(\"component.testing.title\"); }\n});\n\nexport default TestingPanel;\n","import React from 'react';\nimport Style from 'experimental/viewport/ViewportView.css';\nimport ExpressionViewStyle from './ExpressionView.css';\n\nimport {EMPTY, CONCAT, UNION, KLEENE, SIGMA, EMPTY_SET, PLUS} from 'modules/re/machine/RE.js';\n\nconst UNION_CHAR = \"\\u222A\";\n\nclass ExpressionView extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this._inputElement = null;\n\n    this.onInputChange = this.onInputChange.bind(this);\n  }\n\n  onInputChange(e)\n  {\n    const session = this.props.session;\n    const currentModule = session.getCurrentModule();\n    const machineController = currentModule.getMachineController();\n\n    const value = e.target.value;\n    const result = value.replace(new RegExp(UNION_CHAR, 'g'), UNION);\n\n    machineController.setMachineExpression(result);\n    session.getApp().getUndoManager().captureEvent();\n  }\n\n  _appendSymbol(machineController, symbol)\n  {\n    const session = this.props.session;\n    machineController.setMachineExpression(machineController.getMachineExpression() + symbol);\n    session.getApp().getUndoManager().captureEvent();\n  }\n\n  //Override\n  render()\n  {\n    const session = this.props.session;\n    const currentModule = session.getCurrentModule();\n    const machineController = currentModule.getMachineController();\n    const terminals = machineController.getMachineTerminals();\n    const error = !machineController.getMachine().isValid();\n\n    const readableValue = machineController.getMachineExpression().replace(new RegExp(UNION, 'g'), UNION_CHAR);\n\n    return (\n      <div id={this.props.id}\n        className={Style.view_pane +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <div className={Style.view_widget + \" \" +\n          ExpressionViewStyle.expression + \" \" +\n          (error ? \"error\" : \"\")}>\n          <input ref={ref=>this._inputElement=ref} value={readableValue} onChange={this.onInputChange}/>\n        </div>\n        <div className={Style.view_widget + \" \" + ExpressionViewStyle.expression_tray + \" \" + ExpressionViewStyle.tray_important}>\n          <button title=\"Epsilon\"       onClick={() => {this._appendSymbol(machineController, EMPTY)}}>{EMPTY}</button>\n          <button title=\"Union\"         onClick={() => {this._appendSymbol(machineController, UNION)}}>{UNION_CHAR}</button>\n          <button title=\"Concat\"        onClick={() => {this._appendSymbol(machineController, CONCAT)}}>{CONCAT}</button>\n          <button title=\"Kleene Star\"   onClick={() => {this._appendSymbol(machineController, KLEENE)}}>{KLEENE}</button>\n          <button title=\"Kleene Plus\"   onClick={() => {this._appendSymbol(machineController, PLUS)}}>{PLUS}</button>\n          <button title=\"Sigma\"         onClick={() => {this._appendSymbol(machineController, SIGMA)}}>{SIGMA}</button>\n          <button title=\"Empty Set\"     onClick={() => {this._appendSymbol(machineController, EMPTY_SET)}}>{EMPTY_SET}</button>\n        </div>\n\n        <div className={Style.view_widget + \" \" + ExpressionViewStyle.expression_tray + \" \" + ExpressionViewStyle.tray_symbol}>\n          {terminals.map(e => {\n            return (\n              <button key={e} onClick={() => {this._appendSymbol(machineController, e)}}>{e}</button>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ExpressionView;\n","import React from 'react';\nimport PanelContainer from 'experimental/panels/PanelContainer.js';\n\nimport MachineController from './MachineController.js';\nimport REGraphExporter from './exporter/REGraphExporter.js';\nimport REtoFSAGraphExporter from './exporter/REtoFSAGraphExporter.js';\nimport REErrorChecker from './REErrorChecker.js';\nimport SafeExpressionEventHandler from './SafeExpressionEventHandler.js';\n\nimport {registerNotifications} from './components/notifications/RENotifications.js';\n\nimport OverviewPanel from './components/panels/overview/OverviewPanel.js';\nimport AnalysisPanel from './components/panels/analysis/AnalysisPanel.js';\nimport TestingPanel from './components/panels/testing/TestingPanel.js';\n\nimport ExpressionView from './components/views/ExpressionView.js';\nimport {CTRL_KEY, ALT_KEY, SHIFT_KEY} from 'session/manager/hotkey/HotKeyManager.js';\n\nconst MODULE_NAME = \"re\";\nconst MODULE_VERSION = \"0.0.1\";\nconst MODULE_LOCALIZED_NAME = \"RE\";\n\nclass REModule\n{\n  constructor(app)\n  {\n    this._app = app;\n\n    this._machineController = new MachineController();\n    this._errorChecker = new REErrorChecker(app,\n      this._machineController);\n  }\n\n  //Override\n  initialize(app)\n  {\n    registerNotifications(app.getNotificationManager());\n\n    app.getDrawerManager()\n      .addPanelClass(props => (\n        <PanelContainer id={props.id}\n          className={props.className}\n          style={props.style}\n          title={\"Regular Expressions\"}>\n          <p>{\"Brought to you with \\u2764 by the Flap.js team.\"}</p>\n          <p>{\"<- Tap on a tab to begin!\"}</p>\n        </PanelContainer>\n      ))\n      .addPanelClass(OverviewPanel)\n      .addPanelClass(AnalysisPanel)\n      .addPanelClass(TestingPanel);\n\n    app.getViewportManager()\n      .addViewClass(ExpressionView);\n\n    app.getUndoManager()\n      .setEventHandlerFactory((...args) => {\n        return new SafeExpressionEventHandler(this._machineController);\n      });\n\n    app.getExportManager()\n      .addExporter(new REGraphExporter())\n      .addExporter(new REtoFSAGraphExporter());\n\n    app.getHotKeyManager()\n      .registerHotKey(\"Save as JSON\", [CTRL_KEY, 'KeyS'], () => {app.getExportManager().tryExportToFile(app.getExportManager().getDefaultExporter())})\n      .registerHotKey(\"New\", [CTRL_KEY, 'KeyN'], () => {this.clear(app)})\n      .registerHotKey(\"Undo\", [CTRL_KEY, 'KeyZ'], () => {app.getUndoManager().undo()})\n      .registerHotKey(\"Redo\", [CTRL_KEY, SHIFT_KEY, 'KeyZ'], () => {app.getUndoManager().redo()});\n  }\n\n  //Override\n  update(app)\n  {\n    this._machineController.update();\n  }\n\n  //Override\n  destroy(app)\n  {\n  }\n\n  //Override\n  clear(app)\n  {\n    if (window.confirm(I18N.toString(\"alert.graph.clear\")))\n    {\n      const module = app.getCurrentModule();\n      this._machineController.setMachineExpression(\"\");\n      app.getUndoManager().clear();\n      app.getSession().setProjectName(null);\n      app.getToolbarComponent().closeBar();\n    }\n  }\n\n  getMachineController() { return this._machineController; }\n  getErrorChecker() { return this._errorChecker; }\n\n  //Override\n  getModuleVersion() { return MODULE_VERSION; }\n  //Override\n  getModuleName() { return MODULE_NAME; }\n  //Override\n  getLocalizedModuleName() { return MODULE_LOCALIZED_NAME; }\n  //Override\n  getApp() { return this._app; }\n}\n\nexport default REModule;\n","import React from 'react';\nimport Style from './IconButton.css';\n\nclass IconButton extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const title = this.props.title;\n    const showButtonLabel = IconButton.SHOW_LABEL && title;\n\n    return (\n      <button id={this.props.id}\n        className={Style.icon_button +\n          (showButtonLabel ? \" hint \" : \"\") +\n          \" \" + this.props.className}\n        style={this.props.style}\n        title={title}\n        disabled={this.props.disabled}\n        onClick={this.props.onClick}>\n        {this.props.children}\n        <label>{title}</label>\n      </button>\n    );\n  }\n}\nIconButton.SHOW_LABEL = false;\n\nexport default IconButton;\n","import React from 'react';\nimport Style from './PanelContainer.css';\n\nclass PanelContainer extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n  \n  //Override\n  render()\n  {\n    const title = this.props.title;\n\n    return (\n      <div id={this.props.id}\n        className={Style.panel_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <div className={Style.panel_title}>\n          <h1>{title}</h1>\n        </div>\n        <div className={Style.panel_content}>\n          {this.props.children}\n        </div>\n        <div className={Style.panel_bottom}>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PanelContainer;\n","import React from 'react';\nimport Style from './DefaultNotificationLayout.css';\n\nexport const STYLE_TYPE_DEFAULT = \"default\";\nexport const STYLE_TYPE_WARNING = \"warning\";\nexport const STYLE_TYPE_ERROR = \"error\";\nexport const STYLE_TYPE_SUCCESS = \"success\";\n\nclass DefaultNotificationLayout extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    const message = this.props.message;\n    const notification = this.props.notification;\n\n    return (\n      <div id={this.props.id}\n        className={Style.notification_container +\n          \" \" + this.props.styleType +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        {message &&\n          message.split('\\n').map((e, i) => <p key={e + \":\" + i}>{e}</p>)}\n        {this.props.children}\n        {notification &&\n          <button onClick={e => notification.close()}>\n            {I18N.toString(\"message.action.close\")}\n          </button>}\n      </div>\n    );\n  }\n}\n\nexport default DefaultNotificationLayout;\n","import GraphElement from 'graph/GraphElement.js';\nimport { guid, stringHash } from 'util/MathHelper.js';\n\nconst FROM_STATE_INDEX = 0;\nconst SYMBOL_INDEX = 1;\nconst TO_STATE_INDEX = 2;\n\nexport const EMPTY_SYMBOL = '&empty';\n\nexport class State\n{\n  constructor(label=\"\", src=null)\n  {\n    this._label = label;\n\n    this._src = src;\n    this._id = src instanceof GraphElement ? src.getGraphElementID() : guid();\n  }\n\n  copy()\n  {\n    const result = new State();\n    result._label = this._label;\n    result._src = this._src;\n    result._id = this._id;\n    return result;\n  }\n\n  getStateLabel() { return this._label; }\n\n  getStateID() { return this._id; }\n  getSource() { return this._src; }\n\n  getHashString()\n  {\n    return this._id;\n  }\n}\n\nexport class Transition\n{\n  constructor(from, to, symbols=[])\n  {\n    this._from = from;\n    this._to = to;\n    this._symbols = symbols;\n  }\n\n  copy()\n  {\n    const result = new Transition();\n    result._from = this._from;\n    result._to = this._to;\n    result._symbols = this._symbols.slice();\n    return result;\n  }\n\n  getSourceState() { return this._from; }\n  getDestinationState() { return this._to; }\n\n  addSymbol(symbol) { this._symbols.push(symbol); }\n  hasSymbol(symbol) { return this._symbols.includes(symbol); }\n  getSymbols() { return this._symbols; }\n\n  getHashString()\n  {\n    return this._from.getHashString() + \":\" + this._symbols.join(\",\") + \":\" + this._to.getHashString();\n  }\n}\n\nclass FSA\n{\n  constructor(deterministic=false)\n  {\n    //state id -> state\n    this._states = new Map();\n    //symbol -> symbol use counter\n    this._alphabet = new Map();\n    //transition key (from + to) -> transition object\n    this._transitions = new Map();\n    this._finalStates = new Set();\n    this._customSymbols = new Set();\n    this._startState = null;\n\n    this._deterministic = deterministic;\n    this._errors = [];\n  }\n\n  /**\n   * Performs a shallow copy of the 2 machines. Any changes to a state will be\n   * reflected in both. However, changes to transitions, alphabet, and final\n   * states will not propagate.\n   */\n  copy(fsa)\n  {\n    //You are already yourself, don't copy nothing.\n    if (fsa === this) return;\n\n    //Make room for the copy...\n    this.clear();\n\n    //Copy state\n    for(const [key, value] of fsa._states.entries())\n    {\n      const result = value.copy();\n      this._states.set(key, result);\n\n      //Copy start state\n      if (fsa.isStartState(value))\n      {\n        this._startState = result;\n      }\n      //Copy final states\n      if (fsa.isFinalState(value))\n      {\n        this._finalStates.add(result);\n      }\n    }\n    //Copy alphabet\n    for(const [key, value] of fsa._alphabet.entries())\n    {\n      this._alphabet.set(key, value);\n    }\n    //Copy transitions\n    for(const [key, value] of fsa._transitions.entries())\n    {\n      const result = value.copy();\n      result._from = this._states.get(value.getSourceState().getStateID());\n      result._to = this._states.get(value.getDestinationState().getStateID());\n      this._transitions.set(key, result);\n    }\n    //Copy custom symbols\n    for(const symbol of fsa._customSymbols)\n    {\n      this._customSymbols.add(symbol);\n    }\n\n    //Copy determinism\n    this._deterministic = fsa._deterministic;\n\n    //Copy errors\n    for(const error of fsa._errors)\n    {\n    //WARNING: if the error's store state objects, they need to be redirected to the copies\n      this._errors.push(error);\n    }\n  }\n\n  clear()\n  {\n    this._states.clear();\n    this._alphabet.clear();\n    this._transitions.clear();\n    this._finalStates.clear();\n    this._customSymbols.clear();\n    this._startState = null;\n\n    this._errors.length = 0;\n  }\n\n  setDeterministic(deterministic) { this._deterministic = deterministic; }\n  isDeterministic() { return this._deterministic; }\n\n  validate()\n  {\n    //Reset errors\n    this._errors.length = 0;\n\n    if (this._deterministic)\n    {\n      const foundSymbols = new Map();\n      for(const key of this._alphabet.keys())\n      {\n        foundSymbols.set(key, false);\n      }\n\n      for(const state of this._states.values())\n      {\n        //Get all outgoing transitions\n        const transitions = this.getOutgoingTransitions(state);\n        for(const transition of transitions)\n        {\n          const symbol = transition[SYMBOL_INDEX];\n\n          //We don't need to worry about empty symbols cause this is a DFA\n          //So just assume every symbol is a valid one\n          if (!foundSymbols.get(symbol))\n          {\n            foundSymbols.set(symbol, true);\n          }\n          else\n          {\n            //Found duplicate\n            this._errors.push(\"duplicate symbol: \" + symbol);\n            return false;\n          }\n        }\n\n        //Reset foundSymbols for next state\n        for(const key of foundSymbols.keys())\n        {\n          if (!foundSymbols.get(key))\n          {\n            //Found missing symbol for state\n            this._errors.push(\"missing symbol: \" + key);\n            return false;\n          }\n\n          //Reset found symbol\n          foundSymbols.set(key, false);\n        }\n      }\n\n      //No errors found\n      this._errors.length = 0;\n      return true;\n    }\n    else\n    {\n      //It is a valid NFA already\n      this._errors.length = 0;\n      return true;\n    }\n  }\n  isValid() { return this._errors.length == 0; }\n  getErrors() { return this._errors; }\n\n  createState(label=\"\")\n  {\n    return this.addState(new State(label));\n  }\n\n  addState(state)\n  {\n    const stateID = state.getStateID();\n    if (this._states.has(stateID)) throw new Error(\"Already added state with id \\'\" + stateID + \"\\'\");\n    //Make state as new start state if no other states exist...\n    if (this._states.size <= 0) this._startState = state;\n    //Add to state set\n    this._states.set(stateID, state);\n    return state;\n  }\n\n  removeState(state)\n  {\n    const stateID = state.getStateID();\n    if (!this._states.has(stateID)) return false;\n    this._states.delete(stateID);\n\n    //Deleted the start state, so must pick another one...\n    if (this._startState === state)\n    {\n      if (this._states.size <= 0)\n      {\n        //If no more states to choose from, don't choose anything\n        this._startState = null;\n      }\n      else\n      {\n        //Choose an arbitrary start state\n        this._startState = this._states.values().next().value;\n      }\n    }\n\n    return true;\n  }\n\n  hasStateWithLabel(label)\n  {\n    for(const state of this._states.values())\n    {\n      if (state.getStateLabel() == label)\n      {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getStatesByLabel(label, dst=[])\n  {\n    for(const state of this._states.values())\n    {\n      if (state.getStateLabel() == label)\n      {\n        dst.push(state);\n      }\n    }\n    return dst;\n  }\n\n  getStateByID(id)\n  {\n    return this._states.get(id);\n  }\n\n  hasState(state) { return this._states.has(state.getStateID()); }\n\n  getStates() { return this._states.values(); }\n\n  getStateCount() { return this._states.size; }\n\n  addTransition(from, to, symbol)\n  {\n    if (!this.hasState(from)) throw new Error(\"Trying to add a transition to unknown state with label \\'\" + state.getStateLabel() + \"\\'\");\n    if (!this.hasState(to)) throw new Error(\"Trying to add a transition to unknown state with label \\'\" + state.getStateLabel() + \"\\'\");\n    if (!symbol) throw new Error(\"Cannot add transition for null symbol - use the empty symbol instead\");\n\n    const transitionKey = from.getStateID() + \"->\" + to.getStateID();\n    if (this._transitions.has(transitionKey))\n    {\n      const transition = this._transitions.get(transitionKey);\n      if (!transition.hasSymbol(symbol))\n      {\n        transition.addSymbol(symbol);\n      }\n      else\n      {\n        //Didn't add anything...\n        return false;\n      }\n    }\n    else\n    {\n      this._transitions.set(transitionKey, new Transition(from, to, [symbol]));\n    }\n\n    //Add to alphabet...\n    this._incrSymbolCount(symbol);\n    return true;\n  }\n\n  removeTransition(from, to, symbol=null)\n  {\n    const transitionKey = from.getStateID() + \"->\" + to.getStateID();\n    if (!this._transitions.has(transitionKey)) return false;\n\n    const transition = this._transitions.get(transitionKey);\n    const symbols = transition.getSymbols();\n\n    //If deleting a specific symbol...\n    if (symbol)\n    {\n      const index = symbols.indexOf(symbol);\n      if (index >= 0)\n      {\n        //Update symbol counts...\n        this._decrSymbolCount(symbol);\n\n        symbols.splice(index, 1);\n        if (symbols.length <= 0) this._transitions.delete(transitionKey);\n        return true;\n      }\n      else\n      {\n        return false;\n      }\n    }\n    //If deleting a all associated symbols...\n    else\n    {\n      //Update symbol counts...\n      for(const symbol of symbols)\n      {\n        this._decrSymbolCount(symbol);\n      }\n\n      //Remove transition\n      this._transitions.delete(transitionKey);\n      return true;\n    }\n  }\n\n  hasTransition(from, to, symbol=null)\n  {\n    const transitionKey = from.getStateID() + \"->\" + to.getStateID();\n    if (!this._transitions.has(transitionKey)) return false;\n    //Not checking for specific symbols...\n    if (!symbol) return true;\n\n    //Find the symbol...\n    return this._transitions.get(transitionKey).hasSymbol(symbol);\n  }\n\n  getTransitionSymbols(from, to)\n  {\n    const transitionKey = from.getStateID() + \"->\" + to.getStateID();\n    if (!this._transitions.has(transitionKey)) return null;\n    return this._transitions.get(transitionKey).getSymbols();\n  }\n\n  getTransitions() { return this._transitions.values(); }\n\n  _incrSymbolCount(symbol)\n  {\n    //Don't add empty symbol to the alphabet\n    if (symbol === EMPTY_SYMBOL) return;\n\n    const symbolCount = this._alphabet.get(symbol) || 0;\n    this._alphabet.set(symbol, symbolCount + 1);\n  }\n\n  _decrSymbolCount(symbol)\n  {\n    if (!this._alphabet.has(symbol)) throw new Error(\"Unable to find valid transition symbol in alphabet\");\n\n    //Empty symbol is not in the alphabet\n    if (symbol === EMPTY_SYMBOL) return;\n\n    const symbolCount = this._alphabet.get(symbol);\n    //Delete the symbol, since it is no longer used...\n    if (symbolCount <= 1)\n    {\n      if (!this.isCustomSymbol(symbol))\n      {\n        //Regular symbols are removed if unused...\n        this._alphabet.delete(symbol);\n      }\n      else\n      {\n        //Custom symbols stay in the alphabet, even if unused...\n        this._alphabet.set(symbol, 0);\n      }\n    }\n    else\n    {\n      //Still being used by someone...\n      this._alphabet.set(symbol, symbolCount - 1);\n    }\n  }\n\n  changeSymbol(symbol, newSymbol)\n  {\n    if (symbol === EMPTY_SYMBOL) throw new Error(\"Cannot change the empty symbol\");\n    if (newSymbol === EMPTY_SYMBOL) throw new Error(\"Cannot change to the empty symbol\");\n    if (this._alphabet.has(newSymbol)) throw new Error(\"Cannot change symbol to another existing symbol\");\n\n    for(const transition of this._transitions.values())\n    {\n      const symbols = transition.getSymbols();\n      const index = symbols.indexOf(symbol);\n\n      //Change the symbol from the transition\n      if (index >= 0)\n      {\n        symbols[index] = newSymbol;\n      }\n    }\n\n    //Exchange symbol counts...\n    const count = this._alphabet.get(symbol);\n    this._alphabet.set(newSymbol, count);\n    this._alphabet.delete(symbol);\n\n    //Check if custom symbol...\n    if (this._customSymbols.has(symbol))\n    {\n      this._customSymbols.delete(symbol);\n      this._customSymbols.add(newSymbol);\n    }\n  }\n\n  removeSymbol(symbol)\n  {\n    const cache = [];\n    for(const [key, transition] of this._transitions.entries())\n    {\n      const symbols = transition.getSymbols();\n      const index = symbols.indexOf(symbol);\n\n      //Delete the symbol from the transition\n      if (index >= 0)\n      {\n        symbols.splice(index, 1);\n\n        //If no more symbols, make sure to delete it from the map later...\n        if (symbols.length <= 0)\n        {\n          cache.push(key);\n        }\n      }\n    }\n\n    //Delete any transitions that have no more symbols...\n    for(const transitionKey of cache)\n    {\n      this._transitions.delete(transitionKey);\n    }\n\n    //Remove from alphabet if possible...\n    if (symbol !== EMPTY_SYMBOL)\n    {\n      if (this._customSymbols.has(symbol))\n      {\n        this._alphabet.set(symbol, 0);\n      }\n      else\n      {\n        this._alphabet.delete(symbol);\n      }\n    }\n  }\n\n  setCustomSymbol(symbol, custom=true)\n  {\n    if (symbol === EMPTY_SYMBOL) throw new Error(\"Cannot change the empty symbol as a custom symbol\");\n\n    if (custom)\n    {\n      if (!this._customSymbols.has(symbol))\n      {\n        this._customSymbols.add(symbol);\n\n        //Add symbol to alphabet if missing...\n        if (!this._alphabet.has(symbol)) this._alphabet.set(symbol, 0);\n      }\n    }\n    else\n    {\n      if (this._customSymbols.has(symbol))\n      {\n        this._customSymbols.delete(symbol);\n\n        //If symbol is unused, delete it\n        if (this._alphabet.has(symbol) && this._alphabet.get(symbol) <= 0) this._alphabet.delete(symbol)\n      }\n    }\n  }\n\n  isCustomSymbol(symbol)\n  {\n    return this._customSymbols.has(symbol);\n  }\n\n  getCustomSymbols()\n  {\n    return this._customSymbols;\n  }\n\n  clearCustomSymbols()\n  {\n    this._customSymbols.clear();\n  }\n\n  isUsedSymbol(symbol)\n  {\n    return this._alphabet.has(symbol) && this._alphabet.get(symbol) > 0;\n  }\n\n  isSymbol(symbol)\n  {\n    return this._alphabet.has(symbol);\n  }\n\n  getAlphabet()\n  {\n    return this._alphabet.keys();\n  }\n\n  setStartState(state)\n  {\n    const stateID = state.getStateID();\n    if (!this._states.has(stateID))\n    {\n      //Add it to the state set\n      this._states.set(stateID, state);\n    }\n    this._startState = state;\n  }\n  isStartState(state) { return this._startState === state; }\n  getStartState() { return this._startState; }\n\n  setFinalState(state, final=true)\n  {\n    //Make final\n    if (final)\n    {\n      //If missing from state set, add it in...\n      if (!this._states.has(state.getStateID()))\n      {\n        this.addState(state);\n      }\n\n      this._finalStates.add(state);\n    }\n    else\n    {\n      //If missing from state set, it would be effectively the same thing as\n      //calling addState(state). So due to ambiguity, don't do it.\n      if (!this._states.has(state.getStateID())) throw new Error(\"Trying to change final for missing state \\'\" + state.getStateLabel() + \"\\'\");\n\n      this._finalStates.delete(state);\n    }\n  }\n  isFinalState(state) { return this._finalStates.has(state); }\n  getFinalStates() { return this._finalStates; }\n\n  doTransition(state, symbol, forceNondeterminism=false, dst=[])\n  {\n    if (!state) return dst;\n    if (!(state instanceof State)) throw new Error(\"Invalid state instance type \\'\" + (typeof state) + \"\\'\");\n    if (!this._states.has(state.getStateID())) throw new Error(\"Unable to find source state with id \\'\" + state.getStateID() + \"\\'\");\n\n    if (!symbol) symbol = EMPTY_SYMBOL;\n\n    const fromTransitionKey = state.getStateID() + \"->\";\n    for(const key of this._transitions.keys())\n    {\n      if (key.startsWith(fromTransitionKey))\n      {\n        const transition = this._transitions.get(key);\n        if (transition.hasSymbol(symbol))\n        {\n          dst.push(transition.getDestinationState());\n\n          //There will only ever be 1 transition for deterministic machines\n          if (!forceNondeterminism && this._deterministic) return dst;\n        }\n      }\n    }\n    return dst;\n  }\n\n  doTerminalTransition(state, symbol, dst=[])\n  {\n    if (!state) return dst;\n    if (!this._states.has(state.getStateID())) throw new Error(\"Unable to find source state with id \\'\" + state.getStateID() + \"\\'\");\n\n    if (!symbol) symbol = EMPTY_SYMBOL;\n\n    const fromTransitionKey = state.getStateID() + \"->\";\n    for(const key of this._transitions.keys())\n    {\n      if (key.startsWith(fromTransitionKey))\n      {\n        const transition = this._transitions.get(key);\n        if (transition.hasSymbol(symbol))\n        {\n          const toState = transition.getDestinationState();\n          const result = this.doClosureTransition(toState);\n          for(const s of result)\n          {\n            if (!dst.includes(s)) dst.push(s);\n          }\n        }\n      }\n    }\n\n    return dst;\n  }\n\n  doClosureTransition(state, dst=[])\n  {\n    if (!state) return dst;\n\n    dst.push(state);\n    for(let i = 0; i < dst.length; ++i)\n    {\n      const transitions = this.getOutgoingTransitions(dst[i]);\n      for(const transition of transitions)\n      {\n        if (transition[SYMBOL_INDEX] === EMPTY_SYMBOL)\n        {\n          const toState = transition[TO_STATE_INDEX];\n          if (!dst.includes(toState))\n          {\n            dst.push(toState);\n          }\n        }\n      }\n    }\n    return dst;\n  }\n\n  getOutgoingTransitions(state, dst=[])\n  {\n    if (!state) return dst;\n    if (!this._states.has(state.getStateID())) throw new Error(\"Unable to find source state with id \\'\" + state.getStateID() + \"\\'\");\n\n    const fromTransitionKey = state.getStateID() + \"->\";\n    for(const key of this._transitions.keys())\n    {\n      if (key.startsWith(fromTransitionKey))\n      {\n        const transition = this._transitions.get(key);\n        const symbols = transition.getSymbols();\n        for(const symbol of symbols)\n        {\n          dst.push([state, symbol, transition.getDestinationState()]);\n        }\n      }\n    }\n\n    return dst;\n  }\n\n  getHashCode()\n  {\n    let string = \"\";\n    for(const state of this._states.values())\n    {\n      string += state.getHashString() + \",\";\n    }\n    string += \"|\";\n    for(const transition of this._transitions.values())\n    {\n      string += transition.getHashString() + \",\";\n    }\n    string += \"|\";\n    for(const state of this._finalStates)\n    {\n      string += state.getHashString();\n    }\n    string += \"|\";\n    string += this._startState ? this._startState.getHashString() : \"\";\n    string += \"|\";\n    string += this._deterministic ? \"d\" : \"n\";\n    return stringHash(string);\n  }\n}\n\nexport default FSA;\n","class AbstractGraphExporter\n{\n  constructor() {}\n\n  importFromData(data, module)\n  {\n    throw new Error(\"Unsupported import for type \\'\" + this.getFileType() + \"\\'\");\n  }\n\n  exportToData(module)\n  {\n    throw new Error(\"Unsupported export for type \\'\" + this.getFileType() + \"\\'\");\n  }\n\n  doesSupportData()\n  {\n    return false;\n  }\n\n  importFromFile(fileBlob, module)\n  {\n    throw new Error(\"Unsupported import for type \\'\" + this.getFileType() + \"\\'\");\n  }\n\n  exportToFile(filename, module)\n  {\n    throw new Error(\"Unsupported export for type \\'\" + this.getFileType() + \"\\'\");\n  }\n\n  doesSupportFile()\n  {\n    return false;\n  }\n\n  canImport(module)\n  {\n    return false;\n  }\n\n  canExport(module)\n  {\n    return true;\n  }\n\n  getTitle()\n  {\n    return this.getLabel();\n  }\n\n  getIconClass()\n  {\n    return null;\n  }\n\n  getLabel()\n  {\n    return \"Export as \" + this.getFileType().toUpperCase();\n  }\n\n  getFileType()\n  {\n    throw new Error(\"Unknown file type for exporter\");\n  }\n}\n\nexport default AbstractGraphExporter;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M7 10l5 5 5-5z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M7 14l5-5 5 5z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './PanelSection.css';\n\nimport IconButton from 'experimental/components/IconButton.js';\nimport TinyDownIcon from 'experimental/iconset/TinyDownIcon.js';\nimport TinyUpIcon from 'experimental/iconset/TinyUpIcon.js';\n\nclass PanelSection extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.state = {\n      open: props.initial || false\n    };\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e)\n  {\n    this.setState((prev, props) => {\n      return {open: !prev.open};\n    })\n  }\n\n  //Override\n  componentDidUpdate()\n  {\n    if (this.state.open && this.props.disabled)\n    {\n      this.setState({open: false});\n    }\n  }\n\n  //Override\n  render()\n  {\n    const isOpen = this.state.open;\n    const isDisabled = this.props.disabled || React.Children.count(this.props.children) <= 0;\n    const isFull = this.props.full;\n    const title = this.props.title;\n    return (\n      <section id={this.props.id}\n        className={Style.section_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <IconButton className={Style.section_header}\n          title={title}\n          disabled={isDisabled}\n          onClick={this.onClick}>\n          {!isOpen ? <TinyDownIcon/> : <TinyUpIcon/>}\n        </IconButton>\n        <div className={Style.section_content_container +\n          (isOpen ? \" open \" : \"\") +\n          (isFull ? \" full \" : \"\")}>\n          <div className={Style.section_content}>\n            {this.props.children}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default PanelSection;\n","import {guid} from 'util/MathHelper.js';\n\nclass Notification\n{\n  constructor(notificationManager, message, layoutID, tags, props)\n  {\n    this._notificationManager = notificationManager;\n    this._message = message;\n    this._layoutID = layoutID;\n    this._tags = tags;\n    this._props = props;\n    this._id = guid();\n  }\n\n  close() { this._notificationManager.removeNotification(this); }\n  hasTag(tag) { return this._tags.includes(tag); }\n\n  getMessage() { return this._message; }\n  getLayoutID() { return this._layoutID; }\n  getTags() { return this._tags; }\n  getProps() { return this._props; }\n  getID() { return this._id; }\n  getNotificationManager() { return this._notificationManager; }\n}\n\nexport default Notification;\n","import React from 'react';\nimport Notification from './Notification.js';\n\nimport DefaultNotificationLayout, {\n  STYLE_TYPE_DEFAULT,\n  STYLE_TYPE_WARNING,\n  STYLE_TYPE_ERROR,\n  STYLE_TYPE_SUCCESS\n} from './components/DefaultNotificationLayout.js';\n\nexport const DEFAULT_LAYOUT_ID = \"default\";\nexport const WARNING_LAYOUT_ID = \"warning\";\nexport const ERROR_LAYOUT_ID = \"error\";\nexport const SUCCESS_LAYOUT_ID = \"success\";\n\nclass NotificationManager\n{\n  constructor()\n  {\n    this._layouts = new Map();\n    this._notifications = [];\n  }\n\n  registerNotificationLayout(layoutID, notificationLayout)\n  {\n    this._layouts.set(layoutID, notificationLayout);\n    return this;\n  }\n\n  unregisterNotificationLayout(layoutID)\n  {\n    this._layouts.delete(layoutID);\n    return this;\n  }\n\n  pushNotification(message, layoutID=null, tags=[], props={}, replace=true)\n  {\n    if (replace)\n    {\n      this.clearNotifications(tags);\n    }\n\n    const notification = new Notification(this, message, layoutID, tags, props);\n    this._notifications.push(notification);\n    return notification;\n  }\n\n  popNotification(tags=null)\n  {\n    if (this._notifications.length <= 0) return null;\n\n    if (Array.isArray(tags))\n    {\n      for(let i = this._notifications.length - 1; i >= 0; --i)\n      {\n        const notification = this._notifications[i];\n        let flag = true;\n        for(const tag of tags)\n        {\n          if (!notification.hasTag(tag))\n          {\n            flag = false;\n            break;\n          }\n        }\n        if (flag)\n        {\n          this._notifications.splice(i, 1);\n          return notification;\n        }\n      }\n    }\n    else if (typeof tags === 'string')\n    {\n      for(let i = 0, length = this._notifications.length; i < length; ++i)\n      {\n        const notification = this._notifications[i];\n        if (notification.hasTag(tags))\n        {\n          this._notifications.splice(i, 1);\n          return notification;\n        }\n      }\n    }\n    else\n    {\n      return this._notifications.pop();\n    }\n  }\n\n  removeNotification(notification)\n  {\n    const i = this._notifications.indexOf(notification);\n    if (i >= 0)\n    {\n      this._notifications.splice(i, 1);\n    }\n  }\n\n  clearNotifications(tags=null)\n  {\n    if (this._notifications.length <= 0) return;\n\n    if (Array.isArray(tags))\n    {\n      for(let i = this._notifications.length - 1; i >= 0; --i)\n      {\n        const notification = this._notifications[i];\n        let flag = true;\n        for(const tag of tags)\n        {\n          if (!notification.hasTag(tag))\n          {\n            flag = false;\n            break;\n          }\n        }\n        if (flag)\n        {\n          this._notifications.splice(i, 1);\n        }\n      }\n    }\n    else if (typeof tags === 'string')\n    {\n      for(let i = this._notifications.length - 1; i >= 0; --i)\n      {\n        const notification = this._notifications[i];\n        if (notification.hasTag(tags))\n        {\n          this._notifications.splice(i, 1);\n        }\n      }\n    }\n    else\n    {\n      this._notifications.length = 0;\n    }\n  }\n\n  //DuckType(SessionListener)\n  onSessionStart(session)\n  {\n    //Overwrite any changes to default notifications...\n    this.registerNotificationLayout(DEFAULT_LAYOUT_ID, props => <DefaultNotificationLayout styleType={STYLE_TYPE_DEFAULT} {...props}/>);\n    this.registerNotificationLayout(WARNING_LAYOUT_ID, props => <DefaultNotificationLayout styleType={STYLE_TYPE_WARNING} {...props}/>);\n    this.registerNotificationLayout(ERROR_LAYOUT_ID, props => <DefaultNotificationLayout styleType={STYLE_TYPE_ERROR} {...props}/>);\n    this.registerNotificationLayout(SUCCESS_LAYOUT_ID, props => <DefaultNotificationLayout styleType={STYLE_TYPE_SUCCESS} {...props}/>);\n  }\n\n  //DuckType(SessionListener)\n  onSessionStop(session)\n  {\n    this.clearNotifications();\n  }\n\n  hasNotificationLayout(layoutID)\n  {\n    return this._layouts.has(layoutID);\n  }\n\n  getNotificationLayout(layoutID)\n  {\n    return this._layouts.get(layoutID);\n  }\n\n  getNotifications()\n  {\n    return this._notifications;\n  }\n\n  isEmpty()\n  {\n    return this._notifications.length <= 0;\n  }\n}\n\nexport default NotificationManager;\n","import React from 'react';\nimport Style from './PanelSwitch.css';\n\nclass PanelSwitch extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    if (!props.id) throw new Error(\"Must specify id\");\n  }\n\n  //Override\n  render()\n  {\n    const id = this.props.id;\n    const disabled = this.props.disabled;\n    const checked = this.props.checked;\n    const onChange = this.props.onChange;\n\n    return (\n      <div id={id}\n        className={Style.switch_container +\n          (disabled ? \" disabled \" : \"\") +\n          (checked ? \" active \" : \"\") +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <label className={Style.panel_switch}\n          style={this.props.style}>\n          <input type=\"checkbox\" id={id + \"-switch\"} checked={checked} onChange={onChange} disabled={disabled}/>\n          <div className={Style.switch_slider}></div>\n        </label>\n        <label className={Style.switch_label}\n          htmlFor={id + \"-switch\"}>\n          {this.props.title}\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default PanelSwitch;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M9,16V10H5L12,3L19,10H15V16H9M5,20V18H19V20H5Z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 56 56\">\n        <path fill=\"#E9E9E0\" d=\"M36.985,0H7.963C7.155,0,6.5,0.655,6.5,1.926V55c0,0.345,0.655,1,1.463,1h40.074 c0.808,0,1.463-0.655,1.463-1V12.978c0-0.696-0.093-0.92-0.257-1.085L37.607,0.257C37.442,0.093,37.218,0,36.985,0z\"/>\n        <polygon fill=\"#D9D7CA\" points=\"37.5,0.151 37.5,12 49.349,12 \t\"/>\n        <path fill=\"#9777A8\" d=\"M48.037,56H7.963C7.155,56,6.5,55.345,6.5,54.537V39h43v15.537C49.5,55.345,48.845,56,48.037,56z\"/>\n        <path fill=\"#FFFFFF\" d={\"M17.021,42.719v7.848c0,0.474-0.087,0.873-0.26,1.196s-0.405,0.583-0.697,0.779 s-0.627,0.333-1.005,0.41c-0.378,0.077-0.768,0.116-1.169,0.116c-0.2,0-0.436-0.021-0.704-0.062s-0.547-0.104-0.834-0.191 s-0.563-0.185-0.827-0.294s-0.487-0.232-0.67-0.369l0.697-1.107c0.091,0.063,0.221,0.13,0.39,0.198s0.354,0.132,0.554,0.191 s0.41,0.111,0.629,0.157s0.424,0.068,0.615,0.068c0.483,0,0.868-0.094,1.155-0.28s0.439-0.504,0.458-0.95v-7.711H17.021z\"}/>\n        <path fill=\"#FFFFFF\" d={\"M25.184,50.238c0,0.364-0.075,0.718-0.226,1.06s-0.362,0.643-0.636,0.902s-0.61,0.467-1.012,0.622 s-0.856,0.232-1.367,0.232c-0.219,0-0.444-0.012-0.677-0.034s-0.467-0.062-0.704-0.116c-0.237-0.055-0.463-0.13-0.677-0.226 s-0.398-0.212-0.554-0.349l0.287-1.176c0.128,0.073,0.289,0.144,0.485,0.212s0.398,0.132,0.608,0.191s0.419,0.107,0.629,0.144 s0.405,0.055,0.588,0.055c0.556,0,0.982-0.13,1.278-0.39s0.444-0.645,0.444-1.155c0-0.31-0.104-0.574-0.314-0.793 s-0.472-0.417-0.786-0.595s-0.654-0.355-1.019-0.533s-0.706-0.388-1.025-0.629s-0.583-0.526-0.793-0.854s-0.314-0.738-0.314-1.23 c0-0.446,0.082-0.843,0.246-1.189s0.385-0.641,0.663-0.882s0.602-0.426,0.971-0.554s0.759-0.191,1.169-0.191 c0.419,0,0.843,0.039,1.271,0.116s0.774,0.203,1.039,0.376c-0.055,0.118-0.118,0.248-0.191,0.39s-0.142,0.273-0.205,0.396 s-0.118,0.226-0.164,0.308s-0.073,0.128-0.082,0.137c-0.055-0.027-0.116-0.063-0.185-0.109s-0.166-0.091-0.294-0.137 s-0.296-0.077-0.506-0.096s-0.479-0.014-0.807,0.014c-0.183,0.019-0.355,0.07-0.52,0.157s-0.31,0.193-0.438,0.321 s-0.228,0.271-0.301,0.431s-0.109,0.313-0.109,0.458c0,0.364,0.104,0.658,0.314,0.882s0.47,0.419,0.779,0.588 s0.647,0.333,1.012,0.492s0.704,0.354,1.019,0.581s0.576,0.513,0.786,0.854S25.184,49.7,25.184,50.238z\"}/>\n        <path fill=\"#FFFFFF\" d={\"M35.082,47.914c0,0.848-0.107,1.595-0.321,2.242s-0.511,1.185-0.889,1.613s-0.82,0.752-1.326,0.971 s-1.06,0.328-1.661,0.328s-1.155-0.109-1.661-0.328s-0.948-0.542-1.326-0.971s-0.675-0.966-0.889-1.613s-0.321-1.395-0.321-2.242 s0.107-1.593,0.321-2.235s0.511-1.178,0.889-1.606s0.82-0.754,1.326-0.978s1.06-0.335,1.661-0.335s1.155,0.111,1.661,0.335 s0.948,0.549,1.326,0.978s0.675,0.964,0.889,1.606S35.082,47.066,35.082,47.914z M30.844,51.729c0.337,0,0.658-0.066,0.964-0.198 s0.579-0.349,0.82-0.649s0.431-0.695,0.567-1.183s0.21-1.082,0.219-1.784c-0.009-0.684-0.08-1.265-0.212-1.743 s-0.314-0.873-0.547-1.183s-0.497-0.533-0.793-0.67s-0.608-0.205-0.937-0.205c-0.337,0-0.658,0.063-0.964,0.191 s-0.579,0.344-0.82,0.649s-0.431,0.699-0.567,1.183c-0.137,0.483-0.21,1.075-0.219,1.777c0.009,0.684,0.08,1.267,0.212,1.75 s0.314,0.877,0.547,1.183s0.497,0.528,0.793,0.67S30.516,51.729,30.844,51.729z\"}/>\n        <path fill=\"#FFFFFF\" d=\"M44.68,42.924V53h-1.668l-3.951-6.945V53h-1.668V42.924h1.668l3.951,6.945v-6.945H44.68z\"/>\n        <path fill=\"#9777A8\" d=\"M19.5,19v-4c0-0.551,0.448-1,1-1c0.553,0,1-0.448,1-1s-0.447-1-1-1c-1.654,0-3,1.346-3,3v4 c0,1.103-0.897,2-2,2c-0.553,0-1,0.448-1,1s0.447,1,1,1c1.103,0,2,0.897,2,2v4c0,1.654,1.346,3,3,3c0.553,0,1-0.448,1-1 s-0.447-1-1-1c-0.552,0-1-0.449-1-1v-4c0-1.2-0.542-2.266-1.382-3C18.958,21.266,19.5,20.2,19.5,19z\"/>\n        <circle fill=\"#9777A8\" cx=\"27.5\" cy=\"18.5\" r=\"1.5\"/>\n        <path fill=\"#9777A8\" d=\"M39.5,21c-1.103,0-2-0.897-2-2v-4c0-1.654-1.346-3-3-3c-0.553,0-1,0.448-1,1s0.447,1,1,1 c0.552,0,1,0.449,1,1v4c0,1.2,0.542,2.266,1.382,3c-0.84,0.734-1.382,1.8-1.382,3v4c0,0.551-0.448,1-1,1c-0.553,0-1,0.448-1,1 s0.447,1,1,1c1.654,0,3-1.346,3-3v-4c0-1.103,0.897-2,2-2c0.553,0,1-0.448,1-1S40.053,21,39.5,21z\"/>\n        <path fill=\"#9777A8\" d=\"M27.5,24c-0.553,0-1,0.448-1,1v3c0,0.552,0.447,1,1,1s1-0.448,1-1v-3 C28.5,24.448,28.053,24,27.5,24z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M13.49 5.48c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm-3.6 13.9l1-4.4 2.1 2v6h2v-7.5l-2.1-2 .6-3c1.3 1.5 3.3 2.5 5.5 2.5v-2c-1.9 0-3.5-1-4.3-2.4l-1-1.6c-.4-.6-1-1-1.7-1-.3 0-.5.1-.8.1l-5.2 2.2v4.7h2v-3.4l1.8-.7-1.6 8.1-4.9-1-.4 2 7 1.4z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './IconUploadButton.css';\n\nimport IconButton from './IconButton.js';\n\nclass IconUploadButton extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.onFileUpload = this.onFileUpload.bind(this);\n  }\n\n  onFileUpload(e)\n  {\n    const files = e.target.files;\n    if (files.length > 0)\n    {\n      if (this.props.onUpload) this.props.onUpload(files[0]);\n\n      //Makes sure you can upload the same file again.\n      e.target.value = \"\";\n    }\n  }\n\n  //Override\n  render()\n  {\n    const accept = this.props.accept;\n\n    return (\n      <IconButton id={this.props.id}\n        className={Style.upload_button +\n          \" \" + this.props.className}\n        style={this.props.style}\n        title={this.props.title}\n        disabled={this.props.disabled}>\n        <input type=\"file\" name=\"import\"\n          className={Style.upload_input}\n          disabled={this.props.disabled}\n          accept={accept}\n          onChange={this.onFileUpload}/>\n        {this.props.children}\n      </IconButton>\n    );\n  }\n}\n\nexport default IconUploadButton;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","export const CTRL_KEY = 'Control';\nexport const META_KEY = 'Meta';\nexport const ALT_KEY = 'Alt';\nexport const SHIFT_KEY = 'Shift';\n//NOTE: For more keys, refer to http://keycode.info/\n\nclass HotKeyManager\n{\n  constructor()\n  {\n    this._hotkeys = [];\n    this._cachedEvent = {\n      ctrlKey: false,\n      metaKey: false,\n      altKey: false,\n      shiftKey: false,\n      code: null\n    };\n    this._prevHotKey = null;\n    this._repeatCount = 0;\n    this._enabled = false;\n\n    this._altHotkey = null;\n\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyUp = this.onKeyUp.bind(this);\n  }\n\n  registerHotKey(name, keys, callback)\n  {\n    if (!Array.isArray(keys)) throw new Error(\"Must be an array of key codes\");\n    const ctrlIndex = keys.indexOf(CTRL_KEY);\n    if (ctrlIndex >= 0) keys.splice(ctrlIndex, 1);\n    const metaIndex = keys.indexOf(META_KEY);\n    if (metaIndex >= 0) keys.splice(metaIndex, 1);\n    const altIndex = keys.indexOf(ALT_KEY);\n    if (altIndex >= 0) keys.splice(altIndex, 1);\n    const shiftIndex = keys.indexOf(SHIFT_KEY);\n    if (shiftIndex >= 0) keys.splice(shiftIndex, 1);\n    if (keys.length != 1) throw new Error(\"Multiple key operations not supported\");\n    const charKey = keys[0];\n\n    const ctrl = ctrlIndex >= 0 || metaIndex >= 0;\n    const alt = altIndex >= 0;\n    const shift = shiftIndex >= 0;\n\n    const result = {\n      name: name,\n      localizedKeys: (ctrl ? \"Ctrl + \" : \"\") +\n        (alt ? \"Alt + \" : \"\") +\n        (shift ? \"Shift + \" : \"\") +\n        charKey,\n      charKey: charKey,\n      ctrlKey: ctrl,\n      altKey: alt,\n      shiftKey: shift,\n      callback: callback\n    };\n\n    this._hotkeys.unshift(result);\n\n    return this;\n  }\n\n  //HACK: Cause hotkey manager does not allow 'control' hotkeys. This is the exception.\n  registerAltHotKey(name, callback)\n  {\n    if (this._altHotkey) throw new Error(\"Only one hotkey can exist for \\'Alt\\'\");\n\n    this._altHotkey = {\n      name: name,\n      localizedKeys: \"Alt\",\n      charKey: null,\n      ctrlKey: false,\n      altKey: true,\n      shiftKey: false,\n      callback: callback\n    };\n\n    return this;\n  }\n\n  //Override\n  onSessionStart(session)\n  {\n    window.addEventListener('keydown', this.onKeyDown);\n    window.addEventListener('keyup', this.onKeyUp);\n\n    this._enabled = true;\n  }\n\n  //Override\n  onSessionStop(session)\n  {\n    this._enabled = false;\n\n    this._prevHotKey = null;\n    this._repeatCount = 0;\n    this._hotkeys.length = 0;\n    this._altHotkey = null;\n\n    window.removeEventListener('keydown', this.onKeyDown);\n    window.removeEventListener('keyup', this.onKeyUp);\n  }\n\n  setEnabled(enabled)\n  {\n    this._enabled = enabled;\n  }\n\n  isEnabled()\n  {\n    return this._enabled;\n  }\n\n  findMatchingHotKey(e)\n  {\n    for(const hotkey of this._hotkeys)\n    {\n      if (matchesHotKeyEvent(e, hotkey)) return hotkey;\n    }\n    return null;\n  }\n\n  getCurrentHotKey()\n  {\n    return this._prevHotKey;\n  }\n\n  getCurrentHotKeyRepeatCount()\n  {\n    return this._repeatCount;\n  }\n\n  getCurrentlyPossibleHotKeys(dst=[])\n  {\n    const event = this._cachedEvent;\n    const eventCtrl = event.ctrlKey || event.metaKey;\n    const eventAlt = event.altKey;\n    const eventShift = event.shiftKey;\n    if (!eventCtrl && !eventAlt && !eventShift) return dst;\n    const eventKey = event.code;\n\n    let result = null;\n    for(const hotkey of this._hotkeys)\n    {\n      let flag = false;\n      if (eventCtrl ^ hotkey.ctrlKey)\n      {\n        //It's ok, but it is not a complete match...\n        if (!eventCtrl) flag = true;\n        //Nope.\n        else continue;\n      }\n      if (eventAlt ^ hotkey.altKey)\n      {\n        //It's ok, but it is not a complete match...\n        if (!eventAlt) flag = true;\n        //Nope.\n        else continue;\n      }\n      if (eventShift ^ hotkey.shiftKey)\n      {\n        //It's ok, but it is not a complete match...\n        if (!eventShift) flag = true;\n        //Nope.\n        else continue;\n      }\n\n      if (!flag && eventKey === hotkey.charKey)\n      {\n        result = hotkey;\n      }\n\n      dst.push(hotkey);\n    }\n\n    if (result) return result;\n    else return dst;\n  }\n\n  onKeyDown(e)\n  {\n    if (!this._enabled) return;\n\n    if (!e.repeat)\n    {\n      this.captureKeyEvent(e, false);\n\n      let result = this.findMatchingHotKey(this._cachedEvent);\n      if (!result && matchesHotKeyEvent(e, this._altHotkey)) result = this._altHotkey;\n\n      if (result)\n      {\n        if (this._prevHotKey === result)\n        {\n          ++this._repeatCount;\n        }\n        else\n        {\n          this._prevHotKey = result;\n          this._repeatCount = 0;\n        }\n\n        result.callback();\n\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    }\n  }\n\n  onKeyUp(e)\n  {\n    if (!this._enabled) return;\n\n    if (this.captureKeyEvent(e, true))\n    {\n      this._prevHotKey = null;\n      this._repeatCount = 0;\n    }\n  }\n\n  captureKeyEvent(e, isKeyUp=false)\n  {\n    this._cachedEvent.ctrlKey = e.ctrlKey;\n    this._cachedEvent.metaKey = e.metaKey;\n    this._cachedEvent.altKey = e.altKey;\n    this._cachedEvent.shiftKey = e.shiftKey;\n    this._cachedEvent.code = isKeyUp ? null : (e.code || null);\n    return isKeyUp && !(this._cachedEvent.ctrlKey || this._cachedEvent.metaKey || this._cachedEvent.altKey || this._cachedEvent.shiftKey);\n  }\n}\n\nexport default HotKeyManager;\n\nfunction matchesHotKeyEvent(e, hotkey)\n{\n  if (hotkey.ctrlKey !== (e.ctrlKey || e.metaKey)) return false;\n  if (hotkey.altKey !== e.altKey) return false;\n  if (hotkey.shiftKey !== e.shiftKey) return false;\n  if (hotkey.charKey && hotkey.charKey !== e.code) return false;\n  return true;\n}\n","class AbstractEventHandler\n{\n  constructor() {}\n\n  applyUndo(undoManager)\n  {\n    throw new Error(\"Undo operation for handler not supported\");\n  }\n\n  applyRedo(undoManager)\n  {\n    throw new Error(\"Redo operation for handler not supported\");\n  }\n}\n\nexport default AbstractEventHandler;\n","import React from 'react';\nimport Style from './PanelDivider.css';\n\nclass PanelDivider extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  //Override\n  render()\n  {\n    return (\n      <div id={this.props.id}\n        className={Style.panel_divider +\n          \" \" + this.props.className}\n        style={this.props.style}>\n      </div>\n    );\n  }\n}\n\nexport default PanelDivider;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M16.59 7.58L10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\n\nclass Icon extends React.Component\n{\n  constructor(props) { super(props); }\n\n  //Override\n  render()\n  {\n    return (\n      <svg id={this.props.id} className={this.props.className} style={this.props.style}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M19 8l-4 4h3c0 3.31-2.69 6-6 6-1.01 0-1.97-.25-2.8-.7l-1.46 1.46C8.97 19.54 10.43 20 12 20c4.42 0 8-3.58 8-8h3l-4-4zM6 12c0-3.31 2.69-6 6-6 1.01 0 1.97.25 2.8.7l1.46-1.46C15.03 4.46 13.57 4 12 4c-4.42 0-8 3.58-8 8H1l4 4 4-4H6z\"/>\n      </svg>\n    );\n  }\n}\nexport default Icon;\n","import React from 'react';\nimport Style from './PanelCheckbox.css';\n\nclass PanelCheckbox extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.state = {\n      checked: props.initial || false\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  setChecked(value)\n  {\n    this.setState({checked: value});\n  }\n\n  isChecked()\n  {\n    return this.state.checked;\n  }\n\n  onChange(e)\n  {\n    const checked = e.target.checked;\n    if (this.state.checked !== checked)\n    {\n      this.setState({checked: checked});\n    }\n  }\n\n  //Override\n  render()\n  {\n    return (\n      <div id={this.props.id}\n        className={Style.checkbox_container +\n          \" \" + this.props.className}\n        style={this.props.style}>\n        <input type=\"checkbox\" id={this.props.id + \"-checkbox\"}\n          name={this.props.id + \"-checkbox\"} value={this.props.value}\n          checked={this.state.checked}\n          disabled={this.props.disabled}\n          onChange={this.onChange}/>\n        <label htmlFor={this.props.id + \"-checkbox\"}>{this.props.title}</label>\n      </div>\n    );\n  }\n}\n\nexport default PanelCheckbox;\n","import FSA, { State } from '../FSA.js';\n\nexport function convertToNFA(fsa, dst=new FSA(false))\n{\n  if (!fsa.isDeterministic())\n  {\n    dst.copy(fsa);\n    return dst;\n  }\n\n  dst.setDeterministic(false);\n  return dst;\n}\n\nexport function convertToDFA(fsa, dst=new FSA(true))\n{\n  if (fsa.isDeterministic())\n  {\n    dst.copy(fsa);\n    return dst;\n  }\n\n  dst.setDeterministic(true);\n\n  const startState = fsa.getStartState();\n\n  const dfaData = {\n    nfaSource: fsa,\n    //To keep track of dfa states in terms of nfa sets\n    dfaStateMap: new Map(),\n    //Array of final dfa states\n    dfaFinalStates: [],\n    //To keep track of dfa transitions in terms of dfa states\n    dfaTransitionMap: new Map(),\n    //The resultant dfa start state\n    dfaStartState: null,\n    //The trap state for all missing transitions\n    dfaTrapState: null\n  };\n\n  //Make new DFA start state\n  const startStatesByClosure = fsa.doClosureTransition(startState);\n  dfaData.dfaStartState = getDFAStateFromNFAStates(startStatesByClosure, dfaData);\n  dfaData.dfaTrapState = getDFAStateFromNFAStates([], dfaData);\n\n  //For every state from the NFA's powerset, add it to DFA with correct transitions\n  const statePowerSet = getPowerSetOfStates(fsa.getStates());\n  for(const nfaStates of statePowerSet)\n  {\n    //As long as it is not the empty set...\n    if (nfaStates.length > 0)\n    {\n      expandNFAStatesToDFA(nfaStates, dfaData);\n    }\n  }\n\n  //Make sure any unused symbols are added as transitions for every state...\n  for(const dfaState of dfaData.dfaStateMap.values())\n  {\n    for(const symbol of fsa.getAlphabet())\n    {\n      //If transition for symbol does not exist...\n      const dfaTransitionKey = getDFATransitionKeyFromDFAStateAndSymbol(dfaState, symbol, dfaData);\n      if (!dfaData.dfaTransitionMap.has(dfaTransitionKey))\n      {\n        dfaData.dfaTransitionMap.set(dfaTransitionKey, [dfaState, symbol, dfaData.dfaTrapState]);\n      }\n    }\n  }\n\n  //Compiled dfa data to dst\n  dst.clear();\n  //Add states\n  for(const dfaState of dfaData.dfaStateMap.values())\n  {\n    dst.addState(dfaState);\n  }\n\n  //Set start state\n  dst.setStartState(dfaData.dfaStartState);\n  //Set final states\n  for(const finalState of dfaData.dfaFinalStates)\n  {\n    dst.setFinalState(finalState);\n  }\n  //Add transitions (will also add any symbols used to alphabet)\n  for(const transition of dfaData.dfaTransitionMap.values())\n  {\n    dst.addTransition(transition[0], transition[2], transition[1]);\n  }\n  return dst;\n}\n\nfunction expandNFAStatesToDFA(nfaStates, dfaData)\n{\n  let fromDFAState = getDFAStateFromNFAStates(nfaStates, dfaData);\n  let dfaState = null;\n\n  let nfaTerminals = [];\n\n  for(const symbol of dfaData.nfaSource.getAlphabet())\n  {\n    //Get all closed reachable states...\n    for(const fromNFAState of nfaStates)\n    {\n      dfaData.nfaSource.doTerminalTransition(fromNFAState, symbol, nfaTerminals);\n    }\n\n    //If has reachable states...\n    if (nfaTerminals.length > 0)\n    {\n      dfaState = getDFAStateFromNFAStates(nfaTerminals, dfaData);\n\n      //Create transition for reachable state\n      //Should guarantee to be unique for state and symbol pair\n      const dfaTransitionKey = getDFATransitionKeyFromDFAStateAndSymbol(fromDFAState, symbol, dfaData);\n      dfaData.dfaTransitionMap.set(dfaTransitionKey, [fromDFAState, symbol, dfaState]);\n    }\n\n    //Reset list\n    nfaTerminals.length = 0;\n  }\n}\n\nfunction getNFAStateKeyFromNFAStates(nfaStates, dfaData)\n{\n  let result = \"\";\n  for(const nfaState of dfaData.nfaSource.getStates())\n  {\n    if (nfaStates.includes(nfaState))\n    {\n      result += \"x\";\n    }\n    else\n    {\n      result += \"-\";\n    }\n  }\n  return result;\n}\n\nfunction getDFATransitionKeyFromDFAStateAndSymbol(dfaState, symbol, dfaData)\n{\n  return dfaState.getStateID() + \";\" + symbol;\n}\n\nfunction getDFAStateFromNFAStates(nfaStates, dfaData)\n{\n  const nfaStateKey = getNFAStateKeyFromNFAStates(nfaStates, dfaData);\n  let result = dfaData.dfaStateMap.get(nfaStateKey);\n\n  //If it doesn't exist, create it...\n  if (!result)\n  {\n    let final = false;\n    //Compute the label from nfa states in set notation...\n    let dfaStateLabel = \"{\";\n    for(const state of nfaStates)\n    {\n      if (dfaStateLabel.length > 1)\n      {\n        dfaStateLabel += \",\";\n      }\n      dfaStateLabel += state.getStateLabel();\n\n      //Check if nfa state is final state...\n      if (!final)\n      {\n        final = dfaData.nfaSource.isFinalState(state);\n      }\n    }\n    dfaStateLabel += \"}\";\n\n    //Create the state\n    result = new State(dfaStateLabel);\n    dfaData.dfaStateMap.set(nfaStateKey, result);\n\n    //If any nfa states is a final state, make dfa state final...\n    if (final)\n    {\n      dfaData.dfaFinalStates.push(result);\n    }\n  }\n\n  return result;\n}\n\nfunction getPowerSetOfStates(states)\n{\n  var result = [[]];\n\n  for(const state of states)\n  {\n    for(let i = 0, len = result.length; i < len; ++i)\n    {\n      result.push(result[i].concat(state));\n    }\n  }\n  return result;\n}\n","const MAX_COMPUTATION_STEPS = 1000;\n\nexport function solveFSA(fsa, input)\n{\n  if (typeof input === 'string') input = input[Symbol.iterator]();\n\n  if (fsa.isDeterministic())\n  {\n    //Solve if the DFA way...\n    let state = fsa.getStartState();\n    let symbol = null;\n\n    //Is testing null after assignment\n    while((symbol = input.next().value))\n    {\n      const states = fsa.doTransition(state, symbol);\n      if (states.length < 1) return false;\n      //DFA's should only return 1 output\n      state = states[0];\n    }\n    return fsa.isFinalState(state);\n  }\n  else\n  {\n    //Solve it the NFA way...\n    const cachedStates = [];\n    const cachedSymbols = [];\n\n    //Start with the start state...\n    const startState = fsa.getStartState();\n    //(index refers to the \"level\" of computation)\n    cachedStates.push({state: startState, index: 0});\n    //...and any state defined similarly by closure...\n    for(const relatedState of fsa.doClosureTransition(startState))\n    {\n      cachedStates.push({state: relatedState, index: 0});\n    }\n\n    //The next symbol to compute...\n    let symbol = null;\n\n    //Just to be safe from infinite loops...\n    let counter = 0;\n    while(cachedStates.length > 0)\n    {\n      symbol = input.next().value;\n      if (solveFSAByStep(fsa, symbol, cachedStates, cachedSymbols))\n      {\n        return true;\n      }\n\n      //HACK: This is to stop any infinite loops! This should be fixed in the future!\n      ++counter;\n      if (counter > MAX_COMPUTATION_STEPS)\n      {\n        return false;\n      }\n    }\n\n    return false;\n  }\n}\n\n//TODO: When an empty transition occurs, it does a closure transition.\n//The closure chain will be stored as a group\n//Any future transitions must not re-enter the group\nexport function solveFSAByStep(nfa, symbol, cachedStates, cachedSymbols)\n{\n  //initialize variables\n  let state = null;\n  let nextStates = [];\n  let nextIndex = 0;\n\n  if (symbol)\n  {\n    cachedSymbols.push(symbol);\n  }\n\n  for(const cstate of cachedStates)\n  {\n    state = cstate.state;\n    symbol = cstate.index < cachedSymbols.length ? cachedSymbols[cstate.index] : null;\n\n    if (symbol)\n    {\n      //Read to next state...\n      nextIndex = cstate.index + 1;\n      for(const nextState of nfa.doTerminalTransition(state, symbol))\n      {\n        nextStates.push({state: nextState, index: nextIndex});\n      }\n    }\n    else\n    {\n      if (nfa.isFinalState(state)) return true;\n    }\n\n    //Read none to next state...\n    nextIndex = cstate.index;\n  }\n  cachedStates.length = 0\n  cachedStates.push(...nextStates);\n  return false;\n}\n","import FSA from '../FSA.js';\n\nexport function invertDFA(fsa, dst=new FSA(true))\n{\n  dst.copy(fsa);\n\n  const toBeRejected = new Set(dst.getFinalStates());\n  for(const state of dst.getStates())\n  {\n    if (toBeRejected.has(state))\n    {\n      dst.setFinalState(state, false);\n    }\n    else\n    {\n      dst.setFinalState(state, true);\n    }\n  }\n\n  return dst;\n};\n","export {convertToDFA, convertToNFA} from './util/ConvertFSA.js';\nexport {solveFSA, solveFSAByStep} from './util/SolveFSA.js';\nexport {isEquivalentFSA, isEquivalentDFA} from './util/EqualFSA.js';\nexport {invertDFA} from './util/InvertDFA.js';\nexport {intersectFSA, intersectDFA} from './util/IntersectFSA.js';\n","import AbstractMachineBuilder from 'modules/abstract/AbstractMachineBuilder.js';\nimport FSA, { EMPTY_SYMBOL, State } from './FSA.js';\nimport FSANode from 'modules/fsa/graph/FSANode.js';\nimport FSAEdge, { EMPTY_CHAR } from 'modules/fsa/graph/FSAEdge.js';\n\nexport const ERROR_UNREACHABLE_STATE = \"unreachable_state\";\nexport const ERROR_DUPLICATE_STATE = \"duplicate_state\";\nexport const ERROR_INCOMPLETE_TRANSITION = \"incomplete_transition\";\nexport const ERROR_DUPLICATE_TRANSITION = \"duplicate_transition\";\nexport const ERROR_MISSING_TRANSITION = \"missing_transition\";\nexport const ERROR_EMPTY_TRANSITION = \"empty_transition\";\n\nclass FSABuilder extends AbstractMachineBuilder\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._machine = new FSA();\n\t}\n\n\t//Override\n\tattemptBuild(graph, dst, errors=[], warnings=[])\n\t{\n\t\terrors.length = 0;\n\t\twarnings.length = 0;\n\n\t\tconst deterministic = dst.isDeterministic();\n\t\tdst.clear();\n\n\t\tconst nodeLabels = new Map();\n\t\tconst nodeOutgoings = new Map();\n\t\tconst edgeSymbols = new Set();\n\t\tconst edgePlaceholders = [];\n\t\tconst edgeEmpties = [];\n\n\t\tconst graphNodes = graph.getNodes();\n\t\tconst graphEdges = graph.getEdges();\n\t\tconst graphStart = graph.getStartNode();\n\n\t\tfor (const node of graphNodes)\n\t\t{\n\t\t\tconst nodeLabel = node.getNodeLabel();\n\t\t\tconst state = new State(nodeLabel, node);\n\t\t\tdst.addState(state);\n\n\t\t\tif (node.getNodeAccept())\n\t\t\t{\n\t\t\t\tdst.setFinalState(state, true);\n\t\t\t}\n\n\t\t\tif (graphStart === node)\n\t\t\t{\n\t\t\t\tdst.setStartState(state);\n\t\t\t}\n\n\t\t\t//Check for duplicate states\n\t\t\tif (nodeLabels.has(nodeLabel)) nodeLabels.get(nodeLabel).push(state);\n\t\t\telse nodeLabels.set(nodeLabel, [state]);\n\n\t\t\t//For duplicate transitions\n\t\t\tnodeOutgoings.set(state, new Map());\n\t\t}\n\n\t\tfor (const edge of graphEdges)\n\t\t{\n\t\t\tconst srcNode = edge.getSourceNode();\n\t\t\tconst dstNode = edge.getDestinationNode();\n\t\t\tif (!edge.isPlaceholder() && srcNode instanceof FSANode && dstNode instanceof FSANode)\n\t\t\t{\n\t\t\t\tconst srcState = dst.getStateByID(srcNode.getGraphElementID());\n\t\t\t\tconst dstState = dst.getStateByID(dstNode.getGraphElementID());\n\t\t\t\tif (!srcState || !dstState) throw new Error(\"Cannot find state for edge source/destination nodes - mismatch id\");\n\n\t\t\t\tconst edgeLabelSymbols = edge.getEdgeSymbolsFromLabel();\n\t\t\t\tfor (const symbol of edgeLabelSymbols)\n\t\t\t\t{\n\t\t\t\t\tif (!symbol) continue;\n\n          if (symbol === EMPTY_CHAR)\n          {\n\t\t\t\t\t\t//For empties\n            edgeEmpties.push(edge);\n          }\n          else\n          {\n\t\t\t\t\t\t//For used symbol\n            edgeSymbols.add(symbol);\n          }\n\n          //Translate all labels to symbols\n          let transitionSymbol;\n          switch(symbol)\n          {\n            case EMPTY_CHAR:\n              transitionSymbol = EMPTY_SYMBOL;\n              break;\n            default:\n              transitionSymbol = symbol;\n          }\n\n\t\t\t\t\t//For duplicate/missing transitions\n\t\t\t\t\tlet outSymbols = nodeOutgoings.get(srcState);\n\t\t\t\t\tlet outEdges = outSymbols.get(transitionSymbol);\n\t\t\t\t\tif (!outEdges) outSymbols.set(transitionSymbol, outEdges = new Array());\n\t\t\t\t\toutEdges.push(edge);\n\n          //Add to machine...\n\t\t\t\t\tdst.addTransition(srcState, dstState, transitionSymbol);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tedgePlaceholders.push(edge);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n    //Check for duplicate node labels\n\t\tfor(const [nodeLabel, sharedStates] of nodeLabels.entries())\n\t\t{\n\t\t\tif (sharedStates.length > 1)\n\t\t\t{\n\t\t\t\terrors.push({\n\t\t\t\t\tname: ERROR_DUPLICATE_STATE,\n\t\t\t\t\tlabel: nodeLabel,\n\t\t\t\t\tnodes: sharedStates.map(e => e.getSource())\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n    //Check for incomplete edge\n\t\tif (edgePlaceholders.length > 0)\n\t\t{\n\t\t\terrors.push({\n\t\t\t\tname: ERROR_INCOMPLETE_TRANSITION,\n\t\t\t\tedges: edgePlaceholders\n\t\t\t});\n\t\t}\n\n\t\t//Check for unreachable nodes\n\t\tconst unreachables = this.getUnreachableNodes(graph);\n\t\tif (unreachables && unreachables.length > 0)\n\t\t{\n\t\t\twarnings.push({\n\t\t\t\tname: ERROR_UNREACHABLE_STATE,\n\t\t\t\tnodes: unreachables\n\t\t\t});\n\t\t}\n\n\t\tif (deterministic)\n\t\t{\n\t    //Check for empty transitions\n\t\t\tif (edgeEmpties.length > 0)\n\t\t\t{\n\t\t\t\terrors.push({\n\t\t\t\t\tname: ERROR_EMPTY_TRANSITION,\n\t\t\t\t\tedges: edgeEmpties\n\t\t\t\t});\n\t\t\t}\n\n\t    //Check for duplicate edge labels\n\t\t\t//Check for missing edge labels\n\t\t\tconst missingSymbols = [];\n\t\t\tfor(const [state, edgeMapping] of nodeOutgoings.entries())\n\t\t\t{\n\t\t\t\tfor(const symbol of edgeSymbols)\n\t\t\t\t{\n\t\t\t\t\tconst edges = edgeMapping.get(symbol);\n\t\t\t\t\tif (edges)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (edges.length !== 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\t\tname: ERROR_DUPLICATE_TRANSITION,\n\t\t\t\t\t\t\t\tedges: edges,\n\t\t\t\t\t\t\t\tsymbol: symbol\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tmissingSymbols.push(symbol);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (missingSymbols.length > 0)\n\t\t\t\t{\n\t\t\t\t\terrors.push({\n\t\t\t\t\t\tname: ERROR_MISSING_TRANSITION,\n\t\t\t\t\t\tnode: state.getSource(),\n\t\t\t\t\t\tsymbols: missingSymbols.slice()\n\t\t\t\t\t});\n\t\t\t\t\tmissingSymbols.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (errors.length <= 0)\n\t\t{\n\t\t\t//Errors should be empty\n\t\t\treturn this._machine;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//Reasons are stored in errors\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tgetUnreachableNodes(graph)\n\t{\n\t\tconst openList = graph.getNodes().slice();\n\t\tconst index = openList.indexOf(startNode);\n\t\topenList.splice(index, 1);\n\n\t\tconst queue = [];\n\t\tqueue.push(startNode);\n\n\t\twhile(queue.length > 0)\n\t\t{\n\t\t\tconst nextNode = queue.pop();\n\n\t\t}\n\n    if (graph.getNodeCount() <= 1) return [];\n\n    const edges = graph.getEdges();\n    const nodes = graph.getNodes().slice();\n\t\tconst startNode = graph.getStartNode();\n\t\tconst startIndex = nodes.indexOf(startNode);\n\t\tif (startIndex < 0) return [];\n\t\tnodes.splice(startIndex, 1);\n\n    let nextNodes = [];\n    nextNodes.push(startNode);\n\n    while(nextNodes.length > 0)\n    {\n      const node = nextNodes.pop();\n      for(const edge of edges)\n      {\n        if (edge.getSourceNode() === node)\n        {\n          const i = nodes.indexOf(edge.getDestinationNode());\n          if (i >= 0)\n          {\n\t\t\t\t\t\tconst nextNode = nodes[i];\n            nodes.splice(i, 1);\n            nextNodes.push(nextNode);\n          }\n        }\n      }\n    }\n\n    return nodes;\n\t}\n\n\t//Override\n\tgetMachine()\n\t{\n\t\treturn this._machine;\n\t}\n}\n\n//Representations ->\n//Truth\n\n//MachineBuilder\n//Graph -> Machine (Compile, then return errors)\n//Any changes to graph does not warrant a change to machine\n//Machine Changes -> Graph (Apply them as they happen)\n//Any change to machine does.\n//Machine Conversion -> Graph (Reconstruct the entire graph from machine, then apply layout)\n\nexport default FSABuilder;\n","import AbstractMachineController from 'modules/abstract/AbstractMachineController.js';\n\nimport {EMPTY_SYMBOL} from 'modules/fsa2/machine/FSA.js';\nimport {EMPTY_CHAR, SYMBOL_SEPARATOR} from 'modules/fsa/graph/FSAEdge.js';\nimport FSABuilder from 'modules/fsa2/machine/FSABuilder.js';\nimport { convertToDFA, invertDFA } from 'modules/fsa2/machine/FSAUtils.js';\n\nimport GraphLayout from 'modules/fsa/graph/GraphLayout.js';\n\nclass MachineController extends AbstractMachineController\n{\n  constructor(module)\n  {\n    super(module, new FSABuilder());\n\n    this.graphController = null;\n  }\n\n  //Override\n  initialize(module)\n  {\n    super.initialize(module);\n\n    this.graphController = module.getGraphController();\n  }\n\n  //Override\n  destroy(module)\n  {\n    super.destroy(module);\n  }\n\n  //Override\n  update(module)\n  {\n    super.update(module);\n  }\n\n  getMachineType()\n  {\n    return this._machineBuilder.getMachine().isDeterministic() ? \"DFA\" : \"NFA\";\n  }\n\n  setMachineType(machineType)\n  {\n    this._machineBuilder.getMachine().setDeterministic(machineType === 'DFA');\n  }\n\n  changeMachineTo(machineType)\n  {\n    const prev = this.getMachineType();\n    if (prev != machineType)\n    {\n      this.setMachineType(machineType);\n    }\n  }\n\n  getFirstGraphNodeByLabel(graph, label)\n  {\n    for(const node of graph.getNodes())\n    {\n      if (node.getNodeLabel() == label)\n      {\n        return node;\n      }\n    }\n\n    return null;\n  }\n\n  setGraphToMachine(graph, machine)\n  {\n    graph.clear();\n\n    if (machine.getStateCount() <= 0) return;\n\n    //Add all states\n    let stateMap = new Map();\n    let node;\n    for(const state of machine.getStates())\n    {\n      node = graph.createNode(0, 0);\n      node.setNodeLabel(state.getStateLabel());\n      if (machine.isFinalState(state)) node.setNodeAccept(true);\n      stateMap.set(state, node);\n    }\n\n    //Add all transitions\n    let edge, from, to, read, labels, flag;\n    for(let transition of machine.getTransitions())\n    {\n      from = stateMap.get(transition.getSourceState());\n      to = stateMap.get(transition.getDestinationState());\n      read = [];\n      for(const symbol of transition.getSymbols())\n      {\n        if (symbol === EMPTY_SYMBOL)\n        {\n          read.push(EMPTY_CHAR);\n        }\n        else\n        {\n          read.push(symbol);\n        }\n      }\n      edge = graph.createEdge(from, to);\n      edge.setEdgeLabel(read.join(SYMBOL_SEPARATOR));\n      const formattedEdge = graph.formatEdge(edge);\n      if (edge != formattedEdge) graph.deleteEdge(edge);\n    }\n\n    //Set start state\n    const startState = machine.getStartState();\n    graph.setStartNode(stateMap.get(startState));\n\n    //Auto layout graph\n    GraphLayout.applyLayout(graph);\n  }\n\n  convertMachineTo(machineType)\n  {\n    const currentMachineType = this.getMachineType();\n\n    //Already converted machine...\n    if (currentMachineType === machineType) return;\n\n    if (machineType == \"DFA\" && currentMachineType == \"NFA\")\n    {\n      const result = convertToDFA(this.getMachineBuilder().getMachine());\n      this.setGraphToMachine(this.graphController.getGraph(), result);\n      this.setMachineType(machineType);\n    }\n    else if (machineType == \"NFA\" && currentMachineType == \"DFA\")\n    {\n      this.changeMachineTo(machineType);\n    }\n    else\n    {\n      throw new Error(\"Conversion scheme between \\'\" + currentMachineType + \"\\' to \\'\" + machineType + \"\\' is not supported\");\n    }\n  }\n\n  invertMachine()\n  {\n    const machine = this.getMachineBuilder().getMachine();\n    const result = invertDFA(machine, machine);\n\n    //Update final states\n    for(const state of result.getStates())\n    {\n      const src = state.getSource();\n      src.setNodeAccept(machine.isFinalState(state));\n    }\n  }\n\n  getUnreachableNodes()\n  {\n    const graphController = this.graphController;\n    const graph = graphController.getGraph();\n    if (graph.getNodeCount() <= 1) return [];\n\n    const edges = graph.getEdges();\n    const nodes = graph.getNodes().slice();\n    const startNode = nodes.shift();\n    let nextNodes = [];\n    nextNodes.push(startNode);\n\n    while(nextNodes.length > 0)\n    {\n      const node = nextNodes.pop();\n      for(const edge of edges)\n      {\n        if (edge.getSourceNode() === node)\n        {\n          const i = nodes.indexOf(edge.getDestinationNode());\n          if (i >= 0)\n          {\n            const nextNode = nodes.splice(i, 1)[0];\n            nextNodes.push(nextNode);\n          }\n        }\n      }\n    }\n\n    return nodes;\n  }\n\n  getStates()\n  {\n    return this._machineBuilder.getMachine().getStates();\n  }\n\n  countStates()\n  {\n    return this._machineBuilder.getMachine().getStateCount();\n  }\n\n  getFinalStates()\n  {\n    return this._machineBuilder.getMachine().getFinalStates();\n  }\n\n  getTransitions()\n  {\n    return this._machineBuilder.getMachine().getTransitions();\n  }\n\n  getAlphabet()\n  {\n    const machine = this._machineBuilder.getMachine();\n    return Array.from(machine.getAlphabet());\n  }\n\n  isUsedSymbol(symbol)\n  {\n    return !this.isCustomSymbol(symbol);\n  }\n\n  createSymbol(symbol)\n  {\n    this.addCustomSymbol(symbol);\n  }\n\n  deleteSymbol(symbol)\n  {\n    let edge = null;\n    let index = null;\n    let result = null;\n    const targets = [];\n\n    const graph = this.graphController.getGraph();\n    for(let i = graph.getEdges().length - 1; i >= 0; --i)\n    {\n      edge = graph.getEdges()[i];\n      index = edge.getEdgeLabel().indexOf(symbol);\n      if (index >= 0)\n      {\n        result = edge.getEdgeLabel().substring(0, index) + edge.getEdgeLabel().substring(index + 1);\n        if (result.length > 0)\n        {\n          edge.setEdgeLabel(result);\n        }\n        else\n        {\n          edge.setEdgeLabel(\"\");\n          graph.deleteEdge(edge);\n        }\n        targets.push(edge);\n      }\n    }\n\n    if (targets.length <= 0)\n    {\n      this.getMachineBuilder().removeCustomSymbol(symbol);\n    }\n  }\n\n  renameSymbol(prevSymbol, nextSymbol)\n  {\n    let edge = null;\n    let result = null;\n    const targets = [];\n\n    const graph = this.graphController.getGraph();\n    const length = graph.getEdges().length;\n    for(let i = 0; i < length; ++i)\n    {\n      edge = graph.getEdges()[i];\n      let result = edge.getEdgeLabel().replace(prevSymbol, nextSymbol);\n      if (result != edge.getEdgeLabel())\n      {\n        targets.push(edge);\n      }\n      edge.setEdgeLabel(result);\n    }\n\n    if (targets.length <= 0)\n    {\n      this.getMachineBuilder().renameCustomSymbol(prevSymbol, nextSymbol);\n    }\n  }\n\n  getCustomSymbols()\n  {\n    return Array.from(this._machineBuilder.getMachine().getCustomSymbols());\n  }\n\n  isCustomSymbol(symbol)\n  {\n    return this._machineBuilder.isCustomSymbol(symbol);\n  }\n\n  addCustomSymbol(symbol)\n  {\n    this._machineBuilder.getMachine().setCustomSymbol(symbol);\n  }\n\n  clearCustomSymbols()\n  {\n    this._machineBuilder.getMachine().clearCustomSymbols();\n  }\n}\n\nexport default MachineController;\n","import AbstractGraphExporter from 'session/manager/export/AbstractGraphExporter.js';\n\nimport { JSON as JSONGraphParser } from 'modules/fsa/graph/FSAGraphParser.js';\nimport { downloadText } from 'util/Downloader.js';\n\nimport JSONFileIcon from 'experimental/iconset/flat/JSONFileIcon.js';\n\nclass FSAGraphExporter extends AbstractGraphExporter\n{\n  constructor() { super(); }\n\n  fromJSON(data, module)\n  {\n    const graphController = module.getGraphController();\n    const machineController = module.getMachineController();\n    const graph = graphController.getGraph();\n\n    const metadata = '_metadata' in data ? data['_metadata'] : {};\n    const newGraph = JSONGraphParser.parse(data.graphData, graph);\n\n    //HACK: this should be calculated elsewhere\n    const machineData = data.machineData;\n    const machineName = machineData.name;\n    if (machineName) module.getApp().getSession().setProjectName(machineName);\n    const machineType = machineData.type;\n    if (machineType) machineController.setMachineType(machineType);\n    const customSymbols = machineData.symbols;\n    if (customSymbols && Array.isArray(customSymbols))\n    {\n      machineController.clearCustomSymbols();\n      for(const symbol of customSymbols)\n      {\n        machineController.addCustomSymbol(symbol);\n      }\n    }\n    const statePrefix = machineData.statePrefix;\n    if (statePrefix)\n    {\n      graphController.getGraphLabeler().setDefaultNodeLabelPrefix(statePrefix);\n    }\n\n    return newGraph;\n  }\n\n  toJSON(graphData, module)\n  {\n    const graphController = module.getGraphController();\n    const machineController = module.getMachineController();\n\n    const dst = {};\n    dst[\"_metadata\"] = {\n      module: module.getModuleName(),\n      version: process.env.VERSION + \":\" + module.getModuleVersion(),\n      timestamp: new Date().toString()\n    };\n    dst[\"graphData\"] = graphData;\n    dst[\"machineData\"] = {\n      name: module.getApp().getSession().getProjectName(),\n      type: machineController.getMachineType(),\n      symbols: machineController.getCustomSymbols(),\n      statePrefix: graphController.getGraphLabeler().getDefaultNodeLabelPrefix()\n    };\n    return dst;\n  }\n\n  //Override\n  importFromData(data, module)\n  {\n    this.fromJSON(data, module);\n  }\n\n  //Override\n  exportToData(module)\n  {\n    const graph = module.getGraphController().getGraph();\n    const graphData = JSONGraphParser.objectify(graph);\n    const result = this.toJSON(graphData, module);\n    return result;\n  }\n\n  //Override\n  doesSupportData()\n  {\n    return true;\n  }\n\n  //Override\n  importFromFile(fileBlob, module)\n  {\n    return new Promise((resolve, reject) => {\n      const filename = fileBlob.name;\n      if (!filename.endsWith(this.getFileType()))\n      {\n        throw new Error(\"Trying to import invalid file type for \\'\" + this.getFileType() + \"\\': \" + filename);\n      }\n\n      const reader = new FileReader();\n      reader.onload = e => {\n        const graphController = module.getGraphController();\n        const machineController = module.getMachineController();\n        const data = e.target.result;\n        const name = filename.substring(0, filename.length - this.getFileType().length - 1);\n        const graph = graphController.getGraph();\n        const prevGraphHash = graph.getHashCode(true);\n\n        //TODO: this should not be here, this should exist somewhere in graphController\n        if (!graph.isEmpty())\n        {\n          module.getApp().getUndoManager().captureEvent();\n        }\n\n        try\n        {\n          const jsonData = JSON.parse(data);\n\n          this.fromJSON(jsonData, module);\n\n          module.getApp().getSession().setProjectName(name);\n\n          resolve();\n        }\n        catch (e)\n        {\n          reader.abort();\n          reject(e);\n        }\n        finally\n        {\n          const nextGraphHash = graph.getHashCode(true);\n          if (prevGraphHash !== nextGraphHash)\n          {\n            module.getApp().getUndoManager().captureEvent();\n          }\n        }\n      };\n\n      reader.onerror = e => {\n        reject(new Error(\"Unable to import file: \" + e.target.error.code));\n      }\n\n      reader.readAsText(fileBlob);\n    });\n  }\n\n  //Override\n  exportToFile(filename, module)\n  {\n    const graph = module.getGraphController().getGraph();\n    const graphData = JSONGraphParser.objectify(graph);\n    const dst = this.toJSON(graphData, module);\n    const jsonString = JSON.stringify(dst);\n    downloadText(filename + '.' + this.getFileType(), jsonString);\n  }\n\n  //Override\n  doesSupportFile()\n  {\n    return true;\n  }\n\n  //Override\n  canImport(module)\n  {\n    return true;\n  }\n\n  //Override\n  canExport(module)\n  {\n    return !module.getGraphController().getGraph().isEmpty();\n  }\n\n  //Override\n  getTitle()\n  {\n    return I18N.toString(\"file.export.machine.hint\");\n  }\n\n  //Override\n  getLabel()\n  {\n    return I18N.toString(\"file.export.machine\");\n  }\n\n  //Override\n  getFileType()\n  {\n    return \"json\";\n  }\n\n  //Override\n  getIconClass()\n  {\n    return JSONFileIcon;\n  }\n}\n\nexport default FSAGraphExporter;\n"],"sourceRoot":""}